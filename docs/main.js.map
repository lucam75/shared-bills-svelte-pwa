{"version":3,"file":"main.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../node_modules/svelte-persistent-store/dist/chunk.7TSZKFFQ.mjs","../node_modules/svelte-persistent-store/dist/chunk.FDWZTHUB.mjs","../src/jsforce/jsforce.js","../src/store/store.js","../src/components/Login.svelte","../src/components/Token.svelte","../src/components/Home.svelte","../node_modules/svelte-routing/src/contexts.js","../node_modules/svelte-routing/src/history.js","../node_modules/svelte-routing/src/utils.js","../node_modules/svelte-routing/src/Router.svelte","../node_modules/svelte-routing/src/Route.svelte","../node_modules/svelte-routing/src/Link.svelte","../src/components/_Link.svelte","../src/components/CreateSharedBill.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import {\n  generator\n} from \"./chunk.FDWZTHUB.mjs\";\n\n// src/session.ts\nconst g = generator(window.sessionStorage);\nconst readable = g.readable;\nconst writable = g.writable;\nconst derived = g.derived;\nconst get = g.get;\n\nexport {\n  readable,\n  writable,\n  derived,\n  get\n};\n","// src/generator.ts\nimport {writable as ogWritable, get as ogGet} from \"svelte/store\";\nimport {run_all, noop, is_function} from \"svelte/internal\";\nfunction isSimpleDeriver(deriver) {\n  return deriver.length < 2;\n}\nfunction generator(storage) {\n  function readable(key, value, start) {\n    return {\n      subscribe: writable(key, value, start).subscribe\n    };\n  }\n  function writable(key, value, start = noop) {\n    function wrap_start(ogSet) {\n      return start(function wrap_set(new_value) {\n        if (storage) {\n          storage.setItem(key, JSON.stringify(new_value));\n        }\n        return ogSet(new_value);\n      });\n    }\n    if (storage) {\n      if (storage.getItem(key)) {\n        value = JSON.parse(storage.getItem(key));\n      }\n      storage.setItem(key, JSON.stringify(value));\n    }\n    const ogStore = ogWritable(value, start ? wrap_start : void 0);\n    function set(new_value) {\n      if (storage) {\n        storage.setItem(key, JSON.stringify(new_value));\n      }\n      ogStore.set(new_value);\n    }\n    function update(fn) {\n      set(fn(ogGet(ogStore)));\n    }\n    function subscribe(run, invalidate = noop) {\n      return ogStore.subscribe(run, invalidate);\n    }\n    return {set, update, subscribe};\n  }\n  function derived(key, stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single ? [stores] : stores;\n    if (storage && storage.getItem(key)) {\n      initial_value = JSON.parse(storage.getItem(key));\n    }\n    return readable(key, initial_value, (set) => {\n      let inited = false;\n      const values = [];\n      let pending = 0;\n      let cleanup = noop;\n      const sync = () => {\n        if (pending) {\n          return;\n        }\n        cleanup();\n        const input = single ? values[0] : values;\n        if (isSimpleDeriver(fn)) {\n          set(fn(input));\n        } else {\n          const result = fn(input, set);\n          cleanup = is_function(result) ? result : noop;\n        }\n      };\n      const unsubscribers = stores_array.map((store2, i) => store2.subscribe((value) => {\n        values[i] = value;\n        pending &= ~(1 << i);\n        if (inited) {\n          sync();\n        }\n      }, () => {\n        pending |= 1 << i;\n      }));\n      inited = true;\n      sync();\n      return function stop() {\n        run_all(unsubscribers);\n        cleanup();\n      };\n    });\n  }\n  return {\n    readable,\n    writable,\n    derived,\n    get: ogGet\n  };\n}\n\nexport {\n  generator\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.jsforce = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar jsforce = require('../core');\r\njsforce.browser = require('./client');\r\nrequire('../api');\r\nmodule.exports = jsforce;\r\n\r\n},{\"../api\":8,\"../core\":20,\"./client\":15}],2:[function(require,module,exports){\r\n'use strict';\r\nmodule.exports = '1.9.1';\r\n\r\n},{}],3:[function(require,module,exports){\r\n// This file content is dynamically created in build script\r\n\"use strict\";\r\nmodule.exports = {\r\n  'inherits': require('inherits'),\r\n  'util': require('util'),\r\n  'events': require('events'),\r\n  'lodash/core': require('lodash/core'),\r\n  'readable-stream': require('readable-stream'),\r\n  'multistream': require('multistream'),\r\n  './VERSION': require('./VERSION'),\r\n  './cache': require('./cache'),\r\n  './connection': require('./connection'),\r\n  './core': require('./core'),\r\n  './csv': require('./csv'),\r\n  './date': require('./date'),\r\n  './http-api': require('./http-api'),\r\n  './logger': require('./logger'),\r\n  './oauth2': require('./oauth2'),\r\n  './process': require('./process'),\r\n  './promise': require('./promise'),\r\n  './query': require('./query'),\r\n  './quick-action': require('./quick-action'),\r\n  './record-stream': require('./record-stream'),\r\n  './record': require('./record'),\r\n  './soap': require('./soap'),\r\n  './sobject': require('./sobject'),\r\n  './soql-builder': require('./soql-builder'),\r\n  './transport': require('./transport')\r\n};\r\n},{\"./VERSION\":2,\"./cache\":18,\"./connection\":19,\"./core\":20,\"./csv\":21,\"./date\":22,\"./http-api\":23,\"./logger\":24,\"./oauth2\":25,\"./process\":26,\"./promise\":27,\"./query\":28,\"./quick-action\":29,\"./record\":31,\"./record-stream\":30,\"./soap\":33,\"./sobject\":34,\"./soql-builder\":35,\"./transport\":36,\"events\":47,\"inherits\":84,\"lodash/core\":88,\"multistream\":89,\"readable-stream\":107,\"util\":117}],4:[function(require,module,exports){\r\n/**\r\n * @file Manages Salesforce Analytics API\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar _ = require('lodash/core'),\r\n    jsforce = require('../core'),\r\n    Promise  = require('../promise');\r\n\r\n/**\r\n * Report instance to retrieving asynchronously executed result\r\n *\r\n * @protected\r\n * @class Analytics~ReportInstance\r\n * @param {Analytics~Report} report - Report\r\n * @param {String} id - Report instance id\r\n */\r\nvar ReportInstance = function(report, id) {\r\n  this._report = report;\r\n  this._conn = report._conn;\r\n  this.id = id;\r\n};\r\n\r\n/**\r\n * Retrieve report result asynchronously executed\r\n *\r\n * @method Analytics~ReportInstance#retrieve\r\n * @param {Callback.<Analytics~ReportResult>} [callback] - Callback function\r\n * @returns {Promise.<Analytics~ReportResult>}\r\n */\r\nReportInstance.prototype.retrieve = function(callback) {\r\n  var conn = this._conn,\r\n      report = this._report;\r\n  var url = [ conn._baseUrl(), \"analytics\", \"reports\", report.id, \"instances\", this.id ].join('/');\r\n  return conn.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Report object in Analytics API\r\n *\r\n * @protected\r\n * @class Analytics~Report\r\n * @param {Connection} conn Connection\r\n */\r\nvar Report = function(conn, id) {\r\n  this._conn = conn;\r\n  this.id = id;\r\n};\r\n\r\n/**\r\n * Describe report metadata\r\n *\r\n * @method Analytics~Report#describe\r\n * @param {Callback.<Analytics~ReportMetadata>} [callback] - Callback function\r\n * @returns {Promise.<Analytics~ReportMetadata>}\r\n */\r\nReport.prototype.describe = function(callback) {\r\n  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\", this.id, \"describe\" ].join('/');\r\n  return this._conn.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Synonym of Analytics~Report#destroy()\r\n *\r\n * @method Analytics~Report#delete\r\n * @param {Callback.<Analytics~ReportResult>} [callback] - Callback function\r\n * @returns {Promise.<Analytics~ReportResult>}\r\n */\r\n/**\r\n * Synonym of Analytics~Report#destroy()\r\n *\r\n * @method Analytics~Report#del\r\n * @param {Callback.<Analytics~ReportResult>} [callback] - Callback function\r\n * @returns {Promise.<Analytics~ReportResult>}\r\n */\r\n/**\r\n * Destroy a report\r\n *\r\n * @method Analytics~Report#destroy\r\n * @param {Callback.<Analytics~ReportResult>} [callback] - Callback function\r\n * @returns {Promise.<Analytics~ReportResult>}\r\n */\r\nReport.prototype[\"delete\"] =\r\nReport.prototype.del =\r\nReport.prototype.destroy = function(callback) {\r\n  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\", this.id ].join('/');\r\n  return this._conn.request({method: 'DELETE', url: url}).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Clones a given report\r\n *\r\n * @method Analytics~Report#clone\r\n * @param {String} name - The name of the new report\r\n * @param {Callback.<Analytics~ReportResult>} [callback] - Callback function\r\n * @returns {Promise.<Analytics~ReportResult>}\r\n */\r\nReport.prototype.clone = function(name, callback) {\r\n  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\" ].join('/');\r\n  url += \"?cloneId=\" + this.id;\r\n  var data = { reportMetadata: { name: name } };\r\n  var params = { method : 'POST', url: url, headers: { \"Content-Type\" : \"application/json\" }, body: JSON.stringify(data)};\r\n\r\n  return this._conn.request(params).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Explain plan for executing report\r\n *\r\n * @method Analytics~Report#explain\r\n * @param {Callback.<ExplainInfo>} [callback] - Callback function\r\n * @returns {Promise.<ExplainInfo>}\r\n */\r\nReport.prototype.explain = function(callback) {\r\n  var url = \"/query/?explain=\" + this.id;\r\n  return this._conn.request(url).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * Run report synchronously\r\n *\r\n * @method Analytics~Report#execute\r\n * @param {Object} [options] - Options\r\n * @param {Boolean} options.details - Flag if include detail in result\r\n * @param {Analytics~ReportMetadata} options.metadata - Overriding report metadata\r\n * @param {Callback.<Analytics~ReportResult>} [callback] - Callback function\r\n * @returns {Promise.<Analytics~ReportResult>}\r\n */\r\nReport.prototype.run =\r\nReport.prototype.exec =\r\nReport.prototype.execute = function(options, callback) {\r\n  options = options || {};\r\n  if (_.isFunction(options)) {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\", this.id ].join('/');\r\n  url += \"?includeDetails=\" + (options.details ? \"true\" : \"false\");\r\n  var params = { method : options.metadata ? 'POST' : 'GET', url : url };\r\n  if (options.metadata) {\r\n    params.headers = { \"Content-Type\" : \"application/json\" };\r\n    params.body = JSON.stringify(options.metadata);\r\n  }\r\n  return this._conn.request(params).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * Run report asynchronously\r\n *\r\n * @method Analytics~Report#executeAsync\r\n * @param {Object} [options] - Options\r\n * @param {Boolean} options.details - Flag if include detail in result\r\n * @param {Analytics~ReportMetadata} options.metadata - Overriding report metadata\r\n * @param {Callback.<Analytics~ReportInstanceAttrs>} [callback] - Callback function\r\n * @returns {Promise.<Analytics~ReportInstanceAttrs>}\r\n */\r\nReport.prototype.executeAsync = function(options, callback) {\r\n  options = options || {};\r\n  if (_.isFunction(options)) {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\", this.id, \"instances\" ].join('/');\r\n  if (options.details) {\r\n    url += \"?includeDetails=true\";\r\n  }\r\n  var params = { method : 'POST', url : url, body: \"\" };\r\n  if (options.metadata) {\r\n    params.headers = { \"Content-Type\" : \"application/json\" };\r\n    params.body = JSON.stringify(options.metadata);\r\n  }\r\n  return this._conn.request(params).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Get report instance for specified instance ID\r\n *\r\n * @method Analytics~Report#instance\r\n * @param {String} id - Report instance ID\r\n * @returns {Analytics~ReportInstance}\r\n */\r\nReport.prototype.instance = function(id) {\r\n  return new ReportInstance(this, id);\r\n};\r\n\r\n/**\r\n * List report instances which had been executed asynchronously\r\n *\r\n * @method Analytics~Report#instances\r\n * @param {Callback.<Array.<Analytics~ReportInstanceAttrs>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<Analytics~ReportInstanceAttrs>>}\r\n */\r\nReport.prototype.instances = function(callback) {\r\n  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\", this.id, \"instances\" ].join('/');\r\n  return this._conn.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Dashboard object in the Analytics API\r\n *\r\n * @protected\r\n * @class Analytics-Dashboard\r\n * @param {Connection} conn Connection\r\n * @param {String} id - The Id\r\n */\r\n\r\nvar Dashboard = function(conn, id) {\r\n  this._conn = conn;\r\n  this.id = id;\r\n};\r\n\r\n/**\r\n * Describe dashboard metadata\r\n *\r\n * @method Analytics~Dashboard#describe\r\n * @param {Callback.<Analytics-DashboardMetadata>} [callback] - Callback function\r\n * @returns {Promise.<Analytics-DashboardMetadata>}\r\n */\r\nDashboard.prototype.describe = function(callback) {\r\n  var url = [ this._conn._baseUrl(), \"analytics\", \"dashboards\", this.id, \"describe\" ].join('/');\r\n  return this._conn.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Get details about dashboard components\r\n *\r\n * @method Analytics~Dashboard#components\r\n * @param {Callback.<Analytics-DashboardComponentMetadata>} [callback] - Callback function\r\n * @returns {Promise.<Analytics-DashboardComponentMetadata>}\r\n */\r\nDashboard.prototype.components = function(componentIds, callback) {\r\n  var url = [ this._conn._baseUrl(), \"analytics\", \"dashboards\", this.id].join('/');\r\n  var data = {};\r\n  if (_.isFunction(componentIds)) {\r\n    callback = componentIds;\r\n  } else if (_.isArray(componentIds)) {\r\n    data.componentIds = componentIds;\r\n  } else if (_.isString(componentIds)) {\r\n    data.componentIds = [ componentIds ];\r\n  }\r\n  var params = { method : 'POST', url : url, headers : { \"Content-Type\" : \"application/json\" }, body : JSON.stringify(data)};\r\n  return this._conn.request(params).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Get dashboard status\r\n *\r\n * @method Analytics~Dashboard#status\r\n * @param {Callback.<Analytics-DashboardStatusMetadata>} [callback] - Callback function\r\n * @returns {Promise.<Analytics-DashboardStatusMetadata>}\r\n */\r\nDashboard.prototype.status = function(callback) {\r\n  var url = [ this._conn._baseUrl(), \"analytics\", \"dashboards\", this.id, \"status\" ].join('/');\r\n  return this._conn.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Refresh a dashboard\r\n *\r\n * @method Analytics~Dashboard#refresh\r\n * @param {Callback.<Analytics-DashboardStatusUrl>} [callback] - Callback function\r\n * @returns {Promise.<Analytics-DashboardStatusUrl>}\r\n */\r\nDashboard.prototype.refresh = function(callback) {\r\n  var url = [ this._conn._baseUrl(), \"analytics\", \"dashboards\", this.id ].join('/');\r\n  var params = { method : 'PUT', url : url, body: '' };\r\n  return this._conn.request(params).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Clone a dashboard\r\n *\r\n * @method Analytics~Dashboard#clone\r\n * @param {Callback.<Analytics-DashboardMetadata>} [callback] - Callback function\r\n * @returns {Promise.<Analytics-DashboardMetadata>}\r\n */\r\nDashboard.prototype.clone = function(name, folderid, callback) {\r\n  var url = [ this._conn._baseUrl(), \"analytics\", \"dashboards\" ].join('/');\r\n  url += \"?cloneId=\" + this.id;\r\n  var data = {};\r\n\r\n  if (_.isObject(name)) {\r\n    data = name;\r\n    callback = folderid;\r\n  } else {\r\n    data.name = name;\r\n    data.folderId = folderid;\r\n  }\r\n  var params = { method : 'POST', url : url, headers : { \"Content-Type\" : \"application/json\" }, body : JSON.stringify(data)};\r\n\r\n  return this._conn.request(params).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Synonym of Analytics~Dashboard#destroy()\r\n *\r\n * @method Analytics~Dashboard#delete\r\n * @param {Callback.<Analytics~DashboardResult>} [callback] - Callback function\r\n * @returns {Promise.<Analytics~DashboardResult>}\r\n */\r\n/**\r\n * Synonym of Analytics~Dashboard#destroy()\r\n *\r\n * @method Analytics~Dashboard#del\r\n * @param {Callback.<Analytics~DashboardResult>} [callback] - Callback function\r\n * @returns {Promise.<Analytics~DashboardResult>}\r\n */\r\n/**\r\n * Destroy a dashboard\r\n *\r\n * @method Analytics~Dashboard#destroy\r\n * @param {Callback.<Analytics~DashboardResult>} [callback] - Callback function\r\n * @returns {Promise.<Analytics~DashboardResult>}\r\n */\r\nDashboard.prototype[\"delete\"] =\r\nDashboard.prototype.del =\r\nDashboard.prototype.destroy = function(callback) {\r\n  var url = [ this._conn._baseUrl(), \"analytics\", \"dashboards\", this.id ].join('/');\r\n  return this._conn.request({method: 'DELETE', url: url}).thenCall(callback);\r\n};\r\n\r\n/**\r\n * API class for Analytics API\r\n *\r\n * @class\r\n * @param {Connection} conn Connection\r\n */\r\nvar Analytics = function(conn) {\r\n  this._conn = conn;\r\n};\r\n\r\n/**\r\n * Get report object of Analytics API\r\n *\r\n * @param {String} id - Report Id\r\n * @returns {Analytics~Report}\r\n */\r\nAnalytics.prototype.report = function(id) {\r\n  return new Report(this._conn, id);\r\n};\r\n\r\n/**\r\n * Get recent report list\r\n *\r\n * @param {Callback.<Array.<Analytics~ReportInfo>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<Analytics~ReportInfo>>}\r\n */\r\nAnalytics.prototype.reports = function(callback) {\r\n  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\" ].join('/');\r\n  return this._conn.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Get dashboard object of Analytics API\r\n *\r\n * @param {String} id - Dashboard Id\r\n * @returns {Analytics~Dashboard}\r\n */\r\nAnalytics.prototype.dashboard = function(id) {\r\n  return new Dashboard(this._conn, id);\r\n};\r\n\r\n/**\r\n * Get recent dashboard list\r\n *\r\n * @param {Callback.<Array.<Analytics~DashboardInfo>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<Analytics~DashboardInfo>>}\r\n */\r\nAnalytics.prototype.dashboards = function(callback) {\r\n  var url = [ this._conn._baseUrl(), \"analytics\", \"dashboards\" ].join('/');\r\n  return this._conn.request(url).thenCall(callback);\r\n};\r\n\r\n/*--------------------------------------------*/\r\n/*\r\n * Register hook in connection instantiation for dynamically adding this API module features\r\n */\r\njsforce.on('connection:new', function(conn) {\r\n  conn.analytics = new Analytics(conn);\r\n});\r\n\r\n\r\nmodule.exports = Analytics;\r\n\r\n},{\"../core\":20,\"../promise\":27,\"lodash/core\":88}],5:[function(require,module,exports){\r\n/**\r\n * @file Manages Salesforce Apex REST endpoint calls\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar jsforce = require('../core');\r\n\r\n/**\r\n * API class for Apex REST endpoint call\r\n *\r\n * @class\r\n * @param {Connection} conn Connection\r\n */\r\nvar Apex = function(conn) {\r\n  this._conn = conn;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nApex.prototype._baseUrl = function() {\r\n  return this._conn.instanceUrl + \"/services/apexrest\";\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nApex.prototype._createRequestParams = function(method, path, body, options) {\r\n  var params = {\r\n    method: method,\r\n    url: this._baseUrl() + path\r\n  },\r\n  _headers = {};\r\n  if(options && 'object' === typeof options['headers']){\r\n    _headers = options['headers'];\r\n  }\r\n  if (!/^(GET|DELETE)$/i.test(method)) {\r\n    _headers[\"Content-Type\"] = \"application/json\";\r\n  }\r\n  params.headers = _headers;\r\n  if (body) {\r\n    params.body = JSON.stringify(body);\r\n  }\r\n  return params;\r\n};\r\n\r\n/**\r\n * Call Apex REST service in GET request\r\n *\r\n * @param {String} path - URL path to Apex REST service\r\n * @param {Object} options - Holds headers and other meta data for the request.\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nApex.prototype.get = function(path, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = undefined;\r\n  }\r\n  return this._conn.request(this._createRequestParams('GET', path, undefined, options)).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Call Apex REST service in POST request\r\n *\r\n * @param {String} path - URL path to Apex REST service\r\n * @param {Object} [body] - Request body\r\n * @param {Object} options - Holds headers and other meta data for the request.\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nApex.prototype.post = function(path, body, options, callback) {\r\n  if (typeof body === 'function') {\r\n    callback = body;\r\n    body = undefined;\r\n    options = undefined;\r\n  }\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = undefined;\r\n  }\r\n  var params = this._createRequestParams('POST', path, body, options);\r\n  return this._conn.request(params).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Call Apex REST service in PUT request\r\n *\r\n * @param {String} path - URL path to Apex REST service\r\n * @param {Object} [body] - Request body\r\n * @param {Object} [options] - Holds headers and other meta data for the request.\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nApex.prototype.put = function(path, body, options, callback) {\r\n  if (typeof body === 'function') {\r\n    callback = body;\r\n    body = undefined;\r\n    options = undefined;\r\n  }\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = undefined;\r\n  }\r\n  var params = this._createRequestParams('PUT', path, body, options);\r\n  return this._conn.request(params).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Call Apex REST service in PATCH request\r\n *\r\n * @param {String} path - URL path to Apex REST service\r\n * @param {Object} [body] - Request body\r\n * @param {Object} [options] - Holds headers and other meta data for the request.\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nApex.prototype.patch = function(path, body, options, callback) {\r\n  if (typeof body === 'function') {\r\n    callback = body;\r\n    body = undefined;\r\n    options = undefined;\r\n  }\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = undefined;\r\n  }\r\n  var params = this._createRequestParams('PATCH', path, body, options);\r\n  return this._conn.request(params).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Synonym of Apex#delete()\r\n *\r\n * @method Apex#del\r\n *\r\n * @param {String} path - URL path to Apex REST service\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\n/**\r\n * Call Apex REST service in DELETE request\r\n *\r\n * @method Apex#delete\r\n *\r\n * @param {String} path - URL path to Apex REST service\r\n * @param {Object} [options] - Holds headers and other meta data for the request.\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nApex.prototype.del =\r\n  Apex.prototype[\"delete\"] = function(path, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = undefined;\r\n  }\r\n  return this._conn.request(this._createRequestParams('DELETE', path, undefined, options)).thenCall(callback);\r\n};\r\n\r\n\r\n/*--------------------------------------------*/\r\n/*\r\n * Register hook in connection instantiation for dynamically adding this API module features\r\n */\r\njsforce.on('connection:new', function(conn) {\r\n  conn.apex = new Apex(conn);\r\n});\r\n\r\n\r\nmodule.exports = Apex;\r\n\r\n},{\"../core\":20}],6:[function(require,module,exports){\r\n(function (process){\r\n/*global process*/\r\n/**\r\n * @file Manages Salesforce Bulk API related operations\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar inherits     = require('inherits'),\r\n    stream       = require('readable-stream'),\r\n    Duplex       = stream.Duplex,\r\n    events       = require('events'),\r\n    _            = require('lodash/core'),\r\n    joinStreams  = require('multistream'),\r\n    jsforce      = require('../core'),\r\n    RecordStream = require('../record-stream'),\r\n    Promise      = require('../promise'),\r\n    HttpApi      = require('../http-api');\r\n\r\n/*--------------------------------------------*/\r\n\r\n/**\r\n * Class for Bulk API Job\r\n *\r\n * @protected\r\n * @class Bulk~Job\r\n * @extends events.EventEmitter\r\n *\r\n * @param {Bulk} bulk - Bulk API object\r\n * @param {String} [type] - SObject type\r\n * @param {String} [operation] - Bulk load operation ('insert', 'update', 'upsert', 'delete', or 'hardDelete')\r\n * @param {Object} [options] - Options for bulk loading operation\r\n * @param {String} [options.extIdField] - External ID field name (used when upsert operation).\r\n * @param {String} [options.concurrencyMode] - 'Serial' or 'Parallel'. Defaults to Parallel.\r\n * @param {String} [jobId] - Job ID (if already available)\r\n */\r\nvar Job = function(bulk, type, operation, options, jobId) {\r\n  this._bulk = bulk;\r\n  this.type = type;\r\n  this.operation = operation;\r\n  this.options = options || {};\r\n  this.id = jobId;\r\n  this.state = this.id ? 'Open' : 'Unknown';\r\n  this._batches = {};\r\n};\r\n\r\ninherits(Job, events.EventEmitter);\r\n\r\n/**\r\n * @typedef {Object} Bulk~JobInfo\r\n * @prop {String} id - Job ID\r\n * @prop {String} object - Object type name\r\n * @prop {String} operation - Operation type of the job\r\n * @prop {String} state - Job status\r\n */\r\n\r\n/**\r\n * Return latest jobInfo from cache\r\n *\r\n * @method Bulk~Job#info\r\n * @param {Callback.<Bulk~JobInfo>} [callback] - Callback function\r\n * @returns {Promise.<Bulk~JobInfo>}\r\n */\r\nJob.prototype.info = function(callback) {\r\n  var self = this;\r\n  // if cache is not available, check the latest\r\n  if (!this._jobInfo) {\r\n    this._jobInfo = this.check();\r\n  }\r\n  return this._jobInfo.thenCall(callback);\r\n};\r\n\r\n/**\r\n * Open new job and get jobinfo\r\n *\r\n * @method Bulk~Job#open\r\n * @param {Callback.<Bulk~JobInfo>} [callback] - Callback function\r\n * @returns {Promise.<Bulk~JobInfo>}\r\n */\r\nJob.prototype.open = function(callback) {\r\n  var self = this;\r\n  var bulk = this._bulk;\r\n  var logger = bulk._logger;\r\n\r\n  // if not requested opening job\r\n  if (!this._jobInfo) {\r\n    var operation = this.operation.toLowerCase();\r\n    if (operation === 'harddelete') { operation = 'hardDelete'; }\r\n    var body = [\r\n      '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',\r\n      '<jobInfo  xmlns=\"http://www.force.com/2009/06/asyncapi/dataload\">',\r\n        '<operation>' + operation + '</operation>',\r\n        '<object>' + this.type + '</object>',\r\n        (this.options.extIdField ?\r\n         '<externalIdFieldName>'+this.options.extIdField+'</externalIdFieldName>' :\r\n         ''),\r\n        (this.options.concurrencyMode ?\r\n         '<concurrencyMode>'+this.options.concurrencyMode+'</concurrencyMode>' :\r\n         ''),\r\n        (this.options.assignmentRuleId ?\r\n          '<assignmentRuleId>' + this.options.assignmentRuleId + '</assignmentRuleId>' :\r\n          ''),\r\n        '<contentType>CSV</contentType>',\r\n      '</jobInfo>'\r\n    ].join('');\r\n\r\n    this._jobInfo = bulk._request({\r\n      method : 'POST',\r\n      path : \"/job\",\r\n      body : body,\r\n      headers : {\r\n        \"Content-Type\" : \"application/xml; charset=utf-8\"\r\n      },\r\n      responseType: \"application/xml\"\r\n    }).then(function(res) {\r\n      self.emit(\"open\", res.jobInfo);\r\n      self.id = res.jobInfo.id;\r\n      self.state = res.jobInfo.state;\r\n      return res.jobInfo;\r\n    }, function(err) {\r\n      self.emit(\"error\", err);\r\n      throw err;\r\n    });\r\n  }\r\n  return this._jobInfo.thenCall(callback);\r\n};\r\n\r\n/**\r\n * Create a new batch instance in the job\r\n *\r\n * @method Bulk~Job#createBatch\r\n * @returns {Bulk~Batch}\r\n */\r\nJob.prototype.createBatch = function() {\r\n  var batch = new Batch(this);\r\n  var self = this;\r\n  batch.on('queue', function() {\r\n    self._batches[batch.id] = batch;\r\n  });\r\n  return batch;\r\n};\r\n\r\n/**\r\n * Get a batch instance specified by given batch ID\r\n *\r\n * @method Bulk~Job#batch\r\n * @param {String} batchId - Batch ID\r\n * @returns {Bulk~Batch}\r\n */\r\nJob.prototype.batch = function(batchId) {\r\n  var batch = this._batches[batchId];\r\n  if (!batch) {\r\n    batch = new Batch(this, batchId);\r\n    this._batches[batchId] = batch;\r\n  }\r\n  return batch;\r\n};\r\n\r\n/**\r\n * Check the latest job status from server\r\n *\r\n * @method Bulk~Job#check\r\n * @param {Callback.<Bulk~JobInfo>} [callback] - Callback function\r\n * @returns {Promise.<Bulk~JobInfo>}\r\n */\r\nJob.prototype.check = function(callback) {\r\n  var self = this;\r\n  var bulk = this._bulk;\r\n  var logger = bulk._logger;\r\n\r\n  this._jobInfo = this._waitAssign().then(function() {\r\n    return bulk._request({\r\n      method : 'GET',\r\n      path : \"/job/\" + self.id,\r\n      responseType: \"application/xml\"\r\n    });\r\n  }).then(function(res) {\r\n    logger.debug(res.jobInfo);\r\n    self.id = res.jobInfo.id;\r\n    self.type = res.jobInfo.object;\r\n    self.operation = res.jobInfo.operation;\r\n    self.state = res.jobInfo.state;\r\n    return res.jobInfo;\r\n  });\r\n  return this._jobInfo.thenCall(callback);\r\n};\r\n\r\n/**\r\n * Wait till the job is assigned to server\r\n *\r\n * @method Bulk~Job#info\r\n * @param {Callback.<Bulk~JobInfo>} [callback] - Callback function\r\n * @returns {Promise.<Bulk~JobInfo>}\r\n */\r\nJob.prototype._waitAssign = function(callback) {\r\n  return (this.id ? Promise.resolve({ id: this.id }) : this.open()).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * List all registered batch info in job\r\n *\r\n * @method Bulk~Job#list\r\n * @param {Callback.<Array.<Bulk~BatchInfo>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<Bulk~BatchInfo>>}\r\n */\r\nJob.prototype.list = function(callback) {\r\n  var self = this;\r\n  var bulk = this._bulk;\r\n  var logger = bulk._logger;\r\n\r\n  return this._waitAssign().then(function() {\r\n    return bulk._request({\r\n      method : 'GET',\r\n      path : \"/job/\" + self.id + \"/batch\",\r\n      responseType: \"application/xml\"\r\n    });\r\n  }).then(function(res) {\r\n    logger.debug(res.batchInfoList.batchInfo);\r\n    var batchInfoList = res.batchInfoList;\r\n    batchInfoList = _.isArray(batchInfoList.batchInfo) ? batchInfoList.batchInfo : [ batchInfoList.batchInfo ];\r\n    return batchInfoList;\r\n  }).thenCall(callback);\r\n\r\n};\r\n\r\n/**\r\n * Close opened job\r\n *\r\n * @method Bulk~Job#close\r\n * @param {Callback.<Bulk~JobInfo>} [callback] - Callback function\r\n * @returns {Promise.<Bulk~JobInfo>}\r\n */\r\nJob.prototype.close = function() {\r\n  var self = this;\r\n  return this._changeState(\"Closed\").then(function(jobInfo) {\r\n    self.id = null;\r\n    self.emit(\"close\", jobInfo);\r\n    return jobInfo;\r\n  }, function(err) {\r\n    self.emit(\"error\", err);\r\n    throw err;\r\n  });\r\n};\r\n\r\n/**\r\n * Set the status to abort\r\n *\r\n * @method Bulk~Job#abort\r\n * @param {Callback.<Bulk~JobInfo>} [callback] - Callback function\r\n * @returns {Promise.<Bulk~JobInfo>}\r\n */\r\nJob.prototype.abort = function() {\r\n  var self = this;\r\n  return this._changeState(\"Aborted\").then(function(jobInfo) {\r\n    self.id = null;\r\n    self.emit(\"abort\", jobInfo);\r\n    return jobInfo;\r\n  }, function(err) {\r\n    self.emit(\"error\", err);\r\n    throw err;\r\n  });\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nJob.prototype._changeState = function(state, callback) {\r\n  var self = this;\r\n  var bulk = this._bulk;\r\n  var logger = bulk._logger;\r\n\r\n  this._jobInfo = this._waitAssign().then(function() {\r\n    var body = [\r\n      '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',\r\n      '<jobInfo xmlns=\"http://www.force.com/2009/06/asyncapi/dataload\">',\r\n        '<state>' + state + '</state>',\r\n      '</jobInfo>'\r\n    ].join('');\r\n    return bulk._request({\r\n      method : 'POST',\r\n      path : \"/job/\" + self.id,\r\n      body : body,\r\n      headers : {\r\n        \"Content-Type\" : \"application/xml; charset=utf-8\"\r\n      },\r\n      responseType: \"application/xml\"\r\n    });\r\n  }).then(function(res) {\r\n    logger.debug(res.jobInfo);\r\n    self.state = res.jobInfo.state;\r\n    return res.jobInfo;\r\n  });\r\n  return this._jobInfo.thenCall(callback);\r\n\r\n};\r\n\r\n\r\n/*--------------------------------------------*/\r\n\r\n/**\r\n * Batch (extends RecordStream)\r\n *\r\n * @protected\r\n * @class Bulk~Batch\r\n * @extends {stream.Writable}\r\n * @implements {Promise.<Array.<RecordResult>>}\r\n * @param {Bulk~Job} job - Bulk job object\r\n * @param {String} [batchId] - Batch ID (if already available)\r\n */\r\nvar Batch = function(job, batchId) {\r\n  Batch.super_.call(this, { objectMode: true });\r\n  this.job = job;\r\n  this.id = batchId;\r\n  this._bulk = job._bulk;\r\n  this._deferred = Promise.defer();\r\n  this._setupDataStreams();\r\n};\r\n\r\ninherits(Batch, stream.Writable);\r\n\r\n\r\n/**\r\n * @private\r\n */\r\nBatch.prototype._setupDataStreams = function() {\r\n  var batch = this;\r\n  var converterOptions = { nullValue : '#N/A' };\r\n  this._uploadStream = new RecordStream.Serializable();\r\n  this._uploadDataStream = this._uploadStream.stream('csv', converterOptions);\r\n  this._downloadStream = new RecordStream.Parsable();\r\n  this._downloadDataStream = this._downloadStream.stream('csv', converterOptions);\r\n\r\n  this.on('finish', function() {\r\n    batch._uploadStream.end();\r\n  });\r\n  this._uploadDataStream.once('readable', function() {\r\n    batch.job.open().then(function() {\r\n      // pipe upload data to batch API request stream\r\n      batch._uploadDataStream.pipe(batch._createRequestStream());\r\n    });\r\n  });\r\n\r\n  // duplex data stream, opened access to API programmers by Batch#stream()\r\n  var dataStream = this._dataStream = new Duplex();\r\n  dataStream._write = function(data, enc, cb) {\r\n    batch._uploadDataStream.write(data, enc, cb);\r\n  };\r\n  dataStream.on('finish', function() {\r\n    batch._uploadDataStream.end();\r\n  });\r\n\r\n  this._downloadDataStream.on('readable', function() {\r\n    dataStream.read(0);\r\n  });\r\n  this._downloadDataStream.on('end', function() {\r\n    dataStream.push(null);\r\n  });\r\n  dataStream._read = function(size) {\r\n    var chunk;\r\n    while ((chunk = batch._downloadDataStream.read()) !== null) {\r\n      dataStream.push(chunk);\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Connect batch API and create stream instance of request/response\r\n *\r\n * @private\r\n * @returns {stream.Duplex}\r\n */\r\nBatch.prototype._createRequestStream = function() {\r\n  var batch = this;\r\n  var bulk = batch._bulk;\r\n  var logger = bulk._logger;\r\n\r\n  return bulk._request({\r\n    method : 'POST',\r\n    path : \"/job/\" + batch.job.id + \"/batch\",\r\n    headers: {\r\n      \"Content-Type\": \"text/csv\"\r\n    },\r\n    responseType: \"application/xml\"\r\n  }, function(err, res) {\r\n    if (err) {\r\n      batch.emit('error', err);\r\n    } else {\r\n      logger.debug(res.batchInfo);\r\n      batch.id = res.batchInfo.id;\r\n      batch.emit('queue', res.batchInfo);\r\n    }\r\n  }).stream();\r\n};\r\n\r\n/**\r\n * Implementation of Writable\r\n *\r\n * @override\r\n * @private\r\n */\r\nBatch.prototype._write = function(record, enc, cb) {\r\n  record = _.clone(record);\r\n  if (this.job.operation === \"insert\") {\r\n    delete record.Id;\r\n  } else if (this.job.operation === \"delete\") {\r\n    record = { Id: record.Id };\r\n  }\r\n  delete record.type;\r\n  delete record.attributes;\r\n  this._uploadStream.write(record, enc, cb);\r\n};\r\n\r\n/**\r\n * Returns duplex stream which accepts CSV data input and batch result output\r\n *\r\n * @returns {stream.Duplex}\r\n */\r\nBatch.prototype.stream = function() {\r\n  return this._dataStream;\r\n};\r\n\r\n/**\r\n * Execute batch operation\r\n *\r\n * @method Bulk~Batch#execute\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for batch operation. Accepts array of records, CSV string, and CSV data input stream in insert/update/upsert/delete/hardDelete operation, SOQL string in query operation.\r\n * @param {Callback.<Array.<RecordResult>|Array.<BatchResultInfo>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\nBatch.prototype.run =\r\nBatch.prototype.exec =\r\nBatch.prototype.execute = function(input, callback) {\r\n  var self = this;\r\n\r\n  if (typeof input === 'function') { // if input argument is omitted\r\n    callback = input;\r\n    input = null;\r\n  }\r\n\r\n  // if batch is already executed\r\n  if (this._result) {\r\n    throw new Error(\"Batch already executed.\");\r\n  }\r\n\r\n  var rdeferred = Promise.defer();\r\n  this._result = rdeferred.promise;\r\n  this._result.then(function(res) {\r\n    self._deferred.resolve(res);\r\n  }, function(err) {\r\n    self._deferred.reject(err);\r\n  });\r\n  this.once('response', function(res) {\r\n    rdeferred.resolve(res);\r\n  });\r\n  this.once('error', function(err) {\r\n    rdeferred.reject(err);\r\n  });\r\n\r\n  if (_.isObject(input) && _.isFunction(input.pipe)) { // if input has stream.Readable interface\r\n    input.pipe(this._dataStream);\r\n  } else {\r\n    var data;\r\n    if (_.isArray(input)) {\r\n      _.forEach(input, function(record) {\r\n        Object.keys(record).forEach(function(key) {\r\n          if (typeof record[key] === 'boolean') {\r\n            record[key] = String(record[key])\r\n          }\r\n        })\r\n        self.write(record);\r\n      });\r\n      self.end();\r\n    } else if (_.isString(input)){\r\n      data = input;\r\n      this._dataStream.write(data, 'utf8');\r\n      this._dataStream.end();\r\n    }\r\n  }\r\n\r\n  // return Batch instance for chaining\r\n  return this.thenCall(callback);\r\n};\r\n\r\n/**\r\n * Promise/A+ interface\r\n * http://promises-aplus.github.io/promises-spec/\r\n *\r\n * Delegate to deferred promise, return promise instance for batch result\r\n *\r\n * @method Bulk~Batch#then\r\n */\r\nBatch.prototype.then = function(onResolved, onReject, onProgress) {\r\n  return this._deferred.promise.then(onResolved, onReject, onProgress);\r\n};\r\n\r\n/**\r\n * Promise/A+ extension\r\n * Call \"then\" using given node-style callback function\r\n *\r\n * @method Bulk~Batch#thenCall\r\n */\r\nBatch.prototype.thenCall = function(callback) {\r\n  if (_.isFunction(callback)) {\r\n    this.then(function(res) {\r\n      process.nextTick(function() {\r\n        callback(null, res);\r\n      });\r\n    }, function(err) {\r\n      process.nextTick(function() {\r\n        callback(err);\r\n      });\r\n    });\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * @typedef {Object} Bulk~BatchInfo\r\n * @prop {String} id - Batch ID\r\n * @prop {String} jobId - Job ID\r\n * @prop {String} state - Batch state\r\n * @prop {String} stateMessage - Batch state message\r\n */\r\n\r\n/**\r\n * Check the latest batch status in server\r\n *\r\n * @method Bulk~Batch#check\r\n * @param {Callback.<Bulk~BatchInfo>} [callback] - Callback function\r\n * @returns {Promise.<Bulk~BatchInfo>}\r\n */\r\nBatch.prototype.check = function(callback) {\r\n  var self = this;\r\n  var bulk = this._bulk;\r\n  var logger = bulk._logger;\r\n  var jobId = this.job.id;\r\n  var batchId = this.id;\r\n\r\n  if (!jobId || !batchId) {\r\n    throw new Error(\"Batch not started.\");\r\n  }\r\n  return bulk._request({\r\n    method : 'GET',\r\n    path : \"/job/\" + jobId + \"/batch/\" + batchId,\r\n    responseType: \"application/xml\"\r\n  }).then(function(res) {\r\n    logger.debug(res.batchInfo);\r\n    return res.batchInfo;\r\n  }).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * Polling the batch result and retrieve\r\n *\r\n * @method Bulk~Batch#poll\r\n * @param {Number} interval - Polling interval in milliseconds\r\n * @param {Number} timeout - Polling timeout in milliseconds\r\n */\r\nBatch.prototype.poll = function(interval, timeout) {\r\n  var self = this;\r\n  var jobId = this.job.id;\r\n  var batchId = this.id;\r\n\r\n  if (!jobId || !batchId) {\r\n    throw new Error(\"Batch not started.\");\r\n  }\r\n  var startTime = new Date().getTime();\r\n  var poll = function() {\r\n    var now = new Date().getTime();\r\n    if (startTime + timeout < now) {\r\n      var err = new Error(\"Polling time out. Job Id = \" + jobId + \" , batch Id = \" + batchId);\r\n      err.name = 'PollingTimeout';\r\n      err.jobId = jobId;\r\n      err.batchId = batchId;\r\n      self.emit('error', err);\r\n      return;\r\n    }\r\n    self.check(function(err, res) {\r\n      if (err) {\r\n        self.emit('error', err);\r\n      } else {\r\n        if (res.state === \"Failed\") {\r\n          if (parseInt(res.numberRecordsProcessed, 10) > 0) {\r\n            self.retrieve();\r\n          } else {\r\n            self.emit('error', new Error(res.stateMessage));\r\n          }\r\n        } else if (res.state === \"Completed\") {\r\n          self.retrieve();\r\n        } else {\r\n          self.emit('progress', res);\r\n          setTimeout(poll, interval);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  setTimeout(poll, interval);\r\n};\r\n\r\n/**\r\n * @typedef {Object} Bulk~BatchResultInfo\r\n * @prop {String} id - Batch result ID\r\n * @prop {String} batchId - Batch ID which includes this batch result.\r\n * @prop {String} jobId - Job ID which includes this batch result.\r\n */\r\n\r\n/**\r\n * Retrieve batch result\r\n *\r\n * @method Bulk~Batch#retrieve\r\n * @param {Callback.<Array.<RecordResult>|Array.<Bulk~BatchResultInfo>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>|Array.<Bulk~BatchResultInfo>>}\r\n */\r\nBatch.prototype.retrieve = function(callback) {\r\n  var self = this;\r\n  var bulk = this._bulk;\r\n  var jobId = this.job.id;\r\n  var job = this.job;\r\n  var batchId = this.id;\r\n\r\n  if (!jobId || !batchId) {\r\n    throw new Error(\"Batch not started.\");\r\n  }\r\n\r\n  return job.info().then(function(jobInfo) {\r\n    return bulk._request({\r\n      method : 'GET',\r\n      path : \"/job/\" + jobId + \"/batch/\" + batchId + \"/result\"\r\n    });\r\n  }).then(function(res) {\r\n    var results;\r\n    if (job.operation === 'query') {\r\n      var conn = bulk._conn;\r\n      var resultIds = res['result-list'].result;\r\n      results = res['result-list'].result;\r\n      results = _.map(_.isArray(results) ? results : [ results ], function(id) {\r\n        return {\r\n          id: id,\r\n          batchId: batchId,\r\n          jobId: jobId\r\n        };\r\n      });\r\n    } else {\r\n      results = _.map(res, function(ret) {\r\n        return {\r\n          id: ret.Id || null,\r\n          success: ret.Success === \"true\",\r\n          errors: ret.Error ? [ ret.Error ] : []\r\n        };\r\n      });\r\n    }\r\n    self.emit('response', results);\r\n    return results;\r\n  }).fail(function(err) {\r\n    self.emit('error', err);\r\n    throw err;\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Fetch query result as a record stream\r\n * @param {String} resultId - Result id\r\n * @returns {RecordStream} - Record stream, convertible to CSV data stream\r\n */\r\nBatch.prototype.result = function(resultId) {\r\n  var jobId = this.job.id;\r\n  var batchId = this.id;\r\n  if (!jobId || !batchId) {\r\n    throw new Error(\"Batch not started.\");\r\n  }\r\n  var resultStream = new RecordStream.Parsable();\r\n  var resultDataStream = resultStream.stream('csv');\r\n  var reqStream = this._bulk._request({\r\n    method : 'GET',\r\n    path : \"/job/\" + jobId + \"/batch/\" + batchId + \"/result/\" + resultId,\r\n    responseType: \"application/octet-stream\"\r\n  }).stream().pipe(resultDataStream);\r\n  return resultStream;\r\n};\r\n\r\n/*--------------------------------------------*/\r\n/**\r\n * @private\r\n */\r\nvar BulkApi = function() {\r\n  BulkApi.super_.apply(this, arguments);\r\n};\r\n\r\ninherits(BulkApi, HttpApi);\r\n\r\nBulkApi.prototype.beforeSend = function(request) {\r\n  request.headers = request.headers || {};\r\n  request.headers[\"X-SFDC-SESSION\"] = this._conn.accessToken;\r\n};\r\n\r\nBulkApi.prototype.isSessionExpired = function(response) {\r\n  return response.statusCode === 400 &&\r\n    /<exceptionCode>InvalidSessionId<\\/exceptionCode>/.test(response.body);\r\n};\r\n\r\nBulkApi.prototype.hasErrorInResponseBody = function(body) {\r\n  return !!body.error;\r\n};\r\n\r\nBulkApi.prototype.parseError = function(body) {\r\n  return {\r\n    errorCode: body.error.exceptionCode,\r\n    message: body.error.exceptionMessage\r\n  };\r\n};\r\n\r\n/*--------------------------------------------*/\r\n\r\n/**\r\n * Class for Bulk API\r\n *\r\n * @class\r\n * @param {Connection} conn - Connection object\r\n */\r\nvar Bulk = function(conn) {\r\n  this._conn = conn;\r\n  this._logger = conn._logger;\r\n};\r\n\r\n/**\r\n * Polling interval in milliseconds\r\n * @type {Number}\r\n */\r\nBulk.prototype.pollInterval = 1000;\r\n\r\n/**\r\n * Polling timeout in milliseconds\r\n * @type {Number}\r\n */\r\nBulk.prototype.pollTimeout = 10000;\r\n\r\n/** @private **/\r\nBulk.prototype._request = function(request, callback) {\r\n  var conn = this._conn;\r\n  request = _.clone(request);\r\n  var baseUrl = [ conn.instanceUrl, \"services/async\", conn.version ].join('/');\r\n  request.url = baseUrl + request.path;\r\n  var options = { responseType: request.responseType };\r\n  delete request.path;\r\n  delete request.responseType;\r\n  return new BulkApi(this._conn, options).request(request).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Create and start bulkload job and batch\r\n *\r\n * @param {String} type - SObject type\r\n * @param {String} operation - Bulk load operation ('insert', 'update', 'upsert', 'delete', or 'hardDelete')\r\n * @param {Object} [options] - Options for bulk loading operation\r\n * @param {String} [options.extIdField] - External ID field name (used when upsert operation).\r\n * @param {String} [options.concurrencyMode] - 'Serial' or 'Parallel'. Defaults to Parallel.\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulkload. Accepts array of records, CSV string, and CSV data input stream in insert/update/upsert/delete/hardDelete operation, SOQL string in query operation.\r\n * @param {Callback.<Array.<RecordResult>|Array.<Bulk~BatchResultInfo>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\nBulk.prototype.load = function(type, operation, options, input, callback) {\r\n  var self = this;\r\n  if (!type || !operation) {\r\n    throw new Error(\"Insufficient arguments. At least, 'type' and 'operation' are required.\");\r\n  }\r\n  if (!_.isObject(options) || options.constructor !== Object) { // when options is not plain hash object, it is omitted\r\n    callback = input;\r\n    input = options;\r\n    options = null;\r\n  }\r\n  var job = this.createJob(type, operation, options);\r\n  job.once('error', function (error) {\r\n    if (batch) {\r\n      batch.emit('error', error); // pass job error to batch\r\n    }\r\n  });\r\n  var batch = job.createBatch();\r\n  var cleanup = function() {\r\n    batch = null;\r\n    job.close();\r\n  };\r\n  var cleanupOnError = function(err) {\r\n    if (err.name !== 'PollingTimeout') {\r\n      cleanup();\r\n    }\r\n  };\r\n  batch.on('response', cleanup);\r\n  batch.on('error', cleanupOnError);\r\n  batch.on('queue', function() { batch.poll(self.pollInterval, self.pollTimeout); });\r\n  return batch.execute(input, callback);\r\n};\r\n\r\n/**\r\n * Execute bulk query and get record stream\r\n *\r\n * @param {String} soql - SOQL to execute in bulk job\r\n * @returns {RecordStream.Parsable} - Record stream, convertible to CSV data stream\r\n */\r\nBulk.prototype.query = function(soql) {\r\n  var m = soql.replace(/\\([\\s\\S]+\\)/g, '').match(/FROM\\s+(\\w+)/i);\r\n  if (!m) {\r\n    throw new Error(\"No sobject type found in query, maybe caused by invalid SOQL.\");\r\n  }\r\n  var type = m[1];\r\n  var self = this;\r\n  var recordStream = new RecordStream.Parsable();\r\n  var dataStream = recordStream.stream('csv');\r\n  this.load(type, \"query\", soql).then(function(results) {\r\n    var streams = results.map(function(result) {\r\n      return self\r\n        .job(result.jobId)\r\n        .batch(result.batchId)\r\n        .result(result.id)\r\n        .stream();\r\n    });\r\n\r\n    joinStreams(streams).pipe(dataStream);\r\n  }).fail(function(err) {\r\n    recordStream.emit('error', err);\r\n  });\r\n  return recordStream;\r\n};\r\n\r\n\r\n/**\r\n * Create a new job instance\r\n *\r\n * @param {String} type - SObject type\r\n * @param {String} operation - Bulk load operation ('insert', 'update', 'upsert', 'delete', 'hardDelete', or 'query')\r\n * @param {Object} [options] - Options for bulk loading operation\r\n * @returns {Bulk~Job}\r\n */\r\nBulk.prototype.createJob = function(type, operation, options) {\r\n  return new Job(this, type, operation, options);\r\n};\r\n\r\n/**\r\n * Get a job instance specified by given job ID\r\n *\r\n * @param {String} jobId - Job ID\r\n * @returns {Bulk~Job}\r\n */\r\nBulk.prototype.job = function(jobId) {\r\n  return new Job(this, null, null, null, jobId);\r\n};\r\n\r\n\r\n/*--------------------------------------------*/\r\n/*\r\n * Register hook in connection instantiation for dynamically adding this API module features\r\n */\r\njsforce.on('connection:new', function(conn) {\r\n  conn.bulk = new Bulk(conn);\r\n});\r\n\r\n\r\nmodule.exports = Bulk;\r\n\r\n}).call(this,require('_process'))\r\n\r\n},{\"../core\":20,\"../http-api\":23,\"../promise\":27,\"../record-stream\":30,\"_process\":91,\"events\":47,\"inherits\":84,\"lodash/core\":88,\"multistream\":89,\"readable-stream\":107}],7:[function(require,module,exports){\r\n/**\r\n * @file Manages Salesforce Chatter REST API calls\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar inherits = require('inherits'),\r\n    _       = require('lodash/core'),\r\n    jsforce = require('../core'),\r\n    Promise = require('../promise');\r\n\r\n/**\r\n * API class for Chatter REST API call\r\n *\r\n * @class\r\n * @param {Connection} conn Connection\r\n */\r\nvar Chatter = module.exports = function(conn) {\r\n  this._conn = conn;\r\n};\r\n\r\n/**\r\n * Sending request to API endpoint\r\n * @private\r\n */\r\nChatter.prototype._request = function(params, callback) {\r\n  if (/^(put|post|patch)$/i.test(params.method)) {\r\n    if (_.isObject(params.body)) {\r\n      params.headers = {\r\n        \"Content-Type\": \"application/json\"\r\n      };\r\n      params.body = JSON.stringify(params.body);\r\n    }\r\n  }\r\n  params.url = this._normalizeUrl(params.url);\r\n  return this._conn.request(params, callback);\r\n};\r\n\r\n/**\r\n * Convert path to site root relative url\r\n * @private\r\n */\r\nChatter.prototype._normalizeUrl = function(url) {\r\n  if (url.indexOf('/chatter/') === 0 || url.indexOf('/connect/') === 0) {\r\n    return '/services/data/v' + this._conn.version + url;\r\n  } else if (/^\\/v[\\d]+\\.[\\d]+\\//.test(url)) {\r\n    return '/services/data' + url;\r\n  } else if (url.indexOf('/services/') !== 0 && url[0] === '/') {\r\n    return '/services/data/v' + this._conn.version + '/chatter' + url;\r\n  } else {\r\n    return url;\r\n  }\r\n};\r\n\r\n/**\r\n * @typedef {Object} Chatter~RequestParams\r\n * @prop {String} method - HTTP method\r\n * @prop {String} url - Resource URL\r\n * @prop {String} [body] - HTTP body (in POST/PUT/PATCH methods)\r\n */\r\n\r\n/**\r\n * @typedef {Object} Chatter~RequestResult\r\n */\r\n\r\n/**\r\n * Make a request for chatter API resource\r\n *\r\n * @param {Chatter~RequestParams} params - Paramters representing HTTP request\r\n * @param {Callback.<Chatter~RequestResult>} [callback] - Callback func\r\n * @returns {Chatter~Request}\r\n */\r\nChatter.prototype.request = function(params, callback) {\r\n  return new Request(this, params).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Make a resource request to chatter API\r\n *\r\n * @param {String} url - Resource URL\r\n * @param {Object} [queryParams] - Query parameters (in hash object)\r\n * @returns {Chatter~Resource}\r\n */\r\nChatter.prototype.resource = function(url, queryParams) {\r\n  return new Resource(this, url, queryParams);\r\n};\r\n\r\n/**\r\n * @typedef {Object} Chatter~BatchRequestResult\r\n * @prop {Boolean} hasError - Flag if the batch has one or more errors\r\n * @prop {Array.<Object>} results - Batch request results in array\r\n * @prop {Number} results.statusCode - HTTP response status code\r\n * @prop {Chatter~RequestResult} results.result - Parsed HTTP response body\r\n */\r\n\r\n/**\r\n * Make a batch request to chatter API\r\n *\r\n * @params {Array.<Chatter~Request>} requests - Chatter API requests\r\n * @param {Callback.<Chatter~BatchRequestResult>} [callback] - Callback func\r\n * @returns {Promise.<Chatter~BatchRequestResult>}\r\n */\r\nChatter.prototype.batch = function(requests, callback) {\r\n  var self = this;\r\n  var batchRequests = [], batchDeferreds = [];\r\n  _.forEach(requests, function(request) {\r\n    var deferred = Promise.defer();\r\n    request._promise = deferred.promise;\r\n    batchRequests.push(request.batchParams());\r\n    batchDeferreds.push(deferred);\r\n  });\r\n  var params = {\r\n    method: 'POST',\r\n    url: this._normalizeUrl('/connect/batch'),\r\n    body: {\r\n      batchRequests: batchRequests\r\n    }\r\n  };\r\n  return this.request(params).then(function(res) {\r\n    _.forEach(res.results, function(result, i) {\r\n      var deferred = batchDeferreds[i];\r\n      if (result.statusCode >= 400) {\r\n        deferred.reject(result.result);\r\n      } else {\r\n        deferred.resolve(result.result);\r\n      }\r\n    });\r\n    return res;\r\n  }).thenCall(callback);\r\n};\r\n\r\n\r\n/*--------------------------------------------*/\r\n/**\r\n * A class representing chatter API request\r\n *\r\n * @protected\r\n * @class Chatter~Request\r\n * @implements {Promise.<Chatter~RequestResult>}\r\n * @param {Chatter} chatter - Chatter API object\r\n * @param {Chatter~RequestParams} params - Paramters representing HTTP request\r\n */\r\nvar Request = function(chatter, params) {\r\n  this._chatter = chatter;\r\n  this._params = params;\r\n  this._promise = null;\r\n};\r\n\r\n/**\r\n * @typedef {Object} Chatter~BatchRequestParams\r\n * @prop {String} method - HTTP method\r\n * @prop {String} url - Resource URL\r\n * @prop {String} [richInput] - HTTP body (in POST/PUT/PATCH methods)\r\n */\r\n\r\n/**\r\n * Retrieve parameters in batch request form\r\n *\r\n * @method Chatter~Request#batchParams\r\n * @returns {Chatter~BatchRequestParams}\r\n */\r\nRequest.prototype.batchParams = function() {\r\n  var params = this._params;\r\n  var batchParams = {\r\n    method: params.method,\r\n    url: this._chatter._normalizeUrl(params.url)\r\n  };\r\n  if (this._params.body) {\r\n    batchParams.richInput = this._params.body;\r\n  }\r\n  return batchParams;\r\n};\r\n\r\n/**\r\n * Retrieve parameters in batch request form\r\n *\r\n * @method Chatter~Request#promise\r\n * @returns {Promise.<Chatter~RequestResult>}\r\n */\r\nRequest.prototype.promise = function() {\r\n  return this._promise || this._chatter._request(this._params);\r\n};\r\n\r\n/**\r\n * Returns Node.js Stream object for request\r\n *\r\n * @method Chatter~Request#stream\r\n * @returns {stream.Stream}\r\n */\r\nRequest.prototype.stream = function() {\r\n  return this._chatter._request(this._params).stream();\r\n};\r\n\r\n/**\r\n * Promise/A+ interface\r\n * http://promises-aplus.github.io/promises-spec/\r\n *\r\n * Delegate to deferred promise, return promise instance for batch result\r\n *\r\n * @method Chatter~Request#then\r\n */\r\nRequest.prototype.then = function(onResolve, onReject) {\r\n  return this.promise().then(onResolve, onReject);\r\n};\r\n\r\n/**\r\n * Promise/A+ extension\r\n * Call \"then\" using given node-style callback function\r\n *\r\n * @method Chatter~Request#thenCall\r\n */\r\nRequest.prototype.thenCall = function(callback) {\r\n  return _.isFunction(callback) ? this.promise().thenCall(callback) : this;\r\n};\r\n\r\n\r\n/*--------------------------------------------*/\r\n/**\r\n * A class representing chatter API resource\r\n *\r\n * @protected\r\n * @class Chatter~Resource\r\n * @extends Chatter~Request\r\n * @param {Chatter} chatter - Chatter API object\r\n * @param {String} url - Resource URL\r\n * @param {Object} [queryParams] - Query parameters (in hash object)\r\n */\r\nvar Resource = function(chatter, url, queryParams) {\r\n  if (queryParams) {\r\n    var qstring = _.map(_.keys(queryParams), function(name) {\r\n      return name + \"=\" + encodeURIComponent(queryParams[name]);\r\n    }).join('&');\r\n    url += (url.indexOf('?') > 0 ? '&' : '?') + qstring;\r\n  }\r\n  Resource.super_.call(this, chatter, { method: 'GET', url: url });\r\n  this._url = url;\r\n};\r\n\r\ninherits(Resource, Request);\r\n\r\n/**\r\n * Create a new resource\r\n *\r\n * @method Chatter~Resource#create\r\n * @param {Object} data - Data to newly post\r\n * @param {Callback.<Chatter~RequestResult>} [callback] - Callback function\r\n * @returns {Chatter~Request}\r\n */\r\nResource.prototype.create = function(data, callback) {\r\n  return this._chatter.request({\r\n    method: 'POST',\r\n    url: this._url,\r\n    body: data\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Retrieve resource content\r\n *\r\n * @method Chatter~Resource#retrieve\r\n * @param {Callback.<Chatter~RequestResult>} [callback] - Callback function\r\n * @returns {Chatter~Request}\r\n */\r\nResource.prototype.retrieve = function(callback) {\r\n  return this.thenCall(callback);\r\n};\r\n\r\n/**\r\n * Update specified resource\r\n *\r\n * @method Chatter~Resource#update\r\n * @param {Obejct} data - Data to update\r\n * @param {Callback.<Chatter~RequestResult>} [callback] - Callback function\r\n * @returns {Chatter~Request}\r\n */\r\nResource.prototype.update = function(data, callback) {\r\n  return this._chatter.request({\r\n    method: 'POST',\r\n    url: this._url,\r\n    body: data\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Synonym of Resource#delete()\r\n *\r\n * @method Chatter~Resource#del\r\n * @param {Callback.<Chatter~RequestResult>} [callback] - Callback function\r\n * @returns {Chatter~Request}\r\n */\r\n/**\r\n * Delete specified resource\r\n *\r\n * @method Chatter~Resource#delete\r\n * @param {Callback.<Chatter~RequestResult>} [callback] - Callback function\r\n * @returns {Chatter~Request}\r\n */\r\nResource.prototype.del =\r\nResource.prototype[\"delete\"] = function(callback) {\r\n  return this._chatter.request({\r\n    method: 'DELETE',\r\n    url: this._url\r\n  }).thenCall(callback);\r\n};\r\n\r\n\r\n/*--------------------------------------------*/\r\n/*\r\n * Register hook in connection instantiation for dynamically adding this API module features\r\n */\r\njsforce.on('connection:new', function(conn) {\r\n  conn.chatter = new Chatter(conn);\r\n});\r\n\r\n},{\"../core\":20,\"../promise\":27,\"inherits\":84,\"lodash/core\":88}],8:[function(require,module,exports){\r\nrequire('./analytics');\r\nrequire('./apex');\r\nrequire('./bulk');\r\nrequire('./chatter');\r\nrequire('./metadata');\r\nrequire('./soap');\r\nrequire('./streaming');\r\nrequire('./tooling');\r\n\r\n},{\"./analytics\":4,\"./apex\":5,\"./bulk\":6,\"./chatter\":7,\"./metadata\":9,\"./soap\":10,\"./streaming\":12,\"./tooling\":13}],9:[function(require,module,exports){\r\n(function (process,Buffer){\r\n/*global process, Buffer */\r\n/**\r\n * @file Manages Salesforce Metadata API\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar inherits = require('inherits'),\r\n    events  = require('events'),\r\n    stream  = require('readable-stream'),\r\n    _       = require('lodash/core'),\r\n    jsforce = require('../core'),\r\n    Promise = require('../promise'),\r\n    SOAP    = require('../soap');\r\n\r\n/*--------------------------------------------*/\r\n/**\r\n * Class for Salesforce Metadata API\r\n *\r\n * @class\r\n * @param {Connection} conn - Connection object\r\n */\r\nvar Metadata = module.exports = function(conn) {\r\n  this._conn = conn;\r\n};\r\n\r\n\r\n/**\r\n * Polling interval in milliseconds\r\n * @type {Number}\r\n */\r\nMetadata.prototype.pollInterval = 1000;\r\n\r\n/**\r\n * Polling timeout in milliseconds\r\n * @type {Number}\r\n */\r\nMetadata.prototype.pollTimeout = 10000;\r\n\r\n\r\n/**\r\n * Call Metadata API SOAP endpoint\r\n *\r\n * @private\r\n */\r\nMetadata.prototype._invoke = function(method, message, callback) {\r\n  var soapEndpoint = new SOAP(this._conn, {\r\n    xmlns: \"http://soap.sforce.com/2006/04/metadata\",\r\n    endpointUrl: this._conn.instanceUrl + \"/services/Soap/m/\" + this._conn.version\r\n  });\r\n  return soapEndpoint.invoke(method, message).then(function(res) {\r\n    return res.result;\r\n  }).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} Metadata~MetadataInfo\r\n * @prop {String} fullName - The name of the component\r\n */\r\n\r\n/**\r\n * Asynchronously adds one or more new metadata components to the organization.\r\n *\r\n * @param {String} type - The type of metadata to create\r\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Metadata to create\r\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\r\n * @returns {Metadata~AsyncResultLocator}\r\n */\r\nMetadata.prototype.createAsync = function(type, metadata, callback) {\r\n  if (Number(this._conn.version) > 30) {\r\n    throw new Error(\"Async metadata CRUD calls are not supported on ver 31.0 or later.\");\r\n  }\r\n  var convert = function(md) {\r\n    md[\"@xsi:type\"] = type;\r\n    return md;\r\n  };\r\n  var isArray = _.isArray(metadata);\r\n  metadata = isArray ? _.map(metadata, convert) : convert(metadata);\r\n  var res = this._invoke(\"create\", { metadata: metadata });\r\n  return new AsyncResultLocator(this, res, isArray).thenCall(callback);\r\n};\r\n\r\n/**\r\n * @typedef {Object} Metadata~SaveResult\r\n * @prop {Boolean} success - True if metadata is successfully saved\r\n * @prop {String} fullName - Full name of metadata object\r\n */\r\n\r\n/**\r\n * @private\r\n */\r\nfunction convertToSaveResult(result) {\r\n  var saveResult = _.clone(result);\r\n  saveResult.success = saveResult.success === 'true';\r\n  return saveResult;\r\n}\r\n\r\n/**\r\n * @typedef {Object} Metadata~UpsertResult\r\n * @prop {Boolean} success - True if metadata is successfully saved\r\n * @prop {String} fullName - Full name of metadata object\r\n * @prop {Boolean} created - True if metadata is newly created\r\n */\r\n\r\n/**\r\n * @private\r\n */\r\nfunction convertToUpsertResult(result) {\r\n  var upsertResult = convertToSaveResult(result);\r\n  upsertResult.created = upsertResult.created === 'true';\r\n  return upsertResult;\r\n}\r\n\r\n/**\r\n * Synonym of Metadata#create().\r\n *\r\n * @method Metadata#createSync\r\n * @param {String} type - The type of metadata to create\r\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Metadata to create\r\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\r\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\r\n */\r\n/**\r\n * Synchronously adds one or more new metadata components to the organization.\r\n *\r\n * @method Metadata#create\r\n * @param {String} type - The type of metadata to create\r\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Metadata to create\r\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\r\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\r\n */\r\nMetadata.prototype.createSync =\r\nMetadata.prototype.create = function(type, metadata, callback) {\r\n  var convert = function(md) {\r\n    md[\"@xsi:type\"] = type;\r\n    return md;\r\n  };\r\n  var isArray = _.isArray(metadata);\r\n  metadata = isArray ? _.map(metadata, convert) : convert(metadata);\r\n  return this._invoke(\"createMetadata\", { metadata: metadata }).then(function(results) {\r\n    return _.isArray(results) ? _.map(results, convertToSaveResult) : convertToSaveResult(results);\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nfunction convertToMetadataInfo(rec) {\r\n  var metadataInfo = _.clone(rec);\r\n  delete metadataInfo.$;\r\n  return metadataInfo;\r\n}\r\n\r\n/**\r\n * Synonym of Metadata#read()\r\n *\r\n * @method Metadata#readSync\r\n * @param {String} type - The type of metadata to read\r\n * @param {String|Array.<String>} fullNames - full name(s) of metadata objects to read\r\n * @param {Callback.<Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>>>}\r\n */\r\n/**\r\n * Synchronously read specified metadata components in the organization.\r\n *\r\n * @method Metadata#read\r\n * @param {String} type - The type of metadata to read\r\n * @param {String|Array.<String>} fullNames - full name(s) of metadata objects to read\r\n * @param {Callback.<Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>>>}\r\n */\r\nMetadata.prototype.readSync =\r\nMetadata.prototype.read = function(type, fullNames, callback) {\r\n  return this._invoke(\"readMetadata\", { type: type, fullNames: fullNames }).then(function(res) {\r\n    return _.isArray(res.records) ? _.map(res.records, convertToMetadataInfo) : convertToMetadataInfo(res.records);\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * @typedef {Object} Metadata~UpdateMetadataInfo\r\n * @prop {String} currentName - The API name of the component or field before the update\r\n * @prop {Metadata~MetadataInfo} metadata - Full specification of the component or field you wish to update\r\n */\r\n\r\n/**\r\n * Asynchronously updates one or more metadata components in the organization.\r\n *\r\n * @param {String} type - The type of metadata to update\r\n * @param {Metadata~UpdateMetadataInfo|Array.<Metadata~UpdateMetadataInfo>} updateMetadata - Updating metadata\r\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\r\n * @returns {Metadata~AsyncResultLocator}\r\n */\r\nMetadata.prototype.updateAsync = function(type, updateMetadata, callback) {\r\n  if (Number(this._conn.version) > 30) {\r\n    throw new Error(\"Async metadata CRUD calls are not supported on ver 31.0 or later.\");\r\n  }\r\n  var convert = function(umd) {\r\n    umd.metadata[\"@xsi:type\"] = type;\r\n    return umd;\r\n  };\r\n  var isArray = _.isArray(updateMetadata);\r\n  updateMetadata = isArray ? _.map(updateMetadata, convert) : convert(updateMetadata);\r\n  var res = this._invoke(\"update\", { updateMetadata: updateMetadata });\r\n  return new AsyncResultLocator(this, res, isArray).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Synonym of Metadata#update().\r\n *\r\n * @method Metadata#updateSync\r\n * @param {String} type - The type of metadata to update\r\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} updateMetadata - Updating metadata\r\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\r\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\r\n */\r\n/**\r\n * Synchronously updates one or more metadata components in the organization.\r\n *\r\n * @method Metadata#update\r\n * @param {String} type - The type of metadata to update\r\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} updateMetadata - Updating metadata\r\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\r\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\r\n */\r\nMetadata.prototype.updateSync =\r\nMetadata.prototype.update = function(type, metadata, callback) {\r\n  var convert = function(md) {\r\n    md[\"@xsi:type\"] = type;\r\n    return md;\r\n  };\r\n  var isArray = _.isArray(metadata);\r\n  metadata = isArray ? _.map(metadata, convert) : convert(metadata);\r\n  return this._invoke(\"updateMetadata\", { metadata: metadata }).then(function(results) {\r\n    return _.isArray(results) ? _.map(results, convertToSaveResult) : convertToSaveResult(results);\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Synonym of Metadata#upsert().\r\n *\r\n * @method Metadata#upsertSync\r\n * @param {String} type - The type of metadata to upsert\r\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Upserting metadata\r\n * @param {Callback.<Metadata~UpsertResult|Array.<Metadata~UpsertResult>>} [callback] - Callback function\r\n * @returns {Promise.<Metadata~UpsertResult|Array.<Metadata~UpsertResult>>}\r\n */\r\n/**\r\n * Upserts one or more components in your organization's data.\r\n *\r\n * @method Metadata#upsert\r\n * @param {String} type - The type of metadata to upsert\r\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Upserting metadata\r\n * @param {Callback.<Metadata~UpsertResult|Array.<Metadata~UpsertResult>>} [callback] - Callback function\r\n * @returns {Promise.<Metadata~UpsertResult|Array.<Metadata~UpsertResult>>}\r\n */\r\nMetadata.prototype.upsertSync =\r\nMetadata.prototype.upsert = function(type, metadata, callback) {\r\n  var convert = function(md) {\r\n    md[\"@xsi:type\"] = type;\r\n    return md;\r\n  };\r\n  var isArray = _.isArray(metadata);\r\n  metadata = isArray ? _.map(metadata, convert) : convert(metadata);\r\n  return this._invoke(\"upsertMetadata\", { metadata: metadata }).then(function(results) {\r\n    return _.isArray(results) ? _.map(results, convertToUpsertResult) : convertToUpsertResult(results);\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Asynchronously deletes specified metadata components in the organization.\r\n *\r\n * @param {String} type - The type of metadata to delete\r\n * @param {String|Metadata~MetadataInfo|Array.<String>|Array.<Metadata~MetadataInfo>} metadata - The fullName of metadata or metadata info to delete. If it is passed in fullName, the type parameter should not be empty.\r\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\r\n * @returns {Metadata~AsyncResultLocator}\r\n */\r\nMetadata.prototype.deleteAsync = function(type, metadata, callback) {\r\n  if (Number(this._conn.version) > 30) {\r\n    throw new Error(\"Async metadata CRUD calls are not supported on ver 31.0 or later.\");\r\n  }\r\n  var convert = function(md) {\r\n    if (_.isString(md)) {\r\n      md = { fullName : md };\r\n    }\r\n    md[\"@xsi:type\"] = type;\r\n    return md;\r\n  };\r\n  var isArray = _.isArray(metadata);\r\n  metadata = isArray ? _.map(metadata, convert) : convert(metadata);\r\n  var res = this._invoke(\"delete\", { metadata: metadata });\r\n  return new AsyncResultLocator(this, res, isArray).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Synonym of Metadata#delete().\r\n *\r\n * @deprecated\r\n * @method Metadata#del\r\n * @param {String} [type] - The type of metadata to delete\r\n * @param {String|Metadata~MetadataInfo|Array.<String>|Array.<Metadata~MetadataInfo>} metadata - The fullName of metadata or metadata info to delete. If it is passed in fullName, the type parameter should not be empty.\r\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\r\n * @returns {Metadata~AsyncResultLocator}\r\n */\r\n/**\r\n * Synonym of Metadata#delete().\r\n *\r\n * @method Metadata#deleteSync\r\n * @param {String} type - The type of metadata to delete\r\n * @param {String|Array.<String>} fullNames - The fullName of metadata to delete.\r\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\r\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\r\n */\r\n\r\n/**\r\n * Synchronously deletes specified metadata components in the organization.\r\n *\r\n * @method Metadata#delete\r\n * @param {String} type - The type of metadata to delete\r\n * @param {String|Array.<String>} fullNames - The fullName of metadata to delete.\r\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\r\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\r\n */\r\nMetadata.prototype.del =\r\nMetadata.prototype.deleteSync =\r\nMetadata.prototype[\"delete\"] = function(type, fullNames, callback) {\r\n  return this._invoke(\"deleteMetadata\", { type: type, fullNames: fullNames }).then(function(results) {\r\n    return _.isArray(results) ? _.map(results, convertToSaveResult) : convertToSaveResult(results);\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Rename fullname of a metadata component in the organization\r\n *\r\n * @param {String} type - The type of metadata to delete\r\n * @param {String} oldFullName - The original fullName of metadata\r\n * @param {String} newFullName - The new fullName of metadata\r\n * @param {Callback.<Metadata~SaveResult>} [callback] - Callback function\r\n * @returns {Promise.<Metadata~SaveResult>}\r\n */\r\nMetadata.prototype.rename = function(type, oldFullName, newFullName, callback) {\r\n  return this._invoke(\"renameMetadata\", { type: type, oldFullName: oldFullName, newFullName: newFullName }).then(function(result) {\r\n    return convertToSaveResult(result);\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Checks the status of asynchronous metadata calls\r\n *\r\n * @param {String|Array.<String>} ids - The asynchronous process ID(s)\r\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\r\n * @returns {Metadata~AsyncResultLocator}\r\n */\r\nMetadata.prototype.checkStatus = function(ids, callback) {\r\n  var isArray = _.isArray(ids);\r\n  var res = this._invoke(\"checkStatus\", { asyncProcessId: ids });\r\n  return new AsyncResultLocator(this, res, isArray).thenCall(callback);\r\n};\r\n\r\n/**\r\n * @typedef {Object} Metadata~DescribeMetadataResult\r\n * @prop {Array.<Object>} metadataObjects - One or more metadata components and their attributes\r\n * @prop {Array.<String>} metadataObjects.childXmlNames - List of child sub-components for this component\r\n * @prop {String} metadataObjects.directoryName - The name of the directory in the .zip file that contains this component\r\n * @prop {Boolean} metadataObjects.inFolder - Indicates whether the component is in a folder or not\r\n * @prop {Boolean} metadataObjects.metaFile - Indicates whether the component requires an accompanying metadata file\r\n * @prop {String} metadataObjects.suffix - The file suffix for this component\r\n * @prop {String} metadataObjects.xmlName - The name of the root element in the metadata file for this component\r\n * @prop {String} organizationNamespace - The namespace of the organization\r\n * @prop {Boolean} partialSaveAllowed - Indicates whether rollbackOnError is allowed or not\r\n * @prop {Boolean} testRequired - Indicates whether tests are required or not\r\n */\r\n\r\n/**\r\n * Retrieves the metadata which describes your organization, including Apex classes and triggers,\r\n * custom objects, custom fields on standard objects, tab sets that define an app,\r\n * and many other components.\r\n *\r\n * @param {String} [version] - The API version for which you want metadata; for example, 29.0\r\n * @param {Callback.<Metadata~DescribeMetadataResult>} [callback] - Callback function\r\n * @returns {Promise.<Metadata~DescribeMetadataResult>}\r\n */\r\nMetadata.prototype.describe = function(version, callback) {\r\n  if (!_.isString(version)) {\r\n    callback = version;\r\n    version = this._conn.version;\r\n  }\r\n  return this._invoke(\"describeMetadata\", { asOfVersion: version }).then(function(res) {\r\n    res.metadataObjects = _.isArray(res.metadataObjects) ? res.metadataObjects : [ res.metadataObjects ];\r\n    res.metadataObjects = _.map(res.metadataObjects, function(mo) {\r\n      if (mo.childXmlNames) {\r\n        mo.childXmlNames = _.isArray(mo.childXmlNames) ? mo.childXmlNames: [ mo.childXmlNames ];\r\n      }\r\n      mo.inFolder = mo.inFolder === 'true';\r\n      mo.metaFile = mo.metaFile === 'true';\r\n      return mo;\r\n    });\r\n    res.partialSaveAllowed = res.partialSaveAllowed === 'true';\r\n    res.testRequired = res.testRequired === 'true';\r\n    return res;\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * @typedef {Object} Metadata~ListMetadataQuery\r\n * @prop {String} type - The metadata type, such as CustomObject, CustomField, or ApexClass\r\n * @prop {String} [folder] - The folder associated with the component.\r\n */\r\n\r\n/**\r\n * @typedef {Object} Metadata~FileProperties\r\n * @prop {String} type - The metadata type, such as CustomObject, CustomField, or ApexClass\r\n * @prop {String} createdById - ID of the user who created the file\r\n * @prop {String} createdByName - Name of the user who created the file\r\n * @prop {String} createdDate - Date and time when the file was created\r\n * @prop {String} fileName - Name of the file\r\n * @prop {String} fullName - The file developer name used as a unique identifier for API access\r\n * @prop {String} id - ID of the file\r\n * @prop {String} lastModifiedById - ID of the user who last modified the file\r\n * @prop {String} lastModifiedByName - Name of the user who last modified the file\r\n * @prop {String} lastModifiedDate - Date and time that the file was last modified\r\n * @prop {String} [manageableState] - Indicates the manageable state of the specified component if it is contained in a package\r\n * @prop {String} [namespacePrefix] - The namespace prefix of the component\r\n */\r\n\r\n/**\r\n * Retrieves property information about metadata components in your organization\r\n *\r\n * @param {Metadata~ListMetadataQuery|Array.<Metadata~ListMetadataQuery>} queries - The criteria object(s) specifing metadata to list\r\n * @param {String} [version] - The API version for which you want metadata; for example, 29.0\r\n * @param {Callback.<Array.<Metadata~FileProperties>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<Metadata~FileProperties>>}\r\n */\r\nMetadata.prototype.list = function(queries, version, callback) {\r\n  if (!_.isString(version)) {\r\n    callback = version;\r\n    version = this._conn.version;\r\n  }\r\n  if (!_.isArray(queries)) {\r\n    queries = [ queries ];\r\n  }\r\n  return this._invoke(\"listMetadata\", { queries: queries, asOfVersion: version }, callback);\r\n};\r\n\r\n/**\r\n * @typedef {Object} Metadata~RetrieveRequest\r\n */\r\n\r\n/**\r\n * Retrieves XML file representations of components in an organization\r\n *\r\n * @param {Metadata~RetrieveRequest} request - Options for determining which packages or files are retrieved\r\n * @param {Callback.<Metadata~AsyncResult>} [callback] - Callback function\r\n * @returns {Metadata~RetrieveResultLocator}\r\n */\r\nMetadata.prototype.retrieve = function(request, callback) {\r\n  var res = this._invoke(\"retrieve\", { request: request });\r\n  return new RetrieveResultLocator(this, res).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Checks the status of declarative metadata call retrieve() and returns the zip file contents\r\n *\r\n * @param {String} id - Async process id returned from previous retrieve request\r\n * @param {Callback.<Metadata~RetrieveResult>} [callback] - Callback function\r\n * @returns {Promise.<Metadata~RetrieveResult>}\r\n */\r\nMetadata.prototype.checkRetrieveStatus = function(id, callback) {\r\n  return this._invoke(\"checkRetrieveStatus\", { asyncProcessId: id }, callback);\r\n};\r\n\r\n/**\r\n * Deploy components into an organization using zipped file representations\r\n *\r\n * @param {stream.Stream|Buffer|String} zipInput - Zipped file input source in readable stream, binary buffer or Base64-encoded string\r\n * @param {Object} [options] - Options used in deployment\r\n * @param {Boolean} [options.allowMissingFiles] - Specifies whether a deploy succeeds even if files that are specified in package.xml but are not in the .zip file or not.\r\n * @param {Boolean} [options.autoUpdatePackage] - If a file is in the .zip file but not specified in package.xml, specifies whether the file should be automatically added to the package or not.\r\n * @param {Boolean} [options.checkOnly] - Indicates whether Apex classes and triggers are saved to the organization as part of the deployment (false) or not (true).\r\n * @param {Boolean} [options.ignoreWarnings] - Indicates whether a warning should allow a deployment to complete successfully (true) or not (false). Defaults to false.\r\n * @param {Boolean} [options.performRetrieve] - Indicates whether a retrieve() call is performed immediately after the deployment (true) or not (false).\r\n * @param {Boolean} [options.purgeOnDelete] - If true, the deleted components in the destructiveChanges.xml manifest file aren't stored in the Recycle Bin.\r\n * @param {Boolean} [options.rollbackOnError] - Indicates whether any failure causes a complete rollback (true) or not (false).\r\n * @param {Boolean} [options.runAllTests] - If true, all Apex tests defined in the organization are run.\r\n * @param {Array.<String>} [options.runTests] - A list of Apex tests to be run during deployment.\r\n * @param {Boolean} [options.singlePackage] - Indicates whether the specified .zip file points to a directory structure with a single package (true) or a set of packages (false).\r\n * @param {Callback.<Metadata~AsyncResult>} [callback] - Callback function\r\n * @returns {Metadata~DeployResultLocator}\r\n */\r\nMetadata.prototype.deploy = function(zipInput, options, callback) {\r\n  if (!options || _.isFunction(options)) {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  var deferred = Promise.defer();\r\n  if (_.isObject(zipInput) && _.isFunction(zipInput.pipe)) {\r\n    var bufs = [];\r\n    zipInput.on('data', function(d) {\r\n      bufs.push(d);\r\n    });\r\n    zipInput.on('end', function() {\r\n      deferred.resolve(Buffer.concat(bufs).toString('base64'));\r\n    });\r\n    // zipInput.resume();\r\n  } else if (zipInput instanceof Buffer) {\r\n    deferred.resolve(zipInput.toString('base64'));\r\n  } else if (zipInput instanceof String || typeof zipInput === 'string') {\r\n    deferred.resolve(zipInput);\r\n  } else {\r\n    throw \"Unexpected zipInput type\";\r\n  }\r\n\r\n  var self = this;\r\n  var res = deferred.promise.then(function(zipContentB64) {\r\n    return self._invoke(\"deploy\", {\r\n      ZipFile: zipContentB64,\r\n      DeployOptions: options\r\n    }, callback);\r\n  });\r\n  return new DeployResultLocator(this, res).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Checks the status of declarative metadata call deploy()\r\n *\r\n * @param {String} id - Async process id returned from previous deploy request\r\n * @param {Boolean} [includeDetails] - Sets the DeployResult object to include details information (default: false)\r\n * @param {Callback.<Metadata~DeployResult>} [callback] - Callback function\r\n * @returns {Promise.<Metadata~DeployResult>}\r\n */\r\nMetadata.prototype.checkDeployStatus = function(id, includeDetails, callback) {\r\n  if (_.isObject(includeDetails) || _.isBoolean(includeDetails)) {\r\n    includeDetails = !!includeDetails;\r\n  } else {\r\n    callback = includeDetails;\r\n    includeDetails = false;\r\n  }\r\n  return this._invoke(\"checkDeployStatus\", {\r\n    asyncProcessId: id,\r\n    includeDetails : includeDetails\r\n  }).then(function(res) {\r\n    res.done = res.done === 'true';\r\n    res.success = res.success === 'true';\r\n    res.checkOnly = res.checkOnly === 'true';\r\n    if (res.ignoreWarnings) {\r\n      res.ignoreWarnings = res.ignoreWarnings === 'true';\r\n    }\r\n    if (res.rollbackOnError) {\r\n      res.rollbackOnError = res.rollbackOnError === 'true';\r\n    }\r\n    res.numberComponentErrors = Number(res.numberComponentErrors);\r\n    res.numberComponentsDeployed = Number(res.numberComponentsDeployed);\r\n    res.numberComponentsTotal = Number(res.numberComponentsTotal);\r\n    res.numberTestErrors = Number(res.numberTestErrors);\r\n    res.numberTestsCompleted = Number(res.numberTestsCompleted);\r\n    res.numberTestsTotal = Number(res.numberTestsTotal);\r\n\r\n    return res;\r\n  }).thenCall(callback);\r\n};\r\n\r\n\r\n/*--------------------------------------------*/\r\n\r\n/**\r\n * @typedef {Object} Metadata~AsyncResult\r\n * @prop {Boolean} done - Indicates whether the call has completed or not\r\n * @prop {String} id - ID of the component being created, updated, deleted, deployed, or retrieved\r\n * @prop {String} state - The state four possible values: Queued, InProgress, Completed, and Error.\r\n * @prop {String} [statusCode] - If an error occurred during the create(), update(), or delete() call, a status code is returned\r\n * @prop {String} [message] - Message corresponding to the statusCode field returned\r\n */\r\n\r\n/**\r\n * The locator class for Metadata API asynchronous call result\r\n *\r\n * @protected\r\n * @class Metadata~AsyncResultLocator\r\n * @extends events.EventEmitter\r\n * @implements Promise.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>\r\n * @param {Metadata} meta - Metadata API object\r\n * @param {Promise.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} results - Promise object for async result info\r\n * @param {Boolean} [isArray] - Indicates whether the async request is given in array or single object\r\n */\r\nvar AsyncResultLocator = function(meta, results, isArray) {\r\n  this._meta = meta;\r\n  this._results = results;\r\n  this._isArray = isArray;\r\n};\r\n\r\ninherits(AsyncResultLocator, events.EventEmitter);\r\n\r\n/**\r\n * Promise/A+ interface\r\n * http://promises-aplus.github.io/promises-spec/\r\n *\r\n * Delegate to deferred promise, return promise instance for batch result\r\n *\r\n * @method Metadata~AsyncResultLocator#then\r\n */\r\nAsyncResultLocator.prototype.then = function(onResolve, onReject) {\r\n  var self = this;\r\n  return this._results.then(function(results) {\r\n    var convertType = function(res) {\r\n      if (res.$ && res.$[\"xsi:nil\"] === 'true') {\r\n        return null;\r\n      }\r\n      res.done = res.done === 'true';\r\n      return res;\r\n    };\r\n    results = _.isArray(results) ? _.map(results, convertType) : convertType(results);\r\n    if (self._isArray && !_.isArray(results)) {\r\n      results = [ results ];\r\n    }\r\n    return onResolve(results);\r\n  }, onReject);\r\n};\r\n\r\n/**\r\n * Promise/A+ extension\r\n * Call \"then\" using given node-style callback function\r\n *\r\n * @method Metadata~AsyncResultLocator#thenCall\r\n */\r\nAsyncResultLocator.prototype.thenCall = function(callback) {\r\n  return _.isFunction(callback) ? this.then(function(res) {\r\n    process.nextTick(function() {\r\n      callback(null, res);\r\n    });\r\n  }, function(err) {\r\n    process.nextTick(function() {\r\n      callback(err);\r\n    });\r\n  }) : this;\r\n};\r\n\r\n/**\r\n * Check the status of async request\r\n *\r\n * @method Metadata~AsyncResultLocator#check\r\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\r\n * @returns {Promise.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>}\r\n */\r\nAsyncResultLocator.prototype.check = function(callback) {\r\n  var self = this;\r\n  var meta = this._meta;\r\n  return this.then(function(results) {\r\n    var ids = _.isArray(results) ? _.map(results, function(res){ return res.id; }) : results.id;\r\n    self._ids = ids;\r\n    return meta.checkStatus(ids);\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Polling until async call status becomes complete or error\r\n *\r\n * @method Metadata~AsyncResultLocator#poll\r\n * @param {Number} interval - Polling interval in milliseconds\r\n * @param {Number} timeout - Polling timeout in milliseconds\r\n */\r\nAsyncResultLocator.prototype.poll = function(interval, timeout) {\r\n  var self = this;\r\n  var startTime = new Date().getTime();\r\n  var poll = function() {\r\n    var now = new Date().getTime();\r\n    if (startTime + timeout < now) {\r\n      var errMsg = \"Polling time out.\";\r\n      if (self._ids) {\r\n        errMsg += \" Process Id = \" + self._ids;\r\n      }\r\n      self.emit('error', new Error(errMsg));\r\n      return;\r\n    }\r\n    self.check().then(function(results) {\r\n      var done = true;\r\n      var resultArr = _.isArray(results) ? results : [ results ];\r\n      for (var i=0, len=resultArr.length; i<len; i++) {\r\n        var result = resultArr[i];\r\n        if (result && !result.done) {\r\n          self.emit('progress', result);\r\n          done = false;\r\n        }\r\n      }\r\n      if (done) {\r\n        self.emit('complete', results);\r\n      } else {\r\n        setTimeout(poll, interval);\r\n      }\r\n    }, function(err) {\r\n      self.emit('error', err);\r\n    });\r\n  };\r\n  setTimeout(poll, interval);\r\n};\r\n\r\n/**\r\n * Check and wait until the async requests become in completed status\r\n *\r\n * @method Metadata~AsyncResultLocator#complete\r\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\r\n * @returns {Promise.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>}\r\n */\r\nAsyncResultLocator.prototype.complete = function(callback) {\r\n  var deferred = Promise.defer();\r\n  this.on('complete', function(results) {\r\n    deferred.resolve(results);\r\n  });\r\n  this.on('error', function(err) {\r\n    deferred.reject(err);\r\n  });\r\n  var meta = this._meta;\r\n  this.poll(meta.pollInterval, meta.pollTimeout);\r\n  return deferred.promise.thenCall(callback);\r\n};\r\n\r\n/*--------------------------------------------*/\r\n/**\r\n * The locator class to track retreive() Metadata API call result\r\n *\r\n * @protected\r\n * @class Metadata~RetrieveResultLocator\r\n * @extends Metadata~AsyncResultLocator\r\n * @param {Metadata} meta - Metadata API object\r\n * @param {Promise.<Metadata~AsyncResult>} result - Promise object for async result of retrieve call()\r\n */\r\nvar RetrieveResultLocator = function(meta, result) {\r\n  RetrieveResultLocator.super_.call(this, meta, result);\r\n};\r\n\r\ninherits(RetrieveResultLocator, AsyncResultLocator);\r\n\r\n/**\r\n * @typedef {Object} Metadata~RetrieveResult\r\n * @prop {Array.<Metadata~FileProperties>} fileProperties - Contains information about the properties of each component in the .zip file, and the manifest file package.xml\r\n * @prop {String} id - ID of the component being retrieved\r\n * @prop {Array.<Object>} messages - Contains information about the success or failure of the retrieve() call\r\n * @prop {String} zipFile - The zip file returned by the retrieve request. Base 64-encoded binary data\r\n */\r\n\r\n/**\r\n * Check and wait until the async request becomes in completed status,\r\n * and retrieve the result data.\r\n *\r\n * @memthod Metadata~RetrieveResultLocator#complete\r\n * @param {Callback.<Metadata~RetrieveResult>} [callback] - Callback function\r\n * @returns {Promise.<Metadata~RetrieveResult>}\r\n */\r\nRetrieveResultLocator.prototype.complete = function(callback) {\r\n  var meta = this._meta;\r\n  return RetrieveResultLocator.super_.prototype.complete.call(this).then(function(result) {\r\n    return meta.checkRetrieveStatus(result.id);\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Change the retrieved result to Node.js readable stream\r\n *\r\n * @method Metadata~RetrieveResultLocator#stream\r\n * @returns {stream.Readable}\r\n */\r\nRetrieveResultLocator.prototype.stream = function() {\r\n  var self = this;\r\n  var resultStream = new stream.Readable();\r\n  var reading = false;\r\n  resultStream._read = function() {\r\n    if (reading) { return; }\r\n    reading = true;\r\n    self.complete(function(err, result) {\r\n      if (err) {\r\n        resultStream.emit('error', err);\r\n      } else {\r\n        resultStream.push(new Buffer(result.zipFile, 'base64'));\r\n        resultStream.push(null);\r\n      }\r\n    });\r\n  };\r\n  return resultStream;\r\n};\r\n\r\n/*--------------------------------------------*/\r\n/**\r\n * The locator class to track deploy() Metadata API call result\r\n *\r\n * @protected\r\n * @class Metadata~DeployResultLocator\r\n * @extends Metadata~AsyncResultLocator\r\n * @param {Metadata} meta - Metadata API object\r\n * @param {Promise.<Metadata~AsyncResult>} result - Promise object for async result of deploy() call\r\n */\r\nvar DeployResultLocator = function(meta, result) {\r\n  DeployResultLocator.super_.call(this, meta, result);\r\n};\r\n\r\ninherits(DeployResultLocator, AsyncResultLocator);\r\n\r\n/**\r\n * @typedef {Object} Metadata~DeployResult\r\n * @prop {String} id - ID of the component being deployed\r\n * @prop {Boolean} checkOnly - Indicates whether this deployment is being used to check the validity of the deployed files without making any changes in the organization or not\r\n * @prop {String} completedDate - Timestamp for when the deployment process ended\r\n * @prop {String} createdDate - Timestamp for when the deploy() call was received\r\n * @prop {Array.<Object>} [details] - Provides the details of a deployment that is in-progress or ended, if includeDetails is set to true in checkDeployStatus() call\r\n * @prop {Boolean} done - Indicates whether the server finished processing the deploy() call for the specified id\r\n * @prop {String} [errorMessage] - Message corresponding to the values in the errorStatusCode field\r\n * @prop {String} [errorStatusCode] - If an error occurred during the deploy() call, a status code is returned, and the message corresponding to the status code is returned in the errorMessagefield\r\n * @prop {Boolean} [ignoreWarnings] - Specifies whether a deployment should continue even if the deployment generates warnings\r\n * @prop {String} lastModifiedDate - Timestamp of the last update for the deployment process\r\n * @prop {Number} numberComponentErrors - The number of components that generated errors during this deployment\r\n * @prop {Number} numberComponentsDeployed - The number of components deployed in the deployment process\r\n * @prop {Number} numberComponentsTotal - The total number of components in the deployment\r\n * @prop {Number} numberTestErrors - The number of Apex tests that have generated errors during this deployment\r\n * @prop {Number} numberTestsCompleted - The number of completedApex tests for this deployment\r\n * @prop {Number} numberTestsTotal - The total number of Apex tests for this deployment\r\n * @prop {Boolean} [rollbackOnError] - Indicates whether any failure causes a complete rollback or not. Default is true.\r\n * @prop {String} startDate - Timestamp for when the deployment process began\r\n * @prop {String} status - Indicates the current state of the deployment\r\n * @prop {Boolean} success - Indicates whether the deployment was successful or not\r\n */\r\n\r\n/**\r\n * Check and wait until the async request becomes in completed status,\r\n * and retrieve the result data.\r\n *\r\n * @method Metadata~DeployResultLocator#complete\r\n * @param {Callback.<Metadata~DeployResult>} [callback] - Callback function\r\n * @returns {Promise.<Metadata~DeployResult>}\r\n */\r\nDeployResultLocator.prototype.complete = function(includeDetails, callback) {\r\n  if (_.isFunction(includeDetails)) {\r\n    callback = includeDetails;\r\n    includeDetails = false;\r\n  }\r\n  var meta = this._meta;\r\n  return DeployResultLocator.super_.prototype.complete.call(this).then(function(result) {\r\n    return meta.checkDeployStatus(result.id, includeDetails);\r\n  }).thenCall(callback);\r\n};\r\n\r\n\r\n/*--------------------------------------------*/\r\n/*\r\n * Register hook in connection instantiation for dynamically adding this API module features\r\n */\r\njsforce.on('connection:new', function(conn) {\r\n  conn.metadata = new Metadata(conn);\r\n});\r\n\r\n}).call(this,require('_process'),require(\"buffer\").Buffer)\r\n\r\n},{\"../core\":20,\"../promise\":27,\"../soap\":33,\"_process\":91,\"buffer\":41,\"events\":47,\"inherits\":84,\"lodash/core\":88,\"readable-stream\":107}],10:[function(require,module,exports){\r\n/**\r\n * @file Salesforce SOAP API\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar _ = require('lodash/core');\r\nvar jsforce = require('../core');\r\nvar SOAP = require('../soap');\r\n\r\n/**\r\n * API class for Partner SOAP call\r\n *\r\n * @class\r\n * @param {Connection} conn - Connection\r\n */\r\nvar SoapApi = module.exports = function(conn) {\r\n  this._conn = conn;\r\n};\r\n\r\n/**\r\n * Call SOAP Api (Partner) endpoint\r\n * @private\r\n */\r\nSoapApi.prototype._invoke = function(method, message, schema, callback) {\r\n  var soapEndpoint = new SOAP(this._conn, {\r\n    xmlns: \"urn:partner.soap.sforce.com\",\r\n    endpointUrl: this._conn.instanceUrl + \"/services/Soap/u/\" + this._conn.version\r\n  });\r\n  return soapEndpoint.invoke(method, message, { result: schema }).then(function(res) {\r\n    return res.result;\r\n  }).thenCall(callback);\r\n};\r\n\r\n\r\n/* */\r\nvar Schemas = {};\r\n\r\n/**\r\n * @typedef SoapApi~LeadConvert\r\n * @prop {String} convertedStatus - Status of converted lead\r\n * @prop {String} leadId - Lead record Id to convert\r\n * @prop {String} [accountId] - Account record Id to assign the converted record\r\n * @prop {String} [contactId] - Contact record Id to assign the converted record\r\n * @prop {Boolean} [doNotCreateOpportunity] - True if you don't want to create a new opportunity\r\n * @prop {String} [opportunityName] - Name of opportunity to create\r\n * @prop {Boolean} [overwriteLeadSource] - True if overwriting lead source\r\n * @prop {String} [ownerId] - Owner Id\r\n * @prop {Boolean} [sendNotificationEmail] - True if send notification email\r\n */\r\n/**\r\n * @typedef SoapApi~LeadConvertResult\r\n * @prop {String} leadId - Lead record Id to convert\r\n * @prop {String} [accountId] - Account record Id of converted lead\r\n * @prop {String} [contactId] - Contact record Id of converted lead\r\n * @prop {String} [opportunityId] - Opportunity record Id created in conversion\r\n * @prop {Boolean} success - True if successfully converted\r\n * @prop {Array.<Object>} errors - Error\r\n */\r\n/**\r\n * Converts a Lead into an Account, Contact, or (optionally) an Opportunity.\r\n *\r\n * @param {SoapApi~LeadConvert|Array.<SoapApi~LeadConvert>} leadConverts\r\n * @param {Callback.<SoapApi~LeadConvertResult|Array.<SoapApi~LeadConvertResult>>} [callback] - Callback function\r\n * @returns {Promise.<SoapApi~LeadConvertResult|Array.<SoapApi~LeadConvertResult>>}\r\n */\r\nSoapApi.prototype.convertLead = function(leadConverts, callback) {\r\n  var schema = _.isArray(leadConverts) ? [ Schemas.LeadConvertResult ] : Schemas.LeadConvertResult;\r\n  return this._invoke(\"convertLead\", { leadConverts: leadConverts }, schema, callback);\r\n};\r\nSchemas.LeadConvertResult = {\r\n  success: 'boolean',\r\n  errors: [],\r\n  leadId: 'string',\r\n  accountId: 'string',\r\n  contactId: 'string',\r\n  opportunityId: 'string'\r\n};\r\n\r\n/**\r\n * @typedef SoapApi~MergeRequest\r\n * @prop {Object} masterRecord - The merge destination record\r\n * @prop {Array.<String>} recordToMergeIds - Ids of records to merge\r\n */\r\n/**\r\n * @typedef SoapApi~MergeResult\r\n * @prop {Boolean} success - True if successfully merged\r\n * @prop {Array.<Object>} errors - Error\r\n * @prop {String} id - ID of the master record\r\n * @prop {Array.<String>} mergedRecordIds - ID of the records that were merged into the master record\r\n * @prop {Array.<String>} updatedRelatedIds - ID of all related records that were moved (re-parented) as a result of the merge\r\n */\r\n\r\n/**\r\n * Merge up to three records into one\r\n *\r\n * @param {SoapApi~MergeRequest|Array.<SoapApi~MergeRequest>} mergeRequests\r\n * @param {Callback.<SoapApi~MergeResult|Array.<SoapApi~MergeResult>>} [callback] - Callback function\r\n * @returns {Promise.<SoapApi~MergeResult|Array.<SoapApi~MergeResult>>}\r\n */\r\nSoapApi.prototype.merge = function(mergeRequests, callback) {\r\n  var schema = _.isArray(mergeRequests) ? [ Schemas.MergeResult ] : Schemas.MergeResult;\r\n  return this._invoke(\"merge\", { mergeRequests: mergeRequests }, schema, callback);\r\n};\r\nSchemas.MergeResult = {\r\n  success: 'boolean',\r\n  errors: [],\r\n  id: 'string',\r\n  mergedRecordIds: ['string'],\r\n  updatedRelatedIds: ['string']\r\n};\r\n\r\n\r\n/**\r\n * @typedef SoapApi~EmptyRecycleBinResult\r\n * @prop {String} id - ID of an sObject that you attempted to delete from the Recycle Bin\r\n * @prop {Boolean} success - Whether the call succeeded (true) or not (false) for this record\r\n * @prop {Array.<Object>} errors - Errors\r\n */\r\n/**\r\n * Delete records from the recycle bin immediately\r\n *\r\n * @param {Array.<String>} ids - Record ids to empty from recycle bin\r\n * @param {Callback.<Array.<SoapApi~EmptyRecycleBinResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<SoapApi~EmptyRecycleBinResult>>}\r\n */\r\nSoapApi.prototype.emptyRecycleBin = function(ids, callback) {\r\n  return this._invoke(\"emptyRecycleBin\", { ids: ids }, [ Schemas.EmptyRecycleBinResult ], callback);\r\n};\r\nSchemas.EmptyRecycleBinResult = {\r\n  id: 'string',\r\n  success: 'boolean',\r\n  errors: []\r\n};\r\n\r\n\r\n/**\r\n * @typedef SoapApi~DescribeTabSetResult\r\n * @prop {String} label - The display label for this standard or custom app\r\n * @prop {String} logoUrl - A fully qualified URL to the logo image associated with the standard or custom app\r\n * @prop {String} namespace - Namespace of application package\r\n * @prop {Boolean} selected - If true, then this standard or custom app is the user’s currently selected app\r\n * @prop {Array.<SoapApi~DescribeTab>} tabs - An array of tabs that are displayed for the specified standard app or custom app\r\n */\r\n/**\r\n * @typedef SoapApi~DescribeTab\r\n * @prop {Array.<Object>} colors - Array of color information used for a tab\r\n * @prop {Boolean} custom - true if this is a custom tab\r\n * @prop {String} iconUrl - The URL for the main 32 x 32 pixel icon for a tab\r\n * @prop {Array.<Object>} icons - Array of icon information used for a tab\r\n * @prop {String} label - The display label for this tab\r\n * @prop {String} miniIconUrl - The URL for the 16 x 16 pixel icon that represents a tab\r\n * @prop {String} name - The API name of the tab\r\n * @prop {String} sobjectName - The name of the sObject that is primarily displayed on this tab\r\n * @prop {String} url - A fully qualified URL for viewing this tab\r\n */\r\n/**\r\n * Returns information about the standard and custom apps available to the logged-in user\r\n *\r\n * @param {Callback.<Array.<SoapApi~DescribeTabSetResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<SoapApi~DescribeTabSetResult>>}\r\n */\r\nSoapApi.prototype.describeTabs = function(callback) {\r\n  return this._invoke(\"describeTabs\", {}, [ Schemas.DescribeTabSetResult ], callback);\r\n};\r\nSchemas.DescribeTabSetResult = {\r\n  label: 'string',\r\n  logoUrl: 'string',\r\n  namespace: 'string',\r\n  selected: 'boolean',\r\n  tabs: [{\r\n    colors: [{\r\n      theme: 'string',\r\n      color: 'string',\r\n      context: 'string'\r\n    }],\r\n    iconUrl: 'string',\r\n    icons: [{\r\n      theme: 'string',\r\n      height: 'number',\r\n      width: 'number',\r\n      url: 'string',\r\n      contentType: 'string'\r\n    }],\r\n    label: 'string',\r\n    custom: 'boolean',\r\n    miniIconUrl: 'string',\r\n    name: 'string',\r\n    sobjectName: 'string',\r\n    url: 'string'\r\n  }]\r\n};\r\n\r\n/**\r\n * Retrieves the current system timestamp (Coordinated Universal Time (UTC) time zone) from the API\r\n *\r\n * @typedef SoapApi~ServerTimestampResult\r\n * @prop {String} timestamp - Timestamp\r\n */\r\n/**\r\n * @param {Callback.<SoapApi~ServerTimestampResult>} [callback] - Callback function\r\n * @returns {Promise.<SoapApi~ServerTimestampResult>}\r\n */\r\nSoapApi.prototype.getServerTimestamp = function(callback) {\r\n  return this._invoke(\"getServerTimestamp\", {}, Schemas.GetServerTimestampResult, callback);\r\n};\r\nSchemas.GetServerTimestampResult = {\r\n  timestamp: 'string'\r\n};\r\n\r\n/**\r\n * @typedef SoapApi~UserInfoResult\r\n * @prop {Boolean} accessibilityMode\r\n * @prop {String} currencySymbol\r\n * @prop {Number} orgAttachmentFileSizeLimit\r\n * @prop {String} orgDefaultCurrencyIsoCode\r\n * @prop {String} orgDisallowHtmlAttachments\r\n * @prop {Boolean} orgHasPersonAccounts\r\n * @prop {String} organizationId\r\n * @prop {Boolean} organizationMultiCurrency\r\n * @prop {String} organizationName\r\n * @prop {String} profileId\r\n * @prop {String} roleId\r\n * @prop {Number} sessionSecondsValid\r\n * @prop {String} userDefaultCurrencyIsoCode\r\n * @prop {String} userEmail\r\n * @prop {String} userFullName\r\n * @prop {String} userId\r\n * @prop {String} userLanguage\r\n * @prop {String} userLocale\r\n * @prop {String} userName\r\n * @prop {String} userTimeZone\r\n * @prop {String} userType\r\n * @prop {String} userUiSkin\r\n */\r\n/**\r\n * Retrieves personal information for the user associated with the current session\r\n *\r\n * @param {Callback.<SoapApi~UserInfoResult>} [callback] - Callback function\r\n * @returns {Promise.<SoapApi~UserInfoResult>}\r\n */\r\nSoapApi.prototype.getUserInfo = function(callback) {\r\n  return this._invoke(\"getUserInfo\", {}, Schemas.GetUserInfoResult, callback);\r\n};\r\nSchemas.GetUserInfoResult = {\r\n  accessibilityMode: 'boolean',\r\n  currencySymbol: 'string',\r\n  orgAttachmentFileSizeLimit: 'number',\r\n  orgDefaultCurrencyIsoCode: 'string',\r\n  orgDisallowHtmlAttachments: 'boolean',\r\n  orgHasPersonAccounts: 'boolean',\r\n  organizationId: 'string',\r\n  organizationMultiCurrency: 'boolean',\r\n  organizationName: 'string',\r\n  profileId: 'string',\r\n  roleId: 'string',\r\n  sessionSecondsValid: 'number',\r\n  userDefaultCurrencyIsoCode: 'string',\r\n  userEmail: 'string',\r\n  userFullName: 'string',\r\n  userId: 'string',\r\n  userLanguage: 'string',\r\n  userLocale: 'string',\r\n  userName: 'string',\r\n  userTimeZone: 'string',\r\n  userType: 'string',\r\n  userUiSkin: 'string'\r\n};\r\n\r\n/**\r\n * Sets the specified user’s password to the specified value\r\n *\r\n * @param {String} userId - User Id to set password\r\n * @param {String} password - New password\r\n * @param {Callback.<String>} [callback] - Callback function\r\n * @returns {Promise.<String>}\r\n */\r\nSoapApi.prototype.setPassword = function(userId, password, callback) {\r\n  return this._invoke(\"setPassword\", { userId: userId, password: password }, callback);\r\n};\r\n\r\n/**\r\n * @typedef SoapApi~ResetPasswordResult\r\n * @prop {String} password\r\n */\r\n/**\r\n * Resets the specified user’s password\r\n *\r\n * @param {String} userId - User Id to set password\r\n * @param {String} password - New password\r\n * @param {Callback.<SoapApi~ResetPasswordResult>} [callback] - Callback function\r\n * @returns {Promise.<SoapApi~ResetPasswordResult>}\r\n */\r\nSoapApi.prototype.resetPassword = function(userId, callback) {\r\n  return this._invoke(\"resetPassword\", { userId: userId }, callback);\r\n};\r\n\r\n/**\r\n * Adds one or more new records to your organization’s data\r\n *\r\n * @param {Array.<Object>} sObjects - Records to insert\r\n * @param {Callback.<SoapApi~SaveResult>} [callback] - Callback function\r\n * @returns {Promise.<SoapApi~SaveResult>}\r\n */\r\nSoapApi.prototype.create = function(sObjects, callback) {\r\n  var schema = _.isArray(sObjects) ? [ Schemas.SaveResult ] : Schemas.SaveResult;\r\n  var args = {\r\n    '@xmlns' : 'urn:partner.soap.sforce.com',\r\n    '@xmlns:ns1' : 'sobject.partner.soap.sforce.com',\r\n    'ns1:sObjects' : sObjects\r\n  };\r\n  return this._invoke(\"create\", args, schema, callback);\r\n};\r\n\r\n/**\r\n * Updates one or more existing records in your organization’s data.\r\n *\r\n * @param {Array.<Object>} sObjects - Records to update\r\n * @param {Callback.<SoapApi~SaveResult>} [callback] - Callback function\r\n * @returns {Promise.<SoapApi~SaveResult>}\r\n */\r\nSoapApi.prototype.update = function(sObjects, callback) {\r\n  var schema = _.isArray(sObjects) ? [ Schemas.SaveResult ] : Schemas.SaveResult;\r\n  var args = {\r\n    '@xmlns' : 'urn:partner.soap.sforce.com',\r\n    '@xmlns:ns1' : 'sobject.partner.soap.sforce.com',\r\n    'ns1:sObjects' : sObjects\r\n  };\r\n  return this._invoke(\"update\", args, schema, callback);\r\n};\r\n\r\nSchemas.SaveResult = {\r\n  success: 'boolean',\r\n  errors: [],\r\n  id: 'string'\r\n};\r\n\r\n/**\r\n * Creates new records and updates existing records in your organization’s data.\r\n *\r\n * @param {Array.<Object>} sObjects - Records to upsert\r\n * @param {Callback.<SoapApi~UpsertResult>} [callback] - Callback function\r\n * @returns {Promise.<SoapApi~UpsertResult>}\r\n */\r\nSoapApi.prototype.upsert = function(externalIdFieldName, sObjects, callback) {\r\n  var schema = _.isArray(sObjects) ? [ Schemas.UpsertResult ] : Schemas.UpsertResult;\r\n  var args = {\r\n    '@xmlns' : 'urn:partner.soap.sforce.com',\r\n    '@xmlns:ns1' : 'sobject.partner.soap.sforce.com',\r\n    'ns1:externalIDFieldName' : externalIdFieldName,\r\n    'ns1:sObjects' : sObjects\r\n  };\r\n  return this._invoke(\"upsert\", args, schema, callback);\r\n};\r\n\r\nSchemas.UpsertResult = {\r\n  created: 'boolean',\r\n  success: 'boolean',\r\n  errors: [],\r\n  id: 'string'\r\n};\r\n\r\n/**\r\n * Deletes one or more records from your organization’s data\r\n *\r\n * @param {Array.<Object>} ids - Id of records to delete\r\n * @param {Callback.<SoapApi~DeleteResult>} [callback] - Callback function\r\n * @returns {Promise.<SoapApi~DeleteResult>}\r\n */\r\nSoapApi.prototype.delete = function(ids, callback) {\r\n  var schema = _.isArray(ids) ? [ Schemas.DeleteResult ] : Schemas.DeleteResult;\r\n  var args = {\r\n    '@xmlns' : 'urn:partner.soap.sforce.com',\r\n    '@xmlns:ns1' : 'sobject.partner.soap.sforce.com',\r\n    'ns1:ids' : ids\r\n  };\r\n  return this._invoke(\"delete\", args, schema, callback);\r\n};\r\n\r\nSchemas.DeleteResult = {\r\n  success: 'boolean',\r\n  errors: [],\r\n  id: 'string'\r\n};\r\n\r\n\r\n/*--------------------------------------------*/\r\n/*\r\n * Register hook in connection instantiation for dynamically adding this API module features\r\n */\r\njsforce.on('connection:new', function(conn) {\r\n  conn.soap = new SoapApi(conn);\r\n});\r\n\r\n\r\nmodule.exports = SoapApi;\r\n\r\n},{\"../core\":20,\"../soap\":33,\"lodash/core\":88}],11:[function(require,module,exports){\r\n/**\r\n * Faye Client extensions: https://faye.jcoglan.com/browser/extensions.html\r\n *\r\n * For use with Streaming.prototype.createClient()\r\n**/\r\nvar StreamingExtension = {};\r\n\r\n/**\r\n * Constructor for an auth failure detector extension\r\n *\r\n * Based on new feature released with Salesforce Spring '18:\r\n * https://releasenotes.docs.salesforce.com/en-us/spring18/release-notes/rn_messaging_cometd_auth_validation.htm?edition=&impact=\r\n *\r\n * Example triggering error message:\r\n *\r\n * ```\r\n * {\r\n *   \"ext\":{\r\n *     \"sfdc\":{\"failureReason\":\"401::Authentication invalid\"},\r\n *     \"replay\":true},\r\n *   \"advice\":{\"reconnect\":\"none\"},\r\n *   \"channel\":\"/meta/handshake\",\r\n *   \"error\":\"403::Handshake denied\",\r\n *   \"successful\":false\r\n * }\r\n * ```\r\n *\r\n * Example usage:\r\n *\r\n * ```javascript\r\n * const conn = new jsforce.Connection({ … });\r\n * \r\n * const channel = \"/event/My_Event__e\";\r\n * \r\n * // Exit the Node process when auth fails\r\n * const exitCallback = () => process.exit(1);\r\n * const authFailureExt = new jsforce.StreamingExtension.AuthFailure(exitCallback);\r\n * \r\n * const fayeClient = conn.streaming.createClient([ authFailureExt ]);\r\n * \r\n * const subscription = fayeClient.subscribe(channel, data => {\r\n *   console.log('topic received data', data);\r\n * });\r\n * \r\n * subscription.cancel();\r\n * ```\r\n *\r\n * @param {Function} failureCallback - Invoked when authentication becomes invalid\r\n */\r\nStreamingExtension.AuthFailure = function(failureCallback) {\r\n  this.incoming = function(message, callback) {\r\n    if (\r\n      (message.channel === '/meta/connect' ||\r\n        message.channel === '/meta/handshake')\r\n      && message.advice\r\n      && message.advice.reconnect == 'none'\r\n    ) {\r\n      failureCallback(message);\r\n    } else {\r\n      callback(message);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Constructor for a durable streaming replay extension\r\n *\r\n * Modified from original Salesforce demo source code:\r\n * https://github.com/developerforce/SalesforceDurableStreamingDemo/blob/3d4a56eac956f744ad6c22e6a8141b6feb57abb9/staticresources/cometdReplayExtension.resource\r\n * \r\n * Example usage:\r\n *\r\n * ```javascript\r\n * const conn = new jsforce.Connection({ … });\r\n * \r\n * const channel = \"/event/My_Event__e\";\r\n * const replayId = -2; // -2 is all retained events\r\n * \r\n * const replayExt = new jsforce.StreamingExtension.Replay(channel, replayId);\r\n * \r\n * const fayeClient = conn.streaming.createClient([ replayExt ]);\r\n * \r\n * const subscription = fayeClient.subscribe(channel, data => {\r\n *   console.log('topic received data', data);\r\n * });\r\n * \r\n * subscription.cancel();\r\n * ```\r\n */\r\nStreamingExtension.Replay = function(channel, replayId) {\r\n  var REPLAY_FROM_KEY = \"replay\";\r\n  \r\n  var _extensionEnabled = replayId != null ? true : false;\r\n  var _replay = replayId;\r\n  var _channel = channel;\r\n\r\n  this.setExtensionEnabled = function(extensionEnabled) {\r\n    _extensionEnabled = extensionEnabled;\r\n  }\r\n\r\n  this.setReplay = function (replay) {\r\n    _replay = parseInt(replay, 10);\r\n  }\r\n\r\n  this.setChannel = function(channel) {\r\n    _channel = channel;\r\n  }\r\n\r\n  this.incoming = function(message, callback) {\r\n    if (message.channel === '/meta/handshake') {\r\n      if (message.ext && message.ext[REPLAY_FROM_KEY] == true) {\r\n        _extensionEnabled = true;\r\n      }\r\n    } else if (message.channel === _channel && message.data && message.data.event && message.data.event.replayId) {\r\n      _replay = message.data.event.replayId;\r\n    }\r\n    callback(message);\r\n  }\r\n  \r\n  this.outgoing = function(message, callback) {\r\n    if (message.channel === '/meta/subscribe') {\r\n      if (_extensionEnabled) {\r\n        if (!message.ext) { message.ext = {}; }\r\n\r\n        var replayFromMap = {};\r\n        replayFromMap[_channel] = _replay;\r\n\r\n        // add \"ext : { \"replay\" : { CHANNEL : REPLAY_VALUE }}\" to subscribe message\r\n        message.ext[REPLAY_FROM_KEY] = replayFromMap;\r\n      }\r\n    }\r\n    callback(message);\r\n  };\r\n};\r\n\r\nmodule.exports = StreamingExtension;\r\n\r\n},{}],12:[function(require,module,exports){\r\n/**\r\n * @file Manages Streaming APIs\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar events = require('events'),\r\n    inherits = require('inherits'),\r\n    _ = require('lodash/core'),\r\n    Faye   = require('faye'),\r\n    StreamingExtension = require('./streaming-extension'),\r\n    jsforce = require('../core');\r\n\r\n/**\r\n * Streaming API topic class\r\n *\r\n * @class Streaming~Topic\r\n * @param {Streaming} steaming - Streaming API object\r\n * @param {String} name - Topic name\r\n */\r\nvar Topic = function(streaming, name) {\r\n  this._streaming = streaming;\r\n  this.name = name;\r\n};\r\n\r\n/**\r\n * @typedef {Object} Streaming~StreamingMessage\r\n * @prop {Object} event\r\n * @prop {Object} event.type - Event type\r\n * @prop {Record} sobject - Record information\r\n */\r\n/**\r\n * Subscribe listener to topic\r\n *\r\n * @method Streaming~Topic#subscribe\r\n * @param {Callback.<Streaming~StreamingMesasge>} listener - Streaming message listener\r\n * @returns {Subscription} - Faye subscription object\r\n */\r\nTopic.prototype.subscribe = function(listener) {\r\n  return this._streaming.subscribe(this.name, listener);\r\n};\r\n\r\n/**\r\n * Unsubscribe listener from topic\r\n *\r\n * @method Streaming~Topic#unsubscribe\r\n * @param {Callback.<Streaming~StreamingMesasge>} listener - Streaming message listener\r\n * @returns {Streaming~Topic}\r\n */\r\nTopic.prototype.unsubscribe = function(listener) {\r\n  this._streaming.unsubscribe(this.name, listener);\r\n  return this;\r\n};\r\n\r\n/*--------------------------------------------*/\r\n\r\n/**\r\n * Streaming API Generic Streaming Channel\r\n *\r\n * @class Streaming~Channel\r\n * @param {Streaming} steaming - Streaming API object\r\n * @param {String} name - Channel name (starts with \"/u/\")\r\n */\r\nvar Channel = function(streaming, name) {\r\n  this._streaming = streaming;\r\n  this._name = name;\r\n};\r\n\r\n/**\r\n * Subscribe to channel\r\n *\r\n * @param {Callback.<Streaming~StreamingMessage>} listener - Streaming message listener\r\n * @returns {Subscription} - Faye subscription object\r\n */\r\nChannel.prototype.subscribe = function(listener) {\r\n  return this._streaming.subscribe(this._name, listener);\r\n};\r\n\r\nChannel.prototype.unsubscribe = function(listener) {\r\n  this._streaming.unsubscribe(this._name, listener);\r\n  return this;\r\n};\r\n\r\nChannel.prototype.push = function(events, callback) {\r\n  var isArray = _.isArray(events);\r\n  events = isArray ? events : [ events ];\r\n  var conn = this._streaming._conn;\r\n  if (!this._id) {\r\n    this._id = conn.sobject('StreamingChannel').findOne({ Name: this._name }, 'Id')\r\n      .then(function(rec) { return rec.Id });\r\n  }\r\n  return this._id.then(function(id) {\r\n    var channelUrl = '/sobjects/StreamingChannel/' + id + '/push';\r\n    return conn.requestPost(channelUrl, { pushEvents: events });\r\n  }).then(function(rets) {\r\n    return isArray ? rets : rets[0];\r\n  }).thenCall(callback);\r\n};\r\n\r\n/*--------------------------------------------*/\r\n\r\n/**\r\n * Streaming API class\r\n *\r\n * @class\r\n * @extends events.EventEmitter\r\n * @param {Connection} conn - Connection object\r\n */\r\nvar Streaming = function(conn) {\r\n  this._conn = conn;\r\n};\r\n\r\ninherits(Streaming, events.EventEmitter);\r\n\r\n/** @private **/\r\nStreaming.prototype._createClient = function(forChannelName, extensions) {\r\n  // forChannelName is advisory, for an API workaround. It does not restrict or select the channel.\r\n  var needsReplayFix = typeof forChannelName === 'string' && forChannelName.indexOf('/u/') === 0;\r\n  var endpointUrl = [\r\n    this._conn.instanceUrl,\r\n    // special endpoint \"/cometd/replay/xx.x\" is only available in 36.0.\r\n    // See https://releasenotes.docs.salesforce.com/en-us/summer16/release-notes/rn_api_streaming_classic_replay.htm\r\n    \"cometd\" + (needsReplayFix === true && this._conn.version === \"36.0\" ? \"/replay\" : \"\"),\r\n    this._conn.version\r\n  ].join('/');\r\n  var fayeClient = new Faye.Client(endpointUrl, {});\r\n  fayeClient.setHeader('Authorization', 'OAuth '+this._conn.accessToken);\r\n  if (extensions instanceof Array) {\r\n    extensions.forEach(function(extension) {\r\n      fayeClient.addExtension(extension);\r\n    });\r\n  }\r\n  if (fayeClient._dispatcher.getConnectionTypes().indexOf('callback-polling') === -1) {\r\n    // prevent streaming API server error\r\n    fayeClient._dispatcher.selectTransport('long-polling');\r\n    fayeClient._dispatcher._transport.batching = false;\r\n  }\r\n  return fayeClient;\r\n};\r\n\r\n/** @private **/\r\nStreaming.prototype._getFayeClient = function(channelName) {\r\n  var isGeneric = channelName.indexOf('/u/') === 0;\r\n  var clientType = isGeneric ? 'generic' : 'pushTopic';\r\n  if (!this._fayeClients || !this._fayeClients[clientType]) {\r\n    this._fayeClients = this._fayeClients || {};\r\n    this._fayeClients[clientType] = this._createClient(channelName);\r\n  }\r\n  return this._fayeClients[clientType];\r\n};\r\n\r\n\r\n/**\r\n * Get named topic\r\n *\r\n * @param {String} name - Topic name\r\n * @returns {Streaming~Topic}\r\n */\r\nStreaming.prototype.topic = function(name) {\r\n  this._topics = this._topics || {};\r\n  var topic = this._topics[name] =\r\n    this._topics[name] || new Topic(this, name);\r\n  return topic;\r\n};\r\n\r\n/**\r\n * Get Channel for Id\r\n * @param {String} channelId - Id of StreamingChannel object\r\n * @returns {Streaming~Channel}\r\n */\r\nStreaming.prototype.channel = function(channelId) {\r\n  return new Channel(this, channelId);\r\n};\r\n\r\n/**\r\n * Subscribe topic/channel\r\n *\r\n * @param {String} name - Topic name\r\n * @param {Callback.<Streaming~StreamingMessage>} listener - Streaming message listener\r\n * @returns {Subscription} - Faye subscription object\r\n */\r\nStreaming.prototype.subscribe = function(name, listener) {\r\n  var channelName = name.indexOf('/') === 0 ? name : '/topic/' + name;\r\n  var fayeClient = this._getFayeClient(channelName);\r\n  return fayeClient.subscribe(channelName, listener);\r\n};\r\n\r\n/**\r\n * Unsubscribe topic\r\n *\r\n * @param {String} name - Topic name\r\n * @param {Callback.<Streaming~StreamingMessage>} listener - Streaming message listener\r\n * @returns {Streaming}\r\n */\r\nStreaming.prototype.unsubscribe = function(name, listener) {\r\n  var channelName = name.indexOf('/') === 0 ? name : '/topic/' + name;\r\n  var fayeClient = this._getFayeClient(channelName);\r\n  fayeClient.unsubscribe(channelName, listener);\r\n  return this;\r\n};\r\n\r\n\r\n/**\r\n * Create a Streaming client, optionally with extensions\r\n *\r\n * See Faye docs for implementation details: https://faye.jcoglan.com/browser/extensions.html\r\n *\r\n * Example usage:\r\n * \r\n * ```javascript\r\n * // Establish a Salesforce connection. (Details elided)\r\n * const conn = new jsforce.Connection({ … });\r\n * \r\n * const fayeClient = conn.streaming.createClient();\r\n * \r\n * const subscription = fayeClient.subscribe(channel, data => {\r\n *   console.log('topic received data', data);\r\n * });\r\n * \r\n * subscription.cancel();\r\n * ```\r\n * \r\n * Example with extensions, using Replay & Auth Failure extensions in a server-side Node.js app:\r\n * \r\n * ```javascript\r\n * // Establish a Salesforce connection. (Details elided)\r\n * const conn = new jsforce.Connection({ … });\r\n * \r\n * const channel = \"/event/My_Event__e\";\r\n * const replayId = -2; // -2 is all retained events\r\n * \r\n * const exitCallback = () => process.exit(1);\r\n * const authFailureExt = new jsforce.StreamingExtension.AuthFailure(exitCallback);\r\n * \r\n * const replayExt = new jsforce.StreamingExtension.Replay(channel, replayId);\r\n * \r\n * const fayeClient = conn.streaming.createClient([\r\n *   authFailureExt,\r\n *   replayExt\r\n * ]);\r\n * \r\n * const subscription = fayeClient.subscribe(channel, data => {\r\n *   console.log('topic received data', data);\r\n * });\r\n * \r\n * subscription.cancel();\r\n * ```\r\n * \r\n * @param {Array} Extensions - Optional, extensions to apply to the Faye client\r\n * @returns {FayeClient} - Faye client object\r\n */\r\nStreaming.prototype.createClient = function(extensions) {\r\n  return this._createClient(null, extensions);\r\n};\r\n\r\n/*--------------------------------------------*/\r\n/*\r\n * Register hook in connection instantiation for dynamically adding this API module features\r\n */\r\njsforce.on('connection:new', function(conn) {\r\n  conn.streaming = new Streaming(conn);\r\n});\r\n\r\n/*\r\n * \r\n */\r\njsforce.StreamingExtension = StreamingExtension;\r\n\r\nmodule.exports = Streaming;\r\n\r\n},{\"../core\":20,\"./streaming-extension\":11,\"events\":47,\"faye\":48,\"inherits\":84,\"lodash/core\":88}],13:[function(require,module,exports){\r\n/**\r\n * @file Manages Tooling APIs\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar jsforce = require('../core'),\r\n    _     = require('lodash/core'),\r\n    Cache = require('../cache');\r\n\r\n/**\r\n * API class for Tooling API call\r\n *\r\n * @class\r\n * @param {Connection} conn - Connection\r\n */\r\nvar Tooling = function(conn) {\r\n  this._conn = conn;\r\n  this._logger = conn._logger;\r\n  var delegates = [\r\n    \"query\",\r\n    \"queryMore\",\r\n    \"create\",\r\n    \"insert\",\r\n    \"retrieve\",\r\n    \"update\",\r\n    \"upsert\",\r\n    \"del\",\r\n    \"delete\",\r\n    \"destroy\",\r\n    \"describe\",\r\n    \"describeGlobal\",\r\n    \"sobject\"\r\n  ];\r\n  delegates.forEach(function(method) {\r\n    this[method] = conn.constructor.prototype[method];\r\n  }, this);\r\n\r\n  this.cache = new Cache();\r\n\r\n  var cacheOptions = {\r\n    key: function(type) { return type ? \"describe.\" + type : \"describe\"; }\r\n  };\r\n  this.describe$ = this.cache.makeCacheable(this.describe, this, cacheOptions);\r\n  this.describe = this.cache.makeResponseCacheable(this.describe, this, cacheOptions);\r\n  this.describeSObject$ = this.describe$;\r\n  this.describeSObject = this.describe;\r\n\r\n  cacheOptions = { key: 'describeGlobal' };\r\n  this.describeGlobal$ = this.cache.makeCacheable(this.describeGlobal, this, cacheOptions);\r\n  this.describeGlobal = this.cache.makeResponseCacheable(this.describeGlobal, this, cacheOptions);\r\n\r\n  this.initialize();\r\n};\r\n\r\n/**\r\n * Initialize tooling API\r\n * @protected\r\n */\r\nTooling.prototype.initialize = function() {\r\n  this.sobjects = {};\r\n  this.cache.clear();\r\n  this.cache.get('describeGlobal').removeAllListeners('value');\r\n  this.cache.get('describeGlobal').on('value', _.bind(function(res) {\r\n    if (res.result) {\r\n      var types = _.map(res.result.sobjects, function(so) { return so.name; });\r\n      types.forEach(this.sobject, this);\r\n    }\r\n  }, this));\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nTooling.prototype._baseUrl = function() {\r\n  return this._conn._baseUrl() + \"/tooling\";\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nTooling.prototype.request = function() {\r\n  return this._conn.request.apply(this._conn, arguments);\r\n};\r\n\r\n/**\r\n * Execute query by using SOQL\r\n *\r\n * @param {String} soql - SOQL string\r\n * @param {Callback.<QueryResult>} [callback] - Callback function\r\n * @returns {Query.<QueryResult>}\r\n */\r\n/**\r\n * Query next record set by using query locator\r\n *\r\n * @method Tooling#query\r\n * @param {String} locator - Next record set locator\r\n * @param {Callback.<QueryResult>} [callback] - Callback function\r\n * @returns {Query.<QueryResult>}\r\n */\r\n/**\r\n * Retrieve specified records\r\n *\r\n * @method Tooling#queryMore\r\n * @param {String} type - SObject Type\r\n * @param {String|Array.<String>} ids - A record ID or array of record IDs\r\n * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function\r\n * @returns {Promise.<Record|Array.<Record>>}\r\n */\r\n\r\n/**\r\n * Synonym of Tooling#create()\r\n *\r\n * @method Tooling#insert\r\n * @param {String} type - SObject Type\r\n * @param {Object|Array.<Object>} records - A record or array of records to create\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n/**\r\n * Create records\r\n *\r\n * @method Tooling#create\r\n * @param {String} type - SObject Type\r\n * @param {Record|Array.<Record>} records - A record or array of records to create\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n\r\n/**\r\n * Update records\r\n *\r\n * @method Tooling#update\r\n * @param {String} type - SObject Type\r\n * @param {Record|Array.<Record>} records - A record or array of records to update\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n\r\n/**\r\n * Upsert records\r\n *\r\n * @method Tooling#upsert\r\n * @param {String} type - SObject Type\r\n * @param {Record|Array.<Record>} records - Record or array of records to upsert\r\n * @param {String} extIdField - External ID field name\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n\r\n/**\r\n * Synonym of Tooling#destroy()\r\n *\r\n * @method Tooling#delete\r\n * @param {String} type - SObject Type\r\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n/**\r\n * Synonym of Tooling#destroy()\r\n *\r\n * @method Tooling#del\r\n * @param {String} type - SObject Type\r\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n/**\r\n * Delete records\r\n *\r\n * @method Tooling#destroy\r\n * @param {String} type - SObject Type\r\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n\r\n/**\r\n * Synonym of Tooling#describe()\r\n *\r\n * @method Tooling#describeSObject\r\n * @param {String} type - SObject Type\r\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\r\n * @returns {Promise.<DescribeSObjectResult>}\r\n */\r\n/**\r\n * Describe SObject metadata\r\n *\r\n * @method Tooling#describe\r\n * @param {String} type - SObject Type\r\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\r\n * @returns {Promise.<DescribeSObjectResult>}\r\n */\r\n\r\n/**\r\n * Describe global SObjects\r\n *\r\n * @method Tooling#describeGlobal\r\n * @param {Callback.<DescribeGlobalResult>} [callback] - Callback function\r\n * @returns {Promise.<DescribeGlobalResult>}\r\n */\r\n\r\n/**\r\n * Get SObject instance\r\n *\r\n * @method Tooling#sobject\r\n * @param {String} type - SObject Type\r\n * @returns {SObject}\r\n */\r\n\r\n/**\r\n * @typedef {Object} Tooling~ExecuteAnonymousResult\r\n * @prop {Boolean} compiled - Flag if the query is compiled successfully\r\n * @prop {String} compileProblem - Error reason in compilation\r\n * @prop {Boolean} success - Flag if the code is executed successfully\r\n * @prop {Number} line - Line number for the error\r\n * @prop {Number} column - Column number for the error\r\n * @prop {String} exceptionMessage - Exception message\r\n * @prop {String} exceptionStackTrace - Exception stack trace\r\n */\r\n/**\r\n * Executes Apex code anonymously\r\n *\r\n * @param {String} body - Anonymous Apex code\r\n * @param {Callback.<Tooling~ExecuteAnonymousResult>} [callback] - Callback function\r\n * @returns {Promise.<Tooling~ExecuteAnonymousResult>}\r\n */\r\nTooling.prototype.executeAnonymous = function(body, callback) {\r\n  var url = this._baseUrl() + \"/executeAnonymous?anonymousBody=\" + encodeURIComponent(body);\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Executes Apex tests asynchronously\r\n *\r\n * @param {Array.<String>} classids - Comma separated list of class IDs\r\n * @param {Callback.<Tooling~ExecuteAnonymousResult>} [callback] - Callback function\r\n * @returns {Promise.<Tooling~ExecuteAnonymousResult>}\r\n */\r\nTooling.prototype.runTestsAsynchronous = function(classids, callback) {\r\n  var url = this._baseUrl() + \"/runTestsAsynchronous/\";\r\n  return this._conn.requestPost(url, {classids : classids.join(',')}, undefined, callback);\r\n};\r\n\r\n/**\r\n * Executes Apex tests synchronously\r\n *\r\n * @param {Array.<String>} classnames - Comma separated list of class Names\r\n * @param {Callback.<Tooling~ExecuteAnonymousResult>} [callback] - Callback function\r\n * @returns {Promise.<Tooling~ExecuteAnonymousResult>}\r\n */\r\nTooling.prototype.runTestsSynchronous = function(classnames, callback) {\r\n  var url = this._baseUrl() + \"/runTestsSynchronous/\";\r\n  return this._conn.requestPost(url, {classnames : classnames.join(',')}, undefined, callback);\r\n};\r\n\r\n/**\r\n * @typedef {Object} Tooling~CompletionsResult\r\n * @prop {Object} publicDeclarations\r\n */\r\n/**\r\n * Retrieves available code completions of the referenced type\r\n *\r\n * @param {String} [type] - completion type (default 'apex')\r\n * @param {Callback.<Tooling~CompletionsResult>} [callback] - Callback function\r\n * @returns {Promise.<Tooling~CompletionsResult>}\r\n */\r\nTooling.prototype.completions = function(type, callback) {\r\n  if (!_.isString(type)) {\r\n    callback = type;\r\n    type = 'apex';\r\n  }\r\n  var url = this._baseUrl() + \"/completions?type=\" + encodeURIComponent(type);\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n\r\n/*--------------------------------------------*/\r\n/*\r\n * Register hook in connection instantiation for dynamically adding this API module features\r\n */\r\njsforce.on('connection:new', function(conn) {\r\n  conn.tooling = new Tooling(conn);\r\n});\r\n\r\n\r\nmodule.exports = Tooling;\r\n\r\n},{\"../cache\":18,\"../core\":20,\"lodash/core\":88}],14:[function(require,module,exports){\r\n/*global Sfdc */\r\n'use strict';\r\n\r\nvar Duplex = require('readable-stream').Duplex,\r\n    _ = require('lodash/core');\r\n\r\nfunction parseHeaders(hs) {\r\n  var headers = {};\r\n  hs.split(/\\n/).forEach(function(line) {\r\n    var pair = line.split(/\\s*:\\s*/);\r\n    var name = pair[0].toLowerCase();\r\n    var value = pair[1];\r\n    headers[name] = value;\r\n  });\r\n  return headers;\r\n}\r\n\r\nmodule.exports = {\r\n\r\n  supported: typeof Sfdc === 'object' && typeof Sfdc.canvas !== 'undefined',\r\n\r\n  createRequest: function(signedRequest) {\r\n    return function(params, callback) {\r\n      var response;\r\n      var str = new Duplex();\r\n      str._read = function(size) {\r\n        if (response) {\r\n          str.push(response.body);\r\n        }\r\n      };\r\n      var bufs = [];\r\n      var sent = false;\r\n      str._write = function(chunk, encoding, callback) {\r\n        bufs.push(chunk.toString(encoding));\r\n        callback();\r\n      };\r\n      str.on('finish', function() {\r\n        if (!sent) {\r\n          send(bufs.join(''));\r\n          sent = true;\r\n        }\r\n      });\r\n      if (params.body || params.body === \"\" || !/^(put|post|patch)$/i.test(params.method)) {\r\n        send(params.body);\r\n        sent = true;\r\n      }\r\n\r\n      function send(body) {\r\n        var settings = {\r\n          client: signedRequest.client,\r\n          method: params.method,\r\n          data: body\r\n        };\r\n        if (params.headers) {\r\n          settings.headers = {};\r\n          for (var name in params.headers) {\r\n            if (name.toLowerCase() === 'content-type') {\r\n              settings.contentType = params.headers[name];\r\n            } else {\r\n              settings.headers[name] = params.headers[name];\r\n            }\r\n          }\r\n        }\r\n        settings.success = function(data) {\r\n          var headers = parseHeaders(data.responseHeaders);\r\n          var body = data.payload;\r\n          if (!_.isString(body)) {\r\n            body = JSON.stringify(body);\r\n          }\r\n          response = {\r\n            statusCode : data.status,\r\n            headers: headers,\r\n            body: body\r\n          };\r\n          if (callback) {\r\n            callback(null, response, response.body);\r\n          }\r\n          str.end();\r\n        };\r\n        settings.failure = function(err) {\r\n          if (callback) {\r\n            callback(err);\r\n          }\r\n        };\r\n        Sfdc.canvas.client.ajax(params.url, settings);\r\n      }\r\n      return str;\r\n    };\r\n  }\r\n};\r\n\r\n},{\"lodash/core\":88,\"readable-stream\":107}],15:[function(require,module,exports){\r\n/**\r\n * @file Browser client connection management class\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar events = require('events'),\r\n    inherits = require('inherits'),\r\n    qs = require('querystring'),\r\n    _ = require('lodash/core'),\r\n    Connection = require('../connection'),\r\n    OAuth2 = require('../oauth2');\r\n\r\n/**\r\n * @private\r\n */\r\nfunction popupWin(url, w, h) {\r\n  var left = (screen.width/2)-(w/2);\r\n  var top = (screen.height/2)-(h/2);\r\n  return window.open(url, null, 'location=yes,toolbar=no,status=no,menubar=no,width='+w+',height='+h+',top='+top+',left='+left);\r\n}\r\n\r\nfunction handleCallbackResponse() {\r\n  var res = checkCallbackResponse();\r\n  var state = localStorage.getItem('jsforce_state');\r\n  if (res && state && res.body.state === state) {\r\n    localStorage.removeItem('jsforce_state');\r\n    var states = state.split('.');\r\n    var prefix = states[0], promptType = states[1];\r\n    var cli = new Client(prefix);\r\n    if (res.success) {\r\n      cli._storeTokens(res.body);\r\n      location.hash = '';\r\n    } else {\r\n      cli._storeError(res.body);\r\n    }\r\n    if (promptType === 'popup') { window.close(); }\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction checkCallbackResponse() {\r\n  var params;\r\n  if (window.location.hash) {\r\n    params = qs.parse(window.location.hash.substring(1));\r\n    if (params.access_token) {\r\n      return { success: true, body: params };\r\n    }\r\n  } else if (window.location.search) {\r\n    params = qs.parse(window.location.search.substring(1));\r\n    if (params.error) {\r\n      return { success: false, body: params };\r\n    }\r\n  }\r\n}\r\n\r\n/** @private **/\r\nvar clientIdx = 0;\r\n\r\n\r\n/**\r\n * @class\r\n * @todo add document\r\n */\r\nvar Client = function(prefix) {\r\n  this._prefix = prefix || 'jsforce' + clientIdx++;\r\n  this.connection = null;\r\n};\r\n\r\ninherits(Client, events.EventEmitter);\r\n\r\n/**\r\n *\r\n */\r\nClient.prototype.init = function(config) {\r\n  if (handleCallbackResponse()) { return; }\r\n  this.config = config;\r\n  this.connection = new Connection(config);\r\n  var tokens = this._getTokens();\r\n  if (tokens) {\r\n    this.connection.initialize(tokens);\r\n    var self = this;\r\n    setTimeout(function() {\r\n      self.emit('connect', self.connection);\r\n    }, 10);\r\n  }\r\n};\r\n\r\n/**\r\n *\r\n */\r\nClient.prototype.login = function(options, callback) {\r\n  if (_.isFunction(options)) {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  callback = callback || function(){ };\r\n  _.extend(options, this.config);\r\n  var self = this;\r\n  this._prompt(options, callback);\r\n};\r\n\r\n\r\nClient.prototype._prompt = function(options, callback) {\r\n  var self = this;\r\n  var oauth2 = new OAuth2(options);\r\n  var rand = Math.random().toString(36).substring(2);\r\n  var state = [ this._prefix, \"popup\", rand ].join('.');\r\n  localStorage.setItem(\"jsforce_state\", state);\r\n  var authzUrl = oauth2.getAuthorizationUrl({\r\n    response_type: 'token',\r\n    scope : options.scope,\r\n    state: state\r\n  });\r\n  var size = options.size || {};\r\n  var pw = popupWin(authzUrl, size.width || 912, size.height || 513);\r\n  if (!pw) {\r\n    state = [ this._prefix, \"redirect\", rand ].join('.');\r\n    localStorage.setItem(\"jsforce_state\", state);\r\n    authzUrl = oauth2.getAuthorizationUrl({\r\n      response_type: 'token',\r\n      scope : options.scope,\r\n      state: state\r\n    });\r\n    location.href = authzUrl;\r\n    return;\r\n  }\r\n  self._removeTokens();\r\n  var pid = setInterval(function() {\r\n    try {\r\n      if (!pw || pw.closed) {\r\n        clearInterval(pid);\r\n        var tokens = self._getTokens();\r\n        if (tokens) {\r\n          self.connection.initialize(tokens);\r\n          self.emit('connect', self.connection);\r\n          callback(null, { status: 'connect' });\r\n        } else {\r\n          var err = self._getError();\r\n          if (err) {\r\n            callback(new Error(err.error + \": \" + err.error_description));\r\n          } else {\r\n            callback(null, { status: 'cancel' });\r\n          }\r\n        }\r\n      }\r\n    } catch(e) {}\r\n  }, 1000);\r\n};\r\n\r\n/**\r\n *\r\n */\r\nClient.prototype.isLoggedIn = function() {\r\n  return !!(this.connection && this.connection.accessToken);\r\n};\r\n\r\n/**\r\n *\r\n */\r\nClient.prototype.logout = function() {\r\n  this.connection.logout();\r\n  this._removeTokens();\r\n  this.emit('disconnect');\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nClient.prototype._getTokens = function() {\r\n  var regexp = new RegExp(\"(^|;\\\\s*)\"+this._prefix+\"_loggedin=true(;|$)\");\r\n  if (document.cookie.match(regexp)) {\r\n    var issuedAt = Number(localStorage.getItem(this._prefix+'_issued_at'));\r\n    if (Date.now() < issuedAt + 2 * 60 * 60 * 1000) { // 2 hours\r\n      var userInfo;\r\n      var idUrl = localStorage.getItem(this._prefix + '_id');\r\n      if (idUrl) {\r\n        var ids = idUrl.split('/');\r\n        userInfo = { id: ids.pop(), organizationId: ids.pop(), url: idUrl };\r\n      }\r\n      return {\r\n        accessToken: localStorage.getItem(this._prefix + '_access_token'),\r\n        instanceUrl: localStorage.getItem(this._prefix + '_instance_url'),\r\n        userInfo: userInfo\r\n      };\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nClient.prototype._storeTokens = function(params) {\r\n  localStorage.setItem(this._prefix + '_access_token', params.access_token);\r\n  localStorage.setItem(this._prefix + '_instance_url', params.instance_url);\r\n  localStorage.setItem(this._prefix + '_issued_at', params.issued_at);\r\n  localStorage.setItem(this._prefix + '_id', params.id);\r\n  document.cookie = this._prefix + '_loggedin=true;';\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nClient.prototype._removeTokens = function() {\r\n  localStorage.removeItem(this._prefix + '_access_token');\r\n  localStorage.removeItem(this._prefix + '_instance_url');\r\n  localStorage.removeItem(this._prefix + '_issued_at');\r\n  localStorage.removeItem(this._prefix + '_id');\r\n  document.cookie = this._prefix + '_loggedin=';\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nClient.prototype._getError = function() {\r\n  try {\r\n    var err = JSON.parse(localStorage.getItem(this._prefix + '_error'));\r\n    localStorage.removeItem(this._prefix + '_error');\r\n    return err;\r\n  } catch(e) {}\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nClient.prototype._storeError = function(err) {\r\n  localStorage.setItem(this._prefix + '_error', JSON.stringify(err));\r\n};\r\n\r\n/**\r\n *\r\n */\r\nmodule.exports = new Client();\r\n\r\nmodule.exports.Client = Client;\r\n\r\n},{\"../connection\":19,\"../oauth2\":25,\"events\":47,\"inherits\":84,\"lodash/core\":88,\"querystring\":96}],16:[function(require,module,exports){\r\n/*global window, document */\r\n'use strict';\r\n\r\nvar _index = 0;\r\n\r\nmodule.exports = {\r\n\r\n  supported: typeof window !== 'undefined' && typeof document !== 'undefined',\r\n\r\n  createRequest: function(jsonpParam, timeout) {\r\n    jsonpParam = jsonpParam || 'callback';\r\n    timeout = timeout || 10000;\r\n\r\n    return function(params, callback) {\r\n      if (params.method.toUpperCase() !== 'GET') {\r\n        return callback(new Error('JSONP only supports GET request.'));\r\n      }\r\n      var cbFuncName = '_jsforce_jsonpCallback_' + (++_index);\r\n      var callbacks = window;\r\n      var url = params.url;\r\n      url += url.indexOf('?')>0 ? '&' : '?';\r\n      url += jsonpParam + '=' + cbFuncName;\r\n\r\n      var script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = url;\r\n      document.documentElement.appendChild(script);\r\n\r\n      var pid = setTimeout(function() {\r\n        cleanup();\r\n        callback(new Error(\"JSONP call time out.\"));\r\n      }, timeout);\r\n\r\n      callbacks[cbFuncName] = function(res) {\r\n        cleanup();\r\n        callback(null, {\r\n          statusCode: 200,\r\n          headers: { \"content-type\": \"application/json\" },\r\n          body: JSON.stringify(res)\r\n        });\r\n      };\r\n\r\n      var cleanup = function() {\r\n        clearTimeout(pid);\r\n        document.documentElement.removeChild(script);\r\n        delete callbacks[cbFuncName];\r\n      };\r\n    };\r\n\r\n  }\r\n\r\n};\r\n},{}],17:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar Duplex = require('readable-stream').Duplex;\r\nvar _ = require('lodash/core');\r\n\r\nmodule.exports = function(params, callback) {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open(params.method, params.url);\r\n  if (params.headers) {\r\n    for (var header in params.headers) {\r\n      xhr.setRequestHeader(header, params.headers[header]);\r\n    }\r\n  }\r\n  xhr.setRequestHeader(\"Accept\", \"*/*\");\r\n  var response;\r\n  var str = new Duplex();\r\n  str._read = function(size) {\r\n    if (response) {\r\n      str.push(response.body);\r\n    }\r\n  };\r\n  var bufs = [];\r\n  var sent = false;\r\n  str._write = function(chunk, encoding, callback) {\r\n    bufs.push(chunk.toString(encoding === \"buffer\" ? \"binary\" : encoding));\r\n    callback();\r\n  };\r\n  str.on('finish', function() {\r\n    if (!sent) {\r\n      xhr.send(bufs.join(''));\r\n      sent = true;\r\n    }\r\n  });\r\n  if (params.body || params.body === \"\" || !/^(put|post|patch)$/i.test(params.method)) {\r\n    xhr.send(params.body);\r\n    sent = true;\r\n  }\r\n  xhr.onreadystatechange = function() {\r\n    if (xhr.readyState === 4) {\r\n      var headerNames = getResponseHeaderNames(xhr);\r\n      var headers = {};\r\n      _.forEach(headerNames, function(headerName) {\r\n        if (headerName) {\r\n          headers[headerName] = xhr.getResponseHeader(headerName);\r\n        }\r\n      });\r\n      response = {\r\n        statusCode: xhr.status,\r\n        headers: headers,\r\n        body: xhr.response\r\n      };\r\n      if (!response.statusCode) {\r\n        response.statusCode = 400;\r\n        response.body = \"Access Declined\";\r\n      }\r\n      if (callback) {\r\n        callback(null, response, response.body);\r\n      }\r\n      str.end();\r\n    }\r\n  };\r\n  return str;\r\n};\r\n\r\nfunction getResponseHeaderNames(xhr) {\r\n  var headerLines = (xhr.getAllResponseHeaders() || \"\").split(/[\\r\\n]+/);\r\n  return _.map(headerLines, function(headerLine) {\r\n    return headerLine.split(/\\s*:/)[0].toLowerCase();\r\n  });\r\n}\r\n\r\n},{\"lodash/core\":88,\"readable-stream\":107}],18:[function(require,module,exports){\r\n/**\r\n * @file Manages asynchronous method response cache\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar events = require('events'),\r\n    inherits = require('inherits'),\r\n    _      = require('lodash/core');\r\n\r\n/**\r\n * Class for managing cache entry\r\n *\r\n * @private\r\n * @class\r\n * @constructor\r\n * @template T\r\n */\r\nvar CacheEntry = function() {\r\n  this.fetching = false;\r\n};\r\n\r\ninherits(CacheEntry, events.EventEmitter);\r\n\r\n/**\r\n * Get value in the cache entry\r\n *\r\n * @param {Callback.<T>} [callback] - Callback function callbacked the cache entry updated\r\n * @returns {T|undefined}\r\n */\r\nCacheEntry.prototype.get = function(callback) {\r\n  if (!callback) {\r\n    return this._value;\r\n  } else {\r\n    this.once('value', callback);\r\n    if (!_.isUndefined(this._value)) {\r\n      this.emit('value', this._value);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Set value in the cache entry\r\n *\r\n * @param {T} [value] - A value for caching\r\n */\r\nCacheEntry.prototype.set = function(value) {\r\n  this._value = value;\r\n  this.emit('value', this._value);\r\n};\r\n\r\n/**\r\n * Clear cached value\r\n */\r\nCacheEntry.prototype.clear = function() {\r\n  this.fetching = false;\r\n  delete this._value;\r\n};\r\n\r\n\r\n/**\r\n * Caching manager for async methods\r\n *\r\n * @class\r\n * @constructor\r\n */\r\nvar Cache = function() {\r\n  this._entries = {};\r\n};\r\n\r\n/**\r\n * retrive cache entry, or create if not exists.\r\n *\r\n * @param {String} [key] - Key of cache entry\r\n * @returns {CacheEntry}\r\n */\r\nCache.prototype.get = function(key) {\r\n  if (key && this._entries[key]) {\r\n    return this._entries[key];\r\n  } else {\r\n    var entry = new CacheEntry();\r\n    this._entries[key] = entry;\r\n    return entry;\r\n  }\r\n};\r\n\r\n/**\r\n * clear cache entries prefix matching given key\r\n * @param {String} [key] - Key prefix of cache entry to clear\r\n */\r\nCache.prototype.clear = function(key) {\r\n  for (var k in this._entries) {\r\n    if (!key || k.indexOf(key) === 0) {\r\n      this._entries[k].clear();\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * create and return cache key from namespace and serialized arguments.\r\n * @private\r\n */\r\nfunction createCacheKey(namespace, args) {\r\n  args = Array.prototype.slice.apply(args);\r\n  return namespace + '(' + _.map(args, function(a){ return JSON.stringify(a); }).join(',') + ')';\r\n}\r\n\r\n/**\r\n * Enable caching for async call fn to intercept the response and store it to cache.\r\n * The original async calll fn is always invoked.\r\n *\r\n * @protected\r\n * @param {Function} fn - Function to covert cacheable\r\n * @param {Object} [scope] - Scope of function call\r\n * @param {Object} [options] - Options\r\n * @return {Function} - Cached version of function\r\n */\r\nCache.prototype.makeResponseCacheable = function(fn, scope, options) {\r\n  var cache = this;\r\n  options = options || {};\r\n  return function() {\r\n    var args = Array.prototype.slice.apply(arguments);\r\n    var callback = args.pop();\r\n    if (!_.isFunction(callback)) {\r\n      args.push(callback);\r\n      callback = null;\r\n    }\r\n    var key = _.isString(options.key) ? options.key :\r\n              _.isFunction(options.key) ? options.key.apply(scope, args) :\r\n              createCacheKey(options.namespace, args);\r\n    var entry = cache.get(key);\r\n    entry.fetching = true;\r\n    if (callback) {\r\n      args.push(function(err, result) {\r\n        entry.set({ error: err, result: result });\r\n        callback(err, result);\r\n      });\r\n    }\r\n    var ret, error;\r\n    try {\r\n      ret = fn.apply(scope || this, args);\r\n    } catch(e) {\r\n      error = e;\r\n    }\r\n    if (ret && _.isFunction(ret.then)) { // if the returned value is promise\r\n      if (!callback) {\r\n        return ret.then(function(result) {\r\n          entry.set({ error: undefined, result: result });\r\n          return result;\r\n        }, function(err) {\r\n          entry.set({ error: err, result: undefined });\r\n          throw err;\r\n        });\r\n      } else {\r\n        return ret;\r\n      }\r\n    } else {\r\n      entry.set({ error: error, result: ret });\r\n      if (error) { throw error; }\r\n      return ret;\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Enable caching for async call fn to lookup the response cache first, then invoke original if no cached value.\r\n *\r\n * @protected\r\n * @param {Function} fn - Function to covert cacheable\r\n * @param {Object} [scope] - Scope of function call\r\n * @param {Object} [options] - Options\r\n * @return {Function} - Cached version of function\r\n */\r\nCache.prototype.makeCacheable = function(fn, scope, options) {\r\n  var cache = this;\r\n  options = options || {};\r\n  var $fn = function() {\r\n    var args = Array.prototype.slice.apply(arguments);\r\n    var callback = args.pop();\r\n    if (!_.isFunction(callback)) {\r\n      args.push(callback);\r\n    }\r\n    var key = _.isString(options.key) ? options.key :\r\n              _.isFunction(options.key) ? options.key.apply(scope, args) :\r\n              createCacheKey(options.namespace, args);\r\n    var entry = cache.get(key);\r\n    if (!_.isFunction(callback)) { // if callback is not given in last arg, return cached result (immediate).\r\n      var value = entry.get();\r\n      if (!value) { throw new Error('Function call result is not cached yet.'); }\r\n      if (value.error) { throw value.error; }\r\n      return value.result;\r\n    }\r\n    entry.get(function(value) {\r\n      callback(value.error, value.result);\r\n    });\r\n    if (!entry.fetching) { // only when no other client is calling function\r\n      entry.fetching = true;\r\n      args.push(function(err, result) {\r\n        entry.set({ error: err, result: result });\r\n      });\r\n      fn.apply(scope || this, args);\r\n    }\r\n  };\r\n  $fn.clear = function() {\r\n    var key = _.isString(options.key) ? options.key :\r\n              _.isFunction(options.key) ? options.key.apply(scope, arguments) :\r\n              createCacheKey(options.namespace, arguments);\r\n    cache.clear(key);\r\n  };\r\n  return $fn;\r\n};\r\n\r\n\r\nmodule.exports = Cache;\r\n\r\n},{\"events\":47,\"inherits\":84,\"lodash/core\":88}],19:[function(require,module,exports){\r\n(function (Buffer){\r\n/*global Buffer */\r\n/**\r\n * @file Connection class to keep the API session information and manage requests\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar events  = require('events'),\r\n    inherits = require('inherits'),\r\n    _       = require('lodash/core'),\r\n    Promise = require('./promise'),\r\n    Logger  = require('./logger'),\r\n    OAuth2  = require('./oauth2'),\r\n    Query   = require('./query'),\r\n    SObject = require('./sobject'),\r\n    QuickAction = require('./quick-action'),\r\n    HttpApi = require('./http-api'),\r\n    Transport = require('./transport'),\r\n    Process = require('./process'),\r\n    Cache   = require('./cache');\r\n\r\nvar defaults = {\r\n  loginUrl: \"https://login.salesforce.com\",\r\n  instanceUrl: \"\",\r\n  version: \"42.0\"\r\n};\r\n\r\n/*\r\n * Constant of maximum records num in DML operation (update/delete)\r\n */\r\nvar MAX_DML_COUNT = 200;\r\n\r\n\r\n/**\r\n * Connection class to keep the API session information and manage requests\r\n *\r\n * @constructor\r\n * @extends events.EventEmitter\r\n * @param {Object} [options] - Connection options\r\n * @param {OAuth2|Object} [options.oauth2] - OAuth2 instance or options to be passed to OAuth2 constructor\r\n * @param {String} [options.logLevel] - Output logging level (DEBUG|INFO|WARN|ERROR|FATAL)\r\n * @param {String} [options.version] - Salesforce API Version (without \"v\" prefix)\r\n * @param {Number} [options.maxRequest] - Max number of requests allowed in parallel call\r\n * @param {String} [options.loginUrl] - Salesforce Login Server URL (e.g. https://login.salesforce.com/)\r\n * @param {String} [options.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)\r\n * @param {String} [options.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)\r\n * @param {String} [options.accessToken] - Salesforce OAuth2 access token\r\n * @param {String} [options.sessionId] - Salesforce session ID\r\n * @param {String} [options.refreshToken] - Salesforce OAuth2 refresh token\r\n * @param {String|Object} [options.signedRequest] - Salesforce Canvas signed request (Raw Base64 string, JSON string, or deserialized JSON)\r\n * @param {String} [options.proxyUrl] - Cross-domain proxy server URL, used in browser client, non Visualforce app.\r\n * @param {String} [options.httpProxy] - URL of HTTP proxy server, used in server client.\r\n * @param {Object} [options.callOptions] - Call options used in each SOAP/REST API request. See manual.\r\n */\r\nvar Connection = module.exports = function(options) {\r\n  options = options || {};\r\n\r\n  this._logger = new Logger(options.logLevel);\r\n\r\n  var oauth2 = options.oauth2 || {\r\n    loginUrl : options.loginUrl,\r\n    clientId : options.clientId,\r\n    clientSecret : options.clientSecret,\r\n    redirectUri : options.redirectUri,\r\n    proxyUrl: options.proxyUrl,\r\n    httpProxy: options.httpProxy\r\n  };\r\n\r\n  /**\r\n   * OAuth2 object\r\n   * @member {OAuth2} Connection#oauth2\r\n   */\r\n  this.oauth2 = oauth2 = oauth2 instanceof OAuth2 ? oauth2 : new OAuth2(oauth2);\r\n\r\n  this.loginUrl = options.loginUrl || oauth2.loginUrl || defaults.loginUrl;\r\n  this.version = options.version || defaults.version;\r\n  this.maxRequest = options.maxRequest || this.maxRequest || 10;\r\n\r\n  /** @private */\r\n  if (options.proxyUrl) {\r\n    this._transport = new Transport.ProxyTransport(options.proxyUrl);\r\n  } else if (options.httpProxy) {\r\n    this._transport = new Transport.HttpProxyTransport(options.httpProxy);\r\n  } else {\r\n    this._transport = new Transport();\r\n  }\r\n\r\n  this.callOptions = options.callOptions;\r\n\r\n  /*\r\n   * Fire connection:new event to notify jsforce plugin modules\r\n   */\r\n  var jsforce = require('./core');\r\n  jsforce.emit('connection:new', this);\r\n\r\n  /**\r\n   * Streaming API object\r\n   * @member {Streaming} Connection#streaming\r\n   */\r\n  // this.streaming = new Streaming(this);\r\n  /**\r\n   * Bulk API object\r\n   * @member {Bulk} Connection#bulk\r\n   */\r\n  // this.bulk = new Bulk(this);\r\n  /**\r\n   * Tooling API object\r\n   * @member {Tooling} Connection#tooling\r\n   */\r\n  // this.tooling = new Tooling(this);\r\n  /**\r\n   * Analytics API object\r\n   * @member {Analytics} Connection#analytics\r\n   */\r\n  // this.analytics = new Analytics(this);\r\n  /**\r\n   * Chatter API object\r\n   * @member {Chatter} Connection#chatter\r\n   */\r\n  // this.chatter = new Chatter(this);\r\n  /**\r\n   * Metadata API object\r\n   * @member {Metadata} Connection#metadata\r\n   */\r\n  // this.metadata = new Metadata(this);\r\n\r\n  /**\r\n   * SOAP API object\r\n   * @member {SoapApi} Connection#soap\r\n   */\r\n  // this.soap = new SoapApi(this);\r\n\r\n  /**\r\n   * Apex REST API object\r\n   * @member {Apex} Connection#apex\r\n   */\r\n  // this.apex = new Apex(this);\r\n\r\n  /**\r\n   * @member {Process} Connection#process\r\n   */\r\n  this.process = new Process(this);\r\n\r\n  /**\r\n   * Cache object for result\r\n   * @member {Cache} Connection#cache\r\n   */\r\n  this.cache = new Cache();\r\n\r\n  // Allow to delegate connection refresh to outer function\r\n  var self = this;\r\n  var refreshFn = options.refreshFn;\r\n  if (!refreshFn && this.oauth2.clientId) {\r\n    refreshFn = oauthRefreshFn;\r\n  }\r\n  if (refreshFn) {\r\n    this._refreshDelegate = new HttpApi.SessionRefreshDelegate(this, refreshFn);\r\n  }\r\n\r\n  var cacheOptions = {\r\n    key: function(type) { return type ? \"describe.\" + type : \"describe\"; }\r\n  };\r\n  this.describe$ = this.cache.makeCacheable(this.describe, this, cacheOptions);\r\n  this.describe = this.cache.makeResponseCacheable(this.describe, this, cacheOptions);\r\n  this.describeSObject$ = this.describe$;\r\n  this.describeSObject = this.describe;\r\n\r\n  cacheOptions = { key: 'describeGlobal' };\r\n  this.describeGlobal$ = this.cache.makeCacheable(this.describeGlobal, this, cacheOptions);\r\n  this.describeGlobal = this.cache.makeResponseCacheable(this.describeGlobal, this, cacheOptions);\r\n\r\n  this.initialize(options);\r\n};\r\n\r\ninherits(Connection, events.EventEmitter);\r\n\r\n/**\r\n * Initialize connection.\r\n *\r\n * @protected\r\n * @param {Object} options - Initialization options\r\n * @param {String} [options.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)\r\n * @param {String} [options.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)\r\n * @param {String} [options.accessToken] - Salesforce OAuth2 access token\r\n * @param {String} [options.sessionId] - Salesforce session ID\r\n * @param {String} [options.refreshToken] - Salesforce OAuth2 refresh token\r\n * @param {String|Object} [options.signedRequest] - Salesforce Canvas signed request (Raw Base64 string, JSON string, or deserialized JSON)\r\n * @param {UserInfo} [options.userInfo] - Logged in user information\r\n */\r\nConnection.prototype.initialize = function(options) {\r\n  if (!options.instanceUrl && options.serverUrl) {\r\n    options.instanceUrl = options.serverUrl.split('/').slice(0, 3).join('/');\r\n  }\r\n  this.instanceUrl = options.instanceUrl || options.serverUrl || this.instanceUrl || defaults.instanceUrl;\r\n\r\n  this.accessToken = options.sessionId || options.accessToken || this.accessToken;\r\n  this.refreshToken = options.refreshToken || this.refreshToken;\r\n  if (this.refreshToken && !this._refreshDelegate) {\r\n    throw new Error(\"Refresh token is specified without oauth2 client information or refresh function\");\r\n  }\r\n\r\n  this.signedRequest = options.signedRequest && parseSignedRequest(options.signedRequest);\r\n  if (this.signedRequest) {\r\n    this.accessToken = this.signedRequest.client.oauthToken;\r\n    if (Transport.CanvasTransport.supported) {\r\n      this._transport = new Transport.CanvasTransport(this.signedRequest);\r\n    }\r\n  }\r\n\r\n  if (options.userInfo) {\r\n    this.userInfo = options.userInfo;\r\n  }\r\n\r\n  this.limitInfo = {};\r\n\r\n  this.sobjects = {};\r\n  this.cache.clear();\r\n  this.cache.get('describeGlobal').removeAllListeners('value');\r\n  this.cache.get('describeGlobal').on('value', _.bind(function(res) {\r\n    if (res.result) {\r\n      var types = _.map(res.result.sobjects, function(so) { return so.name; });\r\n      types.forEach(this.sobject, this);\r\n    }\r\n  }, this));\r\n\r\n  if (this.tooling) {\r\n    this.tooling.initialize();\r\n  }\r\n\r\n  this._sessionType = options.sessionId ? \"soap\" : \"oauth2\";\r\n\r\n};\r\n\r\n/** @private **/\r\nfunction oauthRefreshFn(conn, callback) {\r\n  conn.oauth2.refreshToken(conn.refreshToken, function(err, res) {\r\n    if (err) { return callback(err); }\r\n    var userInfo = parseIdUrl(res.id);\r\n    conn.initialize({\r\n      instanceUrl : res.instance_url,\r\n      accessToken : res.access_token,\r\n      userInfo : userInfo\r\n    });\r\n    callback(null, res.access_token, res);\r\n  });\r\n}\r\n\r\n/** @private **/\r\nfunction parseSignedRequest(sr) {\r\n  if (_.isString(sr)) {\r\n    if (sr[0] === '{') { // might be JSON\r\n      return JSON.parse(sr);\r\n    } else { // might be original base64-encoded signed request\r\n      var msg = sr.split('.').pop(); // retrieve latter part\r\n      var json = Buffer.from(msg, 'base64').toString('utf-8');\r\n      return JSON.parse(json);\r\n    }\r\n    return null;\r\n  }\r\n  return sr;\r\n}\r\n\r\n\r\n/** @private **/\r\nConnection.prototype._baseUrl = function() {\r\n  return [ this.instanceUrl, \"services/data\", \"v\" + this.version ].join('/');\r\n};\r\n\r\n/**\r\n * Convert path to absolute url\r\n * @private\r\n */\r\nConnection.prototype._normalizeUrl = function(url) {\r\n  if (url[0] === '/') {\r\n    if (url.indexOf('/services/') === 0) {\r\n      return this.instanceUrl + url;\r\n    } else {\r\n      return this._baseUrl() + url;\r\n    }\r\n  } else {\r\n    return url;\r\n  }\r\n};\r\n\r\n/**\r\n * Send REST API request with given HTTP request info, with connected session information.\r\n *\r\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\r\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\r\n * , or relative path from version root ('/sobjects/Account/describe').\r\n *\r\n * @param {String|Object} request - HTTP request object or URL to GET request\r\n * @param {String} request.method - HTTP method URL to send HTTP request\r\n * @param {String} request.url - URL to send HTTP request\r\n * @param {Object} [request.headers] - HTTP request headers in hash object (key-value)\r\n * @param {Object} [options] - HTTP API request options\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nConnection.prototype.request = function(request, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = null;\r\n  }\r\n  options = options || {};\r\n  var self = this;\r\n\r\n  // if request is simple string, regard it as url in GET method\r\n  if (_.isString(request)) {\r\n    request = { method: 'GET', url: request };\r\n  }\r\n  // if url is given in relative path, prepend base url or instance url before.\r\n  request.url = this._normalizeUrl(request.url);\r\n\r\n  var httpApi = new HttpApi(this, options);\r\n\r\n  // log api usage and its quota\r\n  httpApi.on('response', function(response) {\r\n    if (response.headers && response.headers[\"sforce-limit-info\"]) {\r\n      var apiUsage = response.headers[\"sforce-limit-info\"].match(/api\\-usage=(\\d+)\\/(\\d+)/);\r\n      if (apiUsage) {\r\n        self.limitInfo = {\r\n          apiUsage: {\r\n            used: parseInt(apiUsage[1], 10),\r\n            limit: parseInt(apiUsage[2], 10)\r\n          }\r\n        };\r\n      }\r\n    }\r\n  });\r\n  return httpApi.request(request).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Send HTTP GET request\r\n *\r\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\r\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\r\n * , or relative path from version root ('/sobjects/Account/describe').\r\n *\r\n * @param {String} url - Endpoint URL to request HTTP GET\r\n * @param {Object} [options] - HTTP API request options\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nConnection.prototype.requestGet = function(url, options, callback) {\r\n  var request = {\r\n    method: \"GET\",\r\n    url: url\r\n  };\r\n  return this.request(request, options, callback);\r\n};\r\n\r\n\r\n/**\r\n * Send HTTP POST request with JSON body, with connected session information\r\n *\r\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\r\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\r\n * , or relative path from version root ('/sobjects/Account/describe').\r\n *\r\n * @param {String} url - Endpoint URL to request HTTP POST\r\n * @param {Object} body - Any JS object which can be serialized to JSON\r\n * @param {Object} [options] - HTTP API request options\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nConnection.prototype.requestPost = function(url, body, options, callback) {\r\n  var request = {\r\n    method: \"POST\",\r\n    url: url,\r\n    body: JSON.stringify(body),\r\n    headers: { \"content-type\": \"application/json\" }\r\n  };\r\n  return this.request(request, options, callback);\r\n};\r\n\r\n/**\r\n * Send HTTP PUT request with JSON body, with connected session information\r\n *\r\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\r\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\r\n * , or relative path from version root ('/sobjects/Account/describe').\r\n *\r\n * @param {String} url - Endpoint URL to request HTTP PUT\r\n * @param {Object} body - Any JS object which can be serialized to JSON\r\n * @param {Object} [options] - HTTP API request options\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nConnection.prototype.requestPut = function(url, body, options, callback) {\r\n  var request = {\r\n    method: \"PUT\",\r\n    url: url,\r\n    body: JSON.stringify(body),\r\n    headers: { \"content-type\": \"application/json\" }\r\n  };\r\n  return this.request(request, options, callback);\r\n};\r\n\r\n/**\r\n * Send HTTP PATCH request with JSON body\r\n *\r\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\r\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\r\n * , or relative path from version root ('/sobjects/Account/describe').\r\n *\r\n * @param {String} url - Endpoint URL to request HTTP PATCH\r\n * @param {Object} body - Any JS object which can be serialized to JSON\r\n * @param {Object} [options] - HTTP API request options\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nConnection.prototype.requestPatch = function(url, body, options, callback) {\r\n  var request = {\r\n    method: \"PATCH\",\r\n    url: url,\r\n    body: JSON.stringify(body),\r\n    headers: { \"content-type\": \"application/json\" }\r\n  };\r\n  return this.request(request, options, callback);\r\n};\r\n\r\n/**\r\n * Send HTTP DELETE request\r\n *\r\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\r\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\r\n * , or relative path from version root ('/sobjects/Account/describe').\r\n *\r\n * @param {String} url - Endpoint URL to request HTTP DELETE\r\n * @param {Object} [options] - HTTP API request options\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nConnection.prototype.requestDelete = function(url, options, callback) {\r\n  var request = {\r\n    method: \"DELETE\",\r\n    url: url\r\n  };\r\n  return this.request(request, options, callback);\r\n};\r\n\r\n\r\n/** @private */\r\nfunction formatDate(date) {\r\n  function pad(number) {\r\n    if (number < 10) {\r\n      return '0' + number;\r\n    }\r\n    return number;\r\n  }\r\n\r\n  return date.getUTCFullYear() +\r\n    '-' + pad(date.getUTCMonth() + 1) +\r\n    '-' + pad(date.getUTCDate()) +\r\n    'T' + pad(date.getUTCHours()) +\r\n    ':' + pad(date.getUTCMinutes()) +\r\n    ':' + pad(date.getUTCSeconds()) +\r\n    '+00:00';\r\n}\r\n\r\n\r\n/** @private **/\r\nfunction parseIdUrl(idUrl) {\r\n  var idUrls = idUrl.split(\"/\");\r\n  var userId = idUrls.pop(), orgId = idUrls.pop();\r\n  return {\r\n    id: userId,\r\n    organizationId: orgId,\r\n    url: idUrl\r\n  };\r\n}\r\n\r\n/**\r\n * @callback Callback\r\n * @type {Function}\r\n * @param {Error} err - Callback error\r\n * @param {T} response - Callback response\r\n * @template T\r\n */\r\n\r\n/**\r\n * @typedef {Object} QueryResult\r\n * @prop {Boolean} done - Flag if the query is fetched all records or not\r\n * @prop {String} [nextRecordsUrl] - URL locator for next record set, (available when done = false)\r\n * @prop {Number} totalSize - Total size for query\r\n * @prop {Array.<Record>} [records] - Array of records fetched\r\n */\r\n\r\n/**\r\n * Execute query by using SOQL\r\n *\r\n * @param {String} soql - SOQL string\r\n * @param {Object} [options] - Query options\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\r\n * @param {Callback.<QueryResult>} [callback] - Callback function\r\n * @returns {Query.<QueryResult>}\r\n */\r\nConnection.prototype.query = function(soql, options, callback) {\r\n  console.log('flag1');\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = undefined;\r\n  }\r\n  var query = new Query(this, soql, options);\r\n  if (callback) {\r\n    query.run(callback);\r\n  }\r\n  return query;\r\n};\r\n\r\n/**\r\n * Execute query by using SOQL, including deleted records\r\n *\r\n * @param {String} soql - SOQL string\r\n * @param {Object} [options] - Query options\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\r\n * @param {Callback.<QueryResult>} [callback] - Callback function\r\n * @returns {Query.<QueryResult>}\r\n */\r\nConnection.prototype.queryAll = function(soql, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = undefined;\r\n  }\r\n  var query = new Query(this, soql, options);\r\n  query.scanAll(true);\r\n  if (callback) {\r\n    query.run(callback);\r\n  }\r\n  return query;\r\n};\r\n\r\n/**\r\n * Query next record set by using query locator\r\n *\r\n * @param {String} locator - Next record set locator\r\n * @param {Object} [options] - Query options\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\r\n * @param {Callback.<QueryResult>} [callback] - Callback function\r\n * @returns {Query.<QueryResult>}\r\n */\r\nConnection.prototype.queryMore = function(locator, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = undefined;\r\n  }\r\n  var query = new Query(this, { locator: locator }, options);\r\n  if (callback) {\r\n    query.run(callback);\r\n  }\r\n  return query;\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._ensureVersion = function(majorVersion) {\r\n  var versions = this.version.split('.');\r\n  return parseInt(versions[0], 10) >= majorVersion;\r\n}\r\n\r\n/**\r\n * Retrieve specified records\r\n *\r\n * @param {String} type - SObject Type\r\n * @param {String|Array.<String>} ids - A record ID or array of record IDs\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Array.<String>} [options.fields] - Fetching field names in retrieving record\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function\r\n * @returns {Promise.<Record|Array.<Record>>}\r\n */\r\nConnection.prototype.retrieve = function(type, ids, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  return (\r\n    _.isArray(ids) ?\r\n      (this._ensureVersion(42) ? // check the version whether SObject collection API is supported (42.0)\r\n        this._retrieveMany(type, ids, options) :\r\n        this._retrieveParallel(type, ids, options)) :\r\n      this._retrieveSingle(type, ids, options)\r\n  ).thenCall(callback);\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._retrieveSingle = function(type, id, options) {\r\n  if (!id) {\r\n    return Promise.reject(new Error('Invalid record ID. Specify valid record ID value'));\r\n  }\r\n  var url = [ this._baseUrl(), \"sobjects\", type, id ].join('/');\r\n  if (options.fields) {\r\n    url += '?fields=' + options.fields.join(',');\r\n  }\r\n  return this.request({\r\n    method: 'GET',\r\n    url: url,\r\n    headers: options.headers,\r\n  });\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._retrieveParallel = function(type, ids, options) {\r\n  if (ids.length > this.maxRequest) {\r\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\r\n  }\r\n  var self = this;\r\n  return Promise.all(\r\n    ids.map(function(id) {\r\n      return self._retrieveSingle(type, id, options).catch(function(err) {\r\n        if (options.allOrNone || err.errorCode !== 'NOT_FOUND') {\r\n          throw err;\r\n        }\r\n        return null;\r\n      });\r\n    })\r\n  );\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._retrieveMany = function(type, ids, options) {\r\n  if (ids.length === 0) {\r\n    return Promise.resolve([]);\r\n  }\r\n  var url = [ this._baseUrl(), \"composite\", \"sobjects\", type ].join('/');\r\n  var self = this;\r\n  return (\r\n    options.fields ?\r\n      Promise.resolve(options.fields) :\r\n      new Promise(function(resolve, reject) {\r\n        self.describe$(type, function(err, so) {\r\n          if (err) {\r\n            reject(err);\r\n          } else {\r\n            var fields = so.fields.map(function(field) {\r\n              return field.name;\r\n            });\r\n            resolve(fields);\r\n          }\r\n        });\r\n      })\r\n  ).then(function(fields) {\r\n    return self.request({\r\n      method : 'POST',\r\n      url : url,\r\n      body : JSON.stringify({\r\n        ids : ids,\r\n        fields : fields\r\n      }),\r\n      headers : _.defaults(options.headers || {}, {\r\n        \"Content-Type\" : \"application/json\"\r\n      })\r\n    });\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * @typedef RecordResult\r\n * @prop {Boolean} success - The result is succeessful or not\r\n * @prop {String} [id] - Record ID\r\n * @prop {Array.<Object>} [errors] - Errors (available when success = false)\r\n */\r\n\r\n/** @private */\r\nConnection.prototype._toRecordResult = function(id, err) {\r\n  var error = {\r\n    statusCode: err.errorCode,\r\n    message: err.message\r\n  };\r\n  if (err.content) { error.content = err.content; } // preserve External id duplication message\r\n  if (err.fields) { error.fields = err.fields; } // preserve DML exception occurred fields\r\n  var result = {\r\n    success: false,\r\n    errors: [error]\r\n  };\r\n  if (id) { result.id = id; }\r\n  return result;\r\n};\r\n\r\n/**\r\n * Synonym of Connection#create()\r\n *\r\n * @method Connection#insert\r\n * @param {String} type - SObject Type\r\n * @param {Object|Array.<Object>} records - A record or array of records to create\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\r\n * @param {Boolean} [options.allowRecursive] - If true, when records goes over the max num of collection API (=200), records are divided into several chunks and requested recursively.\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n/**\r\n * Create records\r\n *\r\n * @method Connection#create\r\n * @param {String} type - SObject Type\r\n * @param {Record|Array.<Record>} records - A record or array of records to create\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\r\n * @param {Boolean} [options.allowRecursive] - If true, when records goes over the max num of collection API (=200), records are divided into several chunks and requested recursively.\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nConnection.prototype.insert =\r\nConnection.prototype.create = function(type, records, options, callback) {\r\n  if (!_.isString(type)) {\r\n    // reverse order\r\n    callback = options;\r\n    options = records;\r\n    records = type;\r\n    type = null;\r\n  }\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  return (\r\n    _.isArray(records) ?\r\n      (this._ensureVersion(42) ? // check the version whether SObject collection API is supported (42.0)\r\n        this._createMany(type, records, options) :\r\n        this._createParallel(type, records, options)) :\r\n      this._createSingle(type, records, options)\r\n  ).thenCall(callback);\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._createSingle = function(type, record, options) {\r\n  var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\r\n  if (!sobjectType) {\r\n    return Promise.reject(new Error('No SObject Type defined in record'));\r\n  }\r\n  record = _.clone(record);\r\n  delete record.Id;\r\n  delete record.type;\r\n  delete record.attributes;\r\n  var url = [ this._baseUrl(), \"sobjects\", sobjectType ].join('/');\r\n  return this.request({\r\n    method : 'POST',\r\n    url : url,\r\n    body : JSON.stringify(record),\r\n    headers : _.defaults(options.headers || {}, {\r\n      \"Content-Type\" : \"application/json\"\r\n    })\r\n  });\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._createParallel = function(type, records, options) {\r\n  if (records.length > this.maxRequest) {\r\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\r\n  }\r\n  var self = this;\r\n  return Promise.all(\r\n    records.map(function(record) {\r\n      return self._createSingle(type, record, options).catch(function(err) {\r\n        // be aware that allOrNone in parallel mode will not revert the other successful requests\r\n        // it only raises error when met at least one failed request.\r\n        if (options.allOrNone || !err.errorCode) {\r\n          throw err;\r\n        }\r\n        return this._toRecordResult(null, err);\r\n      });\r\n    })\r\n  );\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._createMany = function(type, records, options) {\r\n  if (records.length === 0) {\r\n    return Promise.resolve([]);\r\n  }\r\n  if (records.length > MAX_DML_COUNT && options.allowRecursive) {\r\n    var self = this;\r\n    return self._createMany(type, records.slice(0, MAX_DML_COUNT), options).then(function(rets1) {\r\n      return self._createMany(type, records.slice(MAX_DML_COUNT), options).then(function(rets2) {\r\n        return rets1.concat(rets2);\r\n      });\r\n    });\r\n  }\r\n  records = _.map(records, function(record) {\r\n    var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\r\n    if (!sobjectType) {\r\n      return Promise.reject(new Error('No SObject Type defined in record'));\r\n    }\r\n    record = _.clone(record);\r\n    delete record.Id;\r\n    delete record.type;\r\n    record.attributes = { type : sobjectType };\r\n    return record;\r\n  });\r\n  var url = [ this._baseUrl(), \"composite\", \"sobjects\" ].join('/');\r\n  return this.request({\r\n    method : 'POST',\r\n    url : url,\r\n    body : JSON.stringify({\r\n      allOrNone : options.allOrNone || false,\r\n      records : records\r\n    }),\r\n    headers : _.defaults(options.headers || {}, {\r\n      \"Content-Type\" : \"application/json\"\r\n    })\r\n  });\r\n};\r\n\r\n/**\r\n * Update records\r\n *\r\n * @param {String} type - SObject Type\r\n * @param {Record|Array.<Record>} records - A record or array of records to update\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\r\n * @param {Boolean} [options.allowRecursive] - If true, when records goes over the max num of collection API (=200), records are divided into several chunks and requested recursively.\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nConnection.prototype.update = function(type, records, options, callback) {\r\n  if (!_.isString(type)) {\r\n    // reverse order\r\n    callback = options;\r\n    options = records;\r\n    records = type;\r\n    type = null;\r\n  }\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  return (\r\n    _.isArray(records) ?\r\n      (this._ensureVersion(42) ? // check the version whether SObject collection API is supported (42.0)\r\n        this._updateMany(type, records, options) :\r\n        this._updateParallel(type, records, options)) :\r\n      this._updateSingle(type, records, options)\r\n  ).thenCall(callback);\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._updateSingle = function(type, record, options) {\r\n  var id = record.Id;\r\n  if (!id) {\r\n    return Promise.reject(new Error('Record id is not found in record.'));\r\n  }\r\n  var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\r\n  if (!sobjectType) {\r\n    return Promise.reject(new Error('No SObject Type defined in record'));\r\n  }\r\n  record = _.clone(record);\r\n  delete record.Id;\r\n  delete record.type;\r\n  delete record.attributes;\r\n  var url = [ this._baseUrl(), \"sobjects\", sobjectType, id ].join('/');\r\n  return this.request({\r\n    method : 'PATCH',\r\n    url : url,\r\n    body : JSON.stringify(record),\r\n    headers : _.defaults(options.headers || {}, {\r\n      \"Content-Type\" : \"application/json\"\r\n    })\r\n  }, {\r\n    noContentResponse: { id : id, success : true, errors : [] }\r\n  });\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._updateParallel = function(type, records, options) {\r\n  if (records.length > this.maxRequest) {\r\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\r\n  }\r\n  var self = this;\r\n  return Promise.all(\r\n    records.map(function(record) {\r\n      return self._updateSingle(type, record, options).catch(function(err) {\r\n        // be aware that allOrNone in parallel mode will not revert the other successful requests\r\n        // it only raises error when met at least one failed request.\r\n        if (options.allOrNone || !err.errorCode) {\r\n          throw err;\r\n        }\r\n        return this._toRecordResult(record.Id, err);\r\n      });\r\n    })\r\n  );\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._updateMany = function(type, records, options) {\r\n  if (records.length === 0) {\r\n    return Promise.resolve([]);\r\n  }\r\n  if (records.length > MAX_DML_COUNT && options.allowRecursive) {\r\n    var self = this;\r\n    return self._updateMany(type, records.slice(0, MAX_DML_COUNT), options).then(function(rets1) {\r\n      return self._updateMany(type, records.slice(MAX_DML_COUNT), options).then(function(rets2) {\r\n        return rets1.concat(rets2);\r\n      });\r\n    });\r\n  }\r\n  records = _.map(records, function(record) {\r\n    var id = record.Id;\r\n    if (!id) {\r\n      throw new Error('Record id is not found in record.');\r\n    }\r\n    var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\r\n    if (!sobjectType) {\r\n      throw new Error('No SObject Type defined in record');\r\n    }\r\n    record = _.clone(record);\r\n    delete record.Id;\r\n    record.id = id;\r\n    delete record.type;\r\n    record.attributes = { type : sobjectType };\r\n    return record;\r\n  });\r\n  var url = [ this._baseUrl(), \"composite\", \"sobjects\" ].join('/');\r\n  return this.request({\r\n    method : 'PATCH',\r\n    url : url,\r\n    body : JSON.stringify({\r\n      allOrNone : options.allOrNone || false,\r\n      records : records\r\n    }),\r\n    headers : _.defaults(options.headers || {}, {\r\n      \"Content-Type\" : \"application/json\"\r\n    })\r\n  });\r\n};\r\n\r\n/**\r\n * Upsert records\r\n *\r\n * @param {String} type - SObject Type\r\n * @param {Record|Array.<Record>} records - Record or array of records to upsert\r\n * @param {String} extIdField - External ID field name\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nConnection.prototype.upsert = function(type, records, extIdField, options, callback) {\r\n  // You can omit \"type\" argument, when the record includes type information.\r\n  if (!_.isString(type)) {\r\n    // reverse order\r\n    callback = options;\r\n    options = extIdField;\r\n    extIdField = records;\r\n    records = type;\r\n    type = null;\r\n  }\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  var self = this;\r\n  var isArray = _.isArray(records);\r\n  records = isArray ? records : [ records ];\r\n  if (records.length > this.maxRequest) {\r\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);\r\n  }\r\n  return Promise.all(\r\n    _.map(records, function(record) {\r\n      var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\r\n      var extId = record[extIdField];\r\n      record = _.clone(record);\r\n      delete record[extIdField];\r\n      delete record.type;\r\n      delete record.attributes;\r\n\r\n      var url = [ self._baseUrl(), \"sobjects\", sobjectType, extIdField, extId ].join('/');\r\n      return self.request({\r\n        method : 'PATCH',\r\n        url : url,\r\n        body : JSON.stringify(record),\r\n        headers : _.defaults(options.headers || {}, {\r\n          \"Content-Type\" : \"application/json\"\r\n        })\r\n      }, {\r\n        noContentResponse: { success : true, errors : [] }\r\n      })\r\n      .catch(function(err) {\r\n        // be aware that `allOrNone` option in upsert method will not revert the other successful requests\r\n        // it only raises error when met at least one failed request.\r\n        if (!isArray || options.allOrNone || !err.errorCode) { throw err; }\r\n        return this._toRecordResult(null, err);\r\n      })\r\n    })\r\n  ).then(function(results) {\r\n    return !isArray && _.isArray(results) ? results[0] : results;\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Synonym of Connection#destroy()\r\n *\r\n * @method Connection#delete\r\n * @param {String} type - SObject Type\r\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\r\n * @param {Boolean} [options.allowRecursive] - If true, when ids goes over the max num of collection API (=200), ids are divided into several chunks and requested recursively.\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n/**\r\n * Synonym of Connection#destroy()\r\n *\r\n * @method Connection#del\r\n * @param {String} type - SObject Type\r\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\r\n * @param {Boolean} [options.allowRecursive] - If true, when ids goes over the max num of collection API (=200), ids are divided into several chunks and requested recursively.\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n/**\r\n * Delete records\r\n *\r\n * @method Connection#destroy\r\n * @param {String} type - SObject Type\r\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\r\n * @param {Boolean} [options.allowRecursive] - If true, when ids goes over the max num of collection API (=200), ids are divided into several chunks and requested recursively.\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nConnection.prototype[\"delete\"] =\r\nConnection.prototype.del =\r\nConnection.prototype.destroy = function(type, ids, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  return (\r\n    _.isArray(ids) ?\r\n      (this._ensureVersion(42) ? // check the version whether SObject collection API is supported (42.0)\r\n        this._destroyMany(type, ids, options) :\r\n        this._destroyParallel(type, ids, options)) :\r\n      this._destroySingle(type, ids, options)\r\n  ).thenCall(callback);\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._destroySingle = function(type, id, options) {\r\n  var url = [ this._baseUrl(), \"sobjects\", type, id ].join('/');\r\n  return this.request({\r\n    method : 'DELETE',\r\n    url : url,\r\n    headers: options.headers || null\r\n  }, {\r\n    noContentResponse: { id : id, success : true, errors : [] }\r\n  });\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._destroyParallel = function(type, ids, options) {\r\n  if (ids.length > this.maxRequest) {\r\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\r\n  }\r\n  var self = this;\r\n  return Promise.all(\r\n    ids.map(function(id) {\r\n      return self._destroySingle(type, id, options).catch(function(err) {\r\n        // be aware that `allOrNone` option in parallel mode will not revert the other successful requests\r\n        // it only raises error when met at least one failed request.\r\n        if (options.allOrNone || !err.errorCode) {\r\n          throw err;\r\n        }\r\n        return this._toRecordResult(id, err);\r\n      });\r\n    })\r\n  );\r\n};\r\n\r\n\r\n/** @private */\r\nConnection.prototype._destroyMany = function(type, ids, options) {\r\n  if (ids.length === 0) {\r\n    return Promise.resolve([]);\r\n  }\r\n  if (ids.length > MAX_DML_COUNT && options.allowRecursive) {\r\n    var self = this;\r\n    return self._destroyMany(type, ids.slice(0, MAX_DML_COUNT), options).then(function(rets1) {\r\n      return self._destroyMany(type, ids.slice(MAX_DML_COUNT), options).then(function(rets2) {\r\n        return rets1.concat(rets2);\r\n      });\r\n    });\r\n  }\r\n  var url = [ this._baseUrl(), \"composite\", \"sobjects?ids=\" ].join('/') + ids.join(',');\r\n  if (options.allOrNone) {\r\n    url += '&allOrNone=true';\r\n  }\r\n  return this.request({\r\n    method : 'DELETE',\r\n    url : url,\r\n    headers: options.headers || null\r\n  });\r\n};\r\n\r\n/**\r\n * Execute search by SOSL\r\n *\r\n * @param {String} sosl - SOSL string\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>>}\r\n */\r\nConnection.prototype.search = function(sosl, callback) {\r\n  var url = this._baseUrl() + \"/search?q=\" + encodeURIComponent(sosl);\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Result returned by describeSObject call\r\n *\r\n * @typedef {Object} DescribeSObjectResult\r\n */\r\n/**\r\n * Synonym of Connection#describe()\r\n *\r\n * @method Connection#describeSObject\r\n * @param {String} type - SObject Type\r\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\r\n * @returns {Promise.<DescribeSObjectResult>}\r\n */\r\n/**\r\n * Describe SObject metadata\r\n *\r\n * @method Connection#describe\r\n * @param {String} type - SObject Type\r\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\r\n * @returns {Promise.<DescribeSObjectResult>}\r\n */\r\nConnection.prototype.describe =\r\nConnection.prototype.describeSObject = function(type, callback) {\r\n  var url = [ this._baseUrl(), \"sobjects\", type, \"describe\" ].join('/');\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * Result returned by describeGlobal call\r\n *\r\n * @typedef {Object} DescribeGlobalResult\r\n */\r\n/**\r\n * Describe global SObjects\r\n *\r\n * @param {Callback.<DescribeGlobalResult>} [callback] - Callback function\r\n * @returns {Promise.<DescribeGlobalResult>}\r\n */\r\nConnection.prototype.describeGlobal = function(callback) {\r\n  var url = this._baseUrl() + \"/sobjects\";\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * Get SObject instance\r\n *\r\n * @param {String} type - SObject Type\r\n * @returns {SObject}\r\n */\r\nConnection.prototype.sobject = function(type) {\r\n  this.sobjects = this.sobjects || {};\r\n  var sobject = this.sobjects[type] =\r\n    this.sobjects[type] || new SObject(this, type);\r\n  return sobject;\r\n};\r\n\r\n/**\r\n * Get identity information of current user\r\n *\r\n * @param {Object} [options] - Identity call options\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in identity request\r\n * @param {Callback.<IdentityInfo>} [callback] - Callback function\r\n * @returns {Promise.<IdentityInfo>}\r\n */\r\nConnection.prototype.identity = function(options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  var self = this;\r\n  var idUrl = this.userInfo && this.userInfo.url;\r\n  return Promise.resolve(\r\n    idUrl ?\r\n    { identity: idUrl } :\r\n    this.request({ method: 'GET', url: this._baseUrl(), headers: options.headers })\r\n  ).then(function(res) {\r\n    var url = res.identity;\r\n    return self.request({ method: 'GET', url: url });\r\n  }).then(function(res) {\r\n    self.userInfo = {\r\n      id: res.user_id,\r\n      organizationId: res.organization_id,\r\n      url: res.id\r\n    };\r\n    return res;\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * @typedef UserInfo\r\n * @prop {String} id - User ID\r\n * @prop {String} organizationId - Organization ID\r\n * @prop {String} url - Identity URL of the user\r\n */\r\n\r\n/**\r\n * Authorize (using oauth2 web server flow)\r\n *\r\n * @param {String} code - Authorization code\r\n * @param {Object} [params] - Optional parameters to send in token retrieval\r\n * @param {String} [params.code_verifier] - Code verifier value (RFC 7636 - Proof Key of Code Exchange)\r\n * @param {Callback.<UserInfo>} [callback] - Callback function\r\n * @returns {Promise.<UserInfo>}\r\n */\r\nConnection.prototype.authorize = function(code, params, callback) {\r\n  if (typeof params === 'function') {\r\n    callback = params;\r\n    params = {};\r\n  }\r\n  var self = this;\r\n  var logger = this._logger;\r\n\r\n  return this.oauth2.requestToken(code, params).then(function(res) {\r\n    var userInfo = parseIdUrl(res.id);\r\n    self.initialize({\r\n      instanceUrl : res.instance_url,\r\n      accessToken : res.access_token,\r\n      refreshToken : res.refresh_token,\r\n      userInfo: userInfo\r\n    });\r\n    logger.debug(\"<login> completed. user id = \" + userInfo.id + \", org id = \" + userInfo.organizationId);\r\n    return userInfo;\r\n\r\n  }).thenCall(callback);\r\n\r\n};\r\n\r\n\r\n/**\r\n * Login to Salesforce\r\n *\r\n * @param {String} username - Salesforce username\r\n * @param {String} password - Salesforce password (and security token, if required)\r\n * @param {Callback.<UserInfo>} [callback] - Callback function\r\n * @returns {Promise.<UserInfo>}\r\n */\r\nConnection.prototype.login = function(username, password, callback) {\r\n  // register refreshDelegate for session expiration\r\n  this._refreshDelegate = new HttpApi.SessionRefreshDelegate(this, createUsernamePasswordRefreshFn(username, password));\r\n  if (this.oauth2 && this.oauth2.clientId && this.oauth2.clientSecret) {\r\n    return this.loginByOAuth2(username, password, callback);\r\n  } else {\r\n    return this.loginBySoap(username, password, callback);\r\n  }\r\n};\r\n\r\n/** @private **/\r\nfunction createUsernamePasswordRefreshFn(username, password) {\r\n  return function(conn, callback) {\r\n    conn.login(username, password, function(err) {\r\n      if (err) { return callback(err); }\r\n      callback(null, conn.accessToken);\r\n    });\r\n  };\r\n}\r\n\r\n/**\r\n * Login by OAuth2 username & password flow\r\n *\r\n * @param {String} username - Salesforce username\r\n * @param {String} password - Salesforce password (and security token, if required)\r\n * @param {Callback.<UserInfo>} [callback] - Callback function\r\n * @returns {Promise.<UserInfo>}\r\n */\r\nConnection.prototype.loginByOAuth2 = function(username, password, callback) {\r\n  var self = this;\r\n  var logger = this._logger;\r\n  return this.oauth2.authenticate(username, password).then(function(res) {\r\n    var userInfo = parseIdUrl(res.id);\r\n    self.initialize({\r\n      instanceUrl : res.instance_url,\r\n      accessToken : res.access_token,\r\n      userInfo: userInfo\r\n    });\r\n    logger.debug(\"<login> completed. user id = \" + userInfo.id + \", org id = \" + userInfo.organizationId);\r\n    return userInfo;\r\n\r\n  }).thenCall(callback);\r\n\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nfunction esc(str) {\r\n  return str && String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;')\r\n                           .replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\r\n}\r\n\r\n/**\r\n * Login by SOAP web service API\r\n *\r\n * @param {String} username - Salesforce username\r\n * @param {String} password - Salesforce password (and security token, if required)\r\n * @param {Callback.<UserInfo>} [callback] - Callback function\r\n * @returns {Promise.<UserInfo>}\r\n */\r\nConnection.prototype.loginBySoap = function(username, password, callback) {\r\n  var self = this;\r\n  var logger = this._logger;\r\n  var body = [\r\n    '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',\r\n      '<se:Header/>',\r\n      '<se:Body>',\r\n        '<login xmlns=\"urn:partner.soap.sforce.com\">',\r\n          '<username>' + esc(username) + '</username>',\r\n          '<password>' + esc(password) + '</password>',\r\n        '</login>',\r\n      '</se:Body>',\r\n    '</se:Envelope>'\r\n  ].join('');\r\n\r\n  var soapLoginEndpoint = [ this.loginUrl, \"services/Soap/u\", this.version ].join('/');\r\n\r\n  return this._transport.httpRequest({\r\n    method : 'POST',\r\n    url : soapLoginEndpoint,\r\n    body : body,\r\n    headers : {\r\n      \"Content-Type\" : \"text/xml\",\r\n      \"SOAPAction\" : '\"\"'\r\n    }\r\n  }).then(function(response) {\r\n    var m;\r\n    if (response.statusCode >= 400) {\r\n      m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);\r\n      var faultstring = m && m[1];\r\n      throw new Error(faultstring || response.body);\r\n    }\r\n    logger.debug(\"SOAP response = \" + response.body);\r\n    m = response.body.match(/<serverUrl>([^<]+)<\\/serverUrl>/);\r\n    var serverUrl = m && m[1];\r\n    m = response.body.match(/<sessionId>([^<]+)<\\/sessionId>/);\r\n    var sessionId = m && m[1];\r\n    m = response.body.match(/<userId>([^<]+)<\\/userId>/);\r\n    var userId = m && m[1];\r\n    m = response.body.match(/<organizationId>([^<]+)<\\/organizationId>/);\r\n    var orgId = m && m[1];\r\n    var idUrl = soapLoginEndpoint.split('/').slice(0, 3).join('/');\r\n    idUrl += \"/id/\" + orgId + \"/\" + userId;\r\n    var userInfo = {\r\n      id: userId,\r\n      organizationId: orgId,\r\n      url: idUrl\r\n    };\r\n    self.initialize({\r\n      serverUrl: serverUrl.split('/').slice(0, 3).join('/'),\r\n      sessionId: sessionId,\r\n      userInfo: userInfo\r\n    });\r\n    logger.debug(\"<login> completed. user id = \" + userId + \", org id = \" + orgId);\r\n    return userInfo;\r\n\r\n  }).thenCall(callback);\r\n\r\n};\r\n\r\n/**\r\n * Logout the current session \r\n *\r\n * @param {Boolean} [revoke] - Revokes API Access if set to true\r\n * @param {Callback.<undefined>} [callback] - Callback function\r\n * @returns {Promise.<undefined>}\r\n */\r\nConnection.prototype.logout = function(revoke, callback) {\r\n  if (typeof revoke === 'function') {\r\n    callback = revoke;\r\n    revoke = false;\r\n  }\r\n\r\n  if (this._sessionType === \"oauth2\") {\r\n    return this.logoutByOAuth2(revoke, callback);\r\n  } else {\r\n    return this.logoutBySoap(revoke, callback);\r\n  }\r\n};\r\n\r\n/**\r\n * Logout the current session by revoking access token via OAuth2 session revoke\r\n *\r\n * @param {Boolean} [revoke] - Revokes API Access if set to true\r\n * @param {Callback.<undefined>} [callback] - Callback function\r\n * @returns {Promise.<undefined>}\r\n */\r\nConnection.prototype.logoutByOAuth2 = function(revoke, callback) {\r\n  if (typeof revoke === 'function') {\r\n    callback = revoke;\r\n    revoke = false;\r\n  }\r\n  var self = this;\r\n  var logger = this._logger;\r\n\r\n  return this.oauth2.revokeToken(revoke ? this.refreshToken : this.accessToken).then(function() {\r\n    // Destroy the session bound to this connection\r\n    self.accessToken = null;\r\n    self.userInfo = null;\r\n    self.refreshToken = null;\r\n    self.instanceUrl = null;\r\n    self.cache.clear();\r\n\r\n    // nothing useful returned by logout API, just return\r\n    return undefined;\r\n  }).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * Logout the session by using SOAP web service API\r\n *\r\n * @param {Boolean} [revoke] - Revokes API Access if set to true\r\n * @param {Callback.<undefined>} [callback] - Callback function\r\n * @returns {Promise.<undefined>}\r\n */\r\nConnection.prototype.logoutBySoap = function(revoke, callback) {\r\n  if (typeof revoke === 'function') {\r\n    callback = revoke;\r\n    revoke = false;\r\n  }\r\n  var self = this;\r\n  var logger = this._logger;\r\n\r\n  var body = [\r\n    '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',\r\n      '<se:Header>',\r\n        '<SessionHeader xmlns=\"urn:partner.soap.sforce.com\">',\r\n          '<sessionId>' + esc(revoke ? this.refreshToken : this.accessToken) + '</sessionId>',\r\n        '</SessionHeader>',\r\n      '</se:Header>',\r\n      '<se:Body>',\r\n        '<logout xmlns=\"urn:partner.soap.sforce.com\"/>',\r\n      '</se:Body>',\r\n    '</se:Envelope>'\r\n  ].join('');\r\n\r\n  return this._transport.httpRequest({\r\n    method : 'POST',\r\n    url : [ this.instanceUrl, \"services/Soap/u\", this.version ].join('/'),\r\n    body : body,\r\n    headers : {\r\n      \"Content-Type\" : \"text/xml\",\r\n      \"SOAPAction\" : '\"\"'\r\n    }\r\n  }).then(function(response) {\r\n    logger.debug(\"SOAP statusCode = \" + response.statusCode + \", response = \" + response.body);\r\n    if (response.statusCode >= 400) {\r\n      var m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);\r\n      var faultstring = m && m[1];\r\n      throw new Error(faultstring || response.body);\r\n    }\r\n\r\n    // Destroy the session bound to this connection\r\n    self.accessToken = null;\r\n    self.userInfo = null;\r\n    self.refreshToken = null;\r\n    self.instanceUrl = null;\r\n    self.cache.clear();\r\n\r\n    // nothing useful returned by logout API, just return\r\n    return undefined;\r\n\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * List recently viewed records\r\n *\r\n * @param {String} [type] - SObject type\r\n * @param {Number} [limit] - Limit num to fetch\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>>}\r\n */\r\nConnection.prototype.recent = function(type, limit, callback) {\r\n  if (!_.isString(type)) {\r\n    callback = limit;\r\n    limit = type;\r\n    type = undefined;\r\n  }\r\n  if (!_.isNumber(limit)) {\r\n    callback = limit;\r\n    limit = undefined;\r\n  }\r\n  var url;\r\n  if (type) {\r\n    url = [ this._baseUrl(), \"sobjects\", type ].join('/');\r\n    return this.request(url).then(function(res) {\r\n      return limit ? res.recentItems.slice(0, limit) : res.recentItems;\r\n    }).thenCall(callback);\r\n  } else {\r\n    url = this._baseUrl() + \"/recent\";\r\n    if (limit) {\r\n      url += \"?limit=\" + limit;\r\n    }\r\n    return this.request(url).thenCall(callback);\r\n  }\r\n\r\n};\r\n\r\n/**\r\n * @typedef {Object} UpdatedRecordsInfo\r\n * @prop {String} latestDateCovered - The timestamp of the last date covered.\r\n * @prop {Array.<String>} ids - Updated record IDs.\r\n */\r\n\r\n/**\r\n * Retrieve updated records\r\n *\r\n * @param {String} type - SObject Type\r\n * @param {String|Date} start - start date or string representing the start of the interval\r\n * @param {String|Date} end - start date or string representing the end of the interval must be > start\r\n * @param {Callback.<UpdatedRecordsInfo>} [callback] - Callback function\r\n * @returns {Promise.<UpdatedRecordsInfo>}\r\n */\r\nConnection.prototype.updated = function (type, start, end, callback) {\r\n  var url = [ this._baseUrl(), \"sobjects\", type, \"updated\" ].join('/');\r\n\r\n  if (typeof start === 'string') {\r\n    start = new Date(start);\r\n  }\r\n\r\n  if (start instanceof Date) {\r\n    start = formatDate(start);\r\n  }\r\n\r\n  if (start) {\r\n    url += \"?start=\" + encodeURIComponent(start);\r\n  }\r\n\r\n  if (typeof end === 'string') {\r\n    end = new Date(end);\r\n  }\r\n\r\n  if (end instanceof Date) {\r\n    end = formatDate(end);\r\n  }\r\n\r\n  if (end) {\r\n    url += \"&end=\" + encodeURIComponent(end);\r\n  }\r\n\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * @typedef {Object} DeletedRecordsInfo\r\n * @prop {String} earliestDateAvailable - The timestamp of the earliest date available\r\n * @prop {String} latestDateCovered - The timestamp of the last date covered\r\n * @prop {Array.<Object>} deletedRecords - Updated records\r\n * @prop {String} deletedRecords.id - Record ID\r\n * @prop {String} deletedRecords.deletedDate - The timestamp when this record was deleted\r\n */\r\n\r\n/**\r\n * Retrieve deleted records\r\n *\r\n * @param {String} type - SObject Type\r\n * @param {String|Date} start - start date or string representing the start of the interval\r\n * @param {String|Date} end - start date or string representing the end of the interval\r\n * @param {Callback.<DeletedRecordsInfo>} [callback] - Callback function\r\n * @returns {Promise.<DeletedRecordsInfo>}\r\n */\r\nConnection.prototype.deleted = function (type, start, end, callback) {\r\n  var url = [ this._baseUrl(), \"sobjects\", type, \"deleted\" ].join('/');\r\n\r\n  if (typeof start === 'string') {\r\n    start = new Date(start);\r\n  }\r\n\r\n  if (start instanceof Date) {\r\n    start = formatDate(start);\r\n  }\r\n\r\n  if (start) {\r\n    url += \"?start=\" + encodeURIComponent(start);\r\n  }\r\n\r\n  if (typeof end === 'string') {\r\n    end = new Date(end);\r\n  }\r\n\r\n  if (end instanceof Date) {\r\n    end = formatDate(end);\r\n  }\r\n\r\n  if (end) {\r\n    url += \"&end=\" + encodeURIComponent(end);\r\n  }\r\n\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} TabsInfo - See the API document for detail structure\r\n */\r\n\r\n/**\r\n * Returns a list of all tabs\r\n *\r\n * @param {Callback.<TabsInfo>} [callback] - Callback function\r\n * @returns {Promise.<TabsInfo>}\r\n */\r\nConnection.prototype.tabs = function(callback) {\r\n  var url = [ this._baseUrl(), \"tabs\" ].join('/');\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} LimitsInfo - See the API document for detail structure\r\n */\r\n\r\n/**\r\n * Returns curren system limit in the organization\r\n *\r\n * @param {Callback.<LimitsInfo>} [callback] - Callback function\r\n * @returns {Promise.<LimitsInfo>}\r\n */\r\nConnection.prototype.limits = function(callback) {\r\n  var url = [ this._baseUrl(), \"limits\" ].join('/');\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} ThemeInfo - See the API document for detail structure\r\n */\r\n\r\n/**\r\n * Returns a theme info\r\n *\r\n * @param {Callback.<ThemeInfo>} [callback] - Callback function\r\n * @returns {Promise.<ThemeInfo>}\r\n */\r\nConnection.prototype.theme = function(callback) {\r\n  var url = [ this._baseUrl(), \"theme\" ].join('/');\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Returns all registered global quick actions\r\n *\r\n * @param {Callback.<Array.<QuickAction~QuickActionInfo>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<QuickAction~QuickActionInfo>>}\r\n */\r\nConnection.prototype.quickActions = function(callback) {\r\n  return this.request(\"/quickActions\").thenCall(callback);\r\n};\r\n\r\n/**\r\n * Get reference for specified global quick aciton\r\n *\r\n * @param {String} actionName - Name of the global quick action\r\n * @returns {QuickAction}\r\n */\r\nConnection.prototype.quickAction = function(actionName) {\r\n  return new QuickAction(this, \"/quickActions/\" + actionName);\r\n};\r\n\r\n}).call(this,require(\"buffer\").Buffer)\r\n\r\n},{\"./cache\":18,\"./core\":20,\"./http-api\":23,\"./logger\":24,\"./oauth2\":25,\"./process\":26,\"./promise\":27,\"./query\":28,\"./quick-action\":29,\"./sobject\":34,\"./transport\":36,\"buffer\":41,\"events\":47,\"inherits\":84,\"lodash/core\":88}],20:[function(require,module,exports){\r\n/**\r\n * @file JSforce Core\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n'use strict';\r\n\r\nvar EventEmitter = require('events').EventEmitter;\r\n\r\nvar jsforce = module.exports = new EventEmitter();\r\njsforce.VERSION = require('./VERSION');\r\njsforce.Connection = require('./connection');\r\njsforce.OAuth2 = require('./oauth2');\r\njsforce.Date = jsforce.SfDate = require(\"./date\");\r\njsforce.RecordStream = require('./record-stream');\r\njsforce.Promise = require('./promise');\r\njsforce.require = require('./require');\r\n\r\n},{\"./VERSION\":2,\"./connection\":19,\"./date\":22,\"./oauth2\":25,\"./promise\":27,\"./record-stream\":30,\"./require\":32,\"events\":47}],21:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar _ = require('lodash/core'),\r\n    csvParse = require('csv-parse'),\r\n    csvParseSync = require('csv-parse/lib/sync'),\r\n    csvStringify = require('csv-stringify'),\r\n    csvStringifySync = require('csv-stringify/lib/sync');\r\n\r\n/**\r\n * @private\r\n */\r\nfunction parseCSV(str, options) {\r\n  options = _.extend({}, options, { columns: true });\r\n  return csvParseSync(str, options);\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction toCSV(records, options) {\r\n  options = _.extend({}, options, { header: true });\r\n  return csvStringifySync(records, options);\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction parseCSVStream(options) {\r\n  options = _.extend({}, options, { columns: true });\r\n  return csvParse(options);\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction serializeCSVStream(options) {\r\n  options = _.extend({}, options, { header: true });\r\n  return csvStringify(options);\r\n}\r\n\r\n\r\n/**\r\n * @protected\r\n */\r\nmodule.exports = {\r\n  parseCSV: parseCSV,\r\n  toCSV: toCSV,\r\n  parseCSVStream: parseCSVStream,\r\n  serializeCSVStream: serializeCSVStream\r\n};\r\n\r\n},{\"csv-parse\":43,\"csv-parse/lib/sync\":44,\"csv-stringify\":45,\"csv-stringify/lib/sync\":46,\"lodash/core\":88}],22:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar _ = require('lodash/core');\r\n\r\n/**\r\n * A date object to keep Salesforce date literal\r\n *\r\n * @class\r\n * @constructor\r\n * @see http://www.salesforce.com/us/developer/docs/soql_sosl/Content/sforce_api_calls_soql_select_dateformats.htm\r\n */\r\nvar SfDate = module.exports = function(literal) {\r\n  this._literal = literal;\r\n};\r\n\r\n/**\r\n * Returns literal when converted to string\r\n *\r\n * @override\r\n */\r\nSfDate.prototype.toString =\r\nSfDate.prototype.toJSON = function() { return this._literal; };\r\n\r\n\r\n/** @private **/\r\nfunction zeropad(n) { return (n<10 ? \"0\" : \"\") + n; }\r\n\r\n/**\r\n * Convert JavaScript date object to ISO8601 Date format (e.g. 2012-10-31)\r\n *\r\n * @param {String|Number|Date} date - Input date\r\n * @returns {SfDate} - Salesforce date literal with ISO8601 date format\r\n */\r\nSfDate.toDateLiteral = function(date) {\r\n  if (_.isNumber(date)) {\r\n    date = new Date(date);\r\n  } else if (_.isString(date)) {\r\n    date = SfDate.parseDate(date);\r\n  }\r\n  var yy = date.getFullYear();\r\n  var mm = date.getMonth()+1;\r\n  var dd = date.getDate();\r\n  var dstr = [ yy, zeropad(mm), zeropad(dd) ].join(\"-\");\r\n  return new SfDate(dstr);\r\n};\r\n\r\n/**\r\n * Convert JavaScript date object to ISO8601 DateTime format\r\n * (e.g. 2012-10-31T12:34:56Z)\r\n *\r\n * @param {String|Number|Date} date - Input date\r\n * @returns {SfDate} - Salesforce date literal with ISO8601 datetime format\r\n */\r\nSfDate.toDateTimeLiteral = function(date) {\r\n  if (_.isNumber(date)) {\r\n    date = new Date(date);\r\n  } else if (_.isString(date)) {\r\n    date = SfDate.parseDate(date);\r\n  }\r\n  var yy = date.getUTCFullYear();\r\n  var mm = date.getUTCMonth()+1;\r\n  var dd = date.getUTCDate();\r\n  var hh = date.getUTCHours();\r\n  var mi = date.getUTCMinutes();\r\n  var ss = date.getUTCSeconds();\r\n  var dtstr =\r\n    [ yy, zeropad(mm), zeropad(dd) ].join(\"-\") + \"T\" +\r\n    [ zeropad(hh), zeropad(mi), zeropad(ss) ].join(\":\") + \"Z\";\r\n  return new SfDate(dtstr);\r\n};\r\n\r\n/**\r\n * Parse IS08601 date(time) formatted string and return date instance\r\n *\r\n * @param {String} str\r\n * @returns {Date}\r\n */\r\nSfDate.parseDate = function(str) {\r\n  var d = new Date();\r\n  var regexp = /^([\\d]{4})-?([\\d]{2})-?([\\d]{2})(T([\\d]{2}):?([\\d]{2}):?([\\d]{2})(.([\\d]{3}))?(Z|([\\+\\-])([\\d]{2}):?([\\d]{2})))?$/;\r\n  var m = str.match(regexp);\r\n  if (m) {\r\n    d = new Date(0);\r\n    if (!m[4]) {\r\n      d.setFullYear(parseInt(m[1], 10));\r\n      d.setDate(parseInt(m[3], 10));\r\n      d.setMonth(parseInt(m[2], 10) - 1);\r\n      d.setHours(0);\r\n      d.setMinutes(0);\r\n      d.setSeconds(0);\r\n      d.setMilliseconds(0);\r\n    } else {\r\n      d.setUTCFullYear(parseInt(m[1], 10));\r\n      d.setUTCDate(parseInt(m[3], 10));\r\n      d.setUTCMonth(parseInt(m[2], 10) - 1);\r\n      d.setUTCHours(parseInt(m[5], 10));\r\n      d.setUTCMinutes(parseInt(m[6], 10));\r\n      d.setUTCSeconds(parseInt(m[7], 10));\r\n      d.setUTCMilliseconds(parseInt(m[9] || '0', 10));\r\n      if (m[10] && m[10] !== 'Z') {\r\n        var offset = parseInt(m[12],10) * 60 + parseInt(m[13], 10);\r\n        d.setTime((m[11] === '+' ? -1 : 1) * offset * 60 * 1000 +d.getTime());\r\n      }\r\n    }\r\n    return d;\r\n  } else {\r\n    throw new Error(\"Invalid date format is specified : \" + str);\r\n  }\r\n};\r\n\r\n/*\r\n * Pre-defined Salesforce Date Literals\r\n */\r\nvar SfDateLiterals = {\r\n  YESTERDAY: 1,\r\n  TODAY: 1,\r\n  TOMORROW: 1,\r\n  LAST_WEEK: 1,\r\n  THIS_WEEK: 1,\r\n  NEXT_WEEK: 1,\r\n  LAST_MONTH: 1,\r\n  THIS_MONTH: 1,\r\n  NEXT_MONTH: 1,\r\n  LAST_90_DAYS: 1,\r\n  NEXT_90_DAYS: 1,\r\n  LAST_N_DAYS: 2,\r\n  NEXT_N_DAYS: 2,\r\n  NEXT_N_WEEKS: 2,\r\n  LAST_N_WEEKS: 2,\r\n  NEXT_N_MONTHS: 2,\r\n  LAST_N_MONTHS: 2,\r\n  THIS_QUARTER: 1,\r\n  LAST_QUARTER: 1,\r\n  NEXT_QUARTER: 1,\r\n  NEXT_N_QUARTERS: 2,\r\n  LAST_N_QUARTERS: 2,\r\n  THIS_YEAR: 1,\r\n  LAST_YEAR: 1,\r\n  NEXT_YEAR: 1,\r\n  NEXT_N_YEARS: 2,\r\n  LAST_N_YEARS: 2,\r\n  THIS_FISCAL_QUARTER: 1,\r\n  LAST_FISCAL_QUARTER: 1,\r\n  NEXT_FISCAL_QUARTER: 1,\r\n  NEXT_N_FISCAL_QUARTERS:2,\r\n  LAST_N_FISCAL_QUARTERS:2,\r\n  THIS_FISCAL_YEAR:1,\r\n  LAST_FISCAL_YEAR:1,\r\n  NEXT_FISCAL_YEAR:1,\r\n  NEXT_N_FISCAL_YEARS: 2,\r\n  LAST_N_FISCAL_YEARS: 2\r\n};\r\n\r\nfor (var literal in SfDateLiterals) {\r\n  var type = SfDateLiterals[literal];\r\n  SfDate[literal] =\r\n   type === 1 ? new SfDate(literal) : createLiteralBuilder(literal);\r\n}\r\n\r\n/** @private **/\r\nfunction createLiteralBuilder(literal) {\r\n  return function(num) { return new SfDate(literal + \":\" + num); };\r\n}\r\n\r\n},{\"lodash/core\":88}],23:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits = require('inherits'),\r\n    events = require('events'),\r\n    _ = require('lodash/core'),\r\n    Promise = require('./promise');\r\n\r\n/**\r\n * HTTP based API class with authorization hook\r\n *\r\n * @constructor\r\n * @extends events.EventEmitter\r\n * @param {Connection} conn - Connection object\r\n * @param {Object} [options] - Http API Options\r\n * @param {String} [options.responseType] - Overriding content mime-type in response\r\n * @param {Transport} [options.transport] - Transport for http api\r\n * @param {Object} [options.noContentResponse] - Alternative response when no content returned in response (= HTTP 204)\r\n */\r\nvar HttpApi = function(conn, options) {\r\n  options = options || {};\r\n  this._conn = conn;\r\n  this.on('resume', function(err) { conn.emit('resume', err); });\r\n  this._responseType = options.responseType;\r\n  this._transport = options.transport || conn._transport;\r\n  this._noContentResponse = options.noContentResponse;\r\n};\r\n\r\ninherits(HttpApi, events.EventEmitter);\r\n\r\n/**\r\n * Callout to API endpoint using http\r\n *\r\n * @param {Object} request - Http Request object\r\n * @param {String} request.url - Endpoint URL to request\r\n * @param {String} request.method - Http method for request\r\n * @param {Object} [request.headers] - Http request headers in hash object\r\n * @param {Callback.<Object>} callback - Callback function\r\n * @returns {Promise.<Object>} -\r\n */\r\nHttpApi.prototype.request = function(request, callback) {\r\n  var self = this;\r\n  var conn = this._conn;\r\n  var logger = conn._logger;\r\n  var refreshDelegate = this.getRefreshDelegate();\r\n  // remember previous instance url in case it changes after a refresh\r\n  var lastInstanceUrl = conn.instanceUrl;\r\n\r\n  var deferred = Promise.defer();\r\n\r\n  var onResume = function(err) {\r\n    if (err) {\r\n      deferred.reject(err);\r\n      return;\r\n    }\r\n    // check to see if the token refresh has changed the instance url\r\n    if(lastInstanceUrl !== conn.instanceUrl){\r\n      // if the instance url has changed\r\n      // then replace the current request urls instance url fragment\r\n      // with the updated instance url\r\n      request.url = request.url.replace(lastInstanceUrl,conn.instanceUrl);\r\n    }\r\n\r\n    self.request(request).then(function(response) {\r\n      deferred.resolve(response);\r\n    }, function(err) {\r\n      deferred.reject(err);\r\n    });\r\n  };\r\n\r\n  if (refreshDelegate && refreshDelegate._refreshing) {\r\n    refreshDelegate.once('resume', onResume);\r\n    return deferred.promise.thenCall(callback);\r\n  }\r\n\r\n  // hook before sending\r\n  self.beforeSend(request);\r\n\r\n  self.emit('request', request);\r\n  logger.debug(\"<request> method=\" + request.method + \", url=\" + request.url);\r\n  var requestTime = Date.now();\r\n\r\n  return this._transport.httpRequest(request).then(function(response) {\r\n    var responseTime = Date.now();\r\n    logger.debug(\"elappsed time : \" + (responseTime - requestTime) + \"msec\");\r\n    logger.debug(\"<response> status=\" + response.statusCode + \", url=\" + request.url);\r\n\r\n    self.emit('response', response);\r\n    // Refresh token if session has been expired and requires authentication\r\n    // when session refresh delegate is available\r\n    if (self.isSessionExpired(response) && refreshDelegate) {\r\n      refreshDelegate.refresh(requestTime, onResume);\r\n      return deferred.promise;\r\n    }\r\n    if (self.isErrorResponse(response)) {\r\n      var err = self.getError(response);\r\n      throw err;\r\n    }\r\n    return self.getResponseBody(response);\r\n  }, function(err) {\r\n    var responseTime = Date.now();\r\n    logger.debug(\"elappsed time : \" + (responseTime - requestTime) + \"msec\");\r\n    logger.error(err);\r\n    throw err;\r\n  })\r\n  .thenCall(callback);\r\n};\r\n\r\n/**\r\n * @protected\r\n */\r\nHttpApi.prototype.getRefreshDelegate = function() {\r\n  return this._conn._refreshDelegate;\r\n};\r\n\r\n/**\r\n *\r\n * @protected\r\n */\r\nHttpApi.prototype.beforeSend = function(request) {\r\n  request.headers = request.headers || {};\r\n  if (this._conn.accessToken) {\r\n    request.headers.Authorization = \"Bearer \" + this._conn.accessToken;\r\n  }\r\n  if (this._conn.callOptions) {\r\n    var callOptions = [];\r\n    for (var name in this._conn.callOptions) {\r\n      callOptions.push(name + \"=\" + this._conn.callOptions[name]);\r\n    }\r\n    request.headers[\"Sforce-Call-Options\"] = callOptions.join(', ');\r\n  }\r\n};\r\n\r\n/**\r\n * Detect response content mime-type\r\n * @protected\r\n */\r\nHttpApi.prototype.getResponseContentType = function(response) {\r\n  return this._responseType || response.headers && response.headers[\"content-type\"];\r\n};\r\n\r\n/**\r\n *\r\n */\r\nHttpApi.prototype.parseResponseBody = function(response) {\r\n  var contentType = this.getResponseContentType(response);\r\n  var parseBody = /^(text|application)\\/xml(;|$)/.test(contentType) ? parseXML :\r\n         /^application\\/json(;|$)/.test(contentType) ? parseJSON :\r\n         /^text\\/csv(;|$)/.test(contentType) ? parseCSV :\r\n         parseText;\r\n  try {\r\n    return parseBody(response.body);\r\n  } catch(e) {\r\n    return response.body;\r\n  }\r\n};\r\n\r\n/**\r\n * Get response body\r\n * @protected\r\n */\r\nHttpApi.prototype.getResponseBody = function(response) {\r\n  if (response.statusCode === 204) { // No Content\r\n    return this._noContentResponse;\r\n  }\r\n  var body = this.parseResponseBody(response);\r\n  var err;\r\n  if (this.hasErrorInResponseBody(body)) {\r\n    err = this.getError(response, body);\r\n    throw err;\r\n  }\r\n  if (response.statusCode === 300) { // Multiple Choices\r\n    err = new Error('Multiple records found');\r\n    err.name = \"MULTIPLE_CHOICES\";\r\n    err.content = body;\r\n    throw err;\r\n  }\r\n  return body;\r\n};\r\n\r\n/** @private */\r\nfunction parseJSON(str) {\r\n  return JSON.parse(str);\r\n}\r\n\r\n/** @private */\r\nfunction parseXML(str) {\r\n  var ret = {};\r\n  require('xml2js').parseString(str, { explicitArray: false }, function(err, result) {\r\n    ret = { error: err, result : result };\r\n  });\r\n  if (ret.error) { throw ret.error; }\r\n  return ret.result;\r\n}\r\n\r\n/** @private */\r\nfunction parseCSV(str) {\r\n  return require('./csv').parseCSV(str);\r\n}\r\n\r\n/** @private */\r\nfunction parseText(str) { return str; }\r\n\r\n\r\n/**\r\n * Detect session expiry\r\n * @protected\r\n */\r\nHttpApi.prototype.isSessionExpired = function(response) {\r\n  return response.statusCode === 401;\r\n};\r\n\r\n/**\r\n * Detect error response\r\n * @protected\r\n */\r\nHttpApi.prototype.isErrorResponse = function(response) {\r\n  return response.statusCode >= 400;\r\n};\r\n\r\n/**\r\n * Detect error in response body\r\n * @protected\r\n */\r\nHttpApi.prototype.hasErrorInResponseBody = function(body) {\r\n  return false;\r\n};\r\n\r\n/**\r\n * Parsing error message in response\r\n * @protected\r\n */\r\nHttpApi.prototype.parseError = function(body) {\r\n  var errors = body;\r\n  return _.isArray(errors) ? errors[0] : errors;\r\n};\r\n\r\n/**\r\n * Get error message in response\r\n * @protected\r\n */\r\nHttpApi.prototype.getError = function(response, body) {\r\n  var error;\r\n  try {\r\n    error = this.parseError(body || this.parseResponseBody(response));\r\n  } catch(e) {}\r\n  error = _.isObject(error) && _.isString(error.message) ? error : {\r\n    errorCode: 'ERROR_HTTP_' + response.statusCode,\r\n    message : response.body\r\n  };\r\n  var err = new Error(error.message);\r\n  err.name = error.errorCode;\r\n  for (var key in error) { err[key] = error[key]; }\r\n  return err;\r\n};\r\n\r\n/*-------------------------------------------------------------------------*/\r\n\r\n/**\r\n * @protected\r\n */\r\nvar SessionRefreshDelegate = function(conn, refreshFn) {\r\n  this._conn = conn;\r\n  this._refreshFn = refreshFn;\r\n  this._refreshing = false;\r\n};\r\n\r\ninherits(SessionRefreshDelegate, events.EventEmitter);\r\n\r\n/**\r\n * Refresh access token\r\n * @private\r\n */\r\nSessionRefreshDelegate.prototype.refresh = function(since, callback) {\r\n  // Callback immediately When refreshed after designated time\r\n  if (this._lastRefreshedAt > since) { return callback(); }\r\n  var self = this;\r\n  var conn = this._conn;\r\n  var logger = conn._logger;\r\n  self.once('resume', callback);\r\n  if (self._refreshing) { return; }\r\n  logger.debug(\"<refresh token>\");\r\n  self._refreshing = true;\r\n  return self._refreshFn(conn, function(err, accessToken, res) {\r\n    if (!err) {\r\n      logger.debug(\"Connection refresh completed.\");\r\n      conn.accessToken = accessToken;\r\n      conn.emit(\"refresh\", accessToken, res);\r\n    }\r\n    self._lastRefreshedAt = Date.now();\r\n    self._refreshing = false;\r\n    self.emit('resume', err);\r\n  });\r\n};\r\n\r\n\r\n/**\r\n *\r\n */\r\nHttpApi.SessionRefreshDelegate = SessionRefreshDelegate;\r\nmodule.exports = HttpApi;\r\n\r\n},{\"./csv\":21,\"./promise\":27,\"events\":47,\"inherits\":84,\"lodash/core\":88,\"xml2js\":123}],24:[function(require,module,exports){\r\n'use strict';\r\n\r\n/**\r\n * @protected\r\n * @class\r\n * @constructor\r\n * @param {String|Number} logLevel - Log level\r\n */\r\nvar Logger = module.exports = function(logLevel) {\r\n  if (typeof logLevel === 'string') {\r\n    logLevel = LogLevels[logLevel];\r\n  }\r\n  if (!logLevel) {\r\n    logLevel = LogLevels.INFO;\r\n  }\r\n  this._logLevel = logLevel;\r\n};\r\n\r\n/**\r\n * @memberof Logger\r\n */\r\nvar LogLevels = Logger.LogLevels = {\r\n  \"DEBUG\" : 1,\r\n  \"INFO\" : 2,\r\n  \"WARN\" : 3,\r\n  \"ERROR\" : 4,\r\n  \"FATAL\" : 5\r\n};\r\n\r\n/**\r\n * Output log\r\n *\r\n * @param {String} level - Logging target level\r\n * @param {String} message - Message to log\r\n */\r\nLogger.prototype.log = function(level, message) {\r\n  if (this._logLevel <= level) {\r\n    if (level < LogLevels.ERROR) {\r\n      console.log(message);\r\n    } else {\r\n      console.error(message);\r\n    }\r\n  }\r\n};\r\n\r\nfor (var level in LogLevels) {\r\n  Logger.prototype[level.toLowerCase()] = createLoggerFunction(LogLevels[level]);\r\n}\r\n\r\nfunction createLoggerFunction(level) {\r\n  return function(message) { this.log(level, message); };\r\n}\r\n\r\n},{}],25:[function(require,module,exports){\r\n/**\r\n * @file Manages Salesforce OAuth2 operations\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar querystring = require('querystring'),\r\n    _ = require('lodash/core'),\r\n    Transport = require('./transport');\r\n\r\nvar defaults = {\r\n  loginUrl : \"https://login.salesforce.com\"\r\n};\r\n\r\n/**\r\n * OAuth2 class\r\n *\r\n * @class\r\n * @constructor\r\n * @param {Object} options - OAuth2 config options\r\n * @param {String} [options.loginUrl] - Salesforce login server URL\r\n * @param {String} [options.authzServiceUrl] - OAuth2 authorization service URL. If not specified, it generates from default by adding to login server URL.\r\n * @param {String} [options.tokenServiceUrl] - OAuth2 token service URL. If not specified it generates from default by adding to login server URL.\r\n * @param {String} options.clientId - OAuth2 client ID.\r\n * @param {String} [options.clientSecret] - OAuth2 client secret (This is optional for public client).\r\n * @param {String} options.redirectUri - URI to be callbacked from Salesforce OAuth2 authorization service.\r\n */\r\nvar OAuth2 = module.exports = function(options) {\r\n  if (options.authzServiceUrl && options.tokenServiceUrl) {\r\n    this.loginUrl = options.authzServiceUrl.split('/').slice(0, 3).join('/');\r\n    this.authzServiceUrl = options.authzServiceUrl;\r\n    this.tokenServiceUrl = options.tokenServiceUrl;\r\n    this.revokeServiceUrl = options.revokeServiceUrl;\r\n  } else {\r\n    this.loginUrl = options.loginUrl || defaults.loginUrl;\r\n    this.authzServiceUrl = this.loginUrl + \"/services/oauth2/authorize\";\r\n    this.tokenServiceUrl = this.loginUrl + \"/services/oauth2/token\";\r\n    this.revokeServiceUrl = this.loginUrl + \"/services/oauth2/revoke\";\r\n  }\r\n  this.clientId = options.clientId;\r\n  this.clientSecret = options.clientSecret;\r\n  this.redirectUri = options.redirectUri;\r\n  if (options.proxyUrl) {\r\n    this._transport = new Transport.ProxyTransport(options.proxyUrl);\r\n  } else if (options.httpProxy) {\r\n    this._transport = new Transport.HttpProxyTransport(options.httpProxy);\r\n  } else {\r\n    this._transport = new Transport();\r\n  }\r\n};\r\n\r\n\r\n\r\n/**\r\n *\r\n */\r\n_.extend(OAuth2.prototype, /** @lends OAuth2.prototype **/ {\r\n\r\n  /**\r\n   * Get Salesforce OAuth2 authorization page URL to redirect user agent.\r\n   *\r\n   * @param {Object} params - Parameters\r\n   * @param {String} [params.scope] - Scope values in space-separated string\r\n   * @param {String} [params.state] - State parameter\r\n   * @param {String} [params.code_challenge] - Code challenge value (RFC 7636 - Proof Key of Code Exchange)\r\n   * @returns {String} Authorization page URL\r\n   */\r\n  getAuthorizationUrl : function(params) {\r\n    params = _.extend({\r\n      response_type : \"code\",\r\n      client_id : this.clientId,\r\n      redirect_uri : this.redirectUri\r\n    }, params || {});\r\n    return this.authzServiceUrl +\r\n      (this.authzServiceUrl.indexOf('?') >= 0 ? \"&\" : \"?\") +\r\n      querystring.stringify(params);\r\n  },\r\n\r\n  /**\r\n   * @typedef TokenResponse\r\n   * @type {Object}\r\n   * @property {String} access_token\r\n   * @property {String} refresh_token\r\n   */\r\n\r\n  /**\r\n   * OAuth2 Refresh Token Flow\r\n   *\r\n   * @param {String} refreshToken - Refresh token\r\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\r\n   * @returns {Promise.<TokenResponse>}\r\n   */\r\n  refreshToken : function(refreshToken, callback) {\r\n    var params = {\r\n      grant_type : \"refresh_token\",\r\n      refresh_token : refreshToken,\r\n      client_id : this.clientId\r\n    };\r\n    if (this.clientSecret) {\r\n      params.client_secret = this.clientSecret;\r\n    }\r\n    return this._postParams(params, callback);\r\n  },\r\n\r\n  /**\r\n   * OAuth2 Web Server Authentication Flow (Authorization Code)\r\n   * Access Token Request\r\n   *\r\n   * @param {String} code - Authorization code\r\n   * @param {Object} [params] - Optional parameters to send in token retrieval\r\n   * @param {String} [params.code_verifier] - Code verifier value (RFC 7636 - Proof Key of Code Exchange)\r\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\r\n   * @returns {Promise.<TokenResponse>}\r\n   */\r\n  requestToken : function(code, params, callback) {\r\n    if (typeof params === 'function') {\r\n      callback = params;\r\n      params = {};\r\n    }\r\n    params = _.extend({\r\n      grant_type : \"authorization_code\",\r\n      code : code,\r\n      client_id : this.clientId,\r\n      redirect_uri : this.redirectUri\r\n    }, params || {});\r\n    if (this.clientSecret) {\r\n      params.client_secret = this.clientSecret;\r\n    }\r\n    return this._postParams(params, callback);\r\n  },\r\n\r\n  /**\r\n   * OAuth2 Username-Password Flow (Resource Owner Password Credentials)\r\n   *\r\n   * @param {String} username - Salesforce username\r\n   * @param {String} password - Salesforce password\r\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\r\n   * @returns {Promise.<TokenResponse>}\r\n   */\r\n  authenticate : function(username, password, callback) {\r\n    return this._postParams({\r\n      grant_type : \"password\",\r\n      username : username,\r\n      password : password,\r\n      client_id : this.clientId,\r\n      client_secret : this.clientSecret,\r\n      redirect_uri : this.redirectUri\r\n    }, callback);\r\n  },\r\n\r\n  /**\r\n   * OAuth2 Revoke Session or API Token\r\n   *\r\n   * @param {String} token - Access or Refresh token to revoke. Passing in the Access token revokes the session. Passing in the Refresh token revokes API Access.\r\n   * @param {Callback.<undefined>} [callback] - Callback function\r\n   * @returns {Promise.<undefined>}\r\n   */\r\n  revokeToken : function(token, callback) {\r\n    return this._transport.httpRequest({\r\n      method : 'POST',\r\n      url : this.revokeServiceUrl,\r\n      body: querystring.stringify({ token: token }),\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n      }\r\n    }).then(function(response) {\r\n      if (response.statusCode >= 400) {\r\n        var res = querystring.parse(response.body);\r\n        if (!res || !res.error) {\r\n          res = { error: \"ERROR_HTTP_\"+response.statusCode, error_description: response.body };\r\n        }\r\n        var err = new Error(res.error_description);\r\n        err.name = res.error;\r\n        throw err;\r\n      }\r\n    }).thenCall(callback);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _postParams : function(params, callback) {\r\n    return this._transport.httpRequest({\r\n      method : 'POST',\r\n      url : this.tokenServiceUrl,\r\n      body : querystring.stringify(params),\r\n      headers : {\r\n        \"content-type\" : \"application/x-www-form-urlencoded\"\r\n      }\r\n    }).then(function(response) {\r\n      var res;\r\n      try {\r\n        res = JSON.parse(response.body);\r\n      } catch(e) {}\r\n      if (response.statusCode >= 400) {\r\n        res = res || { error: \"ERROR_HTTP_\"+response.statusCode, error_description: response.body };\r\n        var err = new Error(res.error_description);\r\n        err.name = res.error;\r\n        throw err;\r\n      }\r\n      return res;\r\n    }).thenCall(callback);\r\n  }\r\n\r\n});\r\n\r\n},{\"./transport\":36,\"lodash/core\":88,\"querystring\":96}],26:[function(require,module,exports){\r\n/**\r\n * @file Process class to manage/run workflow rule and approval process\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar _ = require('lodash/core'),\r\n    Promise = require('./promise'),\r\n    Conneciton = require('./connection');\r\n\r\n/**\r\n * A class which manages process rules and approval processes\r\n *\r\n * @class\r\n * @param {Connection} conn - Connection object\r\n */\r\nvar Process = module.exports = function(conn) {\r\n  /**\r\n   * Object which mangages process rules\r\n   * @member {Process~ProcessRule} Process#rule\r\n   */\r\n  this.rule = new ProcessRule(conn);\r\n  /**\r\n   * Object which mangages approval process\r\n   * @member {Process~ApprovalProcess} Process#approval\r\n   */\r\n  this.approval = new ApprovalProcess(conn);\r\n};\r\n\r\n/**\r\n * A class which manages process (workflow) rules\r\n *\r\n * @class Process~ProcessRule\r\n * @param {Connection} conn - Connection object\r\n */\r\nvar ProcessRule = function(conn) {\r\n  this._conn = conn;\r\n};\r\n\r\n/**\r\n * @typedef {Object} Process~ProcessRuleDefinition\r\n * @prop {String} id - Id of approval process definition\r\n * @prop {String} name - Name of process rule definition\r\n * @prop {String} object - SObject name which process rule is defined\r\n */\r\n\r\n/**\r\n * Get all process rule definitions registered to sobjects\r\n *\r\n * @method Process~ProcessRule#list\r\n * @param {Callback.<Map.<String, Array.<Process~ProcessRuleDefinition>>>} [callback] - Callback function\r\n * @returns {Promise.<Map.<String, Array.<Process~ProcessRuleDefinition>>>}\r\n */\r\nProcessRule.prototype.list = function(callback) {\r\n  return this._conn.request(\"/process/rules\").then(function(res) {\r\n    return res.rules;\r\n  }).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} Process~ProcessRuleTriggerResult\r\n * @prop {Boolean} success - Is process rule trigger succeeded or not\r\n * @prop {Array.<Object>} errors - Array of errors returned if the request failed\r\n */\r\n\r\n/**\r\n * Trigger process rule for given entities\r\n *\r\n * @method Process~ProcessRule#trigger\r\n * @param {String|Array.<String>} contextIds - Entity ID(s) to trigger workflow process\r\n * @param {Callback.<Process~ProcessRuleTriggerResult>} [callback] - Callback function\r\n * @returns {Promise.<Process~ProcessRuleTriggerResult>}\r\n */\r\nProcessRule.prototype.trigger = function(contextIds, callback) {\r\n  contextIds = _.isArray(contextIds) ? contextIds : [ contextIds ];\r\n  return this._conn.request({\r\n    method: \"POST\",\r\n    url: \"/process/rules/\",\r\n    body: JSON.stringify({\r\n      contextIds: contextIds\r\n    }),\r\n    headers: {\r\n      \"content-type\": \"application/json\"\r\n    }\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * A class which manages approval processes\r\n *\r\n * @class Process~ApprovalProcess\r\n * @param {Connection} conn - Connection object\r\n */\r\nvar ApprovalProcess = function(conn) {\r\n  this._conn = conn;\r\n};\r\n\r\n/**\r\n * @typedef {Object} Process~ApprovalProcessDefinition\r\n * @prop {String} id - Id of approval process definition\r\n * @prop {String} name - Name of approval process definition\r\n * @prop {String} object - SObject name which approval process is defined\r\n * @prop {Number} sortOrder - Processing order of approval in SObject\r\n */\r\n/**\r\n * Get all approval process definitions registered to sobjects\r\n *\r\n * @method Process~ApprovalProcess#list\r\n * @param {Callback.<Map.<String, Array.<ApprovalProcessDefinition>>>} [callback] - Callback function\r\n * @returns {Promise.<Map.<String, Array.<ApprovalProcessDefinition>>>}\r\n */\r\nApprovalProcess.prototype.list = function(callback) {\r\n  return this._conn.request(\"/process/approvals\").then(function(res) {\r\n    return res.approvals;\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * @typedef {Object} Process~ApprovalProcessRequestResult\r\n * @prop {Boolean} success - True if processing or approval completed successfully\r\n * @prop {Array.<Object>} errors - The set of errors returned if the request failed\r\n * @prop {Array.<String>} actorIds - IDs of the users who are currently assigned to this approval step\r\n * @prop {String} entityId - Object being processed\r\n * @prop {String} instanceId - ID of the ProcessInstance associated with the object submitted for processing\r\n * @prop {String} instanceStatus - Status of the current process instance (not an individual object but the entire process instance)\r\n * @prop {Array.<String>} newWorkItemIds - Case-insensitive IDs that point to ProcessInstanceWorkitem items (the set of pending approval requests)\r\n */\r\n\r\n/**\r\n * Send bulk requests for approval process\r\n *\r\n * @method Process~ApprovalProcess#request\r\n * @param {Array.<ApprovalProcessRequest>} requests - Array of approval process request to send\r\n * @param {Callback.<Array.<ApprovalProcessRequestResult>>} - Callback function\r\n * @param {Promise.<Array.<ApprovalProcessRequestResult>>}\r\n */\r\nApprovalProcess.prototype.request = function(requests, callback) {\r\n  requests = requests.map(function(req) {\r\n    return req._request ? req._request : req;\r\n  });\r\n  return this._conn.request({\r\n    method: 'POST',\r\n    url: '/process/approvals',\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify({ requests: requests })\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Create approval process request\r\n *\r\n * @private\r\n */\r\nApprovalProcess.prototype._createRequest = function(actionType, contextId, comments, options, callback) {\r\n  if (typeof comments === \"function\") {\r\n    callback = comments;\r\n    options = null;\r\n    comments = null;\r\n  }\r\n  if (typeof options === \"function\") {\r\n    callback = options;\r\n    options = null;\r\n  }\r\n  options = options || {};\r\n  var request = {\r\n    actionType: actionType,\r\n    contextId: contextId,\r\n    comments: comments\r\n  };\r\n  _.extend(request, options);\r\n  return new ApprovalProcessRequest(this, request).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Submit approval request for an item\r\n *\r\n * @method Process~ApprovalProcess#submit\r\n * @param {String} contextId - ID of the item that is being acted upon\r\n * @param {String} [comments] - Comment to add to the history step associated with this request\r\n * @param {Object} [options] - Request parameters\r\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\r\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\r\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\r\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\r\n * @returns {ApprovalProcessRequest}\r\n */\r\nApprovalProcess.prototype.submit = function(contextId, comments, options, callback) {\r\n  return this._createRequest(\"Submit\", contextId, comments, options, callback);\r\n};\r\n\r\n/**\r\n * Approve approval request for an item\r\n *\r\n * @method Process~ApprovalProcess#approve\r\n * @param {String} workitemId - ID of the item that is being acted upon\r\n * @param {String} [comments] - Comment to add to the history step associated with this request\r\n * @param {Object} [options] - Request parameters\r\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\r\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\r\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\r\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\r\n * @returns {ApprovalProcessRequest}\r\n */\r\nApprovalProcess.prototype.approve = function(workitemId, comments, options, callback) {\r\n  return this._createRequest(\"Approve\", workitemId, comments, options, callback);\r\n};\r\n\r\n/**\r\n * Reject approval request for an item\r\n *\r\n * @method Process~ApprovalProcess#reject\r\n * @param {String} workitemId - ID of the item that is being acted upon\r\n * @param {String} [comments] - Comment to add to the history step associated with this request\r\n * @param {Object} [options] - Request parameters\r\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\r\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\r\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\r\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\r\n * @returns {ApprovalProcessRequest}\r\n */\r\nApprovalProcess.prototype.reject = function(workitemId, comments, options, callback) {\r\n  return this._createRequest(\"Reject\", workitemId, comments, options, callback);\r\n};\r\n\r\n/**\r\n * A class representing approval process request\r\n *\r\n * @protected\r\n * @class Process~ApprovalProcessRequest\r\n * @implements {Promise.<Process~ApprovalProcessRequestResult>}\r\n * @param {Process~ApprovalProcess} process - ApprovalProcess\r\n * @param {Object} request - Request parameters\r\n * @param {String} request.actionType - Represents the kind of action to take: Submit, Approve, or Reject\r\n * @param {String} request.contextId - ID of the item that is being acted upon\r\n * @param {String} request.comments - Comment to add to the history step associated with this request\r\n * @param {Array.<String>} [request.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\r\n * @param {String} [request.processDefinitionNameOrId] - Developer name or ID of the process definition\r\n * @param {Boolean} [request.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\r\n */\r\nvar ApprovalProcessRequest = function(process, request) {\r\n  this._process = process;\r\n  this._request = request;\r\n};\r\n\r\n/**\r\n * Promise/A+ interface\r\n * http://promises-aplus.github.io/promises-spec/\r\n *\r\n * @method Process~ApprovalProcessRequest#then\r\n */\r\nApprovalProcessRequest.prototype.then = function(onResolve, onReject) {\r\n  if (!this._promise) {\r\n    this._promise = this._process.request([ this ]).then(function(rets) {\r\n      return rets[0];\r\n    });\r\n  }\r\n  this._promise.then(onResolve, onReject);\r\n};\r\n\r\n/**\r\n * Promise/A+ extension\r\n * Call \"then\" using given node-style callback function\r\n *\r\n * @method Process~ApprovalProcessRequest#thenCall\r\n */\r\nApprovalProcessRequest.prototype.thenCall = function(callback) {\r\n  return callback ? this.then(function(res) {\r\n    callback(null, res);\r\n  }, function(err) {\r\n    callback(err);\r\n  }) :\r\n  this;\r\n};\r\n\r\n},{\"./connection\":19,\"./promise\":27,\"lodash/core\":88}],27:[function(require,module,exports){\r\n(function (process){\r\n/*global process*/\r\n\r\n'use strict';\r\n\r\nvar _ = require('lodash/core');\r\n\r\n/**\r\n * @callback ResolvedCallback\r\n * @param {T} result - Resolved value\r\n * @returns {S}\r\n * @template T,S\r\n */\r\n\r\n/**\r\n * @callback RejectedCallback\r\n * @param {Error} reason - Rejected reason\r\n * @returns {S}\r\n * @template S\r\n */\r\n\r\n/**\r\n * @callback ResolveCallback\r\n * @param {T} result\r\n * @template T\r\n */\r\n\r\n/**\r\n * @callback RejectedCallback\r\n * @param {Error} reason - Rejected reason\r\n * @returns {S}\r\n * @template S\r\n */\r\n\r\n/**\r\n * @callback PromiseCallback\r\n * @param {ResolveCallback.<T>} resolve\r\n * @param {RejectCallback} reject\r\n * @template T\r\n */\r\n\r\n/**\r\n * Promise class with a little extension\r\n *\r\n * @class Promise\r\n * @constructor\r\n * @param {PromiseCallback.<T>}\r\n * @template T\r\n */\r\nvar Promise = require('promise/lib/es6-extensions');\r\n\r\n/**\r\n * The \"then\" method from the Promises/A+ specification\r\n *\r\n * @method Promise#then\r\n * @param {FulfilledCallback.<T, S1>} [onFulfilled]\r\n * @param {RejectedCallback.<S2>} [onRejected]\r\n * @returns {Promise.<S1|S2>}\r\n */\r\n\r\n/**\r\n * Call \"then\" using given node-style callback function.\r\n * This is basically same as \"nodeify\" except that it always return the original promise\r\n *\r\n * @method Promise#thenCall\r\n * @param {Callback.<T>} [callback] - Callback function\r\n * @returns {Promise}\r\n */\r\nPromise.prototype.thenCall = function(callback) {\r\n  if (_.isFunction(callback)) {\r\n    this.then(function(res) {\r\n      process.nextTick(function() {\r\n        callback(null, res);\r\n      });\r\n    }, function(err) {\r\n      process.nextTick(function() {\r\n        callback(err);\r\n      });\r\n    });\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * A sugar method, equivalent to promise.then(undefined, onRejected).\r\n *\r\n * @method Promise#catch\r\n * @param {RejectedCallback.<S>} onRejected\r\n * @returns {Promise.<S>}\r\n */\r\n\r\n/**\r\n * Synonym of Promise#catch\r\n *\r\n * @method Promise#fail\r\n * @param {RejectedCallback.<S>} onRejected\r\n * @returns {Promise.<S>}\r\n */\r\nPromise.prototype.fail = Promise.prototype['catch'];\r\n\r\n/**\r\n * Returns resolving promise with given reason\r\n *\r\n * @method Promise.resolve\r\n * @param {*} result - Resolved value\r\n * @returns {Promise}\r\n */\r\n\r\n/**\r\n * Returns rejecting promise with given reason\r\n *\r\n * @method Promise.reject\r\n * @param {Error} reason - Rejecting reason\r\n * @returns {Promise}\r\n */\r\n\r\n/**\r\n * Returns a promise that is fulfilled with an array containing the fulfillment value of each promise,\r\n * or is rejected with the same rejection reason as the first promise to be rejected.\r\n *\r\n * @method Promise.all\r\n * @param {Array.<Promise.<*>|*>} promises\r\n * @returns {Promise.<Array.<*>>}\r\n */\r\n\r\n/**\r\n * Returns a deferred object\r\n *\r\n * @method Promise.defer\r\n * @returns {Deferred}\r\n */\r\nPromise.defer = function() {\r\n  return new Deferred();\r\n};\r\n\r\n/**\r\n * Deferred object\r\n *\r\n * @protected\r\n * @constructor\r\n */\r\nvar Deferred = function() {\r\n  var self = this;\r\n  this.promise = new Promise(function(resolve, reject) {\r\n    self.resolve = resolve;\r\n    self.reject = reject;\r\n  });\r\n};\r\n\r\n/**\r\n * Resolve promise\r\n * @method Deferred#resolve\r\n * @param {*} result - Resolving result\r\n */\r\n\r\n/**\r\n * Reject promise\r\n * @method Deferred#reject\r\n * @param {Error} error - Rejecting reason\r\n */\r\n\r\n/**\r\n *\r\n */\r\nmodule.exports = Promise;\r\n\r\n}).call(this,require('_process'))\r\n\r\n},{\"_process\":91,\"lodash/core\":88,\"promise/lib/es6-extensions\":93}],28:[function(require,module,exports){\r\n(function (process){\r\n/*global process*/\r\n/**\r\n * @file Manages query for records in Salesforce\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar inherits = require('inherits'),\r\n    events = require('events'),\r\n    stream = require('readable-stream'),\r\n    _      = require('lodash/core'),\r\n    Promise = require('./promise'),\r\n    SfDate = require(\"./date\"),\r\n    SOQLBuilder = require(\"./soql-builder\"),\r\n    RecordStream = require(\"./record-stream\");\r\n\r\n/**\r\n * Query\r\n *\r\n * @protected\r\n * @class\r\n * @extends {stream.Readable}\r\n * @implements Promise.<T>\r\n * @template T\r\n * @param {Connection} conn - Connection object\r\n * @param {Object|String} config - Query config object or SOQL string\r\n * @param {Object} [options] - Default query options\r\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\r\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\r\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\r\n */\r\nvar Query = module.exports = function(conn, config, options) {\r\n  Query.super_.call(this, { objectMode: true });\r\n\r\n  this._conn = conn;\r\n  if (_.isString(config)) { // if query config is string, it is given in SOQL.\r\n    this._soql = config;\r\n  } else if (config.locator && config.locator.indexOf(\"/\") >= 0) { // if locator given in url for next records\r\n    this._locator = config.locator.split(\"/\").pop();\r\n  } else {\r\n    this._config = config;\r\n    this.select(config.fields);\r\n    if (config.includes) {\r\n      this.include(config.includes);\r\n    }\r\n    if (config.sort) {\r\n      this.sort(config.sort);\r\n    }\r\n  }\r\n  this._options = _.defaults(options || {}, {\r\n    maxFetch: 10000,\r\n    autoFetch: false,\r\n    scanAll: false,\r\n    responseTarget: ResponseTargets.QueryResult\r\n  });\r\n  this._executed = false;\r\n  this._finished = false;\r\n  this._chaining = false;\r\n\r\n  this._deferred = Promise.defer();\r\n\r\n  var self = this;\r\n};\r\n\r\ninherits(Query, stream.Readable);\r\n\r\n/**\r\n * Select fields to include in the returning result\r\n *\r\n * @param {Object|Array.<String>|String} fields - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.select = function(fields) {\r\n  if (this._soql) {\r\n    throw Error(\"Cannot set select fields for the query which has already built SOQL.\");\r\n  }\r\n  fields = fields || '*';\r\n  if (_.isString(fields)) {\r\n    fields = fields.split(/\\s*,\\s*/);\r\n  } else if (_.isObject(fields) && !_.isArray(fields)) {\r\n    var _fields =  [];\r\n    for (var k in fields) {\r\n      if (fields[k]) { _fields.push(k); }\r\n    }\r\n    fields = _fields;\r\n  }\r\n  this._config.fields = fields;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set query conditions to filter the result records\r\n *\r\n * @param {Object|String} conditions - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.where = function(conditions) {\r\n  if (this._soql) {\r\n    throw Error(\"Cannot set where conditions for the query which has already built SOQL.\");\r\n  }\r\n  this._config.conditions = conditions;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Limit the returning result\r\n *\r\n * @param {Number} limit - Maximum number of records the query will return.\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.limit = function(limit) {\r\n  if (this._soql) {\r\n    throw Error(\"Cannot set limit for the query which has already built SOQL.\");\r\n  }\r\n  this._config.limit = limit;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Synonym of Query#offset()\r\n *\r\n * @method Query#skip\r\n * @param {Number} offset - Offset number where begins returning results.\r\n * @returns {Query.<T>}\r\n */\r\n/**\r\n * Skip records\r\n *\r\n * @method Query#offset\r\n * @param {Number} offset - Offset number where begins returning results.\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.skip =\r\nQuery.prototype.offset = function(offset) {\r\n  if (this._soql) {\r\n    throw Error(\"Cannot set skip/offset for the query which has already built SOQL.\");\r\n  }\r\n  this._config.offset = offset;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Synonym of Query#sort()\r\n *\r\n * @memthod Query#orderby\r\n * @param {String|Object} sort - Sorting field or hash object with field name and sord direction\r\n * @param {String|Number} [dir] - Sorting direction (ASC|DESC|1|-1)\r\n * @returns {Query.<T>}\r\n */\r\n/**\r\n * Set query sort with direction\r\n *\r\n * @method Query#sort\r\n * @param {String|Object} sort - Sorting field or hash object with field name and sord direction\r\n * @param {String|Number} [dir] - Sorting direction (ASC|DESC|1|-1)\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.sort =\r\nQuery.prototype.orderby = function(sort, dir) {\r\n  if (this._soql) {\r\n    throw Error(\"Cannot set sort for the query which has already built SOQL.\");\r\n  }\r\n  if (_.isString(sort) && _.isString(dir)) {\r\n    sort = [ [ sort, dir ] ];\r\n  }\r\n  this._config.sort = sort;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Include child relationship query\r\n *\r\n * @param {String} childRelName - Child relationship name to include in query result\r\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\r\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\r\n * @param {Object} [options] - Optional query configulations.\r\n * @param {Number} [options.limit] - Maximum number of records the query will return.\r\n * @param {Number} [options.offset] - Offset number where begins returning results.\r\n * @param {Number} [options.skip] - Synonym of options.offset.\r\n * @returns {Query~SubQuery}\r\n */\r\nQuery.prototype.include = function(childRelName, conditions, fields, options) {\r\n  if (this._soql) {\r\n    throw Error(\"Cannot include child relationship into the query which has already built SOQL.\");\r\n  }\r\n  if (_.isObject(childRelName)) {\r\n    var includes = childRelName;\r\n    for (var crname in includes) {\r\n      var config = includes[crname];\r\n      this.include(crname, config.conditions, config.fields, config);\r\n    }\r\n    return;\r\n  }\r\n  var childConfig = {\r\n    table: childRelName,\r\n    conditions: conditions,\r\n    fields: fields,\r\n    limit: options && options.limit,\r\n    offset: options && (options.offset || options.skip),\r\n    sort: options && options.sort\r\n  };\r\n  if (!_.isArray(this._config.includes)) this._config.includes = [];\r\n  this._config.includes.push(childConfig);\r\n  var childQuery = new SubQuery(this._conn, this, childConfig);\r\n  this._children = this._children || [];\r\n  this._children.push(childQuery);\r\n  return childQuery;\r\n};\r\n\r\n\r\n/**\r\n * Setting maxFetch query option\r\n *\r\n * @param {Number} maxFetch - Max fetching records in auto fetch mode\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.maxFetch = function(maxFetch) {\r\n  this._options.maxFetch = maxFetch;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Switching auto fetch mode\r\n *\r\n * @param {Boolean} autoFetch - Using auto fetch mode or not\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.autoFetch = function(autoFetch) {\r\n  this._options.autoFetch = autoFetch;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set flag to scan all records including deleted and archived.\r\n *\r\n * @param {Boolean} scanAll - Flag whether include deleted/archived record or not. Default is false.\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.scanAll = function(scanAll) {\r\n  this._options.scanAll = scanAll;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nvar ResponseTargets = Query.ResponseTargets = {};\r\n[ \"QueryResult\", \"Records\", \"SingleRecord\", \"Count\" ].forEach(function(f) {\r\n  ResponseTargets[f] = f;\r\n});\r\n\r\n/**\r\n * @protected\r\n * @param {String} responseTarget - Query response target\r\n * @returns {Query.<S>}\r\n */\r\nQuery.prototype.setResponseTarget = function(responseTarget) {\r\n  if (responseTarget in ResponseTargets) {\r\n    this._options.responseTarget = responseTarget;\r\n  }\r\n  return this;\r\n};\r\n\r\n\r\n/**\r\n * Synonym of Query#execute()\r\n *\r\n * @method Query#run\r\n * @param {Object} [options] - Query options\r\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\r\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\r\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\r\n * @param {Callback.<T>} [callback] - Callback function\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.run =\r\n/**\r\n * Synonym of Query#execute()\r\n *\r\n * @method Query#exec\r\n * @param {Object} [options] - Query options\r\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\r\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\r\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\r\n * @param {Callback.<T>} [callback] - Callback function\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.exec =\r\n/**\r\n * Execute query and fetch records from server.\r\n *\r\n * @method Query#execute\r\n * @param {Object} [options] - Query options\r\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\r\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\r\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\r\n * @param {Callback.<T>} [callback] - Callback function\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.execute = function(options, callback) {\r\n  var self = this;\r\n  var logger = this._conn._logger;\r\n  var deferred = this._deferred;\r\n\r\n  if (this._executed) {\r\n    deferred.reject(new Error(\"re-executing already executed query\"));\r\n    return this;\r\n  }\r\n\r\n  if (this._finished) {\r\n    deferred.reject(new Error(\"executing already closed query\"));\r\n    return this;\r\n  }\r\n\r\n  if (typeof options === \"function\") {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  options = {\r\n    headers: options.headers || self._options.headers,\r\n    responseTarget: options.responseTarget || self._options.responseTarget,\r\n    autoFetch: options.autoFetch || self._options.autoFetch,\r\n    maxFetch: options.maxFetch || self._options.maxFetch,\r\n    scanAll: options.scanAll || self._options.scanAll\r\n  };\r\n\r\n  // callback and promise resolution;\r\n  var promiseCallback = function(err, res) {\r\n    if (_.isFunction(callback)) {\r\n      try {\r\n        res = callback(err, res);\r\n        err = null;\r\n      } catch(e) {\r\n        err = e;\r\n      }\r\n    }\r\n    if (err) {\r\n      deferred.reject(err);\r\n    } else {\r\n      deferred.resolve(res);\r\n    }\r\n  };\r\n  this.once('response', function(res) {\r\n    promiseCallback(null, res);\r\n  });\r\n  this.once('error', function(err) {\r\n    promiseCallback(err);\r\n  });\r\n\r\n  // collect fetched records in array\r\n  // only when response target is Records and\r\n  // either callback or chaining promises are available to this query.\r\n  this.once('fetch', function() {\r\n    if (options.responseTarget === ResponseTargets.Records && (self._chaining || callback)) {\r\n      logger.debug('--- collecting all fetched records ---');\r\n      var records = [];\r\n      var onRecord = function(record) {\r\n        records.push(record);\r\n      };\r\n      self.on('record', onRecord);\r\n      self.once('end', function() {\r\n        self.removeListener('record', onRecord);\r\n        self.emit('response', records, self);\r\n      });\r\n    }\r\n  });\r\n\r\n  // flag to prevent re-execution\r\n  this._executed = true;\r\n\r\n  // start actual query\r\n  logger.debug('>>> Query start >>>');\r\n  this._execute(options).then(function() {\r\n    logger.debug('*** Query finished ***');\r\n  }).fail(function(err) {\r\n    logger.debug('--- Query error ---');\r\n    self.emit('error', err);\r\n  });\r\n\r\n  // return Query instance for chaining\r\n  return this;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nQuery.prototype._execute = function(options) {\r\n  var self = this;\r\n  var logger = this._conn._logger;\r\n  var responseTarget = options.responseTarget;\r\n  var autoFetch = options.autoFetch;\r\n  var maxFetch = options.maxFetch;\r\n  var scanAll = options.scanAll;\r\n\r\n  return Promise.resolve(\r\n    self._locator ?\r\n    self._conn._baseUrl() + \"/query/\" + self._locator :\r\n    self.toSOQL().then(function(soql) {\r\n      self.totalFetched = 0;\r\n      logger.debug(\"SOQL = \" + soql);\r\n      return self._conn._baseUrl() + \"/\" + (scanAll ? \"queryAll\" : \"query\") + \"?q=\" + encodeURIComponent(soql);\r\n    })\r\n  ).then(function(url) {\r\n    return self._conn.request({\r\n      method: 'GET',\r\n      url: url,\r\n      headers: options.headers\r\n    });\r\n  }).then(function(data) {\r\n    self.emit(\"fetch\");\r\n    self.totalSize = data.totalSize;\r\n    var res;\r\n    switch(responseTarget) {\r\n      case ResponseTargets.SingleRecord:\r\n        res = data.records && data.records.length > 0 ? data.records[0] : null;\r\n        break;\r\n      case ResponseTargets.Records:\r\n        res = data.records;\r\n        break;\r\n      case ResponseTargets.Count:\r\n        res = data.totalSize;\r\n        break;\r\n      default:\r\n        res = data;\r\n    }\r\n    // only fire response event when it should be notified per fetch\r\n    if (responseTarget !== ResponseTargets.Records) {\r\n      self.emit(\"response\", res, self);\r\n    }\r\n\r\n    // streaming record instances\r\n    var numRecords = (data.records && data.records.length) || 0;\r\n    for (var i=0; i<numRecords; i++) {\r\n      if (self.totalFetched >= maxFetch) {\r\n        self._finished = true;\r\n        break;\r\n      }\r\n      var record = data.records[i];\r\n      self.push(record);\r\n      self.emit('record', record, self.totalFetched++, self);\r\n    }\r\n    if (data.nextRecordsUrl) {\r\n      self._locator = data.nextRecordsUrl.split('/').pop();\r\n    }\r\n    self._finished = self._finished || data.done || !autoFetch;\r\n    if (self._finished) {\r\n      self.push(null);\r\n    } else {\r\n      self._execute(options);\r\n    }\r\n    return res;\r\n  });\r\n};\r\n\r\n/**\r\n * Readable stream implementation\r\n *\r\n * @override\r\n * @private\r\n */\r\nQuery.prototype._read = function(size) {\r\n  if (!this._finished && !this._executed) {\r\n    this.execute({ autoFetch: true });\r\n  }\r\n};\r\n\r\n/** @override **/\r\nQuery.prototype.on = function(e, fn) {\r\n  if (e === 'record') {\r\n    var self = this;\r\n    this.on('readable', function() {\r\n      while(self.read() !== null) {} // discard buffered records\r\n    });\r\n  }\r\n  return Query.super_.prototype.on.call(this, e, fn);\r\n};\r\n\r\n/** @override **/\r\nQuery.prototype.addListener = Query.prototype.on;\r\n\r\n\r\n/**\r\n * @private\r\n */\r\nQuery.prototype._expandFields = function() {\r\n  if (this._soql) {\r\n    return Promise.reject(new Error(\"Cannot expand fields for the query which has already built SOQL.\"));\r\n  }\r\n  var self = this;\r\n  var logger = self._conn._logger;\r\n  var conn = this._conn;\r\n  var table = this._config.table;\r\n  var fields = this._config.fields || [];\r\n\r\n  logger.debug('_expandFields: table = ' + table + ', fields = ' + fields.join(', '));\r\n\r\n  return Promise.all([\r\n    Promise.resolve(self._parent ? findRelationTable(table) : table)\r\n      .then(function(table) {\r\n        return Promise.all(\r\n          _.map(fields, function(field) { return expandAsteriskField(table, field); })\r\n        ).then(function(expandedFields) {\r\n          self._config.fields = _.flatten(expandedFields);\r\n        });\r\n      }),\r\n    Promise.all(\r\n      _.map(self._children || [], function(childQuery) {\r\n        return childQuery._expandFields();\r\n      })\r\n    )\r\n  ]);\r\n\r\n  function findRelationTable(rname) {\r\n    var ptable = self._parent._config.table;\r\n    logger.debug('finding table for relation \"' + rname + '\" in \"' + ptable + '\"...');\r\n    return describeCache(ptable).then(function(sobject) {\r\n      var upperRname = rname.toUpperCase();\r\n      var childRelation = _.find(sobject.childRelationships, function(cr) {\r\n        return (cr.relationshipName || '').toUpperCase() === upperRname;\r\n      });\r\n      return childRelation ? childRelation.childSObject :\r\n        Promise.reject(new Error(\"No child relationship found: \" + rname ));\r\n    });\r\n  }\r\n\r\n  function describeCache(table) {\r\n    logger.debug('describe cache: '+table);\r\n    var deferred = Promise.defer();\r\n    conn.describe$(table, function(err, sobject) {\r\n      logger.debug('... done.');\r\n      if (err) { deferred.reject(err); }\r\n      else { deferred.resolve(sobject); }\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  function expandAsteriskField(table, field) {\r\n    logger.debug('expanding field \"'+ field + '\" in \"' + table + '\"...');\r\n    var fpath = field.split('.');\r\n    return fpath[fpath.length - 1] === '*' ?\r\n      describeCache(table).then(function(sobject) {\r\n        logger.debug('table '+table+'has been described');\r\n        if (fpath.length > 1) {\r\n          var rname = fpath.shift();\r\n          var rfield = _.find(sobject.fields, function(f) {\r\n            return f.relationshipName &&\r\n                   f.relationshipName.toUpperCase() === rname.toUpperCase();\r\n          });\r\n          if (rfield) {\r\n            var rtable = rfield.referenceTo.length === 1 ? rfield.referenceTo[0] : 'Name';\r\n            return expandAsteriskField(rtable, fpath.join('.')).then(function(fpaths) {\r\n              return _.map(fpaths, function(fpath) { return rname + '.' + fpath; });\r\n            });\r\n          } else {\r\n            return [];\r\n          }\r\n        } else {\r\n          return _.map(sobject.fields, function(f) { return f.name; });\r\n        }\r\n      }) :\r\n      Promise.resolve([ field ]);\r\n  }\r\n};\r\n\r\n/**\r\n * Explain plan for executing query\r\n *\r\n * @param {Callback.<ExplainInfo>} [callback] - Callback function\r\n * @returns {Promise.<ExplainInfo>}\r\n */\r\nQuery.prototype.explain = function(callback) {\r\n  var self = this;\r\n  var logger = this._conn._logger;\r\n  return self.toSOQL().then(function(soql) {\r\n    logger.debug(\"SOQL = \" + soql);\r\n    var url = \"/query/?explain=\" + encodeURIComponent(soql);\r\n    return self._conn.request(url);\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Return SOQL expression for the query\r\n *\r\n * @param {Callback.<String>} [callback] - Callback function\r\n * @returns {Promise.<String>}\r\n */\r\nQuery.prototype.toSOQL = function(callback) {\r\n  var self = this;\r\n  return Promise.resolve(self._soql ||\r\n    self._expandFields().then(function() { return SOQLBuilder.createSOQL(self._config); })\r\n  ).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Create data stream of queried records.\r\n * Automatically resume query if paused.\r\n *\r\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\r\n * @param {Object} [options] - Options passed to converter\r\n * @returns {stream.Readable}\r\n */\r\nQuery.prototype.stream = RecordStream.Serializable.prototype.stream;\r\n\r\n/**\r\n * Get record stream of queried records applying the given mapping function\r\n *\r\n * @param {RecordMapFunction} fn - Record mapping function\r\n * @returns {RecordStream.Serializable}\r\n */\r\nQuery.prototype.map = RecordStream.prototype.map;\r\n\r\n/**\r\n * Get record stream of queried records, applying the given filter function\r\n *\r\n * @param {RecordFilterFunction} fn - Record filtering function\r\n * @returns {RecordStream.Serializable}\r\n */\r\nQuery.prototype.filter = RecordStream.prototype.map;\r\n\r\n/*\r\n * Default threshold num of bulk API switching\r\n */\r\nvar DEFAULT_BULK_THRESHOLD = 200;\r\n\r\n/**\r\n * Synonym of Query#destroy()\r\n *\r\n * @method Query#delete\r\n * @param {String} [type] - SObject type. Required for SOQL based query object.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>>}\r\n */\r\n/**\r\n * Synonym of Query#destroy()\r\n *\r\n * @method Query#del\r\n * @param {String} [type] - SObject type. Required for SOQL based query object.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>>}\r\n */\r\n/**\r\n * Delete queried records\r\n *\r\n * @method Query#destroy\r\n * @param {String} [type] - SObject type. Required for SOQL based query object.\r\n * @param {Object} [options] - Mass delete operation options\r\n * @param {Boolean} [options.allowBulk] - Allow switching to Bulk API when the num of queried records reached to certain threshold. Default is true.\r\n * @param {Number} [options.bulkThreshold] - Threshold num to switch to use Bulk API instead of usual `SObject#delete()` call. Default value is 200 after API ver 42.0, and 0.5 * `maxRequest` before API ver 42.0.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>>}\r\n */\r\nQuery.prototype[\"delete\"] =\r\nQuery.prototype.del =\r\nQuery.prototype.destroy = function(type, options, callback) {\r\n  if (typeof type === 'function') {\r\n    callback = type;\r\n    options = {};\r\n    type = null;\r\n  } else if (typeof type === 'object' && type !== null) {\r\n    callback = options;\r\n    options = type;\r\n    type = null;\r\n  }\r\n  options = options || {};\r\n  type = type || (this._config && this._config.table);\r\n  if (!type) {\r\n    throw new Error(\"SOQL based query needs SObject type information to bulk delete.\");\r\n  }\r\n  // Set the threshold number to pass to bulk API\r\n  var thresholdNum =\r\n    options.allowBulk === false ?\r\n      -1 :\r\n    typeof options.bulkThreshold === 'number' ?\r\n      options.bulkThreshold :\r\n      // determine threshold if the connection version supports SObject collection API or not\r\n      (this._conn._ensureVersion(42) ? DEFAULT_BULK_THRESHOLD : this._conn.maxRequest / 2);\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    var records = [];\r\n    var batch = null;\r\n    var handleRecord = function(rec) {\r\n      if (!rec.Id) {\r\n        self.emit('error', new Error('Queried record does not include Salesforce record ID.'))\r\n        return;\r\n      }\r\n      var record = { Id: rec.Id };\r\n      if (batch) {\r\n        batch.write(record);\r\n      } else {\r\n        records.push(record);\r\n        if (thresholdNum < 0 || records.length > thresholdNum) {\r\n          // Use bulk delete instead of SObject REST API\r\n          batch =\r\n            self._conn.sobject(type).deleteBulk()\r\n              .on('response', resolve)\r\n              .on('error', reject);\r\n          records.forEach(function(record) {\r\n            batch.write(record);\r\n          });\r\n          records = [];\r\n        }\r\n      }\r\n    };\r\n    var handleEnd = function() {\r\n      if (batch) {\r\n        batch.end();\r\n      } else {\r\n        var ids = records.map(function (record) { return record.Id; });\r\n        self._conn.sobject(type).destroy(ids, { allowRecursive: true }).then(resolve, reject);\r\n      }\r\n    };\r\n    self.on('data', handleRecord)\r\n      .on('end', handleEnd)\r\n      .on('error', reject);\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Update queried records, using given mapping function/object\r\n *\r\n * @param {Record|RecordMapFunction} mapping - Mapping record or record mapping function\r\n * @param {String} [type] - SObject type. Required for SOQL based query object.\r\n * @param {Object} [options] - Mass update operation options\r\n * @param {Boolean} [options.allowBulk] - Allow switching to Bulk API when the num of queried records reached to certain threshold. Default is true.\r\n * @param {Number} [options.bulkThreshold] - Threshold num to switch to use Bulk API instead of usual `SObject#delete()` call. Default value is 200 after API ver 42.0, and 0.5 * `maxRequest` before API ver 42.0.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>>}\r\n */\r\nQuery.prototype.update = function(mapping, type, options, callback) {\r\n  if (typeof type === 'function') {\r\n    callback = type;\r\n    options = {};\r\n    type = null;\r\n  } else if (typeof type === 'object' && type !== null) {\r\n    callback = options;\r\n    options = type;\r\n    type = null;\r\n  }\r\n  options = options || {};\r\n  type = type || (this._config && this._config.table);\r\n  if (!type) {\r\n    throw new Error(\"SOQL based query needs SObject type information to bulk update.\");\r\n  }\r\n  var updateStream = _.isFunction(mapping) ? RecordStream.map(mapping) : RecordStream.recordMapStream(mapping);\r\n  // Set the threshold number to pass to bulk API\r\n  var thresholdNum =\r\n    options.allowBulk === false ?\r\n      -1 :\r\n    typeof options.bulkThreshold === 'number' ?\r\n      options.bulkThreshold :\r\n      // determine threshold if the connection version supports SObject collection API or not\r\n      (this._conn._ensureVersion(42) ? DEFAULT_BULK_THRESHOLD : this._conn.maxRequest / 2);\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    var records = [];\r\n    var batch = null;\r\n    var handleRecord = function(record) {\r\n      if (batch) {\r\n        batch.write(record);\r\n      } else {\r\n        records.push(record);\r\n        if (thresholdNum < 0 || records.length > thresholdNum) {\r\n          // Use bulk update instead of SObject REST API\r\n          batch =\r\n            self._conn.sobject(type).updateBulk()\r\n              .on('response', resolve)\r\n              .on('error', reject);\r\n          records.forEach(function(record) {\r\n            batch.write(record);\r\n          });\r\n          records = [];\r\n        }\r\n      }\r\n    };\r\n    var handleEnd = function() {\r\n      if (batch) {\r\n        batch.end();\r\n      } else {\r\n        self._conn.sobject(type).update(records, { allowRecursive: true }).then(resolve, reject);\r\n      }\r\n    };\r\n    self.on('error', reject)\r\n      .pipe(updateStream)\r\n      .on('data', handleRecord)\r\n      .on('end', handleEnd)\r\n      .on('error', reject);\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Promise/A+ interface\r\n * http://promises-aplus.github.io/promises-spec/\r\n *\r\n * Delegate to deferred promise, return promise instance for query result\r\n *\r\n * @param {FulfilledCallback.<T, S1>} [onFulfilled]\r\n * @param {RejectedCallback.<S2>} [onRejected]\r\n * @returns {Promise.<S1|S2>}\r\n */\r\nQuery.prototype.then = function(onResolved, onReject) {\r\n  this._chaining = true;\r\n  if (!this._finished && !this._executed) { this.execute(); }\r\n  return this._deferred.promise.then.apply(this._deferred.promise, arguments);\r\n};\r\n\r\n/**\r\n * Promise/A+ extension\r\n * Call \"then\" using given node-style callback function\r\n *\r\n * @param {Callback.<T>} [callback] - Callback function\r\n * @returns {Query}\r\n */\r\nQuery.prototype.thenCall = function(callback) {\r\n  if (_.isFunction(callback)) {\r\n    this.then(function(res) {\r\n      process.nextTick(function() {\r\n        callback(null, res);\r\n      });\r\n    }, function(err) {\r\n      process.nextTick(function() {\r\n        callback(err);\r\n      });\r\n    });\r\n  }\r\n  return this;\r\n};\r\n\r\n/*--------------------------------------------*/\r\n\r\n/**\r\n * SubQuery object for representing child relationship query\r\n *\r\n * @protected\r\n * @class Query~SubQuery\r\n * @extends Query\r\n * @param {Connection} conn - Connection object\r\n * @param {Query} parent - Parent query object\r\n * @param {Object} config - Sub query configuration\r\n */\r\nvar SubQuery = function(conn, parent, config) {\r\n  SubQuery.super_.call(this, conn, config);\r\n  this._parent = parent;\r\n};\r\n\r\ninherits(SubQuery, Query);\r\n\r\n/**\r\n * @method Query~SubQuery#include\r\n * @override\r\n */\r\nSubQuery.prototype.include = function() {\r\n  throw new Error(\"Not allowed to include another subquery in subquery.\");\r\n};\r\n\r\n/**\r\n * Back the context to parent query object\r\n *\r\n * @method Query~SubQuery#end\r\n * @returns {Query}\r\n */\r\nSubQuery.prototype.end = function() {\r\n  return this._parent;\r\n};\r\n\r\n/**\r\n * If execute is called in subquery context, delegate it to parent query object\r\n *\r\n * @method Query~SubQuery#execute\r\n * @override\r\n */\r\nSubQuery.prototype.run =\r\nSubQuery.prototype.exec =\r\nSubQuery.prototype.execute = function() {\r\n  return this._parent.execute.apply(this._parent, arguments);\r\n};\r\n\r\n}).call(this,require('_process'))\r\n\r\n},{\"./date\":22,\"./promise\":27,\"./record-stream\":30,\"./soql-builder\":35,\"_process\":91,\"events\":47,\"inherits\":84,\"lodash/core\":88,\"readable-stream\":107}],29:[function(require,module,exports){\r\n/**\r\n * @file Represents Salesforce QuickAction\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\n\r\n/**\r\n * A class for quick action\r\n *\r\n * @protected\r\n * @constructor\r\n */\r\nvar QuickAction = module.exports = function(conn, path) {\r\n  this._conn = conn;\r\n  this._path = path;\r\n};\r\n\r\n/**\r\n * @typedef {Object} QuickAction~QuickActionInfo\r\n * @prop {String} type - Type of the action (e.g. Create, Update, Post, LogACall)\r\n * @prop {String} name - Name of the action\r\n * @prop {String} label - Label of the action\r\n * @prop {Object} urls - Endpoint URL information of the action\r\n */\r\n/**\r\n * @typedef {QuickAction~QuickActionInfo} QuickAction~QuickActionDescriveInfo\r\n * @prop {String} contextSobjectType - Object type used for the action\r\n * @prop {String} targetSobjectType - Object type of the action to target\r\n * @prop {String} targetParentField - Field name in the target object which refers parent(context) object record ID.\r\n * @prop {String} targetRecordTypeId - Record type of the targeted record\r\n * @prop {Object} layout - Layout sections that comprise an action\r\n */\r\n\r\n/**\r\n * Describe the action's information (including layout, etc.)\r\n *\r\n * @param {Callback.<QuickAction~QuickActionDescriveInfo>} [callback] - Callback function\r\n * @returns {Promise.<QuickAction~QuickActionDescriveInfo>}\r\n */\r\nQuickAction.prototype.describe = function(callback) {\r\n  var url = this._path + \"/describe\";\r\n  return this._conn.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Retrieve default field values in the action (for given record, if specified)\r\n *\r\n * @param {String} [contextId] - ID of record to get default values specific to the record\r\n * @param {Callback.<Record>} [callback] - Callback function\r\n * @returns {Promise.<Record>}\r\n */\r\nQuickAction.prototype.defaultValues = function(contextId, callback) {\r\n  if (typeof contextId === 'function') {\r\n    callback = contextId;\r\n    contextId = null;\r\n  }\r\n  var url = this._path + \"/defaultValues\";\r\n  if (contextId) {\r\n    url += \"/\" + contextId;\r\n  }\r\n  return this._conn.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * @typedef {Object} QuickAction~QuickActionResult\r\n * @param {String} id - Record id of the action result\r\n * @param {Array.<String>} feedItemIds - List of IDs for feed item\r\n * @param {Boolean} success - True if the action successfully completed\r\n * @param {Boolean} created - True if the action yields a new record\r\n * @param {String} contextId - Context record ID of the action\r\n * @param {Array.<Object>} errors - Errors if the action failed\r\n */\r\n\r\n/**\r\n * Execute the action for given context Id and record information\r\n * \r\n * @param {String} contextId - Context record ID of the action\r\n * @param {Record} record - Input record information for the action\r\n * @param {Callback.<QuickAction~QuickActionResult>} [callback] - Callback function\r\n * @returns {Promise.<QuickAction~QuickActionResult>}\r\n */\r\nQuickAction.prototype.execute = function(contextId, record, callback) {\r\n  var body = {\r\n    contextId: contextId,\r\n    record: record\r\n  };\r\n  return this._conn.requestPost(this._path, body).thenCall(callback);\r\n};\r\n\r\n},{}],30:[function(require,module,exports){\r\n/**\r\n * @file Represents stream that handles Salesforce record as stream data\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar events = require('events'),\r\n    stream = require('readable-stream'),\r\n    Duplex = stream.Duplex,\r\n    Transform = stream.Transform,\r\n    PassThrough = stream.PassThrough,\r\n    inherits = require('inherits'),\r\n    _      = require('lodash/core'),\r\n    CSV    = require('./csv');\r\n\r\n\r\n/**\r\n * Class for Record Stream\r\n *\r\n * @class\r\n * @constructor\r\n * @extends stream.Transform\r\n */\r\nvar RecordStream = module.exports = function() {\r\n  RecordStream.super_.call(this, { objectMode: true });\r\n};\r\n\r\ninherits(RecordStream, Transform);\r\n\r\n\r\n/*\r\n * @override\r\n */\r\nRecordStream.prototype._transform = function(record, enc, callback) {\r\n  this.emit('record', record);\r\n  this.push(record);\r\n  callback();\r\n};\r\n\r\n/**\r\n * Get record stream of queried records applying the given mapping function\r\n *\r\n * @param {RecordMapFunction} fn - Record mapping function\r\n * @returns {RecordStream}\r\n */\r\nRecordStream.prototype.map = function(fn) {\r\n  return this.pipe(RecordStream.map(fn));\r\n};\r\n\r\n/**\r\n * Get record stream of queried records, applying the given filter function\r\n *\r\n * @param {RecordFilterFunction} fn - Record filtering function\r\n * @returns {RecordStream}\r\n */\r\nRecordStream.prototype.filter = function(fn) {\r\n  return this.pipe(RecordStream.filter(fn));\r\n};\r\n\r\n\r\n/**\r\n * @class RecordStream.Serializable\r\n * @extends {RecordStream}\r\n */\r\nvar Serializable = RecordStream.Serializable = function() {\r\n  Serializable.super_.call(this);\r\n  this._dataStream = null;\r\n};\r\n\r\ninherits(Serializable, RecordStream);\r\n\r\n/**\r\n * Create readable data stream which emits serialized record data\r\n *\r\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\r\n * @param {Object} [options] - Options passed to converter\r\n * @returns {stream.Readable}\r\n*/\r\nSerializable.prototype.stream = function(type, options) {\r\n  type = type || 'csv';\r\n  var converter = DataStreamConverters[type];\r\n  if (!converter) {\r\n    throw new Error('Converting [' + type + '] data stream is not supported.');\r\n  }\r\n  if (!this._dataStream) {\r\n    this._dataStream = new PassThrough();\r\n    this.pipe(converter.serialize(options))\r\n      .pipe(this._dataStream);\r\n  }\r\n  return this._dataStream;\r\n};\r\n\r\n\r\n/**\r\n * @class RecordStream.Parsable\r\n * @extends {RecordStream}\r\n */\r\nvar Parsable = RecordStream.Parsable = function() {\r\n  Parsable.super_.call(this);\r\n  this._dataStream = null;\r\n};\r\n\r\ninherits(Parsable, RecordStream);\r\n\r\n/**\r\n * Create writable data stream which accepts serialized record data\r\n *\r\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\r\n * @param {Object} [options] - Options passed to converter\r\n * @returns {stream.Readable}\r\n*/\r\nParsable.prototype.stream = function(type, options) {\r\n  type = type || 'csv';\r\n  var converter = DataStreamConverters[type];\r\n  if (!converter) {\r\n    throw new Error('Converting [' + type + '] data stream is not supported.');\r\n  }\r\n  if (!this._dataStream) {\r\n    this._dataStream = new PassThrough();\r\n    this._parserStream = converter.parse(options).on('error', function(error) { this.emit('error', error); });\r\n    this._parserStream.pipe(this).pipe(new PassThrough({ objectMode: true, highWaterMark: ( 500 * 1000 ) }));\r\n  }\r\n  return this._dataStream;\r\n};\r\n\r\n\r\n/* @override */\r\nParsable.prototype.on = function(ev, fn) {\r\n  if (ev === 'readable' || ev === 'record') {\r\n    this._dataStream.pipe(this._parserStream);\r\n  }\r\n  return Parsable.super_.prototype.on.call(this, ev, fn);\r\n};\r\n\r\n/* @override */\r\nParsable.prototype.addListener = Parsable.prototype.on;\r\n\r\n/* --------------------------------------------------- */\r\n\r\n/**\r\n * @callback RecordMapFunction\r\n * @param {Record} record - Source record to map\r\n * @returns {Record}\r\n */\r\n\r\n/**\r\n * Create a record stream which maps records and pass them to downstream\r\n *\r\n * @param {RecordMapFunction} fn - Record mapping function\r\n * @returns {RecordStream.Serializable}\r\n */\r\nRecordStream.map = function(fn) {\r\n  var mapStream = new RecordStream.Serializable();\r\n  mapStream._transform = function(record, enc, callback) {\r\n    var rec = fn(record) || record; // if not returned record, use same record\r\n    this.push(rec);\r\n    callback();\r\n  };\r\n  return mapStream;\r\n};\r\n\r\n/**\r\n * Create mapping stream using given record template\r\n *\r\n * @param {Record} record - Mapping record object. In mapping field value, temlate notation can be used to refer field value in source record, if noeval param is not true.\r\n * @param {Boolean} [noeval] - Disable template evaluation in mapping record.\r\n * @returns {RecordStream.Serializable}\r\n */\r\nRecordStream.recordMapStream = function(record, noeval) {\r\n  return RecordStream.map(function(rec) {\r\n    var mapped = { Id: rec.Id };\r\n    for (var prop in record) {\r\n      mapped[prop] = noeval ? record[prop] : evalMapping(record[prop], rec);\r\n    }\r\n    return mapped;\r\n  });\r\n\r\n  function evalMapping(value, mapping) {\r\n    if (_.isString(value)) {\r\n      var m = /^\\$\\{(\\w+)\\}$/.exec(value);\r\n      if (m) { return mapping[m[1]]; }\r\n      return value.replace(/\\$\\{(\\w+)\\}/g, function($0, prop) {\r\n        var v = mapping[prop];\r\n        return _.isNull(v) || _.isUndefined(v) ? \"\" : String(v);\r\n      });\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * @callback RecordFilterFunction\r\n * @param {Record} record - Source record to filter\r\n * @returns {Boolean}\r\n */\r\n\r\n/**\r\n * Create a record stream which filters records and pass them to downstream\r\n *\r\n * @param {RecordFilterFunction} fn - Record filtering function\r\n * @returns {RecordStream.Serializable}\r\n */\r\nRecordStream.filter = function(fn) {\r\n  var filterStream = new RecordStream.Serializable();\r\n  filterStream._transform = function(record, enc, callback) {\r\n    if (fn(record)) { this.push(record); }\r\n    callback();\r\n  };\r\n  return filterStream;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nfunction convertRecordForSerialization(record, options) {\r\n  return Object.keys(record).reduce(function(rec, key) {\r\n    var value = rec[key];\r\n    var t = typeof value;\r\n    var urec = {};\r\n    if (key === 'attributes') { // 'attributes' prop will be ignored\r\n      rec = _.extend({}, rec);\r\n      delete rec[key];\r\n    } else if (options.nullValue && value === null) {\r\n      urec[key] = options.nullValue;\r\n      rec = _.extend({}, rec, urec);\r\n    } else if (value !== null && typeof value === 'object') {\r\n      var precord = convertRecordForSerialization(value, options);\r\n      rec = Object.keys(precord).reduce(function(prec, pkey) {\r\n        prec[key + '.' + pkey] = precord[pkey];\r\n        return prec;\r\n      }, _.extend({}, rec));\r\n    }\r\n    return rec;\r\n  }, record);\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction createPipelineStream(s1, s2) {\r\n  var pipeline = new PassThrough();\r\n  pipeline.on('pipe', function(source) {\r\n    source.unpipe(pipeline);\r\n    source.pipe(s1).pipe(s2);\r\n  });\r\n  pipeline.pipe = function(dest, options) {\r\n    return s2.pipe(dest, options);\r\n  };\r\n  return pipeline;\r\n}\r\n\r\n/** ---------------------------------------------------------------------- **/\r\n\r\n/**\r\n * @private\r\n */\r\nvar CSVStreamConverter = {\r\n  serialize: function(options) {\r\n    options = options || {};\r\n    return createPipelineStream(\r\n      RecordStream.map(function(record) {\r\n        return convertRecordForSerialization(record, options);\r\n      }),\r\n      CSV.serializeCSVStream(options)\r\n    );\r\n  },\r\n  parse: function(options) {\r\n    return CSV.parseCSVStream(options);\r\n  }\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nvar DataStreamConverters = RecordStream.DataStreamConverters = {\r\n  csv: CSVStreamConverter\r\n};\r\n\r\n},{\"./csv\":21,\"events\":47,\"inherits\":84,\"lodash/core\":88,\"readable-stream\":107}],31:[function(require,module,exports){\r\n/**\r\n * @file Represents Salesforce record information\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar _ = require('lodash/core');\r\n\r\n/**\r\n * A simple hash object including record field information\r\n *\r\n * @typedef {Object} Record\r\n */\r\n\r\n/**\r\n * Remote reference to record information\r\n *\r\n * @protected\r\n * @class\r\n * @constructor\r\n * @param {Connection} conn - Connection object\r\n * @param {String} type - SObject type\r\n * @param {String} id - Record ID\r\n */\r\nvar RecordReference = module.exports = function(conn, type, id) {\r\n  this._conn = conn;\r\n  this.type = type;\r\n  this.id = id;\r\n};\r\n\r\n/**\r\n * Retrieve record field information\r\n *\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<Record>} [callback] - Callback function\r\n * @returns {Promise.<Record>}\r\n */\r\nRecordReference.prototype.retrieve = function(options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  return this._conn.retrieve(this.type, this.id, options, callback);\r\n};\r\n\r\n/**\r\n * Update record field information\r\n *\r\n * @param {Record} record - A Record which includes fields to update\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<RecordResult>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult>}\r\n */\r\nRecordReference.prototype.update = function(record, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  record = _.clone(record);\r\n  record.Id = this.id;\r\n  return this._conn.update(this.type, record, options, callback);\r\n};\r\n\r\n/**\r\n * Synonym of Record#destroy()\r\n *\r\n * @method RecordReference#delete\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<RecordResult>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult>}\r\n */\r\nRecordReference.prototype[\"delete\"] =\r\n/**\r\n * Synonym of Record#destroy()\r\n *\r\n * @method RecordReference#del\r\n * @param {Callback.<RecordResult>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult>}\r\n */\r\nRecordReference.prototype.del =\r\n/**\r\n * Delete record field\r\n *\r\n * @method RecordReference#destroy\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<RecordResult>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult>}\r\n */\r\nRecordReference.prototype.destroy = function(options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  return this._conn.destroy(this.type, this.id, options, callback);\r\n};\r\n\r\n/**\r\n * Get blob field as stream\r\n *\r\n * @param {String} fieldName - Blob field name\r\n * @returns {stream.Stream}\r\n */\r\nRecordReference.prototype.blob = function(fieldName) {\r\n  var url = [ this._conn._baseUrl(), 'sobjects', this.type, this.id, fieldName ].join('/');\r\n  return this._conn.request(url).stream();\r\n};\r\n\r\n},{\"lodash/core\":88}],32:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar required = require('./_required');\r\n\r\nmodule.exports = function(name) {\r\n  if (name === './jsforce' || name === 'jsforce') {\r\n    name = './core';\r\n  }\r\n  var m = required[name];\r\n  if (typeof m === 'undefined') {\r\n    throw new Error(\"Cannot find module '\" + name + \"'\");\r\n  }\r\n  return m;\r\n};\r\n\r\n},{\"./_required\":3}],33:[function(require,module,exports){\r\n/**\r\n * @file Manages method call to SOAP endpoint\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar inherits = require('inherits'),\r\n    _ = require('lodash/core'),\r\n    xml2js = require('xml2js'),\r\n    HttpApi = require('./http-api');\r\n\r\n\r\n/**\r\n * Class for SOAP endpoint of Salesforce\r\n *\r\n * @protected\r\n * @class\r\n * @constructor\r\n * @param {Connection} conn - Connection instance\r\n * @param {Object} options - SOAP endpoint setting options\r\n * @param {String} options.endpointUrl - SOAP endpoint URL\r\n * @param {String} [options.xmlns] - XML namespace for method call (default is \"urn:partner.soap.sforce.com\")\r\n */\r\nvar SOAP = module.exports = function(conn, options) {\r\n  SOAP.super_.apply(this, arguments);\r\n  this._endpointUrl = options.endpointUrl;\r\n  this._xmlns = options.xmlns || 'urn:partner.soap.sforce.com';\r\n};\r\n\r\ninherits(SOAP, HttpApi);\r\n\r\n/**\r\n * Invoke SOAP call using method and arguments\r\n *\r\n * @param {String} method - Method name\r\n * @param {Object} args - Arguments for the method call\r\n * @param {Object} [schema] - Schema definition of response message\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nSOAP.prototype.invoke = function(method, args, schema, callback) {\r\n  if (typeof schema === 'function') {\r\n    callback = schema;\r\n    schema = null;\r\n  }\r\n  var message = {};\r\n  message[method] = args;\r\n  return this.request({\r\n    method: 'POST',\r\n    url: this._endpointUrl,\r\n    headers: {\r\n      'Content-Type': 'text/xml',\r\n      'SOAPAction': '\"\"'\r\n    },\r\n    message: message\r\n  }).then(function(res) {\r\n    return schema ? convertType(res, schema) : res;\r\n  }).thenCall(callback);\r\n};\r\n\r\n/* @private */\r\nfunction convertType(value, schema) {\r\n  if (_.isArray(value)) {\r\n    return value.map(function(v) {\r\n      return convertType(v, schema && schema[0])\r\n    });\r\n  } else if (_.isObject(value)) {\r\n    if (value.$ && value.$['xsi:nil'] === 'true') {\r\n      return null;\r\n    } else if (_.isArray(schema)) {\r\n      return [ convertType(value, schema[0]) ];\r\n    } else {\r\n      var o = {};\r\n      for (var key in value) {\r\n        o[key] = convertType(value[key], schema && schema[key]);\r\n      }\r\n      return o;\r\n    }\r\n  } else {\r\n    if (_.isArray(schema)) {\r\n      return [ convertType(value, schema[0]) ];\r\n    } else if (_.isObject(schema)) {\r\n      return {};\r\n    } else {\r\n      switch(schema) {\r\n        case 'string':\r\n          return String(value);\r\n        case 'number':\r\n          return Number(value);\r\n        case 'boolean':\r\n          return value === 'true';\r\n        default:\r\n          return value;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/** @override **/\r\nSOAP.prototype.beforeSend = function(request) {\r\n  request.body = this._createEnvelope(request.message);\r\n};\r\n\r\n/** @override **/\r\nSOAP.prototype.isSessionExpired = function(response) {\r\n  return response.statusCode === 500 &&\r\n    /<faultcode>[a-zA-Z]+:INVALID_SESSION_ID<\\/faultcode>/.test(response.body);\r\n};\r\n\r\n/** @override **/\r\nSOAP.prototype.parseError = function(body) {\r\n  var error = lookupValue(body, [ /:Envelope$/, /:Body$/, /:Fault$/ ]);\r\n  return {\r\n    errorCode: error.faultcode,\r\n    message: error.faultstring\r\n  };\r\n};\r\n\r\n/** @override **/\r\nSOAP.prototype.getResponseBody = function(response) {\r\n  var body = SOAP.super_.prototype.getResponseBody.call(this, response);\r\n  return lookupValue(body, [ /:Envelope$/, /:Body$/, /.+/ ]);\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nfunction lookupValue(obj, propRegExps) {\r\n  var regexp = propRegExps.shift();\r\n  if (!regexp) {\r\n    return obj;\r\n  }\r\n  else {\r\n    for (var prop in obj) {\r\n      if (regexp.test(prop)) {\r\n        return lookupValue(obj[prop], propRegExps);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction toXML(name, value) {\r\n  if (_.isObject(name)) {\r\n    value = name;\r\n    name = null;\r\n  }\r\n  if (_.isArray(value)) {\r\n    return _.map(value, function(v) { return toXML(name, v); }).join('');\r\n  } else {\r\n    var attrs = [];\r\n    var elems = [];\r\n    if (_.isObject(value)) {\r\n      for (var k in value) {\r\n        var v = value[k];\r\n        if (k[0] === '@') {\r\n          k = k.substring(1);\r\n          attrs.push(k + '=\"' + v + '\"');\r\n        } else {\r\n          elems.push(toXML(k, v));\r\n        }\r\n      }\r\n      value = elems.join('');\r\n    } else {\r\n      value = String(value)\r\n        .replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;')\r\n        .replace(/\"/g, '&quot;')\r\n        .replace(/'/g, '&apos;');\r\n    }\r\n    var startTag = name ? '<' + name + (attrs.length > 0 ? ' ' + attrs.join(' ') : '') + '>' : '';\r\n    var endTag = name ? '</' + name + '>' : '';\r\n    return  startTag + value + endTag;\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nSOAP.prototype._createEnvelope = function(message) {\r\n  var header = {};\r\n  var conn = this._conn;\r\n  if (conn.accessToken) {\r\n    header.SessionHeader = { sessionId: this._conn.accessToken };\r\n  }\r\n  if (conn.callOptions) {\r\n    header.CallOptions = conn.callOptions;\r\n  }\r\n  return [\r\n    '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',\r\n    '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"',\r\n    ' xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"',\r\n    ' xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">',\r\n    '<soapenv:Header xmlns=\"' + this._xmlns + '\">',\r\n    toXML(header),\r\n    '</soapenv:Header>',\r\n    '<soapenv:Body xmlns=\"' + this._xmlns + '\">',\r\n    toXML(message),\r\n    '</soapenv:Body>',\r\n    '</soapenv:Envelope>'\r\n  ].join('');\r\n};\r\n\r\n},{\"./http-api\":23,\"inherits\":84,\"lodash/core\":88,\"xml2js\":123}],34:[function(require,module,exports){\r\n/**\r\n * @file Represents Salesforce SObject\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar _      = require('lodash/core'),\r\n    Record = require('./record'),\r\n    Query  = require('./query'),\r\n    Cache  = require('./cache'),\r\n    QuickAction = require('./quick-action');\r\n\r\n/**\r\n * A class for organizing all SObject access\r\n *\r\n * @constructor\r\n */\r\nvar SObject = module.exports = function(conn, type) {\r\n  this._conn = conn;\r\n  this.type = type;\r\n  var cacheOptions = { key: \"describe.\" + this.type };\r\n  this.describe$ = conn.cache.makeCacheable(this.describe, this, cacheOptions);\r\n  this.describe = conn.cache.makeResponseCacheable(this.describe, this, cacheOptions);\r\n\r\n  cacheOptions = { key: \"layouts.\" + this.type };\r\n  this.layouts$ = conn.cache.makeCacheable(this.layouts, this, cacheOptions);\r\n  this.layouts = conn.cache.makeResponseCacheable(this.layouts, this, cacheOptions);\r\n\r\n  cacheOptions = { key: \"compactLayouts.\" + this.type };\r\n  this.compactLayouts$ = conn.cache.makeCacheable(this.compactLayouts, this, cacheOptions);\r\n  this.compactLayouts = conn.cache.makeResponseCacheable(this.compactLayouts, this, cacheOptions);\r\n\r\n  cacheOptions = { key: \"approvalLayouts.\" + this.type };\r\n  this.approvalLayouts$ = conn.cache.makeCacheable(this.approvalLayouts, this, cacheOptions);\r\n  this.approvalLayouts = conn.cache.makeResponseCacheable(this.approvalLayouts, this, cacheOptions);\r\n};\r\n\r\n/**\r\n * Synonym of SObject#create()\r\n *\r\n * @method SObject#insert\r\n * @param {Record|Array.<Record>} records - A record or array of records to create\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n/**\r\n * Create records\r\n *\r\n * @method SObject#create\r\n * @param {Record|Array.<Record>} records - A record or array of records to create\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nSObject.prototype.insert =\r\nSObject.prototype.create = function(records, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  return this._conn.create(this.type, records, options, callback);\r\n};\r\n\r\n/**\r\n * Retrieve specified records\r\n *\r\n * @param {String|Array.<String>} ids - A record ID or array of record IDs\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function\r\n * @returns {Promise.<Record|Array.<Record>>}\r\n */\r\nSObject.prototype.retrieve = function(ids, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  return this._conn.retrieve(this.type, ids, options, callback);\r\n};\r\n\r\n/**\r\n * Update records\r\n *\r\n * @param {Record|Array.<Record>} records - A record or array of records to update\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nSObject.prototype.update = function(records, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  return this._conn.update(this.type, records, options, callback);\r\n};\r\n\r\n/**\r\n * Upsert records\r\n *\r\n * @param {Record|Array.<Record>} records - Record or array of records to upsert\r\n * @param {String} extIdField - External ID field name\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nSObject.prototype.upsert = function(records, extIdField, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  return this._conn.upsert(this.type, records, extIdField, options, callback);\r\n};\r\n\r\n/**\r\n * Synonym of SObject#destroy()\r\n *\r\n * @method SObject#delete\r\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n/**\r\n * Synonym of SObject#destroy()\r\n *\r\n * @method SObject#del\r\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n/**\r\n * Delete records\r\n *\r\n * @method SObject#destroy\r\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nSObject.prototype[\"delete\"] =\r\nSObject.prototype.del =\r\nSObject.prototype.destroy = function(ids, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  return this._conn.destroy(this.type, ids, options, callback);\r\n};\r\n\r\n/**\r\n * Describe SObject metadata\r\n *\r\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\r\n * @returns {Promise.<DescribeSObjectResult>}\r\n */\r\nSObject.prototype.describe = function(callback) {\r\n  return this._conn.describe(this.type, callback);\r\n};\r\n\r\n/**\r\n * Get record representation instance by given id\r\n *\r\n * @param {String} id - A record ID\r\n * @returns {RecordReference}\r\n */\r\nSObject.prototype.record = function(id) {\r\n  return new Record(this._conn, this.type, id);\r\n};\r\n\r\n/**\r\n * Find and fetch records which matches given conditions\r\n *\r\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\r\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\r\n * @param {Object} [options] - Query options.\r\n * @param {Number} [options.limit] - Maximum number of records the query will return.\r\n * @param {Number} [options.offset] - Offset number where begins returning results.\r\n * @param {Number} [options.skip] - Synonym of options.offset.\r\n * @param {Callback.<Array.<Record>>} [callback] - Callback function\r\n * @returns {Query.<Array.<Record>>}\r\n */\r\nSObject.prototype.find = function(conditions, fields, options, callback) {\r\n  if (typeof conditions === 'function') {\r\n    callback = conditions;\r\n    conditions = {};\r\n    fields = null;\r\n    options = null;\r\n  } else if (typeof fields === 'function') {\r\n    callback = fields;\r\n    fields = null;\r\n    options = null;\r\n  } else if (typeof options === 'function') {\r\n    callback = options;\r\n    options = null;\r\n  }\r\n  options = options || {};\r\n  var config = {\r\n    fields: fields,\r\n    includes: options.includes,\r\n    table: this.type,\r\n    conditions: conditions,\r\n    limit: options.limit,\r\n    sort: options.sort,\r\n    offset: options.offset || options.skip\r\n  };\r\n  var query = new Query(this._conn, config, options);\r\n  query.setResponseTarget(Query.ResponseTargets.Records);\r\n  if (callback) { query.run(callback); }\r\n  return query;\r\n};\r\n\r\n/**\r\n * Fetch one record which matches given conditions\r\n *\r\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\r\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\r\n * @param {Object} [options] - Query options.\r\n * @param {Number} [options.limit] - Maximum number of records the query will return.\r\n * @param {Number} [options.offset] - Offset number where begins returning results.\r\n * @param {Number} [options.skip] - Synonym of options.offset.\r\n * @param {Callback.<Record>} [callback] - Callback function\r\n * @returns {Query.<Record>}\r\n */\r\nSObject.prototype.findOne = function(conditions, fields, options, callback) {\r\n  if (typeof conditions === 'function') {\r\n    callback = conditions;\r\n    conditions = {};\r\n    fields = null;\r\n    options = null;\r\n  } else if (typeof fields === 'function') {\r\n    callback = fields;\r\n    fields = null;\r\n    options = null;\r\n  } else if (typeof options === 'function') {\r\n    callback = options;\r\n    options = null;\r\n  }\r\n  options = _.extend(options || {}, { limit: 1 });\r\n  var query = this.find(conditions, fields, options);\r\n  query.setResponseTarget(Query.ResponseTargets.SingleRecord);\r\n  if (callback) { query.run(callback); }\r\n  return query;\r\n};\r\n\r\n/**\r\n * Find and fetch records only by specifying fields to fetch.\r\n *\r\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\r\n * @param {Callback.<Array.<Record>>} [callback] - Callback function\r\n * @returns {Query.<Array.<Record>>}\r\n */\r\nSObject.prototype.select = function(fields, callback) {\r\n  return this.find(null, fields, null, callback);\r\n};\r\n\r\n/**\r\n * Count num of records which matches given conditions\r\n *\r\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\r\n * @param {Callback.<Number>} [callback] - Callback function\r\n * @returns {Query.<Number>}\r\n */\r\nSObject.prototype.count = function(conditions, callback) {\r\n  if (typeof conditions === 'function') {\r\n    callback = conditions;\r\n    conditions = {};\r\n  }\r\n  var query = this.find(conditions, { \"count()\" : true });\r\n  query.setResponseTarget(\"Count\");\r\n  if (callback) { query.run(callback); }\r\n  return query;\r\n};\r\n\r\n\r\n/**\r\n * Call Bulk#load() to execute bulkload, returning batch object\r\n *\r\n * @param {String} operation - Bulk load operation ('insert', 'update', 'upsert', 'delete', or 'hardDelete')\r\n * @param {Object} [options] - Options for bulk loading operation\r\n * @param {String} [options.extIdField] - External ID field name (used when upsert operation).\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulkload. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\nSObject.prototype.bulkload = function(operation, options, input, callback) {\r\n  return this._conn.bulk.load(this.type, operation, options, input, callback);\r\n};\r\n\r\n/**\r\n * Synonym of SObject#createBulk()\r\n *\r\n * @method SObject#insertBulk\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk insert. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\n/**\r\n * Bulkly insert input data using bulk API\r\n *\r\n * @method SObject#createBulk\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk insert. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\nSObject.prototype.insertBulk =\r\nSObject.prototype.createBulk = function(input, callback) {\r\n  return this.bulkload(\"insert\", input, callback);\r\n};\r\n\r\n/**\r\n * Bulkly update records by input data using bulk API\r\n *\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk update Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\nSObject.prototype.updateBulk = function(input, callback) {\r\n  return this.bulkload(\"update\", input, callback);\r\n};\r\n\r\n/**\r\n * Bulkly upsert records by input data using bulk API\r\n *\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk upsert. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {String} [options.extIdField] - External ID field name\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\nSObject.prototype.upsertBulk = function(input, extIdField, callback) {\r\n  return this.bulkload(\"upsert\", { extIdField: extIdField }, input, callback);\r\n};\r\n\r\n/**\r\n * Synonym of SObject#destroyBulk()\r\n *\r\n * @method SObject#deleteBulk\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\n/**\r\n * Bulkly delete records specified by input data using bulk API\r\n *\r\n * @method SObject#destroyBulk\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\nSObject.prototype.deleteBulk =\r\nSObject.prototype.destroyBulk = function(input, callback) {\r\n  return this.bulkload(\"delete\", input, callback);\r\n};\r\n\r\n/**\r\n * Synonym of SObject#destroyHardBulk()\r\n *\r\n * @method SObject#deleteHardBulk\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\n/**\r\n * Bulkly hard delete records specified in input data using bulk API\r\n *\r\n * @method SObject#destroyHardBulk\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\nSObject.prototype.deleteHardBulk =\r\nSObject.prototype.destroyHardBulk = function(input, callback) {\r\n  return this.bulkload(\"hardDelete\", input, callback);\r\n};\r\n\r\n/**\r\n * Retrieve recently accessed records\r\n *\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>>}\r\n */\r\nSObject.prototype.recent = function (callback) {\r\n  return this._conn.recent(this.type, callback);\r\n};\r\n\r\n/**\r\n * Retrieve the updated records\r\n *\r\n * @param {String|Date} start - start date or string representing the start of the interval\r\n * @param {String|Date} end - start date or string representing the end of the interval, must be > start\r\n * @param {Callback.<UpdatedRecordsInfo>} [callback] - Callback function\r\n * @returns {Promise.<UpdatedRecordsInfo>}\r\n */\r\nSObject.prototype.updated = function (start, end, callback) {\r\n  return this._conn.updated(this.type, start, end, callback);\r\n};\r\n\r\n/**\r\n * Retrieve the deleted records\r\n *\r\n * @param {String|Date} start - start date or string representing the start of the interval\r\n * @param {String|Date} end - start date or string representing the end of the interval, must be > start\r\n * @param {Callback.<DeletedRecordsInfo>} [callback] - Callback function\r\n * @returns {Promise.<DeletedRecordsInfo>}\r\n */\r\nSObject.prototype.deleted = function (start, end, callback) {\r\n  return this._conn.deleted(this.type, start, end, callback);\r\n};\r\n\r\n/**\r\n * @typedef {Object} LayoutInfo\r\n * @prop {Array.<Object>} layouts - Array of layouts\r\n * @prop {Array.<Object>} recordTypeMappings - Array of record type mappings\r\n */\r\n/**\r\n * Describe layout information for SObject\r\n *\r\n * @param {String} [layoutName] - Name of named layout. (e.g. UserAlt in User SObject)\r\n * @param {Callback.<LayoutInfo>} [callback] - Callback function\r\n * @returns {Promise.<LayoutInfo>}\r\n */\r\nSObject.prototype.layouts = function(layoutName, callback) {\r\n  if (typeof layoutName === 'function') {\r\n    callback = layoutName;\r\n    layoutName = null;\r\n  }\r\n  var url = \"/sobjects/\" + this.type + \"/describe/\" + (layoutName ? \"namedLayouts/\"+layoutName : \"layouts\");\r\n  return this._conn.request(url, callback);\r\n};\r\n\r\n/**\r\n * @typedef {Object} CompactLayoutInfo\r\n * @prop {Array.<Object>} compactLayouts - Array of compact layouts\r\n * @prop {String} defaultCompactLayoutId - ID of default compact layout\r\n * @prop {Array.<Object>} recordTypeCompactLayoutMappings - Array of record type mappings\r\n */\r\n/**\r\n * Describe compact layout information defined for SObject\r\n *\r\n * @param {Callback.<CompactLayoutInfo>} [callback] - Callback function\r\n * @returns {Promise.<CompactLayoutInfo>}\r\n */\r\nSObject.prototype.compactLayouts = function(callback) {\r\n  var url = \"/sobjects/\" + this.type + \"/describe/compactLayouts\";\r\n  return this._conn.request(url, callback);\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} ApprovalLayoutInfo\r\n * @prop {Array.<Object>} approvalLayouts - Array of approval layouts\r\n */\r\n/**\r\n * Describe compact layout information defined for SObject\r\n *\r\n * @param {Callback.<ApprovalLayoutInfo>} [callback] - Callback function\r\n * @returns {Promise.<ApprovalLayoutInfo>}\r\n */\r\nSObject.prototype.approvalLayouts = function(callback) {\r\n  var url = \"/sobjects/\" + this.type + \"/describe/approvalLayouts\";\r\n  return this._conn.request(url, callback);\r\n};\r\n\r\n/**\r\n * Returns the list of list views for the SObject\r\n *\r\n * @param {Callback.<ListViewsInfo>} [callback] - Callback function\r\n * @returns {Promise.<ListViewsInfo>}\r\n */\r\nSObject.prototype.listviews = function(callback) {\r\n  var url = this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews';\r\n  return this._conn.request(url, callback);\r\n};\r\n\r\n/**\r\n * Returns the list view info in specifed view id\r\n *\r\n * @param {String} id - List view ID\r\n * @returns {ListView}\r\n */\r\nSObject.prototype.listview = function(id) {\r\n  return new ListView(this._conn, this.type, id);\r\n};\r\n\r\n/**\r\n * Returns all registered quick actions for the SObject\r\n *\r\n * @param {Callback.<Array.<QuickAction~QuickActionInfo>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<QuickAction~QuickActionInfo>>}\r\n */\r\nSObject.prototype.quickActions = function(callback) {\r\n  return this._conn.request(\"/sobjects/\" + this.type + \"/quickActions\").thenCall(callback);\r\n};\r\n\r\n/**\r\n * Get reference for specified quick aciton in the SObject\r\n *\r\n * @param {String} actionName - Name of the quick action\r\n * @returns {QuickAction}\r\n */\r\nSObject.prototype.quickAction = function(actionName) {\r\n  return new QuickAction(this._conn, \"/sobjects/\" + this.type + \"/quickActions/\" + actionName);\r\n};\r\n\r\n\r\n/**\r\n * A class for organizing list view information\r\n *\r\n * @protected\r\n * @class ListView\r\n * @param {Connection} conn - Connection instance\r\n * @param {SObject} type - SObject type\r\n * @param {String} id - List view ID\r\n */\r\nvar ListView = function(conn, type, id) {\r\n  this._conn = conn;\r\n  this.type = type;\r\n  this.id = id;\r\n};\r\n\r\n/**\r\n * Executes query for the list view and returns the resulting data and presentation information.\r\n *\r\n * @param {Callback.<ListViewResultInfo>} [callback] - Callback function\r\n * @returns {Promise.<ListViewResultInfo>}\r\n */\r\nListView.prototype.results = function(callback) {\r\n  var url =  this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews/' + this.id + '/results';\r\n  return this._conn.request(url, callback);\r\n};\r\n\r\n\r\n/**\r\n * Returns detailed information about a list view\r\n *\r\n * @param {Object} [options] - Identity call options\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in identity request\r\n * @param {Callback.<ListViewDescribeInfo>} [callback] - Callback function\r\n * @returns {Promise.<ListViewDescribeInfo>}\r\n */\r\nListView.prototype.describe = function(options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  var url =  this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews/' + this.id + '/describe';\r\n  return this._conn.request({ method: 'GET', url: url, headers: options.headers }, callback);\r\n};\r\n\r\n/**\r\n * Explain plan for executing list view\r\n *\r\n * @param {Callback.<ExplainInfo>} [callback] - Callback function\r\n * @returns {Promise.<ExplainInfo>}\r\n */\r\nListView.prototype.explain = function(callback) {\r\n  var url = \"/query/?explain=\" + this.id;\r\n  return this._conn.request(url, callback);\r\n};\r\n\r\n},{\"./cache\":18,\"./query\":28,\"./quick-action\":29,\"./record\":31,\"lodash/core\":88}],35:[function(require,module,exports){\r\n/**\r\n * @file Create and build SOQL string from configuration\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar _      = require('lodash/core'),\r\n    SfDate = require(\"./date\");\r\n\r\n\r\n/**\r\n * Create SOQL\r\n * @private\r\n */\r\nfunction createSOQL(query) {\r\n  var soql = [\r\n    \"SELECT \",\r\n    createFieldsClause(query.fields, query.includes),\r\n    \" FROM \",\r\n    query.table\r\n  ].join(\"\");\r\n  var cond = createConditionClause(query.conditions);\r\n  if (cond) {\r\n    soql += \" WHERE \" + cond;\r\n  }\r\n  var orderby = createOrderByClause(query.sort);\r\n  if (orderby) {\r\n    soql += \" ORDER BY \" + orderby;\r\n  }\r\n  if (query.limit) {\r\n    soql += \" LIMIT \" + query.limit;\r\n  }\r\n  if (query.offset) {\r\n    soql += \" OFFSET \" + query.offset;\r\n  }\r\n  return soql;\r\n}\r\n\r\n/** @private **/\r\nfunction createFieldsClause(fields, childQueries) {\r\n  childQueries = _.map(_.values(childQueries || {}), function(cquery) {\r\n    return '(' + createSOQL(cquery) + ')';\r\n  });\r\n  return (fields || [ \"Id\" ]).concat(childQueries).join(', ');\r\n}\r\n\r\n/** @private **/\r\nfunction createConditionClause(conditions, operator, depth) {\r\n  if (_.isString(conditions)) {\r\n    return conditions;\r\n  }\r\n  conditions = conditions || [];\r\n  operator = operator || \"AND\";\r\n  depth = depth || 0;\r\n  if (!isArray(conditions)) { // if passed in hash object\r\n    conditions = _.keys(conditions).map(function(key) {\r\n      return {\r\n        key: key,\r\n        value: conditions[key]\r\n      };\r\n    });\r\n  } else {\r\n    conditions = conditions.map(function(cond) {\r\n      var conds = [];\r\n      for (var key in cond) {\r\n        conds.push({\r\n          key: key,\r\n          value: cond[key]\r\n        });\r\n      }\r\n      return conds.length>1 ? conds : conds[0];\r\n    });\r\n  }\r\n  conditions = conditions.map(function(cond) {\r\n    var d = depth+1, op;\r\n    switch (cond.key) {\r\n      case \"$or\" :\r\n      case \"$and\" :\r\n      case \"$not\" :\r\n        if (operator !== \"NOT\" && conditions.length === 1) {\r\n          d = depth; // not change tree depth\r\n        }\r\n        op = cond.key === \"$or\" ? \"OR\" :\r\n             cond.key === \"$and\" ? \"AND\" :\r\n             \"NOT\";\r\n        return createConditionClause(cond.value, op, d);\r\n      default:\r\n        return createFieldExpression(cond.key, cond.value);\r\n    }\r\n  }).filter(function(expr) { return expr; });\r\n\r\n  var paren;\r\n  if (operator === 'NOT') {\r\n    paren = depth > 0;\r\n    return (paren ? \"(\" : \"\") + \"NOT \" + conditions[0] + (paren ? \")\" : \"\");\r\n  } else {\r\n    paren = depth > 0 && conditions.length > 1;\r\n    return (paren ? \"(\" : \"\") + conditions.join(\" \"+operator+\" \") + (paren ? \")\" : \"\");\r\n  }\r\n}\r\n\r\nvar opMap = {\r\n  \"=\"     : \"=\",\r\n  \"$eq\"   : \"=\",\r\n  \"!=\"    : \"!=\",\r\n  \"$ne\"   : \"!=\",\r\n  \">\"     : \">\",\r\n  \"$gt\"   : \">\",\r\n  \"<\"     : \"<\",\r\n  \"$lt\"   : \"<\",\r\n  \">=\"    : \">=\",\r\n  \"$gte\"  : \">=\",\r\n  \"<=\"    : \"<=\",\r\n  \"$lte\"  : \"<=\",\r\n  \"$like\" : \"LIKE\",\r\n  \"$nlike\" : \"NOT LIKE\",\r\n  \"$in\"   : \"IN\",\r\n  \"$nin\"  : \"NOT IN\",\r\n  \"$includes\" : \"INCLUDES\",\r\n  \"$excludes\" : \"EXCLUDES\",\r\n  \"$exists\" : \"EXISTS\"\r\n};\r\n\r\n/** @private **/\r\nfunction createFieldExpression(field, value) {\r\n  var op = \"$eq\";\r\n\r\n  // Assume the `$in` operator if value is an array and none was supplied.\r\n  if (_.isArray(value)) { op = \"$in\"; }\r\n  // Otherwise, if an object was passed then process the supplied ops.\r\n  else if (_.isObject(value)) {\r\n    var _value;\r\n    for (var k in value) {\r\n      if (k[0] === \"$\") {\r\n        op = k;\r\n        value = value[k];\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  var sfop = opMap[op];\r\n  if (!sfop || _.isUndefined(value)) { return null; }\r\n  var valueExpr = createValueExpression(value);\r\n  if (_.isUndefined(valueExpr)) { return null; }\r\n  switch (sfop) {\r\n    case \"NOT LIKE\":\r\n      return \"(\" + [ \"NOT\", field, 'LIKE', valueExpr ].join(\" \") + \")\";\r\n    case \"EXISTS\":\r\n      return [ field, value ? \"!=\" : \"=\", \"null\" ].join(\" \");\r\n    default:\r\n      return [ field, sfop, valueExpr ].join(\" \");\r\n  }\r\n}\r\n\r\n/** @private **/\r\nfunction createValueExpression(value) {\r\n  if (isArray(value)) {\r\n    return value.length > 0 ?\r\n           \"(\" + value.map(createValueExpression).join(\", \") + \")\" :\r\n           undefined;\r\n  }\r\n  if (value instanceof SfDate) {\r\n    return value.toString();\r\n  }\r\n  if (_.isString(value)) {\r\n    return \"'\" + escapeSOQLString(value) + \"'\";\r\n  }\r\n  if (_.isNumber(value)) {\r\n    return (value).toString();\r\n  }\r\n  if (_.isNull(value)) {\r\n    return \"null\";\r\n  }\r\n  return value;\r\n}\r\n\r\n/** @private **/\r\nfunction escapeSOQLString(str) {\r\n  return String(str || '').replace(/'/g, \"\\\\'\");\r\n}\r\n\r\n/** @private **/\r\nfunction isArray(a) {\r\n  return _.isObject(a) && _.isFunction(a.pop);\r\n}\r\n\r\n\r\n/** @private **/\r\nfunction createOrderByClause(sort) {\r\n  sort = sort || [];\r\n  if (_.isString(sort)) {\r\n    if (/,|\\s+(asc|desc)\\s*$/.test(sort)) {\r\n      // must be specified in pure \"order by\" clause. Return raw config.\r\n      return sort;\r\n    }\r\n    // sort order in mongoose-style expression.\r\n    // e.g. \"FieldA -FieldB\" => \"ORDER BY FieldA ASC, FieldB DESC\"\r\n    sort = sort.split(/\\s+/).map(function(field) {\r\n      var dir = \"ASC\"; // ascending\r\n      var flag = field[0];\r\n      if (flag === '-') {\r\n        dir = \"DESC\";\r\n        field = field.substring(1);\r\n      } else if (flag === '+') {\r\n        field = field.substring(1);\r\n      }\r\n      return [ field, dir ];\r\n    });\r\n  } else if (!isArray(sort)) {\r\n    sort = _.keys(sort).map(function(field) {\r\n      var dir = sort[field];\r\n      return [ field, dir ];\r\n    });\r\n  }\r\n  return sort.map(function(s) {\r\n    var field = s[0], dir = s[1];\r\n    switch (String(dir)) {\r\n      case \"DESC\":\r\n      case \"desc\":\r\n      case \"descending\":\r\n      case \"-\":\r\n      case \"-1\":\r\n        dir = \"DESC\";\r\n        break;\r\n      default:\r\n        dir = \"ASC\";\r\n    }\r\n    return field + \" \" + dir;\r\n  }).join(\", \");\r\n}\r\n\r\n\r\nexports.createSOQL = createSOQL;\r\n\r\n},{\"./date\":22,\"lodash/core\":88}],36:[function(require,module,exports){\r\n(function (process){\r\n/*global process, Sfdc */\r\n\r\n'use strict';\r\n\r\nvar inherits = require('inherits'),\r\n    Promise = require('./promise');\r\n\r\n/* */\r\n\r\nvar request = require('request'),\r\n    canvas = require('./browser/canvas'),\r\n    jsonp = require('./browser/jsonp');\r\n\r\n// set options if defaults setting is available in request, which is not available in xhr module.\r\nif (request.defaults) {\r\n  var defaults = {\r\n    followAllRedirects: true\r\n  };\r\n  if (process.env.HTTP_PROXY) {\r\n    defaults.proxy = process.env.HTTP_PROXY;\r\n  }\r\n  if (parseInt(process.env.HTTP_TIMEOUT)) {\r\n    defaults.timeout = parseInt(process.env.HTTP_TIMEOUT);\r\n  }\r\n  request = request.defaults(defaults);\r\n}\r\n\r\nvar baseUrl;\r\nif (typeof window === 'undefined') {\r\n  baseUrl = process.env.LOCATION_BASE_URL || \"\";\r\n} else {\r\n  var apiHost = normalizeApiHost(window.location.host);\r\n  baseUrl = apiHost ? \"https://\" + apiHost : \"\";\r\n}\r\n\r\n/**\r\n * Add stream() method to promise (and following promise chain), to access original request stream.\r\n * @private\r\n */\r\nfunction streamify(promise, factory) {\r\n  var _then = promise.then;\r\n  promise.then = function() {\r\n    factory();\r\n    var newPromise = _then.apply(promise, arguments);\r\n    return streamify(newPromise, factory);\r\n  };\r\n  promise.stream = factory;\r\n  return promise;\r\n}\r\n\r\n/**\r\n * Normarize Salesforce API host name\r\n * @private\r\n */\r\nfunction normalizeApiHost(apiHost) {\r\n  var m = /(\\w+)\\.(visual\\.force|salesforce)\\.com$/.exec(apiHost);\r\n  if (m) {\r\n    apiHost = m[1] + \".salesforce.com\";\r\n  }\r\n  return apiHost;\r\n}\r\n\r\n/**\r\n * Class for HTTP request transport\r\n *\r\n * @class\r\n * @protected\r\n */\r\nvar Transport = module.exports = function() {};\r\n\r\n/**\r\n * Make HTTP request, returns promise instead of stream\r\n *\r\n * @param {Object} params - HTTP request\r\n * @param {Callback.<Object>} [callback] - Calback Function\r\n * @returns {Promise.<Object>}\r\n */\r\nTransport.prototype.httpRequest = function(params, callback) {\r\n  var deferred = Promise.defer();\r\n  var req;\r\n  var httpRequest = this._getHttpRequestModule();\r\n  var createRequest = function() {\r\n    if (!req) {\r\n      req = httpRequest(params, function(err, response) {\r\n        if (err) {\r\n          deferred.reject(err);\r\n        } else {\r\n          deferred.resolve(response);\r\n        }\r\n      });\r\n    }\r\n    return req;\r\n  };\r\n  return streamify(deferred.promise, createRequest).thenCall(callback);\r\n};\r\n\r\n/** @protected **/\r\nTransport.prototype._getHttpRequestModule = function() {\r\n  return request;\r\n};\r\n\r\n\r\n/**\r\n * Class for JSONP request transport\r\n * @class Transport~JsonpTransport\r\n * @protected\r\n * @extends Transport\r\n * @param {String} jsonpParam - Callback parameter name for JSONP invokation.\r\n */\r\nvar JsonpTransport = Transport.JsonpTransport = function(jsonpParam) {\r\n  this._jsonpParam = jsonpParam;\r\n};\r\n\r\ninherits(JsonpTransport, Transport);\r\n\r\n/** @protected **/\r\nJsonpTransport.prototype._getHttpRequestModule = function() {\r\n  return jsonp.createRequest(this._jsonpParam);\r\n};\r\n\r\nJsonpTransport.supported = jsonp.supported;\r\n\r\n\r\n/**\r\n * Class for Sfdc Canvas request transport\r\n * @class Transport~CanvasTransport\r\n * @protected\r\n * @extends Transport\r\n * @param {Object} signedRequest - Parsed signed request object\r\n */\r\nvar CanvasTransport = Transport.CanvasTransport = function(signedRequest) {\r\n  this._signedRequest = signedRequest;\r\n};\r\n\r\ninherits(CanvasTransport, Transport);\r\n\r\n/** @protected **/\r\nCanvasTransport.prototype._getHttpRequestModule = function() {\r\n  return canvas.createRequest(this._signedRequest);\r\n};\r\n\r\nCanvasTransport.supported = canvas.supported;\r\n\r\n\r\n/**\r\n * Class for HTTP request transport using AJAX proxy service\r\n *\r\n * @class Transport~ProxyTransport\r\n * @protected\r\n * @extends Transport\r\n * @param {String} proxyUrl - AJAX Proxy server URL\r\n */\r\nvar ProxyTransport = Transport.ProxyTransport = function(proxyUrl) {\r\n  this._proxyUrl = proxyUrl;\r\n};\r\n\r\ninherits(ProxyTransport, Transport);\r\n\r\n/**\r\n * Make HTTP request via AJAX proxy\r\n *\r\n * @method Transport~ProxyTransport#httpRequest\r\n * @param {Object} params - HTTP request\r\n * @param {Callback.<Object>} [callback] - Calback Function\r\n * @returns {Promise.<Object>}\r\n */\r\nProxyTransport.prototype.httpRequest = function(params, callback) {\r\n  var url = params.url;\r\n  if (url.indexOf(\"/\") === 0) {\r\n    url = baseUrl + url;\r\n  }\r\n  var proxyParams = {\r\n    method: params.method,\r\n    url: this._proxyUrl + '?' + Date.now() + \".\" + (\"\" + Math.random()).substring(2),\r\n    headers: {\r\n      'salesforceproxy-endpoint': url\r\n    }\r\n  };\r\n  if (params.body || params.body === \"\") {\r\n    proxyParams.body = params.body;\r\n  }\r\n  if (params.headers) {\r\n    for (var name in params.headers) {\r\n      proxyParams.headers[name] = params.headers[name];\r\n    }\r\n  }\r\n  return ProxyTransport.super_.prototype.httpRequest.call(this, proxyParams, callback);\r\n};\r\n\r\n\r\n/**\r\n * Class for HTTP request transport using a proxy server\r\n *\r\n * @class Transport~HttpProxyTransport\r\n * @protected\r\n * @extends Transport\r\n * @param {String} httpProxy - URL of the HTTP proxy server\r\n */\r\nvar HttpProxyTransport = Transport.HttpProxyTransport = function(httpProxy) {\r\n  this._httpProxy = httpProxy;\r\n};\r\n\r\ninherits(HttpProxyTransport, Transport);\r\n\r\n/**\r\n * Make HTTP request via proxy server\r\n *\r\n * @method Transport~HttpProxyTransport#httpRequest\r\n * @param {Object} params - HTTP request\r\n * @param {Callback.<Object>} [callback] - Callback Function\r\n * @returns {Promise.<Object>}\r\n */\r\nHttpProxyTransport.prototype.httpRequest = function(params, callback) {\r\n  var url = params.url;\r\n  if (url.indexOf(\"/\") === 0) {\r\n    url = baseUrl + url;\r\n  }\r\n  var proxyParams = {\r\n    method: params.method,\r\n    url: params.url,\r\n    proxy: this._httpProxy,\r\n    headers: {}\r\n  };\r\n  if (params.body || params.body === \"\") {\r\n    proxyParams.body = params.body;\r\n  }\r\n  if (params.headers) {\r\n    for (var name in params.headers) {\r\n      proxyParams.headers[name] = params.headers[name];\r\n    }\r\n  }\r\n  return HttpProxyTransport.super_.prototype.httpRequest.call(this, proxyParams, callback);\r\n};\r\n\r\n}).call(this,require('_process'))\r\n\r\n},{\"./browser/canvas\":14,\"./browser/jsonp\":16,\"./promise\":27,\"_process\":91,\"inherits\":84,\"request\":17}],37:[function(require,module,exports){\r\n\"use strict\";\r\n\r\n// rawAsap provides everything we need except exception management.\r\nvar rawAsap = require(\"./raw\");\r\n// RawTasks are recycled to reduce GC churn.\r\nvar freeTasks = [];\r\n// We queue errors to ensure they are thrown in right order (FIFO).\r\n// Array-as-queue is good enough here, since we are just dealing with exceptions.\r\nvar pendingErrors = [];\r\nvar requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);\r\n\r\nfunction throwFirstError() {\r\n    if (pendingErrors.length) {\r\n        throw pendingErrors.shift();\r\n    }\r\n}\r\n\r\n/**\r\n * Calls a task as soon as possible after returning, in its own event, with priority\r\n * over other events like animation, reflow, and repaint. An error thrown from an\r\n * event will not interrupt, nor even substantially slow down the processing of\r\n * other events, but will be rather postponed to a lower priority event.\r\n * @param {{call}} task A callable object, typically a function that takes no\r\n * arguments.\r\n */\r\nmodule.exports = asap;\r\nfunction asap(task) {\r\n    var rawTask;\r\n    if (freeTasks.length) {\r\n        rawTask = freeTasks.pop();\r\n    } else {\r\n        rawTask = new RawTask();\r\n    }\r\n    rawTask.task = task;\r\n    rawAsap(rawTask);\r\n}\r\n\r\n// We wrap tasks with recyclable task objects.  A task object implements\r\n// `call`, just like a function.\r\nfunction RawTask() {\r\n    this.task = null;\r\n}\r\n\r\n// The sole purpose of wrapping the task is to catch the exception and recycle\r\n// the task object after its single use.\r\nRawTask.prototype.call = function () {\r\n    try {\r\n        this.task.call();\r\n    } catch (error) {\r\n        if (asap.onerror) {\r\n            // This hook exists purely for testing purposes.\r\n            // Its name will be periodically randomized to break any code that\r\n            // depends on its existence.\r\n            asap.onerror(error);\r\n        } else {\r\n            // In a web browser, exceptions are not fatal. However, to avoid\r\n            // slowing down the queue of pending tasks, we rethrow the error in a\r\n            // lower priority turn.\r\n            pendingErrors.push(error);\r\n            requestErrorThrow();\r\n        }\r\n    } finally {\r\n        this.task = null;\r\n        freeTasks[freeTasks.length] = this;\r\n    }\r\n};\r\n\r\n},{\"./raw\":38}],38:[function(require,module,exports){\r\n(function (global){\r\n\"use strict\";\r\n\r\n// Use the fastest means possible to execute a task in its own turn, with\r\n// priority over other events including IO, animation, reflow, and redraw\r\n// events in browsers.\r\n//\r\n// An exception thrown by a task will permanently interrupt the processing of\r\n// subsequent tasks. The higher level `asap` function ensures that if an\r\n// exception is thrown by a task, that the task queue will continue flushing as\r\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\r\n// either ensure that no exceptions are thrown from your task, or to manually\r\n// call `rawAsap.requestFlush` if an exception is thrown.\r\nmodule.exports = rawAsap;\r\nfunction rawAsap(task) {\r\n    if (!queue.length) {\r\n        requestFlush();\r\n        flushing = true;\r\n    }\r\n    // Equivalent to push, but avoids a function call.\r\n    queue[queue.length] = task;\r\n}\r\n\r\nvar queue = [];\r\n// Once a flush has been requested, no further calls to `requestFlush` are\r\n// necessary until the next `flush` completes.\r\nvar flushing = false;\r\n// `requestFlush` is an implementation-specific method that attempts to kick\r\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\r\n// the event queue before yielding to the browser's own event loop.\r\nvar requestFlush;\r\n// The position of the next task to execute in the task queue. This is\r\n// preserved between calls to `flush` so that it can be resumed if\r\n// a task throws an exception.\r\nvar index = 0;\r\n// If a task schedules additional tasks recursively, the task queue can grow\r\n// unbounded. To prevent memory exhaustion, the task queue will periodically\r\n// truncate already-completed tasks.\r\nvar capacity = 1024;\r\n\r\n// The flush function processes all tasks that have been scheduled with\r\n// `rawAsap` unless and until one of those tasks throws an exception.\r\n// If a task throws an exception, `flush` ensures that its state will remain\r\n// consistent and will resume where it left off when called again.\r\n// However, `flush` does not make any arrangements to be called again if an\r\n// exception is thrown.\r\nfunction flush() {\r\n    while (index < queue.length) {\r\n        var currentIndex = index;\r\n        // Advance the index before calling the task. This ensures that we will\r\n        // begin flushing on the next task the task throws an error.\r\n        index = index + 1;\r\n        queue[currentIndex].call();\r\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\r\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\r\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\r\n        // shift tasks off the queue after they have been executed.\r\n        // Instead, we periodically shift 1024 tasks off the queue.\r\n        if (index > capacity) {\r\n            // Manually shift all values starting at the index back to the\r\n            // beginning of the queue.\r\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\r\n                queue[scan] = queue[scan + index];\r\n            }\r\n            queue.length -= index;\r\n            index = 0;\r\n        }\r\n    }\r\n    queue.length = 0;\r\n    index = 0;\r\n    flushing = false;\r\n}\r\n\r\n// `requestFlush` is implemented using a strategy based on data collected from\r\n// every available SauceLabs Selenium web driver worker at time of writing.\r\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\r\n\r\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\r\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\r\n// Must use `global` or `self` instead of `window` to work in both frames and web\r\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\r\n\r\n/* globals self */\r\nvar scope = typeof global !== \"undefined\" ? global : self;\r\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\r\n\r\n// MutationObservers are desirable because they have high priority and work\r\n// reliably everywhere they are implemented.\r\n// They are implemented in all modern browsers.\r\n//\r\n// - Android 4-4.3\r\n// - Chrome 26-34\r\n// - Firefox 14-29\r\n// - Internet Explorer 11\r\n// - iPad Safari 6-7.1\r\n// - iPhone Safari 7-7.1\r\n// - Safari 6-7\r\nif (typeof BrowserMutationObserver === \"function\") {\r\n    requestFlush = makeRequestCallFromMutationObserver(flush);\r\n\r\n// MessageChannels are desirable because they give direct access to the HTML\r\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\r\n// 11-12, and in web workers in many engines.\r\n// Although message channels yield to any queued rendering and IO tasks, they\r\n// would be better than imposing the 4ms delay of timers.\r\n// However, they do not work reliably in Internet Explorer or Safari.\r\n\r\n// Internet Explorer 10 is the only browser that has setImmediate but does\r\n// not have MutationObservers.\r\n// Although setImmediate yields to the browser's renderer, it would be\r\n// preferrable to falling back to setTimeout since it does not have\r\n// the minimum 4ms penalty.\r\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\r\n// Desktop to a lesser extent) that renders both setImmediate and\r\n// MessageChannel useless for the purposes of ASAP.\r\n// https://github.com/kriskowal/q/issues/396\r\n\r\n// Timers are implemented universally.\r\n// We fall back to timers in workers in most engines, and in foreground\r\n// contexts in the following browsers.\r\n// However, note that even this simple case requires nuances to operate in a\r\n// broad spectrum of browsers.\r\n//\r\n// - Firefox 3-13\r\n// - Internet Explorer 6-9\r\n// - iPad Safari 4.3\r\n// - Lynx 2.8.7\r\n} else {\r\n    requestFlush = makeRequestCallFromTimer(flush);\r\n}\r\n\r\n// `requestFlush` requests that the high priority event queue be flushed as\r\n// soon as possible.\r\n// This is useful to prevent an error thrown in a task from stalling the event\r\n// queue if the exception handled by Node.js’s\r\n// `process.on(\"uncaughtException\")` or by a domain.\r\nrawAsap.requestFlush = requestFlush;\r\n\r\n// To request a high priority event, we induce a mutation observer by toggling\r\n// the text of a text node between \"1\" and \"-1\".\r\nfunction makeRequestCallFromMutationObserver(callback) {\r\n    var toggle = 1;\r\n    var observer = new BrowserMutationObserver(callback);\r\n    var node = document.createTextNode(\"\");\r\n    observer.observe(node, {characterData: true});\r\n    return function requestCall() {\r\n        toggle = -toggle;\r\n        node.data = toggle;\r\n    };\r\n}\r\n\r\n// The message channel technique was discovered by Malte Ubl and was the\r\n// original foundation for this library.\r\n// http://www.nonblocking.io/2011/06/windownexttick.html\r\n\r\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\r\n// page's first load. Thankfully, this version of Safari supports\r\n// MutationObservers, so we don't need to fall back in that case.\r\n\r\n// function makeRequestCallFromMessageChannel(callback) {\r\n//     var channel = new MessageChannel();\r\n//     channel.port1.onmessage = callback;\r\n//     return function requestCall() {\r\n//         channel.port2.postMessage(0);\r\n//     };\r\n// }\r\n\r\n// For reasons explained above, we are also unable to use `setImmediate`\r\n// under any circumstances.\r\n// Even if we were, there is another bug in Internet Explorer 10.\r\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\r\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\r\n// closure.\r\n// Never forget.\r\n\r\n// function makeRequestCallFromSetImmediate(callback) {\r\n//     return function requestCall() {\r\n//         setImmediate(callback);\r\n//     };\r\n// }\r\n\r\n// Safari 6.0 has a problem where timers will get lost while the user is\r\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\r\n// mutation observers, so that implementation is used instead.\r\n// However, if we ever elect to use timers in Safari, the prevalent work-around\r\n// is to add a scroll event listener that calls for a flush.\r\n\r\n// `setTimeout` does not call the passed callback if the delay is less than\r\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\r\n// even then.\r\n\r\nfunction makeRequestCallFromTimer(callback) {\r\n    return function requestCall() {\r\n        // We dispatch a timeout with a specified delay of 0 for engines that\r\n        // can reliably accommodate that request. This will usually be snapped\r\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\r\n        // between events.\r\n        var timeoutHandle = setTimeout(handleTimer, 0);\r\n        // However, since this timer gets frequently dropped in Firefox\r\n        // workers, we enlist an interval handle that will try to fire\r\n        // an event 20 times per second until it succeeds.\r\n        var intervalHandle = setInterval(handleTimer, 50);\r\n\r\n        function handleTimer() {\r\n            // Whichever timer succeeds will cancel both timers and\r\n            // execute the callback.\r\n            clearTimeout(timeoutHandle);\r\n            clearInterval(intervalHandle);\r\n            callback();\r\n        }\r\n    };\r\n}\r\n\r\n// This is for `asap.js` only.\r\n// Its name will be periodically randomized to break any code that depends on\r\n// its existence.\r\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\r\n\r\n// ASAP was originally a nextTick shim included in Q. This was factored out\r\n// into this ASAP package. It was later adapted to RSVP which made further\r\n// amendments. These decisions, particularly to marginalize MessageChannel and\r\n// to capture the MutationObserver implementation in a closure, were integrated\r\n// back into ASAP proper.\r\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{}],39:[function(require,module,exports){\r\n'use strict'\r\n\r\nexports.byteLength = byteLength\r\nexports.toByteArray = toByteArray\r\nexports.fromByteArray = fromByteArray\r\n\r\nvar lookup = []\r\nvar revLookup = []\r\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\r\n\r\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\r\nfor (var i = 0, len = code.length; i < len; ++i) {\r\n  lookup[i] = code[i]\r\n  revLookup[code.charCodeAt(i)] = i\r\n}\r\n\r\n// Support decoding URL-safe base64 strings, as Node.js does.\r\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\r\nrevLookup['-'.charCodeAt(0)] = 62\r\nrevLookup['_'.charCodeAt(0)] = 63\r\n\r\nfunction getLens (b64) {\r\n  var len = b64.length\r\n\r\n  if (len % 4 > 0) {\r\n    throw new Error('Invalid string. Length must be a multiple of 4')\r\n  }\r\n\r\n  // Trim off extra bytes after placeholder bytes are found\r\n  // See: https://github.com/beatgammit/base64-js/issues/42\r\n  var validLen = b64.indexOf('=')\r\n  if (validLen === -1) validLen = len\r\n\r\n  var placeHoldersLen = validLen === len\r\n    ? 0\r\n    : 4 - (validLen % 4)\r\n\r\n  return [validLen, placeHoldersLen]\r\n}\r\n\r\n// base64 is 4/3 + up to two characters of the original data\r\nfunction byteLength (b64) {\r\n  var lens = getLens(b64)\r\n  var validLen = lens[0]\r\n  var placeHoldersLen = lens[1]\r\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\r\n}\r\n\r\nfunction _byteLength (b64, validLen, placeHoldersLen) {\r\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\r\n}\r\n\r\nfunction toByteArray (b64) {\r\n  var tmp\r\n  var lens = getLens(b64)\r\n  var validLen = lens[0]\r\n  var placeHoldersLen = lens[1]\r\n\r\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\r\n\r\n  var curByte = 0\r\n\r\n  // if there are placeholders, only get up to the last complete 4 chars\r\n  var len = placeHoldersLen > 0\r\n    ? validLen - 4\r\n    : validLen\r\n\r\n  for (var i = 0; i < len; i += 4) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 18) |\r\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\r\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\r\n      revLookup[b64.charCodeAt(i + 3)]\r\n    arr[curByte++] = (tmp >> 16) & 0xFF\r\n    arr[curByte++] = (tmp >> 8) & 0xFF\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  if (placeHoldersLen === 2) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 2) |\r\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  if (placeHoldersLen === 1) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 10) |\r\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\r\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\r\n    arr[curByte++] = (tmp >> 8) & 0xFF\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nfunction tripletToBase64 (num) {\r\n  return lookup[num >> 18 & 0x3F] +\r\n    lookup[num >> 12 & 0x3F] +\r\n    lookup[num >> 6 & 0x3F] +\r\n    lookup[num & 0x3F]\r\n}\r\n\r\nfunction encodeChunk (uint8, start, end) {\r\n  var tmp\r\n  var output = []\r\n  for (var i = start; i < end; i += 3) {\r\n    tmp =\r\n      ((uint8[i] << 16) & 0xFF0000) +\r\n      ((uint8[i + 1] << 8) & 0xFF00) +\r\n      (uint8[i + 2] & 0xFF)\r\n    output.push(tripletToBase64(tmp))\r\n  }\r\n  return output.join('')\r\n}\r\n\r\nfunction fromByteArray (uint8) {\r\n  var tmp\r\n  var len = uint8.length\r\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\r\n  var parts = []\r\n  var maxChunkLength = 16383 // must be multiple of 3\r\n\r\n  // go through the array every three bytes, we'll deal with trailing stuff later\r\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\r\n    parts.push(encodeChunk(\r\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\r\n    ))\r\n  }\r\n\r\n  // pad the end with zeros, but make sure to not forget the extra bytes\r\n  if (extraBytes === 1) {\r\n    tmp = uint8[len - 1]\r\n    parts.push(\r\n      lookup[tmp >> 2] +\r\n      lookup[(tmp << 4) & 0x3F] +\r\n      '=='\r\n    )\r\n  } else if (extraBytes === 2) {\r\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\r\n    parts.push(\r\n      lookup[tmp >> 10] +\r\n      lookup[(tmp >> 4) & 0x3F] +\r\n      lookup[(tmp << 2) & 0x3F] +\r\n      '='\r\n    )\r\n  }\r\n\r\n  return parts.join('')\r\n}\r\n\r\n},{}],40:[function(require,module,exports){\r\n\r\n},{}],41:[function(require,module,exports){\r\n/*!\r\n * The buffer module from node.js, for the browser.\r\n *\r\n * @author   Feross Aboukhadijeh <https://feross.org>\r\n * @license  MIT\r\n */\r\n/* eslint-disable no-proto */\r\n\r\n'use strict'\r\n\r\nvar base64 = require('base64-js')\r\nvar ieee754 = require('ieee754')\r\n\r\nexports.Buffer = Buffer\r\nexports.SlowBuffer = SlowBuffer\r\nexports.INSPECT_MAX_BYTES = 50\r\n\r\nvar K_MAX_LENGTH = 0x7fffffff\r\nexports.kMaxLength = K_MAX_LENGTH\r\n\r\n/**\r\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\r\n *   === true    Use Uint8Array implementation (fastest)\r\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\r\n *               implementation (most compatible, even IE6)\r\n *\r\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\r\n * Opera 11.6+, iOS 4.2+.\r\n *\r\n * We report that the browser does not support typed arrays if the are not subclassable\r\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\r\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\r\n * for __proto__ and has a buggy typed array implementation.\r\n */\r\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\r\n\r\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\r\n    typeof console.error === 'function') {\r\n  console.error(\r\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\r\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\r\n  )\r\n}\r\n\r\nfunction typedArraySupport () {\r\n  // Can typed array instances can be augmented?\r\n  try {\r\n    var arr = new Uint8Array(1)\r\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\r\n    return arr.foo() === 42\r\n  } catch (e) {\r\n    return false\r\n  }\r\n}\r\n\r\nObject.defineProperty(Buffer.prototype, 'parent', {\r\n  get: function () {\r\n    if (!(this instanceof Buffer)) {\r\n      return undefined\r\n    }\r\n    return this.buffer\r\n  }\r\n})\r\n\r\nObject.defineProperty(Buffer.prototype, 'offset', {\r\n  get: function () {\r\n    if (!(this instanceof Buffer)) {\r\n      return undefined\r\n    }\r\n    return this.byteOffset\r\n  }\r\n})\r\n\r\nfunction createBuffer (length) {\r\n  if (length > K_MAX_LENGTH) {\r\n    throw new RangeError('Invalid typed array length')\r\n  }\r\n  // Return an augmented `Uint8Array` instance\r\n  var buf = new Uint8Array(length)\r\n  buf.__proto__ = Buffer.prototype\r\n  return buf\r\n}\r\n\r\n/**\r\n * The Buffer constructor returns instances of `Uint8Array` that have their\r\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\r\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\r\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\r\n * returns a single octet.\r\n *\r\n * The `Uint8Array` prototype remains unmodified.\r\n */\r\n\r\nfunction Buffer (arg, encodingOrOffset, length) {\r\n  // Common case.\r\n  if (typeof arg === 'number') {\r\n    if (typeof encodingOrOffset === 'string') {\r\n      throw new Error(\r\n        'If encoding is specified then the first argument must be a string'\r\n      )\r\n    }\r\n    return allocUnsafe(arg)\r\n  }\r\n  return from(arg, encodingOrOffset, length)\r\n}\r\n\r\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\r\nif (typeof Symbol !== 'undefined' && Symbol.species &&\r\n    Buffer[Symbol.species] === Buffer) {\r\n  Object.defineProperty(Buffer, Symbol.species, {\r\n    value: null,\r\n    configurable: true,\r\n    enumerable: false,\r\n    writable: false\r\n  })\r\n}\r\n\r\nBuffer.poolSize = 8192 // not used by this implementation\r\n\r\nfunction from (value, encodingOrOffset, length) {\r\n  if (typeof value === 'number') {\r\n    throw new TypeError('\"value\" argument must not be a number')\r\n  }\r\n\r\n  if (isArrayBuffer(value) || (value && isArrayBuffer(value.buffer))) {\r\n    return fromArrayBuffer(value, encodingOrOffset, length)\r\n  }\r\n\r\n  if (typeof value === 'string') {\r\n    return fromString(value, encodingOrOffset)\r\n  }\r\n\r\n  return fromObject(value)\r\n}\r\n\r\n/**\r\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\r\n * if value is a number.\r\n * Buffer.from(str[, encoding])\r\n * Buffer.from(array)\r\n * Buffer.from(buffer)\r\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\r\n **/\r\nBuffer.from = function (value, encodingOrOffset, length) {\r\n  return from(value, encodingOrOffset, length)\r\n}\r\n\r\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\r\n// https://github.com/feross/buffer/pull/148\r\nBuffer.prototype.__proto__ = Uint8Array.prototype\r\nBuffer.__proto__ = Uint8Array\r\n\r\nfunction assertSize (size) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('\"size\" argument must be of type number')\r\n  } else if (size < 0) {\r\n    throw new RangeError('\"size\" argument must not be negative')\r\n  }\r\n}\r\n\r\nfunction alloc (size, fill, encoding) {\r\n  assertSize(size)\r\n  if (size <= 0) {\r\n    return createBuffer(size)\r\n  }\r\n  if (fill !== undefined) {\r\n    // Only pay attention to encoding if it's a string. This\r\n    // prevents accidentally sending in a number that would\r\n    // be interpretted as a start offset.\r\n    return typeof encoding === 'string'\r\n      ? createBuffer(size).fill(fill, encoding)\r\n      : createBuffer(size).fill(fill)\r\n  }\r\n  return createBuffer(size)\r\n}\r\n\r\n/**\r\n * Creates a new filled Buffer instance.\r\n * alloc(size[, fill[, encoding]])\r\n **/\r\nBuffer.alloc = function (size, fill, encoding) {\r\n  return alloc(size, fill, encoding)\r\n}\r\n\r\nfunction allocUnsafe (size) {\r\n  assertSize(size)\r\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\r\n}\r\n\r\n/**\r\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\r\n * */\r\nBuffer.allocUnsafe = function (size) {\r\n  return allocUnsafe(size)\r\n}\r\n/**\r\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\r\n */\r\nBuffer.allocUnsafeSlow = function (size) {\r\n  return allocUnsafe(size)\r\n}\r\n\r\nfunction fromString (string, encoding) {\r\n  if (typeof encoding !== 'string' || encoding === '') {\r\n    encoding = 'utf8'\r\n  }\r\n\r\n  if (!Buffer.isEncoding(encoding)) {\r\n    throw new TypeError('Unknown encoding: ' + encoding)\r\n  }\r\n\r\n  var length = byteLength(string, encoding) | 0\r\n  var buf = createBuffer(length)\r\n\r\n  var actual = buf.write(string, encoding)\r\n\r\n  if (actual !== length) {\r\n    // Writing a hex string, for example, that contains invalid characters will\r\n    // cause everything after the first invalid character to be ignored. (e.g.\r\n    // 'abxxcd' will be treated as 'ab')\r\n    buf = buf.slice(0, actual)\r\n  }\r\n\r\n  return buf\r\n}\r\n\r\nfunction fromArrayLike (array) {\r\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\r\n  var buf = createBuffer(length)\r\n  for (var i = 0; i < length; i += 1) {\r\n    buf[i] = array[i] & 255\r\n  }\r\n  return buf\r\n}\r\n\r\nfunction fromArrayBuffer (array, byteOffset, length) {\r\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\r\n    throw new RangeError('\"offset\" is outside of buffer bounds')\r\n  }\r\n\r\n  if (array.byteLength < byteOffset + (length || 0)) {\r\n    throw new RangeError('\"length\" is outside of buffer bounds')\r\n  }\r\n\r\n  var buf\r\n  if (byteOffset === undefined && length === undefined) {\r\n    buf = new Uint8Array(array)\r\n  } else if (length === undefined) {\r\n    buf = new Uint8Array(array, byteOffset)\r\n  } else {\r\n    buf = new Uint8Array(array, byteOffset, length)\r\n  }\r\n\r\n  // Return an augmented `Uint8Array` instance\r\n  buf.__proto__ = Buffer.prototype\r\n  return buf\r\n}\r\n\r\nfunction fromObject (obj) {\r\n  if (Buffer.isBuffer(obj)) {\r\n    var len = checked(obj.length) | 0\r\n    var buf = createBuffer(len)\r\n\r\n    if (buf.length === 0) {\r\n      return buf\r\n    }\r\n\r\n    obj.copy(buf, 0, 0, len)\r\n    return buf\r\n  }\r\n\r\n  if (obj) {\r\n    if (ArrayBuffer.isView(obj) || 'length' in obj) {\r\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\r\n        return createBuffer(0)\r\n      }\r\n      return fromArrayLike(obj)\r\n    }\r\n\r\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\r\n      return fromArrayLike(obj.data)\r\n    }\r\n  }\r\n\r\n  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object.')\r\n}\r\n\r\nfunction checked (length) {\r\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\r\n  // length is NaN (which is otherwise coerced to zero.)\r\n  if (length >= K_MAX_LENGTH) {\r\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\r\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\r\n  }\r\n  return length | 0\r\n}\r\n\r\nfunction SlowBuffer (length) {\r\n  if (+length != length) { // eslint-disable-line eqeqeq\r\n    length = 0\r\n  }\r\n  return Buffer.alloc(+length)\r\n}\r\n\r\nBuffer.isBuffer = function isBuffer (b) {\r\n  return b != null && b._isBuffer === true\r\n}\r\n\r\nBuffer.compare = function compare (a, b) {\r\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\r\n    throw new TypeError('Arguments must be Buffers')\r\n  }\r\n\r\n  if (a === b) return 0\r\n\r\n  var x = a.length\r\n  var y = b.length\r\n\r\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\r\n    if (a[i] !== b[i]) {\r\n      x = a[i]\r\n      y = b[i]\r\n      break\r\n    }\r\n  }\r\n\r\n  if (x < y) return -1\r\n  if (y < x) return 1\r\n  return 0\r\n}\r\n\r\nBuffer.isEncoding = function isEncoding (encoding) {\r\n  switch (String(encoding).toLowerCase()) {\r\n    case 'hex':\r\n    case 'utf8':\r\n    case 'utf-8':\r\n    case 'ascii':\r\n    case 'latin1':\r\n    case 'binary':\r\n    case 'base64':\r\n    case 'ucs2':\r\n    case 'ucs-2':\r\n    case 'utf16le':\r\n    case 'utf-16le':\r\n      return true\r\n    default:\r\n      return false\r\n  }\r\n}\r\n\r\nBuffer.concat = function concat (list, length) {\r\n  if (!Array.isArray(list)) {\r\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\r\n  }\r\n\r\n  if (list.length === 0) {\r\n    return Buffer.alloc(0)\r\n  }\r\n\r\n  var i\r\n  if (length === undefined) {\r\n    length = 0\r\n    for (i = 0; i < list.length; ++i) {\r\n      length += list[i].length\r\n    }\r\n  }\r\n\r\n  var buffer = Buffer.allocUnsafe(length)\r\n  var pos = 0\r\n  for (i = 0; i < list.length; ++i) {\r\n    var buf = list[i]\r\n    if (ArrayBuffer.isView(buf)) {\r\n      buf = Buffer.from(buf)\r\n    }\r\n    if (!Buffer.isBuffer(buf)) {\r\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\r\n    }\r\n    buf.copy(buffer, pos)\r\n    pos += buf.length\r\n  }\r\n  return buffer\r\n}\r\n\r\nfunction byteLength (string, encoding) {\r\n  if (Buffer.isBuffer(string)) {\r\n    return string.length\r\n  }\r\n  if (ArrayBuffer.isView(string) || isArrayBuffer(string)) {\r\n    return string.byteLength\r\n  }\r\n  if (typeof string !== 'string') {\r\n    string = '' + string\r\n  }\r\n\r\n  var len = string.length\r\n  if (len === 0) return 0\r\n\r\n  // Use a for loop to avoid recursion\r\n  var loweredCase = false\r\n  for (;;) {\r\n    switch (encoding) {\r\n      case 'ascii':\r\n      case 'latin1':\r\n      case 'binary':\r\n        return len\r\n      case 'utf8':\r\n      case 'utf-8':\r\n      case undefined:\r\n        return utf8ToBytes(string).length\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return len * 2\r\n      case 'hex':\r\n        return len >>> 1\r\n      case 'base64':\r\n        return base64ToBytes(string).length\r\n      default:\r\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\r\n        encoding = ('' + encoding).toLowerCase()\r\n        loweredCase = true\r\n    }\r\n  }\r\n}\r\nBuffer.byteLength = byteLength\r\n\r\nfunction slowToString (encoding, start, end) {\r\n  var loweredCase = false\r\n\r\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\r\n  // property of a typed array.\r\n\r\n  // This behaves neither like String nor Uint8Array in that we set start/end\r\n  // to their upper/lower bounds if the value passed is out of range.\r\n  // undefined is handled specially as per ECMA-262 6th Edition,\r\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\r\n  if (start === undefined || start < 0) {\r\n    start = 0\r\n  }\r\n  // Return early if start > this.length. Done here to prevent potential uint32\r\n  // coercion fail below.\r\n  if (start > this.length) {\r\n    return ''\r\n  }\r\n\r\n  if (end === undefined || end > this.length) {\r\n    end = this.length\r\n  }\r\n\r\n  if (end <= 0) {\r\n    return ''\r\n  }\r\n\r\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\r\n  end >>>= 0\r\n  start >>>= 0\r\n\r\n  if (end <= start) {\r\n    return ''\r\n  }\r\n\r\n  if (!encoding) encoding = 'utf8'\r\n\r\n  while (true) {\r\n    switch (encoding) {\r\n      case 'hex':\r\n        return hexSlice(this, start, end)\r\n\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return utf8Slice(this, start, end)\r\n\r\n      case 'ascii':\r\n        return asciiSlice(this, start, end)\r\n\r\n      case 'latin1':\r\n      case 'binary':\r\n        return latin1Slice(this, start, end)\r\n\r\n      case 'base64':\r\n        return base64Slice(this, start, end)\r\n\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return utf16leSlice(this, start, end)\r\n\r\n      default:\r\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\r\n        encoding = (encoding + '').toLowerCase()\r\n        loweredCase = true\r\n    }\r\n  }\r\n}\r\n\r\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\r\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\r\n// reliably in a browserify context because there could be multiple different\r\n// copies of the 'buffer' package in use. This method works even for Buffer\r\n// instances that were created from another copy of the `buffer` package.\r\n// See: https://github.com/feross/buffer/issues/154\r\nBuffer.prototype._isBuffer = true\r\n\r\nfunction swap (b, n, m) {\r\n  var i = b[n]\r\n  b[n] = b[m]\r\n  b[m] = i\r\n}\r\n\r\nBuffer.prototype.swap16 = function swap16 () {\r\n  var len = this.length\r\n  if (len % 2 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\r\n  }\r\n  for (var i = 0; i < len; i += 2) {\r\n    swap(this, i, i + 1)\r\n  }\r\n  return this\r\n}\r\n\r\nBuffer.prototype.swap32 = function swap32 () {\r\n  var len = this.length\r\n  if (len % 4 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\r\n  }\r\n  for (var i = 0; i < len; i += 4) {\r\n    swap(this, i, i + 3)\r\n    swap(this, i + 1, i + 2)\r\n  }\r\n  return this\r\n}\r\n\r\nBuffer.prototype.swap64 = function swap64 () {\r\n  var len = this.length\r\n  if (len % 8 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\r\n  }\r\n  for (var i = 0; i < len; i += 8) {\r\n    swap(this, i, i + 7)\r\n    swap(this, i + 1, i + 6)\r\n    swap(this, i + 2, i + 5)\r\n    swap(this, i + 3, i + 4)\r\n  }\r\n  return this\r\n}\r\n\r\nBuffer.prototype.toString = function toString () {\r\n  var length = this.length\r\n  if (length === 0) return ''\r\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\r\n  return slowToString.apply(this, arguments)\r\n}\r\n\r\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\r\n\r\nBuffer.prototype.equals = function equals (b) {\r\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\r\n  if (this === b) return true\r\n  return Buffer.compare(this, b) === 0\r\n}\r\n\r\nBuffer.prototype.inspect = function inspect () {\r\n  var str = ''\r\n  var max = exports.INSPECT_MAX_BYTES\r\n  if (this.length > 0) {\r\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\r\n    if (this.length > max) str += ' ... '\r\n  }\r\n  return '<Buffer ' + str + '>'\r\n}\r\n\r\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\r\n  if (!Buffer.isBuffer(target)) {\r\n    throw new TypeError('Argument must be a Buffer')\r\n  }\r\n\r\n  if (start === undefined) {\r\n    start = 0\r\n  }\r\n  if (end === undefined) {\r\n    end = target ? target.length : 0\r\n  }\r\n  if (thisStart === undefined) {\r\n    thisStart = 0\r\n  }\r\n  if (thisEnd === undefined) {\r\n    thisEnd = this.length\r\n  }\r\n\r\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\r\n    throw new RangeError('out of range index')\r\n  }\r\n\r\n  if (thisStart >= thisEnd && start >= end) {\r\n    return 0\r\n  }\r\n  if (thisStart >= thisEnd) {\r\n    return -1\r\n  }\r\n  if (start >= end) {\r\n    return 1\r\n  }\r\n\r\n  start >>>= 0\r\n  end >>>= 0\r\n  thisStart >>>= 0\r\n  thisEnd >>>= 0\r\n\r\n  if (this === target) return 0\r\n\r\n  var x = thisEnd - thisStart\r\n  var y = end - start\r\n  var len = Math.min(x, y)\r\n\r\n  var thisCopy = this.slice(thisStart, thisEnd)\r\n  var targetCopy = target.slice(start, end)\r\n\r\n  for (var i = 0; i < len; ++i) {\r\n    if (thisCopy[i] !== targetCopy[i]) {\r\n      x = thisCopy[i]\r\n      y = targetCopy[i]\r\n      break\r\n    }\r\n  }\r\n\r\n  if (x < y) return -1\r\n  if (y < x) return 1\r\n  return 0\r\n}\r\n\r\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\r\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\r\n//\r\n// Arguments:\r\n// - buffer - a Buffer to search\r\n// - val - a string, Buffer, or number\r\n// - byteOffset - an index into `buffer`; will be clamped to an int32\r\n// - encoding - an optional encoding, relevant is val is a string\r\n// - dir - true for indexOf, false for lastIndexOf\r\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\r\n  // Empty buffer means no match\r\n  if (buffer.length === 0) return -1\r\n\r\n  // Normalize byteOffset\r\n  if (typeof byteOffset === 'string') {\r\n    encoding = byteOffset\r\n    byteOffset = 0\r\n  } else if (byteOffset > 0x7fffffff) {\r\n    byteOffset = 0x7fffffff\r\n  } else if (byteOffset < -0x80000000) {\r\n    byteOffset = -0x80000000\r\n  }\r\n  byteOffset = +byteOffset  // Coerce to Number.\r\n  if (numberIsNaN(byteOffset)) {\r\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\r\n    byteOffset = dir ? 0 : (buffer.length - 1)\r\n  }\r\n\r\n  // Normalize byteOffset: negative offsets start from the end of the buffer\r\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\r\n  if (byteOffset >= buffer.length) {\r\n    if (dir) return -1\r\n    else byteOffset = buffer.length - 1\r\n  } else if (byteOffset < 0) {\r\n    if (dir) byteOffset = 0\r\n    else return -1\r\n  }\r\n\r\n  // Normalize val\r\n  if (typeof val === 'string') {\r\n    val = Buffer.from(val, encoding)\r\n  }\r\n\r\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\r\n  if (Buffer.isBuffer(val)) {\r\n    // Special case: looking for empty string/buffer always fails\r\n    if (val.length === 0) {\r\n      return -1\r\n    }\r\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\r\n  } else if (typeof val === 'number') {\r\n    val = val & 0xFF // Search for a byte value [0-255]\r\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\r\n      if (dir) {\r\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\r\n      } else {\r\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\r\n      }\r\n    }\r\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\r\n  }\r\n\r\n  throw new TypeError('val must be string, number or Buffer')\r\n}\r\n\r\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\r\n  var indexSize = 1\r\n  var arrLength = arr.length\r\n  var valLength = val.length\r\n\r\n  if (encoding !== undefined) {\r\n    encoding = String(encoding).toLowerCase()\r\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\r\n        encoding === 'utf16le' || encoding === 'utf-16le') {\r\n      if (arr.length < 2 || val.length < 2) {\r\n        return -1\r\n      }\r\n      indexSize = 2\r\n      arrLength /= 2\r\n      valLength /= 2\r\n      byteOffset /= 2\r\n    }\r\n  }\r\n\r\n  function read (buf, i) {\r\n    if (indexSize === 1) {\r\n      return buf[i]\r\n    } else {\r\n      return buf.readUInt16BE(i * indexSize)\r\n    }\r\n  }\r\n\r\n  var i\r\n  if (dir) {\r\n    var foundIndex = -1\r\n    for (i = byteOffset; i < arrLength; i++) {\r\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\r\n        if (foundIndex === -1) foundIndex = i\r\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\r\n      } else {\r\n        if (foundIndex !== -1) i -= i - foundIndex\r\n        foundIndex = -1\r\n      }\r\n    }\r\n  } else {\r\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\r\n    for (i = byteOffset; i >= 0; i--) {\r\n      var found = true\r\n      for (var j = 0; j < valLength; j++) {\r\n        if (read(arr, i + j) !== read(val, j)) {\r\n          found = false\r\n          break\r\n        }\r\n      }\r\n      if (found) return i\r\n    }\r\n  }\r\n\r\n  return -1\r\n}\r\n\r\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\r\n  return this.indexOf(val, byteOffset, encoding) !== -1\r\n}\r\n\r\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\r\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\r\n}\r\n\r\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\r\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\r\n}\r\n\r\nfunction hexWrite (buf, string, offset, length) {\r\n  offset = Number(offset) || 0\r\n  var remaining = buf.length - offset\r\n  if (!length) {\r\n    length = remaining\r\n  } else {\r\n    length = Number(length)\r\n    if (length > remaining) {\r\n      length = remaining\r\n    }\r\n  }\r\n\r\n  var strLen = string.length\r\n\r\n  if (length > strLen / 2) {\r\n    length = strLen / 2\r\n  }\r\n  for (var i = 0; i < length; ++i) {\r\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\r\n    if (numberIsNaN(parsed)) return i\r\n    buf[offset + i] = parsed\r\n  }\r\n  return i\r\n}\r\n\r\nfunction utf8Write (buf, string, offset, length) {\r\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\r\n}\r\n\r\nfunction asciiWrite (buf, string, offset, length) {\r\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\r\n}\r\n\r\nfunction latin1Write (buf, string, offset, length) {\r\n  return asciiWrite(buf, string, offset, length)\r\n}\r\n\r\nfunction base64Write (buf, string, offset, length) {\r\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\r\n}\r\n\r\nfunction ucs2Write (buf, string, offset, length) {\r\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\r\n}\r\n\r\nBuffer.prototype.write = function write (string, offset, length, encoding) {\r\n  // Buffer#write(string)\r\n  if (offset === undefined) {\r\n    encoding = 'utf8'\r\n    length = this.length\r\n    offset = 0\r\n  // Buffer#write(string, encoding)\r\n  } else if (length === undefined && typeof offset === 'string') {\r\n    encoding = offset\r\n    length = this.length\r\n    offset = 0\r\n  // Buffer#write(string, offset[, length][, encoding])\r\n  } else if (isFinite(offset)) {\r\n    offset = offset >>> 0\r\n    if (isFinite(length)) {\r\n      length = length >>> 0\r\n      if (encoding === undefined) encoding = 'utf8'\r\n    } else {\r\n      encoding = length\r\n      length = undefined\r\n    }\r\n  } else {\r\n    throw new Error(\r\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\r\n    )\r\n  }\r\n\r\n  var remaining = this.length - offset\r\n  if (length === undefined || length > remaining) length = remaining\r\n\r\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\r\n    throw new RangeError('Attempt to write outside buffer bounds')\r\n  }\r\n\r\n  if (!encoding) encoding = 'utf8'\r\n\r\n  var loweredCase = false\r\n  for (;;) {\r\n    switch (encoding) {\r\n      case 'hex':\r\n        return hexWrite(this, string, offset, length)\r\n\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return utf8Write(this, string, offset, length)\r\n\r\n      case 'ascii':\r\n        return asciiWrite(this, string, offset, length)\r\n\r\n      case 'latin1':\r\n      case 'binary':\r\n        return latin1Write(this, string, offset, length)\r\n\r\n      case 'base64':\r\n        // Warning: maxLength not taken into account in base64Write\r\n        return base64Write(this, string, offset, length)\r\n\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return ucs2Write(this, string, offset, length)\r\n\r\n      default:\r\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\r\n        encoding = ('' + encoding).toLowerCase()\r\n        loweredCase = true\r\n    }\r\n  }\r\n}\r\n\r\nBuffer.prototype.toJSON = function toJSON () {\r\n  return {\r\n    type: 'Buffer',\r\n    data: Array.prototype.slice.call(this._arr || this, 0)\r\n  }\r\n}\r\n\r\nfunction base64Slice (buf, start, end) {\r\n  if (start === 0 && end === buf.length) {\r\n    return base64.fromByteArray(buf)\r\n  } else {\r\n    return base64.fromByteArray(buf.slice(start, end))\r\n  }\r\n}\r\n\r\nfunction utf8Slice (buf, start, end) {\r\n  end = Math.min(buf.length, end)\r\n  var res = []\r\n\r\n  var i = start\r\n  while (i < end) {\r\n    var firstByte = buf[i]\r\n    var codePoint = null\r\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\r\n      : (firstByte > 0xDF) ? 3\r\n      : (firstByte > 0xBF) ? 2\r\n      : 1\r\n\r\n    if (i + bytesPerSequence <= end) {\r\n      var secondByte, thirdByte, fourthByte, tempCodePoint\r\n\r\n      switch (bytesPerSequence) {\r\n        case 1:\r\n          if (firstByte < 0x80) {\r\n            codePoint = firstByte\r\n          }\r\n          break\r\n        case 2:\r\n          secondByte = buf[i + 1]\r\n          if ((secondByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\r\n            if (tempCodePoint > 0x7F) {\r\n              codePoint = tempCodePoint\r\n            }\r\n          }\r\n          break\r\n        case 3:\r\n          secondByte = buf[i + 1]\r\n          thirdByte = buf[i + 2]\r\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\r\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\r\n              codePoint = tempCodePoint\r\n            }\r\n          }\r\n          break\r\n        case 4:\r\n          secondByte = buf[i + 1]\r\n          thirdByte = buf[i + 2]\r\n          fourthByte = buf[i + 3]\r\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\r\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\r\n              codePoint = tempCodePoint\r\n            }\r\n          }\r\n      }\r\n    }\r\n\r\n    if (codePoint === null) {\r\n      // we did not generate a valid codePoint so insert a\r\n      // replacement char (U+FFFD) and advance only 1 byte\r\n      codePoint = 0xFFFD\r\n      bytesPerSequence = 1\r\n    } else if (codePoint > 0xFFFF) {\r\n      // encode to utf16 (surrogate pair dance)\r\n      codePoint -= 0x10000\r\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\r\n      codePoint = 0xDC00 | codePoint & 0x3FF\r\n    }\r\n\r\n    res.push(codePoint)\r\n    i += bytesPerSequence\r\n  }\r\n\r\n  return decodeCodePointsArray(res)\r\n}\r\n\r\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\r\n// the lowest limit is Chrome, with 0x10000 args.\r\n// We go 1 magnitude less, for safety\r\nvar MAX_ARGUMENTS_LENGTH = 0x1000\r\n\r\nfunction decodeCodePointsArray (codePoints) {\r\n  var len = codePoints.length\r\n  if (len <= MAX_ARGUMENTS_LENGTH) {\r\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\r\n  }\r\n\r\n  // Decode in chunks to avoid \"call stack size exceeded\".\r\n  var res = ''\r\n  var i = 0\r\n  while (i < len) {\r\n    res += String.fromCharCode.apply(\r\n      String,\r\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\r\n    )\r\n  }\r\n  return res\r\n}\r\n\r\nfunction asciiSlice (buf, start, end) {\r\n  var ret = ''\r\n  end = Math.min(buf.length, end)\r\n\r\n  for (var i = start; i < end; ++i) {\r\n    ret += String.fromCharCode(buf[i] & 0x7F)\r\n  }\r\n  return ret\r\n}\r\n\r\nfunction latin1Slice (buf, start, end) {\r\n  var ret = ''\r\n  end = Math.min(buf.length, end)\r\n\r\n  for (var i = start; i < end; ++i) {\r\n    ret += String.fromCharCode(buf[i])\r\n  }\r\n  return ret\r\n}\r\n\r\nfunction hexSlice (buf, start, end) {\r\n  var len = buf.length\r\n\r\n  if (!start || start < 0) start = 0\r\n  if (!end || end < 0 || end > len) end = len\r\n\r\n  var out = ''\r\n  for (var i = start; i < end; ++i) {\r\n    out += toHex(buf[i])\r\n  }\r\n  return out\r\n}\r\n\r\nfunction utf16leSlice (buf, start, end) {\r\n  var bytes = buf.slice(start, end)\r\n  var res = ''\r\n  for (var i = 0; i < bytes.length; i += 2) {\r\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\r\n  }\r\n  return res\r\n}\r\n\r\nBuffer.prototype.slice = function slice (start, end) {\r\n  var len = this.length\r\n  start = ~~start\r\n  end = end === undefined ? len : ~~end\r\n\r\n  if (start < 0) {\r\n    start += len\r\n    if (start < 0) start = 0\r\n  } else if (start > len) {\r\n    start = len\r\n  }\r\n\r\n  if (end < 0) {\r\n    end += len\r\n    if (end < 0) end = 0\r\n  } else if (end > len) {\r\n    end = len\r\n  }\r\n\r\n  if (end < start) end = start\r\n\r\n  var newBuf = this.subarray(start, end)\r\n  // Return an augmented `Uint8Array` instance\r\n  newBuf.__proto__ = Buffer.prototype\r\n  return newBuf\r\n}\r\n\r\n/*\r\n * Need to make sure that buffer isn't trying to write out of bounds.\r\n */\r\nfunction checkOffset (offset, ext, length) {\r\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\r\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\r\n}\r\n\r\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n  var val = this[offset]\r\n  var mul = 1\r\n  var i = 0\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    val += this[offset + i] * mul\r\n  }\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) {\r\n    checkOffset(offset, byteLength, this.length)\r\n  }\r\n\r\n  var val = this[offset + --byteLength]\r\n  var mul = 1\r\n  while (byteLength > 0 && (mul *= 0x100)) {\r\n    val += this[offset + --byteLength] * mul\r\n  }\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 1, this.length)\r\n  return this[offset]\r\n}\r\n\r\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  return this[offset] | (this[offset + 1] << 8)\r\n}\r\n\r\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  return (this[offset] << 8) | this[offset + 1]\r\n}\r\n\r\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return ((this[offset]) |\r\n      (this[offset + 1] << 8) |\r\n      (this[offset + 2] << 16)) +\r\n      (this[offset + 3] * 0x1000000)\r\n}\r\n\r\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return (this[offset] * 0x1000000) +\r\n    ((this[offset + 1] << 16) |\r\n    (this[offset + 2] << 8) |\r\n    this[offset + 3])\r\n}\r\n\r\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n  var val = this[offset]\r\n  var mul = 1\r\n  var i = 0\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    val += this[offset + i] * mul\r\n  }\r\n  mul *= 0x80\r\n\r\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n  var i = byteLength\r\n  var mul = 1\r\n  var val = this[offset + --i]\r\n  while (i > 0 && (mul *= 0x100)) {\r\n    val += this[offset + --i] * mul\r\n  }\r\n  mul *= 0x80\r\n\r\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 1, this.length)\r\n  if (!(this[offset] & 0x80)) return (this[offset])\r\n  return ((0xff - this[offset] + 1) * -1)\r\n}\r\n\r\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  var val = this[offset] | (this[offset + 1] << 8)\r\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\r\n}\r\n\r\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  var val = this[offset + 1] | (this[offset] << 8)\r\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\r\n}\r\n\r\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return (this[offset]) |\r\n    (this[offset + 1] << 8) |\r\n    (this[offset + 2] << 16) |\r\n    (this[offset + 3] << 24)\r\n}\r\n\r\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return (this[offset] << 24) |\r\n    (this[offset + 1] << 16) |\r\n    (this[offset + 2] << 8) |\r\n    (this[offset + 3])\r\n}\r\n\r\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n  return ieee754.read(this, offset, true, 23, 4)\r\n}\r\n\r\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n  return ieee754.read(this, offset, false, 23, 4)\r\n}\r\n\r\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 8, this.length)\r\n  return ieee754.read(this, offset, true, 52, 8)\r\n}\r\n\r\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 8, this.length)\r\n  return ieee754.read(this, offset, false, 52, 8)\r\n}\r\n\r\nfunction checkInt (buf, value, offset, ext, max, min) {\r\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\r\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\r\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\r\n}\r\n\r\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) {\r\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\r\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\r\n  }\r\n\r\n  var mul = 1\r\n  var i = 0\r\n  this[offset] = value & 0xFF\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    this[offset + i] = (value / mul) & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) {\r\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\r\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\r\n  }\r\n\r\n  var i = byteLength - 1\r\n  var mul = 1\r\n  this[offset + i] = value & 0xFF\r\n  while (--i >= 0 && (mul *= 0x100)) {\r\n    this[offset + i] = (value / mul) & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\r\n  this[offset] = (value & 0xff)\r\n  return offset + 1\r\n}\r\n\r\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\r\n  this[offset] = (value & 0xff)\r\n  this[offset + 1] = (value >>> 8)\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\r\n  this[offset] = (value >>> 8)\r\n  this[offset + 1] = (value & 0xff)\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\r\n  this[offset + 3] = (value >>> 24)\r\n  this[offset + 2] = (value >>> 16)\r\n  this[offset + 1] = (value >>> 8)\r\n  this[offset] = (value & 0xff)\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\r\n  this[offset] = (value >>> 24)\r\n  this[offset + 1] = (value >>> 16)\r\n  this[offset + 2] = (value >>> 8)\r\n  this[offset + 3] = (value & 0xff)\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) {\r\n    var limit = Math.pow(2, (8 * byteLength) - 1)\r\n\r\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\r\n  }\r\n\r\n  var i = 0\r\n  var mul = 1\r\n  var sub = 0\r\n  this[offset] = value & 0xFF\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\r\n      sub = 1\r\n    }\r\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) {\r\n    var limit = Math.pow(2, (8 * byteLength) - 1)\r\n\r\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\r\n  }\r\n\r\n  var i = byteLength - 1\r\n  var mul = 1\r\n  var sub = 0\r\n  this[offset + i] = value & 0xFF\r\n  while (--i >= 0 && (mul *= 0x100)) {\r\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\r\n      sub = 1\r\n    }\r\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\r\n  if (value < 0) value = 0xff + value + 1\r\n  this[offset] = (value & 0xff)\r\n  return offset + 1\r\n}\r\n\r\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\r\n  this[offset] = (value & 0xff)\r\n  this[offset + 1] = (value >>> 8)\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\r\n  this[offset] = (value >>> 8)\r\n  this[offset + 1] = (value & 0xff)\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\r\n  this[offset] = (value & 0xff)\r\n  this[offset + 1] = (value >>> 8)\r\n  this[offset + 2] = (value >>> 16)\r\n  this[offset + 3] = (value >>> 24)\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\r\n  if (value < 0) value = 0xffffffff + value + 1\r\n  this[offset] = (value >>> 24)\r\n  this[offset + 1] = (value >>> 16)\r\n  this[offset + 2] = (value >>> 8)\r\n  this[offset + 3] = (value & 0xff)\r\n  return offset + 4\r\n}\r\n\r\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\r\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\r\n  if (offset < 0) throw new RangeError('Index out of range')\r\n}\r\n\r\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) {\r\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\r\n  }\r\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\r\n  return writeFloat(this, value, offset, true, noAssert)\r\n}\r\n\r\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\r\n  return writeFloat(this, value, offset, false, noAssert)\r\n}\r\n\r\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) {\r\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\r\n  }\r\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\r\n  return offset + 8\r\n}\r\n\r\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\r\n  return writeDouble(this, value, offset, true, noAssert)\r\n}\r\n\r\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\r\n  return writeDouble(this, value, offset, false, noAssert)\r\n}\r\n\r\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\r\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\r\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\r\n  if (!start) start = 0\r\n  if (!end && end !== 0) end = this.length\r\n  if (targetStart >= target.length) targetStart = target.length\r\n  if (!targetStart) targetStart = 0\r\n  if (end > 0 && end < start) end = start\r\n\r\n  // Copy 0 bytes; we're done\r\n  if (end === start) return 0\r\n  if (target.length === 0 || this.length === 0) return 0\r\n\r\n  // Fatal error conditions\r\n  if (targetStart < 0) {\r\n    throw new RangeError('targetStart out of bounds')\r\n  }\r\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\r\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\r\n\r\n  // Are we oob?\r\n  if (end > this.length) end = this.length\r\n  if (target.length - targetStart < end - start) {\r\n    end = target.length - targetStart + start\r\n  }\r\n\r\n  var len = end - start\r\n\r\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\r\n    // Use built-in when available, missing from IE11\r\n    this.copyWithin(targetStart, start, end)\r\n  } else if (this === target && start < targetStart && targetStart < end) {\r\n    // descending copy from end\r\n    for (var i = len - 1; i >= 0; --i) {\r\n      target[i + targetStart] = this[i + start]\r\n    }\r\n  } else {\r\n    Uint8Array.prototype.set.call(\r\n      target,\r\n      this.subarray(start, end),\r\n      targetStart\r\n    )\r\n  }\r\n\r\n  return len\r\n}\r\n\r\n// Usage:\r\n//    buffer.fill(number[, offset[, end]])\r\n//    buffer.fill(buffer[, offset[, end]])\r\n//    buffer.fill(string[, offset[, end]][, encoding])\r\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\r\n  // Handle string cases:\r\n  if (typeof val === 'string') {\r\n    if (typeof start === 'string') {\r\n      encoding = start\r\n      start = 0\r\n      end = this.length\r\n    } else if (typeof end === 'string') {\r\n      encoding = end\r\n      end = this.length\r\n    }\r\n    if (encoding !== undefined && typeof encoding !== 'string') {\r\n      throw new TypeError('encoding must be a string')\r\n    }\r\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\r\n      throw new TypeError('Unknown encoding: ' + encoding)\r\n    }\r\n    if (val.length === 1) {\r\n      var code = val.charCodeAt(0)\r\n      if ((encoding === 'utf8' && code < 128) ||\r\n          encoding === 'latin1') {\r\n        // Fast path: If `val` fits into a single byte, use that numeric value.\r\n        val = code\r\n      }\r\n    }\r\n  } else if (typeof val === 'number') {\r\n    val = val & 255\r\n  }\r\n\r\n  // Invalid ranges are not set to a default, so can range check early.\r\n  if (start < 0 || this.length < start || this.length < end) {\r\n    throw new RangeError('Out of range index')\r\n  }\r\n\r\n  if (end <= start) {\r\n    return this\r\n  }\r\n\r\n  start = start >>> 0\r\n  end = end === undefined ? this.length : end >>> 0\r\n\r\n  if (!val) val = 0\r\n\r\n  var i\r\n  if (typeof val === 'number') {\r\n    for (i = start; i < end; ++i) {\r\n      this[i] = val\r\n    }\r\n  } else {\r\n    var bytes = Buffer.isBuffer(val)\r\n      ? val\r\n      : new Buffer(val, encoding)\r\n    var len = bytes.length\r\n    if (len === 0) {\r\n      throw new TypeError('The value \"' + val +\r\n        '\" is invalid for argument \"value\"')\r\n    }\r\n    for (i = 0; i < end - start; ++i) {\r\n      this[i + start] = bytes[i % len]\r\n    }\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// HELPER FUNCTIONS\r\n// ================\r\n\r\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\r\n\r\nfunction base64clean (str) {\r\n  // Node takes equal signs as end of the Base64 encoding\r\n  str = str.split('=')[0]\r\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\r\n  str = str.trim().replace(INVALID_BASE64_RE, '')\r\n  // Node converts strings with length < 2 to ''\r\n  if (str.length < 2) return ''\r\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\r\n  while (str.length % 4 !== 0) {\r\n    str = str + '='\r\n  }\r\n  return str\r\n}\r\n\r\nfunction toHex (n) {\r\n  if (n < 16) return '0' + n.toString(16)\r\n  return n.toString(16)\r\n}\r\n\r\nfunction utf8ToBytes (string, units) {\r\n  units = units || Infinity\r\n  var codePoint\r\n  var length = string.length\r\n  var leadSurrogate = null\r\n  var bytes = []\r\n\r\n  for (var i = 0; i < length; ++i) {\r\n    codePoint = string.charCodeAt(i)\r\n\r\n    // is surrogate component\r\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\r\n      // last char was a lead\r\n      if (!leadSurrogate) {\r\n        // no lead yet\r\n        if (codePoint > 0xDBFF) {\r\n          // unexpected trail\r\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n          continue\r\n        } else if (i + 1 === length) {\r\n          // unpaired lead\r\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n          continue\r\n        }\r\n\r\n        // valid lead\r\n        leadSurrogate = codePoint\r\n\r\n        continue\r\n      }\r\n\r\n      // 2 leads in a row\r\n      if (codePoint < 0xDC00) {\r\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n        leadSurrogate = codePoint\r\n        continue\r\n      }\r\n\r\n      // valid surrogate pair\r\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\r\n    } else if (leadSurrogate) {\r\n      // valid bmp char, but last char was a lead\r\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n    }\r\n\r\n    leadSurrogate = null\r\n\r\n    // encode utf8\r\n    if (codePoint < 0x80) {\r\n      if ((units -= 1) < 0) break\r\n      bytes.push(codePoint)\r\n    } else if (codePoint < 0x800) {\r\n      if ((units -= 2) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0x6 | 0xC0,\r\n        codePoint & 0x3F | 0x80\r\n      )\r\n    } else if (codePoint < 0x10000) {\r\n      if ((units -= 3) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0xC | 0xE0,\r\n        codePoint >> 0x6 & 0x3F | 0x80,\r\n        codePoint & 0x3F | 0x80\r\n      )\r\n    } else if (codePoint < 0x110000) {\r\n      if ((units -= 4) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0x12 | 0xF0,\r\n        codePoint >> 0xC & 0x3F | 0x80,\r\n        codePoint >> 0x6 & 0x3F | 0x80,\r\n        codePoint & 0x3F | 0x80\r\n      )\r\n    } else {\r\n      throw new Error('Invalid code point')\r\n    }\r\n  }\r\n\r\n  return bytes\r\n}\r\n\r\nfunction asciiToBytes (str) {\r\n  var byteArray = []\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Node's code seems to be doing this and not & 0x7F..\r\n    byteArray.push(str.charCodeAt(i) & 0xFF)\r\n  }\r\n  return byteArray\r\n}\r\n\r\nfunction utf16leToBytes (str, units) {\r\n  var c, hi, lo\r\n  var byteArray = []\r\n  for (var i = 0; i < str.length; ++i) {\r\n    if ((units -= 2) < 0) break\r\n\r\n    c = str.charCodeAt(i)\r\n    hi = c >> 8\r\n    lo = c % 256\r\n    byteArray.push(lo)\r\n    byteArray.push(hi)\r\n  }\r\n\r\n  return byteArray\r\n}\r\n\r\nfunction base64ToBytes (str) {\r\n  return base64.toByteArray(base64clean(str))\r\n}\r\n\r\nfunction blitBuffer (src, dst, offset, length) {\r\n  for (var i = 0; i < length; ++i) {\r\n    if ((i + offset >= dst.length) || (i >= src.length)) break\r\n    dst[i + offset] = src[i]\r\n  }\r\n  return i\r\n}\r\n\r\n// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check\r\n// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166\r\nfunction isArrayBuffer (obj) {\r\n  return obj instanceof ArrayBuffer ||\r\n    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&\r\n      typeof obj.byteLength === 'number')\r\n}\r\n\r\nfunction numberIsNaN (obj) {\r\n  return obj !== obj // eslint-disable-line no-self-compare\r\n}\r\n\r\n},{\"base64-js\":39,\"ieee754\":83}],42:[function(require,module,exports){\r\n(function (Buffer){\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n// NOTE: These type checking functions intentionally don't use `instanceof`\r\n// because it is fragile and can be easily faked with `Object.create()`.\r\n\r\nfunction isArray(arg) {\r\n  if (Array.isArray) {\r\n    return Array.isArray(arg);\r\n  }\r\n  return objectToString(arg) === '[object Array]';\r\n}\r\nexports.isArray = isArray;\r\n\r\nfunction isBoolean(arg) {\r\n  return typeof arg === 'boolean';\r\n}\r\nexports.isBoolean = isBoolean;\r\n\r\nfunction isNull(arg) {\r\n  return arg === null;\r\n}\r\nexports.isNull = isNull;\r\n\r\nfunction isNullOrUndefined(arg) {\r\n  return arg == null;\r\n}\r\nexports.isNullOrUndefined = isNullOrUndefined;\r\n\r\nfunction isNumber(arg) {\r\n  return typeof arg === 'number';\r\n}\r\nexports.isNumber = isNumber;\r\n\r\nfunction isString(arg) {\r\n  return typeof arg === 'string';\r\n}\r\nexports.isString = isString;\r\n\r\nfunction isSymbol(arg) {\r\n  return typeof arg === 'symbol';\r\n}\r\nexports.isSymbol = isSymbol;\r\n\r\nfunction isUndefined(arg) {\r\n  return arg === void 0;\r\n}\r\nexports.isUndefined = isUndefined;\r\n\r\nfunction isRegExp(re) {\r\n  return objectToString(re) === '[object RegExp]';\r\n}\r\nexports.isRegExp = isRegExp;\r\n\r\nfunction isObject(arg) {\r\n  return typeof arg === 'object' && arg !== null;\r\n}\r\nexports.isObject = isObject;\r\n\r\nfunction isDate(d) {\r\n  return objectToString(d) === '[object Date]';\r\n}\r\nexports.isDate = isDate;\r\n\r\nfunction isError(e) {\r\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\r\n}\r\nexports.isError = isError;\r\n\r\nfunction isFunction(arg) {\r\n  return typeof arg === 'function';\r\n}\r\nexports.isFunction = isFunction;\r\n\r\nfunction isPrimitive(arg) {\r\n  return arg === null ||\r\n         typeof arg === 'boolean' ||\r\n         typeof arg === 'number' ||\r\n         typeof arg === 'string' ||\r\n         typeof arg === 'symbol' ||  // ES6 symbol\r\n         typeof arg === 'undefined';\r\n}\r\nexports.isPrimitive = isPrimitive;\r\n\r\nexports.isBuffer = Buffer.isBuffer;\r\n\r\nfunction objectToString(o) {\r\n  return Object.prototype.toString.call(o);\r\n}\r\n\r\n}).call(this,{\"isBuffer\":require(\"../../is-buffer/index.js\")})\r\n\r\n},{\"../../is-buffer/index.js\":85}],43:[function(require,module,exports){\r\n(function (process,Buffer){\r\n// Generated by CoffeeScript 1.12.7\r\nvar Parser, StringDecoder, isObjLiteral, stream, util;\r\n\r\nstream = require('stream');\r\n\r\nutil = require('util');\r\n\r\nStringDecoder = require('string_decoder').StringDecoder;\r\n\r\nmodule.exports = function() {\r\n  var callback, called, chunks, data, err, options, parser;\r\n  if (arguments.length === 3) {\r\n    data = arguments[0];\r\n    options = arguments[1];\r\n    callback = arguments[2];\r\n    if (typeof callback !== 'function') {\r\n      throw Error(\"Invalid callback argument: \" + (JSON.stringify(callback)));\r\n    }\r\n    if (!(typeof data === 'string' || Buffer.isBuffer(arguments[0]))) {\r\n      return callback(Error(\"Invalid data argument: \" + (JSON.stringify(data))));\r\n    }\r\n  } else if (arguments.length === 2) {\r\n    if (typeof arguments[0] === 'string' || Buffer.isBuffer(arguments[0])) {\r\n      data = arguments[0];\r\n    } else if (isObjLiteral(arguments[0])) {\r\n      options = arguments[0];\r\n    } else {\r\n      err = \"Invalid first argument: \" + (JSON.stringify(arguments[0]));\r\n    }\r\n    if (typeof arguments[1] === 'function') {\r\n      callback = arguments[1];\r\n    } else if (isObjLiteral(arguments[1])) {\r\n      if (options) {\r\n        err = 'Invalid arguments: got options twice as first and second arguments';\r\n      } else {\r\n        options = arguments[1];\r\n      }\r\n    } else {\r\n      err = \"Invalid first argument: \" + (JSON.stringify(arguments[1]));\r\n    }\r\n    if (err) {\r\n      if (!callback) {\r\n        throw Error(err);\r\n      } else {\r\n        return callback(Error(err));\r\n      }\r\n    }\r\n  } else if (arguments.length === 1) {\r\n    if (typeof arguments[0] === 'function') {\r\n      callback = arguments[0];\r\n    } else {\r\n      options = arguments[0];\r\n    }\r\n  }\r\n  if (options == null) {\r\n    options = {};\r\n  }\r\n  parser = new Parser(options);\r\n  if (data != null) {\r\n    process.nextTick(function() {\r\n      parser.write(data);\r\n      return parser.end();\r\n    });\r\n  }\r\n  if (callback) {\r\n    called = false;\r\n    chunks = options.objname ? {} : [];\r\n    parser.on('readable', function() {\r\n      var chunk, results;\r\n      results = [];\r\n      while (chunk = parser.read()) {\r\n        if (options.objname) {\r\n          results.push(chunks[chunk[0]] = chunk[1]);\r\n        } else {\r\n          results.push(chunks.push(chunk));\r\n        }\r\n      }\r\n      return results;\r\n    });\r\n    parser.on('error', function(err) {\r\n      called = true;\r\n      return callback(err);\r\n    });\r\n    parser.on('end', function() {\r\n      if (!called) {\r\n        return callback(null, chunks);\r\n      }\r\n    });\r\n  }\r\n  return parser;\r\n};\r\n\r\nParser = function(options) {\r\n  var base, base1, base10, base11, base12, base13, base14, base15, base16, base2, base3, base4, base5, base6, base7, base8, base9, k, v;\r\n  if (options == null) {\r\n    options = {};\r\n  }\r\n  this.options = {};\r\n  for (k in options) {\r\n    v = options[k];\r\n    this.options[k] = v;\r\n  }\r\n  this.options.objectMode = true;\r\n  stream.Transform.call(this, this.options);\r\n  if ((base = this.options).rowDelimiter == null) {\r\n    base.rowDelimiter = null;\r\n  }\r\n  if (typeof this.options.rowDelimiter === 'string') {\r\n    this.options.rowDelimiter = [this.options.rowDelimiter];\r\n  }\r\n  if ((base1 = this.options).delimiter == null) {\r\n    base1.delimiter = ',';\r\n  }\r\n  if (this.options.quote !== void 0 && !this.options.quote) {\r\n    this.options.quote = '';\r\n  }\r\n  if ((base2 = this.options).quote == null) {\r\n    base2.quote = '\"';\r\n  }\r\n  if ((base3 = this.options).escape == null) {\r\n    base3.escape = '\"';\r\n  }\r\n  if ((base4 = this.options).columns == null) {\r\n    base4.columns = null;\r\n  }\r\n  if ((base5 = this.options).comment == null) {\r\n    base5.comment = '';\r\n  }\r\n  if ((base6 = this.options).objname == null) {\r\n    base6.objname = false;\r\n  }\r\n  if ((base7 = this.options).trim == null) {\r\n    base7.trim = false;\r\n  }\r\n  if ((base8 = this.options).ltrim == null) {\r\n    base8.ltrim = false;\r\n  }\r\n  if ((base9 = this.options).rtrim == null) {\r\n    base9.rtrim = false;\r\n  }\r\n  if ((base10 = this.options).auto_parse == null) {\r\n    base10.auto_parse = false;\r\n  }\r\n  if ((base11 = this.options).auto_parse_date == null) {\r\n    base11.auto_parse_date = false;\r\n  }\r\n  if (this.options.auto_parse_date === true) {\r\n    this.options.auto_parse_date = function(value) {\r\n      var m;\r\n      m = Date.parse(value);\r\n      if (!isNaN(m)) {\r\n        value = new Date(m);\r\n      }\r\n      return value;\r\n    };\r\n  }\r\n  if ((base12 = this.options).relax == null) {\r\n    base12.relax = false;\r\n  }\r\n  if ((base13 = this.options).relax_column_count == null) {\r\n    base13.relax_column_count = false;\r\n  }\r\n  if ((base14 = this.options).skip_empty_lines == null) {\r\n    base14.skip_empty_lines = false;\r\n  }\r\n  if ((base15 = this.options).max_limit_on_data_read == null) {\r\n    base15.max_limit_on_data_read = 128000;\r\n  }\r\n  if ((base16 = this.options).skip_lines_with_empty_values == null) {\r\n    base16.skip_lines_with_empty_values = false;\r\n  }\r\n  this.lines = 0;\r\n  this.count = 0;\r\n  this.skipped_line_count = 0;\r\n  this.empty_line_count = 0;\r\n  this.is_int = /^(\\-|\\+)?([1-9]+[0-9]*)$/;\r\n  this.is_float = function(value) {\r\n    return (value - parseFloat(value) + 1) >= 0;\r\n  };\r\n  this._ = {\r\n    decoder: new StringDecoder(),\r\n    quoting: false,\r\n    commenting: false,\r\n    field: null,\r\n    nextChar: null,\r\n    closingQuote: 0,\r\n    line: [],\r\n    chunks: [],\r\n    rawBuf: '',\r\n    buf: '',\r\n    rowDelimiterLength: this.options.rowDelimiter ? Math.max.apply(Math, this.options.rowDelimiter.map(function(v) {\r\n      return v.length;\r\n    })) : void 0\r\n  };\r\n  return this;\r\n};\r\n\r\nutil.inherits(Parser, stream.Transform);\r\n\r\nmodule.exports.Parser = Parser;\r\n\r\nParser.prototype._transform = function(chunk, encoding, callback) {\r\n  var err;\r\n  if (chunk instanceof Buffer) {\r\n    chunk = this._.decoder.write(chunk);\r\n  }\r\n  err = this.__write(chunk, false);\r\n  if (err) {\r\n    return this.emit('error', err);\r\n  }\r\n  return callback();\r\n};\r\n\r\nParser.prototype._flush = function(callback) {\r\n  var err;\r\n  err = this.__write(this._.decoder.end(), true);\r\n  if (err) {\r\n    return this.emit('error', err);\r\n  }\r\n  if (this._.quoting) {\r\n    this.emit('error', new Error(\"Quoted field not terminated at line \" + (this.lines + 1)));\r\n    return;\r\n  }\r\n  if (this._.line.length > 0) {\r\n    err = this.__push(this._.line);\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n  }\r\n  return callback();\r\n};\r\n\r\nParser.prototype.__push = function(line) {\r\n  var call_column_udf, columns, err, field, i, j, len, lineAsColumns, rawBuf, ref, row;\r\n  if (this.options.skip_lines_with_empty_values && line.join('').trim() === '') {\r\n    return;\r\n  }\r\n  row = null;\r\n  if (this.options.columns === true) {\r\n    this.options.columns = line;\r\n    rawBuf = '';\r\n    return;\r\n  } else if (typeof this.options.columns === 'function') {\r\n    call_column_udf = function(fn, line) {\r\n      var columns, err;\r\n      try {\r\n        columns = fn.call(null, line);\r\n        return [null, columns];\r\n      } catch (error) {\r\n        err = error;\r\n        return [err];\r\n      }\r\n    };\r\n    ref = call_column_udf(this.options.columns, line), err = ref[0], columns = ref[1];\r\n    if (err) {\r\n      return err;\r\n    }\r\n    this.options.columns = columns;\r\n    rawBuf = '';\r\n    return;\r\n  }\r\n  if (!this._.line_length && line.length > 0) {\r\n    this._.line_length = this.options.columns ? this.options.columns.length : line.length;\r\n  }\r\n  if (line.length === 1 && line[0] === '') {\r\n    this.empty_line_count++;\r\n  } else if (line.length !== this._.line_length) {\r\n    if (this.options.relax_column_count) {\r\n      this.count++;\r\n      this.skipped_line_count++;\r\n    } else if (this.options.columns != null) {\r\n      return Error(\"Number of columns on line \" + this.lines + \" does not match header\");\r\n    } else {\r\n      return Error(\"Number of columns is inconsistent on line \" + this.lines);\r\n    }\r\n  } else {\r\n    this.count++;\r\n  }\r\n  if (this.options.columns != null) {\r\n    lineAsColumns = {};\r\n    for (i = j = 0, len = line.length; j < len; i = ++j) {\r\n      field = line[i];\r\n      if (this.options.columns[i] === false) {\r\n        continue;\r\n      }\r\n      lineAsColumns[this.options.columns[i]] = field;\r\n    }\r\n    if (this.options.objname) {\r\n      row = [lineAsColumns[this.options.objname], lineAsColumns];\r\n    } else {\r\n      row = lineAsColumns;\r\n    }\r\n  } else {\r\n    row = line;\r\n  }\r\n  if (this.count < this.options.from) {\r\n    return;\r\n  }\r\n  if (this.count > this.options.to) {\r\n    return;\r\n  }\r\n  if (this.options.raw) {\r\n    this.push({\r\n      raw: this._.rawBuf,\r\n      row: row\r\n    });\r\n    this._.rawBuf = '';\r\n  } else {\r\n    this.push(row);\r\n  }\r\n  return null;\r\n};\r\n\r\nParser.prototype.__write = function(chars, end) {\r\n  var areNextCharsDelimiter, areNextCharsRowDelimiters, auto_parse, char, err, escapeIsQuote, i, isDelimiter, isEscape, isNextCharAComment, isQuote, isRowDelimiter, isRowDelimiterLength, is_float, is_int, l, ltrim, nextCharPos, ref, ref1, ref2, ref3, ref4, ref5, remainingBuffer, rowDelimiter, rtrim, wasCommenting;\r\n  is_int = (function(_this) {\r\n    return function(value) {\r\n      if (typeof _this.is_int === 'function') {\r\n        return _this.is_int(value);\r\n      } else {\r\n        return _this.is_int.test(value);\r\n      }\r\n    };\r\n  })(this);\r\n  is_float = (function(_this) {\r\n    return function(value) {\r\n      if (typeof _this.is_float === 'function') {\r\n        return _this.is_float(value);\r\n      } else {\r\n        return _this.is_float.test(value);\r\n      }\r\n    };\r\n  })(this);\r\n  auto_parse = (function(_this) {\r\n    return function(value) {\r\n      if (!_this.options.auto_parse) {\r\n        return value;\r\n      }\r\n      if (typeof _this.options.auto_parse === 'function') {\r\n        return _this.options.auto_parse(value);\r\n      }\r\n      if (is_int(value)) {\r\n        value = parseInt(value);\r\n      } else if (is_float(value)) {\r\n        value = parseFloat(value);\r\n      } else if (_this.options.auto_parse_date) {\r\n        value = _this.options.auto_parse_date(value);\r\n      }\r\n      return value;\r\n    };\r\n  })(this);\r\n  ltrim = this.options.trim || this.options.ltrim;\r\n  rtrim = this.options.trim || this.options.rtrim;\r\n  chars = this._.buf + chars;\r\n  l = chars.length;\r\n  i = 0;\r\n  if (this.lines === 0 && 0xFEFF === chars.charCodeAt(0)) {\r\n    i++;\r\n  }\r\n  while (i < l) {\r\n    if (!end) {\r\n      remainingBuffer = chars.substr(i, l - i);\r\n      if ((!this.options.rowDelimiter && i + 3 > l) || (!this._.commenting && l - i < this.options.comment.length && this.options.comment.substr(0, l - i) === remainingBuffer) || (this.options.rowDelimiter && l - i < this._.rowDelimiterLength && this.options.rowDelimiter.some(function(rd) {\r\n        return rd.substr(0, l - i) === remainingBuffer;\r\n      })) || (this.options.rowDelimiter && this._.quoting && l - i < (this.options.quote.length + this._.rowDelimiterLength) && this.options.rowDelimiter.some((function(_this) {\r\n        return function(rd) {\r\n          return (_this.options.quote + rd).substr(0, l - i) === remainingBuffer;\r\n        };\r\n      })(this))) || (l - i <= this.options.delimiter.length && this.options.delimiter.substr(0, l - i) === remainingBuffer) || (l - i <= this.options.escape.length && this.options.escape.substr(0, l - i) === remainingBuffer)) {\r\n        break;\r\n      }\r\n    }\r\n    char = this._.nextChar ? this._.nextChar : chars.charAt(i);\r\n    this._.nextChar = l > i + 1 ? chars.charAt(i + 1) : '';\r\n    if (this.options.raw) {\r\n      this._.rawBuf += char;\r\n    }\r\n    if (this.options.rowDelimiter == null) {\r\n      nextCharPos = i;\r\n      rowDelimiter = null;\r\n      if (!this._.quoting && (char === '\\n' || char === '\\r')) {\r\n        rowDelimiter = char;\r\n        nextCharPos += 1;\r\n      } else if (this._.quoting && char === this.options.quote && ((ref = this._.nextChar) === '\\n' || ref === '\\r')) {\r\n        rowDelimiter = this._.nextChar;\r\n        nextCharPos += 2;\r\n        if (this.raw) {\r\n          rawBuf += this._.nextChar;\r\n        }\r\n      }\r\n      if (rowDelimiter) {\r\n        if (rowDelimiter === '\\r' && chars.charAt(nextCharPos) === '\\n') {\r\n          rowDelimiter += '\\n';\r\n        }\r\n        this.options.rowDelimiter = [rowDelimiter];\r\n        this._.rowDelimiterLength = rowDelimiter.length;\r\n      }\r\n    }\r\n    if (!this._.commenting && char === this.options.escape) {\r\n      escapeIsQuote = this.options.escape === this.options.quote;\r\n      isEscape = this._.nextChar === this.options.escape;\r\n      isQuote = this._.nextChar === this.options.quote;\r\n      if (!(escapeIsQuote && (this._.field == null) && !this._.quoting) && (isEscape || isQuote)) {\r\n        i++;\r\n        char = this._.nextChar;\r\n        this._.nextChar = chars.charAt(i + 1);\r\n        if (this._.field == null) {\r\n          this._.field = '';\r\n        }\r\n        this._.field += char;\r\n        if (this.options.raw) {\r\n          this._.rawBuf += char;\r\n        }\r\n        i++;\r\n        continue;\r\n      }\r\n    }\r\n    if (!this._.commenting && char === this.options.quote) {\r\n      if (this._.quoting) {\r\n        areNextCharsRowDelimiters = this.options.rowDelimiter && this.options.rowDelimiter.some(function(rd) {\r\n          return chars.substr(i + 1, rd.length) === rd;\r\n        });\r\n        areNextCharsDelimiter = chars.substr(i + 1, this.options.delimiter.length) === this.options.delimiter;\r\n        isNextCharAComment = this._.nextChar === this.options.comment;\r\n        if (this._.nextChar && !areNextCharsRowDelimiters && !areNextCharsDelimiter && !isNextCharAComment) {\r\n          if (this.options.relax) {\r\n            this._.quoting = false;\r\n            if (this._.field) {\r\n              this._.field = \"\" + this.options.quote + this._.field;\r\n            }\r\n          } else {\r\n            return Error(\"Invalid closing quote at line \" + (this.lines + 1) + \"; found \" + (JSON.stringify(this._.nextChar)) + \" instead of delimiter \" + (JSON.stringify(this.options.delimiter)));\r\n          }\r\n        } else {\r\n          this._.quoting = false;\r\n          this._.closingQuote = this.options.quote.length;\r\n          i++;\r\n          if (end && i === l) {\r\n            this._.line.push(auto_parse(this._.field || ''));\r\n            this._.field = null;\r\n          }\r\n          continue;\r\n        }\r\n      } else if (!this._.field) {\r\n        this._.quoting = true;\r\n        i++;\r\n        continue;\r\n      } else if ((this._.field != null) && !this.options.relax) {\r\n        return Error(\"Invalid opening quote at line \" + (this.lines + 1));\r\n      }\r\n    }\r\n    isRowDelimiter = this.options.rowDelimiter && this.options.rowDelimiter.some(function(rd) {\r\n      return chars.substr(i, rd.length) === rd;\r\n    });\r\n    if (isRowDelimiter || (end && i === l - 1)) {\r\n      this.lines++;\r\n    }\r\n    wasCommenting = false;\r\n    if (!this._.commenting && !this._.quoting && this.options.comment && chars.substr(i, this.options.comment.length) === this.options.comment) {\r\n      this._.commenting = true;\r\n    } else if (this._.commenting && isRowDelimiter) {\r\n      wasCommenting = true;\r\n      this._.commenting = false;\r\n    }\r\n    isDelimiter = chars.substr(i, this.options.delimiter.length) === this.options.delimiter;\r\n    if (!this._.commenting && !this._.quoting && (isDelimiter || isRowDelimiter)) {\r\n      if (isRowDelimiter) {\r\n        isRowDelimiterLength = this.options.rowDelimiter.filter(function(rd) {\r\n          return chars.substr(i, rd.length) === rd;\r\n        })[0].length;\r\n      }\r\n      if (isRowDelimiter && this._.line.length === 0 && (this._.field == null)) {\r\n        if (wasCommenting || this.options.skip_empty_lines) {\r\n          i += isRowDelimiterLength;\r\n          this._.nextChar = chars.charAt(i);\r\n          continue;\r\n        }\r\n      }\r\n      if (rtrim) {\r\n        if (!this._.closingQuote) {\r\n          this._.field = (ref1 = this._.field) != null ? ref1.trimRight() : void 0;\r\n        }\r\n      }\r\n      this._.line.push(auto_parse(this._.field || ''));\r\n      this._.closingQuote = 0;\r\n      this._.field = null;\r\n      if (isDelimiter) {\r\n        i += this.options.delimiter.length;\r\n        this._.nextChar = chars.charAt(i);\r\n        if (end && !this._.nextChar) {\r\n          isRowDelimiter = true;\r\n          this._.line.push('');\r\n        }\r\n      }\r\n      if (isRowDelimiter) {\r\n        err = this.__push(this._.line);\r\n        if (err) {\r\n          return err;\r\n        }\r\n        this._.line = [];\r\n        i += isRowDelimiterLength;\r\n        this._.nextChar = chars.charAt(i);\r\n        continue;\r\n      }\r\n    } else if (!this._.commenting && !this._.quoting && (char === ' ' || char === '\\t')) {\r\n      if (this._.field == null) {\r\n        this._.field = '';\r\n      }\r\n      if (!(ltrim && !this._.field)) {\r\n        this._.field += char;\r\n      }\r\n      i++;\r\n    } else if (!this._.commenting) {\r\n      if (this._.field == null) {\r\n        this._.field = '';\r\n      }\r\n      this._.field += char;\r\n      i++;\r\n    } else {\r\n      i++;\r\n    }\r\n    if (!this._.commenting && ((ref2 = this._.field) != null ? ref2.length : void 0) > this.options.max_limit_on_data_read) {\r\n      return Error(\"Field exceeds max_limit_on_data_read setting (\" + this.options.max_limit_on_data_read + \") \" + (JSON.stringify(this.options.delimiter)));\r\n    }\r\n    if (!this._.commenting && ((ref3 = this._.line) != null ? ref3.length : void 0) > this.options.max_limit_on_data_read) {\r\n      return Error(\"Row delimiter not found in the file \" + (JSON.stringify(this.options.rowDelimiter)));\r\n    }\r\n  }\r\n  if (end) {\r\n    if (this._.field != null) {\r\n      if (rtrim) {\r\n        if (!this._.closingQuote) {\r\n          this._.field = (ref4 = this._.field) != null ? ref4.trimRight() : void 0;\r\n        }\r\n      }\r\n      this._.line.push(auto_parse(this._.field || ''));\r\n      this._.field = null;\r\n    }\r\n    if (((ref5 = this._.field) != null ? ref5.length : void 0) > this.options.max_limit_on_data_read) {\r\n      return Error(\"Delimiter not found in the file \" + (JSON.stringify(this.options.delimiter)));\r\n    }\r\n    if (l === 0) {\r\n      this.lines++;\r\n    }\r\n    if (this._.line.length > this.options.max_limit_on_data_read) {\r\n      return Error(\"Row delimiter not found in the file \" + (JSON.stringify(this.options.rowDelimiter)));\r\n    }\r\n  }\r\n  this._.buf = chars.substr(i);\r\n  return null;\r\n};\r\n\r\nisObjLiteral = function(_obj) {\r\n  var _test;\r\n  _test = _obj;\r\n  if (typeof _obj !== 'object' || _obj === null || Array.isArray(_obj)) {\r\n    return false;\r\n  } else {\r\n    return (function() {\r\n      while (!false) {\r\n        if (Object.getPrototypeOf(_test = Object.getPrototypeOf(_test)) === null) {\r\n          break;\r\n        }\r\n      }\r\n      return Object.getPrototypeOf(_obj === _test);\r\n    })();\r\n  }\r\n};\r\n\r\n}).call(this,require('_process'),require(\"buffer\").Buffer)\r\n\r\n},{\"_process\":91,\"buffer\":41,\"stream\":112,\"string_decoder\":113,\"util\":117}],44:[function(require,module,exports){\r\n(function (Buffer){\r\n// Generated by CoffeeScript 1.12.7\r\nvar StringDecoder, parse;\r\n\r\nStringDecoder = require('string_decoder').StringDecoder;\r\n\r\nparse = require('./index');\r\n\r\nmodule.exports = function(data, options) {\r\n  var decoder, err, parser, records;\r\n  if (options == null) {\r\n    options = {};\r\n  }\r\n  records = options.objname ? {} : [];\r\n  if (data instanceof Buffer) {\r\n    decoder = new StringDecoder();\r\n    data = decoder.write(data);\r\n  }\r\n  parser = new parse.Parser(options);\r\n  parser.push = function(record) {\r\n    if (options.objname) {\r\n      return records[record[0]] = record[1];\r\n    } else {\r\n      return records.push(record);\r\n    }\r\n  };\r\n  err = parser.__write(data, false);\r\n  if (err) {\r\n    throw err;\r\n  }\r\n  if (data instanceof Buffer) {\r\n    err = parser.__write(data.end(), true);\r\n    if (err) {\r\n      throw err;\r\n    }\r\n  }\r\n  parser._flush((function() {}));\r\n  return records;\r\n};\r\n\r\n}).call(this,require(\"buffer\").Buffer)\r\n\r\n},{\"./index\":43,\"buffer\":41,\"string_decoder\":113}],45:[function(require,module,exports){\r\n(function (process){\r\n// Generated by CoffeeScript 1.12.7\r\nvar Stringifier, get, stream, util;\r\n\r\nstream = require('stream');\r\n\r\nutil = require('util');\r\n\r\nget = require('lodash.get');\r\n\r\nmodule.exports = function() {\r\n  var callback, chunks, data, options, stringifier;\r\n  if (arguments.length === 3) {\r\n    data = arguments[0];\r\n    options = arguments[1];\r\n    callback = arguments[2];\r\n  } else if (arguments.length === 2) {\r\n    if (Array.isArray(arguments[0])) {\r\n      data = arguments[0];\r\n    } else {\r\n      options = arguments[0];\r\n    }\r\n    if (typeof arguments[1] === 'function') {\r\n      callback = arguments[1];\r\n    } else {\r\n      options = arguments[1];\r\n    }\r\n  } else if (arguments.length === 1) {\r\n    if (typeof arguments[0] === 'function') {\r\n      callback = arguments[0];\r\n    } else if (Array.isArray(arguments[0])) {\r\n      data = arguments[0];\r\n    } else {\r\n      options = arguments[0];\r\n    }\r\n  }\r\n  if (options == null) {\r\n    options = {};\r\n  }\r\n  stringifier = new Stringifier(options);\r\n  if (data) {\r\n    process.nextTick(function() {\r\n      var d, j, len;\r\n      for (j = 0, len = data.length; j < len; j++) {\r\n        d = data[j];\r\n        stringifier.write(d);\r\n      }\r\n      return stringifier.end();\r\n    });\r\n  }\r\n  if (callback) {\r\n    chunks = [];\r\n    stringifier.on('readable', function() {\r\n      var chunk, results;\r\n      results = [];\r\n      while (chunk = stringifier.read()) {\r\n        results.push(chunks.push(chunk));\r\n      }\r\n      return results;\r\n    });\r\n    stringifier.on('error', function(err) {\r\n      return callback(err);\r\n    });\r\n    stringifier.on('end', function() {\r\n      return callback(null, chunks.join(''));\r\n    });\r\n  }\r\n  return stringifier;\r\n};\r\n\r\nStringifier = function(opts) {\r\n  var base, base1, base10, base11, base12, base13, base2, base3, base4, base5, base6, base7, base8, base9, k, options, v;\r\n  if (opts == null) {\r\n    opts = {};\r\n  }\r\n  options = {};\r\n  for (k in opts) {\r\n    v = opts[k];\r\n    options[k] = v;\r\n  }\r\n  stream.Transform.call(this, options);\r\n  this.options = options;\r\n  if ((base = this.options).delimiter == null) {\r\n    base.delimiter = ',';\r\n  }\r\n  if ((base1 = this.options).quote == null) {\r\n    base1.quote = '\"';\r\n  }\r\n  if ((base2 = this.options).quoted == null) {\r\n    base2.quoted = false;\r\n  }\r\n  if ((base3 = this.options).quotedEmpty == null) {\r\n    base3.quotedEmpty = void 0;\r\n  }\r\n  if ((base4 = this.options).quotedString == null) {\r\n    base4.quotedString = false;\r\n  }\r\n  if ((base5 = this.options).eof == null) {\r\n    base5.eof = true;\r\n  }\r\n  if ((base6 = this.options).escape == null) {\r\n    base6.escape = '\"';\r\n  }\r\n  if ((base7 = this.options).columns == null) {\r\n    base7.columns = null;\r\n  }\r\n  if ((base8 = this.options).header == null) {\r\n    base8.header = false;\r\n  }\r\n  if ((base9 = this.options).formatters == null) {\r\n    base9.formatters = {};\r\n  }\r\n  if ((base10 = this.options.formatters).date == null) {\r\n    base10.date = function(value) {\r\n      return '' + value.getTime();\r\n    };\r\n  }\r\n  if ((base11 = this.options.formatters).bool == null) {\r\n    base11.bool = function(value) {\r\n      if (value) {\r\n        return '1';\r\n      } else {\r\n        return '';\r\n      }\r\n    };\r\n  }\r\n  if ((base12 = this.options.formatters).object == null) {\r\n    base12.object = function(value) {\r\n      return JSON.stringify(value);\r\n    };\r\n  }\r\n  if ((base13 = this.options).rowDelimiter == null) {\r\n    base13.rowDelimiter = '\\n';\r\n  }\r\n  if (this.countWriten == null) {\r\n    this.countWriten = 0;\r\n  }\r\n  switch (this.options.rowDelimiter) {\r\n    case 'auto':\r\n      this.options.rowDelimiter = null;\r\n      break;\r\n    case 'unix':\r\n      this.options.rowDelimiter = \"\\n\";\r\n      break;\r\n    case 'mac':\r\n      this.options.rowDelimiter = \"\\r\";\r\n      break;\r\n    case 'windows':\r\n      this.options.rowDelimiter = \"\\r\\n\";\r\n      break;\r\n    case 'unicode':\r\n      this.options.rowDelimiter = \"\\u2028\";\r\n  }\r\n  return this;\r\n};\r\n\r\nutil.inherits(Stringifier, stream.Transform);\r\n\r\nmodule.exports.Stringifier = Stringifier;\r\n\r\nStringifier.prototype.headers = function() {\r\n  var k, label, labels;\r\n  if (!this.options.header) {\r\n    return;\r\n  }\r\n  if (!this.options.columns) {\r\n    return;\r\n  }\r\n  labels = this.options.columns;\r\n  if (typeof labels === 'object') {\r\n    labels = (function() {\r\n      var results;\r\n      results = [];\r\n      for (k in labels) {\r\n        label = labels[k];\r\n        results.push(label);\r\n      }\r\n      return results;\r\n    })();\r\n  }\r\n  if (this.options.eof) {\r\n    labels = this.stringify(labels) + this.options.rowDelimiter;\r\n  } else {\r\n    labels = this.stringify(labels);\r\n  }\r\n  return stream.Transform.prototype.write.call(this, labels);\r\n};\r\n\r\nStringifier.prototype.end = function(chunk, encoding, callback) {\r\n  if (this.countWriten === 0) {\r\n    this.headers();\r\n  }\r\n  return stream.Transform.prototype.end.apply(this, arguments);\r\n};\r\n\r\nStringifier.prototype.write = function(chunk, encoding, callback) {\r\n  var base, e, preserve;\r\n  if (chunk == null) {\r\n    return;\r\n  }\r\n  preserve = typeof chunk !== 'object';\r\n  if (!preserve) {\r\n    if (this.countWriten === 0 && !Array.isArray(chunk)) {\r\n      if ((base = this.options).columns == null) {\r\n        base.columns = Object.keys(chunk);\r\n      }\r\n    }\r\n    try {\r\n      this.emit('record', chunk, this.countWriten);\r\n    } catch (error) {\r\n      e = error;\r\n      return this.emit('error', e);\r\n    }\r\n    if (this.options.eof) {\r\n      chunk = this.stringify(chunk) + this.options.rowDelimiter;\r\n    } else {\r\n      chunk = this.stringify(chunk);\r\n      if (this.options.header || this.countWriten) {\r\n        chunk = this.options.rowDelimiter + chunk;\r\n      }\r\n    }\r\n  }\r\n  if (typeof chunk === 'number') {\r\n    chunk = \"\" + chunk;\r\n  }\r\n  if (this.countWriten === 0) {\r\n    this.headers();\r\n  }\r\n  if (!preserve) {\r\n    this.countWriten++;\r\n  }\r\n  return stream.Transform.prototype.write.call(this, chunk, encoding, callback);\r\n};\r\n\r\nStringifier.prototype._transform = function(chunk, encoding, callback) {\r\n  this.push(chunk);\r\n  return callback();\r\n};\r\n\r\nStringifier.prototype.stringify = function(line) {\r\n  var _line, column, columns, containsEscape, containsLinebreak, containsQuote, containsdelimiter, delimiter, escape, field, i, j, l, newLine, quote, ref, ref1, regexp, shouldQuote, value;\r\n  if (typeof line !== 'object') {\r\n    return line;\r\n  }\r\n  columns = this.options.columns;\r\n  if (typeof columns === 'object' && columns !== null && !Array.isArray(columns)) {\r\n    columns = Object.keys(columns);\r\n  }\r\n  delimiter = this.options.delimiter;\r\n  quote = this.options.quote;\r\n  escape = this.options.escape;\r\n  if (!Array.isArray(line)) {\r\n    _line = [];\r\n    if (columns) {\r\n      for (i = j = 0, ref = columns.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\r\n        column = columns[i];\r\n        value = get(line, column);\r\n        _line[i] = (typeof value === 'undefined' || value === null) ? '' : value;\r\n      }\r\n    } else {\r\n      for (column in line) {\r\n        _line.push(line[column]);\r\n      }\r\n    }\r\n    line = _line;\r\n    _line = null;\r\n  } else if (columns) {\r\n    line.splice(columns.length);\r\n  }\r\n  if (Array.isArray(line)) {\r\n    newLine = '';\r\n    for (i = l = 0, ref1 = line.length; 0 <= ref1 ? l < ref1 : l > ref1; i = 0 <= ref1 ? ++l : --l) {\r\n      field = line[i];\r\n      if (typeof field === 'string') {\r\n\r\n      } else if (typeof field === 'number') {\r\n        field = '' + field;\r\n      } else if (typeof field === 'boolean') {\r\n        field = this.options.formatters.bool(field);\r\n      } else if (field instanceof Date) {\r\n        field = this.options.formatters.date(field);\r\n      } else if (typeof field === 'object' && field !== null) {\r\n        field = this.options.formatters.object(field);\r\n      }\r\n      if (field) {\r\n        containsdelimiter = field.indexOf(delimiter) >= 0;\r\n        containsQuote = field.indexOf(quote) >= 0;\r\n        containsEscape = field.indexOf(escape) >= 0 && (escape !== quote);\r\n        containsLinebreak = field.indexOf('\\r') >= 0 || field.indexOf('\\n') >= 0;\r\n        shouldQuote = containsQuote || containsdelimiter || containsLinebreak || this.options.quoted || (this.options.quotedString && typeof line[i] === 'string');\r\n        if (shouldQuote && containsEscape) {\r\n          regexp = escape === '\\\\' ? new RegExp(escape + escape, 'g') : new RegExp(escape, 'g');\r\n          field = field.replace(regexp, escape + escape);\r\n        }\r\n        if (containsQuote) {\r\n          regexp = new RegExp(quote, 'g');\r\n          field = field.replace(regexp, escape + quote);\r\n        }\r\n        if (shouldQuote) {\r\n          field = quote + field + quote;\r\n        }\r\n        newLine += field;\r\n      } else if (this.options.quotedEmpty || ((this.options.quotedEmpty == null) && line[i] === '' && this.options.quotedString)) {\r\n        newLine += quote + quote;\r\n      }\r\n      if (i !== line.length - 1) {\r\n        newLine += delimiter;\r\n      }\r\n    }\r\n    line = newLine;\r\n  }\r\n  return line;\r\n};\r\n\r\n}).call(this,require('_process'))\r\n\r\n},{\"_process\":91,\"lodash.get\":87,\"stream\":112,\"util\":117}],46:[function(require,module,exports){\r\n(function (Buffer){\r\n// Generated by CoffeeScript 1.12.7\r\nvar StringDecoder, stringify;\r\n\r\nStringDecoder = require('string_decoder').StringDecoder;\r\n\r\nstringify = require('./index');\r\n\r\nmodule.exports = function(records, options) {\r\n  var data, decoder, i, len, record, stringifier;\r\n  if (options == null) {\r\n    options = {};\r\n  }\r\n  data = [];\r\n  if (records instanceof Buffer) {\r\n    decoder = new StringDecoder();\r\n    records = decoder.write(records);\r\n  }\r\n  stringifier = new stringify.Stringifier(options);\r\n  stringifier.push = function(record) {\r\n    if (record) {\r\n      return data.push(record.toString());\r\n    }\r\n  };\r\n  for (i = 0, len = records.length; i < len; i++) {\r\n    record = records[i];\r\n    stringifier.write(record);\r\n  }\r\n  stringifier.end();\r\n  return data.join('');\r\n};\r\n\r\n}).call(this,require(\"buffer\").Buffer)\r\n\r\n},{\"./index\":45,\"buffer\":41,\"string_decoder\":113}],47:[function(require,module,exports){\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\nvar objectCreate = Object.create || objectCreatePolyfill\r\nvar objectKeys = Object.keys || objectKeysPolyfill\r\nvar bind = Function.prototype.bind || functionBindPolyfill\r\n\r\nfunction EventEmitter() {\r\n  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\r\n    this._events = objectCreate(null);\r\n    this._eventsCount = 0;\r\n  }\r\n\r\n  this._maxListeners = this._maxListeners || undefined;\r\n}\r\nmodule.exports = EventEmitter;\r\n\r\n// Backwards-compat with node 0.10.x\r\nEventEmitter.EventEmitter = EventEmitter;\r\n\r\nEventEmitter.prototype._events = undefined;\r\nEventEmitter.prototype._maxListeners = undefined;\r\n\r\n// By default EventEmitters will print a warning if more than 10 listeners are\r\n// added to it. This is a useful default which helps finding memory leaks.\r\nvar defaultMaxListeners = 10;\r\n\r\nvar hasDefineProperty;\r\ntry {\r\n  var o = {};\r\n  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\r\n  hasDefineProperty = o.x === 0;\r\n} catch (err) { hasDefineProperty = false }\r\nif (hasDefineProperty) {\r\n  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\r\n    enumerable: true,\r\n    get: function() {\r\n      return defaultMaxListeners;\r\n    },\r\n    set: function(arg) {\r\n      // check whether the input is a positive number (whose value is zero or\r\n      // greater and not a NaN).\r\n      if (typeof arg !== 'number' || arg < 0 || arg !== arg)\r\n        throw new TypeError('\"defaultMaxListeners\" must be a positive number');\r\n      defaultMaxListeners = arg;\r\n    }\r\n  });\r\n} else {\r\n  EventEmitter.defaultMaxListeners = defaultMaxListeners;\r\n}\r\n\r\n// Obviously not all Emitters should be limited to 10. This function allows\r\n// that to be increased. Set to zero for unlimited.\r\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\r\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\r\n    throw new TypeError('\"n\" argument must be a positive number');\r\n  this._maxListeners = n;\r\n  return this;\r\n};\r\n\r\nfunction $getMaxListeners(that) {\r\n  if (that._maxListeners === undefined)\r\n    return EventEmitter.defaultMaxListeners;\r\n  return that._maxListeners;\r\n}\r\n\r\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\r\n  return $getMaxListeners(this);\r\n};\r\n\r\n// These standalone emit* functions are used to optimize calling of event\r\n// handlers for fast cases because emit() itself often has a variable number of\r\n// arguments and can be deoptimized because of that. These functions always have\r\n// the same number of arguments and thus do not get deoptimized, so the code\r\n// inside them can execute faster.\r\nfunction emitNone(handler, isFn, self) {\r\n  if (isFn)\r\n    handler.call(self);\r\n  else {\r\n    var len = handler.length;\r\n    var listeners = arrayClone(handler, len);\r\n    for (var i = 0; i < len; ++i)\r\n      listeners[i].call(self);\r\n  }\r\n}\r\nfunction emitOne(handler, isFn, self, arg1) {\r\n  if (isFn)\r\n    handler.call(self, arg1);\r\n  else {\r\n    var len = handler.length;\r\n    var listeners = arrayClone(handler, len);\r\n    for (var i = 0; i < len; ++i)\r\n      listeners[i].call(self, arg1);\r\n  }\r\n}\r\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\r\n  if (isFn)\r\n    handler.call(self, arg1, arg2);\r\n  else {\r\n    var len = handler.length;\r\n    var listeners = arrayClone(handler, len);\r\n    for (var i = 0; i < len; ++i)\r\n      listeners[i].call(self, arg1, arg2);\r\n  }\r\n}\r\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\r\n  if (isFn)\r\n    handler.call(self, arg1, arg2, arg3);\r\n  else {\r\n    var len = handler.length;\r\n    var listeners = arrayClone(handler, len);\r\n    for (var i = 0; i < len; ++i)\r\n      listeners[i].call(self, arg1, arg2, arg3);\r\n  }\r\n}\r\n\r\nfunction emitMany(handler, isFn, self, args) {\r\n  if (isFn)\r\n    handler.apply(self, args);\r\n  else {\r\n    var len = handler.length;\r\n    var listeners = arrayClone(handler, len);\r\n    for (var i = 0; i < len; ++i)\r\n      listeners[i].apply(self, args);\r\n  }\r\n}\r\n\r\nEventEmitter.prototype.emit = function emit(type) {\r\n  var er, handler, len, args, i, events;\r\n  var doError = (type === 'error');\r\n\r\n  events = this._events;\r\n  if (events)\r\n    doError = (doError && events.error == null);\r\n  else if (!doError)\r\n    return false;\r\n\r\n  // If there is no 'error' event listener then throw.\r\n  if (doError) {\r\n    if (arguments.length > 1)\r\n      er = arguments[1];\r\n    if (er instanceof Error) {\r\n      throw er; // Unhandled 'error' event\r\n    } else {\r\n      // At least give some kind of context to the user\r\n      var err = new Error('Unhandled \"error\" event. (' + er + ')');\r\n      err.context = er;\r\n      throw err;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  handler = events[type];\r\n\r\n  if (!handler)\r\n    return false;\r\n\r\n  var isFn = typeof handler === 'function';\r\n  len = arguments.length;\r\n  switch (len) {\r\n      // fast cases\r\n    case 1:\r\n      emitNone(handler, isFn, this);\r\n      break;\r\n    case 2:\r\n      emitOne(handler, isFn, this, arguments[1]);\r\n      break;\r\n    case 3:\r\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\r\n      break;\r\n    case 4:\r\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\r\n      break;\r\n      // slower\r\n    default:\r\n      args = new Array(len - 1);\r\n      for (i = 1; i < len; i++)\r\n        args[i - 1] = arguments[i];\r\n      emitMany(handler, isFn, this, args);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction _addListener(target, type, listener, prepend) {\r\n  var m;\r\n  var events;\r\n  var existing;\r\n\r\n  if (typeof listener !== 'function')\r\n    throw new TypeError('\"listener\" argument must be a function');\r\n\r\n  events = target._events;\r\n  if (!events) {\r\n    events = target._events = objectCreate(null);\r\n    target._eventsCount = 0;\r\n  } else {\r\n    // To avoid recursion in the case that type === \"newListener\"! Before\r\n    // adding it to the listeners, first emit \"newListener\".\r\n    if (events.newListener) {\r\n      target.emit('newListener', type,\r\n          listener.listener ? listener.listener : listener);\r\n\r\n      // Re-assign `events` because a newListener handler could have caused the\r\n      // this._events to be assigned to a new object\r\n      events = target._events;\r\n    }\r\n    existing = events[type];\r\n  }\r\n\r\n  if (!existing) {\r\n    // Optimize the case of one listener. Don't need the extra array object.\r\n    existing = events[type] = listener;\r\n    ++target._eventsCount;\r\n  } else {\r\n    if (typeof existing === 'function') {\r\n      // Adding the second element, need to change to array.\r\n      existing = events[type] =\r\n          prepend ? [listener, existing] : [existing, listener];\r\n    } else {\r\n      // If we've already got an array, just append.\r\n      if (prepend) {\r\n        existing.unshift(listener);\r\n      } else {\r\n        existing.push(listener);\r\n      }\r\n    }\r\n\r\n    // Check for listener leak\r\n    if (!existing.warned) {\r\n      m = $getMaxListeners(target);\r\n      if (m && m > 0 && existing.length > m) {\r\n        existing.warned = true;\r\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\r\n            existing.length + ' \"' + String(type) + '\" listeners ' +\r\n            'added. Use emitter.setMaxListeners() to ' +\r\n            'increase limit.');\r\n        w.name = 'MaxListenersExceededWarning';\r\n        w.emitter = target;\r\n        w.type = type;\r\n        w.count = existing.length;\r\n        if (typeof console === 'object' && console.warn) {\r\n          console.warn('%s: %s', w.name, w.message);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nEventEmitter.prototype.addListener = function addListener(type, listener) {\r\n  return _addListener(this, type, listener, false);\r\n};\r\n\r\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\r\n\r\nEventEmitter.prototype.prependListener =\r\n    function prependListener(type, listener) {\r\n      return _addListener(this, type, listener, true);\r\n    };\r\n\r\nfunction onceWrapper() {\r\n  if (!this.fired) {\r\n    this.target.removeListener(this.type, this.wrapFn);\r\n    this.fired = true;\r\n    switch (arguments.length) {\r\n      case 0:\r\n        return this.listener.call(this.target);\r\n      case 1:\r\n        return this.listener.call(this.target, arguments[0]);\r\n      case 2:\r\n        return this.listener.call(this.target, arguments[0], arguments[1]);\r\n      case 3:\r\n        return this.listener.call(this.target, arguments[0], arguments[1],\r\n            arguments[2]);\r\n      default:\r\n        var args = new Array(arguments.length);\r\n        for (var i = 0; i < args.length; ++i)\r\n          args[i] = arguments[i];\r\n        this.listener.apply(this.target, args);\r\n    }\r\n  }\r\n}\r\n\r\nfunction _onceWrap(target, type, listener) {\r\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\r\n  var wrapped = bind.call(onceWrapper, state);\r\n  wrapped.listener = listener;\r\n  state.wrapFn = wrapped;\r\n  return wrapped;\r\n}\r\n\r\nEventEmitter.prototype.once = function once(type, listener) {\r\n  if (typeof listener !== 'function')\r\n    throw new TypeError('\"listener\" argument must be a function');\r\n  this.on(type, _onceWrap(this, type, listener));\r\n  return this;\r\n};\r\n\r\nEventEmitter.prototype.prependOnceListener =\r\n    function prependOnceListener(type, listener) {\r\n      if (typeof listener !== 'function')\r\n        throw new TypeError('\"listener\" argument must be a function');\r\n      this.prependListener(type, _onceWrap(this, type, listener));\r\n      return this;\r\n    };\r\n\r\n// Emits a 'removeListener' event if and only if the listener was removed.\r\nEventEmitter.prototype.removeListener =\r\n    function removeListener(type, listener) {\r\n      var list, events, position, i, originalListener;\r\n\r\n      if (typeof listener !== 'function')\r\n        throw new TypeError('\"listener\" argument must be a function');\r\n\r\n      events = this._events;\r\n      if (!events)\r\n        return this;\r\n\r\n      list = events[type];\r\n      if (!list)\r\n        return this;\r\n\r\n      if (list === listener || list.listener === listener) {\r\n        if (--this._eventsCount === 0)\r\n          this._events = objectCreate(null);\r\n        else {\r\n          delete events[type];\r\n          if (events.removeListener)\r\n            this.emit('removeListener', type, list.listener || listener);\r\n        }\r\n      } else if (typeof list !== 'function') {\r\n        position = -1;\r\n\r\n        for (i = list.length - 1; i >= 0; i--) {\r\n          if (list[i] === listener || list[i].listener === listener) {\r\n            originalListener = list[i].listener;\r\n            position = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (position < 0)\r\n          return this;\r\n\r\n        if (position === 0)\r\n          list.shift();\r\n        else\r\n          spliceOne(list, position);\r\n\r\n        if (list.length === 1)\r\n          events[type] = list[0];\r\n\r\n        if (events.removeListener)\r\n          this.emit('removeListener', type, originalListener || listener);\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\nEventEmitter.prototype.removeAllListeners =\r\n    function removeAllListeners(type) {\r\n      var listeners, events, i;\r\n\r\n      events = this._events;\r\n      if (!events)\r\n        return this;\r\n\r\n      // not listening for removeListener, no need to emit\r\n      if (!events.removeListener) {\r\n        if (arguments.length === 0) {\r\n          this._events = objectCreate(null);\r\n          this._eventsCount = 0;\r\n        } else if (events[type]) {\r\n          if (--this._eventsCount === 0)\r\n            this._events = objectCreate(null);\r\n          else\r\n            delete events[type];\r\n        }\r\n        return this;\r\n      }\r\n\r\n      // emit removeListener for all listeners on all events\r\n      if (arguments.length === 0) {\r\n        var keys = objectKeys(events);\r\n        var key;\r\n        for (i = 0; i < keys.length; ++i) {\r\n          key = keys[i];\r\n          if (key === 'removeListener') continue;\r\n          this.removeAllListeners(key);\r\n        }\r\n        this.removeAllListeners('removeListener');\r\n        this._events = objectCreate(null);\r\n        this._eventsCount = 0;\r\n        return this;\r\n      }\r\n\r\n      listeners = events[type];\r\n\r\n      if (typeof listeners === 'function') {\r\n        this.removeListener(type, listeners);\r\n      } else if (listeners) {\r\n        // LIFO order\r\n        for (i = listeners.length - 1; i >= 0; i--) {\r\n          this.removeListener(type, listeners[i]);\r\n        }\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\nfunction _listeners(target, type, unwrap) {\r\n  var events = target._events;\r\n\r\n  if (!events)\r\n    return [];\r\n\r\n  var evlistener = events[type];\r\n  if (!evlistener)\r\n    return [];\r\n\r\n  if (typeof evlistener === 'function')\r\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\r\n\r\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\r\n}\r\n\r\nEventEmitter.prototype.listeners = function listeners(type) {\r\n  return _listeners(this, type, true);\r\n};\r\n\r\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\r\n  return _listeners(this, type, false);\r\n};\r\n\r\nEventEmitter.listenerCount = function(emitter, type) {\r\n  if (typeof emitter.listenerCount === 'function') {\r\n    return emitter.listenerCount(type);\r\n  } else {\r\n    return listenerCount.call(emitter, type);\r\n  }\r\n};\r\n\r\nEventEmitter.prototype.listenerCount = listenerCount;\r\nfunction listenerCount(type) {\r\n  var events = this._events;\r\n\r\n  if (events) {\r\n    var evlistener = events[type];\r\n\r\n    if (typeof evlistener === 'function') {\r\n      return 1;\r\n    } else if (evlistener) {\r\n      return evlistener.length;\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\nEventEmitter.prototype.eventNames = function eventNames() {\r\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\r\n};\r\n\r\n// About 1.5x faster than the two-arg version of Array#splice().\r\nfunction spliceOne(list, index) {\r\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\r\n    list[i] = list[k];\r\n  list.pop();\r\n}\r\n\r\nfunction arrayClone(arr, n) {\r\n  var copy = new Array(n);\r\n  for (var i = 0; i < n; ++i)\r\n    copy[i] = arr[i];\r\n  return copy;\r\n}\r\n\r\nfunction unwrapListeners(arr) {\r\n  var ret = new Array(arr.length);\r\n  for (var i = 0; i < ret.length; ++i) {\r\n    ret[i] = arr[i].listener || arr[i];\r\n  }\r\n  return ret;\r\n}\r\n\r\nfunction objectCreatePolyfill(proto) {\r\n  var F = function() {};\r\n  F.prototype = proto;\r\n  return new F;\r\n}\r\nfunction objectKeysPolyfill(obj) {\r\n  var keys = [];\r\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {\r\n    keys.push(k);\r\n  }\r\n  return k;\r\n}\r\nfunction functionBindPolyfill(context) {\r\n  var fn = this;\r\n  return function () {\r\n    return fn.apply(context, arguments);\r\n  };\r\n}\r\n\r\n},{}],48:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar constants = require('./util/constants'),\r\n    Logging   = require('./mixins/logging');\r\n\r\nvar Faye = {\r\n  VERSION:    constants.VERSION,\r\n\r\n  Client:     require('./protocol/client'),\r\n  Scheduler:  require('./protocol/scheduler')\r\n};\r\n\r\nLogging.wrapper = Faye;\r\n\r\nmodule.exports = Faye;\r\n\r\n},{\"./mixins/logging\":50,\"./protocol/client\":54,\"./protocol/scheduler\":60,\"./util/constants\":72}],49:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\nvar Promise   = require('../util/promise');\r\n\r\nmodule.exports = {\r\n  then: function(callback, errback) {\r\n    var self = this;\r\n    if (!this._promise)\r\n      this._promise = new Promise(function(resolve, reject) {\r\n        self._resolve = resolve;\r\n        self._reject  = reject;\r\n      });\r\n\r\n    if (arguments.length === 0)\r\n      return this._promise;\r\n    else\r\n      return this._promise.then(callback, errback);\r\n  },\r\n\r\n  callback: function(callback, context) {\r\n    return this.then(function(value) { callback.call(context, value) });\r\n  },\r\n\r\n  errback: function(callback, context) {\r\n    return this.then(null, function(reason) { callback.call(context, reason) });\r\n  },\r\n\r\n  timeout: function(seconds, message) {\r\n    this.then();\r\n    var self = this;\r\n    this._timer = global.setTimeout(function() {\r\n      self._reject(message);\r\n    }, seconds * 1000);\r\n  },\r\n\r\n  setDeferredStatus: function(status, value) {\r\n    if (this._timer) global.clearTimeout(this._timer);\r\n\r\n    this.then();\r\n\r\n    if (status === 'succeeded')\r\n      this._resolve(value);\r\n    else if (status === 'failed')\r\n      this._reject(value);\r\n    else\r\n      delete this._promise;\r\n  }\r\n};\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"../util/promise\":77}],50:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar toJSON = require('../util/to_json');\r\n\r\nvar Logging = {\r\n  LOG_LEVELS: {\r\n    fatal:  4,\r\n    error:  3,\r\n    warn:   2,\r\n    info:   1,\r\n    debug:  0\r\n  },\r\n\r\n  writeLog: function(messageArgs, level) {\r\n    var logger = Logging.logger || (Logging.wrapper || Logging).logger;\r\n    if (!logger) return;\r\n\r\n    var args   = Array.prototype.slice.apply(messageArgs),\r\n        banner = '[Faye',\r\n        klass  = this.className,\r\n\r\n        message = args.shift().replace(/\\?/g, function() {\r\n          try {\r\n            return toJSON(args.shift());\r\n          } catch (error) {\r\n            return '[Object]';\r\n          }\r\n        });\r\n\r\n    if (klass) banner += '.' + klass;\r\n    banner += '] ';\r\n\r\n    if (typeof logger[level] === 'function')\r\n      logger[level](banner + message);\r\n    else if (typeof logger === 'function')\r\n      logger(banner + message);\r\n  }\r\n};\r\n\r\nfor (var key in Logging.LOG_LEVELS)\r\n  (function(level) {\r\n    Logging[level] = function() {\r\n      this.writeLog(arguments, level);\r\n    };\r\n  })(key);\r\n\r\nmodule.exports = Logging;\r\n\r\n},{\"../util/to_json\":79}],51:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar extend       = require('../util/extend'),\r\n    EventEmitter = require('../util/event_emitter');\r\n\r\nvar Publisher = {\r\n  countListeners: function(eventType) {\r\n    return this.listeners(eventType).length;\r\n  },\r\n\r\n  bind: function(eventType, listener, context) {\r\n    var slice   = Array.prototype.slice,\r\n        handler = function() { listener.apply(context, slice.call(arguments)) };\r\n\r\n    this._listeners = this._listeners || [];\r\n    this._listeners.push([eventType, listener, context, handler]);\r\n    return this.on(eventType, handler);\r\n  },\r\n\r\n  unbind: function(eventType, listener, context) {\r\n    this._listeners = this._listeners || [];\r\n    var n = this._listeners.length, tuple;\r\n\r\n    while (n--) {\r\n      tuple = this._listeners[n];\r\n      if (tuple[0] !== eventType) continue;\r\n      if (listener && (tuple[1] !== listener || tuple[2] !== context)) continue;\r\n      this._listeners.splice(n, 1);\r\n      this.removeListener(eventType, tuple[3]);\r\n    }\r\n  }\r\n};\r\n\r\nextend(Publisher, EventEmitter.prototype);\r\nPublisher.trigger = Publisher.emit;\r\n\r\nmodule.exports = Publisher;\r\n\r\n},{\"../util/event_emitter\":75,\"../util/extend\":76}],52:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\nmodule.exports = {\r\n  addTimeout: function(name, delay, callback, context) {\r\n    this._timeouts = this._timeouts || {};\r\n    if (this._timeouts.hasOwnProperty(name)) return;\r\n    var self = this;\r\n    this._timeouts[name] = global.setTimeout(function() {\r\n      delete self._timeouts[name];\r\n      callback.call(context);\r\n    }, 1000 * delay);\r\n  },\r\n\r\n  removeTimeout: function(name) {\r\n    this._timeouts = this._timeouts || {};\r\n    var timeout = this._timeouts[name];\r\n    if (!timeout) return;\r\n    global.clearTimeout(timeout);\r\n    delete this._timeouts[name];\r\n  },\r\n\r\n  removeAllTimeouts: function() {\r\n    this._timeouts = this._timeouts || {};\r\n    for (var name in this._timeouts) this.removeTimeout(name);\r\n  }\r\n};\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{}],53:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar Class     = require('../util/class'),\r\n    extend    = require('../util/extend'),\r\n    Publisher = require('../mixins/publisher'),\r\n    Grammar   = require('./grammar');\r\n\r\nvar Channel = Class({\r\n  initialize: function(name) {\r\n    this.id = this.name = name;\r\n  },\r\n\r\n  push: function(message) {\r\n    this.trigger('message', message);\r\n  },\r\n\r\n  isUnused: function() {\r\n    return this.countListeners('message') === 0;\r\n  }\r\n});\r\n\r\nextend(Channel.prototype, Publisher);\r\n\r\nextend(Channel, {\r\n  HANDSHAKE:    '/meta/handshake',\r\n  CONNECT:      '/meta/connect',\r\n  SUBSCRIBE:    '/meta/subscribe',\r\n  UNSUBSCRIBE:  '/meta/unsubscribe',\r\n  DISCONNECT:   '/meta/disconnect',\r\n\r\n  META:         'meta',\r\n  SERVICE:      'service',\r\n\r\n  expand: function(name) {\r\n    var segments = this.parse(name),\r\n        channels = ['/**', name];\r\n\r\n    var copy = segments.slice();\r\n    copy[copy.length - 1] = '*';\r\n    channels.push(this.unparse(copy));\r\n\r\n    for (var i = 1, n = segments.length; i < n; i++) {\r\n      copy = segments.slice(0, i);\r\n      copy.push('**');\r\n      channels.push(this.unparse(copy));\r\n    }\r\n\r\n    return channels;\r\n  },\r\n\r\n  isValid: function(name) {\r\n    return Grammar.CHANNEL_NAME.test(name) ||\r\n           Grammar.CHANNEL_PATTERN.test(name);\r\n  },\r\n\r\n  parse: function(name) {\r\n    if (!this.isValid(name)) return null;\r\n    return name.split('/').slice(1);\r\n  },\r\n\r\n  unparse: function(segments) {\r\n    return '/' + segments.join('/');\r\n  },\r\n\r\n  isMeta: function(name) {\r\n    var segments = this.parse(name);\r\n    return segments ? (segments[0] === this.META) : null;\r\n  },\r\n\r\n  isService: function(name) {\r\n    var segments = this.parse(name);\r\n    return segments ? (segments[0] === this.SERVICE) : null;\r\n  },\r\n\r\n  isSubscribable: function(name) {\r\n    if (!this.isValid(name)) return null;\r\n    return !this.isMeta(name) && !this.isService(name);\r\n  },\r\n\r\n  Set: Class({\r\n    initialize: function() {\r\n      this._channels = {};\r\n    },\r\n\r\n    getKeys: function() {\r\n      var keys = [];\r\n      for (var key in this._channels) keys.push(key);\r\n      return keys;\r\n    },\r\n\r\n    remove: function(name) {\r\n      delete this._channels[name];\r\n    },\r\n\r\n    hasSubscription: function(name) {\r\n      return this._channels.hasOwnProperty(name);\r\n    },\r\n\r\n    subscribe: function(names, subscription) {\r\n      var name;\r\n      for (var i = 0, n = names.length; i < n; i++) {\r\n        name = names[i];\r\n        var channel = this._channels[name] = this._channels[name] || new Channel(name);\r\n        channel.bind('message', subscription);\r\n      }\r\n    },\r\n\r\n    unsubscribe: function(name, subscription) {\r\n      var channel = this._channels[name];\r\n      if (!channel) return false;\r\n      channel.unbind('message', subscription);\r\n\r\n      if (channel.isUnused()) {\r\n        this.remove(name);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    distributeMessage: function(message) {\r\n      var channels = Channel.expand(message.channel);\r\n\r\n      for (var i = 0, n = channels.length; i < n; i++) {\r\n        var channel = this._channels[channels[i]];\r\n        if (channel) channel.trigger('message', message);\r\n      }\r\n    }\r\n  })\r\n});\r\n\r\nmodule.exports = Channel;\r\n\r\n},{\"../mixins/publisher\":51,\"../util/class\":71,\"../util/extend\":76,\"./grammar\":58}],54:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\nvar asap            = require('asap'),\r\n    Class           = require('../util/class'),\r\n    Promise         = require('../util/promise'),\r\n    URI             = require('../util/uri'),\r\n    array           = require('../util/array'),\r\n    browser         = require('../util/browser'),\r\n    constants       = require('../util/constants'),\r\n    extend          = require('../util/extend'),\r\n    validateOptions = require('../util/validate_options'),\r\n    Deferrable      = require('../mixins/deferrable'),\r\n    Logging         = require('../mixins/logging'),\r\n    Publisher       = require('../mixins/publisher'),\r\n    Channel         = require('./channel'),\r\n    Dispatcher      = require('./dispatcher'),\r\n    Error           = require('./error'),\r\n    Extensible      = require('./extensible'),\r\n    Publication     = require('./publication'),\r\n    Subscription    = require('./subscription');\r\n\r\nvar Client = Class({ className: 'Client',\r\n  UNCONNECTED:        1,\r\n  CONNECTING:         2,\r\n  CONNECTED:          3,\r\n  DISCONNECTED:       4,\r\n\r\n  HANDSHAKE:          'handshake',\r\n  RETRY:              'retry',\r\n  NONE:               'none',\r\n\r\n  CONNECTION_TIMEOUT: 60,\r\n\r\n  DEFAULT_ENDPOINT:   '/bayeux',\r\n  INTERVAL:           0,\r\n\r\n  initialize: function(endpoint, options) {\r\n    this.info('New client created for ?', endpoint);\r\n    options = options || {};\r\n\r\n    validateOptions(options, ['interval', 'timeout', 'endpoints', 'proxy', 'retry', 'scheduler', 'websocketExtensions', 'tls', 'ca']);\r\n\r\n    this._channels   = new Channel.Set();\r\n    this._dispatcher = Dispatcher.create(this, endpoint || this.DEFAULT_ENDPOINT, options);\r\n\r\n    this._messageId = 0;\r\n    this._state     = this.UNCONNECTED;\r\n\r\n    this._responseCallbacks = {};\r\n\r\n    this._advice = {\r\n      reconnect: this.RETRY,\r\n      interval:  1000 * (options.interval || this.INTERVAL),\r\n      timeout:   1000 * (options.timeout  || this.CONNECTION_TIMEOUT)\r\n    };\r\n    this._dispatcher.timeout = this._advice.timeout / 1000;\r\n\r\n    this._dispatcher.bind('message', this._receiveMessage, this);\r\n\r\n    if (browser.Event && global.onbeforeunload !== undefined)\r\n      browser.Event.on(global, 'beforeunload', function() {\r\n        if (array.indexOf(this._dispatcher._disabled, 'autodisconnect') < 0)\r\n          this.disconnect();\r\n      }, this);\r\n  },\r\n\r\n  addWebsocketExtension: function(extension) {\r\n    return this._dispatcher.addWebsocketExtension(extension);\r\n  },\r\n\r\n  disable: function(feature) {\r\n    return this._dispatcher.disable(feature);\r\n  },\r\n\r\n  setHeader: function(name, value) {\r\n    return this._dispatcher.setHeader(name, value);\r\n  },\r\n\r\n  // Request\r\n  // MUST include:  * channel\r\n  //                * version\r\n  //                * supportedConnectionTypes\r\n  // MAY include:   * minimumVersion\r\n  //                * ext\r\n  //                * id\r\n  //\r\n  // Success Response                             Failed Response\r\n  // MUST include:  * channel                     MUST include:  * channel\r\n  //                * version                                    * successful\r\n  //                * supportedConnectionTypes                   * error\r\n  //                * clientId                    MAY include:   * supportedConnectionTypes\r\n  //                * successful                                 * advice\r\n  // MAY include:   * minimumVersion                             * version\r\n  //                * advice                                     * minimumVersion\r\n  //                * ext                                        * ext\r\n  //                * id                                         * id\r\n  //                * authSuccessful\r\n  handshake: function(callback, context) {\r\n    if (this._advice.reconnect === this.NONE) return;\r\n    if (this._state !== this.UNCONNECTED) return;\r\n\r\n    this._state = this.CONNECTING;\r\n    var self = this;\r\n\r\n    this.info('Initiating handshake with ?', URI.stringify(this._dispatcher.endpoint));\r\n    this._dispatcher.selectTransport(constants.MANDATORY_CONNECTION_TYPES);\r\n\r\n    this._sendMessage({\r\n      channel:                  Channel.HANDSHAKE,\r\n      version:                  constants.BAYEUX_VERSION,\r\n      supportedConnectionTypes: this._dispatcher.getConnectionTypes()\r\n\r\n    }, {}, function(response) {\r\n\r\n      if (response.successful) {\r\n        this._state = this.CONNECTED;\r\n        this._dispatcher.clientId  = response.clientId;\r\n\r\n        this._dispatcher.selectTransport(response.supportedConnectionTypes);\r\n\r\n        this.info('Handshake successful: ?', this._dispatcher.clientId);\r\n\r\n        this.subscribe(this._channels.getKeys(), true);\r\n        if (callback) asap(function() { callback.call(context) });\r\n\r\n      } else {\r\n        this.info('Handshake unsuccessful');\r\n        global.setTimeout(function() { self.handshake(callback, context) }, this._dispatcher.retry * 1000);\r\n        this._state = this.UNCONNECTED;\r\n      }\r\n    }, this);\r\n  },\r\n\r\n  // Request                              Response\r\n  // MUST include:  * channel             MUST include:  * channel\r\n  //                * clientId                           * successful\r\n  //                * connectionType                     * clientId\r\n  // MAY include:   * ext                 MAY include:   * error\r\n  //                * id                                 * advice\r\n  //                                                     * ext\r\n  //                                                     * id\r\n  //                                                     * timestamp\r\n  connect: function(callback, context) {\r\n    if (this._advice.reconnect === this.NONE) return;\r\n    if (this._state === this.DISCONNECTED) return;\r\n\r\n    if (this._state === this.UNCONNECTED)\r\n      return this.handshake(function() { this.connect(callback, context) }, this);\r\n\r\n    this.callback(callback, context);\r\n    if (this._state !== this.CONNECTED) return;\r\n\r\n    this.info('Calling deferred actions for ?', this._dispatcher.clientId);\r\n    this.setDeferredStatus('succeeded');\r\n    this.setDeferredStatus('unknown');\r\n\r\n    if (this._connectRequest) return;\r\n    this._connectRequest = true;\r\n\r\n    this.info('Initiating connection for ?', this._dispatcher.clientId);\r\n\r\n    this._sendMessage({\r\n      channel:        Channel.CONNECT,\r\n      clientId:       this._dispatcher.clientId,\r\n      connectionType: this._dispatcher.connectionType\r\n\r\n    }, {}, this._cycleConnection, this);\r\n  },\r\n\r\n  // Request                              Response\r\n  // MUST include:  * channel             MUST include:  * channel\r\n  //                * clientId                           * successful\r\n  // MAY include:   * ext                                * clientId\r\n  //                * id                  MAY include:   * error\r\n  //                                                     * ext\r\n  //                                                     * id\r\n  disconnect: function() {\r\n    if (this._state !== this.CONNECTED) return;\r\n    this._state = this.DISCONNECTED;\r\n\r\n    this.info('Disconnecting ?', this._dispatcher.clientId);\r\n    var promise = new Publication();\r\n\r\n    this._sendMessage({\r\n      channel:  Channel.DISCONNECT,\r\n      clientId: this._dispatcher.clientId\r\n\r\n    }, {}, function(response) {\r\n      if (response.successful) {\r\n        this._dispatcher.close();\r\n        promise.setDeferredStatus('succeeded');\r\n      } else {\r\n        promise.setDeferredStatus('failed', Error.parse(response.error));\r\n      }\r\n    }, this);\r\n\r\n    this.info('Clearing channel listeners for ?', this._dispatcher.clientId);\r\n    this._channels = new Channel.Set();\r\n\r\n    return promise;\r\n  },\r\n\r\n  // Request                              Response\r\n  // MUST include:  * channel             MUST include:  * channel\r\n  //                * clientId                           * successful\r\n  //                * subscription                       * clientId\r\n  // MAY include:   * ext                                * subscription\r\n  //                * id                  MAY include:   * error\r\n  //                                                     * advice\r\n  //                                                     * ext\r\n  //                                                     * id\r\n  //                                                     * timestamp\r\n  subscribe: function(channel, callback, context) {\r\n    if (channel instanceof Array)\r\n      return array.map(channel, function(c) {\r\n        return this.subscribe(c, callback, context);\r\n      }, this);\r\n\r\n    var subscription = new Subscription(this, channel, callback, context),\r\n        force        = (callback === true),\r\n        hasSubscribe = this._channels.hasSubscription(channel);\r\n\r\n    if (hasSubscribe && !force) {\r\n      this._channels.subscribe([channel], subscription);\r\n      subscription.setDeferredStatus('succeeded');\r\n      return subscription;\r\n    }\r\n\r\n    this.connect(function() {\r\n      this.info('Client ? attempting to subscribe to ?', this._dispatcher.clientId, channel);\r\n      if (!force) this._channels.subscribe([channel], subscription);\r\n\r\n      this._sendMessage({\r\n        channel:      Channel.SUBSCRIBE,\r\n        clientId:     this._dispatcher.clientId,\r\n        subscription: channel\r\n\r\n      }, {}, function(response) {\r\n        if (!response.successful) {\r\n          subscription.setDeferredStatus('failed', Error.parse(response.error));\r\n          return this._channels.unsubscribe(channel, subscription);\r\n        }\r\n\r\n        var channels = [].concat(response.subscription);\r\n        this.info('Subscription acknowledged for ? to ?', this._dispatcher.clientId, channels);\r\n        subscription.setDeferredStatus('succeeded');\r\n      }, this);\r\n    }, this);\r\n\r\n    return subscription;\r\n  },\r\n\r\n  // Request                              Response\r\n  // MUST include:  * channel             MUST include:  * channel\r\n  //                * clientId                           * successful\r\n  //                * subscription                       * clientId\r\n  // MAY include:   * ext                                * subscription\r\n  //                * id                  MAY include:   * error\r\n  //                                                     * advice\r\n  //                                                     * ext\r\n  //                                                     * id\r\n  //                                                     * timestamp\r\n  unsubscribe: function(channel, subscription) {\r\n    if (channel instanceof Array)\r\n      return array.map(channel, function(c) {\r\n        return this.unsubscribe(c, subscription);\r\n      }, this);\r\n\r\n    var dead = this._channels.unsubscribe(channel, subscription);\r\n    if (!dead) return;\r\n\r\n    this.connect(function() {\r\n      this.info('Client ? attempting to unsubscribe from ?', this._dispatcher.clientId, channel);\r\n\r\n      this._sendMessage({\r\n        channel:      Channel.UNSUBSCRIBE,\r\n        clientId:     this._dispatcher.clientId,\r\n        subscription: channel\r\n\r\n      }, {}, function(response) {\r\n        if (!response.successful) return;\r\n\r\n        var channels = [].concat(response.subscription);\r\n        this.info('Unsubscription acknowledged for ? from ?', this._dispatcher.clientId, channels);\r\n      }, this);\r\n    }, this);\r\n  },\r\n\r\n  // Request                              Response\r\n  // MUST include:  * channel             MUST include:  * channel\r\n  //                * data                               * successful\r\n  // MAY include:   * clientId            MAY include:   * id\r\n  //                * id                                 * error\r\n  //                * ext                                * ext\r\n  publish: function(channel, data, options) {\r\n    validateOptions(options || {}, ['attempts', 'deadline']);\r\n    var publication = new Publication();\r\n\r\n    this.connect(function() {\r\n      this.info('Client ? queueing published message to ?: ?', this._dispatcher.clientId, channel, data);\r\n\r\n      this._sendMessage({\r\n        channel:  channel,\r\n        data:     data,\r\n        clientId: this._dispatcher.clientId\r\n\r\n      }, options, function(response) {\r\n        if (response.successful)\r\n          publication.setDeferredStatus('succeeded');\r\n        else\r\n          publication.setDeferredStatus('failed', Error.parse(response.error));\r\n      }, this);\r\n    }, this);\r\n\r\n    return publication;\r\n  },\r\n\r\n  _sendMessage: function(message, options, callback, context) {\r\n    message.id = this._generateMessageId();\r\n\r\n    var timeout = this._advice.timeout\r\n                ? 1.2 * this._advice.timeout / 1000\r\n                : 1.2 * this._dispatcher.retry;\r\n\r\n    this.pipeThroughExtensions('outgoing', message, null, function(message) {\r\n      if (!message) return;\r\n      if (callback) this._responseCallbacks[message.id] = [callback, context];\r\n      this._dispatcher.sendMessage(message, timeout, options || {});\r\n    }, this);\r\n  },\r\n\r\n  _generateMessageId: function() {\r\n    this._messageId += 1;\r\n    if (this._messageId >= Math.pow(2,32)) this._messageId = 0;\r\n    return this._messageId.toString(36);\r\n  },\r\n\r\n  _receiveMessage: function(message) {\r\n    var id = message.id, callback;\r\n\r\n    if (message.successful !== undefined) {\r\n      callback = this._responseCallbacks[id];\r\n      delete this._responseCallbacks[id];\r\n    }\r\n\r\n    this.pipeThroughExtensions('incoming', message, null, function(message) {\r\n      if (!message) return;\r\n      if (message.advice) this._handleAdvice(message.advice);\r\n      this._deliverMessage(message);\r\n      if (callback) callback[0].call(callback[1], message);\r\n    }, this);\r\n  },\r\n\r\n  _handleAdvice: function(advice) {\r\n    extend(this._advice, advice);\r\n    this._dispatcher.timeout = this._advice.timeout / 1000;\r\n\r\n    if (this._advice.reconnect === this.HANDSHAKE && this._state !== this.DISCONNECTED) {\r\n      this._state = this.UNCONNECTED;\r\n      this._dispatcher.clientId = null;\r\n      this._cycleConnection();\r\n    }\r\n  },\r\n\r\n  _deliverMessage: function(message) {\r\n    if (!message.channel || message.data === undefined) return;\r\n    this.info('Client ? calling listeners for ? with ?', this._dispatcher.clientId, message.channel, message.data);\r\n    this._channels.distributeMessage(message);\r\n  },\r\n\r\n  _cycleConnection: function() {\r\n    if (this._connectRequest) {\r\n      this._connectRequest = null;\r\n      this.info('Closed connection for ?', this._dispatcher.clientId);\r\n    }\r\n    var self = this;\r\n    global.setTimeout(function() { self.connect() }, this._advice.interval);\r\n  }\r\n});\r\n\r\nextend(Client.prototype, Deferrable);\r\nextend(Client.prototype, Publisher);\r\nextend(Client.prototype, Logging);\r\nextend(Client.prototype, Extensible);\r\n\r\nmodule.exports = Client;\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"../mixins/deferrable\":49,\"../mixins/logging\":50,\"../mixins/publisher\":51,\"../util/array\":69,\"../util/browser\":70,\"../util/class\":71,\"../util/constants\":72,\"../util/extend\":76,\"../util/promise\":77,\"../util/uri\":80,\"../util/validate_options\":81,\"./channel\":53,\"./dispatcher\":55,\"./error\":56,\"./extensible\":57,\"./publication\":59,\"./subscription\":61,\"asap\":37}],55:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\nvar Class     = require('../util/class'),\r\n    URI       = require('../util/uri'),\r\n    cookies   = require('../util/cookies'),\r\n    extend    = require('../util/extend'),\r\n    Logging   = require('../mixins/logging'),\r\n    Publisher = require('../mixins/publisher'),\r\n    Transport = require('../transport'),\r\n    Scheduler = require('./scheduler');\r\n\r\nvar Dispatcher = Class({ className: 'Dispatcher',\r\n  MAX_REQUEST_SIZE: 2048,\r\n  DEFAULT_RETRY:    5,\r\n\r\n  UP:   1,\r\n  DOWN: 2,\r\n\r\n  initialize: function(client, endpoint, options) {\r\n    this._client     = client;\r\n    this.endpoint    = URI.parse(endpoint);\r\n    this._alternates = options.endpoints || {};\r\n\r\n    this.cookies      = cookies.CookieJar && new cookies.CookieJar();\r\n    this._disabled    = [];\r\n    this._envelopes   = {};\r\n    this.headers      = {};\r\n    this.retry        = options.retry || this.DEFAULT_RETRY;\r\n    this._scheduler   = options.scheduler || Scheduler;\r\n    this._state       = 0;\r\n    this.transports   = {};\r\n    this.wsExtensions = [];\r\n\r\n    this.proxy = options.proxy || {};\r\n    if (typeof this._proxy === 'string') this._proxy = {origin: this._proxy};\r\n\r\n    var exts = options.websocketExtensions;\r\n    if (exts) {\r\n      exts = [].concat(exts);\r\n      for (var i = 0, n = exts.length; i < n; i++)\r\n        this.addWebsocketExtension(exts[i]);\r\n    }\r\n\r\n    this.tls = options.tls || {};\r\n    this.tls.ca = this.tls.ca || options.ca;\r\n\r\n    for (var type in this._alternates)\r\n      this._alternates[type] = URI.parse(this._alternates[type]);\r\n\r\n    this.maxRequestSize = this.MAX_REQUEST_SIZE;\r\n  },\r\n\r\n  endpointFor: function(connectionType) {\r\n    return this._alternates[connectionType] || this.endpoint;\r\n  },\r\n\r\n  addWebsocketExtension: function(extension) {\r\n    this.wsExtensions.push(extension);\r\n  },\r\n\r\n  disable: function(feature) {\r\n    this._disabled.push(feature);\r\n  },\r\n\r\n  setHeader: function(name, value) {\r\n    this.headers[name] = value;\r\n  },\r\n\r\n  close: function() {\r\n    var transport = this._transport;\r\n    delete this._transport;\r\n    if (transport) transport.close();\r\n  },\r\n\r\n  getConnectionTypes: function() {\r\n    return Transport.getConnectionTypes();\r\n  },\r\n\r\n  selectTransport: function(transportTypes) {\r\n    Transport.get(this, transportTypes, this._disabled, function(transport) {\r\n      this.debug('Selected ? transport for ?', transport.connectionType, URI.stringify(transport.endpoint));\r\n\r\n      if (transport === this._transport) return;\r\n      if (this._transport) this._transport.close();\r\n\r\n      this._transport = transport;\r\n      this.connectionType = transport.connectionType;\r\n    }, this);\r\n  },\r\n\r\n  sendMessage: function(message, timeout, options) {\r\n    options = options || {};\r\n\r\n    var id       = message.id,\r\n        attempts = options.attempts,\r\n        deadline = options.deadline && new Date().getTime() + (options.deadline * 1000),\r\n        envelope = this._envelopes[id],\r\n        scheduler;\r\n\r\n    if (!envelope) {\r\n      scheduler = new this._scheduler(message, {timeout: timeout, interval: this.retry, attempts: attempts, deadline: deadline});\r\n      envelope  = this._envelopes[id] = {message: message, scheduler: scheduler};\r\n    }\r\n\r\n    this._sendEnvelope(envelope);\r\n  },\r\n\r\n  _sendEnvelope: function(envelope) {\r\n    if (!this._transport) return;\r\n    if (envelope.request || envelope.timer) return;\r\n\r\n    var message   = envelope.message,\r\n        scheduler = envelope.scheduler,\r\n        self      = this;\r\n\r\n    if (!scheduler.isDeliverable()) {\r\n      scheduler.abort();\r\n      delete this._envelopes[message.id];\r\n      return;\r\n    }\r\n\r\n    envelope.timer = global.setTimeout(function() {\r\n      self.handleError(message);\r\n    }, scheduler.getTimeout() * 1000);\r\n\r\n    scheduler.send();\r\n    envelope.request = this._transport.sendMessage(message);\r\n  },\r\n\r\n  handleResponse: function(reply) {\r\n    var envelope = this._envelopes[reply.id];\r\n\r\n    if (reply.successful !== undefined && envelope) {\r\n      envelope.scheduler.succeed();\r\n      delete this._envelopes[reply.id];\r\n      global.clearTimeout(envelope.timer);\r\n    }\r\n\r\n    this.trigger('message', reply);\r\n\r\n    if (this._state === this.UP) return;\r\n    this._state = this.UP;\r\n    this._client.trigger('transport:up');\r\n  },\r\n\r\n  handleError: function(message, immediate) {\r\n    var envelope = this._envelopes[message.id],\r\n        request  = envelope && envelope.request,\r\n        self     = this;\r\n\r\n    if (!request) return;\r\n\r\n    request.then(function(req) {\r\n      if (req && req.abort) req.abort();\r\n    });\r\n\r\n    var scheduler = envelope.scheduler;\r\n    scheduler.fail();\r\n\r\n    global.clearTimeout(envelope.timer);\r\n    envelope.request = envelope.timer = null;\r\n\r\n    if (immediate) {\r\n      this._sendEnvelope(envelope);\r\n    } else {\r\n      envelope.timer = global.setTimeout(function() {\r\n        envelope.timer = null;\r\n        self._sendEnvelope(envelope);\r\n      }, scheduler.getInterval() * 1000);\r\n    }\r\n\r\n    if (this._state === this.DOWN) return;\r\n    this._state = this.DOWN;\r\n    this._client.trigger('transport:down');\r\n  }\r\n});\r\n\r\nDispatcher.create = function(client, endpoint, options) {\r\n  return new Dispatcher(client, endpoint, options);\r\n};\r\n\r\nextend(Dispatcher.prototype, Publisher);\r\nextend(Dispatcher.prototype, Logging);\r\n\r\nmodule.exports = Dispatcher;\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"../mixins/logging\":50,\"../mixins/publisher\":51,\"../transport\":62,\"../util/class\":71,\"../util/cookies\":73,\"../util/extend\":76,\"../util/uri\":80,\"./scheduler\":60}],56:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar Class   = require('../util/class'),\r\n    Grammar = require('./grammar');\r\n\r\nvar Error = Class({\r\n  initialize: function(code, params, message) {\r\n    this.code    = code;\r\n    this.params  = Array.prototype.slice.call(params);\r\n    this.message = message;\r\n  },\r\n\r\n  toString: function() {\r\n    return this.code + ':' +\r\n           this.params.join(',') + ':' +\r\n           this.message;\r\n  }\r\n});\r\n\r\nError.parse = function(message) {\r\n  message = message || '';\r\n  if (!Grammar.ERROR.test(message)) return new Error(null, [], message);\r\n\r\n  var parts   = message.split(':'),\r\n      code    = parseInt(parts[0]),\r\n      params  = parts[1].split(','),\r\n      message = parts[2];\r\n\r\n  return new Error(code, params, message);\r\n};\r\n\r\n// http://code.google.com/p/cometd/wiki/BayeuxCodes\r\nvar errors = {\r\n  versionMismatch:  [300, 'Version mismatch'],\r\n  conntypeMismatch: [301, 'Connection types not supported'],\r\n  extMismatch:      [302, 'Extension mismatch'],\r\n  badRequest:       [400, 'Bad request'],\r\n  clientUnknown:    [401, 'Unknown client'],\r\n  parameterMissing: [402, 'Missing required parameter'],\r\n  channelForbidden: [403, 'Forbidden channel'],\r\n  channelUnknown:   [404, 'Unknown channel'],\r\n  channelInvalid:   [405, 'Invalid channel'],\r\n  extUnknown:       [406, 'Unknown extension'],\r\n  publishFailed:    [407, 'Failed to publish'],\r\n  serverError:      [500, 'Internal server error']\r\n};\r\n\r\nfor (var name in errors)\r\n  (function(name) {\r\n    Error[name] = function() {\r\n      return new Error(errors[name][0], arguments, errors[name][1]).toString();\r\n    };\r\n  })(name);\r\n\r\nmodule.exports = Error;\r\n\r\n},{\"../util/class\":71,\"./grammar\":58}],57:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar extend  = require('../util/extend'),\r\n    Logging = require('../mixins/logging');\r\n\r\nvar Extensible = {\r\n  addExtension: function(extension) {\r\n    this._extensions = this._extensions || [];\r\n    this._extensions.push(extension);\r\n    if (extension.added) extension.added(this);\r\n  },\r\n\r\n  removeExtension: function(extension) {\r\n    if (!this._extensions) return;\r\n    var i = this._extensions.length;\r\n    while (i--) {\r\n      if (this._extensions[i] !== extension) continue;\r\n      this._extensions.splice(i,1);\r\n      if (extension.removed) extension.removed(this);\r\n    }\r\n  },\r\n\r\n  pipeThroughExtensions: function(stage, message, request, callback, context) {\r\n    this.debug('Passing through ? extensions: ?', stage, message);\r\n\r\n    if (!this._extensions) return callback.call(context, message);\r\n    var extensions = this._extensions.slice();\r\n\r\n    var pipe = function(message) {\r\n      if (!message) return callback.call(context, message);\r\n\r\n      var extension = extensions.shift();\r\n      if (!extension) return callback.call(context, message);\r\n\r\n      var fn = extension[stage];\r\n      if (!fn) return pipe(message);\r\n\r\n      if (fn.length >= 3) extension[stage](message, request, pipe);\r\n      else                extension[stage](message, pipe);\r\n    };\r\n    pipe(message);\r\n  }\r\n};\r\n\r\nextend(Extensible, Logging);\r\n\r\nmodule.exports = Extensible;\r\n\r\n},{\"../mixins/logging\":50,\"../util/extend\":76}],58:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = {\r\n  CHANNEL_NAME:     /^\\/(((([a-z]|[A-Z])|[0-9])|(\\-|\\_|\\!|\\~|\\(|\\)|\\$|\\@)))+(\\/(((([a-z]|[A-Z])|[0-9])|(\\-|\\_|\\!|\\~|\\(|\\)|\\$|\\@)))+)*$/,\r\n  CHANNEL_PATTERN:  /^(\\/(((([a-z]|[A-Z])|[0-9])|(\\-|\\_|\\!|\\~|\\(|\\)|\\$|\\@)))+)*\\/\\*{1,2}$/,\r\n  ERROR:            /^([0-9][0-9][0-9]:(((([a-z]|[A-Z])|[0-9])|(\\-|\\_|\\!|\\~|\\(|\\)|\\$|\\@)| |\\/|\\*|\\.))*(,(((([a-z]|[A-Z])|[0-9])|(\\-|\\_|\\!|\\~|\\(|\\)|\\$|\\@)| |\\/|\\*|\\.))*)*:(((([a-z]|[A-Z])|[0-9])|(\\-|\\_|\\!|\\~|\\(|\\)|\\$|\\@)| |\\/|\\*|\\.))*|[0-9][0-9][0-9]::(((([a-z]|[A-Z])|[0-9])|(\\-|\\_|\\!|\\~|\\(|\\)|\\$|\\@)| |\\/|\\*|\\.))*)$/,\r\n  VERSION:          /^([0-9])+(\\.(([a-z]|[A-Z])|[0-9])(((([a-z]|[A-Z])|[0-9])|\\-|\\_))*)*$/\r\n};\r\n\r\n},{}],59:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar Class      = require('../util/class'),\r\n    Deferrable = require('../mixins/deferrable');\r\n\r\nmodule.exports = Class(Deferrable);\r\n\r\n},{\"../mixins/deferrable\":49,\"../util/class\":71}],60:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar extend = require('../util/extend');\r\n\r\nvar Scheduler = function(message, options) {\r\n  this.message  = message;\r\n  this.options  = options;\r\n  this.attempts = 0;\r\n};\r\n\r\nextend(Scheduler.prototype, {\r\n  getTimeout: function() {\r\n    return this.options.timeout;\r\n  },\r\n\r\n  getInterval: function() {\r\n    return this.options.interval;\r\n  },\r\n\r\n  isDeliverable: function() {\r\n    var attempts = this.options.attempts,\r\n        made     = this.attempts,\r\n        deadline = this.options.deadline,\r\n        now      = new Date().getTime();\r\n\r\n    if (attempts !== undefined && made >= attempts)\r\n      return false;\r\n\r\n    if (deadline !== undefined && now > deadline)\r\n      return false;\r\n\r\n    return true;\r\n  },\r\n\r\n  send: function() {\r\n    this.attempts += 1;\r\n  },\r\n\r\n  succeed: function() {},\r\n\r\n  fail: function() {},\r\n\r\n  abort: function() {}\r\n});\r\n\r\nmodule.exports = Scheduler;\r\n\r\n},{\"../util/extend\":76}],61:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar Class      = require('../util/class'),\r\n    extend     = require('../util/extend'),\r\n    Deferrable = require('../mixins/deferrable');\r\n\r\nvar Subscription = Class({\r\n  initialize: function(client, channels, callback, context) {\r\n    this._client    = client;\r\n    this._channels  = channels;\r\n    this._callback  = callback;\r\n    this._context   = context;\r\n    this._cancelled = false;\r\n  },\r\n\r\n  withChannel: function(callback, context) {\r\n    this._withChannel = [callback, context];\r\n    return this;\r\n  },\r\n\r\n  apply: function(context, args) {\r\n    var message = args[0];\r\n\r\n    if (this._callback)\r\n      this._callback.call(this._context, message.data);\r\n\r\n    if (this._withChannel)\r\n      this._withChannel[0].call(this._withChannel[1], message.channel, message.data);\r\n  },\r\n\r\n  cancel: function() {\r\n    if (this._cancelled) return;\r\n    this._client.unsubscribe(this._channels, this);\r\n    this._cancelled = true;\r\n  },\r\n\r\n  unsubscribe: function() {\r\n    this.cancel();\r\n  }\r\n});\r\n\r\nextend(Subscription.prototype, Deferrable);\r\n\r\nmodule.exports = Subscription;\r\n\r\n},{\"../mixins/deferrable\":49,\"../util/class\":71,\"../util/extend\":76}],62:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar Transport = require('./transport');\r\n\r\nTransport.register('websocket', require('./web_socket'));\r\nTransport.register('eventsource', require('./event_source'));\r\nTransport.register('long-polling', require('./xhr'));\r\nTransport.register('cross-origin-long-polling', require('./cors'));\r\nTransport.register('callback-polling', require('./jsonp'));\r\n\r\nmodule.exports = Transport;\r\n\r\n},{\"./cors\":63,\"./event_source\":64,\"./jsonp\":65,\"./transport\":66,\"./web_socket\":67,\"./xhr\":68}],63:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\nvar Class     = require('../util/class'),\r\n    Set       = require('../util/set'),\r\n    URI       = require('../util/uri'),\r\n    extend    = require('../util/extend'),\r\n    toJSON    = require('../util/to_json'),\r\n    Transport = require('./transport');\r\n\r\nvar CORS = extend(Class(Transport, {\r\n  encode: function(messages) {\r\n    return 'message=' + encodeURIComponent(toJSON(messages));\r\n  },\r\n\r\n  request: function(messages) {\r\n    var xhrClass = global.XDomainRequest ? XDomainRequest : XMLHttpRequest,\r\n        xhr      = new xhrClass(),\r\n        id       = ++CORS._id,\r\n        headers  = this._dispatcher.headers,\r\n        self     = this,\r\n        key;\r\n\r\n    xhr.open('POST', URI.stringify(this.endpoint), true);\r\n\r\n    if (xhr.setRequestHeader) {\r\n      xhr.setRequestHeader('Pragma', 'no-cache');\r\n      for (key in headers) {\r\n        if (!headers.hasOwnProperty(key)) continue;\r\n        xhr.setRequestHeader(key, headers[key]);\r\n      }\r\n    }\r\n\r\n    var cleanUp = function() {\r\n      if (!xhr) return false;\r\n      CORS._pending.remove(id);\r\n      xhr.onload = xhr.onerror = xhr.ontimeout = xhr.onprogress = null;\r\n      xhr = null;\r\n    };\r\n\r\n    xhr.onload = function() {\r\n      var replies;\r\n      try { replies = JSON.parse(xhr.responseText) } catch (error) {}\r\n\r\n      cleanUp();\r\n\r\n      if (replies)\r\n        self._receive(replies);\r\n      else\r\n        self._handleError(messages);\r\n    };\r\n\r\n    xhr.onerror = xhr.ontimeout = function() {\r\n      cleanUp();\r\n      self._handleError(messages);\r\n    };\r\n\r\n    xhr.onprogress = function() {};\r\n\r\n    if (xhrClass === global.XDomainRequest)\r\n      CORS._pending.add({id: id, xhr: xhr});\r\n\r\n    xhr.send(this.encode(messages));\r\n    return xhr;\r\n  }\r\n}), {\r\n  _id:      0,\r\n  _pending: new Set(),\r\n\r\n  isUsable: function(dispatcher, endpoint, callback, context) {\r\n    if (URI.isSameOrigin(endpoint))\r\n      return callback.call(context, false);\r\n\r\n    if (global.XDomainRequest)\r\n      return callback.call(context, endpoint.protocol === location.protocol);\r\n\r\n    if (global.XMLHttpRequest) {\r\n      var xhr = new XMLHttpRequest();\r\n      return callback.call(context, xhr.withCredentials !== undefined);\r\n    }\r\n    return callback.call(context, false);\r\n  }\r\n});\r\n\r\nmodule.exports = CORS;\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"../util/class\":71,\"../util/extend\":76,\"../util/set\":78,\"../util/to_json\":79,\"../util/uri\":80,\"./transport\":66}],64:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\nvar Class      = require('../util/class'),\r\n    URI        = require('../util/uri'),\r\n    copyObject = require('../util/copy_object'),\r\n    extend     = require('../util/extend'),\r\n    Deferrable = require('../mixins/deferrable'),\r\n    Transport  = require('./transport'),\r\n    XHR        = require('./xhr');\r\n\r\nvar EventSource = extend(Class(Transport, {\r\n  initialize: function(dispatcher, endpoint) {\r\n    Transport.prototype.initialize.call(this, dispatcher, endpoint);\r\n    if (!global.EventSource) return this.setDeferredStatus('failed');\r\n\r\n    this._xhr = new XHR(dispatcher, endpoint);\r\n\r\n    endpoint = copyObject(endpoint);\r\n    endpoint.pathname += '/' + dispatcher.clientId;\r\n\r\n    var socket = new global.EventSource(URI.stringify(endpoint)),\r\n        self   = this;\r\n\r\n    socket.onopen = function() {\r\n      self._everConnected = true;\r\n      self.setDeferredStatus('succeeded');\r\n    };\r\n\r\n    socket.onerror = function() {\r\n      if (self._everConnected) {\r\n        self._handleError([]);\r\n      } else {\r\n        self.setDeferredStatus('failed');\r\n        socket.close();\r\n      }\r\n    };\r\n\r\n    socket.onmessage = function(event) {\r\n      var replies;\r\n      try { replies = JSON.parse(event.data) } catch (error) {}\r\n\r\n      if (replies)\r\n        self._receive(replies);\r\n      else\r\n        self._handleError([]);\r\n    };\r\n\r\n    this._socket = socket;\r\n  },\r\n\r\n  close: function() {\r\n    if (!this._socket) return;\r\n    this._socket.onopen = this._socket.onerror = this._socket.onmessage = null;\r\n    this._socket.close();\r\n    delete this._socket;\r\n  },\r\n\r\n  isUsable: function(callback, context) {\r\n    this.callback(function() { callback.call(context, true) });\r\n    this.errback(function() { callback.call(context, false) });\r\n  },\r\n\r\n  encode: function(messages) {\r\n    return this._xhr.encode(messages);\r\n  },\r\n\r\n  request: function(messages) {\r\n    return this._xhr.request(messages);\r\n  }\r\n\r\n}), {\r\n  isUsable: function(dispatcher, endpoint, callback, context) {\r\n    var id = dispatcher.clientId;\r\n    if (!id) return callback.call(context, false);\r\n\r\n    XHR.isUsable(dispatcher, endpoint, function(usable) {\r\n      if (!usable) return callback.call(context, false);\r\n      this.create(dispatcher, endpoint).isUsable(callback, context);\r\n    }, this);\r\n  },\r\n\r\n  create: function(dispatcher, endpoint) {\r\n    var sockets = dispatcher.transports.eventsource = dispatcher.transports.eventsource || {},\r\n        id      = dispatcher.clientId;\r\n\r\n    var url = copyObject(endpoint);\r\n    url.pathname += '/' + (id || '');\r\n    url = URI.stringify(url);\r\n\r\n    sockets[url] = sockets[url] || new this(dispatcher, endpoint);\r\n    return sockets[url];\r\n  }\r\n});\r\n\r\nextend(EventSource.prototype, Deferrable);\r\n\r\nmodule.exports = EventSource;\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"../mixins/deferrable\":49,\"../util/class\":71,\"../util/copy_object\":74,\"../util/extend\":76,\"../util/uri\":80,\"./transport\":66,\"./xhr\":68}],65:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\nvar Class      = require('../util/class'),\r\n    URI        = require('../util/uri'),\r\n    copyObject = require('../util/copy_object'),\r\n    extend     = require('../util/extend'),\r\n    toJSON     = require('../util/to_json'),\r\n    Transport  = require('./transport');\r\n\r\nvar JSONP = extend(Class(Transport, {\r\n encode: function(messages) {\r\n    var url = copyObject(this.endpoint);\r\n    url.query.message = toJSON(messages);\r\n    url.query.jsonp   = '__jsonp' + JSONP._cbCount + '__';\r\n    return URI.stringify(url);\r\n  },\r\n\r\n  request: function(messages) {\r\n    var head         = document.getElementsByTagName('head')[0],\r\n        script       = document.createElement('script'),\r\n        callbackName = JSONP.getCallbackName(),\r\n        endpoint     = copyObject(this.endpoint),\r\n        self         = this;\r\n\r\n    endpoint.query.message = toJSON(messages);\r\n    endpoint.query.jsonp   = callbackName;\r\n\r\n    var cleanup = function() {\r\n      if (!global[callbackName]) return false;\r\n      global[callbackName] = undefined;\r\n      try { delete global[callbackName] } catch (error) {}\r\n      script.parentNode.removeChild(script);\r\n    };\r\n\r\n    global[callbackName] = function(replies) {\r\n      cleanup();\r\n      self._receive(replies);\r\n    };\r\n\r\n    script.type = 'text/javascript';\r\n    script.src  = URI.stringify(endpoint);\r\n    head.appendChild(script);\r\n\r\n    script.onerror = function() {\r\n      cleanup();\r\n      self._handleError(messages);\r\n    };\r\n\r\n    return {abort: cleanup};\r\n  }\r\n}), {\r\n  _cbCount: 0,\r\n\r\n  getCallbackName: function() {\r\n    this._cbCount += 1;\r\n    return '__jsonp' + this._cbCount + '__';\r\n  },\r\n\r\n  isUsable: function(dispatcher, endpoint, callback, context) {\r\n    callback.call(context, true);\r\n  }\r\n});\r\n\r\nmodule.exports = JSONP;\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"../util/class\":71,\"../util/copy_object\":74,\"../util/extend\":76,\"../util/to_json\":79,\"../util/uri\":80,\"./transport\":66}],66:[function(require,module,exports){\r\n(function (process){\r\n'use strict';\r\n\r\nvar Class    = require('../util/class'),\r\n    Cookie   = require('../util/cookies').Cookie,\r\n    Promise  = require('../util/promise'),\r\n    URI      = require('../util/uri'),\r\n    array    = require('../util/array'),\r\n    extend   = require('../util/extend'),\r\n    Logging  = require('../mixins/logging'),\r\n    Timeouts = require('../mixins/timeouts'),\r\n    Channel  = require('../protocol/channel');\r\n\r\nvar Transport = extend(Class({ className: 'Transport',\r\n  DEFAULT_PORTS: {'http:': 80, 'https:': 443, 'ws:': 80, 'wss:': 443},\r\n  MAX_DELAY:     0,\r\n\r\n  batching:  true,\r\n\r\n  initialize: function(dispatcher, endpoint) {\r\n    this._dispatcher = dispatcher;\r\n    this.endpoint    = endpoint;\r\n    this._outbox     = [];\r\n    this._proxy      = extend({}, this._dispatcher.proxy);\r\n\r\n    if (!this._proxy.origin)\r\n      this._proxy.origin = this._findProxy();\r\n  },\r\n\r\n  close: function() {},\r\n\r\n  encode: function(messages) {\r\n    return '';\r\n  },\r\n\r\n  sendMessage: function(message) {\r\n    this.debug('Client ? sending message to ?: ?',\r\n               this._dispatcher.clientId, URI.stringify(this.endpoint), message);\r\n\r\n    if (!this.batching) return Promise.resolve(this.request([message]));\r\n\r\n    this._outbox.push(message);\r\n    this._flushLargeBatch();\r\n\r\n    if (message.channel === Channel.HANDSHAKE)\r\n      return this._publish(0.01);\r\n\r\n    if (message.channel === Channel.CONNECT)\r\n      this._connectMessage = message;\r\n\r\n    return this._publish(this.MAX_DELAY);\r\n  },\r\n\r\n  _makePromise: function() {\r\n    var self = this;\r\n\r\n    this._requestPromise = this._requestPromise || new Promise(function(resolve) {\r\n      self._resolvePromise = resolve;\r\n    });\r\n  },\r\n\r\n  _publish: function(delay) {\r\n    this._makePromise();\r\n\r\n    this.addTimeout('publish', delay, function() {\r\n      this._flush();\r\n      delete this._requestPromise;\r\n    }, this);\r\n\r\n    return this._requestPromise;\r\n  },\r\n\r\n  _flush: function() {\r\n    this.removeTimeout('publish');\r\n\r\n    if (this._outbox.length > 1 && this._connectMessage)\r\n      this._connectMessage.advice = {timeout: 0};\r\n\r\n    this._resolvePromise(this.request(this._outbox));\r\n\r\n    this._connectMessage = null;\r\n    this._outbox = [];\r\n  },\r\n\r\n  _flushLargeBatch: function() {\r\n    var string = this.encode(this._outbox);\r\n    if (string.length < this._dispatcher.maxRequestSize) return;\r\n    var last = this._outbox.pop();\r\n\r\n    this._makePromise();\r\n    this._flush();\r\n\r\n    if (last) this._outbox.push(last);\r\n  },\r\n\r\n  _receive: function(replies) {\r\n    if (!replies) return;\r\n    replies = [].concat(replies);\r\n\r\n    this.debug('Client ? received from ? via ?: ?',\r\n               this._dispatcher.clientId, URI.stringify(this.endpoint), this.connectionType, replies);\r\n\r\n    for (var i = 0, n = replies.length; i < n; i++)\r\n      this._dispatcher.handleResponse(replies[i]);\r\n  },\r\n\r\n  _handleError: function(messages, immediate) {\r\n    messages = [].concat(messages);\r\n\r\n    this.debug('Client ? failed to send to ? via ?: ?',\r\n               this._dispatcher.clientId, URI.stringify(this.endpoint), this.connectionType, messages);\r\n\r\n    for (var i = 0, n = messages.length; i < n; i++)\r\n      this._dispatcher.handleError(messages[i]);\r\n  },\r\n\r\n  _getCookies: function() {\r\n    var cookies = this._dispatcher.cookies,\r\n        url     = URI.stringify(this.endpoint);\r\n\r\n    if (!cookies) return '';\r\n\r\n    return array.map(cookies.getCookiesSync(url), function(cookie) {\r\n      return cookie.cookieString();\r\n    }).join('; ');\r\n  },\r\n\r\n  _storeCookies: function(setCookie) {\r\n    var cookies = this._dispatcher.cookies,\r\n        url     = URI.stringify(this.endpoint),\r\n        cookie;\r\n\r\n    if (!setCookie || !cookies) return;\r\n    setCookie = [].concat(setCookie);\r\n\r\n    for (var i = 0, n = setCookie.length; i < n; i++) {\r\n      cookie = Cookie.parse(setCookie[i]);\r\n      cookies.setCookieSync(cookie, url);\r\n    }\r\n  },\r\n\r\n  _findProxy: function() {\r\n    if (typeof process === 'undefined') return undefined;\r\n\r\n    var protocol = this.endpoint.protocol;\r\n    if (!protocol) return undefined;\r\n\r\n    var name   = protocol.replace(/:$/, '').toLowerCase() + '_proxy',\r\n        upcase = name.toUpperCase(),\r\n        env    = process.env,\r\n        keys, proxy;\r\n\r\n    if (name === 'http_proxy' && env.REQUEST_METHOD) {\r\n      keys = Object.keys(env).filter(function(k) { return /^http_proxy$/i.test(k) });\r\n      if (keys.length === 1) {\r\n        if (keys[0] === name && env[upcase] === undefined)\r\n          proxy = env[name];\r\n      } else if (keys.length > 1) {\r\n        proxy = env[name];\r\n      }\r\n      proxy = proxy || env['CGI_' + upcase];\r\n    } else {\r\n      proxy = env[name] || env[upcase];\r\n      if (proxy && !env[name])\r\n        console.warn('The environment variable ' + upcase +\r\n                     ' is discouraged. Use ' + name + '.');\r\n    }\r\n    return proxy;\r\n  }\r\n\r\n}), {\r\n  get: function(dispatcher, allowed, disabled, callback, context) {\r\n    var endpoint = dispatcher.endpoint;\r\n\r\n    array.asyncEach(this._transports, function(pair, resume) {\r\n      var connType     = pair[0], klass = pair[1],\r\n          connEndpoint = dispatcher.endpointFor(connType);\r\n\r\n      if (array.indexOf(disabled, connType) >= 0)\r\n        return resume();\r\n\r\n      if (array.indexOf(allowed, connType) < 0) {\r\n        klass.isUsable(dispatcher, connEndpoint, function() {});\r\n        return resume();\r\n      }\r\n\r\n      klass.isUsable(dispatcher, connEndpoint, function(isUsable) {\r\n        if (!isUsable) return resume();\r\n        var transport = klass.hasOwnProperty('create') ? klass.create(dispatcher, connEndpoint) : new klass(dispatcher, connEndpoint);\r\n        callback.call(context, transport);\r\n      });\r\n    }, function() {\r\n      throw new Error('Could not find a usable connection type for ' + URI.stringify(endpoint));\r\n    });\r\n  },\r\n\r\n  register: function(type, klass) {\r\n    this._transports.push([type, klass]);\r\n    klass.prototype.connectionType = type;\r\n  },\r\n\r\n  getConnectionTypes: function() {\r\n    return array.map(this._transports, function(t) { return t[0] });\r\n  },\r\n\r\n  _transports: []\r\n});\r\n\r\nextend(Transport.prototype, Logging);\r\nextend(Transport.prototype, Timeouts);\r\n\r\nmodule.exports = Transport;\r\n\r\n}).call(this,require('_process'))\r\n\r\n},{\"../mixins/logging\":50,\"../mixins/timeouts\":52,\"../protocol/channel\":53,\"../util/array\":69,\"../util/class\":71,\"../util/cookies\":73,\"../util/extend\":76,\"../util/promise\":77,\"../util/uri\":80,\"_process\":91}],67:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\nvar Class      = require('../util/class'),\r\n    Promise    = require('../util/promise'),\r\n    Set        = require('../util/set'),\r\n    URI        = require('../util/uri'),\r\n    browser    = require('../util/browser'),\r\n    copyObject = require('../util/copy_object'),\r\n    extend     = require('../util/extend'),\r\n    toJSON     = require('../util/to_json'),\r\n    ws         = require('../util/websocket'),\r\n    Deferrable = require('../mixins/deferrable'),\r\n    Transport  = require('./transport');\r\n\r\nvar WebSocket = extend(Class(Transport, {\r\n  UNCONNECTED:  1,\r\n  CONNECTING:   2,\r\n  CONNECTED:    3,\r\n\r\n  batching:     false,\r\n\r\n  isUsable: function(callback, context) {\r\n    this.callback(function() { callback.call(context, true) });\r\n    this.errback(function() { callback.call(context, false) });\r\n    this.connect();\r\n  },\r\n\r\n  request: function(messages) {\r\n    this._pending = this._pending || new Set();\r\n    for (var i = 0, n = messages.length; i < n; i++) this._pending.add(messages[i]);\r\n\r\n    var self = this;\r\n\r\n    var promise = new Promise(function(resolve, reject) {\r\n      self.callback(function(socket) {\r\n        if (!socket || socket.readyState !== 1) return;\r\n        socket.send(toJSON(messages));\r\n        resolve(socket);\r\n      });\r\n\r\n      self.connect();\r\n    });\r\n\r\n    return {\r\n      abort: function() { promise.then(function(ws) { ws.close() }) }\r\n    };\r\n  },\r\n\r\n  connect: function() {\r\n    if (WebSocket._unloaded) return;\r\n\r\n    this._state = this._state || this.UNCONNECTED;\r\n    if (this._state !== this.UNCONNECTED) return;\r\n    this._state = this.CONNECTING;\r\n\r\n    var socket = this._createSocket();\r\n    if (!socket) return this.setDeferredStatus('failed');\r\n\r\n    var self = this;\r\n\r\n    socket.onopen = function() {\r\n      if (socket.headers) self._storeCookies(socket.headers['set-cookie']);\r\n      self._socket = socket;\r\n      self._state = self.CONNECTED;\r\n      self._everConnected = true;\r\n      self._ping();\r\n      self.setDeferredStatus('succeeded', socket);\r\n    };\r\n\r\n    var closed = false;\r\n    socket.onclose = socket.onerror = function() {\r\n      if (closed) return;\r\n      closed = true;\r\n\r\n      var wasConnected = (self._state === self.CONNECTED);\r\n      socket.onopen = socket.onclose = socket.onerror = socket.onmessage = null;\r\n\r\n      delete self._socket;\r\n      self._state = self.UNCONNECTED;\r\n      self.removeTimeout('ping');\r\n\r\n      var pending = self._pending ? self._pending.toArray() : [];\r\n      delete self._pending;\r\n\r\n      if (wasConnected || self._everConnected) {\r\n        self.setDeferredStatus('unknown');\r\n        self._handleError(pending, wasConnected);\r\n      } else {\r\n        self.setDeferredStatus('failed');\r\n      }\r\n    };\r\n\r\n    socket.onmessage = function(event) {\r\n      var replies;\r\n      try { replies = JSON.parse(event.data) } catch (error) {}\r\n\r\n      if (!replies) return;\r\n\r\n      replies = [].concat(replies);\r\n\r\n      for (var i = 0, n = replies.length; i < n; i++) {\r\n        if (replies[i].successful === undefined) continue;\r\n        self._pending.remove(replies[i]);\r\n      }\r\n      self._receive(replies);\r\n    };\r\n  },\r\n\r\n  close: function() {\r\n    if (!this._socket) return;\r\n    this._socket.close();\r\n  },\r\n\r\n  _createSocket: function() {\r\n    var url        = WebSocket.getSocketUrl(this.endpoint),\r\n        headers    = this._dispatcher.headers,\r\n        extensions = this._dispatcher.wsExtensions,\r\n        cookie     = this._getCookies(),\r\n        tls        = this._dispatcher.tls,\r\n        options    = {extensions: extensions, headers: headers, proxy: this._proxy, tls: tls};\r\n\r\n    if (cookie !== '') options.headers['Cookie'] = cookie;\r\n\r\n    return ws.create(url, [], options);\r\n  },\r\n\r\n  _ping: function() {\r\n    if (!this._socket || this._socket.readyState !== 1) return;\r\n    this._socket.send('[]');\r\n    this.addTimeout('ping', this._dispatcher.timeout / 2, this._ping, this);\r\n  }\r\n\r\n}), {\r\n  PROTOCOLS: {\r\n    'http:':  'ws:',\r\n    'https:': 'wss:'\r\n  },\r\n\r\n  create: function(dispatcher, endpoint) {\r\n    var sockets = dispatcher.transports.websocket = dispatcher.transports.websocket || {};\r\n    sockets[endpoint.href] = sockets[endpoint.href] || new this(dispatcher, endpoint);\r\n    return sockets[endpoint.href];\r\n  },\r\n\r\n  getSocketUrl: function(endpoint) {\r\n    endpoint = copyObject(endpoint);\r\n    endpoint.protocol = this.PROTOCOLS[endpoint.protocol];\r\n    return URI.stringify(endpoint);\r\n  },\r\n\r\n  isUsable: function(dispatcher, endpoint, callback, context) {\r\n    this.create(dispatcher, endpoint).isUsable(callback, context);\r\n  }\r\n});\r\n\r\nextend(WebSocket.prototype, Deferrable);\r\n\r\nif (browser.Event && global.onbeforeunload !== undefined)\r\n  browser.Event.on(global, 'beforeunload', function() { WebSocket._unloaded = true });\r\n\r\nmodule.exports = WebSocket;\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"../mixins/deferrable\":49,\"../util/browser\":70,\"../util/class\":71,\"../util/copy_object\":74,\"../util/extend\":76,\"../util/promise\":77,\"../util/set\":78,\"../util/to_json\":79,\"../util/uri\":80,\"../util/websocket\":82,\"./transport\":66}],68:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\nvar Class     = require('../util/class'),\r\n    URI       = require('../util/uri'),\r\n    browser   = require('../util/browser'),\r\n    extend    = require('../util/extend'),\r\n    toJSON    = require('../util/to_json'),\r\n    Transport = require('./transport');\r\n\r\nvar XHR = extend(Class(Transport, {\r\n  encode: function(messages) {\r\n    return toJSON(messages);\r\n  },\r\n\r\n  request: function(messages) {\r\n    var href = this.endpoint.href,\r\n        self = this,\r\n        xhr;\r\n\r\n    // Prefer XMLHttpRequest over ActiveXObject if they both exist\r\n    if (global.XMLHttpRequest) {\r\n      xhr = new XMLHttpRequest();\r\n    } else if (global.ActiveXObject) {\r\n      xhr = new ActiveXObject('Microsoft.XMLHTTP');\r\n    } else {\r\n      return this._handleError(messages);\r\n    }\r\n\r\n    xhr.open('POST', href, true);\r\n    xhr.setRequestHeader('Content-Type', 'application/json');\r\n    xhr.setRequestHeader('Pragma', 'no-cache');\r\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n\r\n    var headers = this._dispatcher.headers;\r\n    for (var key in headers) {\r\n      if (!headers.hasOwnProperty(key)) continue;\r\n      xhr.setRequestHeader(key, headers[key]);\r\n    }\r\n\r\n    var abort = function() { xhr.abort() };\r\n    if (global.onbeforeunload !== undefined)\r\n      browser.Event.on(global, 'beforeunload', abort);\r\n\r\n    xhr.onreadystatechange = function() {\r\n      if (!xhr || xhr.readyState !== 4) return;\r\n\r\n      var replies    = null,\r\n          status     = xhr.status,\r\n          text       = xhr.responseText,\r\n          successful = (status >= 200 && status < 300) || status === 304 || status === 1223;\r\n\r\n      if (global.onbeforeunload !== undefined)\r\n        browser.Event.detach(global, 'beforeunload', abort);\r\n\r\n      xhr.onreadystatechange = function() {};\r\n      xhr = null;\r\n\r\n      if (!successful) return self._handleError(messages);\r\n\r\n      try {\r\n        replies = JSON.parse(text);\r\n      } catch (error) {}\r\n\r\n      if (replies)\r\n        self._receive(replies);\r\n      else\r\n        self._handleError(messages);\r\n    };\r\n\r\n    xhr.send(this.encode(messages));\r\n    return xhr;\r\n  }\r\n}), {\r\n  isUsable: function(dispatcher, endpoint, callback, context) {\r\n    var usable = (navigator.product === 'ReactNative')\r\n              || URI.isSameOrigin(endpoint);\r\n\r\n    callback.call(context, usable);\r\n  }\r\n});\r\n\r\nmodule.exports = XHR;\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"../util/browser\":70,\"../util/class\":71,\"../util/extend\":76,\"../util/to_json\":79,\"../util/uri\":80,\"./transport\":66}],69:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = {\r\n  commonElement: function(lista, listb) {\r\n    for (var i = 0, n = lista.length; i < n; i++) {\r\n      if (this.indexOf(listb, lista[i]) !== -1)\r\n        return lista[i];\r\n    }\r\n    return null;\r\n  },\r\n\r\n  indexOf: function(list, needle) {\r\n    if (list.indexOf) return list.indexOf(needle);\r\n\r\n    for (var i = 0, n = list.length; i < n; i++) {\r\n      if (list[i] === needle) return i;\r\n    }\r\n    return -1;\r\n  },\r\n\r\n  map: function(object, callback, context) {\r\n    if (object.map) return object.map(callback, context);\r\n    var result = [];\r\n\r\n    if (object instanceof Array) {\r\n      for (var i = 0, n = object.length; i < n; i++) {\r\n        result.push(callback.call(context || null, object[i], i));\r\n      }\r\n    } else {\r\n      for (var key in object) {\r\n        if (!object.hasOwnProperty(key)) continue;\r\n        result.push(callback.call(context || null, key, object[key]));\r\n      }\r\n    }\r\n    return result;\r\n  },\r\n\r\n  filter: function(array, callback, context) {\r\n    if (array.filter) return array.filter(callback, context);\r\n    var result = [];\r\n    for (var i = 0, n = array.length; i < n; i++) {\r\n      if (callback.call(context || null, array[i], i))\r\n        result.push(array[i]);\r\n    }\r\n    return result;\r\n  },\r\n\r\n  asyncEach: function(list, iterator, callback, context) {\r\n    var n       = list.length,\r\n        i       = -1,\r\n        calls   = 0,\r\n        looping = false;\r\n\r\n    var iterate = function() {\r\n      calls -= 1;\r\n      i += 1;\r\n      if (i === n) return callback && callback.call(context);\r\n      iterator(list[i], resume);\r\n    };\r\n\r\n    var loop = function() {\r\n      if (looping) return;\r\n      looping = true;\r\n      while (calls > 0) iterate();\r\n      looping = false;\r\n    };\r\n\r\n    var resume = function() {\r\n      calls += 1;\r\n      loop();\r\n    };\r\n    resume();\r\n  }\r\n};\r\n\r\n},{}],70:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\nvar Event = {\r\n  _registry: [],\r\n\r\n  on: function(element, eventName, callback, context) {\r\n    var wrapped = function() { callback.call(context) };\r\n\r\n    if (element.addEventListener)\r\n      element.addEventListener(eventName, wrapped, false);\r\n    else\r\n      element.attachEvent('on' + eventName, wrapped);\r\n\r\n    this._registry.push({\r\n      _element:   element,\r\n      _type:      eventName,\r\n      _callback:  callback,\r\n      _context:     context,\r\n      _handler:   wrapped\r\n    });\r\n  },\r\n\r\n  detach: function(element, eventName, callback, context) {\r\n    var i = this._registry.length, register;\r\n    while (i--) {\r\n      register = this._registry[i];\r\n\r\n      if ((element    && element    !== register._element)  ||\r\n          (eventName  && eventName  !== register._type)     ||\r\n          (callback   && callback   !== register._callback) ||\r\n          (context    && context    !== register._context))\r\n        continue;\r\n\r\n      if (register._element.removeEventListener)\r\n        register._element.removeEventListener(register._type, register._handler, false);\r\n      else\r\n        register._element.detachEvent('on' + register._type, register._handler);\r\n\r\n      this._registry.splice(i,1);\r\n      register = null;\r\n    }\r\n  }\r\n};\r\n\r\nif (global.onunload !== undefined)\r\n  Event.on(global, 'unload', Event.detach, Event);\r\n\r\nmodule.exports = {\r\n  Event: Event\r\n};\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{}],71:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar extend = require('./extend');\r\n\r\nmodule.exports = function(parent, methods) {\r\n  if (typeof parent !== 'function') {\r\n    methods = parent;\r\n    parent  = Object;\r\n  }\r\n\r\n  var klass = function() {\r\n    if (!this.initialize) return this;\r\n    return this.initialize.apply(this, arguments) || this;\r\n  };\r\n\r\n  var bridge = function() {};\r\n  bridge.prototype = parent.prototype;\r\n\r\n  klass.prototype = new bridge();\r\n  extend(klass.prototype, methods);\r\n\r\n  return klass;\r\n};\r\n\r\n},{\"./extend\":76}],72:[function(require,module,exports){\r\nmodule.exports = {\r\n  VERSION:          '1.2.4',\r\n\r\n  BAYEUX_VERSION:   '1.0',\r\n  ID_LENGTH:        160,\r\n  JSONP_CALLBACK:   'jsonpcallback',\r\n  CONNECTION_TYPES: ['long-polling', 'cross-origin-long-polling', 'callback-polling', 'websocket', 'eventsource', 'in-process'],\r\n\r\n  MANDATORY_CONNECTION_TYPES: ['long-polling', 'callback-polling', 'in-process']\r\n};\r\n\r\n},{}],73:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = {};\r\n\r\n},{}],74:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar copyObject = function(object) {\r\n  var clone, i, key;\r\n  if (object instanceof Array) {\r\n    clone = [];\r\n    i = object.length;\r\n    while (i--) clone[i] = copyObject(object[i]);\r\n    return clone;\r\n  } else if (typeof object === 'object') {\r\n    clone = (object === null) ? null : {};\r\n    for (key in object) clone[key] = copyObject(object[key]);\r\n    return clone;\r\n  } else {\r\n    return object;\r\n  }\r\n};\r\n\r\nmodule.exports = copyObject;\r\n\r\n},{}],75:[function(require,module,exports){\r\n/*\r\nCopyright Joyent, Inc. and other Node contributors. All rights reserved.\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of\r\nthis software and associated documentation files (the \"Software\"), to deal in\r\nthe Software without restriction, including without limitation the rights to\r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\nof the Software, and to permit persons to whom the Software is furnished to do\r\nso, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n*/\r\n\r\nvar isArray = typeof Array.isArray === 'function'\r\n    ? Array.isArray\r\n    : function (xs) {\r\n        return Object.prototype.toString.call(xs) === '[object Array]'\r\n    }\r\n;\r\nfunction indexOf (xs, x) {\r\n    if (xs.indexOf) return xs.indexOf(x);\r\n    for (var i = 0; i < xs.length; i++) {\r\n        if (x === xs[i]) return i;\r\n    }\r\n    return -1;\r\n}\r\n\r\nfunction EventEmitter() {}\r\nmodule.exports = EventEmitter;\r\n\r\nEventEmitter.prototype.emit = function(type) {\r\n  // If there is no 'error' event listener then throw.\r\n  if (type === 'error') {\r\n    if (!this._events || !this._events.error ||\r\n        (isArray(this._events.error) && !this._events.error.length))\r\n    {\r\n      if (arguments[1] instanceof Error) {\r\n        throw arguments[1]; // Unhandled 'error' event\r\n      } else {\r\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (!this._events) return false;\r\n  var handler = this._events[type];\r\n  if (!handler) return false;\r\n\r\n  if (typeof handler == 'function') {\r\n    switch (arguments.length) {\r\n      // fast cases\r\n      case 1:\r\n        handler.call(this);\r\n        break;\r\n      case 2:\r\n        handler.call(this, arguments[1]);\r\n        break;\r\n      case 3:\r\n        handler.call(this, arguments[1], arguments[2]);\r\n        break;\r\n      // slower\r\n      default:\r\n        var args = Array.prototype.slice.call(arguments, 1);\r\n        handler.apply(this, args);\r\n    }\r\n    return true;\r\n\r\n  } else if (isArray(handler)) {\r\n    var args = Array.prototype.slice.call(arguments, 1);\r\n\r\n    var listeners = handler.slice();\r\n    for (var i = 0, l = listeners.length; i < l; i++) {\r\n      listeners[i].apply(this, args);\r\n    }\r\n    return true;\r\n\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n// EventEmitter is defined in src/node_events.cc\r\n// EventEmitter.prototype.emit() is also defined there.\r\nEventEmitter.prototype.addListener = function(type, listener) {\r\n  if ('function' !== typeof listener) {\r\n    throw new Error('addListener only takes instances of Function');\r\n  }\r\n\r\n  if (!this._events) this._events = {};\r\n\r\n  // To avoid recursion in the case that type == \"newListeners\"! Before\r\n  // adding it to the listeners, first emit \"newListeners\".\r\n  this.emit('newListener', type, listener);\r\n\r\n  if (!this._events[type]) {\r\n    // Optimize the case of one listener. Don't need the extra array object.\r\n    this._events[type] = listener;\r\n  } else if (isArray(this._events[type])) {\r\n    // If we've already got an array, just append.\r\n    this._events[type].push(listener);\r\n  } else {\r\n    // Adding the second element, need to change to array.\r\n    this._events[type] = [this._events[type], listener];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\r\n\r\nEventEmitter.prototype.once = function(type, listener) {\r\n  var self = this;\r\n  self.on(type, function g() {\r\n    self.removeListener(type, g);\r\n    listener.apply(this, arguments);\r\n  });\r\n\r\n  return this;\r\n};\r\n\r\nEventEmitter.prototype.removeListener = function(type, listener) {\r\n  if ('function' !== typeof listener) {\r\n    throw new Error('removeListener only takes instances of Function');\r\n  }\r\n\r\n  // does not use listeners(), so no side effect of creating _events[type]\r\n  if (!this._events || !this._events[type]) return this;\r\n\r\n  var list = this._events[type];\r\n\r\n  if (isArray(list)) {\r\n    var i = indexOf(list, listener);\r\n    if (i < 0) return this;\r\n    list.splice(i, 1);\r\n    if (list.length == 0)\r\n      delete this._events[type];\r\n  } else if (this._events[type] === listener) {\r\n    delete this._events[type];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\nEventEmitter.prototype.removeAllListeners = function(type) {\r\n  if (arguments.length === 0) {\r\n    this._events = {};\r\n    return this;\r\n  }\r\n\r\n  // does not use listeners(), so no side effect of creating _events[type]\r\n  if (type && this._events && this._events[type]) this._events[type] = null;\r\n  return this;\r\n};\r\n\r\nEventEmitter.prototype.listeners = function(type) {\r\n  if (!this._events) this._events = {};\r\n  if (!this._events[type]) this._events[type] = [];\r\n  if (!isArray(this._events[type])) {\r\n    this._events[type] = [this._events[type]];\r\n  }\r\n  return this._events[type];\r\n};\r\n\r\n},{}],76:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(dest, source, overwrite) {\r\n  if (!source) return dest;\r\n  for (var key in source) {\r\n    if (!source.hasOwnProperty(key)) continue;\r\n    if (dest.hasOwnProperty(key) && overwrite === false) continue;\r\n    if (dest[key] !== source[key])\r\n      dest[key] = source[key];\r\n  }\r\n  return dest;\r\n};\r\n\r\n},{}],77:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar asap = require('asap');\r\n\r\nvar PENDING   = 0,\r\n    FULFILLED = 1,\r\n    REJECTED  = 2;\r\n\r\nvar RETURN = function(x) { return x },\r\n    THROW  = function(x) { throw  x };\r\n\r\nvar Promise = function(task) {\r\n  this._state       = PENDING;\r\n  this._onFulfilled = [];\r\n  this._onRejected  = [];\r\n\r\n  if (typeof task !== 'function') return;\r\n  var self = this;\r\n\r\n  task(function(value)  { resolve(self, value) },\r\n       function(reason) { reject(self, reason) });\r\n};\r\n\r\nPromise.prototype.then = function(onFulfilled, onRejected) {\r\n  var next = new Promise();\r\n  registerOnFulfilled(this, onFulfilled, next);\r\n  registerOnRejected(this, onRejected, next);\r\n  return next;\r\n};\r\n\r\nPromise.prototype['catch'] = function(onRejected) {\r\n  return this.then(null, onRejected);\r\n};\r\n\r\nvar registerOnFulfilled = function(promise, onFulfilled, next) {\r\n  if (typeof onFulfilled !== 'function') onFulfilled = RETURN;\r\n  var handler = function(value) { invoke(onFulfilled, value, next) };\r\n\r\n  if (promise._state === PENDING) {\r\n    promise._onFulfilled.push(handler);\r\n  } else if (promise._state === FULFILLED) {\r\n    handler(promise._value);\r\n  }\r\n};\r\n\r\nvar registerOnRejected = function(promise, onRejected, next) {\r\n  if (typeof onRejected !== 'function') onRejected = THROW;\r\n  var handler = function(reason) { invoke(onRejected, reason, next) };\r\n\r\n  if (promise._state === PENDING) {\r\n    promise._onRejected.push(handler);\r\n  } else if (promise._state === REJECTED) {\r\n    handler(promise._reason);\r\n  }\r\n};\r\n\r\nvar invoke = function(fn, value, next) {\r\n  asap(function() { _invoke(fn, value, next) });\r\n};\r\n\r\nvar _invoke = function(fn, value, next) {\r\n  var outcome;\r\n\r\n  try {\r\n    outcome = fn(value);\r\n  } catch (error) {\r\n    return reject(next, error);\r\n  }\r\n\r\n  if (outcome === next) {\r\n    reject(next, new TypeError('Recursive promise chain detected'));\r\n  } else {\r\n    resolve(next, outcome);\r\n  }\r\n};\r\n\r\nvar resolve = function(promise, value) {\r\n  var called = false, type, then;\r\n\r\n  try {\r\n    type = typeof value;\r\n    then = value !== null && (type === 'function' || type === 'object') && value.then;\r\n\r\n    if (typeof then !== 'function') return fulfill(promise, value);\r\n\r\n    then.call(value, function(v) {\r\n      if (!(called ^ (called = true))) return;\r\n      resolve(promise, v);\r\n    }, function(r) {\r\n      if (!(called ^ (called = true))) return;\r\n      reject(promise, r);\r\n    });\r\n  } catch (error) {\r\n    if (!(called ^ (called = true))) return;\r\n    reject(promise, error);\r\n  }\r\n};\r\n\r\nvar fulfill = function(promise, value) {\r\n  if (promise._state !== PENDING) return;\r\n\r\n  promise._state      = FULFILLED;\r\n  promise._value      = value;\r\n  promise._onRejected = [];\r\n\r\n  var onFulfilled = promise._onFulfilled, fn;\r\n  while (fn = onFulfilled.shift()) fn(value);\r\n};\r\n\r\nvar reject = function(promise, reason) {\r\n  if (promise._state !== PENDING) return;\r\n\r\n  promise._state       = REJECTED;\r\n  promise._reason      = reason;\r\n  promise._onFulfilled = [];\r\n\r\n  var onRejected = promise._onRejected, fn;\r\n  while (fn = onRejected.shift()) fn(reason);\r\n};\r\n\r\nPromise.resolve = function(value) {\r\n  return new Promise(function(resolve, reject) { resolve(value) });\r\n};\r\n\r\nPromise.reject = function(reason) {\r\n  return new Promise(function(resolve, reject) { reject(reason) });\r\n};\r\n\r\nPromise.all = function(promises) {\r\n  return new Promise(function(resolve, reject) {\r\n    var list = [], n = promises.length, i;\r\n\r\n    if (n === 0) return resolve(list);\r\n\r\n    for (i = 0; i < n; i++) (function(promise, i) {\r\n      Promise.resolve(promise).then(function(value) {\r\n        list[i] = value;\r\n        if (--n === 0) resolve(list);\r\n      }, reject);\r\n    })(promises[i], i);\r\n  });\r\n};\r\n\r\nPromise.race = function(promises) {\r\n  return new Promise(function(resolve, reject) {\r\n    for (var i = 0, n = promises.length; i < n; i++)\r\n      Promise.resolve(promises[i]).then(resolve, reject);\r\n  });\r\n};\r\n\r\nPromise.deferred = Promise.pending = function() {\r\n  var tuple = {};\r\n\r\n  tuple.promise = new Promise(function(resolve, reject) {\r\n    tuple.resolve = resolve;\r\n    tuple.reject  = reject;\r\n  });\r\n  return tuple;\r\n};\r\n\r\nmodule.exports = Promise;\r\n\r\n},{\"asap\":37}],78:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar Class = require('./class');\r\n\r\nmodule.exports = Class({\r\n  initialize: function() {\r\n    this._index = {};\r\n  },\r\n\r\n  add: function(item) {\r\n    var key = (item.id !== undefined) ? item.id : item;\r\n    if (this._index.hasOwnProperty(key)) return false;\r\n    this._index[key] = item;\r\n    return true;\r\n  },\r\n\r\n  forEach: function(block, context) {\r\n    for (var key in this._index) {\r\n      if (this._index.hasOwnProperty(key))\r\n        block.call(context, this._index[key]);\r\n    }\r\n  },\r\n\r\n  isEmpty: function() {\r\n    for (var key in this._index) {\r\n      if (this._index.hasOwnProperty(key)) return false;\r\n    }\r\n    return true;\r\n  },\r\n\r\n  member: function(item) {\r\n    for (var key in this._index) {\r\n      if (this._index[key] === item) return true;\r\n    }\r\n    return false;\r\n  },\r\n\r\n  remove: function(item) {\r\n    var key = (item.id !== undefined) ? item.id : item;\r\n    var removed = this._index[key];\r\n    delete this._index[key];\r\n    return removed;\r\n  },\r\n\r\n  toArray: function() {\r\n    var array = [];\r\n    this.forEach(function(item) { array.push(item) });\r\n    return array;\r\n  }\r\n});\r\n\r\n},{\"./class\":71}],79:[function(require,module,exports){\r\n'use strict';\r\n\r\n// http://assanka.net/content/tech/2009/09/02/json2-js-vs-prototype/\r\n\r\nmodule.exports = function(object) {\r\n  return JSON.stringify(object, function(key, value) {\r\n    return (this[key] instanceof Array) ? this[key] : value;\r\n  });\r\n};\r\n\r\n},{}],80:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = {\r\n  isURI: function(uri) {\r\n    return uri && uri.protocol && uri.host && uri.path;\r\n  },\r\n\r\n  isSameOrigin: function(uri) {\r\n    return uri.protocol === location.protocol &&\r\n           uri.hostname === location.hostname &&\r\n           uri.port     === location.port;\r\n  },\r\n\r\n  parse: function(url) {\r\n    if (typeof url !== 'string') return url;\r\n    var uri = {}, parts, query, pairs, i, n, data;\r\n\r\n    var consume = function(name, pattern) {\r\n      url = url.replace(pattern, function(match) {\r\n        uri[name] = match;\r\n        return '';\r\n      });\r\n      uri[name] = uri[name] || '';\r\n    };\r\n\r\n    consume('protocol', /^[a-z]+\\:/i);\r\n    consume('host',     /^\\/\\/[^\\/\\?#]+/);\r\n\r\n    if (!/^\\//.test(url) && !uri.host)\r\n      url = location.pathname.replace(/[^\\/]*$/, '') + url;\r\n\r\n    consume('pathname', /^[^\\?#]*/);\r\n    consume('search',   /^\\?[^#]*/);\r\n    consume('hash',     /^#.*/);\r\n\r\n    uri.protocol = uri.protocol || location.protocol;\r\n\r\n    if (uri.host) {\r\n      uri.host     = uri.host.substr(2);\r\n      parts        = uri.host.split(':');\r\n      uri.hostname = parts[0];\r\n      uri.port     = parts[1] || '';\r\n    } else {\r\n      uri.host     = location.host;\r\n      uri.hostname = location.hostname;\r\n      uri.port     = location.port;\r\n    }\r\n\r\n    uri.pathname = uri.pathname || '/';\r\n    uri.path = uri.pathname + uri.search;\r\n\r\n    query = uri.search.replace(/^\\?/, '');\r\n    pairs = query ? query.split('&') : [];\r\n    data  = {};\r\n\r\n    for (i = 0, n = pairs.length; i < n; i++) {\r\n      parts = pairs[i].split('=');\r\n      data[decodeURIComponent(parts[0] || '')] = decodeURIComponent(parts[1] || '');\r\n    }\r\n\r\n    uri.query = data;\r\n\r\n    uri.href = this.stringify(uri);\r\n    return uri;\r\n  },\r\n\r\n  stringify: function(uri) {\r\n    var string = uri.protocol + '//' + uri.hostname;\r\n    if (uri.port) string += ':' + uri.port;\r\n    string += uri.pathname + this.queryString(uri.query) + (uri.hash || '');\r\n    return string;\r\n  },\r\n\r\n  queryString: function(query) {\r\n    var pairs = [];\r\n    for (var key in query) {\r\n      if (!query.hasOwnProperty(key)) continue;\r\n      pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(query[key]));\r\n    }\r\n    if (pairs.length === 0) return '';\r\n    return '?' + pairs.join('&');\r\n  }\r\n};\r\n\r\n},{}],81:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar array = require('./array');\r\n\r\nmodule.exports = function(options, validKeys) {\r\n  for (var key in options) {\r\n    if (array.indexOf(validKeys, key) < 0)\r\n      throw new Error('Unrecognized option: ' + key);\r\n  }\r\n};\r\n\r\n},{\"./array\":69}],82:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\nvar WS = global.MozWebSocket || global.WebSocket;\r\n\r\nmodule.exports = {\r\n  create: function(url, protocols, options) {\r\n    if (typeof WS !== 'function') return null;\r\n    return new WS(url);\r\n  }\r\n};\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{}],83:[function(require,module,exports){\r\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\r\n  var e, m\r\n  var eLen = (nBytes * 8) - mLen - 1\r\n  var eMax = (1 << eLen) - 1\r\n  var eBias = eMax >> 1\r\n  var nBits = -7\r\n  var i = isLE ? (nBytes - 1) : 0\r\n  var d = isLE ? -1 : 1\r\n  var s = buffer[offset + i]\r\n\r\n  i += d\r\n\r\n  e = s & ((1 << (-nBits)) - 1)\r\n  s >>= (-nBits)\r\n  nBits += eLen\r\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n  m = e & ((1 << (-nBits)) - 1)\r\n  e >>= (-nBits)\r\n  nBits += mLen\r\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n  if (e === 0) {\r\n    e = 1 - eBias\r\n  } else if (e === eMax) {\r\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\r\n  } else {\r\n    m = m + Math.pow(2, mLen)\r\n    e = e - eBias\r\n  }\r\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\r\n}\r\n\r\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\r\n  var e, m, c\r\n  var eLen = (nBytes * 8) - mLen - 1\r\n  var eMax = (1 << eLen) - 1\r\n  var eBias = eMax >> 1\r\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\r\n  var i = isLE ? 0 : (nBytes - 1)\r\n  var d = isLE ? 1 : -1\r\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\r\n\r\n  value = Math.abs(value)\r\n\r\n  if (isNaN(value) || value === Infinity) {\r\n    m = isNaN(value) ? 1 : 0\r\n    e = eMax\r\n  } else {\r\n    e = Math.floor(Math.log(value) / Math.LN2)\r\n    if (value * (c = Math.pow(2, -e)) < 1) {\r\n      e--\r\n      c *= 2\r\n    }\r\n    if (e + eBias >= 1) {\r\n      value += rt / c\r\n    } else {\r\n      value += rt * Math.pow(2, 1 - eBias)\r\n    }\r\n    if (value * c >= 2) {\r\n      e++\r\n      c /= 2\r\n    }\r\n\r\n    if (e + eBias >= eMax) {\r\n      m = 0\r\n      e = eMax\r\n    } else if (e + eBias >= 1) {\r\n      m = ((value * c) - 1) * Math.pow(2, mLen)\r\n      e = e + eBias\r\n    } else {\r\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\r\n      e = 0\r\n    }\r\n  }\r\n\r\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\r\n\r\n  e = (e << mLen) | m\r\n  eLen += mLen\r\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\r\n\r\n  buffer[offset + i - d] |= s * 128\r\n}\r\n\r\n},{}],84:[function(require,module,exports){\r\nif (typeof Object.create === 'function') {\r\n  // implementation from standard node.js 'util' module\r\n  module.exports = function inherits(ctor, superCtor) {\r\n    ctor.super_ = superCtor\r\n    ctor.prototype = Object.create(superCtor.prototype, {\r\n      constructor: {\r\n        value: ctor,\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true\r\n      }\r\n    });\r\n  };\r\n} else {\r\n  // old school shim for old browsers\r\n  module.exports = function inherits(ctor, superCtor) {\r\n    ctor.super_ = superCtor\r\n    var TempCtor = function () {}\r\n    TempCtor.prototype = superCtor.prototype\r\n    ctor.prototype = new TempCtor()\r\n    ctor.prototype.constructor = ctor\r\n  }\r\n}\r\n\r\n},{}],85:[function(require,module,exports){\r\n/*!\r\n * Determine if an object is a Buffer\r\n *\r\n * @author   Feross Aboukhadijeh <https://feross.org>\r\n * @license  MIT\r\n */\r\n\r\n// The _isBuffer check is for Safari 5-7 support, because it's missing\r\n// Object.prototype.constructor. Remove this eventually\r\nmodule.exports = function (obj) {\r\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\r\n}\r\n\r\nfunction isBuffer (obj) {\r\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\r\n}\r\n\r\n// For Node v0.10 support. Remove this eventually.\r\nfunction isSlowBuffer (obj) {\r\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\r\n}\r\n\r\n},{}],86:[function(require,module,exports){\r\nvar toString = {}.toString;\r\n\r\nmodule.exports = Array.isArray || function (arr) {\r\n  return toString.call(arr) == '[object Array]';\r\n};\r\n\r\n},{}],87:[function(require,module,exports){\r\n(function (global){\r\n/**\r\n * lodash (Custom Build) <https://lodash.com/>\r\n * Build: `lodash modularize exports=\"npm\" -o ./`\r\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\r\n * Released under MIT license <https://lodash.com/license>\r\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\r\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n */\r\n\r\n/** Used as the `TypeError` message for \"Functions\" methods. */\r\nvar FUNC_ERROR_TEXT = 'Expected a function';\r\n\r\n/** Used to stand-in for `undefined` hash values. */\r\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\r\n\r\n/** Used as references for various `Number` constants. */\r\nvar INFINITY = 1 / 0;\r\n\r\n/** `Object#toString` result references. */\r\nvar funcTag = '[object Function]',\r\n    genTag = '[object GeneratorFunction]',\r\n    symbolTag = '[object Symbol]';\r\n\r\n/** Used to match property names within property paths. */\r\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\r\n    reIsPlainProp = /^\\w*$/,\r\n    reLeadingDot = /^\\./,\r\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\r\n\r\n/**\r\n * Used to match `RegExp`\r\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\r\n */\r\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\r\n\r\n/** Used to match backslashes in property paths. */\r\nvar reEscapeChar = /\\\\(\\\\)?/g;\r\n\r\n/** Used to detect host constructors (Safari). */\r\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\r\n\r\n/** Detect free variable `global` from Node.js. */\r\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\r\n\r\n/** Detect free variable `self`. */\r\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\r\n\r\n/** Used as a reference to the global object. */\r\nvar root = freeGlobal || freeSelf || Function('return this')();\r\n\r\n/**\r\n * Gets the value at `key` of `object`.\r\n *\r\n * @private\r\n * @param {Object} [object] The object to query.\r\n * @param {string} key The key of the property to get.\r\n * @returns {*} Returns the property value.\r\n */\r\nfunction getValue(object, key) {\r\n  return object == null ? undefined : object[key];\r\n}\r\n\r\n/**\r\n * Checks if `value` is a host object in IE < 9.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\r\n */\r\nfunction isHostObject(value) {\r\n  // Many host objects are `Object` objects that can coerce to strings\r\n  // despite having improperly defined `toString` methods.\r\n  var result = false;\r\n  if (value != null && typeof value.toString != 'function') {\r\n    try {\r\n      result = !!(value + '');\r\n    } catch (e) {}\r\n  }\r\n  return result;\r\n}\r\n\r\n/** Used for built-in method references. */\r\nvar arrayProto = Array.prototype,\r\n    funcProto = Function.prototype,\r\n    objectProto = Object.prototype;\r\n\r\n/** Used to detect overreaching core-js shims. */\r\nvar coreJsData = root['__core-js_shared__'];\r\n\r\n/** Used to detect methods masquerading as native. */\r\nvar maskSrcKey = (function() {\r\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\r\n  return uid ? ('Symbol(src)_1.' + uid) : '';\r\n}());\r\n\r\n/** Used to resolve the decompiled source of functions. */\r\nvar funcToString = funcProto.toString;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Used to resolve the\r\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\r\n * of values.\r\n */\r\nvar objectToString = objectProto.toString;\r\n\r\n/** Used to detect if a method is native. */\r\nvar reIsNative = RegExp('^' +\r\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\r\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\r\n);\r\n\r\n/** Built-in value references. */\r\nvar Symbol = root.Symbol,\r\n    splice = arrayProto.splice;\r\n\r\n/* Built-in method references that are verified to be native. */\r\nvar Map = getNative(root, 'Map'),\r\n    nativeCreate = getNative(Object, 'create');\r\n\r\n/** Used to convert symbols to primitives and strings. */\r\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\r\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\r\n\r\n/**\r\n * Creates a hash object.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction Hash(entries) {\r\n  var index = -1,\r\n      length = entries ? entries.length : 0;\r\n\r\n  this.clear();\r\n  while (++index < length) {\r\n    var entry = entries[index];\r\n    this.set(entry[0], entry[1]);\r\n  }\r\n}\r\n\r\n/**\r\n * Removes all key-value entries from the hash.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf Hash\r\n */\r\nfunction hashClear() {\r\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\r\n}\r\n\r\n/**\r\n * Removes `key` and its value from the hash.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf Hash\r\n * @param {Object} hash The hash to modify.\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction hashDelete(key) {\r\n  return this.has(key) && delete this.__data__[key];\r\n}\r\n\r\n/**\r\n * Gets the hash value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf Hash\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction hashGet(key) {\r\n  var data = this.__data__;\r\n  if (nativeCreate) {\r\n    var result = data[key];\r\n    return result === HASH_UNDEFINED ? undefined : result;\r\n  }\r\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\r\n}\r\n\r\n/**\r\n * Checks if a hash value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf Hash\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction hashHas(key) {\r\n  var data = this.__data__;\r\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\r\n}\r\n\r\n/**\r\n * Sets the hash `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf Hash\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the hash instance.\r\n */\r\nfunction hashSet(key, value) {\r\n  var data = this.__data__;\r\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\r\n  return this;\r\n}\r\n\r\n// Add methods to `Hash`.\r\nHash.prototype.clear = hashClear;\r\nHash.prototype['delete'] = hashDelete;\r\nHash.prototype.get = hashGet;\r\nHash.prototype.has = hashHas;\r\nHash.prototype.set = hashSet;\r\n\r\n/**\r\n * Creates an list cache object.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction ListCache(entries) {\r\n  var index = -1,\r\n      length = entries ? entries.length : 0;\r\n\r\n  this.clear();\r\n  while (++index < length) {\r\n    var entry = entries[index];\r\n    this.set(entry[0], entry[1]);\r\n  }\r\n}\r\n\r\n/**\r\n * Removes all key-value entries from the list cache.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf ListCache\r\n */\r\nfunction listCacheClear() {\r\n  this.__data__ = [];\r\n}\r\n\r\n/**\r\n * Removes `key` and its value from the list cache.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf ListCache\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction listCacheDelete(key) {\r\n  var data = this.__data__,\r\n      index = assocIndexOf(data, key);\r\n\r\n  if (index < 0) {\r\n    return false;\r\n  }\r\n  var lastIndex = data.length - 1;\r\n  if (index == lastIndex) {\r\n    data.pop();\r\n  } else {\r\n    splice.call(data, index, 1);\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * Gets the list cache value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf ListCache\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction listCacheGet(key) {\r\n  var data = this.__data__,\r\n      index = assocIndexOf(data, key);\r\n\r\n  return index < 0 ? undefined : data[index][1];\r\n}\r\n\r\n/**\r\n * Checks if a list cache value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf ListCache\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction listCacheHas(key) {\r\n  return assocIndexOf(this.__data__, key) > -1;\r\n}\r\n\r\n/**\r\n * Sets the list cache `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf ListCache\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the list cache instance.\r\n */\r\nfunction listCacheSet(key, value) {\r\n  var data = this.__data__,\r\n      index = assocIndexOf(data, key);\r\n\r\n  if (index < 0) {\r\n    data.push([key, value]);\r\n  } else {\r\n    data[index][1] = value;\r\n  }\r\n  return this;\r\n}\r\n\r\n// Add methods to `ListCache`.\r\nListCache.prototype.clear = listCacheClear;\r\nListCache.prototype['delete'] = listCacheDelete;\r\nListCache.prototype.get = listCacheGet;\r\nListCache.prototype.has = listCacheHas;\r\nListCache.prototype.set = listCacheSet;\r\n\r\n/**\r\n * Creates a map cache object to store key-value pairs.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction MapCache(entries) {\r\n  var index = -1,\r\n      length = entries ? entries.length : 0;\r\n\r\n  this.clear();\r\n  while (++index < length) {\r\n    var entry = entries[index];\r\n    this.set(entry[0], entry[1]);\r\n  }\r\n}\r\n\r\n/**\r\n * Removes all key-value entries from the map.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf MapCache\r\n */\r\nfunction mapCacheClear() {\r\n  this.__data__ = {\r\n    'hash': new Hash,\r\n    'map': new (Map || ListCache),\r\n    'string': new Hash\r\n  };\r\n}\r\n\r\n/**\r\n * Removes `key` and its value from the map.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf MapCache\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction mapCacheDelete(key) {\r\n  return getMapData(this, key)['delete'](key);\r\n}\r\n\r\n/**\r\n * Gets the map value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf MapCache\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction mapCacheGet(key) {\r\n  return getMapData(this, key).get(key);\r\n}\r\n\r\n/**\r\n * Checks if a map value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf MapCache\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction mapCacheHas(key) {\r\n  return getMapData(this, key).has(key);\r\n}\r\n\r\n/**\r\n * Sets the map `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf MapCache\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the map cache instance.\r\n */\r\nfunction mapCacheSet(key, value) {\r\n  getMapData(this, key).set(key, value);\r\n  return this;\r\n}\r\n\r\n// Add methods to `MapCache`.\r\nMapCache.prototype.clear = mapCacheClear;\r\nMapCache.prototype['delete'] = mapCacheDelete;\r\nMapCache.prototype.get = mapCacheGet;\r\nMapCache.prototype.has = mapCacheHas;\r\nMapCache.prototype.set = mapCacheSet;\r\n\r\n/**\r\n * Gets the index at which the `key` is found in `array` of key-value pairs.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {*} key The key to search for.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n */\r\nfunction assocIndexOf(array, key) {\r\n  var length = array.length;\r\n  while (length--) {\r\n    if (eq(array[length][0], key)) {\r\n      return length;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\n/**\r\n * The base implementation of `_.get` without support for default values.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {Array|string} path The path of the property to get.\r\n * @returns {*} Returns the resolved value.\r\n */\r\nfunction baseGet(object, path) {\r\n  path = isKey(path, object) ? [path] : castPath(path);\r\n\r\n  var index = 0,\r\n      length = path.length;\r\n\r\n  while (object != null && index < length) {\r\n    object = object[toKey(path[index++])];\r\n  }\r\n  return (index && index == length) ? object : undefined;\r\n}\r\n\r\n/**\r\n * The base implementation of `_.isNative` without bad shim checks.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a native function,\r\n *  else `false`.\r\n */\r\nfunction baseIsNative(value) {\r\n  if (!isObject(value) || isMasked(value)) {\r\n    return false;\r\n  }\r\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\r\n  return pattern.test(toSource(value));\r\n}\r\n\r\n/**\r\n * The base implementation of `_.toString` which doesn't convert nullish\r\n * values to empty strings.\r\n *\r\n * @private\r\n * @param {*} value The value to process.\r\n * @returns {string} Returns the string.\r\n */\r\nfunction baseToString(value) {\r\n  // Exit early for strings to avoid a performance hit in some environments.\r\n  if (typeof value == 'string') {\r\n    return value;\r\n  }\r\n  if (isSymbol(value)) {\r\n    return symbolToString ? symbolToString.call(value) : '';\r\n  }\r\n  var result = (value + '');\r\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\r\n}\r\n\r\n/**\r\n * Casts `value` to a path array if it's not one.\r\n *\r\n * @private\r\n * @param {*} value The value to inspect.\r\n * @returns {Array} Returns the cast property path array.\r\n */\r\nfunction castPath(value) {\r\n  return isArray(value) ? value : stringToPath(value);\r\n}\r\n\r\n/**\r\n * Gets the data for `map`.\r\n *\r\n * @private\r\n * @param {Object} map The map to query.\r\n * @param {string} key The reference key.\r\n * @returns {*} Returns the map data.\r\n */\r\nfunction getMapData(map, key) {\r\n  var data = map.__data__;\r\n  return isKeyable(key)\r\n    ? data[typeof key == 'string' ? 'string' : 'hash']\r\n    : data.map;\r\n}\r\n\r\n/**\r\n * Gets the native function at `key` of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {string} key The key of the method to get.\r\n * @returns {*} Returns the function if it's native, else `undefined`.\r\n */\r\nfunction getNative(object, key) {\r\n  var value = getValue(object, key);\r\n  return baseIsNative(value) ? value : undefined;\r\n}\r\n\r\n/**\r\n * Checks if `value` is a property name and not a property path.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @param {Object} [object] The object to query keys on.\r\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\r\n */\r\nfunction isKey(value, object) {\r\n  if (isArray(value)) {\r\n    return false;\r\n  }\r\n  var type = typeof value;\r\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\r\n      value == null || isSymbol(value)) {\r\n    return true;\r\n  }\r\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\r\n    (object != null && value in Object(object));\r\n}\r\n\r\n/**\r\n * Checks if `value` is suitable for use as unique object key.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\r\n */\r\nfunction isKeyable(value) {\r\n  var type = typeof value;\r\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\r\n    ? (value !== '__proto__')\r\n    : (value === null);\r\n}\r\n\r\n/**\r\n * Checks if `func` has its source masked.\r\n *\r\n * @private\r\n * @param {Function} func The function to check.\r\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\r\n */\r\nfunction isMasked(func) {\r\n  return !!maskSrcKey && (maskSrcKey in func);\r\n}\r\n\r\n/**\r\n * Converts `string` to a property path array.\r\n *\r\n * @private\r\n * @param {string} string The string to convert.\r\n * @returns {Array} Returns the property path array.\r\n */\r\nvar stringToPath = memoize(function(string) {\r\n  string = toString(string);\r\n\r\n  var result = [];\r\n  if (reLeadingDot.test(string)) {\r\n    result.push('');\r\n  }\r\n  string.replace(rePropName, function(match, number, quote, string) {\r\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\r\n  });\r\n  return result;\r\n});\r\n\r\n/**\r\n * Converts `value` to a string key if it's not a string or symbol.\r\n *\r\n * @private\r\n * @param {*} value The value to inspect.\r\n * @returns {string|symbol} Returns the key.\r\n */\r\nfunction toKey(value) {\r\n  if (typeof value == 'string' || isSymbol(value)) {\r\n    return value;\r\n  }\r\n  var result = (value + '');\r\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\r\n}\r\n\r\n/**\r\n * Converts `func` to its source code.\r\n *\r\n * @private\r\n * @param {Function} func The function to process.\r\n * @returns {string} Returns the source code.\r\n */\r\nfunction toSource(func) {\r\n  if (func != null) {\r\n    try {\r\n      return funcToString.call(func);\r\n    } catch (e) {}\r\n    try {\r\n      return (func + '');\r\n    } catch (e) {}\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * Creates a function that memoizes the result of `func`. If `resolver` is\r\n * provided, it determines the cache key for storing the result based on the\r\n * arguments provided to the memoized function. By default, the first argument\r\n * provided to the memoized function is used as the map cache key. The `func`\r\n * is invoked with the `this` binding of the memoized function.\r\n *\r\n * **Note:** The cache is exposed as the `cache` property on the memoized\r\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\r\n * constructor with one whose instances implement the\r\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\r\n * method interface of `delete`, `get`, `has`, and `set`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Function\r\n * @param {Function} func The function to have its output memoized.\r\n * @param {Function} [resolver] The function to resolve the cache key.\r\n * @returns {Function} Returns the new memoized function.\r\n * @example\r\n *\r\n * var object = { 'a': 1, 'b': 2 };\r\n * var other = { 'c': 3, 'd': 4 };\r\n *\r\n * var values = _.memoize(_.values);\r\n * values(object);\r\n * // => [1, 2]\r\n *\r\n * values(other);\r\n * // => [3, 4]\r\n *\r\n * object.a = 2;\r\n * values(object);\r\n * // => [1, 2]\r\n *\r\n * // Modify the result cache.\r\n * values.cache.set(object, ['a', 'b']);\r\n * values(object);\r\n * // => ['a', 'b']\r\n *\r\n * // Replace `_.memoize.Cache`.\r\n * _.memoize.Cache = WeakMap;\r\n */\r\nfunction memoize(func, resolver) {\r\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\r\n    throw new TypeError(FUNC_ERROR_TEXT);\r\n  }\r\n  var memoized = function() {\r\n    var args = arguments,\r\n        key = resolver ? resolver.apply(this, args) : args[0],\r\n        cache = memoized.cache;\r\n\r\n    if (cache.has(key)) {\r\n      return cache.get(key);\r\n    }\r\n    var result = func.apply(this, args);\r\n    memoized.cache = cache.set(key, result);\r\n    return result;\r\n  };\r\n  memoized.cache = new (memoize.Cache || MapCache);\r\n  return memoized;\r\n}\r\n\r\n// Assign cache to `_.memoize`.\r\nmemoize.Cache = MapCache;\r\n\r\n/**\r\n * Performs a\r\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * comparison between two values to determine if they are equivalent.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to compare.\r\n * @param {*} other The other value to compare.\r\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\r\n * @example\r\n *\r\n * var object = { 'a': 1 };\r\n * var other = { 'a': 1 };\r\n *\r\n * _.eq(object, object);\r\n * // => true\r\n *\r\n * _.eq(object, other);\r\n * // => false\r\n *\r\n * _.eq('a', 'a');\r\n * // => true\r\n *\r\n * _.eq('a', Object('a'));\r\n * // => false\r\n *\r\n * _.eq(NaN, NaN);\r\n * // => true\r\n */\r\nfunction eq(value, other) {\r\n  return value === other || (value !== value && other !== other);\r\n}\r\n\r\n/**\r\n * Checks if `value` is classified as an `Array` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\r\n * @example\r\n *\r\n * _.isArray([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isArray(document.body.children);\r\n * // => false\r\n *\r\n * _.isArray('abc');\r\n * // => false\r\n *\r\n * _.isArray(_.noop);\r\n * // => false\r\n */\r\nvar isArray = Array.isArray;\r\n\r\n/**\r\n * Checks if `value` is classified as a `Function` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n * @example\r\n *\r\n * _.isFunction(_);\r\n * // => true\r\n *\r\n * _.isFunction(/abc/);\r\n * // => false\r\n */\r\nfunction isFunction(value) {\r\n  // The use of `Object#toString` avoids issues with the `typeof` operator\r\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\r\n  var tag = isObject(value) ? objectToString.call(value) : '';\r\n  return tag == funcTag || tag == genTag;\r\n}\r\n\r\n/**\r\n * Checks if `value` is the\r\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\r\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\r\n * @example\r\n *\r\n * _.isObject({});\r\n * // => true\r\n *\r\n * _.isObject([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObject(_.noop);\r\n * // => true\r\n *\r\n * _.isObject(null);\r\n * // => false\r\n */\r\nfunction isObject(value) {\r\n  var type = typeof value;\r\n  return !!value && (type == 'object' || type == 'function');\r\n}\r\n\r\n/**\r\n * Checks if `value` is object-like. A value is object-like if it's not `null`\r\n * and has a `typeof` result of \"object\".\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\r\n * @example\r\n *\r\n * _.isObjectLike({});\r\n * // => true\r\n *\r\n * _.isObjectLike([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObjectLike(_.noop);\r\n * // => false\r\n *\r\n * _.isObjectLike(null);\r\n * // => false\r\n */\r\nfunction isObjectLike(value) {\r\n  return !!value && typeof value == 'object';\r\n}\r\n\r\n/**\r\n * Checks if `value` is classified as a `Symbol` primitive or object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n * @example\r\n *\r\n * _.isSymbol(Symbol.iterator);\r\n * // => true\r\n *\r\n * _.isSymbol('abc');\r\n * // => false\r\n */\r\nfunction isSymbol(value) {\r\n  return typeof value == 'symbol' ||\r\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n}\r\n\r\n/**\r\n * Converts `value` to a string. An empty string is returned for `null`\r\n * and `undefined` values. The sign of `-0` is preserved.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to process.\r\n * @returns {string} Returns the string.\r\n * @example\r\n *\r\n * _.toString(null);\r\n * // => ''\r\n *\r\n * _.toString(-0);\r\n * // => '-0'\r\n *\r\n * _.toString([1, 2, 3]);\r\n * // => '1,2,3'\r\n */\r\nfunction toString(value) {\r\n  return value == null ? '' : baseToString(value);\r\n}\r\n\r\n/**\r\n * Gets the value at `path` of `object`. If the resolved value is\r\n * `undefined`, the `defaultValue` is returned in its place.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.7.0\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @param {Array|string} path The path of the property to get.\r\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\r\n * @returns {*} Returns the resolved value.\r\n * @example\r\n *\r\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\r\n *\r\n * _.get(object, 'a[0].b.c');\r\n * // => 3\r\n *\r\n * _.get(object, ['a', '0', 'b', 'c']);\r\n * // => 3\r\n *\r\n * _.get(object, 'a.b.c', 'default');\r\n * // => 'default'\r\n */\r\nfunction get(object, path, defaultValue) {\r\n  var result = object == null ? undefined : baseGet(object, path);\r\n  return result === undefined ? defaultValue : result;\r\n}\r\n\r\nmodule.exports = get;\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{}],88:[function(require,module,exports){\r\n(function (global){\r\n/**\r\n * @license\r\n * Lodash (Custom Build) <https://lodash.com/>\r\n * Build: `lodash core -o ./dist/lodash.core.js`\r\n * Copyright JS Foundation and other contributors <https://js.foundation/>\r\n * Released under MIT license <https://lodash.com/license>\r\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\r\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n */\r\n;(function() {\r\n\r\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\r\n  var undefined;\r\n\r\n  /** Used as the semantic version number. */\r\n  var VERSION = '4.17.10';\r\n\r\n  /** Error message constants. */\r\n  var FUNC_ERROR_TEXT = 'Expected a function';\r\n\r\n  /** Used to compose bitmasks for value comparisons. */\r\n  var COMPARE_PARTIAL_FLAG = 1,\r\n      COMPARE_UNORDERED_FLAG = 2;\r\n\r\n  /** Used to compose bitmasks for function metadata. */\r\n  var WRAP_BIND_FLAG = 1,\r\n      WRAP_PARTIAL_FLAG = 32;\r\n\r\n  /** Used as references for various `Number` constants. */\r\n  var INFINITY = 1 / 0,\r\n      MAX_SAFE_INTEGER = 9007199254740991;\r\n\r\n  /** `Object#toString` result references. */\r\n  var argsTag = '[object Arguments]',\r\n      arrayTag = '[object Array]',\r\n      asyncTag = '[object AsyncFunction]',\r\n      boolTag = '[object Boolean]',\r\n      dateTag = '[object Date]',\r\n      errorTag = '[object Error]',\r\n      funcTag = '[object Function]',\r\n      genTag = '[object GeneratorFunction]',\r\n      numberTag = '[object Number]',\r\n      objectTag = '[object Object]',\r\n      proxyTag = '[object Proxy]',\r\n      regexpTag = '[object RegExp]',\r\n      stringTag = '[object String]';\r\n\r\n  /** Used to match HTML entities and HTML characters. */\r\n  var reUnescapedHtml = /[&<>\"']/g,\r\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\r\n\r\n  /** Used to detect unsigned integer values. */\r\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n  /** Used to map characters to HTML entities. */\r\n  var htmlEscapes = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    '\"': '&quot;',\r\n    \"'\": '&#39;'\r\n  };\r\n\r\n  /** Detect free variable `global` from Node.js. */\r\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\r\n\r\n  /** Detect free variable `self`. */\r\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\r\n\r\n  /** Used as a reference to the global object. */\r\n  var root = freeGlobal || freeSelf || Function('return this')();\r\n\r\n  /** Detect free variable `exports`. */\r\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\r\n\r\n  /** Detect free variable `module`. */\r\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\r\n\r\n  /*--------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Appends the elements of `values` to `array`.\r\n   *\r\n   * @private\r\n   * @param {Array} array The array to modify.\r\n   * @param {Array} values The values to append.\r\n   * @returns {Array} Returns `array`.\r\n   */\r\n  function arrayPush(array, values) {\r\n    array.push.apply(array, values);\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n   * support for iteratee shorthands.\r\n   *\r\n   * @private\r\n   * @param {Array} array The array to inspect.\r\n   * @param {Function} predicate The function invoked per iteration.\r\n   * @param {number} fromIndex The index to search from.\r\n   * @param {boolean} [fromRight] Specify iterating from right to left.\r\n   * @returns {number} Returns the index of the matched value, else `-1`.\r\n   */\r\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n    var length = array.length,\r\n        index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n    while ((fromRight ? index-- : ++index < length)) {\r\n      if (predicate(array[index], index, array)) {\r\n        return index;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.property` without support for deep paths.\r\n   *\r\n   * @private\r\n   * @param {string} key The key of the property to get.\r\n   * @returns {Function} Returns the new accessor function.\r\n   */\r\n  function baseProperty(key) {\r\n    return function(object) {\r\n      return object == null ? undefined : object[key];\r\n    };\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.propertyOf` without support for deep paths.\r\n   *\r\n   * @private\r\n   * @param {Object} object The object to query.\r\n   * @returns {Function} Returns the new accessor function.\r\n   */\r\n  function basePropertyOf(object) {\r\n    return function(key) {\r\n      return object == null ? undefined : object[key];\r\n    };\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\r\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\r\n   *\r\n   * @private\r\n   * @param {Array|Object} collection The collection to iterate over.\r\n   * @param {Function} iteratee The function invoked per iteration.\r\n   * @param {*} accumulator The initial value.\r\n   * @param {boolean} initAccum Specify using the first or last element of\r\n   *  `collection` as the initial value.\r\n   * @param {Function} eachFunc The function to iterate over `collection`.\r\n   * @returns {*} Returns the accumulated value.\r\n   */\r\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\r\n    eachFunc(collection, function(value, index, collection) {\r\n      accumulator = initAccum\r\n        ? (initAccum = false, value)\r\n        : iteratee(accumulator, value, index, collection);\r\n    });\r\n    return accumulator;\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\r\n   * array of `object` property values corresponding to the property names\r\n   * of `props`.\r\n   *\r\n   * @private\r\n   * @param {Object} object The object to query.\r\n   * @param {Array} props The property names to get values for.\r\n   * @returns {Object} Returns the array of property values.\r\n   */\r\n  function baseValues(object, props) {\r\n    return baseMap(props, function(key) {\r\n      return object[key];\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Used by `_.escape` to convert characters to HTML entities.\r\n   *\r\n   * @private\r\n   * @param {string} chr The matched character to escape.\r\n   * @returns {string} Returns the escaped character.\r\n   */\r\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\r\n\r\n  /**\r\n   * Creates a unary function that invokes `func` with its argument transformed.\r\n   *\r\n   * @private\r\n   * @param {Function} func The function to wrap.\r\n   * @param {Function} transform The argument transform.\r\n   * @returns {Function} Returns the new function.\r\n   */\r\n  function overArg(func, transform) {\r\n    return function(arg) {\r\n      return func(transform(arg));\r\n    };\r\n  }\r\n\r\n  /*--------------------------------------------------------------------------*/\r\n\r\n  /** Used for built-in method references. */\r\n  var arrayProto = Array.prototype,\r\n      objectProto = Object.prototype;\r\n\r\n  /** Used to check objects for own properties. */\r\n  var hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n  /** Used to generate unique IDs. */\r\n  var idCounter = 0;\r\n\r\n  /**\r\n   * Used to resolve the\r\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\r\n   * of values.\r\n   */\r\n  var nativeObjectToString = objectProto.toString;\r\n\r\n  /** Used to restore the original `_` reference in `_.noConflict`. */\r\n  var oldDash = root._;\r\n\r\n  /** Built-in value references. */\r\n  var objectCreate = Object.create,\r\n      propertyIsEnumerable = objectProto.propertyIsEnumerable;\r\n\r\n  /* Built-in method references for those with the same name as other `lodash` methods. */\r\n  var nativeIsFinite = root.isFinite,\r\n      nativeKeys = overArg(Object.keys, Object),\r\n      nativeMax = Math.max;\r\n\r\n  /*------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Creates a `lodash` object which wraps `value` to enable implicit method\r\n   * chain sequences. Methods that operate on and return arrays, collections,\r\n   * and functions can be chained together. Methods that retrieve a single value\r\n   * or may return a primitive value will automatically end the chain sequence\r\n   * and return the unwrapped value. Otherwise, the value must be unwrapped\r\n   * with `_#value`.\r\n   *\r\n   * Explicit chain sequences, which must be unwrapped with `_#value`, may be\r\n   * enabled using `_.chain`.\r\n   *\r\n   * The execution of chained methods is lazy, that is, it's deferred until\r\n   * `_#value` is implicitly or explicitly called.\r\n   *\r\n   * Lazy evaluation allows several methods to support shortcut fusion.\r\n   * Shortcut fusion is an optimization to merge iteratee calls; this avoids\r\n   * the creation of intermediate arrays and can greatly reduce the number of\r\n   * iteratee executions. Sections of a chain sequence qualify for shortcut\r\n   * fusion if the section is applied to an array and iteratees accept only\r\n   * one argument. The heuristic for whether a section qualifies for shortcut\r\n   * fusion is subject to change.\r\n   *\r\n   * Chaining is supported in custom builds as long as the `_#value` method is\r\n   * directly or indirectly included in the build.\r\n   *\r\n   * In addition to lodash methods, wrappers have `Array` and `String` methods.\r\n   *\r\n   * The wrapper `Array` methods are:\r\n   * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\r\n   *\r\n   * The wrapper `String` methods are:\r\n   * `replace` and `split`\r\n   *\r\n   * The wrapper methods that support shortcut fusion are:\r\n   * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\r\n   * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\r\n   * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\r\n   *\r\n   * The chainable wrapper methods are:\r\n   * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\r\n   * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\r\n   * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\r\n   * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\r\n   * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\r\n   * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\r\n   * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\r\n   * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\r\n   * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\r\n   * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\r\n   * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\r\n   * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\r\n   * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\r\n   * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\r\n   * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\r\n   * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\r\n   * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\r\n   * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\r\n   * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\r\n   * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\r\n   * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\r\n   * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\r\n   * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\r\n   * `zipObject`, `zipObjectDeep`, and `zipWith`\r\n   *\r\n   * The wrapper methods that are **not** chainable by default are:\r\n   * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\r\n   * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\r\n   * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\r\n   * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\r\n   * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\r\n   * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\r\n   * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\r\n   * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\r\n   * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\r\n   * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\r\n   * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\r\n   * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\r\n   * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\r\n   * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\r\n   * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\r\n   * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\r\n   * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\r\n   * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\r\n   * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\r\n   * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\r\n   * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\r\n   * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\r\n   * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\r\n   * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\r\n   * `upperFirst`, `value`, and `words`\r\n   *\r\n   * @name _\r\n   * @constructor\r\n   * @category Seq\r\n   * @param {*} value The value to wrap in a `lodash` instance.\r\n   * @returns {Object} Returns the new `lodash` wrapper instance.\r\n   * @example\r\n   *\r\n   * function square(n) {\r\n   *   return n * n;\r\n   * }\r\n   *\r\n   * var wrapped = _([1, 2, 3]);\r\n   *\r\n   * // Returns an unwrapped value.\r\n   * wrapped.reduce(_.add);\r\n   * // => 6\r\n   *\r\n   * // Returns a wrapped value.\r\n   * var squares = wrapped.map(square);\r\n   *\r\n   * _.isArray(squares);\r\n   * // => false\r\n   *\r\n   * _.isArray(squares.value());\r\n   * // => true\r\n   */\r\n  function lodash(value) {\r\n    return value instanceof LodashWrapper\r\n      ? value\r\n      : new LodashWrapper(value);\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.create` without support for assigning\r\n   * properties to the created object.\r\n   *\r\n   * @private\r\n   * @param {Object} proto The object to inherit from.\r\n   * @returns {Object} Returns the new object.\r\n   */\r\n  var baseCreate = (function() {\r\n    function object() {}\r\n    return function(proto) {\r\n      if (!isObject(proto)) {\r\n        return {};\r\n      }\r\n      if (objectCreate) {\r\n        return objectCreate(proto);\r\n      }\r\n      object.prototype = proto;\r\n      var result = new object;\r\n      object.prototype = undefined;\r\n      return result;\r\n    };\r\n  }());\r\n\r\n  /**\r\n   * The base constructor for creating `lodash` wrapper objects.\r\n   *\r\n   * @private\r\n   * @param {*} value The value to wrap.\r\n   * @param {boolean} [chainAll] Enable explicit method chain sequences.\r\n   */\r\n  function LodashWrapper(value, chainAll) {\r\n    this.__wrapped__ = value;\r\n    this.__actions__ = [];\r\n    this.__chain__ = !!chainAll;\r\n  }\r\n\r\n  LodashWrapper.prototype = baseCreate(lodash.prototype);\r\n  LodashWrapper.prototype.constructor = LodashWrapper;\r\n\r\n  /*------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Assigns `value` to `key` of `object` if the existing value is not equivalent\r\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n   * for equality comparisons.\r\n   *\r\n   * @private\r\n   * @param {Object} object The object to modify.\r\n   * @param {string} key The key of the property to assign.\r\n   * @param {*} value The value to assign.\r\n   */\r\n  function assignValue(object, key, value) {\r\n    var objValue = object[key];\r\n    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\r\n        (value === undefined && !(key in object))) {\r\n      baseAssignValue(object, key, value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `assignValue` and `assignMergeValue` without\r\n   * value checks.\r\n   *\r\n   * @private\r\n   * @param {Object} object The object to modify.\r\n   * @param {string} key The key of the property to assign.\r\n   * @param {*} value The value to assign.\r\n   */\r\n  function baseAssignValue(object, key, value) {\r\n    object[key] = value;\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.delay` and `_.defer` which accepts `args`\r\n   * to provide to `func`.\r\n   *\r\n   * @private\r\n   * @param {Function} func The function to delay.\r\n   * @param {number} wait The number of milliseconds to delay invocation.\r\n   * @param {Array} args The arguments to provide to `func`.\r\n   * @returns {number|Object} Returns the timer id or timeout object.\r\n   */\r\n  function baseDelay(func, wait, args) {\r\n    if (typeof func != 'function') {\r\n      throw new TypeError(FUNC_ERROR_TEXT);\r\n    }\r\n    return setTimeout(function() { func.apply(undefined, args); }, wait);\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.forEach` without support for iteratee shorthands.\r\n   *\r\n   * @private\r\n   * @param {Array|Object} collection The collection to iterate over.\r\n   * @param {Function} iteratee The function invoked per iteration.\r\n   * @returns {Array|Object} Returns `collection`.\r\n   */\r\n  var baseEach = createBaseEach(baseForOwn);\r\n\r\n  /**\r\n   * The base implementation of `_.every` without support for iteratee shorthands.\r\n   *\r\n   * @private\r\n   * @param {Array|Object} collection The collection to iterate over.\r\n   * @param {Function} predicate The function invoked per iteration.\r\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\r\n   *  else `false`\r\n   */\r\n  function baseEvery(collection, predicate) {\r\n    var result = true;\r\n    baseEach(collection, function(value, index, collection) {\r\n      result = !!predicate(value, index, collection);\r\n      return result;\r\n    });\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The base implementation of methods like `_.max` and `_.min` which accepts a\r\n   * `comparator` to determine the extremum value.\r\n   *\r\n   * @private\r\n   * @param {Array} array The array to iterate over.\r\n   * @param {Function} iteratee The iteratee invoked per iteration.\r\n   * @param {Function} comparator The comparator used to compare values.\r\n   * @returns {*} Returns the extremum value.\r\n   */\r\n  function baseExtremum(array, iteratee, comparator) {\r\n    var index = -1,\r\n        length = array.length;\r\n\r\n    while (++index < length) {\r\n      var value = array[index],\r\n          current = iteratee(value);\r\n\r\n      if (current != null && (computed === undefined\r\n            ? (current === current && !false)\r\n            : comparator(current, computed)\r\n          )) {\r\n        var computed = current,\r\n            result = value;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.filter` without support for iteratee shorthands.\r\n   *\r\n   * @private\r\n   * @param {Array|Object} collection The collection to iterate over.\r\n   * @param {Function} predicate The function invoked per iteration.\r\n   * @returns {Array} Returns the new filtered array.\r\n   */\r\n  function baseFilter(collection, predicate) {\r\n    var result = [];\r\n    baseEach(collection, function(value, index, collection) {\r\n      if (predicate(value, index, collection)) {\r\n        result.push(value);\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.flatten` with support for restricting flattening.\r\n   *\r\n   * @private\r\n   * @param {Array} array The array to flatten.\r\n   * @param {number} depth The maximum recursion depth.\r\n   * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\r\n   * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\r\n   * @param {Array} [result=[]] The initial result value.\r\n   * @returns {Array} Returns the new flattened array.\r\n   */\r\n  function baseFlatten(array, depth, predicate, isStrict, result) {\r\n    var index = -1,\r\n        length = array.length;\r\n\r\n    predicate || (predicate = isFlattenable);\r\n    result || (result = []);\r\n\r\n    while (++index < length) {\r\n      var value = array[index];\r\n      if (depth > 0 && predicate(value)) {\r\n        if (depth > 1) {\r\n          // Recursively flatten arrays (susceptible to call stack limits).\r\n          baseFlatten(value, depth - 1, predicate, isStrict, result);\r\n        } else {\r\n          arrayPush(result, value);\r\n        }\r\n      } else if (!isStrict) {\r\n        result[result.length] = value;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `baseForOwn` which iterates over `object`\r\n   * properties returned by `keysFunc` and invokes `iteratee` for each property.\r\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\r\n   *\r\n   * @private\r\n   * @param {Object} object The object to iterate over.\r\n   * @param {Function} iteratee The function invoked per iteration.\r\n   * @param {Function} keysFunc The function to get the keys of `object`.\r\n   * @returns {Object} Returns `object`.\r\n   */\r\n  var baseFor = createBaseFor();\r\n\r\n  /**\r\n   * The base implementation of `_.forOwn` without support for iteratee shorthands.\r\n   *\r\n   * @private\r\n   * @param {Object} object The object to iterate over.\r\n   * @param {Function} iteratee The function invoked per iteration.\r\n   * @returns {Object} Returns `object`.\r\n   */\r\n  function baseForOwn(object, iteratee) {\r\n    return object && baseFor(object, iteratee, keys);\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.functions` which creates an array of\r\n   * `object` function property names filtered from `props`.\r\n   *\r\n   * @private\r\n   * @param {Object} object The object to inspect.\r\n   * @param {Array} props The property names to filter.\r\n   * @returns {Array} Returns the function names.\r\n   */\r\n  function baseFunctions(object, props) {\r\n    return baseFilter(props, function(key) {\r\n      return isFunction(object[key]);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `getTag` without fallbacks for buggy environments.\r\n   *\r\n   * @private\r\n   * @param {*} value The value to query.\r\n   * @returns {string} Returns the `toStringTag`.\r\n   */\r\n  function baseGetTag(value) {\r\n    return objectToString(value);\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.gt` which doesn't coerce arguments.\r\n   *\r\n   * @private\r\n   * @param {*} value The value to compare.\r\n   * @param {*} other The other value to compare.\r\n   * @returns {boolean} Returns `true` if `value` is greater than `other`,\r\n   *  else `false`.\r\n   */\r\n  function baseGt(value, other) {\r\n    return value > other;\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.isArguments`.\r\n   *\r\n   * @private\r\n   * @param {*} value The value to check.\r\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\r\n   */\r\n  var baseIsArguments = noop;\r\n\r\n  /**\r\n   * The base implementation of `_.isDate` without Node.js optimizations.\r\n   *\r\n   * @private\r\n   * @param {*} value The value to check.\r\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\r\n   */\r\n  function baseIsDate(value) {\r\n    return isObjectLike(value) && baseGetTag(value) == dateTag;\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.isEqual` which supports partial comparisons\r\n   * and tracks traversed objects.\r\n   *\r\n   * @private\r\n   * @param {*} value The value to compare.\r\n   * @param {*} other The other value to compare.\r\n   * @param {boolean} bitmask The bitmask flags.\r\n   *  1 - Unordered comparison\r\n   *  2 - Partial comparison\r\n   * @param {Function} [customizer] The function to customize comparisons.\r\n   * @param {Object} [stack] Tracks traversed `value` and `other` objects.\r\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\r\n   */\r\n  function baseIsEqual(value, other, bitmask, customizer, stack) {\r\n    if (value === other) {\r\n      return true;\r\n    }\r\n    if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\r\n      return value !== value && other !== other;\r\n    }\r\n    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\r\n  }\r\n\r\n  /**\r\n   * A specialized version of `baseIsEqual` for arrays and objects which performs\r\n   * deep comparisons and tracks traversed objects enabling objects with circular\r\n   * references to be compared.\r\n   *\r\n   * @private\r\n   * @param {Object} object The object to compare.\r\n   * @param {Object} other The other object to compare.\r\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\r\n   * @param {Function} customizer The function to customize comparisons.\r\n   * @param {Function} equalFunc The function to determine equivalents of values.\r\n   * @param {Object} [stack] Tracks traversed `object` and `other` objects.\r\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\r\n   */\r\n  function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\r\n    var objIsArr = isArray(object),\r\n        othIsArr = isArray(other),\r\n        objTag = objIsArr ? arrayTag : baseGetTag(object),\r\n        othTag = othIsArr ? arrayTag : baseGetTag(other);\r\n\r\n    objTag = objTag == argsTag ? objectTag : objTag;\r\n    othTag = othTag == argsTag ? objectTag : othTag;\r\n\r\n    var objIsObj = objTag == objectTag,\r\n        othIsObj = othTag == objectTag,\r\n        isSameTag = objTag == othTag;\r\n\r\n    stack || (stack = []);\r\n    var objStack = find(stack, function(entry) {\r\n      return entry[0] == object;\r\n    });\r\n    var othStack = find(stack, function(entry) {\r\n      return entry[0] == other;\r\n    });\r\n    if (objStack && othStack) {\r\n      return objStack[1] == other;\r\n    }\r\n    stack.push([object, other]);\r\n    stack.push([other, object]);\r\n    if (isSameTag && !objIsObj) {\r\n      var result = (objIsArr)\r\n        ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\r\n        : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\r\n      stack.pop();\r\n      return result;\r\n    }\r\n    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\r\n      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\r\n          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\r\n\r\n      if (objIsWrapped || othIsWrapped) {\r\n        var objUnwrapped = objIsWrapped ? object.value() : object,\r\n            othUnwrapped = othIsWrapped ? other.value() : other;\r\n\r\n        var result = equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\r\n        stack.pop();\r\n        return result;\r\n      }\r\n    }\r\n    if (!isSameTag) {\r\n      return false;\r\n    }\r\n    var result = equalObjects(object, other, bitmask, customizer, equalFunc, stack);\r\n    stack.pop();\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.isRegExp` without Node.js optimizations.\r\n   *\r\n   * @private\r\n   * @param {*} value The value to check.\r\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\r\n   */\r\n  function baseIsRegExp(value) {\r\n    return isObjectLike(value) && baseGetTag(value) == regexpTag;\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.iteratee`.\r\n   *\r\n   * @private\r\n   * @param {*} [value=_.identity] The value to convert to an iteratee.\r\n   * @returns {Function} Returns the iteratee.\r\n   */\r\n  function baseIteratee(func) {\r\n    if (typeof func == 'function') {\r\n      return func;\r\n    }\r\n    if (func == null) {\r\n      return identity;\r\n    }\r\n    return (typeof func == 'object' ? baseMatches : baseProperty)(func);\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.lt` which doesn't coerce arguments.\r\n   *\r\n   * @private\r\n   * @param {*} value The value to compare.\r\n   * @param {*} other The other value to compare.\r\n   * @returns {boolean} Returns `true` if `value` is less than `other`,\r\n   *  else `false`.\r\n   */\r\n  function baseLt(value, other) {\r\n    return value < other;\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.map` without support for iteratee shorthands.\r\n   *\r\n   * @private\r\n   * @param {Array|Object} collection The collection to iterate over.\r\n   * @param {Function} iteratee The function invoked per iteration.\r\n   * @returns {Array} Returns the new mapped array.\r\n   */\r\n  function baseMap(collection, iteratee) {\r\n    var index = -1,\r\n        result = isArrayLike(collection) ? Array(collection.length) : [];\r\n\r\n    baseEach(collection, function(value, key, collection) {\r\n      result[++index] = iteratee(value, key, collection);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.matches` which doesn't clone `source`.\r\n   *\r\n   * @private\r\n   * @param {Object} source The object of property values to match.\r\n   * @returns {Function} Returns the new spec function.\r\n   */\r\n  function baseMatches(source) {\r\n    var props = nativeKeys(source);\r\n    return function(object) {\r\n      var length = props.length;\r\n      if (object == null) {\r\n        return !length;\r\n      }\r\n      object = Object(object);\r\n      while (length--) {\r\n        var key = props[length];\r\n        if (!(key in object &&\r\n              baseIsEqual(source[key], object[key], COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG)\r\n            )) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.pick` without support for individual\r\n   * property identifiers.\r\n   *\r\n   * @private\r\n   * @param {Object} object The source object.\r\n   * @param {string[]} paths The property paths to pick.\r\n   * @returns {Object} Returns the new object.\r\n   */\r\n  function basePick(object, props) {\r\n    object = Object(object);\r\n    return reduce(props, function(result, key) {\r\n      if (key in object) {\r\n        result[key] = object[key];\r\n      }\r\n      return result;\r\n    }, {});\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.rest` which doesn't validate or coerce arguments.\r\n   *\r\n   * @private\r\n   * @param {Function} func The function to apply a rest parameter to.\r\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\r\n   * @returns {Function} Returns the new function.\r\n   */\r\n  function baseRest(func, start) {\r\n    return setToString(overRest(func, start, identity), func + '');\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.slice` without an iteratee call guard.\r\n   *\r\n   * @private\r\n   * @param {Array} array The array to slice.\r\n   * @param {number} [start=0] The start position.\r\n   * @param {number} [end=array.length] The end position.\r\n   * @returns {Array} Returns the slice of `array`.\r\n   */\r\n  function baseSlice(array, start, end) {\r\n    var index = -1,\r\n        length = array.length;\r\n\r\n    if (start < 0) {\r\n      start = -start > length ? 0 : (length + start);\r\n    }\r\n    end = end > length ? length : end;\r\n    if (end < 0) {\r\n      end += length;\r\n    }\r\n    length = start > end ? 0 : ((end - start) >>> 0);\r\n    start >>>= 0;\r\n\r\n    var result = Array(length);\r\n    while (++index < length) {\r\n      result[index] = array[index + start];\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Copies the values of `source` to `array`.\r\n   *\r\n   * @private\r\n   * @param {Array} source The array to copy values from.\r\n   * @param {Array} [array=[]] The array to copy values to.\r\n   * @returns {Array} Returns `array`.\r\n   */\r\n  function copyArray(source) {\r\n    return baseSlice(source, 0, source.length);\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `_.some` without support for iteratee shorthands.\r\n   *\r\n   * @private\r\n   * @param {Array|Object} collection The collection to iterate over.\r\n   * @param {Function} predicate The function invoked per iteration.\r\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\r\n   *  else `false`.\r\n   */\r\n  function baseSome(collection, predicate) {\r\n    var result;\r\n\r\n    baseEach(collection, function(value, index, collection) {\r\n      result = predicate(value, index, collection);\r\n      return !result;\r\n    });\r\n    return !!result;\r\n  }\r\n\r\n  /**\r\n   * The base implementation of `wrapperValue` which returns the result of\r\n   * performing a sequence of actions on the unwrapped `value`, where each\r\n   * successive action is supplied the return value of the previous.\r\n   *\r\n   * @private\r\n   * @param {*} value The unwrapped value.\r\n   * @param {Array} actions Actions to perform to resolve the unwrapped value.\r\n   * @returns {*} Returns the resolved value.\r\n   */\r\n  function baseWrapperValue(value, actions) {\r\n    var result = value;\r\n    return reduce(actions, function(result, action) {\r\n      return action.func.apply(action.thisArg, arrayPush([result], action.args));\r\n    }, result);\r\n  }\r\n\r\n  /**\r\n   * Compares values to sort them in ascending order.\r\n   *\r\n   * @private\r\n   * @param {*} value The value to compare.\r\n   * @param {*} other The other value to compare.\r\n   * @returns {number} Returns the sort order indicator for `value`.\r\n   */\r\n  function compareAscending(value, other) {\r\n    if (value !== other) {\r\n      var valIsDefined = value !== undefined,\r\n          valIsNull = value === null,\r\n          valIsReflexive = value === value,\r\n          valIsSymbol = false;\r\n\r\n      var othIsDefined = other !== undefined,\r\n          othIsNull = other === null,\r\n          othIsReflexive = other === other,\r\n          othIsSymbol = false;\r\n\r\n      if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\r\n          (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\r\n          (valIsNull && othIsDefined && othIsReflexive) ||\r\n          (!valIsDefined && othIsReflexive) ||\r\n          !valIsReflexive) {\r\n        return 1;\r\n      }\r\n      if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\r\n          (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\r\n          (othIsNull && valIsDefined && valIsReflexive) ||\r\n          (!othIsDefined && valIsReflexive) ||\r\n          !othIsReflexive) {\r\n        return -1;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Copies properties of `source` to `object`.\r\n   *\r\n   * @private\r\n   * @param {Object} source The object to copy properties from.\r\n   * @param {Array} props The property identifiers to copy.\r\n   * @param {Object} [object={}] The object to copy properties to.\r\n   * @param {Function} [customizer] The function to customize copied values.\r\n   * @returns {Object} Returns `object`.\r\n   */\r\n  function copyObject(source, props, object, customizer) {\r\n    var isNew = !object;\r\n    object || (object = {});\r\n\r\n    var index = -1,\r\n        length = props.length;\r\n\r\n    while (++index < length) {\r\n      var key = props[index];\r\n\r\n      var newValue = customizer\r\n        ? customizer(object[key], source[key], key, object, source)\r\n        : undefined;\r\n\r\n      if (newValue === undefined) {\r\n        newValue = source[key];\r\n      }\r\n      if (isNew) {\r\n        baseAssignValue(object, key, newValue);\r\n      } else {\r\n        assignValue(object, key, newValue);\r\n      }\r\n    }\r\n    return object;\r\n  }\r\n\r\n  /**\r\n   * Creates a function like `_.assign`.\r\n   *\r\n   * @private\r\n   * @param {Function} assigner The function to assign values.\r\n   * @returns {Function} Returns the new assigner function.\r\n   */\r\n  function createAssigner(assigner) {\r\n    return baseRest(function(object, sources) {\r\n      var index = -1,\r\n          length = sources.length,\r\n          customizer = length > 1 ? sources[length - 1] : undefined;\r\n\r\n      customizer = (assigner.length > 3 && typeof customizer == 'function')\r\n        ? (length--, customizer)\r\n        : undefined;\r\n\r\n      object = Object(object);\r\n      while (++index < length) {\r\n        var source = sources[index];\r\n        if (source) {\r\n          assigner(object, source, index, customizer);\r\n        }\r\n      }\r\n      return object;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a `baseEach` or `baseEachRight` function.\r\n   *\r\n   * @private\r\n   * @param {Function} eachFunc The function to iterate over a collection.\r\n   * @param {boolean} [fromRight] Specify iterating from right to left.\r\n   * @returns {Function} Returns the new base function.\r\n   */\r\n  function createBaseEach(eachFunc, fromRight) {\r\n    return function(collection, iteratee) {\r\n      if (collection == null) {\r\n        return collection;\r\n      }\r\n      if (!isArrayLike(collection)) {\r\n        return eachFunc(collection, iteratee);\r\n      }\r\n      var length = collection.length,\r\n          index = fromRight ? length : -1,\r\n          iterable = Object(collection);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (iteratee(iterable[index], index, iterable) === false) {\r\n          break;\r\n        }\r\n      }\r\n      return collection;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Creates a base function for methods like `_.forIn` and `_.forOwn`.\r\n   *\r\n   * @private\r\n   * @param {boolean} [fromRight] Specify iterating from right to left.\r\n   * @returns {Function} Returns the new base function.\r\n   */\r\n  function createBaseFor(fromRight) {\r\n    return function(object, iteratee, keysFunc) {\r\n      var index = -1,\r\n          iterable = Object(object),\r\n          props = keysFunc(object),\r\n          length = props.length;\r\n\r\n      while (length--) {\r\n        var key = props[fromRight ? length : ++index];\r\n        if (iteratee(iterable[key], key, iterable) === false) {\r\n          break;\r\n        }\r\n      }\r\n      return object;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Creates a function that produces an instance of `Ctor` regardless of\r\n   * whether it was invoked as part of a `new` expression or by `call` or `apply`.\r\n   *\r\n   * @private\r\n   * @param {Function} Ctor The constructor to wrap.\r\n   * @returns {Function} Returns the new wrapped function.\r\n   */\r\n  function createCtor(Ctor) {\r\n    return function() {\r\n      // Use a `switch` statement to work with class constructors. See\r\n      // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\r\n      // for more details.\r\n      var args = arguments;\r\n      var thisBinding = baseCreate(Ctor.prototype),\r\n          result = Ctor.apply(thisBinding, args);\r\n\r\n      // Mimic the constructor's `return` behavior.\r\n      // See https://es5.github.io/#x13.2.2 for more details.\r\n      return isObject(result) ? result : thisBinding;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Creates a `_.find` or `_.findLast` function.\r\n   *\r\n   * @private\r\n   * @param {Function} findIndexFunc The function to find the collection index.\r\n   * @returns {Function} Returns the new find function.\r\n   */\r\n  function createFind(findIndexFunc) {\r\n    return function(collection, predicate, fromIndex) {\r\n      var iterable = Object(collection);\r\n      if (!isArrayLike(collection)) {\r\n        var iteratee = baseIteratee(predicate, 3);\r\n        collection = keys(collection);\r\n        predicate = function(key) { return iteratee(iterable[key], key, iterable); };\r\n      }\r\n      var index = findIndexFunc(collection, predicate, fromIndex);\r\n      return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Creates a function that wraps `func` to invoke it with the `this` binding\r\n   * of `thisArg` and `partials` prepended to the arguments it receives.\r\n   *\r\n   * @private\r\n   * @param {Function} func The function to wrap.\r\n   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n   * @param {*} thisArg The `this` binding of `func`.\r\n   * @param {Array} partials The arguments to prepend to those provided to\r\n   *  the new function.\r\n   * @returns {Function} Returns the new wrapped function.\r\n   */\r\n  function createPartial(func, bitmask, thisArg, partials) {\r\n    if (typeof func != 'function') {\r\n      throw new TypeError(FUNC_ERROR_TEXT);\r\n    }\r\n    var isBind = bitmask & WRAP_BIND_FLAG,\r\n        Ctor = createCtor(func);\r\n\r\n    function wrapper() {\r\n      var argsIndex = -1,\r\n          argsLength = arguments.length,\r\n          leftIndex = -1,\r\n          leftLength = partials.length,\r\n          args = Array(leftLength + argsLength),\r\n          fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\r\n\r\n      while (++leftIndex < leftLength) {\r\n        args[leftIndex] = partials[leftIndex];\r\n      }\r\n      while (argsLength--) {\r\n        args[leftIndex++] = arguments[++argsIndex];\r\n      }\r\n      return fn.apply(isBind ? thisArg : this, args);\r\n    }\r\n    return wrapper;\r\n  }\r\n\r\n  /**\r\n   * A specialized version of `baseIsEqualDeep` for arrays with support for\r\n   * partial deep comparisons.\r\n   *\r\n   * @private\r\n   * @param {Array} array The array to compare.\r\n   * @param {Array} other The other array to compare.\r\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\r\n   * @param {Function} customizer The function to customize comparisons.\r\n   * @param {Function} equalFunc The function to determine equivalents of values.\r\n   * @param {Object} stack Tracks traversed `array` and `other` objects.\r\n   * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\r\n   */\r\n  function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\r\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\r\n        arrLength = array.length,\r\n        othLength = other.length;\r\n\r\n    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\r\n      return false;\r\n    }\r\n    var index = -1,\r\n        result = true,\r\n        seen = (bitmask & COMPARE_UNORDERED_FLAG) ? [] : undefined;\r\n\r\n    // Ignore non-index properties.\r\n    while (++index < arrLength) {\r\n      var arrValue = array[index],\r\n          othValue = other[index];\r\n\r\n      var compared;\r\n      if (compared !== undefined) {\r\n        if (compared) {\r\n          continue;\r\n        }\r\n        result = false;\r\n        break;\r\n      }\r\n      // Recursively compare arrays (susceptible to call stack limits).\r\n      if (seen) {\r\n        if (!baseSome(other, function(othValue, othIndex) {\r\n              if (!indexOf(seen, othIndex) &&\r\n                  (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\r\n                return seen.push(othIndex);\r\n              }\r\n            })) {\r\n          result = false;\r\n          break;\r\n        }\r\n      } else if (!(\r\n            arrValue === othValue ||\r\n              equalFunc(arrValue, othValue, bitmask, customizer, stack)\r\n          )) {\r\n        result = false;\r\n        break;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * A specialized version of `baseIsEqualDeep` for comparing objects of\r\n   * the same `toStringTag`.\r\n   *\r\n   * **Note:** This function only supports comparing values with tags of\r\n   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\r\n   *\r\n   * @private\r\n   * @param {Object} object The object to compare.\r\n   * @param {Object} other The other object to compare.\r\n   * @param {string} tag The `toStringTag` of the objects to compare.\r\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\r\n   * @param {Function} customizer The function to customize comparisons.\r\n   * @param {Function} equalFunc The function to determine equivalents of values.\r\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\r\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\r\n   */\r\n  function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\r\n    switch (tag) {\r\n\r\n      case boolTag:\r\n      case dateTag:\r\n      case numberTag:\r\n        // Coerce booleans to `1` or `0` and dates to milliseconds.\r\n        // Invalid dates are coerced to `NaN`.\r\n        return eq(+object, +other);\r\n\r\n      case errorTag:\r\n        return object.name == other.name && object.message == other.message;\r\n\r\n      case regexpTag:\r\n      case stringTag:\r\n        // Coerce regexes to strings and treat strings, primitives and objects,\r\n        // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\r\n        // for more details.\r\n        return object == (other + '');\r\n\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * A specialized version of `baseIsEqualDeep` for objects with support for\r\n   * partial deep comparisons.\r\n   *\r\n   * @private\r\n   * @param {Object} object The object to compare.\r\n   * @param {Object} other The other object to compare.\r\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\r\n   * @param {Function} customizer The function to customize comparisons.\r\n   * @param {Function} equalFunc The function to determine equivalents of values.\r\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\r\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\r\n   */\r\n  function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\r\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\r\n        objProps = keys(object),\r\n        objLength = objProps.length,\r\n        othProps = keys(other),\r\n        othLength = othProps.length;\r\n\r\n    if (objLength != othLength && !isPartial) {\r\n      return false;\r\n    }\r\n    var index = objLength;\r\n    while (index--) {\r\n      var key = objProps[index];\r\n      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\r\n        return false;\r\n      }\r\n    }\r\n    var result = true;\r\n\r\n    var skipCtor = isPartial;\r\n    while (++index < objLength) {\r\n      key = objProps[index];\r\n      var objValue = object[key],\r\n          othValue = other[key];\r\n\r\n      var compared;\r\n      // Recursively compare objects (susceptible to call stack limits).\r\n      if (!(compared === undefined\r\n            ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\r\n            : compared\r\n          )) {\r\n        result = false;\r\n        break;\r\n      }\r\n      skipCtor || (skipCtor = key == 'constructor');\r\n    }\r\n    if (result && !skipCtor) {\r\n      var objCtor = object.constructor,\r\n          othCtor = other.constructor;\r\n\r\n      // Non `Object` object instances with different constructors are not equal.\r\n      if (objCtor != othCtor &&\r\n          ('constructor' in object && 'constructor' in other) &&\r\n          !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\r\n            typeof othCtor == 'function' && othCtor instanceof othCtor)) {\r\n        result = false;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * A specialized version of `baseRest` which flattens the rest array.\r\n   *\r\n   * @private\r\n   * @param {Function} func The function to apply a rest parameter to.\r\n   * @returns {Function} Returns the new function.\r\n   */\r\n  function flatRest(func) {\r\n    return setToString(overRest(func, undefined, flatten), func + '');\r\n  }\r\n\r\n  /**\r\n   * Checks if `value` is a flattenable `arguments` object or array.\r\n   *\r\n   * @private\r\n   * @param {*} value The value to check.\r\n   * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\r\n   */\r\n  function isFlattenable(value) {\r\n    return isArray(value) || isArguments(value);\r\n  }\r\n\r\n  /**\r\n   * Checks if `value` is a valid array-like index.\r\n   *\r\n   * @private\r\n   * @param {*} value The value to check.\r\n   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\r\n   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\r\n   */\r\n  function isIndex(value, length) {\r\n    var type = typeof value;\r\n    length = length == null ? MAX_SAFE_INTEGER : length;\r\n\r\n    return !!length &&\r\n      (type == 'number' ||\r\n        (type != 'symbol' && reIsUint.test(value))) &&\r\n          (value > -1 && value % 1 == 0 && value < length);\r\n  }\r\n\r\n  /**\r\n   * Checks if the given arguments are from an iteratee call.\r\n   *\r\n   * @private\r\n   * @param {*} value The potential iteratee value argument.\r\n   * @param {*} index The potential iteratee index or key argument.\r\n   * @param {*} object The potential iteratee object argument.\r\n   * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\r\n   *  else `false`.\r\n   */\r\n  function isIterateeCall(value, index, object) {\r\n    if (!isObject(object)) {\r\n      return false;\r\n    }\r\n    var type = typeof index;\r\n    if (type == 'number'\r\n          ? (isArrayLike(object) && isIndex(index, object.length))\r\n          : (type == 'string' && index in object)\r\n        ) {\r\n      return eq(object[index], value);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * This function is like\r\n   * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\r\n   * except that it includes inherited enumerable properties.\r\n   *\r\n   * @private\r\n   * @param {Object} object The object to query.\r\n   * @returns {Array} Returns the array of property names.\r\n   */\r\n  function nativeKeysIn(object) {\r\n    var result = [];\r\n    if (object != null) {\r\n      for (var key in Object(object)) {\r\n        result.push(key);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Converts `value` to a string using `Object.prototype.toString`.\r\n   *\r\n   * @private\r\n   * @param {*} value The value to convert.\r\n   * @returns {string} Returns the converted string.\r\n   */\r\n  function objectToString(value) {\r\n    return nativeObjectToString.call(value);\r\n  }\r\n\r\n  /**\r\n   * A specialized version of `baseRest` which transforms the rest array.\r\n   *\r\n   * @private\r\n   * @param {Function} func The function to apply a rest parameter to.\r\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\r\n   * @param {Function} transform The rest array transform.\r\n   * @returns {Function} Returns the new function.\r\n   */\r\n  function overRest(func, start, transform) {\r\n    start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\r\n    return function() {\r\n      var args = arguments,\r\n          index = -1,\r\n          length = nativeMax(args.length - start, 0),\r\n          array = Array(length);\r\n\r\n      while (++index < length) {\r\n        array[index] = args[start + index];\r\n      }\r\n      index = -1;\r\n      var otherArgs = Array(start + 1);\r\n      while (++index < start) {\r\n        otherArgs[index] = args[index];\r\n      }\r\n      otherArgs[start] = transform(array);\r\n      return func.apply(this, otherArgs);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Sets the `toString` method of `func` to return `string`.\r\n   *\r\n   * @private\r\n   * @param {Function} func The function to modify.\r\n   * @param {Function} string The `toString` result.\r\n   * @returns {Function} Returns `func`.\r\n   */\r\n  var setToString = identity;\r\n\r\n  /*------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Creates an array with all falsey values removed. The values `false`, `null`,\r\n   * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Array\r\n   * @param {Array} array The array to compact.\r\n   * @returns {Array} Returns the new array of filtered values.\r\n   * @example\r\n   *\r\n   * _.compact([0, 1, false, 2, '', 3]);\r\n   * // => [1, 2, 3]\r\n   */\r\n  function compact(array) {\r\n    return baseFilter(array, Boolean);\r\n  }\r\n\r\n  /**\r\n   * Creates a new array concatenating `array` with any additional arrays\r\n   * and/or values.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 4.0.0\r\n   * @category Array\r\n   * @param {Array} array The array to concatenate.\r\n   * @param {...*} [values] The values to concatenate.\r\n   * @returns {Array} Returns the new concatenated array.\r\n   * @example\r\n   *\r\n   * var array = [1];\r\n   * var other = _.concat(array, 2, [3], [[4]]);\r\n   *\r\n   * console.log(other);\r\n   * // => [1, 2, 3, [4]]\r\n   *\r\n   * console.log(array);\r\n   * // => [1]\r\n   */\r\n  function concat() {\r\n    var length = arguments.length;\r\n    if (!length) {\r\n      return [];\r\n    }\r\n    var args = Array(length - 1),\r\n        array = arguments[0],\r\n        index = length;\r\n\r\n    while (index--) {\r\n      args[index - 1] = arguments[index];\r\n    }\r\n    return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\r\n  }\r\n\r\n  /**\r\n   * This method is like `_.find` except that it returns the index of the first\r\n   * element `predicate` returns truthy for instead of the element itself.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 1.1.0\r\n   * @category Array\r\n   * @param {Array} array The array to inspect.\r\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n   * @param {number} [fromIndex=0] The index to search from.\r\n   * @returns {number} Returns the index of the found element, else `-1`.\r\n   * @example\r\n   *\r\n   * var users = [\r\n   *   { 'user': 'barney',  'active': false },\r\n   *   { 'user': 'fred',    'active': false },\r\n   *   { 'user': 'pebbles', 'active': true }\r\n   * ];\r\n   *\r\n   * _.findIndex(users, function(o) { return o.user == 'barney'; });\r\n   * // => 0\r\n   *\r\n   * // The `_.matches` iteratee shorthand.\r\n   * _.findIndex(users, { 'user': 'fred', 'active': false });\r\n   * // => 1\r\n   *\r\n   * // The `_.matchesProperty` iteratee shorthand.\r\n   * _.findIndex(users, ['active', false]);\r\n   * // => 0\r\n   *\r\n   * // The `_.property` iteratee shorthand.\r\n   * _.findIndex(users, 'active');\r\n   * // => 2\r\n   */\r\n  function findIndex(array, predicate, fromIndex) {\r\n    var length = array == null ? 0 : array.length;\r\n    if (!length) {\r\n      return -1;\r\n    }\r\n    var index = fromIndex == null ? 0 : toInteger(fromIndex);\r\n    if (index < 0) {\r\n      index = nativeMax(length + index, 0);\r\n    }\r\n    return baseFindIndex(array, baseIteratee(predicate, 3), index);\r\n  }\r\n\r\n  /**\r\n   * Flattens `array` a single level deep.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Array\r\n   * @param {Array} array The array to flatten.\r\n   * @returns {Array} Returns the new flattened array.\r\n   * @example\r\n   *\r\n   * _.flatten([1, [2, [3, [4]], 5]]);\r\n   * // => [1, 2, [3, [4]], 5]\r\n   */\r\n  function flatten(array) {\r\n    var length = array == null ? 0 : array.length;\r\n    return length ? baseFlatten(array, 1) : [];\r\n  }\r\n\r\n  /**\r\n   * Recursively flattens `array`.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 3.0.0\r\n   * @category Array\r\n   * @param {Array} array The array to flatten.\r\n   * @returns {Array} Returns the new flattened array.\r\n   * @example\r\n   *\r\n   * _.flattenDeep([1, [2, [3, [4]], 5]]);\r\n   * // => [1, 2, 3, 4, 5]\r\n   */\r\n  function flattenDeep(array) {\r\n    var length = array == null ? 0 : array.length;\r\n    return length ? baseFlatten(array, INFINITY) : [];\r\n  }\r\n\r\n  /**\r\n   * Gets the first element of `array`.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @alias first\r\n   * @category Array\r\n   * @param {Array} array The array to query.\r\n   * @returns {*} Returns the first element of `array`.\r\n   * @example\r\n   *\r\n   * _.head([1, 2, 3]);\r\n   * // => 1\r\n   *\r\n   * _.head([]);\r\n   * // => undefined\r\n   */\r\n  function head(array) {\r\n    return (array && array.length) ? array[0] : undefined;\r\n  }\r\n\r\n  /**\r\n   * Gets the index at which the first occurrence of `value` is found in `array`\r\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n   * for equality comparisons. If `fromIndex` is negative, it's used as the\r\n   * offset from the end of `array`.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Array\r\n   * @param {Array} array The array to inspect.\r\n   * @param {*} value The value to search for.\r\n   * @param {number} [fromIndex=0] The index to search from.\r\n   * @returns {number} Returns the index of the matched value, else `-1`.\r\n   * @example\r\n   *\r\n   * _.indexOf([1, 2, 1, 2], 2);\r\n   * // => 1\r\n   *\r\n   * // Search from the `fromIndex`.\r\n   * _.indexOf([1, 2, 1, 2], 2, 2);\r\n   * // => 3\r\n   */\r\n  function indexOf(array, value, fromIndex) {\r\n    var length = array == null ? 0 : array.length;\r\n    if (typeof fromIndex == 'number') {\r\n      fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\r\n    } else {\r\n      fromIndex = 0;\r\n    }\r\n    var index = (fromIndex || 0) - 1,\r\n        isReflexive = value === value;\r\n\r\n    while (++index < length) {\r\n      var other = array[index];\r\n      if ((isReflexive ? other === value : other !== other)) {\r\n        return index;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  /**\r\n   * Gets the last element of `array`.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Array\r\n   * @param {Array} array The array to query.\r\n   * @returns {*} Returns the last element of `array`.\r\n   * @example\r\n   *\r\n   * _.last([1, 2, 3]);\r\n   * // => 3\r\n   */\r\n  function last(array) {\r\n    var length = array == null ? 0 : array.length;\r\n    return length ? array[length - 1] : undefined;\r\n  }\r\n\r\n  /**\r\n   * Creates a slice of `array` from `start` up to, but not including, `end`.\r\n   *\r\n   * **Note:** This method is used instead of\r\n   * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\r\n   * returned.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 3.0.0\r\n   * @category Array\r\n   * @param {Array} array The array to slice.\r\n   * @param {number} [start=0] The start position.\r\n   * @param {number} [end=array.length] The end position.\r\n   * @returns {Array} Returns the slice of `array`.\r\n   */\r\n  function slice(array, start, end) {\r\n    var length = array == null ? 0 : array.length;\r\n    start = start == null ? 0 : +start;\r\n    end = end === undefined ? length : +end;\r\n    return length ? baseSlice(array, start, end) : [];\r\n  }\r\n\r\n  /*------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Creates a `lodash` wrapper instance that wraps `value` with explicit method\r\n   * chain sequences enabled. The result of such sequences must be unwrapped\r\n   * with `_#value`.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 1.3.0\r\n   * @category Seq\r\n   * @param {*} value The value to wrap.\r\n   * @returns {Object} Returns the new `lodash` wrapper instance.\r\n   * @example\r\n   *\r\n   * var users = [\r\n   *   { 'user': 'barney',  'age': 36 },\r\n   *   { 'user': 'fred',    'age': 40 },\r\n   *   { 'user': 'pebbles', 'age': 1 }\r\n   * ];\r\n   *\r\n   * var youngest = _\r\n   *   .chain(users)\r\n   *   .sortBy('age')\r\n   *   .map(function(o) {\r\n   *     return o.user + ' is ' + o.age;\r\n   *   })\r\n   *   .head()\r\n   *   .value();\r\n   * // => 'pebbles is 1'\r\n   */\r\n  function chain(value) {\r\n    var result = lodash(value);\r\n    result.__chain__ = true;\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * This method invokes `interceptor` and returns `value`. The interceptor\r\n   * is invoked with one argument; (value). The purpose of this method is to\r\n   * \"tap into\" a method chain sequence in order to modify intermediate results.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Seq\r\n   * @param {*} value The value to provide to `interceptor`.\r\n   * @param {Function} interceptor The function to invoke.\r\n   * @returns {*} Returns `value`.\r\n   * @example\r\n   *\r\n   * _([1, 2, 3])\r\n   *  .tap(function(array) {\r\n   *    // Mutate input array.\r\n   *    array.pop();\r\n   *  })\r\n   *  .reverse()\r\n   *  .value();\r\n   * // => [2, 1]\r\n   */\r\n  function tap(value, interceptor) {\r\n    interceptor(value);\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * This method is like `_.tap` except that it returns the result of `interceptor`.\r\n   * The purpose of this method is to \"pass thru\" values replacing intermediate\r\n   * results in a method chain sequence.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 3.0.0\r\n   * @category Seq\r\n   * @param {*} value The value to provide to `interceptor`.\r\n   * @param {Function} interceptor The function to invoke.\r\n   * @returns {*} Returns the result of `interceptor`.\r\n   * @example\r\n   *\r\n   * _('  abc  ')\r\n   *  .chain()\r\n   *  .trim()\r\n   *  .thru(function(value) {\r\n   *    return [value];\r\n   *  })\r\n   *  .value();\r\n   * // => ['abc']\r\n   */\r\n  function thru(value, interceptor) {\r\n    return interceptor(value);\r\n  }\r\n\r\n  /**\r\n   * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\r\n   *\r\n   * @name chain\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Seq\r\n   * @returns {Object} Returns the new `lodash` wrapper instance.\r\n   * @example\r\n   *\r\n   * var users = [\r\n   *   { 'user': 'barney', 'age': 36 },\r\n   *   { 'user': 'fred',   'age': 40 }\r\n   * ];\r\n   *\r\n   * // A sequence without explicit chaining.\r\n   * _(users).head();\r\n   * // => { 'user': 'barney', 'age': 36 }\r\n   *\r\n   * // A sequence with explicit chaining.\r\n   * _(users)\r\n   *   .chain()\r\n   *   .head()\r\n   *   .pick('user')\r\n   *   .value();\r\n   * // => { 'user': 'barney' }\r\n   */\r\n  function wrapperChain() {\r\n    return chain(this);\r\n  }\r\n\r\n  /**\r\n   * Executes the chain sequence to resolve the unwrapped value.\r\n   *\r\n   * @name value\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @alias toJSON, valueOf\r\n   * @category Seq\r\n   * @returns {*} Returns the resolved unwrapped value.\r\n   * @example\r\n   *\r\n   * _([1, 2, 3]).value();\r\n   * // => [1, 2, 3]\r\n   */\r\n  function wrapperValue() {\r\n    return baseWrapperValue(this.__wrapped__, this.__actions__);\r\n  }\r\n\r\n  /*------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Checks if `predicate` returns truthy for **all** elements of `collection`.\r\n   * Iteration is stopped once `predicate` returns falsey. The predicate is\r\n   * invoked with three arguments: (value, index|key, collection).\r\n   *\r\n   * **Note:** This method returns `true` for\r\n   * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\r\n   * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\r\n   * elements of empty collections.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Collection\r\n   * @param {Array|Object} collection The collection to iterate over.\r\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\r\n   *  else `false`.\r\n   * @example\r\n   *\r\n   * _.every([true, 1, null, 'yes'], Boolean);\r\n   * // => false\r\n   *\r\n   * var users = [\r\n   *   { 'user': 'barney', 'age': 36, 'active': false },\r\n   *   { 'user': 'fred',   'age': 40, 'active': false }\r\n   * ];\r\n   *\r\n   * // The `_.matches` iteratee shorthand.\r\n   * _.every(users, { 'user': 'barney', 'active': false });\r\n   * // => false\r\n   *\r\n   * // The `_.matchesProperty` iteratee shorthand.\r\n   * _.every(users, ['active', false]);\r\n   * // => true\r\n   *\r\n   * // The `_.property` iteratee shorthand.\r\n   * _.every(users, 'active');\r\n   * // => false\r\n   */\r\n  function every(collection, predicate, guard) {\r\n    predicate = guard ? undefined : predicate;\r\n    return baseEvery(collection, baseIteratee(predicate));\r\n  }\r\n\r\n  /**\r\n   * Iterates over elements of `collection`, returning an array of all elements\r\n   * `predicate` returns truthy for. The predicate is invoked with three\r\n   * arguments: (value, index|key, collection).\r\n   *\r\n   * **Note:** Unlike `_.remove`, this method returns a new array.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Collection\r\n   * @param {Array|Object} collection The collection to iterate over.\r\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n   * @returns {Array} Returns the new filtered array.\r\n   * @see _.reject\r\n   * @example\r\n   *\r\n   * var users = [\r\n   *   { 'user': 'barney', 'age': 36, 'active': true },\r\n   *   { 'user': 'fred',   'age': 40, 'active': false }\r\n   * ];\r\n   *\r\n   * _.filter(users, function(o) { return !o.active; });\r\n   * // => objects for ['fred']\r\n   *\r\n   * // The `_.matches` iteratee shorthand.\r\n   * _.filter(users, { 'age': 36, 'active': true });\r\n   * // => objects for ['barney']\r\n   *\r\n   * // The `_.matchesProperty` iteratee shorthand.\r\n   * _.filter(users, ['active', false]);\r\n   * // => objects for ['fred']\r\n   *\r\n   * // The `_.property` iteratee shorthand.\r\n   * _.filter(users, 'active');\r\n   * // => objects for ['barney']\r\n   */\r\n  function filter(collection, predicate) {\r\n    return baseFilter(collection, baseIteratee(predicate));\r\n  }\r\n\r\n  /**\r\n   * Iterates over elements of `collection`, returning the first element\r\n   * `predicate` returns truthy for. The predicate is invoked with three\r\n   * arguments: (value, index|key, collection).\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Collection\r\n   * @param {Array|Object} collection The collection to inspect.\r\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n   * @param {number} [fromIndex=0] The index to search from.\r\n   * @returns {*} Returns the matched element, else `undefined`.\r\n   * @example\r\n   *\r\n   * var users = [\r\n   *   { 'user': 'barney',  'age': 36, 'active': true },\r\n   *   { 'user': 'fred',    'age': 40, 'active': false },\r\n   *   { 'user': 'pebbles', 'age': 1,  'active': true }\r\n   * ];\r\n   *\r\n   * _.find(users, function(o) { return o.age < 40; });\r\n   * // => object for 'barney'\r\n   *\r\n   * // The `_.matches` iteratee shorthand.\r\n   * _.find(users, { 'age': 1, 'active': true });\r\n   * // => object for 'pebbles'\r\n   *\r\n   * // The `_.matchesProperty` iteratee shorthand.\r\n   * _.find(users, ['active', false]);\r\n   * // => object for 'fred'\r\n   *\r\n   * // The `_.property` iteratee shorthand.\r\n   * _.find(users, 'active');\r\n   * // => object for 'barney'\r\n   */\r\n  var find = createFind(findIndex);\r\n\r\n  /**\r\n   * Iterates over elements of `collection` and invokes `iteratee` for each element.\r\n   * The iteratee is invoked with three arguments: (value, index|key, collection).\r\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\r\n   *\r\n   * **Note:** As with other \"Collections\" methods, objects with a \"length\"\r\n   * property are iterated like arrays. To avoid this behavior use `_.forIn`\r\n   * or `_.forOwn` for object iteration.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @alias each\r\n   * @category Collection\r\n   * @param {Array|Object} collection The collection to iterate over.\r\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\r\n   * @returns {Array|Object} Returns `collection`.\r\n   * @see _.forEachRight\r\n   * @example\r\n   *\r\n   * _.forEach([1, 2], function(value) {\r\n   *   console.log(value);\r\n   * });\r\n   * // => Logs `1` then `2`.\r\n   *\r\n   * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\r\n   *   console.log(key);\r\n   * });\r\n   * // => Logs 'a' then 'b' (iteration order is not guaranteed).\r\n   */\r\n  function forEach(collection, iteratee) {\r\n    return baseEach(collection, baseIteratee(iteratee));\r\n  }\r\n\r\n  /**\r\n   * Creates an array of values by running each element in `collection` thru\r\n   * `iteratee`. The iteratee is invoked with three arguments:\r\n   * (value, index|key, collection).\r\n   *\r\n   * Many lodash methods are guarded to work as iteratees for methods like\r\n   * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\r\n   *\r\n   * The guarded methods are:\r\n   * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\r\n   * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\r\n   * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\r\n   * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Collection\r\n   * @param {Array|Object} collection The collection to iterate over.\r\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\r\n   * @returns {Array} Returns the new mapped array.\r\n   * @example\r\n   *\r\n   * function square(n) {\r\n   *   return n * n;\r\n   * }\r\n   *\r\n   * _.map([4, 8], square);\r\n   * // => [16, 64]\r\n   *\r\n   * _.map({ 'a': 4, 'b': 8 }, square);\r\n   * // => [16, 64] (iteration order is not guaranteed)\r\n   *\r\n   * var users = [\r\n   *   { 'user': 'barney' },\r\n   *   { 'user': 'fred' }\r\n   * ];\r\n   *\r\n   * // The `_.property` iteratee shorthand.\r\n   * _.map(users, 'user');\r\n   * // => ['barney', 'fred']\r\n   */\r\n  function map(collection, iteratee) {\r\n    return baseMap(collection, baseIteratee(iteratee));\r\n  }\r\n\r\n  /**\r\n   * Reduces `collection` to a value which is the accumulated result of running\r\n   * each element in `collection` thru `iteratee`, where each successive\r\n   * invocation is supplied the return value of the previous. If `accumulator`\r\n   * is not given, the first element of `collection` is used as the initial\r\n   * value. The iteratee is invoked with four arguments:\r\n   * (accumulator, value, index|key, collection).\r\n   *\r\n   * Many lodash methods are guarded to work as iteratees for methods like\r\n   * `_.reduce`, `_.reduceRight`, and `_.transform`.\r\n   *\r\n   * The guarded methods are:\r\n   * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\r\n   * and `sortBy`\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Collection\r\n   * @param {Array|Object} collection The collection to iterate over.\r\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\r\n   * @param {*} [accumulator] The initial value.\r\n   * @returns {*} Returns the accumulated value.\r\n   * @see _.reduceRight\r\n   * @example\r\n   *\r\n   * _.reduce([1, 2], function(sum, n) {\r\n   *   return sum + n;\r\n   * }, 0);\r\n   * // => 3\r\n   *\r\n   * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\r\n   *   (result[value] || (result[value] = [])).push(key);\r\n   *   return result;\r\n   * }, {});\r\n   * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\r\n   */\r\n  function reduce(collection, iteratee, accumulator) {\r\n    return baseReduce(collection, baseIteratee(iteratee), accumulator, arguments.length < 3, baseEach);\r\n  }\r\n\r\n  /**\r\n   * Gets the size of `collection` by returning its length for array-like\r\n   * values or the number of own enumerable string keyed properties for objects.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Collection\r\n   * @param {Array|Object|string} collection The collection to inspect.\r\n   * @returns {number} Returns the collection size.\r\n   * @example\r\n   *\r\n   * _.size([1, 2, 3]);\r\n   * // => 3\r\n   *\r\n   * _.size({ 'a': 1, 'b': 2 });\r\n   * // => 2\r\n   *\r\n   * _.size('pebbles');\r\n   * // => 7\r\n   */\r\n  function size(collection) {\r\n    if (collection == null) {\r\n      return 0;\r\n    }\r\n    collection = isArrayLike(collection) ? collection : nativeKeys(collection);\r\n    return collection.length;\r\n  }\r\n\r\n  /**\r\n   * Checks if `predicate` returns truthy for **any** element of `collection`.\r\n   * Iteration is stopped once `predicate` returns truthy. The predicate is\r\n   * invoked with three arguments: (value, index|key, collection).\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Collection\r\n   * @param {Array|Object} collection The collection to iterate over.\r\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\r\n   *  else `false`.\r\n   * @example\r\n   *\r\n   * _.some([null, 0, 'yes', false], Boolean);\r\n   * // => true\r\n   *\r\n   * var users = [\r\n   *   { 'user': 'barney', 'active': true },\r\n   *   { 'user': 'fred',   'active': false }\r\n   * ];\r\n   *\r\n   * // The `_.matches` iteratee shorthand.\r\n   * _.some(users, { 'user': 'barney', 'active': false });\r\n   * // => false\r\n   *\r\n   * // The `_.matchesProperty` iteratee shorthand.\r\n   * _.some(users, ['active', false]);\r\n   * // => true\r\n   *\r\n   * // The `_.property` iteratee shorthand.\r\n   * _.some(users, 'active');\r\n   * // => true\r\n   */\r\n  function some(collection, predicate, guard) {\r\n    predicate = guard ? undefined : predicate;\r\n    return baseSome(collection, baseIteratee(predicate));\r\n  }\r\n\r\n  /**\r\n   * Creates an array of elements, sorted in ascending order by the results of\r\n   * running each element in a collection thru each iteratee. This method\r\n   * performs a stable sort, that is, it preserves the original sort order of\r\n   * equal elements. The iteratees are invoked with one argument: (value).\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Collection\r\n   * @param {Array|Object} collection The collection to iterate over.\r\n   * @param {...(Function|Function[])} [iteratees=[_.identity]]\r\n   *  The iteratees to sort by.\r\n   * @returns {Array} Returns the new sorted array.\r\n   * @example\r\n   *\r\n   * var users = [\r\n   *   { 'user': 'fred',   'age': 48 },\r\n   *   { 'user': 'barney', 'age': 36 },\r\n   *   { 'user': 'fred',   'age': 40 },\r\n   *   { 'user': 'barney', 'age': 34 }\r\n   * ];\r\n   *\r\n   * _.sortBy(users, [function(o) { return o.user; }]);\r\n   * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\r\n   *\r\n   * _.sortBy(users, ['user', 'age']);\r\n   * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\r\n   */\r\n  function sortBy(collection, iteratee) {\r\n    var index = 0;\r\n    iteratee = baseIteratee(iteratee);\r\n\r\n    return baseMap(baseMap(collection, function(value, key, collection) {\r\n      return { 'value': value, 'index': index++, 'criteria': iteratee(value, key, collection) };\r\n    }).sort(function(object, other) {\r\n      return compareAscending(object.criteria, other.criteria) || (object.index - other.index);\r\n    }), baseProperty('value'));\r\n  }\r\n\r\n  /*------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Creates a function that invokes `func`, with the `this` binding and arguments\r\n   * of the created function, while it's called less than `n` times. Subsequent\r\n   * calls to the created function return the result of the last `func` invocation.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 3.0.0\r\n   * @category Function\r\n   * @param {number} n The number of calls at which `func` is no longer invoked.\r\n   * @param {Function} func The function to restrict.\r\n   * @returns {Function} Returns the new restricted function.\r\n   * @example\r\n   *\r\n   * jQuery(element).on('click', _.before(5, addContactToList));\r\n   * // => Allows adding up to 4 contacts to the list.\r\n   */\r\n  function before(n, func) {\r\n    var result;\r\n    if (typeof func != 'function') {\r\n      throw new TypeError(FUNC_ERROR_TEXT);\r\n    }\r\n    n = toInteger(n);\r\n    return function() {\r\n      if (--n > 0) {\r\n        result = func.apply(this, arguments);\r\n      }\r\n      if (n <= 1) {\r\n        func = undefined;\r\n      }\r\n      return result;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Creates a function that invokes `func` with the `this` binding of `thisArg`\r\n   * and `partials` prepended to the arguments it receives.\r\n   *\r\n   * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\r\n   * may be used as a placeholder for partially applied arguments.\r\n   *\r\n   * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\r\n   * property of bound functions.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Function\r\n   * @param {Function} func The function to bind.\r\n   * @param {*} thisArg The `this` binding of `func`.\r\n   * @param {...*} [partials] The arguments to be partially applied.\r\n   * @returns {Function} Returns the new bound function.\r\n   * @example\r\n   *\r\n   * function greet(greeting, punctuation) {\r\n   *   return greeting + ' ' + this.user + punctuation;\r\n   * }\r\n   *\r\n   * var object = { 'user': 'fred' };\r\n   *\r\n   * var bound = _.bind(greet, object, 'hi');\r\n   * bound('!');\r\n   * // => 'hi fred!'\r\n   *\r\n   * // Bound with placeholders.\r\n   * var bound = _.bind(greet, object, _, '!');\r\n   * bound('hi');\r\n   * // => 'hi fred!'\r\n   */\r\n  var bind = baseRest(function(func, thisArg, partials) {\r\n    return createPartial(func, WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG, thisArg, partials);\r\n  });\r\n\r\n  /**\r\n   * Defers invoking the `func` until the current call stack has cleared. Any\r\n   * additional arguments are provided to `func` when it's invoked.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Function\r\n   * @param {Function} func The function to defer.\r\n   * @param {...*} [args] The arguments to invoke `func` with.\r\n   * @returns {number} Returns the timer id.\r\n   * @example\r\n   *\r\n   * _.defer(function(text) {\r\n   *   console.log(text);\r\n   * }, 'deferred');\r\n   * // => Logs 'deferred' after one millisecond.\r\n   */\r\n  var defer = baseRest(function(func, args) {\r\n    return baseDelay(func, 1, args);\r\n  });\r\n\r\n  /**\r\n   * Invokes `func` after `wait` milliseconds. Any additional arguments are\r\n   * provided to `func` when it's invoked.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Function\r\n   * @param {Function} func The function to delay.\r\n   * @param {number} wait The number of milliseconds to delay invocation.\r\n   * @param {...*} [args] The arguments to invoke `func` with.\r\n   * @returns {number} Returns the timer id.\r\n   * @example\r\n   *\r\n   * _.delay(function(text) {\r\n   *   console.log(text);\r\n   * }, 1000, 'later');\r\n   * // => Logs 'later' after one second.\r\n   */\r\n  var delay = baseRest(function(func, wait, args) {\r\n    return baseDelay(func, toNumber(wait) || 0, args);\r\n  });\r\n\r\n  /**\r\n   * Creates a function that negates the result of the predicate `func`. The\r\n   * `func` predicate is invoked with the `this` binding and arguments of the\r\n   * created function.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 3.0.0\r\n   * @category Function\r\n   * @param {Function} predicate The predicate to negate.\r\n   * @returns {Function} Returns the new negated function.\r\n   * @example\r\n   *\r\n   * function isEven(n) {\r\n   *   return n % 2 == 0;\r\n   * }\r\n   *\r\n   * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\r\n   * // => [1, 3, 5]\r\n   */\r\n  function negate(predicate) {\r\n    if (typeof predicate != 'function') {\r\n      throw new TypeError(FUNC_ERROR_TEXT);\r\n    }\r\n    return function() {\r\n      var args = arguments;\r\n      return !predicate.apply(this, args);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Creates a function that is restricted to invoking `func` once. Repeat calls\r\n   * to the function return the value of the first invocation. The `func` is\r\n   * invoked with the `this` binding and arguments of the created function.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Function\r\n   * @param {Function} func The function to restrict.\r\n   * @returns {Function} Returns the new restricted function.\r\n   * @example\r\n   *\r\n   * var initialize = _.once(createApplication);\r\n   * initialize();\r\n   * initialize();\r\n   * // => `createApplication` is invoked once\r\n   */\r\n  function once(func) {\r\n    return before(2, func);\r\n  }\r\n\r\n  /*------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Creates a shallow clone of `value`.\r\n   *\r\n   * **Note:** This method is loosely based on the\r\n   * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\r\n   * and supports cloning arrays, array buffers, booleans, date objects, maps,\r\n   * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\r\n   * arrays. The own enumerable properties of `arguments` objects are cloned\r\n   * as plain objects. An empty object is returned for uncloneable values such\r\n   * as error objects, functions, DOM nodes, and WeakMaps.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Lang\r\n   * @param {*} value The value to clone.\r\n   * @returns {*} Returns the cloned value.\r\n   * @see _.cloneDeep\r\n   * @example\r\n   *\r\n   * var objects = [{ 'a': 1 }, { 'b': 2 }];\r\n   *\r\n   * var shallow = _.clone(objects);\r\n   * console.log(shallow[0] === objects[0]);\r\n   * // => true\r\n   */\r\n  function clone(value) {\r\n    if (!isObject(value)) {\r\n      return value;\r\n    }\r\n    return isArray(value) ? copyArray(value) : copyObject(value, nativeKeys(value));\r\n  }\r\n\r\n  /**\r\n   * Performs a\r\n   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n   * comparison between two values to determine if they are equivalent.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 4.0.0\r\n   * @category Lang\r\n   * @param {*} value The value to compare.\r\n   * @param {*} other The other value to compare.\r\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\r\n   * @example\r\n   *\r\n   * var object = { 'a': 1 };\r\n   * var other = { 'a': 1 };\r\n   *\r\n   * _.eq(object, object);\r\n   * // => true\r\n   *\r\n   * _.eq(object, other);\r\n   * // => false\r\n   *\r\n   * _.eq('a', 'a');\r\n   * // => true\r\n   *\r\n   * _.eq('a', Object('a'));\r\n   * // => false\r\n   *\r\n   * _.eq(NaN, NaN);\r\n   * // => true\r\n   */\r\n  function eq(value, other) {\r\n    return value === other || (value !== value && other !== other);\r\n  }\r\n\r\n  /**\r\n   * Checks if `value` is likely an `arguments` object.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Lang\r\n   * @param {*} value The value to check.\r\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\r\n   *  else `false`.\r\n   * @example\r\n   *\r\n   * _.isArguments(function() { return arguments; }());\r\n   * // => true\r\n   *\r\n   * _.isArguments([1, 2, 3]);\r\n   * // => false\r\n   */\r\n  var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\r\n    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\r\n      !propertyIsEnumerable.call(value, 'callee');\r\n  };\r\n\r\n  /**\r\n   * Checks if `value` is classified as an `Array` object.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Lang\r\n   * @param {*} value The value to check.\r\n   * @returns {boolean} Returns `true` if `value` is an array, else `false`.\r\n   * @example\r\n   *\r\n   * _.isArray([1, 2, 3]);\r\n   * // => true\r\n   *\r\n   * _.isArray(document.body.children);\r\n   * // => false\r\n   *\r\n   * _.isArray('abc');\r\n   * // => false\r\n   *\r\n   * _.isArray(_.noop);\r\n   * // => false\r\n   */\r\n  var isArray = Array.isArray;\r\n\r\n  /**\r\n   * Checks if `value` is array-like. A value is considered array-like if it's\r\n   * not a function and has a `value.length` that's an integer greater than or\r\n   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 4.0.0\r\n   * @category Lang\r\n   * @param {*} value The value to check.\r\n   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n   * @example\r\n   *\r\n   * _.isArrayLike([1, 2, 3]);\r\n   * // => true\r\n   *\r\n   * _.isArrayLike(document.body.children);\r\n   * // => true\r\n   *\r\n   * _.isArrayLike('abc');\r\n   * // => true\r\n   *\r\n   * _.isArrayLike(_.noop);\r\n   * // => false\r\n   */\r\n  function isArrayLike(value) {\r\n    return value != null && isLength(value.length) && !isFunction(value);\r\n  }\r\n\r\n  /**\r\n   * Checks if `value` is classified as a boolean primitive or object.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Lang\r\n   * @param {*} value The value to check.\r\n   * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n   * @example\r\n   *\r\n   * _.isBoolean(false);\r\n   * // => true\r\n   *\r\n   * _.isBoolean(null);\r\n   * // => false\r\n   */\r\n  function isBoolean(value) {\r\n    return value === true || value === false ||\r\n      (isObjectLike(value) && baseGetTag(value) == boolTag);\r\n  }\r\n\r\n  /**\r\n   * Checks if `value` is classified as a `Date` object.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Lang\r\n   * @param {*} value The value to check.\r\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\r\n   * @example\r\n   *\r\n   * _.isDate(new Date);\r\n   * // => true\r\n   *\r\n   * _.isDate('Mon April 23 2012');\r\n   * // => false\r\n   */\r\n  var isDate = baseIsDate;\r\n\r\n  /**\r\n   * Checks if `value` is an empty object, collection, map, or set.\r\n   *\r\n   * Objects are considered empty if they have no own enumerable string keyed\r\n   * properties.\r\n   *\r\n   * Array-like values such as `arguments` objects, arrays, buffers, strings, or\r\n   * jQuery-like collections are considered empty if they have a `length` of `0`.\r\n   * Similarly, maps and sets are considered empty if they have a `size` of `0`.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Lang\r\n   * @param {*} value The value to check.\r\n   * @returns {boolean} Returns `true` if `value` is empty, else `false`.\r\n   * @example\r\n   *\r\n   * _.isEmpty(null);\r\n   * // => true\r\n   *\r\n   * _.isEmpty(true);\r\n   * // => true\r\n   *\r\n   * _.isEmpty(1);\r\n   * // => true\r\n   *\r\n   * _.isEmpty([1, 2, 3]);\r\n   * // => false\r\n   *\r\n   * _.isEmpty({ 'a': 1 });\r\n   * // => false\r\n   */\r\n  function isEmpty(value) {\r\n    if (isArrayLike(value) &&\r\n        (isArray(value) || isString(value) ||\r\n          isFunction(value.splice) || isArguments(value))) {\r\n      return !value.length;\r\n    }\r\n    return !nativeKeys(value).length;\r\n  }\r\n\r\n  /**\r\n   * Performs a deep comparison between two values to determine if they are\r\n   * equivalent.\r\n   *\r\n   * **Note:** This method supports comparing arrays, array buffers, booleans,\r\n   * date objects, error objects, maps, numbers, `Object` objects, regexes,\r\n   * sets, strings, symbols, and typed arrays. `Object` objects are compared\r\n   * by their own, not inherited, enumerable properties. Functions and DOM\r\n   * nodes are compared by strict equality, i.e. `===`.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Lang\r\n   * @param {*} value The value to compare.\r\n   * @param {*} other The other value to compare.\r\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\r\n   * @example\r\n   *\r\n   * var object = { 'a': 1 };\r\n   * var other = { 'a': 1 };\r\n   *\r\n   * _.isEqual(object, other);\r\n   * // => true\r\n   *\r\n   * object === other;\r\n   * // => false\r\n   */\r\n  function isEqual(value, other) {\r\n    return baseIsEqual(value, other);\r\n  }\r\n\r\n  /**\r\n   * Checks if `value` is a finite primitive number.\r\n   *\r\n   * **Note:** This method is based on\r\n   * [`Number.isFinite`](https://mdn.io/Number/isFinite).\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Lang\r\n   * @param {*} value The value to check.\r\n   * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\r\n   * @example\r\n   *\r\n   * _.isFinite(3);\r\n   * // => true\r\n   *\r\n   * _.isFinite(Number.MIN_VALUE);\r\n   * // => true\r\n   *\r\n   * _.isFinite(Infinity);\r\n   * // => false\r\n   *\r\n   * _.isFinite('3');\r\n   * // => false\r\n   */\r\n  function isFinite(value) {\r\n    return typeof value == 'number' && nativeIsFinite(value);\r\n  }\r\n\r\n  /**\r\n   * Checks if `value` is classified as a `Function` object.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Lang\r\n   * @param {*} value The value to check.\r\n   * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n   * @example\r\n   *\r\n   * _.isFunction(_);\r\n   * // => true\r\n   *\r\n   * _.isFunction(/abc/);\r\n   * // => false\r\n   */\r\n  function isFunction(value) {\r\n    if (!isObject(value)) {\r\n      return false;\r\n    }\r\n    // The use of `Object#toString` avoids issues with the `typeof` operator\r\n    // in Safari 9 which returns 'object' for typed arrays and other constructors.\r\n    var tag = baseGetTag(value);\r\n    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\r\n  }\r\n\r\n  /**\r\n   * Checks if `value` is a valid array-like length.\r\n   *\r\n   * **Note:** This method is loosely based on\r\n   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 4.0.0\r\n   * @category Lang\r\n   * @param {*} value The value to check.\r\n   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\r\n   * @example\r\n   *\r\n   * _.isLength(3);\r\n   * // => true\r\n   *\r\n   * _.isLength(Number.MIN_VALUE);\r\n   * // => false\r\n   *\r\n   * _.isLength(Infinity);\r\n   * // => false\r\n   *\r\n   * _.isLength('3');\r\n   * // => false\r\n   */\r\n  function isLength(value) {\r\n    return typeof value == 'number' &&\r\n      value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\r\n  }\r\n\r\n  /**\r\n   * Checks if `value` is the\r\n   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\r\n   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Lang\r\n   * @param {*} value The value to check.\r\n   * @returns {boolean} Returns `true` if `value` is an object, else `false`.\r\n   * @example\r\n   *\r\n   * _.isObject({});\r\n   * // => true\r\n   *\r\n   * _.isObject([1, 2, 3]);\r\n   * // => true\r\n   *\r\n   * _.isObject(_.noop);\r\n   * // => true\r\n   *\r\n   * _.isObject(null);\r\n   * // => false\r\n   */\r\n  function isObject(value) {\r\n    var type = typeof value;\r\n    return value != null && (type == 'object' || type == 'function');\r\n  }\r\n\r\n  /**\r\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\r\n   * and has a `typeof` result of \"object\".\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 4.0.0\r\n   * @category Lang\r\n   * @param {*} value The value to check.\r\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\r\n   * @example\r\n   *\r\n   * _.isObjectLike({});\r\n   * // => true\r\n   *\r\n   * _.isObjectLike([1, 2, 3]);\r\n   * // => true\r\n   *\r\n   * _.isObjectLike(_.noop);\r\n   * // => false\r\n   *\r\n   * _.isObjectLike(null);\r\n   * // => false\r\n   */\r\n  function isObjectLike(value) {\r\n    return value != null && typeof value == 'object';\r\n  }\r\n\r\n  /**\r\n   * Checks if `value` is `NaN`.\r\n   *\r\n   * **Note:** This method is based on\r\n   * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\r\n   * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\r\n   * `undefined` and other non-number values.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Lang\r\n   * @param {*} value The value to check.\r\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n   * @example\r\n   *\r\n   * _.isNaN(NaN);\r\n   * // => true\r\n   *\r\n   * _.isNaN(new Number(NaN));\r\n   * // => true\r\n   *\r\n   * isNaN(undefined);\r\n   * // => true\r\n   *\r\n   * _.isNaN(undefined);\r\n   * // => false\r\n   */\r\n  function isNaN(value) {\r\n    // An `NaN` primitive is the only value that is not equal to itself.\r\n    // Perform the `toStringTag` check first to avoid errors with some\r\n    // ActiveX objects in IE.\r\n    return isNumber(value) && value != +value;\r\n  }\r\n\r\n  /**\r\n   * Checks if `value` is `null`.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Lang\r\n   * @param {*} value The value to check.\r\n   * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\r\n   * @example\r\n   *\r\n   * _.isNull(null);\r\n   * // => true\r\n   *\r\n   * _.isNull(void 0);\r\n   * // => false\r\n   */\r\n  function isNull(value) {\r\n    return value === null;\r\n  }\r\n\r\n  /**\r\n   * Checks if `value` is classified as a `Number` primitive or object.\r\n   *\r\n   * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\r\n   * classified as numbers, use the `_.isFinite` method.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Lang\r\n   * @param {*} value The value to check.\r\n   * @returns {boolean} Returns `true` if `value` is a number, else `false`.\r\n   * @example\r\n   *\r\n   * _.isNumber(3);\r\n   * // => true\r\n   *\r\n   * _.isNumber(Number.MIN_VALUE);\r\n   * // => true\r\n   *\r\n   * _.isNumber(Infinity);\r\n   * // => true\r\n   *\r\n   * _.isNumber('3');\r\n   * // => false\r\n   */\r\n  function isNumber(value) {\r\n    return typeof value == 'number' ||\r\n      (isObjectLike(value) && baseGetTag(value) == numberTag);\r\n  }\r\n\r\n  /**\r\n   * Checks if `value` is classified as a `RegExp` object.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.1.0\r\n   * @category Lang\r\n   * @param {*} value The value to check.\r\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\r\n   * @example\r\n   *\r\n   * _.isRegExp(/abc/);\r\n   * // => true\r\n   *\r\n   * _.isRegExp('/abc/');\r\n   * // => false\r\n   */\r\n  var isRegExp = baseIsRegExp;\r\n\r\n  /**\r\n   * Checks if `value` is classified as a `String` primitive or object.\r\n   *\r\n   * @static\r\n   * @since 0.1.0\r\n   * @memberOf _\r\n   * @category Lang\r\n   * @param {*} value The value to check.\r\n   * @returns {boolean} Returns `true` if `value` is a string, else `false`.\r\n   * @example\r\n   *\r\n   * _.isString('abc');\r\n   * // => true\r\n   *\r\n   * _.isString(1);\r\n   * // => false\r\n   */\r\n  function isString(value) {\r\n    return typeof value == 'string' ||\r\n      (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\r\n  }\r\n\r\n  /**\r\n   * Checks if `value` is `undefined`.\r\n   *\r\n   * @static\r\n   * @since 0.1.0\r\n   * @memberOf _\r\n   * @category Lang\r\n   * @param {*} value The value to check.\r\n   * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\r\n   * @example\r\n   *\r\n   * _.isUndefined(void 0);\r\n   * // => true\r\n   *\r\n   * _.isUndefined(null);\r\n   * // => false\r\n   */\r\n  function isUndefined(value) {\r\n    return value === undefined;\r\n  }\r\n\r\n  /**\r\n   * Converts `value` to an array.\r\n   *\r\n   * @static\r\n   * @since 0.1.0\r\n   * @memberOf _\r\n   * @category Lang\r\n   * @param {*} value The value to convert.\r\n   * @returns {Array} Returns the converted array.\r\n   * @example\r\n   *\r\n   * _.toArray({ 'a': 1, 'b': 2 });\r\n   * // => [1, 2]\r\n   *\r\n   * _.toArray('abc');\r\n   * // => ['a', 'b', 'c']\r\n   *\r\n   * _.toArray(1);\r\n   * // => []\r\n   *\r\n   * _.toArray(null);\r\n   * // => []\r\n   */\r\n  function toArray(value) {\r\n    if (!isArrayLike(value)) {\r\n      return values(value);\r\n    }\r\n    return value.length ? copyArray(value) : [];\r\n  }\r\n\r\n  /**\r\n   * Converts `value` to an integer.\r\n   *\r\n   * **Note:** This method is loosely based on\r\n   * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 4.0.0\r\n   * @category Lang\r\n   * @param {*} value The value to convert.\r\n   * @returns {number} Returns the converted integer.\r\n   * @example\r\n   *\r\n   * _.toInteger(3.2);\r\n   * // => 3\r\n   *\r\n   * _.toInteger(Number.MIN_VALUE);\r\n   * // => 0\r\n   *\r\n   * _.toInteger(Infinity);\r\n   * // => 1.7976931348623157e+308\r\n   *\r\n   * _.toInteger('3.2');\r\n   * // => 3\r\n   */\r\n  var toInteger = Number;\r\n\r\n  /**\r\n   * Converts `value` to a number.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 4.0.0\r\n   * @category Lang\r\n   * @param {*} value The value to process.\r\n   * @returns {number} Returns the number.\r\n   * @example\r\n   *\r\n   * _.toNumber(3.2);\r\n   * // => 3.2\r\n   *\r\n   * _.toNumber(Number.MIN_VALUE);\r\n   * // => 5e-324\r\n   *\r\n   * _.toNumber(Infinity);\r\n   * // => Infinity\r\n   *\r\n   * _.toNumber('3.2');\r\n   * // => 3.2\r\n   */\r\n  var toNumber = Number;\r\n\r\n  /**\r\n   * Converts `value` to a string. An empty string is returned for `null`\r\n   * and `undefined` values. The sign of `-0` is preserved.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 4.0.0\r\n   * @category Lang\r\n   * @param {*} value The value to convert.\r\n   * @returns {string} Returns the converted string.\r\n   * @example\r\n   *\r\n   * _.toString(null);\r\n   * // => ''\r\n   *\r\n   * _.toString(-0);\r\n   * // => '-0'\r\n   *\r\n   * _.toString([1, 2, 3]);\r\n   * // => '1,2,3'\r\n   */\r\n  function toString(value) {\r\n    if (typeof value == 'string') {\r\n      return value;\r\n    }\r\n    return value == null ? '' : (value + '');\r\n  }\r\n\r\n  /*------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Assigns own enumerable string keyed properties of source objects to the\r\n   * destination object. Source objects are applied from left to right.\r\n   * Subsequent sources overwrite property assignments of previous sources.\r\n   *\r\n   * **Note:** This method mutates `object` and is loosely based on\r\n   * [`Object.assign`](https://mdn.io/Object/assign).\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 0.10.0\r\n   * @category Object\r\n   * @param {Object} object The destination object.\r\n   * @param {...Object} [sources] The source objects.\r\n   * @returns {Object} Returns `object`.\r\n   * @see _.assignIn\r\n   * @example\r\n   *\r\n   * function Foo() {\r\n   *   this.a = 1;\r\n   * }\r\n   *\r\n   * function Bar() {\r\n   *   this.c = 3;\r\n   * }\r\n   *\r\n   * Foo.prototype.b = 2;\r\n   * Bar.prototype.d = 4;\r\n   *\r\n   * _.assign({ 'a': 0 }, new Foo, new Bar);\r\n   * // => { 'a': 1, 'c': 3 }\r\n   */\r\n  var assign = createAssigner(function(object, source) {\r\n    copyObject(source, nativeKeys(source), object);\r\n  });\r\n\r\n  /**\r\n   * This method is like `_.assign` except that it iterates over own and\r\n   * inherited source properties.\r\n   *\r\n   * **Note:** This method mutates `object`.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 4.0.0\r\n   * @alias extend\r\n   * @category Object\r\n   * @param {Object} object The destination object.\r\n   * @param {...Object} [sources] The source objects.\r\n   * @returns {Object} Returns `object`.\r\n   * @see _.assign\r\n   * @example\r\n   *\r\n   * function Foo() {\r\n   *   this.a = 1;\r\n   * }\r\n   *\r\n   * function Bar() {\r\n   *   this.c = 3;\r\n   * }\r\n   *\r\n   * Foo.prototype.b = 2;\r\n   * Bar.prototype.d = 4;\r\n   *\r\n   * _.assignIn({ 'a': 0 }, new Foo, new Bar);\r\n   * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\r\n   */\r\n  var assignIn = createAssigner(function(object, source) {\r\n    copyObject(source, nativeKeysIn(source), object);\r\n  });\r\n\r\n  /**\r\n   * Creates an object that inherits from the `prototype` object. If a\r\n   * `properties` object is given, its own enumerable string keyed properties\r\n   * are assigned to the created object.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 2.3.0\r\n   * @category Object\r\n   * @param {Object} prototype The object to inherit from.\r\n   * @param {Object} [properties] The properties to assign to the object.\r\n   * @returns {Object} Returns the new object.\r\n   * @example\r\n   *\r\n   * function Shape() {\r\n   *   this.x = 0;\r\n   *   this.y = 0;\r\n   * }\r\n   *\r\n   * function Circle() {\r\n   *   Shape.call(this);\r\n   * }\r\n   *\r\n   * Circle.prototype = _.create(Shape.prototype, {\r\n   *   'constructor': Circle\r\n   * });\r\n   *\r\n   * var circle = new Circle;\r\n   * circle instanceof Circle;\r\n   * // => true\r\n   *\r\n   * circle instanceof Shape;\r\n   * // => true\r\n   */\r\n  function create(prototype, properties) {\r\n    var result = baseCreate(prototype);\r\n    return properties == null ? result : assign(result, properties);\r\n  }\r\n\r\n  /**\r\n   * Assigns own and inherited enumerable string keyed properties of source\r\n   * objects to the destination object for all destination properties that\r\n   * resolve to `undefined`. Source objects are applied from left to right.\r\n   * Once a property is set, additional values of the same property are ignored.\r\n   *\r\n   * **Note:** This method mutates `object`.\r\n   *\r\n   * @static\r\n   * @since 0.1.0\r\n   * @memberOf _\r\n   * @category Object\r\n   * @param {Object} object The destination object.\r\n   * @param {...Object} [sources] The source objects.\r\n   * @returns {Object} Returns `object`.\r\n   * @see _.defaultsDeep\r\n   * @example\r\n   *\r\n   * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\r\n   * // => { 'a': 1, 'b': 2 }\r\n   */\r\n  var defaults = baseRest(function(object, sources) {\r\n    object = Object(object);\r\n\r\n    var index = -1;\r\n    var length = sources.length;\r\n    var guard = length > 2 ? sources[2] : undefined;\r\n\r\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\r\n      length = 1;\r\n    }\r\n\r\n    while (++index < length) {\r\n      var source = sources[index];\r\n      var props = keysIn(source);\r\n      var propsIndex = -1;\r\n      var propsLength = props.length;\r\n\r\n      while (++propsIndex < propsLength) {\r\n        var key = props[propsIndex];\r\n        var value = object[key];\r\n\r\n        if (value === undefined ||\r\n            (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\r\n          object[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    return object;\r\n  });\r\n\r\n  /**\r\n   * Checks if `path` is a direct property of `object`.\r\n   *\r\n   * @static\r\n   * @since 0.1.0\r\n   * @memberOf _\r\n   * @category Object\r\n   * @param {Object} object The object to query.\r\n   * @param {Array|string} path The path to check.\r\n   * @returns {boolean} Returns `true` if `path` exists, else `false`.\r\n   * @example\r\n   *\r\n   * var object = { 'a': { 'b': 2 } };\r\n   * var other = _.create({ 'a': _.create({ 'b': 2 }) });\r\n   *\r\n   * _.has(object, 'a');\r\n   * // => true\r\n   *\r\n   * _.has(object, 'a.b');\r\n   * // => true\r\n   *\r\n   * _.has(object, ['a', 'b']);\r\n   * // => true\r\n   *\r\n   * _.has(other, 'a');\r\n   * // => false\r\n   */\r\n  function has(object, path) {\r\n    return object != null && hasOwnProperty.call(object, path);\r\n  }\r\n\r\n  /**\r\n   * Creates an array of the own enumerable property names of `object`.\r\n   *\r\n   * **Note:** Non-object values are coerced to objects. See the\r\n   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\r\n   * for more details.\r\n   *\r\n   * @static\r\n   * @since 0.1.0\r\n   * @memberOf _\r\n   * @category Object\r\n   * @param {Object} object The object to query.\r\n   * @returns {Array} Returns the array of property names.\r\n   * @example\r\n   *\r\n   * function Foo() {\r\n   *   this.a = 1;\r\n   *   this.b = 2;\r\n   * }\r\n   *\r\n   * Foo.prototype.c = 3;\r\n   *\r\n   * _.keys(new Foo);\r\n   * // => ['a', 'b'] (iteration order is not guaranteed)\r\n   *\r\n   * _.keys('hi');\r\n   * // => ['0', '1']\r\n   */\r\n  var keys = nativeKeys;\r\n\r\n  /**\r\n   * Creates an array of the own and inherited enumerable property names of `object`.\r\n   *\r\n   * **Note:** Non-object values are coerced to objects.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 3.0.0\r\n   * @category Object\r\n   * @param {Object} object The object to query.\r\n   * @returns {Array} Returns the array of property names.\r\n   * @example\r\n   *\r\n   * function Foo() {\r\n   *   this.a = 1;\r\n   *   this.b = 2;\r\n   * }\r\n   *\r\n   * Foo.prototype.c = 3;\r\n   *\r\n   * _.keysIn(new Foo);\r\n   * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\r\n   */\r\n  var keysIn = nativeKeysIn;\r\n\r\n  /**\r\n   * Creates an object composed of the picked `object` properties.\r\n   *\r\n   * @static\r\n   * @since 0.1.0\r\n   * @memberOf _\r\n   * @category Object\r\n   * @param {Object} object The source object.\r\n   * @param {...(string|string[])} [paths] The property paths to pick.\r\n   * @returns {Object} Returns the new object.\r\n   * @example\r\n   *\r\n   * var object = { 'a': 1, 'b': '2', 'c': 3 };\r\n   *\r\n   * _.pick(object, ['a', 'c']);\r\n   * // => { 'a': 1, 'c': 3 }\r\n   */\r\n  var pick = flatRest(function(object, paths) {\r\n    return object == null ? {} : basePick(object, paths);\r\n  });\r\n\r\n  /**\r\n   * This method is like `_.get` except that if the resolved value is a\r\n   * function it's invoked with the `this` binding of its parent object and\r\n   * its result is returned.\r\n   *\r\n   * @static\r\n   * @since 0.1.0\r\n   * @memberOf _\r\n   * @category Object\r\n   * @param {Object} object The object to query.\r\n   * @param {Array|string} path The path of the property to resolve.\r\n   * @param {*} [defaultValue] The value returned for `undefined` resolved values.\r\n   * @returns {*} Returns the resolved value.\r\n   * @example\r\n   *\r\n   * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\r\n   *\r\n   * _.result(object, 'a[0].b.c1');\r\n   * // => 3\r\n   *\r\n   * _.result(object, 'a[0].b.c2');\r\n   * // => 4\r\n   *\r\n   * _.result(object, 'a[0].b.c3', 'default');\r\n   * // => 'default'\r\n   *\r\n   * _.result(object, 'a[0].b.c3', _.constant('default'));\r\n   * // => 'default'\r\n   */\r\n  function result(object, path, defaultValue) {\r\n    var value = object == null ? undefined : object[path];\r\n    if (value === undefined) {\r\n      value = defaultValue;\r\n    }\r\n    return isFunction(value) ? value.call(object) : value;\r\n  }\r\n\r\n  /**\r\n   * Creates an array of the own enumerable string keyed property values of `object`.\r\n   *\r\n   * **Note:** Non-object values are coerced to objects.\r\n   *\r\n   * @static\r\n   * @since 0.1.0\r\n   * @memberOf _\r\n   * @category Object\r\n   * @param {Object} object The object to query.\r\n   * @returns {Array} Returns the array of property values.\r\n   * @example\r\n   *\r\n   * function Foo() {\r\n   *   this.a = 1;\r\n   *   this.b = 2;\r\n   * }\r\n   *\r\n   * Foo.prototype.c = 3;\r\n   *\r\n   * _.values(new Foo);\r\n   * // => [1, 2] (iteration order is not guaranteed)\r\n   *\r\n   * _.values('hi');\r\n   * // => ['h', 'i']\r\n   */\r\n  function values(object) {\r\n    return object == null ? [] : baseValues(object, keys(object));\r\n  }\r\n\r\n  /*------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\r\n   * corresponding HTML entities.\r\n   *\r\n   * **Note:** No other characters are escaped. To escape additional\r\n   * characters use a third-party library like [_he_](https://mths.be/he).\r\n   *\r\n   * Though the \">\" character is escaped for symmetry, characters like\r\n   * \">\" and \"/\" don't need escaping in HTML and have no special meaning\r\n   * unless they're part of a tag or unquoted attribute value. See\r\n   * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\r\n   * (under \"semi-related fun fact\") for more details.\r\n   *\r\n   * When working with HTML you should always\r\n   * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\r\n   * XSS vectors.\r\n   *\r\n   * @static\r\n   * @since 0.1.0\r\n   * @memberOf _\r\n   * @category String\r\n   * @param {string} [string=''] The string to escape.\r\n   * @returns {string} Returns the escaped string.\r\n   * @example\r\n   *\r\n   * _.escape('fred, barney, & pebbles');\r\n   * // => 'fred, barney, &amp; pebbles'\r\n   */\r\n  function escape(string) {\r\n    string = toString(string);\r\n    return (string && reHasUnescapedHtml.test(string))\r\n      ? string.replace(reUnescapedHtml, escapeHtmlChar)\r\n      : string;\r\n  }\r\n\r\n  /*------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * This method returns the first argument it receives.\r\n   *\r\n   * @static\r\n   * @since 0.1.0\r\n   * @memberOf _\r\n   * @category Util\r\n   * @param {*} value Any value.\r\n   * @returns {*} Returns `value`.\r\n   * @example\r\n   *\r\n   * var object = { 'a': 1 };\r\n   *\r\n   * console.log(_.identity(object) === object);\r\n   * // => true\r\n   */\r\n  function identity(value) {\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Creates a function that invokes `func` with the arguments of the created\r\n   * function. If `func` is a property name, the created function returns the\r\n   * property value for a given element. If `func` is an array or object, the\r\n   * created function returns `true` for elements that contain the equivalent\r\n   * source properties, otherwise it returns `false`.\r\n   *\r\n   * @static\r\n   * @since 4.0.0\r\n   * @memberOf _\r\n   * @category Util\r\n   * @param {*} [func=_.identity] The value to convert to a callback.\r\n   * @returns {Function} Returns the callback.\r\n   * @example\r\n   *\r\n   * var users = [\r\n   *   { 'user': 'barney', 'age': 36, 'active': true },\r\n   *   { 'user': 'fred',   'age': 40, 'active': false }\r\n   * ];\r\n   *\r\n   * // The `_.matches` iteratee shorthand.\r\n   * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\r\n   * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\r\n   *\r\n   * // The `_.matchesProperty` iteratee shorthand.\r\n   * _.filter(users, _.iteratee(['user', 'fred']));\r\n   * // => [{ 'user': 'fred', 'age': 40 }]\r\n   *\r\n   * // The `_.property` iteratee shorthand.\r\n   * _.map(users, _.iteratee('user'));\r\n   * // => ['barney', 'fred']\r\n   *\r\n   * // Create custom iteratee shorthands.\r\n   * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\r\n   *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\r\n   *     return func.test(string);\r\n   *   };\r\n   * });\r\n   *\r\n   * _.filter(['abc', 'def'], /ef/);\r\n   * // => ['def']\r\n   */\r\n  var iteratee = baseIteratee;\r\n\r\n  /**\r\n   * Creates a function that performs a partial deep comparison between a given\r\n   * object and `source`, returning `true` if the given object has equivalent\r\n   * property values, else `false`.\r\n   *\r\n   * **Note:** The created function is equivalent to `_.isMatch` with `source`\r\n   * partially applied.\r\n   *\r\n   * Partial comparisons will match empty array and empty object `source`\r\n   * values against any array or object value, respectively. See `_.isEqual`\r\n   * for a list of supported value comparisons.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 3.0.0\r\n   * @category Util\r\n   * @param {Object} source The object of property values to match.\r\n   * @returns {Function} Returns the new spec function.\r\n   * @example\r\n   *\r\n   * var objects = [\r\n   *   { 'a': 1, 'b': 2, 'c': 3 },\r\n   *   { 'a': 4, 'b': 5, 'c': 6 }\r\n   * ];\r\n   *\r\n   * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\r\n   * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\r\n   */\r\n  function matches(source) {\r\n    return baseMatches(assign({}, source));\r\n  }\r\n\r\n  /**\r\n   * Adds all own enumerable string keyed function properties of a source\r\n   * object to the destination object. If `object` is a function, then methods\r\n   * are added to its prototype as well.\r\n   *\r\n   * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\r\n   * avoid conflicts caused by modifying the original.\r\n   *\r\n   * @static\r\n   * @since 0.1.0\r\n   * @memberOf _\r\n   * @category Util\r\n   * @param {Function|Object} [object=lodash] The destination object.\r\n   * @param {Object} source The object of functions to add.\r\n   * @param {Object} [options={}] The options object.\r\n   * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\r\n   * @returns {Function|Object} Returns `object`.\r\n   * @example\r\n   *\r\n   * function vowels(string) {\r\n   *   return _.filter(string, function(v) {\r\n   *     return /[aeiou]/i.test(v);\r\n   *   });\r\n   * }\r\n   *\r\n   * _.mixin({ 'vowels': vowels });\r\n   * _.vowels('fred');\r\n   * // => ['e']\r\n   *\r\n   * _('fred').vowels().value();\r\n   * // => ['e']\r\n   *\r\n   * _.mixin({ 'vowels': vowels }, { 'chain': false });\r\n   * _('fred').vowels();\r\n   * // => ['e']\r\n   */\r\n  function mixin(object, source, options) {\r\n    var props = keys(source),\r\n        methodNames = baseFunctions(source, props);\r\n\r\n    if (options == null &&\r\n        !(isObject(source) && (methodNames.length || !props.length))) {\r\n      options = source;\r\n      source = object;\r\n      object = this;\r\n      methodNames = baseFunctions(source, keys(source));\r\n    }\r\n    var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\r\n        isFunc = isFunction(object);\r\n\r\n    baseEach(methodNames, function(methodName) {\r\n      var func = source[methodName];\r\n      object[methodName] = func;\r\n      if (isFunc) {\r\n        object.prototype[methodName] = function() {\r\n          var chainAll = this.__chain__;\r\n          if (chain || chainAll) {\r\n            var result = object(this.__wrapped__),\r\n                actions = result.__actions__ = copyArray(this.__actions__);\r\n\r\n            actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\r\n            result.__chain__ = chainAll;\r\n            return result;\r\n          }\r\n          return func.apply(object, arrayPush([this.value()], arguments));\r\n        };\r\n      }\r\n    });\r\n\r\n    return object;\r\n  }\r\n\r\n  /**\r\n   * Reverts the `_` variable to its previous value and returns a reference to\r\n   * the `lodash` function.\r\n   *\r\n   * @static\r\n   * @since 0.1.0\r\n   * @memberOf _\r\n   * @category Util\r\n   * @returns {Function} Returns the `lodash` function.\r\n   * @example\r\n   *\r\n   * var lodash = _.noConflict();\r\n   */\r\n  function noConflict() {\r\n    if (root._ === this) {\r\n      root._ = oldDash;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * This method returns `undefined`.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @since 2.3.0\r\n   * @category Util\r\n   * @example\r\n   *\r\n   * _.times(2, _.noop);\r\n   * // => [undefined, undefined]\r\n   */\r\n  function noop() {\r\n    // No operation performed.\r\n  }\r\n\r\n  /**\r\n   * Generates a unique ID. If `prefix` is given, the ID is appended to it.\r\n   *\r\n   * @static\r\n   * @since 0.1.0\r\n   * @memberOf _\r\n   * @category Util\r\n   * @param {string} [prefix=''] The value to prefix the ID with.\r\n   * @returns {string} Returns the unique ID.\r\n   * @example\r\n   *\r\n   * _.uniqueId('contact_');\r\n   * // => 'contact_104'\r\n   *\r\n   * _.uniqueId();\r\n   * // => '105'\r\n   */\r\n  function uniqueId(prefix) {\r\n    var id = ++idCounter;\r\n    return toString(prefix) + id;\r\n  }\r\n\r\n  /*------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Computes the maximum value of `array`. If `array` is empty or falsey,\r\n   * `undefined` is returned.\r\n   *\r\n   * @static\r\n   * @since 0.1.0\r\n   * @memberOf _\r\n   * @category Math\r\n   * @param {Array} array The array to iterate over.\r\n   * @returns {*} Returns the maximum value.\r\n   * @example\r\n   *\r\n   * _.max([4, 2, 8, 6]);\r\n   * // => 8\r\n   *\r\n   * _.max([]);\r\n   * // => undefined\r\n   */\r\n  function max(array) {\r\n    return (array && array.length)\r\n      ? baseExtremum(array, identity, baseGt)\r\n      : undefined;\r\n  }\r\n\r\n  /**\r\n   * Computes the minimum value of `array`. If `array` is empty or falsey,\r\n   * `undefined` is returned.\r\n   *\r\n   * @static\r\n   * @since 0.1.0\r\n   * @memberOf _\r\n   * @category Math\r\n   * @param {Array} array The array to iterate over.\r\n   * @returns {*} Returns the minimum value.\r\n   * @example\r\n   *\r\n   * _.min([4, 2, 8, 6]);\r\n   * // => 2\r\n   *\r\n   * _.min([]);\r\n   * // => undefined\r\n   */\r\n  function min(array) {\r\n    return (array && array.length)\r\n      ? baseExtremum(array, identity, baseLt)\r\n      : undefined;\r\n  }\r\n\r\n  /*------------------------------------------------------------------------*/\r\n\r\n  // Add methods that return wrapped values in chain sequences.\r\n  lodash.assignIn = assignIn;\r\n  lodash.before = before;\r\n  lodash.bind = bind;\r\n  lodash.chain = chain;\r\n  lodash.compact = compact;\r\n  lodash.concat = concat;\r\n  lodash.create = create;\r\n  lodash.defaults = defaults;\r\n  lodash.defer = defer;\r\n  lodash.delay = delay;\r\n  lodash.filter = filter;\r\n  lodash.flatten = flatten;\r\n  lodash.flattenDeep = flattenDeep;\r\n  lodash.iteratee = iteratee;\r\n  lodash.keys = keys;\r\n  lodash.map = map;\r\n  lodash.matches = matches;\r\n  lodash.mixin = mixin;\r\n  lodash.negate = negate;\r\n  lodash.once = once;\r\n  lodash.pick = pick;\r\n  lodash.slice = slice;\r\n  lodash.sortBy = sortBy;\r\n  lodash.tap = tap;\r\n  lodash.thru = thru;\r\n  lodash.toArray = toArray;\r\n  lodash.values = values;\r\n\r\n  // Add aliases.\r\n  lodash.extend = assignIn;\r\n\r\n  // Add methods to `lodash.prototype`.\r\n  mixin(lodash, lodash);\r\n\r\n  /*------------------------------------------------------------------------*/\r\n\r\n  // Add methods that return unwrapped values in chain sequences.\r\n  lodash.clone = clone;\r\n  lodash.escape = escape;\r\n  lodash.every = every;\r\n  lodash.find = find;\r\n  lodash.forEach = forEach;\r\n  lodash.has = has;\r\n  lodash.head = head;\r\n  lodash.identity = identity;\r\n  lodash.indexOf = indexOf;\r\n  lodash.isArguments = isArguments;\r\n  lodash.isArray = isArray;\r\n  lodash.isBoolean = isBoolean;\r\n  lodash.isDate = isDate;\r\n  lodash.isEmpty = isEmpty;\r\n  lodash.isEqual = isEqual;\r\n  lodash.isFinite = isFinite;\r\n  lodash.isFunction = isFunction;\r\n  lodash.isNaN = isNaN;\r\n  lodash.isNull = isNull;\r\n  lodash.isNumber = isNumber;\r\n  lodash.isObject = isObject;\r\n  lodash.isRegExp = isRegExp;\r\n  lodash.isString = isString;\r\n  lodash.isUndefined = isUndefined;\r\n  lodash.last = last;\r\n  lodash.max = max;\r\n  lodash.min = min;\r\n  lodash.noConflict = noConflict;\r\n  lodash.noop = noop;\r\n  lodash.reduce = reduce;\r\n  lodash.result = result;\r\n  lodash.size = size;\r\n  lodash.some = some;\r\n  lodash.uniqueId = uniqueId;\r\n\r\n  // Add aliases.\r\n  lodash.each = forEach;\r\n  lodash.first = head;\r\n\r\n  mixin(lodash, (function() {\r\n    var source = {};\r\n    baseForOwn(lodash, function(func, methodName) {\r\n      if (!hasOwnProperty.call(lodash.prototype, methodName)) {\r\n        source[methodName] = func;\r\n      }\r\n    });\r\n    return source;\r\n  }()), { 'chain': false });\r\n\r\n  /*------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * The semantic version number.\r\n   *\r\n   * @static\r\n   * @memberOf _\r\n   * @type {string}\r\n   */\r\n  lodash.VERSION = VERSION;\r\n\r\n  // Add `Array` methods to `lodash.prototype`.\r\n  baseEach(['pop', 'join', 'replace', 'reverse', 'split', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\r\n    var func = (/^(?:replace|split)$/.test(methodName) ? String.prototype : arrayProto)[methodName],\r\n        chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\r\n        retUnwrapped = /^(?:pop|join|replace|shift)$/.test(methodName);\r\n\r\n    lodash.prototype[methodName] = function() {\r\n      var args = arguments;\r\n      if (retUnwrapped && !this.__chain__) {\r\n        var value = this.value();\r\n        return func.apply(isArray(value) ? value : [], args);\r\n      }\r\n      return this[chainName](function(value) {\r\n        return func.apply(isArray(value) ? value : [], args);\r\n      });\r\n    };\r\n  });\r\n\r\n  // Add chain sequence methods to the `lodash` wrapper.\r\n  lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\r\n\r\n  /*--------------------------------------------------------------------------*/\r\n\r\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\r\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\r\n    // Expose Lodash on the global object to prevent errors when Lodash is\r\n    // loaded by a script tag in the presence of an AMD loader.\r\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\r\n    // Use `_.noConflict` to remove Lodash from the global object.\r\n    root._ = lodash;\r\n\r\n    // Define as an anonymous module so, through path mapping, it can be\r\n    // referenced as the \"underscore\" module.\r\n    define(function() {\r\n      return lodash;\r\n    });\r\n  }\r\n  // Check for `exports` after `define` in case a build optimizer adds it.\r\n  else if (freeModule) {\r\n    // Export for Node.js.\r\n    (freeModule.exports = lodash)._ = lodash;\r\n    // Export for CommonJS support.\r\n    freeExports._ = lodash;\r\n  }\r\n  else {\r\n    // Export to the global object.\r\n    root._ = lodash;\r\n  }\r\n}.call(this));\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{}],89:[function(require,module,exports){\r\nmodule.exports = MultiStream\r\n\r\nvar inherits = require('inherits')\r\nvar stream = require('readable-stream')\r\n\r\ninherits(MultiStream, stream.Readable)\r\n\r\nfunction MultiStream (streams, opts) {\r\n  var self = this\r\n  if (!(self instanceof MultiStream)) return new MultiStream(streams, opts)\r\n  stream.Readable.call(self, opts)\r\n\r\n  self.destroyed = false\r\n\r\n  self._drained = false\r\n  self._forwarding = false\r\n  self._current = null\r\n  self._toStreams2 = (opts && opts.objectMode) ? toStreams2Obj : toStreams2Buf\r\n\r\n  if (typeof streams === 'function') {\r\n    self._queue = streams\r\n  } else {\r\n    self._queue = streams.map(self._toStreams2)\r\n    self._queue.forEach(function (stream) {\r\n      if (typeof stream !== 'function') self._attachErrorListener(stream)\r\n    })\r\n  }\r\n\r\n  self._next()\r\n}\r\n\r\nMultiStream.obj = function (streams) {\r\n  return new MultiStream(streams, { objectMode: true, highWaterMark: 16 })\r\n}\r\n\r\nMultiStream.prototype._read = function () {\r\n  this._drained = true\r\n  this._forward()\r\n}\r\n\r\nMultiStream.prototype._forward = function () {\r\n  if (this._forwarding || !this._drained || !this._current) return\r\n  this._forwarding = true\r\n\r\n  var chunk\r\n  while ((chunk = this._current.read()) !== null) {\r\n    this._drained = this.push(chunk)\r\n  }\r\n\r\n  this._forwarding = false\r\n}\r\n\r\nMultiStream.prototype.destroy = function (err) {\r\n  if (this.destroyed) return\r\n  this.destroyed = true\r\n\r\n  if (this._current && this._current.destroy) this._current.destroy()\r\n  if (typeof this._queue !== 'function') {\r\n    this._queue.forEach(function (stream) {\r\n      if (stream.destroy) stream.destroy()\r\n    })\r\n  }\r\n\r\n  if (err) this.emit('error', err)\r\n  this.emit('close')\r\n}\r\n\r\nMultiStream.prototype._next = function () {\r\n  var self = this\r\n  self._current = null\r\n\r\n  if (typeof self._queue === 'function') {\r\n    self._queue(function (err, stream) {\r\n      if (err) return self.destroy(err)\r\n      stream = self._toStreams2(stream)\r\n      self._attachErrorListener(stream)\r\n      self._gotNextStream(stream)\r\n    })\r\n  } else {\r\n    var stream = self._queue.shift()\r\n    if (typeof stream === 'function') {\r\n      stream = self._toStreams2(stream())\r\n      self._attachErrorListener(stream)\r\n    }\r\n    self._gotNextStream(stream)\r\n  }\r\n}\r\n\r\nMultiStream.prototype._gotNextStream = function (stream) {\r\n  var self = this\r\n\r\n  if (!stream) {\r\n    self.push(null)\r\n    self.destroy()\r\n    return\r\n  }\r\n\r\n  self._current = stream\r\n  self._forward()\r\n\r\n  stream.on('readable', onReadable)\r\n  stream.once('end', onEnd)\r\n  stream.once('close', onClose)\r\n\r\n  function onReadable () {\r\n    self._forward()\r\n  }\r\n\r\n  function onClose () {\r\n    if (!stream._readableState.ended) {\r\n      self.destroy()\r\n    }\r\n  }\r\n\r\n  function onEnd () {\r\n    self._current = null\r\n    stream.removeListener('readable', onReadable)\r\n    stream.removeListener('end', onEnd)\r\n    stream.removeListener('close', onClose)\r\n    self._next()\r\n  }\r\n}\r\n\r\nMultiStream.prototype._attachErrorListener = function (stream) {\r\n  var self = this\r\n  if (!stream) return\r\n\r\n  stream.once('error', onError)\r\n\r\n  function onError (err) {\r\n    stream.removeListener('error', onError)\r\n    self.destroy(err)\r\n  }\r\n}\r\n\r\nfunction toStreams2Obj (s) {\r\n  return toStreams2(s, {objectMode: true, highWaterMark: 16})\r\n}\r\n\r\nfunction toStreams2Buf (s) {\r\n  return toStreams2(s)\r\n}\r\n\r\nfunction toStreams2 (s, opts) {\r\n  if (!s || typeof s === 'function' || s._readableState) return s\r\n\r\n  var wrap = new stream.Readable(opts).wrap(s)\r\n  if (s.destroy) {\r\n    wrap.destroy = s.destroy.bind(s)\r\n  }\r\n  return wrap\r\n}\r\n\r\n},{\"inherits\":84,\"readable-stream\":107}],90:[function(require,module,exports){\r\n(function (process){\r\n'use strict';\r\n\r\nif (!process.version ||\r\n    process.version.indexOf('v0.') === 0 ||\r\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\r\n  module.exports = { nextTick: nextTick };\r\n} else {\r\n  module.exports = process\r\n}\r\n\r\nfunction nextTick(fn, arg1, arg2, arg3) {\r\n  if (typeof fn !== 'function') {\r\n    throw new TypeError('\"callback\" argument must be a function');\r\n  }\r\n  var len = arguments.length;\r\n  var args, i;\r\n  switch (len) {\r\n  case 0:\r\n  case 1:\r\n    return process.nextTick(fn);\r\n  case 2:\r\n    return process.nextTick(function afterTickOne() {\r\n      fn.call(null, arg1);\r\n    });\r\n  case 3:\r\n    return process.nextTick(function afterTickTwo() {\r\n      fn.call(null, arg1, arg2);\r\n    });\r\n  case 4:\r\n    return process.nextTick(function afterTickThree() {\r\n      fn.call(null, arg1, arg2, arg3);\r\n    });\r\n  default:\r\n    args = new Array(len - 1);\r\n    i = 0;\r\n    while (i < args.length) {\r\n      args[i++] = arguments[i];\r\n    }\r\n    return process.nextTick(function afterTick() {\r\n      fn.apply(null, args);\r\n    });\r\n  }\r\n}\r\n\r\n\r\n}).call(this,require('_process'))\r\n\r\n},{\"_process\":91}],91:[function(require,module,exports){\r\n// shim for using process in browser\r\nvar process = module.exports = {};\r\n\r\n// cached from whatever global is present so that test runners that stub it\r\n// don't break things.  But we need to wrap it in a try catch in case it is\r\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\r\n// function because try/catches deoptimize in certain engines.\r\n\r\nvar cachedSetTimeout;\r\nvar cachedClearTimeout;\r\n\r\nfunction defaultSetTimout() {\r\n    throw new Error('setTimeout has not been defined');\r\n}\r\nfunction defaultClearTimeout () {\r\n    throw new Error('clearTimeout has not been defined');\r\n}\r\n(function () {\r\n    try {\r\n        if (typeof setTimeout === 'function') {\r\n            cachedSetTimeout = setTimeout;\r\n        } else {\r\n            cachedSetTimeout = defaultSetTimout;\r\n        }\r\n    } catch (e) {\r\n        cachedSetTimeout = defaultSetTimout;\r\n    }\r\n    try {\r\n        if (typeof clearTimeout === 'function') {\r\n            cachedClearTimeout = clearTimeout;\r\n        } else {\r\n            cachedClearTimeout = defaultClearTimeout;\r\n        }\r\n    } catch (e) {\r\n        cachedClearTimeout = defaultClearTimeout;\r\n    }\r\n} ())\r\nfunction runTimeout(fun) {\r\n    if (cachedSetTimeout === setTimeout) {\r\n        //normal enviroments in sane situations\r\n        return setTimeout(fun, 0);\r\n    }\r\n    // if setTimeout wasn't available but was latter defined\r\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\r\n        cachedSetTimeout = setTimeout;\r\n        return setTimeout(fun, 0);\r\n    }\r\n    try {\r\n        // when when somebody has screwed with setTimeout but no I.E. maddness\r\n        return cachedSetTimeout(fun, 0);\r\n    } catch(e){\r\n        try {\r\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\r\n            return cachedSetTimeout.call(null, fun, 0);\r\n        } catch(e){\r\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\r\n            return cachedSetTimeout.call(this, fun, 0);\r\n        }\r\n    }\r\n\r\n\r\n}\r\nfunction runClearTimeout(marker) {\r\n    if (cachedClearTimeout === clearTimeout) {\r\n        //normal enviroments in sane situations\r\n        return clearTimeout(marker);\r\n    }\r\n    // if clearTimeout wasn't available but was latter defined\r\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\r\n        cachedClearTimeout = clearTimeout;\r\n        return clearTimeout(marker);\r\n    }\r\n    try {\r\n        // when when somebody has screwed with setTimeout but no I.E. maddness\r\n        return cachedClearTimeout(marker);\r\n    } catch (e){\r\n        try {\r\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\r\n            return cachedClearTimeout.call(null, marker);\r\n        } catch (e){\r\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\r\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\r\n            return cachedClearTimeout.call(this, marker);\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\nvar queue = [];\r\nvar draining = false;\r\nvar currentQueue;\r\nvar queueIndex = -1;\r\n\r\nfunction cleanUpNextTick() {\r\n    if (!draining || !currentQueue) {\r\n        return;\r\n    }\r\n    draining = false;\r\n    if (currentQueue.length) {\r\n        queue = currentQueue.concat(queue);\r\n    } else {\r\n        queueIndex = -1;\r\n    }\r\n    if (queue.length) {\r\n        drainQueue();\r\n    }\r\n}\r\n\r\nfunction drainQueue() {\r\n    if (draining) {\r\n        return;\r\n    }\r\n    var timeout = runTimeout(cleanUpNextTick);\r\n    draining = true;\r\n\r\n    var len = queue.length;\r\n    while(len) {\r\n        currentQueue = queue;\r\n        queue = [];\r\n        while (++queueIndex < len) {\r\n            if (currentQueue) {\r\n                currentQueue[queueIndex].run();\r\n            }\r\n        }\r\n        queueIndex = -1;\r\n        len = queue.length;\r\n    }\r\n    currentQueue = null;\r\n    draining = false;\r\n    runClearTimeout(timeout);\r\n}\r\n\r\nprocess.nextTick = function (fun) {\r\n    var args = new Array(arguments.length - 1);\r\n    if (arguments.length > 1) {\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            args[i - 1] = arguments[i];\r\n        }\r\n    }\r\n    queue.push(new Item(fun, args));\r\n    if (queue.length === 1 && !draining) {\r\n        runTimeout(drainQueue);\r\n    }\r\n};\r\n\r\n// v8 likes predictible objects\r\nfunction Item(fun, array) {\r\n    this.fun = fun;\r\n    this.array = array;\r\n}\r\nItem.prototype.run = function () {\r\n    this.fun.apply(null, this.array);\r\n};\r\nprocess.title = 'browser';\r\nprocess.browser = true;\r\nprocess.env = {};\r\nprocess.argv = [];\r\nprocess.version = ''; // empty string to avoid regexp issues\r\nprocess.versions = {};\r\n\r\nfunction noop() {}\r\n\r\nprocess.on = noop;\r\nprocess.addListener = noop;\r\nprocess.once = noop;\r\nprocess.off = noop;\r\nprocess.removeListener = noop;\r\nprocess.removeAllListeners = noop;\r\nprocess.emit = noop;\r\nprocess.prependListener = noop;\r\nprocess.prependOnceListener = noop;\r\n\r\nprocess.listeners = function (name) { return [] }\r\n\r\nprocess.binding = function (name) {\r\n    throw new Error('process.binding is not supported');\r\n};\r\n\r\nprocess.cwd = function () { return '/' };\r\nprocess.chdir = function (dir) {\r\n    throw new Error('process.chdir is not supported');\r\n};\r\nprocess.umask = function() { return 0; };\r\n\r\n},{}],92:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar asap = require('asap/raw');\r\n\r\nfunction noop() {}\r\n\r\n// States:\r\n//\r\n// 0 - pending\r\n// 1 - fulfilled with _value\r\n// 2 - rejected with _value\r\n// 3 - adopted the state of another promise, _value\r\n//\r\n// once the state is no longer pending (0) it is immutable\r\n\r\n// All `_` prefixed properties will be reduced to `_{random number}`\r\n// at build time to obfuscate them and discourage their use.\r\n// We don't use symbols or Object.defineProperty to fully hide them\r\n// because the performance isn't good enough.\r\n\r\n\r\n// to avoid using try/catch inside critical functions, we\r\n// extract them to here.\r\nvar LAST_ERROR = null;\r\nvar IS_ERROR = {};\r\nfunction getThen(obj) {\r\n  try {\r\n    return obj.then;\r\n  } catch (ex) {\r\n    LAST_ERROR = ex;\r\n    return IS_ERROR;\r\n  }\r\n}\r\n\r\nfunction tryCallOne(fn, a) {\r\n  try {\r\n    return fn(a);\r\n  } catch (ex) {\r\n    LAST_ERROR = ex;\r\n    return IS_ERROR;\r\n  }\r\n}\r\nfunction tryCallTwo(fn, a, b) {\r\n  try {\r\n    fn(a, b);\r\n  } catch (ex) {\r\n    LAST_ERROR = ex;\r\n    return IS_ERROR;\r\n  }\r\n}\r\n\r\nmodule.exports = Promise;\r\n\r\nfunction Promise(fn) {\r\n  if (typeof this !== 'object') {\r\n    throw new TypeError('Promises must be constructed via new');\r\n  }\r\n  if (typeof fn !== 'function') {\r\n    throw new TypeError('Promise constructor\\'s argument is not a function');\r\n  }\r\n  this._40 = 0;\r\n  this._65 = 0;\r\n  this._55 = null;\r\n  this._72 = null;\r\n  if (fn === noop) return;\r\n  doResolve(fn, this);\r\n}\r\nPromise._37 = null;\r\nPromise._87 = null;\r\nPromise._61 = noop;\r\n\r\nPromise.prototype.then = function(onFulfilled, onRejected) {\r\n  if (this.constructor !== Promise) {\r\n    return safeThen(this, onFulfilled, onRejected);\r\n  }\r\n  var res = new Promise(noop);\r\n  handle(this, new Handler(onFulfilled, onRejected, res));\r\n  return res;\r\n};\r\n\r\nfunction safeThen(self, onFulfilled, onRejected) {\r\n  return new self.constructor(function (resolve, reject) {\r\n    var res = new Promise(noop);\r\n    res.then(resolve, reject);\r\n    handle(self, new Handler(onFulfilled, onRejected, res));\r\n  });\r\n}\r\nfunction handle(self, deferred) {\r\n  while (self._65 === 3) {\r\n    self = self._55;\r\n  }\r\n  if (Promise._37) {\r\n    Promise._37(self);\r\n  }\r\n  if (self._65 === 0) {\r\n    if (self._40 === 0) {\r\n      self._40 = 1;\r\n      self._72 = deferred;\r\n      return;\r\n    }\r\n    if (self._40 === 1) {\r\n      self._40 = 2;\r\n      self._72 = [self._72, deferred];\r\n      return;\r\n    }\r\n    self._72.push(deferred);\r\n    return;\r\n  }\r\n  handleResolved(self, deferred);\r\n}\r\n\r\nfunction handleResolved(self, deferred) {\r\n  asap(function() {\r\n    var cb = self._65 === 1 ? deferred.onFulfilled : deferred.onRejected;\r\n    if (cb === null) {\r\n      if (self._65 === 1) {\r\n        resolve(deferred.promise, self._55);\r\n      } else {\r\n        reject(deferred.promise, self._55);\r\n      }\r\n      return;\r\n    }\r\n    var ret = tryCallOne(cb, self._55);\r\n    if (ret === IS_ERROR) {\r\n      reject(deferred.promise, LAST_ERROR);\r\n    } else {\r\n      resolve(deferred.promise, ret);\r\n    }\r\n  });\r\n}\r\nfunction resolve(self, newValue) {\r\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\r\n  if (newValue === self) {\r\n    return reject(\r\n      self,\r\n      new TypeError('A promise cannot be resolved with itself.')\r\n    );\r\n  }\r\n  if (\r\n    newValue &&\r\n    (typeof newValue === 'object' || typeof newValue === 'function')\r\n  ) {\r\n    var then = getThen(newValue);\r\n    if (then === IS_ERROR) {\r\n      return reject(self, LAST_ERROR);\r\n    }\r\n    if (\r\n      then === self.then &&\r\n      newValue instanceof Promise\r\n    ) {\r\n      self._65 = 3;\r\n      self._55 = newValue;\r\n      finale(self);\r\n      return;\r\n    } else if (typeof then === 'function') {\r\n      doResolve(then.bind(newValue), self);\r\n      return;\r\n    }\r\n  }\r\n  self._65 = 1;\r\n  self._55 = newValue;\r\n  finale(self);\r\n}\r\n\r\nfunction reject(self, newValue) {\r\n  self._65 = 2;\r\n  self._55 = newValue;\r\n  if (Promise._87) {\r\n    Promise._87(self, newValue);\r\n  }\r\n  finale(self);\r\n}\r\nfunction finale(self) {\r\n  if (self._40 === 1) {\r\n    handle(self, self._72);\r\n    self._72 = null;\r\n  }\r\n  if (self._40 === 2) {\r\n    for (var i = 0; i < self._72.length; i++) {\r\n      handle(self, self._72[i]);\r\n    }\r\n    self._72 = null;\r\n  }\r\n}\r\n\r\nfunction Handler(onFulfilled, onRejected, promise){\r\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\r\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\r\n  this.promise = promise;\r\n}\r\n\r\n/**\r\n * Take a potentially misbehaving resolver function and make sure\r\n * onFulfilled and onRejected are only called once.\r\n *\r\n * Makes no guarantees about asynchrony.\r\n */\r\nfunction doResolve(fn, promise) {\r\n  var done = false;\r\n  var res = tryCallTwo(fn, function (value) {\r\n    if (done) return;\r\n    done = true;\r\n    resolve(promise, value);\r\n  }, function (reason) {\r\n    if (done) return;\r\n    done = true;\r\n    reject(promise, reason);\r\n  });\r\n  if (!done && res === IS_ERROR) {\r\n    done = true;\r\n    reject(promise, LAST_ERROR);\r\n  }\r\n}\r\n\r\n},{\"asap/raw\":38}],93:[function(require,module,exports){\r\n'use strict';\r\n\r\n//This file contains the ES6 extensions to the core Promises/A+ API\r\n\r\nvar Promise = require('./core.js');\r\n\r\nmodule.exports = Promise;\r\n\r\n/* Static Functions */\r\n\r\nvar TRUE = valuePromise(true);\r\nvar FALSE = valuePromise(false);\r\nvar NULL = valuePromise(null);\r\nvar UNDEFINED = valuePromise(undefined);\r\nvar ZERO = valuePromise(0);\r\nvar EMPTYSTRING = valuePromise('');\r\n\r\nfunction valuePromise(value) {\r\n  var p = new Promise(Promise._61);\r\n  p._65 = 1;\r\n  p._55 = value;\r\n  return p;\r\n}\r\nPromise.resolve = function (value) {\r\n  if (value instanceof Promise) return value;\r\n\r\n  if (value === null) return NULL;\r\n  if (value === undefined) return UNDEFINED;\r\n  if (value === true) return TRUE;\r\n  if (value === false) return FALSE;\r\n  if (value === 0) return ZERO;\r\n  if (value === '') return EMPTYSTRING;\r\n\r\n  if (typeof value === 'object' || typeof value === 'function') {\r\n    try {\r\n      var then = value.then;\r\n      if (typeof then === 'function') {\r\n        return new Promise(then.bind(value));\r\n      }\r\n    } catch (ex) {\r\n      return new Promise(function (resolve, reject) {\r\n        reject(ex);\r\n      });\r\n    }\r\n  }\r\n  return valuePromise(value);\r\n};\r\n\r\nPromise.all = function (arr) {\r\n  var args = Array.prototype.slice.call(arr);\r\n\r\n  return new Promise(function (resolve, reject) {\r\n    if (args.length === 0) return resolve([]);\r\n    var remaining = args.length;\r\n    function res(i, val) {\r\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\r\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\r\n          while (val._65 === 3) {\r\n            val = val._55;\r\n          }\r\n          if (val._65 === 1) return res(i, val._55);\r\n          if (val._65 === 2) reject(val._55);\r\n          val.then(function (val) {\r\n            res(i, val);\r\n          }, reject);\r\n          return;\r\n        } else {\r\n          var then = val.then;\r\n          if (typeof then === 'function') {\r\n            var p = new Promise(then.bind(val));\r\n            p.then(function (val) {\r\n              res(i, val);\r\n            }, reject);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n      args[i] = val;\r\n      if (--remaining === 0) {\r\n        resolve(args);\r\n      }\r\n    }\r\n    for (var i = 0; i < args.length; i++) {\r\n      res(i, args[i]);\r\n    }\r\n  });\r\n};\r\n\r\nPromise.reject = function (value) {\r\n  return new Promise(function (resolve, reject) {\r\n    reject(value);\r\n  });\r\n};\r\n\r\nPromise.race = function (values) {\r\n  return new Promise(function (resolve, reject) {\r\n    values.forEach(function(value){\r\n      Promise.resolve(value).then(resolve, reject);\r\n    });\r\n  });\r\n};\r\n\r\n/* Prototype Methods */\r\n\r\nPromise.prototype['catch'] = function (onRejected) {\r\n  return this.then(null, onRejected);\r\n};\r\n\r\n},{\"./core.js\":92}],94:[function(require,module,exports){\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\n// If obj.hasOwnProperty has been overridden, then calling\r\n// obj.hasOwnProperty(prop) will break.\r\n// See: https://github.com/joyent/node/issues/1707\r\nfunction hasOwnProperty(obj, prop) {\r\n  return Object.prototype.hasOwnProperty.call(obj, prop);\r\n}\r\n\r\nmodule.exports = function(qs, sep, eq, options) {\r\n  sep = sep || '&';\r\n  eq = eq || '=';\r\n  var obj = {};\r\n\r\n  if (typeof qs !== 'string' || qs.length === 0) {\r\n    return obj;\r\n  }\r\n\r\n  var regexp = /\\+/g;\r\n  qs = qs.split(sep);\r\n\r\n  var maxKeys = 1000;\r\n  if (options && typeof options.maxKeys === 'number') {\r\n    maxKeys = options.maxKeys;\r\n  }\r\n\r\n  var len = qs.length;\r\n  // maxKeys <= 0 means that we should not limit keys count\r\n  if (maxKeys > 0 && len > maxKeys) {\r\n    len = maxKeys;\r\n  }\r\n\r\n  for (var i = 0; i < len; ++i) {\r\n    var x = qs[i].replace(regexp, '%20'),\r\n        idx = x.indexOf(eq),\r\n        kstr, vstr, k, v;\r\n\r\n    if (idx >= 0) {\r\n      kstr = x.substr(0, idx);\r\n      vstr = x.substr(idx + 1);\r\n    } else {\r\n      kstr = x;\r\n      vstr = '';\r\n    }\r\n\r\n    k = decodeURIComponent(kstr);\r\n    v = decodeURIComponent(vstr);\r\n\r\n    if (!hasOwnProperty(obj, k)) {\r\n      obj[k] = v;\r\n    } else if (isArray(obj[k])) {\r\n      obj[k].push(v);\r\n    } else {\r\n      obj[k] = [obj[k], v];\r\n    }\r\n  }\r\n\r\n  return obj;\r\n};\r\n\r\nvar isArray = Array.isArray || function (xs) {\r\n  return Object.prototype.toString.call(xs) === '[object Array]';\r\n};\r\n\r\n},{}],95:[function(require,module,exports){\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nvar stringifyPrimitive = function(v) {\r\n  switch (typeof v) {\r\n    case 'string':\r\n      return v;\r\n\r\n    case 'boolean':\r\n      return v ? 'true' : 'false';\r\n\r\n    case 'number':\r\n      return isFinite(v) ? v : '';\r\n\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\nmodule.exports = function(obj, sep, eq, name) {\r\n  sep = sep || '&';\r\n  eq = eq || '=';\r\n  if (obj === null) {\r\n    obj = undefined;\r\n  }\r\n\r\n  if (typeof obj === 'object') {\r\n    return map(objectKeys(obj), function(k) {\r\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\r\n      if (isArray(obj[k])) {\r\n        return map(obj[k], function(v) {\r\n          return ks + encodeURIComponent(stringifyPrimitive(v));\r\n        }).join(sep);\r\n      } else {\r\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\r\n      }\r\n    }).join(sep);\r\n\r\n  }\r\n\r\n  if (!name) return '';\r\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\r\n         encodeURIComponent(stringifyPrimitive(obj));\r\n};\r\n\r\nvar isArray = Array.isArray || function (xs) {\r\n  return Object.prototype.toString.call(xs) === '[object Array]';\r\n};\r\n\r\nfunction map (xs, f) {\r\n  if (xs.map) return xs.map(f);\r\n  var res = [];\r\n  for (var i = 0; i < xs.length; i++) {\r\n    res.push(f(xs[i], i));\r\n  }\r\n  return res;\r\n}\r\n\r\nvar objectKeys = Object.keys || function (obj) {\r\n  var res = [];\r\n  for (var key in obj) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\r\n  }\r\n  return res;\r\n};\r\n\r\n},{}],96:[function(require,module,exports){\r\n'use strict';\r\n\r\nexports.decode = exports.parse = require('./decode');\r\nexports.encode = exports.stringify = require('./encode');\r\n\r\n},{\"./decode\":94,\"./encode\":95}],97:[function(require,module,exports){\r\nmodule.exports = require('./lib/_stream_duplex.js');\r\n\r\n},{\"./lib/_stream_duplex.js\":98}],98:[function(require,module,exports){\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n// a duplex stream is just a stream that is both readable and writable.\r\n// Since JS doesn't have multiple prototypal inheritance, this class\r\n// prototypally inherits from Readable, and then parasitically from\r\n// Writable.\r\n\r\n'use strict';\r\n\r\n/*<replacement>*/\r\n\r\nvar pna = require('process-nextick-args');\r\n/*</replacement>*/\r\n\r\n/*<replacement>*/\r\nvar objectKeys = Object.keys || function (obj) {\r\n  var keys = [];\r\n  for (var key in obj) {\r\n    keys.push(key);\r\n  }return keys;\r\n};\r\n/*</replacement>*/\r\n\r\nmodule.exports = Duplex;\r\n\r\n/*<replacement>*/\r\nvar util = require('core-util-is');\r\nutil.inherits = require('inherits');\r\n/*</replacement>*/\r\n\r\nvar Readable = require('./_stream_readable');\r\nvar Writable = require('./_stream_writable');\r\n\r\nutil.inherits(Duplex, Readable);\r\n\r\n{\r\n  // avoid scope creep, the keys array can then be collected\r\n  var keys = objectKeys(Writable.prototype);\r\n  for (var v = 0; v < keys.length; v++) {\r\n    var method = keys[v];\r\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\r\n  }\r\n}\r\n\r\nfunction Duplex(options) {\r\n  if (!(this instanceof Duplex)) return new Duplex(options);\r\n\r\n  Readable.call(this, options);\r\n  Writable.call(this, options);\r\n\r\n  if (options && options.readable === false) this.readable = false;\r\n\r\n  if (options && options.writable === false) this.writable = false;\r\n\r\n  this.allowHalfOpen = true;\r\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\r\n\r\n  this.once('end', onend);\r\n}\r\n\r\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\r\n  // making it explicit this property is not enumerable\r\n  // because otherwise some prototype manipulation in\r\n  // userland will fail\r\n  enumerable: false,\r\n  get: function () {\r\n    return this._writableState.highWaterMark;\r\n  }\r\n});\r\n\r\n// the no-half-open enforcer\r\nfunction onend() {\r\n  // if we allow half-open state, or if the writable side ended,\r\n  // then we're ok.\r\n  if (this.allowHalfOpen || this._writableState.ended) return;\r\n\r\n  // no more data can be written.\r\n  // But allow more writes to happen in this tick.\r\n  pna.nextTick(onEndNT, this);\r\n}\r\n\r\nfunction onEndNT(self) {\r\n  self.end();\r\n}\r\n\r\nObject.defineProperty(Duplex.prototype, 'destroyed', {\r\n  get: function () {\r\n    if (this._readableState === undefined || this._writableState === undefined) {\r\n      return false;\r\n    }\r\n    return this._readableState.destroyed && this._writableState.destroyed;\r\n  },\r\n  set: function (value) {\r\n    // we ignore the value if the stream\r\n    // has not been initialized yet\r\n    if (this._readableState === undefined || this._writableState === undefined) {\r\n      return;\r\n    }\r\n\r\n    // backward compatibility, the user is explicitly\r\n    // managing destroyed\r\n    this._readableState.destroyed = value;\r\n    this._writableState.destroyed = value;\r\n  }\r\n});\r\n\r\nDuplex.prototype._destroy = function (err, cb) {\r\n  this.push(null);\r\n  this.end();\r\n\r\n  pna.nextTick(cb, err);\r\n};\r\n},{\"./_stream_readable\":100,\"./_stream_writable\":102,\"core-util-is\":42,\"inherits\":84,\"process-nextick-args\":90}],99:[function(require,module,exports){\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n// a passthrough stream.\r\n// basically just the most minimal sort of Transform stream.\r\n// Every written chunk gets output as-is.\r\n\r\n'use strict';\r\n\r\nmodule.exports = PassThrough;\r\n\r\nvar Transform = require('./_stream_transform');\r\n\r\n/*<replacement>*/\r\nvar util = require('core-util-is');\r\nutil.inherits = require('inherits');\r\n/*</replacement>*/\r\n\r\nutil.inherits(PassThrough, Transform);\r\n\r\nfunction PassThrough(options) {\r\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\r\n\r\n  Transform.call(this, options);\r\n}\r\n\r\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\r\n  cb(null, chunk);\r\n};\r\n},{\"./_stream_transform\":101,\"core-util-is\":42,\"inherits\":84}],100:[function(require,module,exports){\r\n(function (process,global){\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\n/*<replacement>*/\r\n\r\nvar pna = require('process-nextick-args');\r\n/*</replacement>*/\r\n\r\nmodule.exports = Readable;\r\n\r\n/*<replacement>*/\r\nvar isArray = require('isarray');\r\n/*</replacement>*/\r\n\r\n/*<replacement>*/\r\nvar Duplex;\r\n/*</replacement>*/\r\n\r\nReadable.ReadableState = ReadableState;\r\n\r\n/*<replacement>*/\r\nvar EE = require('events').EventEmitter;\r\n\r\nvar EElistenerCount = function (emitter, type) {\r\n  return emitter.listeners(type).length;\r\n};\r\n/*</replacement>*/\r\n\r\n/*<replacement>*/\r\nvar Stream = require('./internal/streams/stream');\r\n/*</replacement>*/\r\n\r\n/*<replacement>*/\r\n\r\nvar Buffer = require('safe-buffer').Buffer;\r\nvar OurUint8Array = global.Uint8Array || function () {};\r\nfunction _uint8ArrayToBuffer(chunk) {\r\n  return Buffer.from(chunk);\r\n}\r\nfunction _isUint8Array(obj) {\r\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\r\n}\r\n\r\n/*</replacement>*/\r\n\r\n/*<replacement>*/\r\nvar util = require('core-util-is');\r\nutil.inherits = require('inherits');\r\n/*</replacement>*/\r\n\r\n/*<replacement>*/\r\nvar debugUtil = require('util');\r\nvar debug = void 0;\r\nif (debugUtil && debugUtil.debuglog) {\r\n  debug = debugUtil.debuglog('stream');\r\n} else {\r\n  debug = function () {};\r\n}\r\n/*</replacement>*/\r\n\r\nvar BufferList = require('./internal/streams/BufferList');\r\nvar destroyImpl = require('./internal/streams/destroy');\r\nvar StringDecoder;\r\n\r\nutil.inherits(Readable, Stream);\r\n\r\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\r\n\r\nfunction prependListener(emitter, event, fn) {\r\n  // Sadly this is not cacheable as some libraries bundle their own\r\n  // event emitter implementation with them.\r\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\r\n\r\n  // This is a hack to make sure that our error handler is attached before any\r\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\r\n  // to continue to work with older versions of Node.js that do not include\r\n  // the prependListener() method. The goal is to eventually remove this hack.\r\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\r\n}\r\n\r\nfunction ReadableState(options, stream) {\r\n  Duplex = Duplex || require('./_stream_duplex');\r\n\r\n  options = options || {};\r\n\r\n  // Duplex streams are both readable and writable, but share\r\n  // the same options object.\r\n  // However, some cases require setting options to different\r\n  // values for the readable and the writable sides of the duplex stream.\r\n  // These options can be provided separately as readableXXX and writableXXX.\r\n  var isDuplex = stream instanceof Duplex;\r\n\r\n  // object stream flag. Used to make read(n) ignore n and to\r\n  // make all the buffer merging and length checks go away\r\n  this.objectMode = !!options.objectMode;\r\n\r\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\r\n\r\n  // the point at which it stops calling _read() to fill the buffer\r\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\r\n  var hwm = options.highWaterMark;\r\n  var readableHwm = options.readableHighWaterMark;\r\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\r\n\r\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\r\n\r\n  // cast to ints.\r\n  this.highWaterMark = Math.floor(this.highWaterMark);\r\n\r\n  // A linked list is used to store data chunks instead of an array because the\r\n  // linked list can remove elements from the beginning faster than\r\n  // array.shift()\r\n  this.buffer = new BufferList();\r\n  this.length = 0;\r\n  this.pipes = null;\r\n  this.pipesCount = 0;\r\n  this.flowing = null;\r\n  this.ended = false;\r\n  this.endEmitted = false;\r\n  this.reading = false;\r\n\r\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\r\n  // immediately, or on a later tick.  We set this to true at first, because\r\n  // any actions that shouldn't happen until \"later\" should generally also\r\n  // not happen before the first read call.\r\n  this.sync = true;\r\n\r\n  // whenever we return null, then we set a flag to say\r\n  // that we're awaiting a 'readable' event emission.\r\n  this.needReadable = false;\r\n  this.emittedReadable = false;\r\n  this.readableListening = false;\r\n  this.resumeScheduled = false;\r\n\r\n  // has it been destroyed\r\n  this.destroyed = false;\r\n\r\n  // Crypto is kind of old and crusty.  Historically, its default string\r\n  // encoding is 'binary' so we have to make this configurable.\r\n  // Everything else in the universe uses 'utf8', though.\r\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\r\n\r\n  // the number of writers that are awaiting a drain event in .pipe()s\r\n  this.awaitDrain = 0;\r\n\r\n  // if true, a maybeReadMore has been scheduled\r\n  this.readingMore = false;\r\n\r\n  this.decoder = null;\r\n  this.encoding = null;\r\n  if (options.encoding) {\r\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\r\n    this.decoder = new StringDecoder(options.encoding);\r\n    this.encoding = options.encoding;\r\n  }\r\n}\r\n\r\nfunction Readable(options) {\r\n  Duplex = Duplex || require('./_stream_duplex');\r\n\r\n  if (!(this instanceof Readable)) return new Readable(options);\r\n\r\n  this._readableState = new ReadableState(options, this);\r\n\r\n  // legacy\r\n  this.readable = true;\r\n\r\n  if (options) {\r\n    if (typeof options.read === 'function') this._read = options.read;\r\n\r\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\r\n  }\r\n\r\n  Stream.call(this);\r\n}\r\n\r\nObject.defineProperty(Readable.prototype, 'destroyed', {\r\n  get: function () {\r\n    if (this._readableState === undefined) {\r\n      return false;\r\n    }\r\n    return this._readableState.destroyed;\r\n  },\r\n  set: function (value) {\r\n    // we ignore the value if the stream\r\n    // has not been initialized yet\r\n    if (!this._readableState) {\r\n      return;\r\n    }\r\n\r\n    // backward compatibility, the user is explicitly\r\n    // managing destroyed\r\n    this._readableState.destroyed = value;\r\n  }\r\n});\r\n\r\nReadable.prototype.destroy = destroyImpl.destroy;\r\nReadable.prototype._undestroy = destroyImpl.undestroy;\r\nReadable.prototype._destroy = function (err, cb) {\r\n  this.push(null);\r\n  cb(err);\r\n};\r\n\r\n// Manually shove something into the read() buffer.\r\n// This returns true if the highWaterMark has not been hit yet,\r\n// similar to how Writable.write() returns true if you should\r\n// write() some more.\r\nReadable.prototype.push = function (chunk, encoding) {\r\n  var state = this._readableState;\r\n  var skipChunkCheck;\r\n\r\n  if (!state.objectMode) {\r\n    if (typeof chunk === 'string') {\r\n      encoding = encoding || state.defaultEncoding;\r\n      if (encoding !== state.encoding) {\r\n        chunk = Buffer.from(chunk, encoding);\r\n        encoding = '';\r\n      }\r\n      skipChunkCheck = true;\r\n    }\r\n  } else {\r\n    skipChunkCheck = true;\r\n  }\r\n\r\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\r\n};\r\n\r\n// Unshift should *always* be something directly out of read()\r\nReadable.prototype.unshift = function (chunk) {\r\n  return readableAddChunk(this, chunk, null, true, false);\r\n};\r\n\r\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\r\n  var state = stream._readableState;\r\n  if (chunk === null) {\r\n    state.reading = false;\r\n    onEofChunk(stream, state);\r\n  } else {\r\n    var er;\r\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\r\n    if (er) {\r\n      stream.emit('error', er);\r\n    } else if (state.objectMode || chunk && chunk.length > 0) {\r\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\r\n        chunk = _uint8ArrayToBuffer(chunk);\r\n      }\r\n\r\n      if (addToFront) {\r\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\r\n      } else if (state.ended) {\r\n        stream.emit('error', new Error('stream.push() after EOF'));\r\n      } else {\r\n        state.reading = false;\r\n        if (state.decoder && !encoding) {\r\n          chunk = state.decoder.write(chunk);\r\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\r\n        } else {\r\n          addChunk(stream, state, chunk, false);\r\n        }\r\n      }\r\n    } else if (!addToFront) {\r\n      state.reading = false;\r\n    }\r\n  }\r\n\r\n  return needMoreData(state);\r\n}\r\n\r\nfunction addChunk(stream, state, chunk, addToFront) {\r\n  if (state.flowing && state.length === 0 && !state.sync) {\r\n    stream.emit('data', chunk);\r\n    stream.read(0);\r\n  } else {\r\n    // update the buffer info.\r\n    state.length += state.objectMode ? 1 : chunk.length;\r\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\r\n\r\n    if (state.needReadable) emitReadable(stream);\r\n  }\r\n  maybeReadMore(stream, state);\r\n}\r\n\r\nfunction chunkInvalid(state, chunk) {\r\n  var er;\r\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\r\n    er = new TypeError('Invalid non-string/buffer chunk');\r\n  }\r\n  return er;\r\n}\r\n\r\n// if it's past the high water mark, we can push in some more.\r\n// Also, if we have no data yet, we can stand some\r\n// more bytes.  This is to work around cases where hwm=0,\r\n// such as the repl.  Also, if the push() triggered a\r\n// readable event, and the user called read(largeNumber) such that\r\n// needReadable was set, then we ought to push more, so that another\r\n// 'readable' event will be triggered.\r\nfunction needMoreData(state) {\r\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\r\n}\r\n\r\nReadable.prototype.isPaused = function () {\r\n  return this._readableState.flowing === false;\r\n};\r\n\r\n// backwards compatibility.\r\nReadable.prototype.setEncoding = function (enc) {\r\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\r\n  this._readableState.decoder = new StringDecoder(enc);\r\n  this._readableState.encoding = enc;\r\n  return this;\r\n};\r\n\r\n// Don't raise the hwm > 8MB\r\nvar MAX_HWM = 0x800000;\r\nfunction computeNewHighWaterMark(n) {\r\n  if (n >= MAX_HWM) {\r\n    n = MAX_HWM;\r\n  } else {\r\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\r\n    // tiny amounts\r\n    n--;\r\n    n |= n >>> 1;\r\n    n |= n >>> 2;\r\n    n |= n >>> 4;\r\n    n |= n >>> 8;\r\n    n |= n >>> 16;\r\n    n++;\r\n  }\r\n  return n;\r\n}\r\n\r\n// This function is designed to be inlinable, so please take care when making\r\n// changes to the function body.\r\nfunction howMuchToRead(n, state) {\r\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\r\n  if (state.objectMode) return 1;\r\n  if (n !== n) {\r\n    // Only flow one buffer at a time\r\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\r\n  }\r\n  // If we're asking for more than the current hwm, then raise the hwm.\r\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\r\n  if (n <= state.length) return n;\r\n  // Don't have enough\r\n  if (!state.ended) {\r\n    state.needReadable = true;\r\n    return 0;\r\n  }\r\n  return state.length;\r\n}\r\n\r\n// you can override either this method, or the async _read(n) below.\r\nReadable.prototype.read = function (n) {\r\n  debug('read', n);\r\n  n = parseInt(n, 10);\r\n  var state = this._readableState;\r\n  var nOrig = n;\r\n\r\n  if (n !== 0) state.emittedReadable = false;\r\n\r\n  // if we're doing read(0) to trigger a readable event, but we\r\n  // already have a bunch of data in the buffer, then just trigger\r\n  // the 'readable' event and move on.\r\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\r\n    debug('read: emitReadable', state.length, state.ended);\r\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\r\n    return null;\r\n  }\r\n\r\n  n = howMuchToRead(n, state);\r\n\r\n  // if we've ended, and we're now clear, then finish it up.\r\n  if (n === 0 && state.ended) {\r\n    if (state.length === 0) endReadable(this);\r\n    return null;\r\n  }\r\n\r\n  // All the actual chunk generation logic needs to be\r\n  // *below* the call to _read.  The reason is that in certain\r\n  // synthetic stream cases, such as passthrough streams, _read\r\n  // may be a completely synchronous operation which may change\r\n  // the state of the read buffer, providing enough data when\r\n  // before there was *not* enough.\r\n  //\r\n  // So, the steps are:\r\n  // 1. Figure out what the state of things will be after we do\r\n  // a read from the buffer.\r\n  //\r\n  // 2. If that resulting state will trigger a _read, then call _read.\r\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\r\n  // deeply ugly to write APIs this way, but that still doesn't mean\r\n  // that the Readable class should behave improperly, as streams are\r\n  // designed to be sync/async agnostic.\r\n  // Take note if the _read call is sync or async (ie, if the read call\r\n  // has returned yet), so that we know whether or not it's safe to emit\r\n  // 'readable' etc.\r\n  //\r\n  // 3. Actually pull the requested chunks out of the buffer and return.\r\n\r\n  // if we need a readable event, then we need to do some reading.\r\n  var doRead = state.needReadable;\r\n  debug('need readable', doRead);\r\n\r\n  // if we currently have less than the highWaterMark, then also read some\r\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\r\n    doRead = true;\r\n    debug('length less than watermark', doRead);\r\n  }\r\n\r\n  // however, if we've ended, then there's no point, and if we're already\r\n  // reading, then it's unnecessary.\r\n  if (state.ended || state.reading) {\r\n    doRead = false;\r\n    debug('reading or ended', doRead);\r\n  } else if (doRead) {\r\n    debug('do read');\r\n    state.reading = true;\r\n    state.sync = true;\r\n    // if the length is currently zero, then we *need* a readable event.\r\n    if (state.length === 0) state.needReadable = true;\r\n    // call internal read method\r\n    this._read(state.highWaterMark);\r\n    state.sync = false;\r\n    // If _read pushed data synchronously, then `reading` will be false,\r\n    // and we need to re-evaluate how much data we can return to the user.\r\n    if (!state.reading) n = howMuchToRead(nOrig, state);\r\n  }\r\n\r\n  var ret;\r\n  if (n > 0) ret = fromList(n, state);else ret = null;\r\n\r\n  if (ret === null) {\r\n    state.needReadable = true;\r\n    n = 0;\r\n  } else {\r\n    state.length -= n;\r\n  }\r\n\r\n  if (state.length === 0) {\r\n    // If we have nothing in the buffer, then we want to know\r\n    // as soon as we *do* get something into the buffer.\r\n    if (!state.ended) state.needReadable = true;\r\n\r\n    // If we tried to read() past the EOF, then emit end on the next tick.\r\n    if (nOrig !== n && state.ended) endReadable(this);\r\n  }\r\n\r\n  if (ret !== null) this.emit('data', ret);\r\n\r\n  return ret;\r\n};\r\n\r\nfunction onEofChunk(stream, state) {\r\n  if (state.ended) return;\r\n  if (state.decoder) {\r\n    var chunk = state.decoder.end();\r\n    if (chunk && chunk.length) {\r\n      state.buffer.push(chunk);\r\n      state.length += state.objectMode ? 1 : chunk.length;\r\n    }\r\n  }\r\n  state.ended = true;\r\n\r\n  // emit 'readable' now to make sure it gets picked up.\r\n  emitReadable(stream);\r\n}\r\n\r\n// Don't emit readable right away in sync mode, because this can trigger\r\n// another read() call => stack overflow.  This way, it might trigger\r\n// a nextTick recursion warning, but that's not so bad.\r\nfunction emitReadable(stream) {\r\n  var state = stream._readableState;\r\n  state.needReadable = false;\r\n  if (!state.emittedReadable) {\r\n    debug('emitReadable', state.flowing);\r\n    state.emittedReadable = true;\r\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\r\n  }\r\n}\r\n\r\nfunction emitReadable_(stream) {\r\n  debug('emit readable');\r\n  stream.emit('readable');\r\n  flow(stream);\r\n}\r\n\r\n// at this point, the user has presumably seen the 'readable' event,\r\n// and called read() to consume some data.  that may have triggered\r\n// in turn another _read(n) call, in which case reading = true if\r\n// it's in progress.\r\n// However, if we're not ended, or reading, and the length < hwm,\r\n// then go ahead and try to read some more preemptively.\r\nfunction maybeReadMore(stream, state) {\r\n  if (!state.readingMore) {\r\n    state.readingMore = true;\r\n    pna.nextTick(maybeReadMore_, stream, state);\r\n  }\r\n}\r\n\r\nfunction maybeReadMore_(stream, state) {\r\n  var len = state.length;\r\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\r\n    debug('maybeReadMore read 0');\r\n    stream.read(0);\r\n    if (len === state.length)\r\n      // didn't get any data, stop spinning.\r\n      break;else len = state.length;\r\n  }\r\n  state.readingMore = false;\r\n}\r\n\r\n// abstract method.  to be overridden in specific implementation classes.\r\n// call cb(er, data) where data is <= n in length.\r\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\r\n// arbitrary, and perhaps not very meaningful.\r\nReadable.prototype._read = function (n) {\r\n  this.emit('error', new Error('_read() is not implemented'));\r\n};\r\n\r\nReadable.prototype.pipe = function (dest, pipeOpts) {\r\n  var src = this;\r\n  var state = this._readableState;\r\n\r\n  switch (state.pipesCount) {\r\n    case 0:\r\n      state.pipes = dest;\r\n      break;\r\n    case 1:\r\n      state.pipes = [state.pipes, dest];\r\n      break;\r\n    default:\r\n      state.pipes.push(dest);\r\n      break;\r\n  }\r\n  state.pipesCount += 1;\r\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\r\n\r\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\r\n\r\n  var endFn = doEnd ? onend : unpipe;\r\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\r\n\r\n  dest.on('unpipe', onunpipe);\r\n  function onunpipe(readable, unpipeInfo) {\r\n    debug('onunpipe');\r\n    if (readable === src) {\r\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\r\n        unpipeInfo.hasUnpiped = true;\r\n        cleanup();\r\n      }\r\n    }\r\n  }\r\n\r\n  function onend() {\r\n    debug('onend');\r\n    dest.end();\r\n  }\r\n\r\n  // when the dest drains, it reduces the awaitDrain counter\r\n  // on the source.  This would be more elegant with a .once()\r\n  // handler in flow(), but adding and removing repeatedly is\r\n  // too slow.\r\n  var ondrain = pipeOnDrain(src);\r\n  dest.on('drain', ondrain);\r\n\r\n  var cleanedUp = false;\r\n  function cleanup() {\r\n    debug('cleanup');\r\n    // cleanup event handlers once the pipe is broken\r\n    dest.removeListener('close', onclose);\r\n    dest.removeListener('finish', onfinish);\r\n    dest.removeListener('drain', ondrain);\r\n    dest.removeListener('error', onerror);\r\n    dest.removeListener('unpipe', onunpipe);\r\n    src.removeListener('end', onend);\r\n    src.removeListener('end', unpipe);\r\n    src.removeListener('data', ondata);\r\n\r\n    cleanedUp = true;\r\n\r\n    // if the reader is waiting for a drain event from this\r\n    // specific writer, then it would cause it to never start\r\n    // flowing again.\r\n    // So, if this is awaiting a drain, then we just call it now.\r\n    // If we don't know, then assume that we are waiting for one.\r\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\r\n  }\r\n\r\n  // If the user pushes more data while we're writing to dest then we'll end up\r\n  // in ondata again. However, we only want to increase awaitDrain once because\r\n  // dest will only emit one 'drain' event for the multiple writes.\r\n  // => Introduce a guard on increasing awaitDrain.\r\n  var increasedAwaitDrain = false;\r\n  src.on('data', ondata);\r\n  function ondata(chunk) {\r\n    debug('ondata');\r\n    increasedAwaitDrain = false;\r\n    var ret = dest.write(chunk);\r\n    if (false === ret && !increasedAwaitDrain) {\r\n      // If the user unpiped during `dest.write()`, it is possible\r\n      // to get stuck in a permanently paused state if that write\r\n      // also returned false.\r\n      // => Check whether `dest` is still a piping destination.\r\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\r\n        debug('false write response, pause', src._readableState.awaitDrain);\r\n        src._readableState.awaitDrain++;\r\n        increasedAwaitDrain = true;\r\n      }\r\n      src.pause();\r\n    }\r\n  }\r\n\r\n  // if the dest has an error, then stop piping into it.\r\n  // however, don't suppress the throwing behavior for this.\r\n  function onerror(er) {\r\n    debug('onerror', er);\r\n    unpipe();\r\n    dest.removeListener('error', onerror);\r\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\r\n  }\r\n\r\n  // Make sure our error handler is attached before userland ones.\r\n  prependListener(dest, 'error', onerror);\r\n\r\n  // Both close and finish should trigger unpipe, but only once.\r\n  function onclose() {\r\n    dest.removeListener('finish', onfinish);\r\n    unpipe();\r\n  }\r\n  dest.once('close', onclose);\r\n  function onfinish() {\r\n    debug('onfinish');\r\n    dest.removeListener('close', onclose);\r\n    unpipe();\r\n  }\r\n  dest.once('finish', onfinish);\r\n\r\n  function unpipe() {\r\n    debug('unpipe');\r\n    src.unpipe(dest);\r\n  }\r\n\r\n  // tell the dest that it's being piped to\r\n  dest.emit('pipe', src);\r\n\r\n  // start the flow if it hasn't been started already.\r\n  if (!state.flowing) {\r\n    debug('pipe resume');\r\n    src.resume();\r\n  }\r\n\r\n  return dest;\r\n};\r\n\r\nfunction pipeOnDrain(src) {\r\n  return function () {\r\n    var state = src._readableState;\r\n    debug('pipeOnDrain', state.awaitDrain);\r\n    if (state.awaitDrain) state.awaitDrain--;\r\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\r\n      state.flowing = true;\r\n      flow(src);\r\n    }\r\n  };\r\n}\r\n\r\nReadable.prototype.unpipe = function (dest) {\r\n  var state = this._readableState;\r\n  var unpipeInfo = { hasUnpiped: false };\r\n\r\n  // if we're not piping anywhere, then do nothing.\r\n  if (state.pipesCount === 0) return this;\r\n\r\n  // just one destination.  most common case.\r\n  if (state.pipesCount === 1) {\r\n    // passed in one, but it's not the right one.\r\n    if (dest && dest !== state.pipes) return this;\r\n\r\n    if (!dest) dest = state.pipes;\r\n\r\n    // got a match.\r\n    state.pipes = null;\r\n    state.pipesCount = 0;\r\n    state.flowing = false;\r\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\r\n    return this;\r\n  }\r\n\r\n  // slow case. multiple pipe destinations.\r\n\r\n  if (!dest) {\r\n    // remove all.\r\n    var dests = state.pipes;\r\n    var len = state.pipesCount;\r\n    state.pipes = null;\r\n    state.pipesCount = 0;\r\n    state.flowing = false;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      dests[i].emit('unpipe', this, unpipeInfo);\r\n    }return this;\r\n  }\r\n\r\n  // try to find the right one.\r\n  var index = indexOf(state.pipes, dest);\r\n  if (index === -1) return this;\r\n\r\n  state.pipes.splice(index, 1);\r\n  state.pipesCount -= 1;\r\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\r\n\r\n  dest.emit('unpipe', this, unpipeInfo);\r\n\r\n  return this;\r\n};\r\n\r\n// set up data events if they are asked for\r\n// Ensure readable listeners eventually get something\r\nReadable.prototype.on = function (ev, fn) {\r\n  var res = Stream.prototype.on.call(this, ev, fn);\r\n\r\n  if (ev === 'data') {\r\n    // Start flowing on next tick if stream isn't explicitly paused\r\n    if (this._readableState.flowing !== false) this.resume();\r\n  } else if (ev === 'readable') {\r\n    var state = this._readableState;\r\n    if (!state.endEmitted && !state.readableListening) {\r\n      state.readableListening = state.needReadable = true;\r\n      state.emittedReadable = false;\r\n      if (!state.reading) {\r\n        pna.nextTick(nReadingNextTick, this);\r\n      } else if (state.length) {\r\n        emitReadable(this);\r\n      }\r\n    }\r\n  }\r\n\r\n  return res;\r\n};\r\nReadable.prototype.addListener = Readable.prototype.on;\r\n\r\nfunction nReadingNextTick(self) {\r\n  debug('readable nexttick read 0');\r\n  self.read(0);\r\n}\r\n\r\n// pause() and resume() are remnants of the legacy readable stream API\r\n// If the user uses them, then switch into old mode.\r\nReadable.prototype.resume = function () {\r\n  var state = this._readableState;\r\n  if (!state.flowing) {\r\n    debug('resume');\r\n    state.flowing = true;\r\n    resume(this, state);\r\n  }\r\n  return this;\r\n};\r\n\r\nfunction resume(stream, state) {\r\n  if (!state.resumeScheduled) {\r\n    state.resumeScheduled = true;\r\n    pna.nextTick(resume_, stream, state);\r\n  }\r\n}\r\n\r\nfunction resume_(stream, state) {\r\n  if (!state.reading) {\r\n    debug('resume read 0');\r\n    stream.read(0);\r\n  }\r\n\r\n  state.resumeScheduled = false;\r\n  state.awaitDrain = 0;\r\n  stream.emit('resume');\r\n  flow(stream);\r\n  if (state.flowing && !state.reading) stream.read(0);\r\n}\r\n\r\nReadable.prototype.pause = function () {\r\n  debug('call pause flowing=%j', this._readableState.flowing);\r\n  if (false !== this._readableState.flowing) {\r\n    debug('pause');\r\n    this._readableState.flowing = false;\r\n    this.emit('pause');\r\n  }\r\n  return this;\r\n};\r\n\r\nfunction flow(stream) {\r\n  var state = stream._readableState;\r\n  debug('flow', state.flowing);\r\n  while (state.flowing && stream.read() !== null) {}\r\n}\r\n\r\n// wrap an old-style stream as the async data source.\r\n// This is *not* part of the readable stream interface.\r\n// It is an ugly unfortunate mess of history.\r\nReadable.prototype.wrap = function (stream) {\r\n  var _this = this;\r\n\r\n  var state = this._readableState;\r\n  var paused = false;\r\n\r\n  stream.on('end', function () {\r\n    debug('wrapped end');\r\n    if (state.decoder && !state.ended) {\r\n      var chunk = state.decoder.end();\r\n      if (chunk && chunk.length) _this.push(chunk);\r\n    }\r\n\r\n    _this.push(null);\r\n  });\r\n\r\n  stream.on('data', function (chunk) {\r\n    debug('wrapped data');\r\n    if (state.decoder) chunk = state.decoder.write(chunk);\r\n\r\n    // don't skip over falsy values in objectMode\r\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\r\n\r\n    var ret = _this.push(chunk);\r\n    if (!ret) {\r\n      paused = true;\r\n      stream.pause();\r\n    }\r\n  });\r\n\r\n  // proxy all the other methods.\r\n  // important when wrapping filters and duplexes.\r\n  for (var i in stream) {\r\n    if (this[i] === undefined && typeof stream[i] === 'function') {\r\n      this[i] = function (method) {\r\n        return function () {\r\n          return stream[method].apply(stream, arguments);\r\n        };\r\n      }(i);\r\n    }\r\n  }\r\n\r\n  // proxy certain important events.\r\n  for (var n = 0; n < kProxyEvents.length; n++) {\r\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\r\n  }\r\n\r\n  // when we try to consume some more bytes, simply unpause the\r\n  // underlying stream.\r\n  this._read = function (n) {\r\n    debug('wrapped _read', n);\r\n    if (paused) {\r\n      paused = false;\r\n      stream.resume();\r\n    }\r\n  };\r\n\r\n  return this;\r\n};\r\n\r\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\r\n  // making it explicit this property is not enumerable\r\n  // because otherwise some prototype manipulation in\r\n  // userland will fail\r\n  enumerable: false,\r\n  get: function () {\r\n    return this._readableState.highWaterMark;\r\n  }\r\n});\r\n\r\n// exposed for testing purposes only.\r\nReadable._fromList = fromList;\r\n\r\n// Pluck off n bytes from an array of buffers.\r\n// Length is the combined lengths of all the buffers in the list.\r\n// This function is designed to be inlinable, so please take care when making\r\n// changes to the function body.\r\nfunction fromList(n, state) {\r\n  // nothing buffered\r\n  if (state.length === 0) return null;\r\n\r\n  var ret;\r\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\r\n    // read it all, truncate the list\r\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\r\n    state.buffer.clear();\r\n  } else {\r\n    // read part of list\r\n    ret = fromListPartial(n, state.buffer, state.decoder);\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\n// Extracts only enough buffered data to satisfy the amount requested.\r\n// This function is designed to be inlinable, so please take care when making\r\n// changes to the function body.\r\nfunction fromListPartial(n, list, hasStrings) {\r\n  var ret;\r\n  if (n < list.head.data.length) {\r\n    // slice is the same for buffers and strings\r\n    ret = list.head.data.slice(0, n);\r\n    list.head.data = list.head.data.slice(n);\r\n  } else if (n === list.head.data.length) {\r\n    // first chunk is a perfect match\r\n    ret = list.shift();\r\n  } else {\r\n    // result spans more than one buffer\r\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\r\n  }\r\n  return ret;\r\n}\r\n\r\n// Copies a specified amount of characters from the list of buffered data\r\n// chunks.\r\n// This function is designed to be inlinable, so please take care when making\r\n// changes to the function body.\r\nfunction copyFromBufferString(n, list) {\r\n  var p = list.head;\r\n  var c = 1;\r\n  var ret = p.data;\r\n  n -= ret.length;\r\n  while (p = p.next) {\r\n    var str = p.data;\r\n    var nb = n > str.length ? str.length : n;\r\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\r\n    n -= nb;\r\n    if (n === 0) {\r\n      if (nb === str.length) {\r\n        ++c;\r\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\r\n      } else {\r\n        list.head = p;\r\n        p.data = str.slice(nb);\r\n      }\r\n      break;\r\n    }\r\n    ++c;\r\n  }\r\n  list.length -= c;\r\n  return ret;\r\n}\r\n\r\n// Copies a specified amount of bytes from the list of buffered data chunks.\r\n// This function is designed to be inlinable, so please take care when making\r\n// changes to the function body.\r\nfunction copyFromBuffer(n, list) {\r\n  var ret = Buffer.allocUnsafe(n);\r\n  var p = list.head;\r\n  var c = 1;\r\n  p.data.copy(ret);\r\n  n -= p.data.length;\r\n  while (p = p.next) {\r\n    var buf = p.data;\r\n    var nb = n > buf.length ? buf.length : n;\r\n    buf.copy(ret, ret.length - n, 0, nb);\r\n    n -= nb;\r\n    if (n === 0) {\r\n      if (nb === buf.length) {\r\n        ++c;\r\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\r\n      } else {\r\n        list.head = p;\r\n        p.data = buf.slice(nb);\r\n      }\r\n      break;\r\n    }\r\n    ++c;\r\n  }\r\n  list.length -= c;\r\n  return ret;\r\n}\r\n\r\nfunction endReadable(stream) {\r\n  var state = stream._readableState;\r\n\r\n  // If we get here before consuming all the bytes, then that is a\r\n  // bug in node.  Should never happen.\r\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\r\n\r\n  if (!state.endEmitted) {\r\n    state.ended = true;\r\n    pna.nextTick(endReadableNT, state, stream);\r\n  }\r\n}\r\n\r\nfunction endReadableNT(state, stream) {\r\n  // Check that we didn't get one last unshift.\r\n  if (!state.endEmitted && state.length === 0) {\r\n    state.endEmitted = true;\r\n    stream.readable = false;\r\n    stream.emit('end');\r\n  }\r\n}\r\n\r\nfunction indexOf(xs, x) {\r\n  for (var i = 0, l = xs.length; i < l; i++) {\r\n    if (xs[i] === x) return i;\r\n  }\r\n  return -1;\r\n}\r\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"./_stream_duplex\":98,\"./internal/streams/BufferList\":103,\"./internal/streams/destroy\":104,\"./internal/streams/stream\":105,\"_process\":91,\"core-util-is\":42,\"events\":47,\"inherits\":84,\"isarray\":86,\"process-nextick-args\":90,\"safe-buffer\":110,\"string_decoder/\":113,\"util\":40}],101:[function(require,module,exports){\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n// a transform stream is a readable/writable stream where you do\r\n// something with the data.  Sometimes it's called a \"filter\",\r\n// but that's not a great name for it, since that implies a thing where\r\n// some bits pass through, and others are simply ignored.  (That would\r\n// be a valid example of a transform, of course.)\r\n//\r\n// While the output is causally related to the input, it's not a\r\n// necessarily symmetric or synchronous transformation.  For example,\r\n// a zlib stream might take multiple plain-text writes(), and then\r\n// emit a single compressed chunk some time in the future.\r\n//\r\n// Here's how this works:\r\n//\r\n// The Transform stream has all the aspects of the readable and writable\r\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\r\n// internally, and returns false if there's a lot of pending writes\r\n// buffered up.  When you call read(), that calls _read(n) until\r\n// there's enough pending readable data buffered up.\r\n//\r\n// In a transform stream, the written data is placed in a buffer.  When\r\n// _read(n) is called, it transforms the queued up data, calling the\r\n// buffered _write cb's as it consumes chunks.  If consuming a single\r\n// written chunk would result in multiple output chunks, then the first\r\n// outputted bit calls the readcb, and subsequent chunks just go into\r\n// the read buffer, and will cause it to emit 'readable' if necessary.\r\n//\r\n// This way, back-pressure is actually determined by the reading side,\r\n// since _read has to be called to start processing a new chunk.  However,\r\n// a pathological inflate type of transform can cause excessive buffering\r\n// here.  For example, imagine a stream where every byte of input is\r\n// interpreted as an integer from 0-255, and then results in that many\r\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\r\n// 1kb of data being output.  In this case, you could write a very small\r\n// amount of input, and end up with a very large amount of output.  In\r\n// such a pathological inflating mechanism, there'd be no way to tell\r\n// the system to stop doing the transform.  A single 4MB write could\r\n// cause the system to run out of memory.\r\n//\r\n// However, even in such a pathological case, only a single written chunk\r\n// would be consumed, and then the rest would wait (un-transformed) until\r\n// the results of the previous transformed chunk were consumed.\r\n\r\n'use strict';\r\n\r\nmodule.exports = Transform;\r\n\r\nvar Duplex = require('./_stream_duplex');\r\n\r\n/*<replacement>*/\r\nvar util = require('core-util-is');\r\nutil.inherits = require('inherits');\r\n/*</replacement>*/\r\n\r\nutil.inherits(Transform, Duplex);\r\n\r\nfunction afterTransform(er, data) {\r\n  var ts = this._transformState;\r\n  ts.transforming = false;\r\n\r\n  var cb = ts.writecb;\r\n\r\n  if (!cb) {\r\n    return this.emit('error', new Error('write callback called multiple times'));\r\n  }\r\n\r\n  ts.writechunk = null;\r\n  ts.writecb = null;\r\n\r\n  if (data != null) // single equals check for both `null` and `undefined`\r\n    this.push(data);\r\n\r\n  cb(er);\r\n\r\n  var rs = this._readableState;\r\n  rs.reading = false;\r\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\r\n    this._read(rs.highWaterMark);\r\n  }\r\n}\r\n\r\nfunction Transform(options) {\r\n  if (!(this instanceof Transform)) return new Transform(options);\r\n\r\n  Duplex.call(this, options);\r\n\r\n  this._transformState = {\r\n    afterTransform: afterTransform.bind(this),\r\n    needTransform: false,\r\n    transforming: false,\r\n    writecb: null,\r\n    writechunk: null,\r\n    writeencoding: null\r\n  };\r\n\r\n  // start out asking for a readable event once data is transformed.\r\n  this._readableState.needReadable = true;\r\n\r\n  // we have implemented the _read method, and done the other things\r\n  // that Readable wants before the first _read call, so unset the\r\n  // sync guard flag.\r\n  this._readableState.sync = false;\r\n\r\n  if (options) {\r\n    if (typeof options.transform === 'function') this._transform = options.transform;\r\n\r\n    if (typeof options.flush === 'function') this._flush = options.flush;\r\n  }\r\n\r\n  // When the writable side finishes, then flush out anything remaining.\r\n  this.on('prefinish', prefinish);\r\n}\r\n\r\nfunction prefinish() {\r\n  var _this = this;\r\n\r\n  if (typeof this._flush === 'function') {\r\n    this._flush(function (er, data) {\r\n      done(_this, er, data);\r\n    });\r\n  } else {\r\n    done(this, null, null);\r\n  }\r\n}\r\n\r\nTransform.prototype.push = function (chunk, encoding) {\r\n  this._transformState.needTransform = false;\r\n  return Duplex.prototype.push.call(this, chunk, encoding);\r\n};\r\n\r\n// This is the part where you do stuff!\r\n// override this function in implementation classes.\r\n// 'chunk' is an input chunk.\r\n//\r\n// Call `push(newChunk)` to pass along transformed output\r\n// to the readable side.  You may call 'push' zero or more times.\r\n//\r\n// Call `cb(err)` when you are done with this chunk.  If you pass\r\n// an error, then that'll put the hurt on the whole operation.  If you\r\n// never call cb(), then you'll never get another chunk.\r\nTransform.prototype._transform = function (chunk, encoding, cb) {\r\n  throw new Error('_transform() is not implemented');\r\n};\r\n\r\nTransform.prototype._write = function (chunk, encoding, cb) {\r\n  var ts = this._transformState;\r\n  ts.writecb = cb;\r\n  ts.writechunk = chunk;\r\n  ts.writeencoding = encoding;\r\n  if (!ts.transforming) {\r\n    var rs = this._readableState;\r\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\r\n  }\r\n};\r\n\r\n// Doesn't matter what the args are here.\r\n// _transform does all the work.\r\n// That we got here means that the readable side wants more data.\r\nTransform.prototype._read = function (n) {\r\n  var ts = this._transformState;\r\n\r\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\r\n    ts.transforming = true;\r\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\r\n  } else {\r\n    // mark that we need a transform, so that any data that comes in\r\n    // will get processed, now that we've asked for it.\r\n    ts.needTransform = true;\r\n  }\r\n};\r\n\r\nTransform.prototype._destroy = function (err, cb) {\r\n  var _this2 = this;\r\n\r\n  Duplex.prototype._destroy.call(this, err, function (err2) {\r\n    cb(err2);\r\n    _this2.emit('close');\r\n  });\r\n};\r\n\r\nfunction done(stream, er, data) {\r\n  if (er) return stream.emit('error', er);\r\n\r\n  if (data != null) // single equals check for both `null` and `undefined`\r\n    stream.push(data);\r\n\r\n  // if there's nothing in the write buffer, then that means\r\n  // that nothing more will ever be provided\r\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\r\n\r\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\r\n\r\n  return stream.push(null);\r\n}\r\n},{\"./_stream_duplex\":98,\"core-util-is\":42,\"inherits\":84}],102:[function(require,module,exports){\r\n(function (process,global,setImmediate){\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n// A bit simpler than readable streams.\r\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\r\n// the drain event emission and buffering.\r\n\r\n'use strict';\r\n\r\n/*<replacement>*/\r\n\r\nvar pna = require('process-nextick-args');\r\n/*</replacement>*/\r\n\r\nmodule.exports = Writable;\r\n\r\n/* <replacement> */\r\nfunction WriteReq(chunk, encoding, cb) {\r\n  this.chunk = chunk;\r\n  this.encoding = encoding;\r\n  this.callback = cb;\r\n  this.next = null;\r\n}\r\n\r\n// It seems a linked list but it is not\r\n// there will be only 2 of these for each stream\r\nfunction CorkedRequest(state) {\r\n  var _this = this;\r\n\r\n  this.next = null;\r\n  this.entry = null;\r\n  this.finish = function () {\r\n    onCorkedFinish(_this, state);\r\n  };\r\n}\r\n/* </replacement> */\r\n\r\n/*<replacement>*/\r\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\r\n/*</replacement>*/\r\n\r\n/*<replacement>*/\r\nvar Duplex;\r\n/*</replacement>*/\r\n\r\nWritable.WritableState = WritableState;\r\n\r\n/*<replacement>*/\r\nvar util = require('core-util-is');\r\nutil.inherits = require('inherits');\r\n/*</replacement>*/\r\n\r\n/*<replacement>*/\r\nvar internalUtil = {\r\n  deprecate: require('util-deprecate')\r\n};\r\n/*</replacement>*/\r\n\r\n/*<replacement>*/\r\nvar Stream = require('./internal/streams/stream');\r\n/*</replacement>*/\r\n\r\n/*<replacement>*/\r\n\r\nvar Buffer = require('safe-buffer').Buffer;\r\nvar OurUint8Array = global.Uint8Array || function () {};\r\nfunction _uint8ArrayToBuffer(chunk) {\r\n  return Buffer.from(chunk);\r\n}\r\nfunction _isUint8Array(obj) {\r\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\r\n}\r\n\r\n/*</replacement>*/\r\n\r\nvar destroyImpl = require('./internal/streams/destroy');\r\n\r\nutil.inherits(Writable, Stream);\r\n\r\nfunction nop() {}\r\n\r\nfunction WritableState(options, stream) {\r\n  Duplex = Duplex || require('./_stream_duplex');\r\n\r\n  options = options || {};\r\n\r\n  // Duplex streams are both readable and writable, but share\r\n  // the same options object.\r\n  // However, some cases require setting options to different\r\n  // values for the readable and the writable sides of the duplex stream.\r\n  // These options can be provided separately as readableXXX and writableXXX.\r\n  var isDuplex = stream instanceof Duplex;\r\n\r\n  // object stream flag to indicate whether or not this stream\r\n  // contains buffers or objects.\r\n  this.objectMode = !!options.objectMode;\r\n\r\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\r\n\r\n  // the point at which write() starts returning false\r\n  // Note: 0 is a valid value, means that we always return false if\r\n  // the entire buffer is not flushed immediately on write()\r\n  var hwm = options.highWaterMark;\r\n  var writableHwm = options.writableHighWaterMark;\r\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\r\n\r\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\r\n\r\n  // cast to ints.\r\n  this.highWaterMark = Math.floor(this.highWaterMark);\r\n\r\n  // if _final has been called\r\n  this.finalCalled = false;\r\n\r\n  // drain event flag.\r\n  this.needDrain = false;\r\n  // at the start of calling end()\r\n  this.ending = false;\r\n  // when end() has been called, and returned\r\n  this.ended = false;\r\n  // when 'finish' is emitted\r\n  this.finished = false;\r\n\r\n  // has it been destroyed\r\n  this.destroyed = false;\r\n\r\n  // should we decode strings into buffers before passing to _write?\r\n  // this is here so that some node-core streams can optimize string\r\n  // handling at a lower level.\r\n  var noDecode = options.decodeStrings === false;\r\n  this.decodeStrings = !noDecode;\r\n\r\n  // Crypto is kind of old and crusty.  Historically, its default string\r\n  // encoding is 'binary' so we have to make this configurable.\r\n  // Everything else in the universe uses 'utf8', though.\r\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\r\n\r\n  // not an actual buffer we keep track of, but a measurement\r\n  // of how much we're waiting to get pushed to some underlying\r\n  // socket or file.\r\n  this.length = 0;\r\n\r\n  // a flag to see when we're in the middle of a write.\r\n  this.writing = false;\r\n\r\n  // when true all writes will be buffered until .uncork() call\r\n  this.corked = 0;\r\n\r\n  // a flag to be able to tell if the onwrite cb is called immediately,\r\n  // or on a later tick.  We set this to true at first, because any\r\n  // actions that shouldn't happen until \"later\" should generally also\r\n  // not happen before the first write call.\r\n  this.sync = true;\r\n\r\n  // a flag to know if we're processing previously buffered items, which\r\n  // may call the _write() callback in the same tick, so that we don't\r\n  // end up in an overlapped onwrite situation.\r\n  this.bufferProcessing = false;\r\n\r\n  // the callback that's passed to _write(chunk,cb)\r\n  this.onwrite = function (er) {\r\n    onwrite(stream, er);\r\n  };\r\n\r\n  // the callback that the user supplies to write(chunk,encoding,cb)\r\n  this.writecb = null;\r\n\r\n  // the amount that is being written when _write is called.\r\n  this.writelen = 0;\r\n\r\n  this.bufferedRequest = null;\r\n  this.lastBufferedRequest = null;\r\n\r\n  // number of pending user-supplied write callbacks\r\n  // this must be 0 before 'finish' can be emitted\r\n  this.pendingcb = 0;\r\n\r\n  // emit prefinish if the only thing we're waiting for is _write cbs\r\n  // This is relevant for synchronous Transform streams\r\n  this.prefinished = false;\r\n\r\n  // True if the error was already emitted and should not be thrown again\r\n  this.errorEmitted = false;\r\n\r\n  // count buffered requests\r\n  this.bufferedRequestCount = 0;\r\n\r\n  // allocate the first CorkedRequest, there is always\r\n  // one allocated and free to use, and we maintain at most two\r\n  this.corkedRequestsFree = new CorkedRequest(this);\r\n}\r\n\r\nWritableState.prototype.getBuffer = function getBuffer() {\r\n  var current = this.bufferedRequest;\r\n  var out = [];\r\n  while (current) {\r\n    out.push(current);\r\n    current = current.next;\r\n  }\r\n  return out;\r\n};\r\n\r\n(function () {\r\n  try {\r\n    Object.defineProperty(WritableState.prototype, 'buffer', {\r\n      get: internalUtil.deprecate(function () {\r\n        return this.getBuffer();\r\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\r\n    });\r\n  } catch (_) {}\r\n})();\r\n\r\n// Test _writableState for inheritance to account for Duplex streams,\r\n// whose prototype chain only points to Readable.\r\nvar realHasInstance;\r\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\r\n  realHasInstance = Function.prototype[Symbol.hasInstance];\r\n  Object.defineProperty(Writable, Symbol.hasInstance, {\r\n    value: function (object) {\r\n      if (realHasInstance.call(this, object)) return true;\r\n      if (this !== Writable) return false;\r\n\r\n      return object && object._writableState instanceof WritableState;\r\n    }\r\n  });\r\n} else {\r\n  realHasInstance = function (object) {\r\n    return object instanceof this;\r\n  };\r\n}\r\n\r\nfunction Writable(options) {\r\n  Duplex = Duplex || require('./_stream_duplex');\r\n\r\n  // Writable ctor is applied to Duplexes, too.\r\n  // `realHasInstance` is necessary because using plain `instanceof`\r\n  // would return false, as no `_writableState` property is attached.\r\n\r\n  // Trying to use the custom `instanceof` for Writable here will also break the\r\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\r\n  // `_writableState` that would lead to infinite recursion.\r\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\r\n    return new Writable(options);\r\n  }\r\n\r\n  this._writableState = new WritableState(options, this);\r\n\r\n  // legacy.\r\n  this.writable = true;\r\n\r\n  if (options) {\r\n    if (typeof options.write === 'function') this._write = options.write;\r\n\r\n    if (typeof options.writev === 'function') this._writev = options.writev;\r\n\r\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\r\n\r\n    if (typeof options.final === 'function') this._final = options.final;\r\n  }\r\n\r\n  Stream.call(this);\r\n}\r\n\r\n// Otherwise people can pipe Writable streams, which is just wrong.\r\nWritable.prototype.pipe = function () {\r\n  this.emit('error', new Error('Cannot pipe, not readable'));\r\n};\r\n\r\nfunction writeAfterEnd(stream, cb) {\r\n  var er = new Error('write after end');\r\n  // TODO: defer error events consistently everywhere, not just the cb\r\n  stream.emit('error', er);\r\n  pna.nextTick(cb, er);\r\n}\r\n\r\n// Checks that a user-supplied chunk is valid, especially for the particular\r\n// mode the stream is in. Currently this means that `null` is never accepted\r\n// and undefined/non-string values are only allowed in object mode.\r\nfunction validChunk(stream, state, chunk, cb) {\r\n  var valid = true;\r\n  var er = false;\r\n\r\n  if (chunk === null) {\r\n    er = new TypeError('May not write null values to stream');\r\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\r\n    er = new TypeError('Invalid non-string/buffer chunk');\r\n  }\r\n  if (er) {\r\n    stream.emit('error', er);\r\n    pna.nextTick(cb, er);\r\n    valid = false;\r\n  }\r\n  return valid;\r\n}\r\n\r\nWritable.prototype.write = function (chunk, encoding, cb) {\r\n  var state = this._writableState;\r\n  var ret = false;\r\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\r\n\r\n  if (isBuf && !Buffer.isBuffer(chunk)) {\r\n    chunk = _uint8ArrayToBuffer(chunk);\r\n  }\r\n\r\n  if (typeof encoding === 'function') {\r\n    cb = encoding;\r\n    encoding = null;\r\n  }\r\n\r\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\r\n\r\n  if (typeof cb !== 'function') cb = nop;\r\n\r\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\r\n    state.pendingcb++;\r\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\r\n  }\r\n\r\n  return ret;\r\n};\r\n\r\nWritable.prototype.cork = function () {\r\n  var state = this._writableState;\r\n\r\n  state.corked++;\r\n};\r\n\r\nWritable.prototype.uncork = function () {\r\n  var state = this._writableState;\r\n\r\n  if (state.corked) {\r\n    state.corked--;\r\n\r\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\r\n  }\r\n};\r\n\r\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\r\n  // node::ParseEncoding() requires lower case.\r\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\r\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\r\n  this._writableState.defaultEncoding = encoding;\r\n  return this;\r\n};\r\n\r\nfunction decodeChunk(state, chunk, encoding) {\r\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\r\n    chunk = Buffer.from(chunk, encoding);\r\n  }\r\n  return chunk;\r\n}\r\n\r\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\r\n  // making it explicit this property is not enumerable\r\n  // because otherwise some prototype manipulation in\r\n  // userland will fail\r\n  enumerable: false,\r\n  get: function () {\r\n    return this._writableState.highWaterMark;\r\n  }\r\n});\r\n\r\n// if we're already writing something, then just put this\r\n// in the queue, and wait our turn.  Otherwise, call _write\r\n// If we return false, then we need a drain event, so set that flag.\r\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\r\n  if (!isBuf) {\r\n    var newChunk = decodeChunk(state, chunk, encoding);\r\n    if (chunk !== newChunk) {\r\n      isBuf = true;\r\n      encoding = 'buffer';\r\n      chunk = newChunk;\r\n    }\r\n  }\r\n  var len = state.objectMode ? 1 : chunk.length;\r\n\r\n  state.length += len;\r\n\r\n  var ret = state.length < state.highWaterMark;\r\n  // we must ensure that previous needDrain will not be reset to false.\r\n  if (!ret) state.needDrain = true;\r\n\r\n  if (state.writing || state.corked) {\r\n    var last = state.lastBufferedRequest;\r\n    state.lastBufferedRequest = {\r\n      chunk: chunk,\r\n      encoding: encoding,\r\n      isBuf: isBuf,\r\n      callback: cb,\r\n      next: null\r\n    };\r\n    if (last) {\r\n      last.next = state.lastBufferedRequest;\r\n    } else {\r\n      state.bufferedRequest = state.lastBufferedRequest;\r\n    }\r\n    state.bufferedRequestCount += 1;\r\n  } else {\r\n    doWrite(stream, state, false, len, chunk, encoding, cb);\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\r\n  state.writelen = len;\r\n  state.writecb = cb;\r\n  state.writing = true;\r\n  state.sync = true;\r\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\r\n  state.sync = false;\r\n}\r\n\r\nfunction onwriteError(stream, state, sync, er, cb) {\r\n  --state.pendingcb;\r\n\r\n  if (sync) {\r\n    // defer the callback if we are being called synchronously\r\n    // to avoid piling up things on the stack\r\n    pna.nextTick(cb, er);\r\n    // this can emit finish, and it will always happen\r\n    // after error\r\n    pna.nextTick(finishMaybe, stream, state);\r\n    stream._writableState.errorEmitted = true;\r\n    stream.emit('error', er);\r\n  } else {\r\n    // the caller expect this to happen before if\r\n    // it is async\r\n    cb(er);\r\n    stream._writableState.errorEmitted = true;\r\n    stream.emit('error', er);\r\n    // this can emit finish, but finish must\r\n    // always follow error\r\n    finishMaybe(stream, state);\r\n  }\r\n}\r\n\r\nfunction onwriteStateUpdate(state) {\r\n  state.writing = false;\r\n  state.writecb = null;\r\n  state.length -= state.writelen;\r\n  state.writelen = 0;\r\n}\r\n\r\nfunction onwrite(stream, er) {\r\n  var state = stream._writableState;\r\n  var sync = state.sync;\r\n  var cb = state.writecb;\r\n\r\n  onwriteStateUpdate(state);\r\n\r\n  if (er) onwriteError(stream, state, sync, er, cb);else {\r\n    // Check if we're actually ready to finish, but don't emit yet\r\n    var finished = needFinish(state);\r\n\r\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\r\n      clearBuffer(stream, state);\r\n    }\r\n\r\n    if (sync) {\r\n      /*<replacement>*/\r\n      asyncWrite(afterWrite, stream, state, finished, cb);\r\n      /*</replacement>*/\r\n    } else {\r\n      afterWrite(stream, state, finished, cb);\r\n    }\r\n  }\r\n}\r\n\r\nfunction afterWrite(stream, state, finished, cb) {\r\n  if (!finished) onwriteDrain(stream, state);\r\n  state.pendingcb--;\r\n  cb();\r\n  finishMaybe(stream, state);\r\n}\r\n\r\n// Must force callback to be called on nextTick, so that we don't\r\n// emit 'drain' before the write() consumer gets the 'false' return\r\n// value, and has a chance to attach a 'drain' listener.\r\nfunction onwriteDrain(stream, state) {\r\n  if (state.length === 0 && state.needDrain) {\r\n    state.needDrain = false;\r\n    stream.emit('drain');\r\n  }\r\n}\r\n\r\n// if there's something in the buffer waiting, then process it\r\nfunction clearBuffer(stream, state) {\r\n  state.bufferProcessing = true;\r\n  var entry = state.bufferedRequest;\r\n\r\n  if (stream._writev && entry && entry.next) {\r\n    // Fast case, write everything using _writev()\r\n    var l = state.bufferedRequestCount;\r\n    var buffer = new Array(l);\r\n    var holder = state.corkedRequestsFree;\r\n    holder.entry = entry;\r\n\r\n    var count = 0;\r\n    var allBuffers = true;\r\n    while (entry) {\r\n      buffer[count] = entry;\r\n      if (!entry.isBuf) allBuffers = false;\r\n      entry = entry.next;\r\n      count += 1;\r\n    }\r\n    buffer.allBuffers = allBuffers;\r\n\r\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\r\n\r\n    // doWrite is almost always async, defer these to save a bit of time\r\n    // as the hot path ends with doWrite\r\n    state.pendingcb++;\r\n    state.lastBufferedRequest = null;\r\n    if (holder.next) {\r\n      state.corkedRequestsFree = holder.next;\r\n      holder.next = null;\r\n    } else {\r\n      state.corkedRequestsFree = new CorkedRequest(state);\r\n    }\r\n    state.bufferedRequestCount = 0;\r\n  } else {\r\n    // Slow case, write chunks one-by-one\r\n    while (entry) {\r\n      var chunk = entry.chunk;\r\n      var encoding = entry.encoding;\r\n      var cb = entry.callback;\r\n      var len = state.objectMode ? 1 : chunk.length;\r\n\r\n      doWrite(stream, state, false, len, chunk, encoding, cb);\r\n      entry = entry.next;\r\n      state.bufferedRequestCount--;\r\n      // if we didn't call the onwrite immediately, then\r\n      // it means that we need to wait until it does.\r\n      // also, that means that the chunk and cb are currently\r\n      // being processed, so move the buffer counter past them.\r\n      if (state.writing) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (entry === null) state.lastBufferedRequest = null;\r\n  }\r\n\r\n  state.bufferedRequest = entry;\r\n  state.bufferProcessing = false;\r\n}\r\n\r\nWritable.prototype._write = function (chunk, encoding, cb) {\r\n  cb(new Error('_write() is not implemented'));\r\n};\r\n\r\nWritable.prototype._writev = null;\r\n\r\nWritable.prototype.end = function (chunk, encoding, cb) {\r\n  var state = this._writableState;\r\n\r\n  if (typeof chunk === 'function') {\r\n    cb = chunk;\r\n    chunk = null;\r\n    encoding = null;\r\n  } else if (typeof encoding === 'function') {\r\n    cb = encoding;\r\n    encoding = null;\r\n  }\r\n\r\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\r\n\r\n  // .end() fully uncorks\r\n  if (state.corked) {\r\n    state.corked = 1;\r\n    this.uncork();\r\n  }\r\n\r\n  // ignore unnecessary end() calls.\r\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\r\n};\r\n\r\nfunction needFinish(state) {\r\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\r\n}\r\nfunction callFinal(stream, state) {\r\n  stream._final(function (err) {\r\n    state.pendingcb--;\r\n    if (err) {\r\n      stream.emit('error', err);\r\n    }\r\n    state.prefinished = true;\r\n    stream.emit('prefinish');\r\n    finishMaybe(stream, state);\r\n  });\r\n}\r\nfunction prefinish(stream, state) {\r\n  if (!state.prefinished && !state.finalCalled) {\r\n    if (typeof stream._final === 'function') {\r\n      state.pendingcb++;\r\n      state.finalCalled = true;\r\n      pna.nextTick(callFinal, stream, state);\r\n    } else {\r\n      state.prefinished = true;\r\n      stream.emit('prefinish');\r\n    }\r\n  }\r\n}\r\n\r\nfunction finishMaybe(stream, state) {\r\n  var need = needFinish(state);\r\n  if (need) {\r\n    prefinish(stream, state);\r\n    if (state.pendingcb === 0) {\r\n      state.finished = true;\r\n      stream.emit('finish');\r\n    }\r\n  }\r\n  return need;\r\n}\r\n\r\nfunction endWritable(stream, state, cb) {\r\n  state.ending = true;\r\n  finishMaybe(stream, state);\r\n  if (cb) {\r\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\r\n  }\r\n  state.ended = true;\r\n  stream.writable = false;\r\n}\r\n\r\nfunction onCorkedFinish(corkReq, state, err) {\r\n  var entry = corkReq.entry;\r\n  corkReq.entry = null;\r\n  while (entry) {\r\n    var cb = entry.callback;\r\n    state.pendingcb--;\r\n    cb(err);\r\n    entry = entry.next;\r\n  }\r\n  if (state.corkedRequestsFree) {\r\n    state.corkedRequestsFree.next = corkReq;\r\n  } else {\r\n    state.corkedRequestsFree = corkReq;\r\n  }\r\n}\r\n\r\nObject.defineProperty(Writable.prototype, 'destroyed', {\r\n  get: function () {\r\n    if (this._writableState === undefined) {\r\n      return false;\r\n    }\r\n    return this._writableState.destroyed;\r\n  },\r\n  set: function (value) {\r\n    // we ignore the value if the stream\r\n    // has not been initialized yet\r\n    if (!this._writableState) {\r\n      return;\r\n    }\r\n\r\n    // backward compatibility, the user is explicitly\r\n    // managing destroyed\r\n    this._writableState.destroyed = value;\r\n  }\r\n});\r\n\r\nWritable.prototype.destroy = destroyImpl.destroy;\r\nWritable.prototype._undestroy = destroyImpl.undestroy;\r\nWritable.prototype._destroy = function (err, cb) {\r\n  this.end();\r\n  cb(err);\r\n};\r\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"timers\").setImmediate)\r\n\r\n},{\"./_stream_duplex\":98,\"./internal/streams/destroy\":104,\"./internal/streams/stream\":105,\"_process\":91,\"core-util-is\":42,\"inherits\":84,\"process-nextick-args\":90,\"safe-buffer\":110,\"timers\":114,\"util-deprecate\":115}],103:[function(require,module,exports){\r\n'use strict';\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nvar Buffer = require('safe-buffer').Buffer;\r\nvar util = require('util');\r\n\r\nfunction copyBuffer(src, target, offset) {\r\n  src.copy(target, offset);\r\n}\r\n\r\nmodule.exports = function () {\r\n  function BufferList() {\r\n    _classCallCheck(this, BufferList);\r\n\r\n    this.head = null;\r\n    this.tail = null;\r\n    this.length = 0;\r\n  }\r\n\r\n  BufferList.prototype.push = function push(v) {\r\n    var entry = { data: v, next: null };\r\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\r\n    this.tail = entry;\r\n    ++this.length;\r\n  };\r\n\r\n  BufferList.prototype.unshift = function unshift(v) {\r\n    var entry = { data: v, next: this.head };\r\n    if (this.length === 0) this.tail = entry;\r\n    this.head = entry;\r\n    ++this.length;\r\n  };\r\n\r\n  BufferList.prototype.shift = function shift() {\r\n    if (this.length === 0) return;\r\n    var ret = this.head.data;\r\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\r\n    --this.length;\r\n    return ret;\r\n  };\r\n\r\n  BufferList.prototype.clear = function clear() {\r\n    this.head = this.tail = null;\r\n    this.length = 0;\r\n  };\r\n\r\n  BufferList.prototype.join = function join(s) {\r\n    if (this.length === 0) return '';\r\n    var p = this.head;\r\n    var ret = '' + p.data;\r\n    while (p = p.next) {\r\n      ret += s + p.data;\r\n    }return ret;\r\n  };\r\n\r\n  BufferList.prototype.concat = function concat(n) {\r\n    if (this.length === 0) return Buffer.alloc(0);\r\n    if (this.length === 1) return this.head.data;\r\n    var ret = Buffer.allocUnsafe(n >>> 0);\r\n    var p = this.head;\r\n    var i = 0;\r\n    while (p) {\r\n      copyBuffer(p.data, ret, i);\r\n      i += p.data.length;\r\n      p = p.next;\r\n    }\r\n    return ret;\r\n  };\r\n\r\n  return BufferList;\r\n}();\r\n\r\nif (util && util.inspect && util.inspect.custom) {\r\n  module.exports.prototype[util.inspect.custom] = function () {\r\n    var obj = util.inspect({ length: this.length });\r\n    return this.constructor.name + ' ' + obj;\r\n  };\r\n}\r\n},{\"safe-buffer\":110,\"util\":40}],104:[function(require,module,exports){\r\n'use strict';\r\n\r\n/*<replacement>*/\r\n\r\nvar pna = require('process-nextick-args');\r\n/*</replacement>*/\r\n\r\n// undocumented cb() API, needed for core, not for public API\r\nfunction destroy(err, cb) {\r\n  var _this = this;\r\n\r\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\r\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\r\n\r\n  if (readableDestroyed || writableDestroyed) {\r\n    if (cb) {\r\n      cb(err);\r\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\r\n      pna.nextTick(emitErrorNT, this, err);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  // we set destroyed to true before firing error callbacks in order\r\n  // to make it re-entrance safe in case destroy() is called within callbacks\r\n\r\n  if (this._readableState) {\r\n    this._readableState.destroyed = true;\r\n  }\r\n\r\n  // if this is a duplex stream mark the writable part as destroyed as well\r\n  if (this._writableState) {\r\n    this._writableState.destroyed = true;\r\n  }\r\n\r\n  this._destroy(err || null, function (err) {\r\n    if (!cb && err) {\r\n      pna.nextTick(emitErrorNT, _this, err);\r\n      if (_this._writableState) {\r\n        _this._writableState.errorEmitted = true;\r\n      }\r\n    } else if (cb) {\r\n      cb(err);\r\n    }\r\n  });\r\n\r\n  return this;\r\n}\r\n\r\nfunction undestroy() {\r\n  if (this._readableState) {\r\n    this._readableState.destroyed = false;\r\n    this._readableState.reading = false;\r\n    this._readableState.ended = false;\r\n    this._readableState.endEmitted = false;\r\n  }\r\n\r\n  if (this._writableState) {\r\n    this._writableState.destroyed = false;\r\n    this._writableState.ended = false;\r\n    this._writableState.ending = false;\r\n    this._writableState.finished = false;\r\n    this._writableState.errorEmitted = false;\r\n  }\r\n}\r\n\r\nfunction emitErrorNT(self, err) {\r\n  self.emit('error', err);\r\n}\r\n\r\nmodule.exports = {\r\n  destroy: destroy,\r\n  undestroy: undestroy\r\n};\r\n},{\"process-nextick-args\":90}],105:[function(require,module,exports){\r\nmodule.exports = require('events').EventEmitter;\r\n\r\n},{\"events\":47}],106:[function(require,module,exports){\r\nmodule.exports = require('./readable').PassThrough\r\n\r\n},{\"./readable\":107}],107:[function(require,module,exports){\r\nexports = module.exports = require('./lib/_stream_readable.js');\r\nexports.Stream = exports;\r\nexports.Readable = exports;\r\nexports.Writable = require('./lib/_stream_writable.js');\r\nexports.Duplex = require('./lib/_stream_duplex.js');\r\nexports.Transform = require('./lib/_stream_transform.js');\r\nexports.PassThrough = require('./lib/_stream_passthrough.js');\r\n\r\n},{\"./lib/_stream_duplex.js\":98,\"./lib/_stream_passthrough.js\":99,\"./lib/_stream_readable.js\":100,\"./lib/_stream_transform.js\":101,\"./lib/_stream_writable.js\":102}],108:[function(require,module,exports){\r\nmodule.exports = require('./readable').Transform\r\n\r\n},{\"./readable\":107}],109:[function(require,module,exports){\r\nmodule.exports = require('./lib/_stream_writable.js');\r\n\r\n},{\"./lib/_stream_writable.js\":102}],110:[function(require,module,exports){\r\n/* eslint-disable node/no-deprecated-api */\r\nvar buffer = require('buffer')\r\nvar Buffer = buffer.Buffer\r\n\r\n// alternative to using Object.keys for old browsers\r\nfunction copyProps (src, dst) {\r\n  for (var key in src) {\r\n    dst[key] = src[key]\r\n  }\r\n}\r\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\r\n  module.exports = buffer\r\n} else {\r\n  // Copy properties from require('buffer')\r\n  copyProps(buffer, exports)\r\n  exports.Buffer = SafeBuffer\r\n}\r\n\r\nfunction SafeBuffer (arg, encodingOrOffset, length) {\r\n  return Buffer(arg, encodingOrOffset, length)\r\n}\r\n\r\n// Copy static methods from Buffer\r\ncopyProps(Buffer, SafeBuffer)\r\n\r\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\r\n  if (typeof arg === 'number') {\r\n    throw new TypeError('Argument must not be a number')\r\n  }\r\n  return Buffer(arg, encodingOrOffset, length)\r\n}\r\n\r\nSafeBuffer.alloc = function (size, fill, encoding) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('Argument must be a number')\r\n  }\r\n  var buf = Buffer(size)\r\n  if (fill !== undefined) {\r\n    if (typeof encoding === 'string') {\r\n      buf.fill(fill, encoding)\r\n    } else {\r\n      buf.fill(fill)\r\n    }\r\n  } else {\r\n    buf.fill(0)\r\n  }\r\n  return buf\r\n}\r\n\r\nSafeBuffer.allocUnsafe = function (size) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('Argument must be a number')\r\n  }\r\n  return Buffer(size)\r\n}\r\n\r\nSafeBuffer.allocUnsafeSlow = function (size) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('Argument must be a number')\r\n  }\r\n  return buffer.SlowBuffer(size)\r\n}\r\n\r\n},{\"buffer\":41}],111:[function(require,module,exports){\r\n(function (Buffer){\r\n;(function (sax) { // wrapper for non-node envs\r\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\r\n  sax.SAXParser = SAXParser\r\n  sax.SAXStream = SAXStream\r\n  sax.createStream = createStream\r\n\r\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\r\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\r\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\r\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\r\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\r\n  // large string into write() might have undesirable effects, but this is manageable by\r\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\r\n  // edge case, result in creating at most one complete copy of the string passed in.\r\n  // Set to Infinity to have unlimited buffers.\r\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\r\n\r\n  var buffers = [\r\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\r\n    'procInstName', 'procInstBody', 'entity', 'attribName',\r\n    'attribValue', 'cdata', 'script'\r\n  ]\r\n\r\n  sax.EVENTS = [\r\n    'text',\r\n    'processinginstruction',\r\n    'sgmldeclaration',\r\n    'doctype',\r\n    'comment',\r\n    'opentagstart',\r\n    'attribute',\r\n    'opentag',\r\n    'closetag',\r\n    'opencdata',\r\n    'cdata',\r\n    'closecdata',\r\n    'error',\r\n    'end',\r\n    'ready',\r\n    'script',\r\n    'opennamespace',\r\n    'closenamespace'\r\n  ]\r\n\r\n  function SAXParser (strict, opt) {\r\n    if (!(this instanceof SAXParser)) {\r\n      return new SAXParser(strict, opt)\r\n    }\r\n\r\n    var parser = this\r\n    clearBuffers(parser)\r\n    parser.q = parser.c = ''\r\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\r\n    parser.opt = opt || {}\r\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\r\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\r\n    parser.tags = []\r\n    parser.closed = parser.closedRoot = parser.sawRoot = false\r\n    parser.tag = parser.error = null\r\n    parser.strict = !!strict\r\n    parser.noscript = !!(strict || parser.opt.noscript)\r\n    parser.state = S.BEGIN\r\n    parser.strictEntities = parser.opt.strictEntities\r\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\r\n    parser.attribList = []\r\n\r\n    // namespaces form a prototype chain.\r\n    // it always points at the current tag,\r\n    // which protos to its parent tag.\r\n    if (parser.opt.xmlns) {\r\n      parser.ns = Object.create(rootNS)\r\n    }\r\n\r\n    // mostly just for error reporting\r\n    parser.trackPosition = parser.opt.position !== false\r\n    if (parser.trackPosition) {\r\n      parser.position = parser.line = parser.column = 0\r\n    }\r\n    emit(parser, 'onready')\r\n  }\r\n\r\n  if (!Object.create) {\r\n    Object.create = function (o) {\r\n      function F () {}\r\n      F.prototype = o\r\n      var newf = new F()\r\n      return newf\r\n    }\r\n  }\r\n\r\n  if (!Object.keys) {\r\n    Object.keys = function (o) {\r\n      var a = []\r\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\r\n      return a\r\n    }\r\n  }\r\n\r\n  function checkBufferLength (parser) {\r\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\r\n    var maxActual = 0\r\n    for (var i = 0, l = buffers.length; i < l; i++) {\r\n      var len = parser[buffers[i]].length\r\n      if (len > maxAllowed) {\r\n        // Text/cdata nodes can get big, and since they're buffered,\r\n        // we can get here under normal conditions.\r\n        // Avoid issues by emitting the text node now,\r\n        // so at least it won't get any bigger.\r\n        switch (buffers[i]) {\r\n          case 'textNode':\r\n            closeText(parser)\r\n            break\r\n\r\n          case 'cdata':\r\n            emitNode(parser, 'oncdata', parser.cdata)\r\n            parser.cdata = ''\r\n            break\r\n\r\n          case 'script':\r\n            emitNode(parser, 'onscript', parser.script)\r\n            parser.script = ''\r\n            break\r\n\r\n          default:\r\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\r\n        }\r\n      }\r\n      maxActual = Math.max(maxActual, len)\r\n    }\r\n    // schedule the next check for the earliest possible buffer overrun.\r\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\r\n    parser.bufferCheckPosition = m + parser.position\r\n  }\r\n\r\n  function clearBuffers (parser) {\r\n    for (var i = 0, l = buffers.length; i < l; i++) {\r\n      parser[buffers[i]] = ''\r\n    }\r\n  }\r\n\r\n  function flushBuffers (parser) {\r\n    closeText(parser)\r\n    if (parser.cdata !== '') {\r\n      emitNode(parser, 'oncdata', parser.cdata)\r\n      parser.cdata = ''\r\n    }\r\n    if (parser.script !== '') {\r\n      emitNode(parser, 'onscript', parser.script)\r\n      parser.script = ''\r\n    }\r\n  }\r\n\r\n  SAXParser.prototype = {\r\n    end: function () { end(this) },\r\n    write: write,\r\n    resume: function () { this.error = null; return this },\r\n    close: function () { return this.write(null) },\r\n    flush: function () { flushBuffers(this) }\r\n  }\r\n\r\n  var Stream\r\n  try {\r\n    Stream = require('stream').Stream\r\n  } catch (ex) {\r\n    Stream = function () {}\r\n  }\r\n\r\n  var streamWraps = sax.EVENTS.filter(function (ev) {\r\n    return ev !== 'error' && ev !== 'end'\r\n  })\r\n\r\n  function createStream (strict, opt) {\r\n    return new SAXStream(strict, opt)\r\n  }\r\n\r\n  function SAXStream (strict, opt) {\r\n    if (!(this instanceof SAXStream)) {\r\n      return new SAXStream(strict, opt)\r\n    }\r\n\r\n    Stream.apply(this)\r\n\r\n    this._parser = new SAXParser(strict, opt)\r\n    this.writable = true\r\n    this.readable = true\r\n\r\n    var me = this\r\n\r\n    this._parser.onend = function () {\r\n      me.emit('end')\r\n    }\r\n\r\n    this._parser.onerror = function (er) {\r\n      me.emit('error', er)\r\n\r\n      // if didn't throw, then means error was handled.\r\n      // go ahead and clear error, so we can write again.\r\n      me._parser.error = null\r\n    }\r\n\r\n    this._decoder = null\r\n\r\n    streamWraps.forEach(function (ev) {\r\n      Object.defineProperty(me, 'on' + ev, {\r\n        get: function () {\r\n          return me._parser['on' + ev]\r\n        },\r\n        set: function (h) {\r\n          if (!h) {\r\n            me.removeAllListeners(ev)\r\n            me._parser['on' + ev] = h\r\n            return h\r\n          }\r\n          me.on(ev, h)\r\n        },\r\n        enumerable: true,\r\n        configurable: false\r\n      })\r\n    })\r\n  }\r\n\r\n  SAXStream.prototype = Object.create(Stream.prototype, {\r\n    constructor: {\r\n      value: SAXStream\r\n    }\r\n  })\r\n\r\n  SAXStream.prototype.write = function (data) {\r\n    if (typeof Buffer === 'function' &&\r\n      typeof Buffer.isBuffer === 'function' &&\r\n      Buffer.isBuffer(data)) {\r\n      if (!this._decoder) {\r\n        var SD = require('string_decoder').StringDecoder\r\n        this._decoder = new SD('utf8')\r\n      }\r\n      data = this._decoder.write(data)\r\n    }\r\n\r\n    this._parser.write(data.toString())\r\n    this.emit('data', data)\r\n    return true\r\n  }\r\n\r\n  SAXStream.prototype.end = function (chunk) {\r\n    if (chunk && chunk.length) {\r\n      this.write(chunk)\r\n    }\r\n    this._parser.end()\r\n    return true\r\n  }\r\n\r\n  SAXStream.prototype.on = function (ev, handler) {\r\n    var me = this\r\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\r\n      me._parser['on' + ev] = function () {\r\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\r\n        args.splice(0, 0, ev)\r\n        me.emit.apply(me, args)\r\n      }\r\n    }\r\n\r\n    return Stream.prototype.on.call(me, ev, handler)\r\n  }\r\n\r\n  // this really needs to be replaced with character classes.\r\n  // XML allows all manner of ridiculous numbers and digits.\r\n  var CDATA = '[CDATA['\r\n  var DOCTYPE = 'DOCTYPE'\r\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\r\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\r\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\r\n\r\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\r\n  // This implementation works on strings, a single character at a time\r\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\r\n  // without a significant breaking change to either this  parser, or the\r\n  // JavaScript language.  Implementation of an emoji-capable xml parser\r\n  // is left as an exercise for the reader.\r\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\r\n\r\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\r\n\r\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\r\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\r\n\r\n  function isWhitespace (c) {\r\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\r\n  }\r\n\r\n  function isQuote (c) {\r\n    return c === '\"' || c === '\\''\r\n  }\r\n\r\n  function isAttribEnd (c) {\r\n    return c === '>' || isWhitespace(c)\r\n  }\r\n\r\n  function isMatch (regex, c) {\r\n    return regex.test(c)\r\n  }\r\n\r\n  function notMatch (regex, c) {\r\n    return !isMatch(regex, c)\r\n  }\r\n\r\n  var S = 0\r\n  sax.STATE = {\r\n    BEGIN: S++, // leading byte order mark or whitespace\r\n    BEGIN_WHITESPACE: S++, // leading whitespace\r\n    TEXT: S++, // general stuff\r\n    TEXT_ENTITY: S++, // &amp and such.\r\n    OPEN_WAKA: S++, // <\r\n    SGML_DECL: S++, // <!BLARG\r\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\r\n    DOCTYPE: S++, // <!DOCTYPE\r\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\r\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\r\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\r\n    COMMENT_STARTING: S++, // <!-\r\n    COMMENT: S++, // <!--\r\n    COMMENT_ENDING: S++, // <!-- blah -\r\n    COMMENT_ENDED: S++, // <!-- blah --\r\n    CDATA: S++, // <![CDATA[ something\r\n    CDATA_ENDING: S++, // ]\r\n    CDATA_ENDING_2: S++, // ]]\r\n    PROC_INST: S++, // <?hi\r\n    PROC_INST_BODY: S++, // <?hi there\r\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\r\n    OPEN_TAG: S++, // <strong\r\n    OPEN_TAG_SLASH: S++, // <strong /\r\n    ATTRIB: S++, // <a\r\n    ATTRIB_NAME: S++, // <a foo\r\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\r\n    ATTRIB_VALUE: S++, // <a foo=\r\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\r\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\r\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\r\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\r\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\r\n    CLOSE_TAG: S++, // </a\r\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\r\n    SCRIPT: S++, // <script> ...\r\n    SCRIPT_ENDING: S++ // <script> ... <\r\n  }\r\n\r\n  sax.XML_ENTITIES = {\r\n    'amp': '&',\r\n    'gt': '>',\r\n    'lt': '<',\r\n    'quot': '\"',\r\n    'apos': \"'\"\r\n  }\r\n\r\n  sax.ENTITIES = {\r\n    'amp': '&',\r\n    'gt': '>',\r\n    'lt': '<',\r\n    'quot': '\"',\r\n    'apos': \"'\",\r\n    'AElig': 198,\r\n    'Aacute': 193,\r\n    'Acirc': 194,\r\n    'Agrave': 192,\r\n    'Aring': 197,\r\n    'Atilde': 195,\r\n    'Auml': 196,\r\n    'Ccedil': 199,\r\n    'ETH': 208,\r\n    'Eacute': 201,\r\n    'Ecirc': 202,\r\n    'Egrave': 200,\r\n    'Euml': 203,\r\n    'Iacute': 205,\r\n    'Icirc': 206,\r\n    'Igrave': 204,\r\n    'Iuml': 207,\r\n    'Ntilde': 209,\r\n    'Oacute': 211,\r\n    'Ocirc': 212,\r\n    'Ograve': 210,\r\n    'Oslash': 216,\r\n    'Otilde': 213,\r\n    'Ouml': 214,\r\n    'THORN': 222,\r\n    'Uacute': 218,\r\n    'Ucirc': 219,\r\n    'Ugrave': 217,\r\n    'Uuml': 220,\r\n    'Yacute': 221,\r\n    'aacute': 225,\r\n    'acirc': 226,\r\n    'aelig': 230,\r\n    'agrave': 224,\r\n    'aring': 229,\r\n    'atilde': 227,\r\n    'auml': 228,\r\n    'ccedil': 231,\r\n    'eacute': 233,\r\n    'ecirc': 234,\r\n    'egrave': 232,\r\n    'eth': 240,\r\n    'euml': 235,\r\n    'iacute': 237,\r\n    'icirc': 238,\r\n    'igrave': 236,\r\n    'iuml': 239,\r\n    'ntilde': 241,\r\n    'oacute': 243,\r\n    'ocirc': 244,\r\n    'ograve': 242,\r\n    'oslash': 248,\r\n    'otilde': 245,\r\n    'ouml': 246,\r\n    'szlig': 223,\r\n    'thorn': 254,\r\n    'uacute': 250,\r\n    'ucirc': 251,\r\n    'ugrave': 249,\r\n    'uuml': 252,\r\n    'yacute': 253,\r\n    'yuml': 255,\r\n    'copy': 169,\r\n    'reg': 174,\r\n    'nbsp': 160,\r\n    'iexcl': 161,\r\n    'cent': 162,\r\n    'pound': 163,\r\n    'curren': 164,\r\n    'yen': 165,\r\n    'brvbar': 166,\r\n    'sect': 167,\r\n    'uml': 168,\r\n    'ordf': 170,\r\n    'laquo': 171,\r\n    'not': 172,\r\n    'shy': 173,\r\n    'macr': 175,\r\n    'deg': 176,\r\n    'plusmn': 177,\r\n    'sup1': 185,\r\n    'sup2': 178,\r\n    'sup3': 179,\r\n    'acute': 180,\r\n    'micro': 181,\r\n    'para': 182,\r\n    'middot': 183,\r\n    'cedil': 184,\r\n    'ordm': 186,\r\n    'raquo': 187,\r\n    'frac14': 188,\r\n    'frac12': 189,\r\n    'frac34': 190,\r\n    'iquest': 191,\r\n    'times': 215,\r\n    'divide': 247,\r\n    'OElig': 338,\r\n    'oelig': 339,\r\n    'Scaron': 352,\r\n    'scaron': 353,\r\n    'Yuml': 376,\r\n    'fnof': 402,\r\n    'circ': 710,\r\n    'tilde': 732,\r\n    'Alpha': 913,\r\n    'Beta': 914,\r\n    'Gamma': 915,\r\n    'Delta': 916,\r\n    'Epsilon': 917,\r\n    'Zeta': 918,\r\n    'Eta': 919,\r\n    'Theta': 920,\r\n    'Iota': 921,\r\n    'Kappa': 922,\r\n    'Lambda': 923,\r\n    'Mu': 924,\r\n    'Nu': 925,\r\n    'Xi': 926,\r\n    'Omicron': 927,\r\n    'Pi': 928,\r\n    'Rho': 929,\r\n    'Sigma': 931,\r\n    'Tau': 932,\r\n    'Upsilon': 933,\r\n    'Phi': 934,\r\n    'Chi': 935,\r\n    'Psi': 936,\r\n    'Omega': 937,\r\n    'alpha': 945,\r\n    'beta': 946,\r\n    'gamma': 947,\r\n    'delta': 948,\r\n    'epsilon': 949,\r\n    'zeta': 950,\r\n    'eta': 951,\r\n    'theta': 952,\r\n    'iota': 953,\r\n    'kappa': 954,\r\n    'lambda': 955,\r\n    'mu': 956,\r\n    'nu': 957,\r\n    'xi': 958,\r\n    'omicron': 959,\r\n    'pi': 960,\r\n    'rho': 961,\r\n    'sigmaf': 962,\r\n    'sigma': 963,\r\n    'tau': 964,\r\n    'upsilon': 965,\r\n    'phi': 966,\r\n    'chi': 967,\r\n    'psi': 968,\r\n    'omega': 969,\r\n    'thetasym': 977,\r\n    'upsih': 978,\r\n    'piv': 982,\r\n    'ensp': 8194,\r\n    'emsp': 8195,\r\n    'thinsp': 8201,\r\n    'zwnj': 8204,\r\n    'zwj': 8205,\r\n    'lrm': 8206,\r\n    'rlm': 8207,\r\n    'ndash': 8211,\r\n    'mdash': 8212,\r\n    'lsquo': 8216,\r\n    'rsquo': 8217,\r\n    'sbquo': 8218,\r\n    'ldquo': 8220,\r\n    'rdquo': 8221,\r\n    'bdquo': 8222,\r\n    'dagger': 8224,\r\n    'Dagger': 8225,\r\n    'bull': 8226,\r\n    'hellip': 8230,\r\n    'permil': 8240,\r\n    'prime': 8242,\r\n    'Prime': 8243,\r\n    'lsaquo': 8249,\r\n    'rsaquo': 8250,\r\n    'oline': 8254,\r\n    'frasl': 8260,\r\n    'euro': 8364,\r\n    'image': 8465,\r\n    'weierp': 8472,\r\n    'real': 8476,\r\n    'trade': 8482,\r\n    'alefsym': 8501,\r\n    'larr': 8592,\r\n    'uarr': 8593,\r\n    'rarr': 8594,\r\n    'darr': 8595,\r\n    'harr': 8596,\r\n    'crarr': 8629,\r\n    'lArr': 8656,\r\n    'uArr': 8657,\r\n    'rArr': 8658,\r\n    'dArr': 8659,\r\n    'hArr': 8660,\r\n    'forall': 8704,\r\n    'part': 8706,\r\n    'exist': 8707,\r\n    'empty': 8709,\r\n    'nabla': 8711,\r\n    'isin': 8712,\r\n    'notin': 8713,\r\n    'ni': 8715,\r\n    'prod': 8719,\r\n    'sum': 8721,\r\n    'minus': 8722,\r\n    'lowast': 8727,\r\n    'radic': 8730,\r\n    'prop': 8733,\r\n    'infin': 8734,\r\n    'ang': 8736,\r\n    'and': 8743,\r\n    'or': 8744,\r\n    'cap': 8745,\r\n    'cup': 8746,\r\n    'int': 8747,\r\n    'there4': 8756,\r\n    'sim': 8764,\r\n    'cong': 8773,\r\n    'asymp': 8776,\r\n    'ne': 8800,\r\n    'equiv': 8801,\r\n    'le': 8804,\r\n    'ge': 8805,\r\n    'sub': 8834,\r\n    'sup': 8835,\r\n    'nsub': 8836,\r\n    'sube': 8838,\r\n    'supe': 8839,\r\n    'oplus': 8853,\r\n    'otimes': 8855,\r\n    'perp': 8869,\r\n    'sdot': 8901,\r\n    'lceil': 8968,\r\n    'rceil': 8969,\r\n    'lfloor': 8970,\r\n    'rfloor': 8971,\r\n    'lang': 9001,\r\n    'rang': 9002,\r\n    'loz': 9674,\r\n    'spades': 9824,\r\n    'clubs': 9827,\r\n    'hearts': 9829,\r\n    'diams': 9830\r\n  }\r\n\r\n  Object.keys(sax.ENTITIES).forEach(function (key) {\r\n    var e = sax.ENTITIES[key]\r\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\r\n    sax.ENTITIES[key] = s\r\n  })\r\n\r\n  for (var s in sax.STATE) {\r\n    sax.STATE[sax.STATE[s]] = s\r\n  }\r\n\r\n  // shorthand\r\n  S = sax.STATE\r\n\r\n  function emit (parser, event, data) {\r\n    parser[event] && parser[event](data)\r\n  }\r\n\r\n  function emitNode (parser, nodeType, data) {\r\n    if (parser.textNode) closeText(parser)\r\n    emit(parser, nodeType, data)\r\n  }\r\n\r\n  function closeText (parser) {\r\n    parser.textNode = textopts(parser.opt, parser.textNode)\r\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\r\n    parser.textNode = ''\r\n  }\r\n\r\n  function textopts (opt, text) {\r\n    if (opt.trim) text = text.trim()\r\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\r\n    return text\r\n  }\r\n\r\n  function error (parser, er) {\r\n    closeText(parser)\r\n    if (parser.trackPosition) {\r\n      er += '\\nLine: ' + parser.line +\r\n        '\\nColumn: ' + parser.column +\r\n        '\\nChar: ' + parser.c\r\n    }\r\n    er = new Error(er)\r\n    parser.error = er\r\n    emit(parser, 'onerror', er)\r\n    return parser\r\n  }\r\n\r\n  function end (parser) {\r\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\r\n    if ((parser.state !== S.BEGIN) &&\r\n      (parser.state !== S.BEGIN_WHITESPACE) &&\r\n      (parser.state !== S.TEXT)) {\r\n      error(parser, 'Unexpected end')\r\n    }\r\n    closeText(parser)\r\n    parser.c = ''\r\n    parser.closed = true\r\n    emit(parser, 'onend')\r\n    SAXParser.call(parser, parser.strict, parser.opt)\r\n    return parser\r\n  }\r\n\r\n  function strictFail (parser, message) {\r\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\r\n      throw new Error('bad call to strictFail')\r\n    }\r\n    if (parser.strict) {\r\n      error(parser, message)\r\n    }\r\n  }\r\n\r\n  function newTag (parser) {\r\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\r\n    var parent = parser.tags[parser.tags.length - 1] || parser\r\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\r\n\r\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\r\n    if (parser.opt.xmlns) {\r\n      tag.ns = parent.ns\r\n    }\r\n    parser.attribList.length = 0\r\n    emitNode(parser, 'onopentagstart', tag)\r\n  }\r\n\r\n  function qname (name, attribute) {\r\n    var i = name.indexOf(':')\r\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\r\n    var prefix = qualName[0]\r\n    var local = qualName[1]\r\n\r\n    // <x \"xmlns\"=\"http://foo\">\r\n    if (attribute && name === 'xmlns') {\r\n      prefix = 'xmlns'\r\n      local = ''\r\n    }\r\n\r\n    return { prefix: prefix, local: local }\r\n  }\r\n\r\n  function attrib (parser) {\r\n    if (!parser.strict) {\r\n      parser.attribName = parser.attribName[parser.looseCase]()\r\n    }\r\n\r\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\r\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\r\n      parser.attribName = parser.attribValue = ''\r\n      return\r\n    }\r\n\r\n    if (parser.opt.xmlns) {\r\n      var qn = qname(parser.attribName, true)\r\n      var prefix = qn.prefix\r\n      var local = qn.local\r\n\r\n      if (prefix === 'xmlns') {\r\n        // namespace binding attribute. push the binding into scope\r\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\r\n          strictFail(parser,\r\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\r\n            'Actual: ' + parser.attribValue)\r\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\r\n          strictFail(parser,\r\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\r\n            'Actual: ' + parser.attribValue)\r\n        } else {\r\n          var tag = parser.tag\r\n          var parent = parser.tags[parser.tags.length - 1] || parser\r\n          if (tag.ns === parent.ns) {\r\n            tag.ns = Object.create(parent.ns)\r\n          }\r\n          tag.ns[local] = parser.attribValue\r\n        }\r\n      }\r\n\r\n      // defer onattribute events until all attributes have been seen\r\n      // so any new bindings can take effect. preserve attribute order\r\n      // so deferred events can be emitted in document order\r\n      parser.attribList.push([parser.attribName, parser.attribValue])\r\n    } else {\r\n      // in non-xmlns mode, we can emit the event right away\r\n      parser.tag.attributes[parser.attribName] = parser.attribValue\r\n      emitNode(parser, 'onattribute', {\r\n        name: parser.attribName,\r\n        value: parser.attribValue\r\n      })\r\n    }\r\n\r\n    parser.attribName = parser.attribValue = ''\r\n  }\r\n\r\n  function openTag (parser, selfClosing) {\r\n    if (parser.opt.xmlns) {\r\n      // emit namespace binding events\r\n      var tag = parser.tag\r\n\r\n      // add namespace info to tag\r\n      var qn = qname(parser.tagName)\r\n      tag.prefix = qn.prefix\r\n      tag.local = qn.local\r\n      tag.uri = tag.ns[qn.prefix] || ''\r\n\r\n      if (tag.prefix && !tag.uri) {\r\n        strictFail(parser, 'Unbound namespace prefix: ' +\r\n          JSON.stringify(parser.tagName))\r\n        tag.uri = qn.prefix\r\n      }\r\n\r\n      var parent = parser.tags[parser.tags.length - 1] || parser\r\n      if (tag.ns && parent.ns !== tag.ns) {\r\n        Object.keys(tag.ns).forEach(function (p) {\r\n          emitNode(parser, 'onopennamespace', {\r\n            prefix: p,\r\n            uri: tag.ns[p]\r\n          })\r\n        })\r\n      }\r\n\r\n      // handle deferred onattribute events\r\n      // Note: do not apply default ns to attributes:\r\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\r\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\r\n        var nv = parser.attribList[i]\r\n        var name = nv[0]\r\n        var value = nv[1]\r\n        var qualName = qname(name, true)\r\n        var prefix = qualName.prefix\r\n        var local = qualName.local\r\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\r\n        var a = {\r\n          name: name,\r\n          value: value,\r\n          prefix: prefix,\r\n          local: local,\r\n          uri: uri\r\n        }\r\n\r\n        // if there's any attributes with an undefined namespace,\r\n        // then fail on them now.\r\n        if (prefix && prefix !== 'xmlns' && !uri) {\r\n          strictFail(parser, 'Unbound namespace prefix: ' +\r\n            JSON.stringify(prefix))\r\n          a.uri = prefix\r\n        }\r\n        parser.tag.attributes[name] = a\r\n        emitNode(parser, 'onattribute', a)\r\n      }\r\n      parser.attribList.length = 0\r\n    }\r\n\r\n    parser.tag.isSelfClosing = !!selfClosing\r\n\r\n    // process the tag\r\n    parser.sawRoot = true\r\n    parser.tags.push(parser.tag)\r\n    emitNode(parser, 'onopentag', parser.tag)\r\n    if (!selfClosing) {\r\n      // special case for <script> in non-strict mode.\r\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\r\n        parser.state = S.SCRIPT\r\n      } else {\r\n        parser.state = S.TEXT\r\n      }\r\n      parser.tag = null\r\n      parser.tagName = ''\r\n    }\r\n    parser.attribName = parser.attribValue = ''\r\n    parser.attribList.length = 0\r\n  }\r\n\r\n  function closeTag (parser) {\r\n    if (!parser.tagName) {\r\n      strictFail(parser, 'Weird empty close tag.')\r\n      parser.textNode += '</>'\r\n      parser.state = S.TEXT\r\n      return\r\n    }\r\n\r\n    if (parser.script) {\r\n      if (parser.tagName !== 'script') {\r\n        parser.script += '</' + parser.tagName + '>'\r\n        parser.tagName = ''\r\n        parser.state = S.SCRIPT\r\n        return\r\n      }\r\n      emitNode(parser, 'onscript', parser.script)\r\n      parser.script = ''\r\n    }\r\n\r\n    // first make sure that the closing tag actually exists.\r\n    // <a><b></c></b></a> will close everything, otherwise.\r\n    var t = parser.tags.length\r\n    var tagName = parser.tagName\r\n    if (!parser.strict) {\r\n      tagName = tagName[parser.looseCase]()\r\n    }\r\n    var closeTo = tagName\r\n    while (t--) {\r\n      var close = parser.tags[t]\r\n      if (close.name !== closeTo) {\r\n        // fail the first time in strict mode\r\n        strictFail(parser, 'Unexpected close tag')\r\n      } else {\r\n        break\r\n      }\r\n    }\r\n\r\n    // didn't find it.  we already failed for strict, so just abort.\r\n    if (t < 0) {\r\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\r\n      parser.textNode += '</' + parser.tagName + '>'\r\n      parser.state = S.TEXT\r\n      return\r\n    }\r\n    parser.tagName = tagName\r\n    var s = parser.tags.length\r\n    while (s-- > t) {\r\n      var tag = parser.tag = parser.tags.pop()\r\n      parser.tagName = parser.tag.name\r\n      emitNode(parser, 'onclosetag', parser.tagName)\r\n\r\n      var x = {}\r\n      for (var i in tag.ns) {\r\n        x[i] = tag.ns[i]\r\n      }\r\n\r\n      var parent = parser.tags[parser.tags.length - 1] || parser\r\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\r\n        // remove namespace bindings introduced by tag\r\n        Object.keys(tag.ns).forEach(function (p) {\r\n          var n = tag.ns[p]\r\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\r\n        })\r\n      }\r\n    }\r\n    if (t === 0) parser.closedRoot = true\r\n    parser.tagName = parser.attribValue = parser.attribName = ''\r\n    parser.attribList.length = 0\r\n    parser.state = S.TEXT\r\n  }\r\n\r\n  function parseEntity (parser) {\r\n    var entity = parser.entity\r\n    var entityLC = entity.toLowerCase()\r\n    var num\r\n    var numStr = ''\r\n\r\n    if (parser.ENTITIES[entity]) {\r\n      return parser.ENTITIES[entity]\r\n    }\r\n    if (parser.ENTITIES[entityLC]) {\r\n      return parser.ENTITIES[entityLC]\r\n    }\r\n    entity = entityLC\r\n    if (entity.charAt(0) === '#') {\r\n      if (entity.charAt(1) === 'x') {\r\n        entity = entity.slice(2)\r\n        num = parseInt(entity, 16)\r\n        numStr = num.toString(16)\r\n      } else {\r\n        entity = entity.slice(1)\r\n        num = parseInt(entity, 10)\r\n        numStr = num.toString(10)\r\n      }\r\n    }\r\n    entity = entity.replace(/^0+/, '')\r\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\r\n      strictFail(parser, 'Invalid character entity')\r\n      return '&' + parser.entity + ';'\r\n    }\r\n\r\n    return String.fromCodePoint(num)\r\n  }\r\n\r\n  function beginWhiteSpace (parser, c) {\r\n    if (c === '<') {\r\n      parser.state = S.OPEN_WAKA\r\n      parser.startTagPosition = parser.position\r\n    } else if (!isWhitespace(c)) {\r\n      // have to process this as a text node.\r\n      // weird, but happens.\r\n      strictFail(parser, 'Non-whitespace before first tag.')\r\n      parser.textNode = c\r\n      parser.state = S.TEXT\r\n    }\r\n  }\r\n\r\n  function charAt (chunk, i) {\r\n    var result = ''\r\n    if (i < chunk.length) {\r\n      result = chunk.charAt(i)\r\n    }\r\n    return result\r\n  }\r\n\r\n  function write (chunk) {\r\n    var parser = this\r\n    if (this.error) {\r\n      throw this.error\r\n    }\r\n    if (parser.closed) {\r\n      return error(parser,\r\n        'Cannot write after close. Assign an onready handler.')\r\n    }\r\n    if (chunk === null) {\r\n      return end(parser)\r\n    }\r\n    if (typeof chunk === 'object') {\r\n      chunk = chunk.toString()\r\n    }\r\n    var i = 0\r\n    var c = ''\r\n    while (true) {\r\n      c = charAt(chunk, i++)\r\n      parser.c = c\r\n\r\n      if (!c) {\r\n        break\r\n      }\r\n\r\n      if (parser.trackPosition) {\r\n        parser.position++\r\n        if (c === '\\n') {\r\n          parser.line++\r\n          parser.column = 0\r\n        } else {\r\n          parser.column++\r\n        }\r\n      }\r\n\r\n      switch (parser.state) {\r\n        case S.BEGIN:\r\n          parser.state = S.BEGIN_WHITESPACE\r\n          if (c === '\\uFEFF') {\r\n            continue\r\n          }\r\n          beginWhiteSpace(parser, c)\r\n          continue\r\n\r\n        case S.BEGIN_WHITESPACE:\r\n          beginWhiteSpace(parser, c)\r\n          continue\r\n\r\n        case S.TEXT:\r\n          if (parser.sawRoot && !parser.closedRoot) {\r\n            var starti = i - 1\r\n            while (c && c !== '<' && c !== '&') {\r\n              c = charAt(chunk, i++)\r\n              if (c && parser.trackPosition) {\r\n                parser.position++\r\n                if (c === '\\n') {\r\n                  parser.line++\r\n                  parser.column = 0\r\n                } else {\r\n                  parser.column++\r\n                }\r\n              }\r\n            }\r\n            parser.textNode += chunk.substring(starti, i - 1)\r\n          }\r\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\r\n            parser.state = S.OPEN_WAKA\r\n            parser.startTagPosition = parser.position\r\n          } else {\r\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\r\n              strictFail(parser, 'Text data outside of root node.')\r\n            }\r\n            if (c === '&') {\r\n              parser.state = S.TEXT_ENTITY\r\n            } else {\r\n              parser.textNode += c\r\n            }\r\n          }\r\n          continue\r\n\r\n        case S.SCRIPT:\r\n          // only non-strict\r\n          if (c === '<') {\r\n            parser.state = S.SCRIPT_ENDING\r\n          } else {\r\n            parser.script += c\r\n          }\r\n          continue\r\n\r\n        case S.SCRIPT_ENDING:\r\n          if (c === '/') {\r\n            parser.state = S.CLOSE_TAG\r\n          } else {\r\n            parser.script += '<' + c\r\n            parser.state = S.SCRIPT\r\n          }\r\n          continue\r\n\r\n        case S.OPEN_WAKA:\r\n          // either a /, ?, !, or text is coming next.\r\n          if (c === '!') {\r\n            parser.state = S.SGML_DECL\r\n            parser.sgmlDecl = ''\r\n          } else if (isWhitespace(c)) {\r\n            // wait for it...\r\n          } else if (isMatch(nameStart, c)) {\r\n            parser.state = S.OPEN_TAG\r\n            parser.tagName = c\r\n          } else if (c === '/') {\r\n            parser.state = S.CLOSE_TAG\r\n            parser.tagName = ''\r\n          } else if (c === '?') {\r\n            parser.state = S.PROC_INST\r\n            parser.procInstName = parser.procInstBody = ''\r\n          } else {\r\n            strictFail(parser, 'Unencoded <')\r\n            // if there was some whitespace, then add that in.\r\n            if (parser.startTagPosition + 1 < parser.position) {\r\n              var pad = parser.position - parser.startTagPosition\r\n              c = new Array(pad).join(' ') + c\r\n            }\r\n            parser.textNode += '<' + c\r\n            parser.state = S.TEXT\r\n          }\r\n          continue\r\n\r\n        case S.SGML_DECL:\r\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\r\n            emitNode(parser, 'onopencdata')\r\n            parser.state = S.CDATA\r\n            parser.sgmlDecl = ''\r\n            parser.cdata = ''\r\n          } else if (parser.sgmlDecl + c === '--') {\r\n            parser.state = S.COMMENT\r\n            parser.comment = ''\r\n            parser.sgmlDecl = ''\r\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\r\n            parser.state = S.DOCTYPE\r\n            if (parser.doctype || parser.sawRoot) {\r\n              strictFail(parser,\r\n                'Inappropriately located doctype declaration')\r\n            }\r\n            parser.doctype = ''\r\n            parser.sgmlDecl = ''\r\n          } else if (c === '>') {\r\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\r\n            parser.sgmlDecl = ''\r\n            parser.state = S.TEXT\r\n          } else if (isQuote(c)) {\r\n            parser.state = S.SGML_DECL_QUOTED\r\n            parser.sgmlDecl += c\r\n          } else {\r\n            parser.sgmlDecl += c\r\n          }\r\n          continue\r\n\r\n        case S.SGML_DECL_QUOTED:\r\n          if (c === parser.q) {\r\n            parser.state = S.SGML_DECL\r\n            parser.q = ''\r\n          }\r\n          parser.sgmlDecl += c\r\n          continue\r\n\r\n        case S.DOCTYPE:\r\n          if (c === '>') {\r\n            parser.state = S.TEXT\r\n            emitNode(parser, 'ondoctype', parser.doctype)\r\n            parser.doctype = true // just remember that we saw it.\r\n          } else {\r\n            parser.doctype += c\r\n            if (c === '[') {\r\n              parser.state = S.DOCTYPE_DTD\r\n            } else if (isQuote(c)) {\r\n              parser.state = S.DOCTYPE_QUOTED\r\n              parser.q = c\r\n            }\r\n          }\r\n          continue\r\n\r\n        case S.DOCTYPE_QUOTED:\r\n          parser.doctype += c\r\n          if (c === parser.q) {\r\n            parser.q = ''\r\n            parser.state = S.DOCTYPE\r\n          }\r\n          continue\r\n\r\n        case S.DOCTYPE_DTD:\r\n          parser.doctype += c\r\n          if (c === ']') {\r\n            parser.state = S.DOCTYPE\r\n          } else if (isQuote(c)) {\r\n            parser.state = S.DOCTYPE_DTD_QUOTED\r\n            parser.q = c\r\n          }\r\n          continue\r\n\r\n        case S.DOCTYPE_DTD_QUOTED:\r\n          parser.doctype += c\r\n          if (c === parser.q) {\r\n            parser.state = S.DOCTYPE_DTD\r\n            parser.q = ''\r\n          }\r\n          continue\r\n\r\n        case S.COMMENT:\r\n          if (c === '-') {\r\n            parser.state = S.COMMENT_ENDING\r\n          } else {\r\n            parser.comment += c\r\n          }\r\n          continue\r\n\r\n        case S.COMMENT_ENDING:\r\n          if (c === '-') {\r\n            parser.state = S.COMMENT_ENDED\r\n            parser.comment = textopts(parser.opt, parser.comment)\r\n            if (parser.comment) {\r\n              emitNode(parser, 'oncomment', parser.comment)\r\n            }\r\n            parser.comment = ''\r\n          } else {\r\n            parser.comment += '-' + c\r\n            parser.state = S.COMMENT\r\n          }\r\n          continue\r\n\r\n        case S.COMMENT_ENDED:\r\n          if (c !== '>') {\r\n            strictFail(parser, 'Malformed comment')\r\n            // allow <!-- blah -- bloo --> in non-strict mode,\r\n            // which is a comment of \" blah -- bloo \"\r\n            parser.comment += '--' + c\r\n            parser.state = S.COMMENT\r\n          } else {\r\n            parser.state = S.TEXT\r\n          }\r\n          continue\r\n\r\n        case S.CDATA:\r\n          if (c === ']') {\r\n            parser.state = S.CDATA_ENDING\r\n          } else {\r\n            parser.cdata += c\r\n          }\r\n          continue\r\n\r\n        case S.CDATA_ENDING:\r\n          if (c === ']') {\r\n            parser.state = S.CDATA_ENDING_2\r\n          } else {\r\n            parser.cdata += ']' + c\r\n            parser.state = S.CDATA\r\n          }\r\n          continue\r\n\r\n        case S.CDATA_ENDING_2:\r\n          if (c === '>') {\r\n            if (parser.cdata) {\r\n              emitNode(parser, 'oncdata', parser.cdata)\r\n            }\r\n            emitNode(parser, 'onclosecdata')\r\n            parser.cdata = ''\r\n            parser.state = S.TEXT\r\n          } else if (c === ']') {\r\n            parser.cdata += ']'\r\n          } else {\r\n            parser.cdata += ']]' + c\r\n            parser.state = S.CDATA\r\n          }\r\n          continue\r\n\r\n        case S.PROC_INST:\r\n          if (c === '?') {\r\n            parser.state = S.PROC_INST_ENDING\r\n          } else if (isWhitespace(c)) {\r\n            parser.state = S.PROC_INST_BODY\r\n          } else {\r\n            parser.procInstName += c\r\n          }\r\n          continue\r\n\r\n        case S.PROC_INST_BODY:\r\n          if (!parser.procInstBody && isWhitespace(c)) {\r\n            continue\r\n          } else if (c === '?') {\r\n            parser.state = S.PROC_INST_ENDING\r\n          } else {\r\n            parser.procInstBody += c\r\n          }\r\n          continue\r\n\r\n        case S.PROC_INST_ENDING:\r\n          if (c === '>') {\r\n            emitNode(parser, 'onprocessinginstruction', {\r\n              name: parser.procInstName,\r\n              body: parser.procInstBody\r\n            })\r\n            parser.procInstName = parser.procInstBody = ''\r\n            parser.state = S.TEXT\r\n          } else {\r\n            parser.procInstBody += '?' + c\r\n            parser.state = S.PROC_INST_BODY\r\n          }\r\n          continue\r\n\r\n        case S.OPEN_TAG:\r\n          if (isMatch(nameBody, c)) {\r\n            parser.tagName += c\r\n          } else {\r\n            newTag(parser)\r\n            if (c === '>') {\r\n              openTag(parser)\r\n            } else if (c === '/') {\r\n              parser.state = S.OPEN_TAG_SLASH\r\n            } else {\r\n              if (!isWhitespace(c)) {\r\n                strictFail(parser, 'Invalid character in tag name')\r\n              }\r\n              parser.state = S.ATTRIB\r\n            }\r\n          }\r\n          continue\r\n\r\n        case S.OPEN_TAG_SLASH:\r\n          if (c === '>') {\r\n            openTag(parser, true)\r\n            closeTag(parser)\r\n          } else {\r\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\r\n            parser.state = S.ATTRIB\r\n          }\r\n          continue\r\n\r\n        case S.ATTRIB:\r\n          // haven't read the attribute name yet.\r\n          if (isWhitespace(c)) {\r\n            continue\r\n          } else if (c === '>') {\r\n            openTag(parser)\r\n          } else if (c === '/') {\r\n            parser.state = S.OPEN_TAG_SLASH\r\n          } else if (isMatch(nameStart, c)) {\r\n            parser.attribName = c\r\n            parser.attribValue = ''\r\n            parser.state = S.ATTRIB_NAME\r\n          } else {\r\n            strictFail(parser, 'Invalid attribute name')\r\n          }\r\n          continue\r\n\r\n        case S.ATTRIB_NAME:\r\n          if (c === '=') {\r\n            parser.state = S.ATTRIB_VALUE\r\n          } else if (c === '>') {\r\n            strictFail(parser, 'Attribute without value')\r\n            parser.attribValue = parser.attribName\r\n            attrib(parser)\r\n            openTag(parser)\r\n          } else if (isWhitespace(c)) {\r\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\r\n          } else if (isMatch(nameBody, c)) {\r\n            parser.attribName += c\r\n          } else {\r\n            strictFail(parser, 'Invalid attribute name')\r\n          }\r\n          continue\r\n\r\n        case S.ATTRIB_NAME_SAW_WHITE:\r\n          if (c === '=') {\r\n            parser.state = S.ATTRIB_VALUE\r\n          } else if (isWhitespace(c)) {\r\n            continue\r\n          } else {\r\n            strictFail(parser, 'Attribute without value')\r\n            parser.tag.attributes[parser.attribName] = ''\r\n            parser.attribValue = ''\r\n            emitNode(parser, 'onattribute', {\r\n              name: parser.attribName,\r\n              value: ''\r\n            })\r\n            parser.attribName = ''\r\n            if (c === '>') {\r\n              openTag(parser)\r\n            } else if (isMatch(nameStart, c)) {\r\n              parser.attribName = c\r\n              parser.state = S.ATTRIB_NAME\r\n            } else {\r\n              strictFail(parser, 'Invalid attribute name')\r\n              parser.state = S.ATTRIB\r\n            }\r\n          }\r\n          continue\r\n\r\n        case S.ATTRIB_VALUE:\r\n          if (isWhitespace(c)) {\r\n            continue\r\n          } else if (isQuote(c)) {\r\n            parser.q = c\r\n            parser.state = S.ATTRIB_VALUE_QUOTED\r\n          } else {\r\n            strictFail(parser, 'Unquoted attribute value')\r\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\r\n            parser.attribValue = c\r\n          }\r\n          continue\r\n\r\n        case S.ATTRIB_VALUE_QUOTED:\r\n          if (c !== parser.q) {\r\n            if (c === '&') {\r\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\r\n            } else {\r\n              parser.attribValue += c\r\n            }\r\n            continue\r\n          }\r\n          attrib(parser)\r\n          parser.q = ''\r\n          parser.state = S.ATTRIB_VALUE_CLOSED\r\n          continue\r\n\r\n        case S.ATTRIB_VALUE_CLOSED:\r\n          if (isWhitespace(c)) {\r\n            parser.state = S.ATTRIB\r\n          } else if (c === '>') {\r\n            openTag(parser)\r\n          } else if (c === '/') {\r\n            parser.state = S.OPEN_TAG_SLASH\r\n          } else if (isMatch(nameStart, c)) {\r\n            strictFail(parser, 'No whitespace between attributes')\r\n            parser.attribName = c\r\n            parser.attribValue = ''\r\n            parser.state = S.ATTRIB_NAME\r\n          } else {\r\n            strictFail(parser, 'Invalid attribute name')\r\n          }\r\n          continue\r\n\r\n        case S.ATTRIB_VALUE_UNQUOTED:\r\n          if (!isAttribEnd(c)) {\r\n            if (c === '&') {\r\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\r\n            } else {\r\n              parser.attribValue += c\r\n            }\r\n            continue\r\n          }\r\n          attrib(parser)\r\n          if (c === '>') {\r\n            openTag(parser)\r\n          } else {\r\n            parser.state = S.ATTRIB\r\n          }\r\n          continue\r\n\r\n        case S.CLOSE_TAG:\r\n          if (!parser.tagName) {\r\n            if (isWhitespace(c)) {\r\n              continue\r\n            } else if (notMatch(nameStart, c)) {\r\n              if (parser.script) {\r\n                parser.script += '</' + c\r\n                parser.state = S.SCRIPT\r\n              } else {\r\n                strictFail(parser, 'Invalid tagname in closing tag.')\r\n              }\r\n            } else {\r\n              parser.tagName = c\r\n            }\r\n          } else if (c === '>') {\r\n            closeTag(parser)\r\n          } else if (isMatch(nameBody, c)) {\r\n            parser.tagName += c\r\n          } else if (parser.script) {\r\n            parser.script += '</' + parser.tagName\r\n            parser.tagName = ''\r\n            parser.state = S.SCRIPT\r\n          } else {\r\n            if (!isWhitespace(c)) {\r\n              strictFail(parser, 'Invalid tagname in closing tag')\r\n            }\r\n            parser.state = S.CLOSE_TAG_SAW_WHITE\r\n          }\r\n          continue\r\n\r\n        case S.CLOSE_TAG_SAW_WHITE:\r\n          if (isWhitespace(c)) {\r\n            continue\r\n          }\r\n          if (c === '>') {\r\n            closeTag(parser)\r\n          } else {\r\n            strictFail(parser, 'Invalid characters in closing tag')\r\n          }\r\n          continue\r\n\r\n        case S.TEXT_ENTITY:\r\n        case S.ATTRIB_VALUE_ENTITY_Q:\r\n        case S.ATTRIB_VALUE_ENTITY_U:\r\n          var returnState\r\n          var buffer\r\n          switch (parser.state) {\r\n            case S.TEXT_ENTITY:\r\n              returnState = S.TEXT\r\n              buffer = 'textNode'\r\n              break\r\n\r\n            case S.ATTRIB_VALUE_ENTITY_Q:\r\n              returnState = S.ATTRIB_VALUE_QUOTED\r\n              buffer = 'attribValue'\r\n              break\r\n\r\n            case S.ATTRIB_VALUE_ENTITY_U:\r\n              returnState = S.ATTRIB_VALUE_UNQUOTED\r\n              buffer = 'attribValue'\r\n              break\r\n          }\r\n\r\n          if (c === ';') {\r\n            parser[buffer] += parseEntity(parser)\r\n            parser.entity = ''\r\n            parser.state = returnState\r\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\r\n            parser.entity += c\r\n          } else {\r\n            strictFail(parser, 'Invalid character in entity name')\r\n            parser[buffer] += '&' + parser.entity + c\r\n            parser.entity = ''\r\n            parser.state = returnState\r\n          }\r\n\r\n          continue\r\n\r\n        default:\r\n          throw new Error(parser, 'Unknown state: ' + parser.state)\r\n      }\r\n    } // while\r\n\r\n    if (parser.position >= parser.bufferCheckPosition) {\r\n      checkBufferLength(parser)\r\n    }\r\n    return parser\r\n  }\r\n\r\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\r\n  /* istanbul ignore next */\r\n  if (!String.fromCodePoint) {\r\n    (function () {\r\n      var stringFromCharCode = String.fromCharCode\r\n      var floor = Math.floor\r\n      var fromCodePoint = function () {\r\n        var MAX_SIZE = 0x4000\r\n        var codeUnits = []\r\n        var highSurrogate\r\n        var lowSurrogate\r\n        var index = -1\r\n        var length = arguments.length\r\n        if (!length) {\r\n          return ''\r\n        }\r\n        var result = ''\r\n        while (++index < length) {\r\n          var codePoint = Number(arguments[index])\r\n          if (\r\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\r\n            codePoint < 0 || // not a valid Unicode code point\r\n            codePoint > 0x10FFFF || // not a valid Unicode code point\r\n            floor(codePoint) !== codePoint // not an integer\r\n          ) {\r\n            throw RangeError('Invalid code point: ' + codePoint)\r\n          }\r\n          if (codePoint <= 0xFFFF) { // BMP code point\r\n            codeUnits.push(codePoint)\r\n          } else { // Astral code point; split in surrogate halves\r\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\r\n            codePoint -= 0x10000\r\n            highSurrogate = (codePoint >> 10) + 0xD800\r\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\r\n            codeUnits.push(highSurrogate, lowSurrogate)\r\n          }\r\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\r\n            result += stringFromCharCode.apply(null, codeUnits)\r\n            codeUnits.length = 0\r\n          }\r\n        }\r\n        return result\r\n      }\r\n      /* istanbul ignore next */\r\n      if (Object.defineProperty) {\r\n        Object.defineProperty(String, 'fromCodePoint', {\r\n          value: fromCodePoint,\r\n          configurable: true,\r\n          writable: true\r\n        })\r\n      } else {\r\n        String.fromCodePoint = fromCodePoint\r\n      }\r\n    }())\r\n  }\r\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\r\n\r\n}).call(this,require(\"buffer\").Buffer)\r\n\r\n},{\"buffer\":41,\"stream\":112,\"string_decoder\":113}],112:[function(require,module,exports){\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\nmodule.exports = Stream;\r\n\r\nvar EE = require('events').EventEmitter;\r\nvar inherits = require('inherits');\r\n\r\ninherits(Stream, EE);\r\nStream.Readable = require('readable-stream/readable.js');\r\nStream.Writable = require('readable-stream/writable.js');\r\nStream.Duplex = require('readable-stream/duplex.js');\r\nStream.Transform = require('readable-stream/transform.js');\r\nStream.PassThrough = require('readable-stream/passthrough.js');\r\n\r\n// Backwards-compat with node 0.4.x\r\nStream.Stream = Stream;\r\n\r\n\r\n\r\n// old-style streams.  Note that the pipe method (the only relevant\r\n// part of this class) is overridden in the Readable class.\r\n\r\nfunction Stream() {\r\n  EE.call(this);\r\n}\r\n\r\nStream.prototype.pipe = function(dest, options) {\r\n  var source = this;\r\n\r\n  function ondata(chunk) {\r\n    if (dest.writable) {\r\n      if (false === dest.write(chunk) && source.pause) {\r\n        source.pause();\r\n      }\r\n    }\r\n  }\r\n\r\n  source.on('data', ondata);\r\n\r\n  function ondrain() {\r\n    if (source.readable && source.resume) {\r\n      source.resume();\r\n    }\r\n  }\r\n\r\n  dest.on('drain', ondrain);\r\n\r\n  // If the 'end' option is not supplied, dest.end() will be called when\r\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\r\n  if (!dest._isStdio && (!options || options.end !== false)) {\r\n    source.on('end', onend);\r\n    source.on('close', onclose);\r\n  }\r\n\r\n  var didOnEnd = false;\r\n  function onend() {\r\n    if (didOnEnd) return;\r\n    didOnEnd = true;\r\n\r\n    dest.end();\r\n  }\r\n\r\n\r\n  function onclose() {\r\n    if (didOnEnd) return;\r\n    didOnEnd = true;\r\n\r\n    if (typeof dest.destroy === 'function') dest.destroy();\r\n  }\r\n\r\n  // don't leave dangling pipes when there are errors.\r\n  function onerror(er) {\r\n    cleanup();\r\n    if (EE.listenerCount(this, 'error') === 0) {\r\n      throw er; // Unhandled stream error in pipe.\r\n    }\r\n  }\r\n\r\n  source.on('error', onerror);\r\n  dest.on('error', onerror);\r\n\r\n  // remove all the event listeners that were added.\r\n  function cleanup() {\r\n    source.removeListener('data', ondata);\r\n    dest.removeListener('drain', ondrain);\r\n\r\n    source.removeListener('end', onend);\r\n    source.removeListener('close', onclose);\r\n\r\n    source.removeListener('error', onerror);\r\n    dest.removeListener('error', onerror);\r\n\r\n    source.removeListener('end', cleanup);\r\n    source.removeListener('close', cleanup);\r\n\r\n    dest.removeListener('close', cleanup);\r\n  }\r\n\r\n  source.on('end', cleanup);\r\n  source.on('close', cleanup);\r\n\r\n  dest.on('close', cleanup);\r\n\r\n  dest.emit('pipe', source);\r\n\r\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\r\n  return dest;\r\n};\r\n\r\n},{\"events\":47,\"inherits\":84,\"readable-stream/duplex.js\":97,\"readable-stream/passthrough.js\":106,\"readable-stream/readable.js\":107,\"readable-stream/transform.js\":108,\"readable-stream/writable.js\":109}],113:[function(require,module,exports){\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\n/*<replacement>*/\r\n\r\nvar Buffer = require('safe-buffer').Buffer;\r\n/*</replacement>*/\r\n\r\nvar isEncoding = Buffer.isEncoding || function (encoding) {\r\n  encoding = '' + encoding;\r\n  switch (encoding && encoding.toLowerCase()) {\r\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nfunction _normalizeEncoding(enc) {\r\n  if (!enc) return 'utf8';\r\n  var retried;\r\n  while (true) {\r\n    switch (enc) {\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return 'utf8';\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return 'utf16le';\r\n      case 'latin1':\r\n      case 'binary':\r\n        return 'latin1';\r\n      case 'base64':\r\n      case 'ascii':\r\n      case 'hex':\r\n        return enc;\r\n      default:\r\n        if (retried) return; // undefined\r\n        enc = ('' + enc).toLowerCase();\r\n        retried = true;\r\n    }\r\n  }\r\n};\r\n\r\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\r\n// modules monkey-patch it to support additional encodings\r\nfunction normalizeEncoding(enc) {\r\n  var nenc = _normalizeEncoding(enc);\r\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\r\n  return nenc || enc;\r\n}\r\n\r\n// StringDecoder provides an interface for efficiently splitting a series of\r\n// buffers into a series of JS strings without breaking apart multi-byte\r\n// characters.\r\nexports.StringDecoder = StringDecoder;\r\nfunction StringDecoder(encoding) {\r\n  this.encoding = normalizeEncoding(encoding);\r\n  var nb;\r\n  switch (this.encoding) {\r\n    case 'utf16le':\r\n      this.text = utf16Text;\r\n      this.end = utf16End;\r\n      nb = 4;\r\n      break;\r\n    case 'utf8':\r\n      this.fillLast = utf8FillLast;\r\n      nb = 4;\r\n      break;\r\n    case 'base64':\r\n      this.text = base64Text;\r\n      this.end = base64End;\r\n      nb = 3;\r\n      break;\r\n    default:\r\n      this.write = simpleWrite;\r\n      this.end = simpleEnd;\r\n      return;\r\n  }\r\n  this.lastNeed = 0;\r\n  this.lastTotal = 0;\r\n  this.lastChar = Buffer.allocUnsafe(nb);\r\n}\r\n\r\nStringDecoder.prototype.write = function (buf) {\r\n  if (buf.length === 0) return '';\r\n  var r;\r\n  var i;\r\n  if (this.lastNeed) {\r\n    r = this.fillLast(buf);\r\n    if (r === undefined) return '';\r\n    i = this.lastNeed;\r\n    this.lastNeed = 0;\r\n  } else {\r\n    i = 0;\r\n  }\r\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\r\n  return r || '';\r\n};\r\n\r\nStringDecoder.prototype.end = utf8End;\r\n\r\n// Returns only complete characters in a Buffer\r\nStringDecoder.prototype.text = utf8Text;\r\n\r\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\r\nStringDecoder.prototype.fillLast = function (buf) {\r\n  if (this.lastNeed <= buf.length) {\r\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\r\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\r\n  }\r\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\r\n  this.lastNeed -= buf.length;\r\n};\r\n\r\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\r\n// continuation byte. If an invalid byte is detected, -2 is returned.\r\nfunction utf8CheckByte(byte) {\r\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\r\n  return byte >> 6 === 0x02 ? -1 : -2;\r\n}\r\n\r\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\r\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\r\n// needed to complete the UTF-8 character (if applicable) are returned.\r\nfunction utf8CheckIncomplete(self, buf, i) {\r\n  var j = buf.length - 1;\r\n  if (j < i) return 0;\r\n  var nb = utf8CheckByte(buf[j]);\r\n  if (nb >= 0) {\r\n    if (nb > 0) self.lastNeed = nb - 1;\r\n    return nb;\r\n  }\r\n  if (--j < i || nb === -2) return 0;\r\n  nb = utf8CheckByte(buf[j]);\r\n  if (nb >= 0) {\r\n    if (nb > 0) self.lastNeed = nb - 2;\r\n    return nb;\r\n  }\r\n  if (--j < i || nb === -2) return 0;\r\n  nb = utf8CheckByte(buf[j]);\r\n  if (nb >= 0) {\r\n    if (nb > 0) {\r\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\r\n    }\r\n    return nb;\r\n  }\r\n  return 0;\r\n}\r\n\r\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\r\n// needed or are available. If we see a non-continuation byte where we expect\r\n// one, we \"replace\" the validated continuation bytes we've seen so far with\r\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\r\n// behavior. The continuation byte check is included three times in the case\r\n// where all of the continuation bytes for a character exist in the same buffer.\r\n// It is also done this way as a slight performance increase instead of using a\r\n// loop.\r\nfunction utf8CheckExtraBytes(self, buf, p) {\r\n  if ((buf[0] & 0xC0) !== 0x80) {\r\n    self.lastNeed = 0;\r\n    return '\\ufffd';\r\n  }\r\n  if (self.lastNeed > 1 && buf.length > 1) {\r\n    if ((buf[1] & 0xC0) !== 0x80) {\r\n      self.lastNeed = 1;\r\n      return '\\ufffd';\r\n    }\r\n    if (self.lastNeed > 2 && buf.length > 2) {\r\n      if ((buf[2] & 0xC0) !== 0x80) {\r\n        self.lastNeed = 2;\r\n        return '\\ufffd';\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\r\nfunction utf8FillLast(buf) {\r\n  var p = this.lastTotal - this.lastNeed;\r\n  var r = utf8CheckExtraBytes(this, buf, p);\r\n  if (r !== undefined) return r;\r\n  if (this.lastNeed <= buf.length) {\r\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\r\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\r\n  }\r\n  buf.copy(this.lastChar, p, 0, buf.length);\r\n  this.lastNeed -= buf.length;\r\n}\r\n\r\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\r\n// partial character, the character's bytes are buffered until the required\r\n// number of bytes are available.\r\nfunction utf8Text(buf, i) {\r\n  var total = utf8CheckIncomplete(this, buf, i);\r\n  if (!this.lastNeed) return buf.toString('utf8', i);\r\n  this.lastTotal = total;\r\n  var end = buf.length - (total - this.lastNeed);\r\n  buf.copy(this.lastChar, 0, end);\r\n  return buf.toString('utf8', i, end);\r\n}\r\n\r\n// For UTF-8, a replacement character is added when ending on a partial\r\n// character.\r\nfunction utf8End(buf) {\r\n  var r = buf && buf.length ? this.write(buf) : '';\r\n  if (this.lastNeed) return r + '\\ufffd';\r\n  return r;\r\n}\r\n\r\n// UTF-16LE typically needs two bytes per character, but even if we have an even\r\n// number of bytes available, we need to check if we end on a leading/high\r\n// surrogate. In that case, we need to wait for the next two bytes in order to\r\n// decode the last character properly.\r\nfunction utf16Text(buf, i) {\r\n  if ((buf.length - i) % 2 === 0) {\r\n    var r = buf.toString('utf16le', i);\r\n    if (r) {\r\n      var c = r.charCodeAt(r.length - 1);\r\n      if (c >= 0xD800 && c <= 0xDBFF) {\r\n        this.lastNeed = 2;\r\n        this.lastTotal = 4;\r\n        this.lastChar[0] = buf[buf.length - 2];\r\n        this.lastChar[1] = buf[buf.length - 1];\r\n        return r.slice(0, -1);\r\n      }\r\n    }\r\n    return r;\r\n  }\r\n  this.lastNeed = 1;\r\n  this.lastTotal = 2;\r\n  this.lastChar[0] = buf[buf.length - 1];\r\n  return buf.toString('utf16le', i, buf.length - 1);\r\n}\r\n\r\n// For UTF-16LE we do not explicitly append special replacement characters if we\r\n// end on a partial character, we simply let v8 handle that.\r\nfunction utf16End(buf) {\r\n  var r = buf && buf.length ? this.write(buf) : '';\r\n  if (this.lastNeed) {\r\n    var end = this.lastTotal - this.lastNeed;\r\n    return r + this.lastChar.toString('utf16le', 0, end);\r\n  }\r\n  return r;\r\n}\r\n\r\nfunction base64Text(buf, i) {\r\n  var n = (buf.length - i) % 3;\r\n  if (n === 0) return buf.toString('base64', i);\r\n  this.lastNeed = 3 - n;\r\n  this.lastTotal = 3;\r\n  if (n === 1) {\r\n    this.lastChar[0] = buf[buf.length - 1];\r\n  } else {\r\n    this.lastChar[0] = buf[buf.length - 2];\r\n    this.lastChar[1] = buf[buf.length - 1];\r\n  }\r\n  return buf.toString('base64', i, buf.length - n);\r\n}\r\n\r\nfunction base64End(buf) {\r\n  var r = buf && buf.length ? this.write(buf) : '';\r\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\r\n  return r;\r\n}\r\n\r\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\r\nfunction simpleWrite(buf) {\r\n  return buf.toString(this.encoding);\r\n}\r\n\r\nfunction simpleEnd(buf) {\r\n  return buf && buf.length ? this.write(buf) : '';\r\n}\r\n},{\"safe-buffer\":110}],114:[function(require,module,exports){\r\n(function (setImmediate,clearImmediate){\r\nvar nextTick = require('process/browser.js').nextTick;\r\nvar apply = Function.prototype.apply;\r\nvar slice = Array.prototype.slice;\r\nvar immediateIds = {};\r\nvar nextImmediateId = 0;\r\n\r\n// DOM APIs, for completeness\r\n\r\nexports.setTimeout = function() {\r\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\r\n};\r\nexports.setInterval = function() {\r\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\r\n};\r\nexports.clearTimeout =\r\nexports.clearInterval = function(timeout) { timeout.close(); };\r\n\r\nfunction Timeout(id, clearFn) {\r\n  this._id = id;\r\n  this._clearFn = clearFn;\r\n}\r\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\r\nTimeout.prototype.close = function() {\r\n  this._clearFn.call(window, this._id);\r\n};\r\n\r\n// Does not start the time, just sets up the members needed.\r\nexports.enroll = function(item, msecs) {\r\n  clearTimeout(item._idleTimeoutId);\r\n  item._idleTimeout = msecs;\r\n};\r\n\r\nexports.unenroll = function(item) {\r\n  clearTimeout(item._idleTimeoutId);\r\n  item._idleTimeout = -1;\r\n};\r\n\r\nexports._unrefActive = exports.active = function(item) {\r\n  clearTimeout(item._idleTimeoutId);\r\n\r\n  var msecs = item._idleTimeout;\r\n  if (msecs >= 0) {\r\n    item._idleTimeoutId = setTimeout(function onTimeout() {\r\n      if (item._onTimeout)\r\n        item._onTimeout();\r\n    }, msecs);\r\n  }\r\n};\r\n\r\n// That's not how node.js implements it but the exposed api is the same.\r\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\r\n  var id = nextImmediateId++;\r\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\r\n\r\n  immediateIds[id] = true;\r\n\r\n  nextTick(function onNextTick() {\r\n    if (immediateIds[id]) {\r\n      // fn.call() is faster so we optimize for the common use-case\r\n      // @see http://jsperf.com/call-apply-segu\r\n      if (args) {\r\n        fn.apply(null, args);\r\n      } else {\r\n        fn.call(null);\r\n      }\r\n      // Prevent ids from leaking\r\n      exports.clearImmediate(id);\r\n    }\r\n  });\r\n\r\n  return id;\r\n};\r\n\r\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\r\n  delete immediateIds[id];\r\n};\r\n}).call(this,require(\"timers\").setImmediate,require(\"timers\").clearImmediate)\r\n\r\n},{\"process/browser.js\":91,\"timers\":114}],115:[function(require,module,exports){\r\n(function (global){\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = deprecate;\r\n\r\n/**\r\n * Mark that a method should not be used.\r\n * Returns a modified function which warns once by default.\r\n *\r\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\r\n *\r\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\r\n * will throw an Error when invoked.\r\n *\r\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\r\n * will invoke `console.trace()` instead of `console.error()`.\r\n *\r\n * @param {Function} fn - the function to deprecate\r\n * @param {String} msg - the string to print to the console when `fn` is invoked\r\n * @returns {Function} a new \"deprecated\" version of `fn`\r\n * @api public\r\n */\r\n\r\nfunction deprecate (fn, msg) {\r\n  if (config('noDeprecation')) {\r\n    return fn;\r\n  }\r\n\r\n  var warned = false;\r\n  function deprecated() {\r\n    if (!warned) {\r\n      if (config('throwDeprecation')) {\r\n        throw new Error(msg);\r\n      } else if (config('traceDeprecation')) {\r\n        console.trace(msg);\r\n      } else {\r\n        console.warn(msg);\r\n      }\r\n      warned = true;\r\n    }\r\n    return fn.apply(this, arguments);\r\n  }\r\n\r\n  return deprecated;\r\n}\r\n\r\n/**\r\n * Checks `localStorage` for boolean values for the given `name`.\r\n *\r\n * @param {String} name\r\n * @returns {Boolean}\r\n * @api private\r\n */\r\n\r\nfunction config (name) {\r\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\r\n  try {\r\n    if (!global.localStorage) return false;\r\n  } catch (_) {\r\n    return false;\r\n  }\r\n  var val = global.localStorage[name];\r\n  if (null == val) return false;\r\n  return String(val).toLowerCase() === 'true';\r\n}\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{}],116:[function(require,module,exports){\r\nmodule.exports = function isBuffer(arg) {\r\n  return arg && typeof arg === 'object'\r\n    && typeof arg.copy === 'function'\r\n    && typeof arg.fill === 'function'\r\n    && typeof arg.readUInt8 === 'function';\r\n}\r\n},{}],117:[function(require,module,exports){\r\n(function (process,global){\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\nvar formatRegExp = /%[sdj%]/g;\r\nexports.format = function(f) {\r\n  if (!isString(f)) {\r\n    var objects = [];\r\n    for (var i = 0; i < arguments.length; i++) {\r\n      objects.push(inspect(arguments[i]));\r\n    }\r\n    return objects.join(' ');\r\n  }\r\n\r\n  var i = 1;\r\n  var args = arguments;\r\n  var len = args.length;\r\n  var str = String(f).replace(formatRegExp, function(x) {\r\n    if (x === '%%') return '%';\r\n    if (i >= len) return x;\r\n    switch (x) {\r\n      case '%s': return String(args[i++]);\r\n      case '%d': return Number(args[i++]);\r\n      case '%j':\r\n        try {\r\n          return JSON.stringify(args[i++]);\r\n        } catch (_) {\r\n          return '[Circular]';\r\n        }\r\n      default:\r\n        return x;\r\n    }\r\n  });\r\n  for (var x = args[i]; i < len; x = args[++i]) {\r\n    if (isNull(x) || !isObject(x)) {\r\n      str += ' ' + x;\r\n    } else {\r\n      str += ' ' + inspect(x);\r\n    }\r\n  }\r\n  return str;\r\n};\r\n\r\n\r\n// Mark that a method should not be used.\r\n// Returns a modified function which warns once by default.\r\n// If --no-deprecation is set, then it is a no-op.\r\nexports.deprecate = function(fn, msg) {\r\n  // Allow for deprecating things in the process of starting up.\r\n  if (isUndefined(global.process)) {\r\n    return function() {\r\n      return exports.deprecate(fn, msg).apply(this, arguments);\r\n    };\r\n  }\r\n\r\n  if (process.noDeprecation === true) {\r\n    return fn;\r\n  }\r\n\r\n  var warned = false;\r\n  function deprecated() {\r\n    if (!warned) {\r\n      if (process.throwDeprecation) {\r\n        throw new Error(msg);\r\n      } else if (process.traceDeprecation) {\r\n        console.trace(msg);\r\n      } else {\r\n        console.error(msg);\r\n      }\r\n      warned = true;\r\n    }\r\n    return fn.apply(this, arguments);\r\n  }\r\n\r\n  return deprecated;\r\n};\r\n\r\n\r\nvar debugs = {};\r\nvar debugEnviron;\r\nexports.debuglog = function(set) {\r\n  if (isUndefined(debugEnviron))\r\n    debugEnviron = process.env.NODE_DEBUG || '';\r\n  set = set.toUpperCase();\r\n  if (!debugs[set]) {\r\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\r\n      var pid = process.pid;\r\n      debugs[set] = function() {\r\n        var msg = exports.format.apply(exports, arguments);\r\n        console.error('%s %d: %s', set, pid, msg);\r\n      };\r\n    } else {\r\n      debugs[set] = function() {};\r\n    }\r\n  }\r\n  return debugs[set];\r\n};\r\n\r\n\r\n/**\r\n * Echos the value of a value. Trys to print the value out\r\n * in the best way possible given the different types.\r\n *\r\n * @param {Object} obj The object to print out.\r\n * @param {Object} opts Optional options object that alters the output.\r\n */\r\n/* legacy: obj, showHidden, depth, colors*/\r\nfunction inspect(obj, opts) {\r\n  // default options\r\n  var ctx = {\r\n    seen: [],\r\n    stylize: stylizeNoColor\r\n  };\r\n  // legacy...\r\n  if (arguments.length >= 3) ctx.depth = arguments[2];\r\n  if (arguments.length >= 4) ctx.colors = arguments[3];\r\n  if (isBoolean(opts)) {\r\n    // legacy...\r\n    ctx.showHidden = opts;\r\n  } else if (opts) {\r\n    // got an \"options\" object\r\n    exports._extend(ctx, opts);\r\n  }\r\n  // set default options\r\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\r\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\r\n  if (isUndefined(ctx.colors)) ctx.colors = false;\r\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\r\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\r\n  return formatValue(ctx, obj, ctx.depth);\r\n}\r\nexports.inspect = inspect;\r\n\r\n\r\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\r\ninspect.colors = {\r\n  'bold' : [1, 22],\r\n  'italic' : [3, 23],\r\n  'underline' : [4, 24],\r\n  'inverse' : [7, 27],\r\n  'white' : [37, 39],\r\n  'grey' : [90, 39],\r\n  'black' : [30, 39],\r\n  'blue' : [34, 39],\r\n  'cyan' : [36, 39],\r\n  'green' : [32, 39],\r\n  'magenta' : [35, 39],\r\n  'red' : [31, 39],\r\n  'yellow' : [33, 39]\r\n};\r\n\r\n// Don't use 'blue' not visible on cmd.exe\r\ninspect.styles = {\r\n  'special': 'cyan',\r\n  'number': 'yellow',\r\n  'boolean': 'yellow',\r\n  'undefined': 'grey',\r\n  'null': 'bold',\r\n  'string': 'green',\r\n  'date': 'magenta',\r\n  // \"name\": intentionally not styling\r\n  'regexp': 'red'\r\n};\r\n\r\n\r\nfunction stylizeWithColor(str, styleType) {\r\n  var style = inspect.styles[styleType];\r\n\r\n  if (style) {\r\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\r\n           '\\u001b[' + inspect.colors[style][1] + 'm';\r\n  } else {\r\n    return str;\r\n  }\r\n}\r\n\r\n\r\nfunction stylizeNoColor(str, styleType) {\r\n  return str;\r\n}\r\n\r\n\r\nfunction arrayToHash(array) {\r\n  var hash = {};\r\n\r\n  array.forEach(function(val, idx) {\r\n    hash[val] = true;\r\n  });\r\n\r\n  return hash;\r\n}\r\n\r\n\r\nfunction formatValue(ctx, value, recurseTimes) {\r\n  // Provide a hook for user-specified inspect functions.\r\n  // Check that value is an object with an inspect function on it\r\n  if (ctx.customInspect &&\r\n      value &&\r\n      isFunction(value.inspect) &&\r\n      // Filter out the util module, it's inspect function is special\r\n      value.inspect !== exports.inspect &&\r\n      // Also filter out any prototype objects using the circular check.\r\n      !(value.constructor && value.constructor.prototype === value)) {\r\n    var ret = value.inspect(recurseTimes, ctx);\r\n    if (!isString(ret)) {\r\n      ret = formatValue(ctx, ret, recurseTimes);\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  // Primitive types cannot have properties\r\n  var primitive = formatPrimitive(ctx, value);\r\n  if (primitive) {\r\n    return primitive;\r\n  }\r\n\r\n  // Look up the keys of the object.\r\n  var keys = Object.keys(value);\r\n  var visibleKeys = arrayToHash(keys);\r\n\r\n  if (ctx.showHidden) {\r\n    keys = Object.getOwnPropertyNames(value);\r\n  }\r\n\r\n  // IE doesn't make error fields non-enumerable\r\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\r\n  if (isError(value)\r\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\r\n    return formatError(value);\r\n  }\r\n\r\n  // Some type of object without properties can be shortcutted.\r\n  if (keys.length === 0) {\r\n    if (isFunction(value)) {\r\n      var name = value.name ? ': ' + value.name : '';\r\n      return ctx.stylize('[Function' + name + ']', 'special');\r\n    }\r\n    if (isRegExp(value)) {\r\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\r\n    }\r\n    if (isDate(value)) {\r\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\r\n    }\r\n    if (isError(value)) {\r\n      return formatError(value);\r\n    }\r\n  }\r\n\r\n  var base = '', array = false, braces = ['{', '}'];\r\n\r\n  // Make Array say that they are Array\r\n  if (isArray(value)) {\r\n    array = true;\r\n    braces = ['[', ']'];\r\n  }\r\n\r\n  // Make functions say that they are functions\r\n  if (isFunction(value)) {\r\n    var n = value.name ? ': ' + value.name : '';\r\n    base = ' [Function' + n + ']';\r\n  }\r\n\r\n  // Make RegExps say that they are RegExps\r\n  if (isRegExp(value)) {\r\n    base = ' ' + RegExp.prototype.toString.call(value);\r\n  }\r\n\r\n  // Make dates with properties first say the date\r\n  if (isDate(value)) {\r\n    base = ' ' + Date.prototype.toUTCString.call(value);\r\n  }\r\n\r\n  // Make error with message first say the error\r\n  if (isError(value)) {\r\n    base = ' ' + formatError(value);\r\n  }\r\n\r\n  if (keys.length === 0 && (!array || value.length == 0)) {\r\n    return braces[0] + base + braces[1];\r\n  }\r\n\r\n  if (recurseTimes < 0) {\r\n    if (isRegExp(value)) {\r\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\r\n    } else {\r\n      return ctx.stylize('[Object]', 'special');\r\n    }\r\n  }\r\n\r\n  ctx.seen.push(value);\r\n\r\n  var output;\r\n  if (array) {\r\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\r\n  } else {\r\n    output = keys.map(function(key) {\r\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\r\n    });\r\n  }\r\n\r\n  ctx.seen.pop();\r\n\r\n  return reduceToSingleString(output, base, braces);\r\n}\r\n\r\n\r\nfunction formatPrimitive(ctx, value) {\r\n  if (isUndefined(value))\r\n    return ctx.stylize('undefined', 'undefined');\r\n  if (isString(value)) {\r\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\r\n                                             .replace(/'/g, \"\\\\'\")\r\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\r\n    return ctx.stylize(simple, 'string');\r\n  }\r\n  if (isNumber(value))\r\n    return ctx.stylize('' + value, 'number');\r\n  if (isBoolean(value))\r\n    return ctx.stylize('' + value, 'boolean');\r\n  // For some reason typeof null is \"object\", so special case here.\r\n  if (isNull(value))\r\n    return ctx.stylize('null', 'null');\r\n}\r\n\r\n\r\nfunction formatError(value) {\r\n  return '[' + Error.prototype.toString.call(value) + ']';\r\n}\r\n\r\n\r\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\r\n  var output = [];\r\n  for (var i = 0, l = value.length; i < l; ++i) {\r\n    if (hasOwnProperty(value, String(i))) {\r\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\r\n          String(i), true));\r\n    } else {\r\n      output.push('');\r\n    }\r\n  }\r\n  keys.forEach(function(key) {\r\n    if (!key.match(/^\\d+$/)) {\r\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\r\n          key, true));\r\n    }\r\n  });\r\n  return output;\r\n}\r\n\r\n\r\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\r\n  var name, str, desc;\r\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\r\n  if (desc.get) {\r\n    if (desc.set) {\r\n      str = ctx.stylize('[Getter/Setter]', 'special');\r\n    } else {\r\n      str = ctx.stylize('[Getter]', 'special');\r\n    }\r\n  } else {\r\n    if (desc.set) {\r\n      str = ctx.stylize('[Setter]', 'special');\r\n    }\r\n  }\r\n  if (!hasOwnProperty(visibleKeys, key)) {\r\n    name = '[' + key + ']';\r\n  }\r\n  if (!str) {\r\n    if (ctx.seen.indexOf(desc.value) < 0) {\r\n      if (isNull(recurseTimes)) {\r\n        str = formatValue(ctx, desc.value, null);\r\n      } else {\r\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\r\n      }\r\n      if (str.indexOf('\\n') > -1) {\r\n        if (array) {\r\n          str = str.split('\\n').map(function(line) {\r\n            return '  ' + line;\r\n          }).join('\\n').substr(2);\r\n        } else {\r\n          str = '\\n' + str.split('\\n').map(function(line) {\r\n            return '   ' + line;\r\n          }).join('\\n');\r\n        }\r\n      }\r\n    } else {\r\n      str = ctx.stylize('[Circular]', 'special');\r\n    }\r\n  }\r\n  if (isUndefined(name)) {\r\n    if (array && key.match(/^\\d+$/)) {\r\n      return str;\r\n    }\r\n    name = JSON.stringify('' + key);\r\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\r\n      name = name.substr(1, name.length - 2);\r\n      name = ctx.stylize(name, 'name');\r\n    } else {\r\n      name = name.replace(/'/g, \"\\\\'\")\r\n                 .replace(/\\\\\"/g, '\"')\r\n                 .replace(/(^\"|\"$)/g, \"'\");\r\n      name = ctx.stylize(name, 'string');\r\n    }\r\n  }\r\n\r\n  return name + ': ' + str;\r\n}\r\n\r\n\r\nfunction reduceToSingleString(output, base, braces) {\r\n  var numLinesEst = 0;\r\n  var length = output.reduce(function(prev, cur) {\r\n    numLinesEst++;\r\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\r\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\r\n  }, 0);\r\n\r\n  if (length > 60) {\r\n    return braces[0] +\r\n           (base === '' ? '' : base + '\\n ') +\r\n           ' ' +\r\n           output.join(',\\n  ') +\r\n           ' ' +\r\n           braces[1];\r\n  }\r\n\r\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\r\n}\r\n\r\n\r\n// NOTE: These type checking functions intentionally don't use `instanceof`\r\n// because it is fragile and can be easily faked with `Object.create()`.\r\nfunction isArray(ar) {\r\n  return Array.isArray(ar);\r\n}\r\nexports.isArray = isArray;\r\n\r\nfunction isBoolean(arg) {\r\n  return typeof arg === 'boolean';\r\n}\r\nexports.isBoolean = isBoolean;\r\n\r\nfunction isNull(arg) {\r\n  return arg === null;\r\n}\r\nexports.isNull = isNull;\r\n\r\nfunction isNullOrUndefined(arg) {\r\n  return arg == null;\r\n}\r\nexports.isNullOrUndefined = isNullOrUndefined;\r\n\r\nfunction isNumber(arg) {\r\n  return typeof arg === 'number';\r\n}\r\nexports.isNumber = isNumber;\r\n\r\nfunction isString(arg) {\r\n  return typeof arg === 'string';\r\n}\r\nexports.isString = isString;\r\n\r\nfunction isSymbol(arg) {\r\n  return typeof arg === 'symbol';\r\n}\r\nexports.isSymbol = isSymbol;\r\n\r\nfunction isUndefined(arg) {\r\n  return arg === void 0;\r\n}\r\nexports.isUndefined = isUndefined;\r\n\r\nfunction isRegExp(re) {\r\n  return isObject(re) && objectToString(re) === '[object RegExp]';\r\n}\r\nexports.isRegExp = isRegExp;\r\n\r\nfunction isObject(arg) {\r\n  return typeof arg === 'object' && arg !== null;\r\n}\r\nexports.isObject = isObject;\r\n\r\nfunction isDate(d) {\r\n  return isObject(d) && objectToString(d) === '[object Date]';\r\n}\r\nexports.isDate = isDate;\r\n\r\nfunction isError(e) {\r\n  return isObject(e) &&\r\n      (objectToString(e) === '[object Error]' || e instanceof Error);\r\n}\r\nexports.isError = isError;\r\n\r\nfunction isFunction(arg) {\r\n  return typeof arg === 'function';\r\n}\r\nexports.isFunction = isFunction;\r\n\r\nfunction isPrimitive(arg) {\r\n  return arg === null ||\r\n         typeof arg === 'boolean' ||\r\n         typeof arg === 'number' ||\r\n         typeof arg === 'string' ||\r\n         typeof arg === 'symbol' ||  // ES6 symbol\r\n         typeof arg === 'undefined';\r\n}\r\nexports.isPrimitive = isPrimitive;\r\n\r\nexports.isBuffer = require('./support/isBuffer');\r\n\r\nfunction objectToString(o) {\r\n  return Object.prototype.toString.call(o);\r\n}\r\n\r\n\r\nfunction pad(n) {\r\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\r\n}\r\n\r\n\r\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\r\n              'Oct', 'Nov', 'Dec'];\r\n\r\n// 26 Feb 16:19:34\r\nfunction timestamp() {\r\n  var d = new Date();\r\n  var time = [pad(d.getHours()),\r\n              pad(d.getMinutes()),\r\n              pad(d.getSeconds())].join(':');\r\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\r\n}\r\n\r\n\r\n// log is just a thin wrapper to console.log that prepends a timestamp\r\nexports.log = function() {\r\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\r\n};\r\n\r\n\r\n/**\r\n * Inherit the prototype methods from one constructor into another.\r\n *\r\n * The Function.prototype.inherits from lang.js rewritten as a standalone\r\n * function (not on Function.prototype). NOTE: If this file is to be loaded\r\n * during bootstrapping this function needs to be rewritten using some native\r\n * functions as prototype setup using normal JavaScript does not work as\r\n * expected during bootstrapping (see mirror.js in r114903).\r\n *\r\n * @param {function} ctor Constructor function which needs to inherit the\r\n *     prototype.\r\n * @param {function} superCtor Constructor function to inherit prototype from.\r\n */\r\nexports.inherits = require('inherits');\r\n\r\nexports._extend = function(origin, add) {\r\n  // Don't do anything if add isn't an object\r\n  if (!add || !isObject(add)) return origin;\r\n\r\n  var keys = Object.keys(add);\r\n  var i = keys.length;\r\n  while (i--) {\r\n    origin[keys[i]] = add[keys[i]];\r\n  }\r\n  return origin;\r\n};\r\n\r\nfunction hasOwnProperty(obj, prop) {\r\n  return Object.prototype.hasOwnProperty.call(obj, prop);\r\n}\r\n\r\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"./support/isBuffer\":116,\"_process\":91,\"inherits\":84}],118:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  \"use strict\";\r\n  exports.stripBOM = function(str) {\r\n    if (str[0] === '\\uFEFF') {\r\n      return str.substring(1);\r\n    } else {\r\n      return str;\r\n    }\r\n  };\r\n\r\n}).call(this);\r\n\r\n},{}],119:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  \"use strict\";\r\n  var builder, defaults, escapeCDATA, requiresCDATA, wrapCDATA,\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  builder = require('xmlbuilder');\r\n\r\n  defaults = require('./defaults').defaults;\r\n\r\n  requiresCDATA = function(entry) {\r\n    return typeof entry === \"string\" && (entry.indexOf('&') >= 0 || entry.indexOf('>') >= 0 || entry.indexOf('<') >= 0);\r\n  };\r\n\r\n  wrapCDATA = function(entry) {\r\n    return \"<![CDATA[\" + (escapeCDATA(entry)) + \"]]>\";\r\n  };\r\n\r\n  escapeCDATA = function(entry) {\r\n    return entry.replace(']]>', ']]]]><![CDATA[>');\r\n  };\r\n\r\n  exports.Builder = (function() {\r\n    function Builder(opts) {\r\n      var key, ref, value;\r\n      this.options = {};\r\n      ref = defaults[\"0.2\"];\r\n      for (key in ref) {\r\n        if (!hasProp.call(ref, key)) continue;\r\n        value = ref[key];\r\n        this.options[key] = value;\r\n      }\r\n      for (key in opts) {\r\n        if (!hasProp.call(opts, key)) continue;\r\n        value = opts[key];\r\n        this.options[key] = value;\r\n      }\r\n    }\r\n\r\n    Builder.prototype.buildObject = function(rootObj) {\r\n      var attrkey, charkey, render, rootElement, rootName;\r\n      attrkey = this.options.attrkey;\r\n      charkey = this.options.charkey;\r\n      if ((Object.keys(rootObj).length === 1) && (this.options.rootName === defaults['0.2'].rootName)) {\r\n        rootName = Object.keys(rootObj)[0];\r\n        rootObj = rootObj[rootName];\r\n      } else {\r\n        rootName = this.options.rootName;\r\n      }\r\n      render = (function(_this) {\r\n        return function(element, obj) {\r\n          var attr, child, entry, index, key, value;\r\n          if (typeof obj !== 'object') {\r\n            if (_this.options.cdata && requiresCDATA(obj)) {\r\n              element.raw(wrapCDATA(obj));\r\n            } else {\r\n              element.txt(obj);\r\n            }\r\n          } else if (Array.isArray(obj)) {\r\n            for (index in obj) {\r\n              if (!hasProp.call(obj, index)) continue;\r\n              child = obj[index];\r\n              for (key in child) {\r\n                entry = child[key];\r\n                element = render(element.ele(key), entry).up();\r\n              }\r\n            }\r\n          } else {\r\n            for (key in obj) {\r\n              if (!hasProp.call(obj, key)) continue;\r\n              child = obj[key];\r\n              if (key === attrkey) {\r\n                if (typeof child === \"object\") {\r\n                  for (attr in child) {\r\n                    value = child[attr];\r\n                    element = element.att(attr, value);\r\n                  }\r\n                }\r\n              } else if (key === charkey) {\r\n                if (_this.options.cdata && requiresCDATA(child)) {\r\n                  element = element.raw(wrapCDATA(child));\r\n                } else {\r\n                  element = element.txt(child);\r\n                }\r\n              } else if (Array.isArray(child)) {\r\n                for (index in child) {\r\n                  if (!hasProp.call(child, index)) continue;\r\n                  entry = child[index];\r\n                  if (typeof entry === 'string') {\r\n                    if (_this.options.cdata && requiresCDATA(entry)) {\r\n                      element = element.ele(key).raw(wrapCDATA(entry)).up();\r\n                    } else {\r\n                      element = element.ele(key, entry).up();\r\n                    }\r\n                  } else {\r\n                    element = render(element.ele(key), entry).up();\r\n                  }\r\n                }\r\n              } else if (typeof child === \"object\") {\r\n                element = render(element.ele(key), child).up();\r\n              } else {\r\n                if (typeof child === 'string' && _this.options.cdata && requiresCDATA(child)) {\r\n                  element = element.ele(key).raw(wrapCDATA(child)).up();\r\n                } else {\r\n                  if (child == null) {\r\n                    child = '';\r\n                  }\r\n                  element = element.ele(key, child.toString()).up();\r\n                }\r\n              }\r\n            }\r\n          }\r\n          return element;\r\n        };\r\n      })(this);\r\n      rootElement = builder.create(rootName, this.options.xmldec, this.options.doctype, {\r\n        headless: this.options.headless,\r\n        allowSurrogateChars: this.options.allowSurrogateChars\r\n      });\r\n      return render(rootElement, rootObj).end(this.options.renderOpts);\r\n    };\r\n\r\n    return Builder;\r\n\r\n  })();\r\n\r\n}).call(this);\r\n\r\n},{\"./defaults\":120,\"xmlbuilder\":145}],120:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  exports.defaults = {\r\n    \"0.1\": {\r\n      explicitCharkey: false,\r\n      trim: true,\r\n      normalize: true,\r\n      normalizeTags: false,\r\n      attrkey: \"@\",\r\n      charkey: \"#\",\r\n      explicitArray: false,\r\n      ignoreAttrs: false,\r\n      mergeAttrs: false,\r\n      explicitRoot: false,\r\n      validator: null,\r\n      xmlns: false,\r\n      explicitChildren: false,\r\n      childkey: '@@',\r\n      charsAsChildren: false,\r\n      includeWhiteChars: false,\r\n      async: false,\r\n      strict: true,\r\n      attrNameProcessors: null,\r\n      attrValueProcessors: null,\r\n      tagNameProcessors: null,\r\n      valueProcessors: null,\r\n      emptyTag: ''\r\n    },\r\n    \"0.2\": {\r\n      explicitCharkey: false,\r\n      trim: false,\r\n      normalize: false,\r\n      normalizeTags: false,\r\n      attrkey: \"$\",\r\n      charkey: \"_\",\r\n      explicitArray: true,\r\n      ignoreAttrs: false,\r\n      mergeAttrs: false,\r\n      explicitRoot: true,\r\n      validator: null,\r\n      xmlns: false,\r\n      explicitChildren: false,\r\n      preserveChildrenOrder: false,\r\n      childkey: '$$',\r\n      charsAsChildren: false,\r\n      includeWhiteChars: false,\r\n      async: false,\r\n      strict: true,\r\n      attrNameProcessors: null,\r\n      attrValueProcessors: null,\r\n      tagNameProcessors: null,\r\n      valueProcessors: null,\r\n      rootName: 'root',\r\n      xmldec: {\r\n        'version': '1.0',\r\n        'encoding': 'UTF-8',\r\n        'standalone': true\r\n      },\r\n      doctype: null,\r\n      renderOpts: {\r\n        'pretty': true,\r\n        'indent': '  ',\r\n        'newline': '\\n'\r\n      },\r\n      headless: false,\r\n      chunkSize: 10000,\r\n      emptyTag: '',\r\n      cdata: false\r\n    }\r\n  };\r\n\r\n}).call(this);\r\n\r\n},{}],121:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  \"use strict\";\r\n  var bom, defaults, events, isEmpty, processItem, processors, sax, setImmediate,\r\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  sax = require('sax');\r\n\r\n  events = require('events');\r\n\r\n  bom = require('./bom');\r\n\r\n  processors = require('./processors');\r\n\r\n  setImmediate = require('timers').setImmediate;\r\n\r\n  defaults = require('./defaults').defaults;\r\n\r\n  isEmpty = function(thing) {\r\n    return typeof thing === \"object\" && (thing != null) && Object.keys(thing).length === 0;\r\n  };\r\n\r\n  processItem = function(processors, item, key) {\r\n    var i, len, process;\r\n    for (i = 0, len = processors.length; i < len; i++) {\r\n      process = processors[i];\r\n      item = process(item, key);\r\n    }\r\n    return item;\r\n  };\r\n\r\n  exports.Parser = (function(superClass) {\r\n    extend(Parser, superClass);\r\n\r\n    function Parser(opts) {\r\n      this.parseString = bind(this.parseString, this);\r\n      this.reset = bind(this.reset, this);\r\n      this.assignOrPush = bind(this.assignOrPush, this);\r\n      this.processAsync = bind(this.processAsync, this);\r\n      var key, ref, value;\r\n      if (!(this instanceof exports.Parser)) {\r\n        return new exports.Parser(opts);\r\n      }\r\n      this.options = {};\r\n      ref = defaults[\"0.2\"];\r\n      for (key in ref) {\r\n        if (!hasProp.call(ref, key)) continue;\r\n        value = ref[key];\r\n        this.options[key] = value;\r\n      }\r\n      for (key in opts) {\r\n        if (!hasProp.call(opts, key)) continue;\r\n        value = opts[key];\r\n        this.options[key] = value;\r\n      }\r\n      if (this.options.xmlns) {\r\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\r\n      }\r\n      if (this.options.normalizeTags) {\r\n        if (!this.options.tagNameProcessors) {\r\n          this.options.tagNameProcessors = [];\r\n        }\r\n        this.options.tagNameProcessors.unshift(processors.normalize);\r\n      }\r\n      this.reset();\r\n    }\r\n\r\n    Parser.prototype.processAsync = function() {\r\n      var chunk, err;\r\n      try {\r\n        if (this.remaining.length <= this.options.chunkSize) {\r\n          chunk = this.remaining;\r\n          this.remaining = '';\r\n          this.saxParser = this.saxParser.write(chunk);\r\n          return this.saxParser.close();\r\n        } else {\r\n          chunk = this.remaining.substr(0, this.options.chunkSize);\r\n          this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);\r\n          this.saxParser = this.saxParser.write(chunk);\r\n          return setImmediate(this.processAsync);\r\n        }\r\n      } catch (error1) {\r\n        err = error1;\r\n        if (!this.saxParser.errThrown) {\r\n          this.saxParser.errThrown = true;\r\n          return this.emit(err);\r\n        }\r\n      }\r\n    };\r\n\r\n    Parser.prototype.assignOrPush = function(obj, key, newValue) {\r\n      if (!(key in obj)) {\r\n        if (!this.options.explicitArray) {\r\n          return obj[key] = newValue;\r\n        } else {\r\n          return obj[key] = [newValue];\r\n        }\r\n      } else {\r\n        if (!(obj[key] instanceof Array)) {\r\n          obj[key] = [obj[key]];\r\n        }\r\n        return obj[key].push(newValue);\r\n      }\r\n    };\r\n\r\n    Parser.prototype.reset = function() {\r\n      var attrkey, charkey, ontext, stack;\r\n      this.removeAllListeners();\r\n      this.saxParser = sax.parser(this.options.strict, {\r\n        trim: false,\r\n        normalize: false,\r\n        xmlns: this.options.xmlns\r\n      });\r\n      this.saxParser.errThrown = false;\r\n      this.saxParser.onerror = (function(_this) {\r\n        return function(error) {\r\n          _this.saxParser.resume();\r\n          if (!_this.saxParser.errThrown) {\r\n            _this.saxParser.errThrown = true;\r\n            return _this.emit(\"error\", error);\r\n          }\r\n        };\r\n      })(this);\r\n      this.saxParser.onend = (function(_this) {\r\n        return function() {\r\n          if (!_this.saxParser.ended) {\r\n            _this.saxParser.ended = true;\r\n            return _this.emit(\"end\", _this.resultObject);\r\n          }\r\n        };\r\n      })(this);\r\n      this.saxParser.ended = false;\r\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\r\n      this.resultObject = null;\r\n      stack = [];\r\n      attrkey = this.options.attrkey;\r\n      charkey = this.options.charkey;\r\n      this.saxParser.onopentag = (function(_this) {\r\n        return function(node) {\r\n          var key, newValue, obj, processedKey, ref;\r\n          obj = {};\r\n          obj[charkey] = \"\";\r\n          if (!_this.options.ignoreAttrs) {\r\n            ref = node.attributes;\r\n            for (key in ref) {\r\n              if (!hasProp.call(ref, key)) continue;\r\n              if (!(attrkey in obj) && !_this.options.mergeAttrs) {\r\n                obj[attrkey] = {};\r\n              }\r\n              newValue = _this.options.attrValueProcessors ? processItem(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];\r\n              processedKey = _this.options.attrNameProcessors ? processItem(_this.options.attrNameProcessors, key) : key;\r\n              if (_this.options.mergeAttrs) {\r\n                _this.assignOrPush(obj, processedKey, newValue);\r\n              } else {\r\n                obj[attrkey][processedKey] = newValue;\r\n              }\r\n            }\r\n          }\r\n          obj[\"#name\"] = _this.options.tagNameProcessors ? processItem(_this.options.tagNameProcessors, node.name) : node.name;\r\n          if (_this.options.xmlns) {\r\n            obj[_this.options.xmlnskey] = {\r\n              uri: node.uri,\r\n              local: node.local\r\n            };\r\n          }\r\n          return stack.push(obj);\r\n        };\r\n      })(this);\r\n      this.saxParser.onclosetag = (function(_this) {\r\n        return function() {\r\n          var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath;\r\n          obj = stack.pop();\r\n          nodeName = obj[\"#name\"];\r\n          if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {\r\n            delete obj[\"#name\"];\r\n          }\r\n          if (obj.cdata === true) {\r\n            cdata = obj.cdata;\r\n            delete obj.cdata;\r\n          }\r\n          s = stack[stack.length - 1];\r\n          if (obj[charkey].match(/^\\s*$/) && !cdata) {\r\n            emptyStr = obj[charkey];\r\n            delete obj[charkey];\r\n          } else {\r\n            if (_this.options.trim) {\r\n              obj[charkey] = obj[charkey].trim();\r\n            }\r\n            if (_this.options.normalize) {\r\n              obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\r\n            }\r\n            obj[charkey] = _this.options.valueProcessors ? processItem(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];\r\n            if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\r\n              obj = obj[charkey];\r\n            }\r\n          }\r\n          if (isEmpty(obj)) {\r\n            obj = _this.options.emptyTag !== '' ? _this.options.emptyTag : emptyStr;\r\n          }\r\n          if (_this.options.validator != null) {\r\n            xpath = \"/\" + ((function() {\r\n              var i, len, results;\r\n              results = [];\r\n              for (i = 0, len = stack.length; i < len; i++) {\r\n                node = stack[i];\r\n                results.push(node[\"#name\"]);\r\n              }\r\n              return results;\r\n            })()).concat(nodeName).join(\"/\");\r\n            (function() {\r\n              var err;\r\n              try {\r\n                return obj = _this.options.validator(xpath, s && s[nodeName], obj);\r\n              } catch (error1) {\r\n                err = error1;\r\n                return _this.emit(\"error\", err);\r\n              }\r\n            })();\r\n          }\r\n          if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\r\n            if (!_this.options.preserveChildrenOrder) {\r\n              node = {};\r\n              if (_this.options.attrkey in obj) {\r\n                node[_this.options.attrkey] = obj[_this.options.attrkey];\r\n                delete obj[_this.options.attrkey];\r\n              }\r\n              if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\r\n                node[_this.options.charkey] = obj[_this.options.charkey];\r\n                delete obj[_this.options.charkey];\r\n              }\r\n              if (Object.getOwnPropertyNames(obj).length > 0) {\r\n                node[_this.options.childkey] = obj;\r\n              }\r\n              obj = node;\r\n            } else if (s) {\r\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\r\n              objClone = {};\r\n              for (key in obj) {\r\n                if (!hasProp.call(obj, key)) continue;\r\n                objClone[key] = obj[key];\r\n              }\r\n              s[_this.options.childkey].push(objClone);\r\n              delete obj[\"#name\"];\r\n              if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\r\n                obj = obj[charkey];\r\n              }\r\n            }\r\n          }\r\n          if (stack.length > 0) {\r\n            return _this.assignOrPush(s, nodeName, obj);\r\n          } else {\r\n            if (_this.options.explicitRoot) {\r\n              old = obj;\r\n              obj = {};\r\n              obj[nodeName] = old;\r\n            }\r\n            _this.resultObject = obj;\r\n            _this.saxParser.ended = true;\r\n            return _this.emit(\"end\", _this.resultObject);\r\n          }\r\n        };\r\n      })(this);\r\n      ontext = (function(_this) {\r\n        return function(text) {\r\n          var charChild, s;\r\n          s = stack[stack.length - 1];\r\n          if (s) {\r\n            s[charkey] += text;\r\n            if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\n/g, '').trim() !== '')) {\r\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\r\n              charChild = {\r\n                '#name': '__text__'\r\n              };\r\n              charChild[charkey] = text;\r\n              if (_this.options.normalize) {\r\n                charChild[charkey] = charChild[charkey].replace(/\\s{2,}/g, \" \").trim();\r\n              }\r\n              s[_this.options.childkey].push(charChild);\r\n            }\r\n            return s;\r\n          }\r\n        };\r\n      })(this);\r\n      this.saxParser.ontext = ontext;\r\n      return this.saxParser.oncdata = (function(_this) {\r\n        return function(text) {\r\n          var s;\r\n          s = ontext(text);\r\n          if (s) {\r\n            return s.cdata = true;\r\n          }\r\n        };\r\n      })(this);\r\n    };\r\n\r\n    Parser.prototype.parseString = function(str, cb) {\r\n      var err;\r\n      if ((cb != null) && typeof cb === \"function\") {\r\n        this.on(\"end\", function(result) {\r\n          this.reset();\r\n          return cb(null, result);\r\n        });\r\n        this.on(\"error\", function(err) {\r\n          this.reset();\r\n          return cb(err);\r\n        });\r\n      }\r\n      try {\r\n        str = str.toString();\r\n        if (str.trim() === '') {\r\n          this.emit(\"end\", null);\r\n          return true;\r\n        }\r\n        str = bom.stripBOM(str);\r\n        if (this.options.async) {\r\n          this.remaining = str;\r\n          setImmediate(this.processAsync);\r\n          return this.saxParser;\r\n        }\r\n        return this.saxParser.write(str).close();\r\n      } catch (error1) {\r\n        err = error1;\r\n        if (!(this.saxParser.errThrown || this.saxParser.ended)) {\r\n          this.emit('error', err);\r\n          return this.saxParser.errThrown = true;\r\n        } else if (this.saxParser.ended) {\r\n          throw err;\r\n        }\r\n      }\r\n    };\r\n\r\n    return Parser;\r\n\r\n  })(events.EventEmitter);\r\n\r\n  exports.parseString = function(str, a, b) {\r\n    var cb, options, parser;\r\n    if (b != null) {\r\n      if (typeof b === 'function') {\r\n        cb = b;\r\n      }\r\n      if (typeof a === 'object') {\r\n        options = a;\r\n      }\r\n    } else {\r\n      if (typeof a === 'function') {\r\n        cb = a;\r\n      }\r\n      options = {};\r\n    }\r\n    parser = new exports.Parser(options);\r\n    return parser.parseString(str, cb);\r\n  };\r\n\r\n}).call(this);\r\n\r\n},{\"./bom\":118,\"./defaults\":120,\"./processors\":122,\"events\":47,\"sax\":111,\"timers\":114}],122:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  \"use strict\";\r\n  var prefixMatch;\r\n\r\n  prefixMatch = new RegExp(/(?!xmlns)^.*:/);\r\n\r\n  exports.normalize = function(str) {\r\n    return str.toLowerCase();\r\n  };\r\n\r\n  exports.firstCharLowerCase = function(str) {\r\n    return str.charAt(0).toLowerCase() + str.slice(1);\r\n  };\r\n\r\n  exports.stripPrefix = function(str) {\r\n    return str.replace(prefixMatch, '');\r\n  };\r\n\r\n  exports.parseNumbers = function(str) {\r\n    if (!isNaN(str)) {\r\n      str = str % 1 === 0 ? parseInt(str, 10) : parseFloat(str);\r\n    }\r\n    return str;\r\n  };\r\n\r\n  exports.parseBooleans = function(str) {\r\n    if (/^(?:true|false)$/i.test(str)) {\r\n      str = str.toLowerCase() === 'true';\r\n    }\r\n    return str;\r\n  };\r\n\r\n}).call(this);\r\n\r\n},{}],123:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  \"use strict\";\r\n  var builder, defaults, parser, processors,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  defaults = require('./defaults');\r\n\r\n  builder = require('./builder');\r\n\r\n  parser = require('./parser');\r\n\r\n  processors = require('./processors');\r\n\r\n  exports.defaults = defaults.defaults;\r\n\r\n  exports.processors = processors;\r\n\r\n  exports.ValidationError = (function(superClass) {\r\n    extend(ValidationError, superClass);\r\n\r\n    function ValidationError(message) {\r\n      this.message = message;\r\n    }\r\n\r\n    return ValidationError;\r\n\r\n  })(Error);\r\n\r\n  exports.Builder = builder.Builder;\r\n\r\n  exports.Parser = parser.Parser;\r\n\r\n  exports.parseString = parser.parseString;\r\n\r\n}).call(this);\r\n\r\n},{\"./builder\":119,\"./defaults\":120,\"./parser\":121,\"./processors\":122}],124:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var assign, isArray, isEmpty, isFunction, isObject, isPlainObject,\r\n    slice = [].slice,\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  assign = function() {\r\n    var i, key, len, source, sources, target;\r\n    target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [];\r\n    if (isFunction(Object.assign)) {\r\n      Object.assign.apply(null, arguments);\r\n    } else {\r\n      for (i = 0, len = sources.length; i < len; i++) {\r\n        source = sources[i];\r\n        if (source != null) {\r\n          for (key in source) {\r\n            if (!hasProp.call(source, key)) continue;\r\n            target[key] = source[key];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return target;\r\n  };\r\n\r\n  isFunction = function(val) {\r\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\r\n  };\r\n\r\n  isObject = function(val) {\r\n    var ref;\r\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\r\n  };\r\n\r\n  isArray = function(val) {\r\n    if (isFunction(Array.isArray)) {\r\n      return Array.isArray(val);\r\n    } else {\r\n      return Object.prototype.toString.call(val) === '[object Array]';\r\n    }\r\n  };\r\n\r\n  isEmpty = function(val) {\r\n    var key;\r\n    if (isArray(val)) {\r\n      return !val.length;\r\n    } else {\r\n      for (key in val) {\r\n        if (!hasProp.call(val, key)) continue;\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n  };\r\n\r\n  isPlainObject = function(val) {\r\n    var ctor, proto;\r\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));\r\n  };\r\n\r\n  module.exports.assign = assign;\r\n\r\n  module.exports.isFunction = isFunction;\r\n\r\n  module.exports.isObject = isObject;\r\n\r\n  module.exports.isArray = isArray;\r\n\r\n  module.exports.isEmpty = isEmpty;\r\n\r\n  module.exports.isPlainObject = isPlainObject;\r\n\r\n}).call(this);\r\n\r\n},{}],125:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLAttribute;\r\n\r\n  module.exports = XMLAttribute = (function() {\r\n    function XMLAttribute(parent, name, value) {\r\n      this.options = parent.options;\r\n      this.stringify = parent.stringify;\r\n      if (name == null) {\r\n        throw new Error(\"Missing attribute name of element \" + parent.name);\r\n      }\r\n      if (value == null) {\r\n        throw new Error(\"Missing attribute value for attribute \" + name + \" of element \" + parent.name);\r\n      }\r\n      this.name = this.stringify.attName(name);\r\n      this.value = this.stringify.attValue(value);\r\n    }\r\n\r\n    XMLAttribute.prototype.clone = function() {\r\n      return Object.create(this);\r\n    };\r\n\r\n    XMLAttribute.prototype.toString = function(options) {\r\n      return this.options.writer.set(options).attribute(this);\r\n    };\r\n\r\n    return XMLAttribute;\r\n\r\n  })();\r\n\r\n}).call(this);\r\n\r\n},{}],126:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLCData, XMLNode,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  module.exports = XMLCData = (function(superClass) {\r\n    extend(XMLCData, superClass);\r\n\r\n    function XMLCData(parent, text) {\r\n      XMLCData.__super__.constructor.call(this, parent);\r\n      if (text == null) {\r\n        throw new Error(\"Missing CDATA text\");\r\n      }\r\n      this.text = this.stringify.cdata(text);\r\n    }\r\n\r\n    XMLCData.prototype.clone = function() {\r\n      return Object.create(this);\r\n    };\r\n\r\n    XMLCData.prototype.toString = function(options) {\r\n      return this.options.writer.set(options).cdata(this);\r\n    };\r\n\r\n    return XMLCData;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n\r\n},{\"./XMLNode\":137}],127:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLComment, XMLNode,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  module.exports = XMLComment = (function(superClass) {\r\n    extend(XMLComment, superClass);\r\n\r\n    function XMLComment(parent, text) {\r\n      XMLComment.__super__.constructor.call(this, parent);\r\n      if (text == null) {\r\n        throw new Error(\"Missing comment text\");\r\n      }\r\n      this.text = this.stringify.comment(text);\r\n    }\r\n\r\n    XMLComment.prototype.clone = function() {\r\n      return Object.create(this);\r\n    };\r\n\r\n    XMLComment.prototype.toString = function(options) {\r\n      return this.options.writer.set(options).comment(this);\r\n    };\r\n\r\n    return XMLComment;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n\r\n},{\"./XMLNode\":137}],128:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLDTDAttList, XMLNode,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  module.exports = XMLDTDAttList = (function(superClass) {\r\n    extend(XMLDTDAttList, superClass);\r\n\r\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\r\n      XMLDTDAttList.__super__.constructor.call(this, parent);\r\n      if (elementName == null) {\r\n        throw new Error(\"Missing DTD element name\");\r\n      }\r\n      if (attributeName == null) {\r\n        throw new Error(\"Missing DTD attribute name\");\r\n      }\r\n      if (!attributeType) {\r\n        throw new Error(\"Missing DTD attribute type\");\r\n      }\r\n      if (!defaultValueType) {\r\n        throw new Error(\"Missing DTD attribute default\");\r\n      }\r\n      if (defaultValueType.indexOf('#') !== 0) {\r\n        defaultValueType = '#' + defaultValueType;\r\n      }\r\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\r\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT\");\r\n      }\r\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\r\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT\");\r\n      }\r\n      this.elementName = this.stringify.eleName(elementName);\r\n      this.attributeName = this.stringify.attName(attributeName);\r\n      this.attributeType = this.stringify.dtdAttType(attributeType);\r\n      this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\r\n      this.defaultValueType = defaultValueType;\r\n    }\r\n\r\n    XMLDTDAttList.prototype.toString = function(options) {\r\n      return this.options.writer.set(options).dtdAttList(this);\r\n    };\r\n\r\n    return XMLDTDAttList;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n\r\n},{\"./XMLNode\":137}],129:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLDTDElement, XMLNode,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  module.exports = XMLDTDElement = (function(superClass) {\r\n    extend(XMLDTDElement, superClass);\r\n\r\n    function XMLDTDElement(parent, name, value) {\r\n      XMLDTDElement.__super__.constructor.call(this, parent);\r\n      if (name == null) {\r\n        throw new Error(\"Missing DTD element name\");\r\n      }\r\n      if (!value) {\r\n        value = '(#PCDATA)';\r\n      }\r\n      if (Array.isArray(value)) {\r\n        value = '(' + value.join(',') + ')';\r\n      }\r\n      this.name = this.stringify.eleName(name);\r\n      this.value = this.stringify.dtdElementValue(value);\r\n    }\r\n\r\n    XMLDTDElement.prototype.toString = function(options) {\r\n      return this.options.writer.set(options).dtdElement(this);\r\n    };\r\n\r\n    return XMLDTDElement;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n\r\n},{\"./XMLNode\":137}],130:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLDTDEntity, XMLNode, isObject,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  isObject = require('./Utility').isObject;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  module.exports = XMLDTDEntity = (function(superClass) {\r\n    extend(XMLDTDEntity, superClass);\r\n\r\n    function XMLDTDEntity(parent, pe, name, value) {\r\n      XMLDTDEntity.__super__.constructor.call(this, parent);\r\n      if (name == null) {\r\n        throw new Error(\"Missing entity name\");\r\n      }\r\n      if (value == null) {\r\n        throw new Error(\"Missing entity value\");\r\n      }\r\n      this.pe = !!pe;\r\n      this.name = this.stringify.eleName(name);\r\n      if (!isObject(value)) {\r\n        this.value = this.stringify.dtdEntityValue(value);\r\n      } else {\r\n        if (!value.pubID && !value.sysID) {\r\n          throw new Error(\"Public and/or system identifiers are required for an external entity\");\r\n        }\r\n        if (value.pubID && !value.sysID) {\r\n          throw new Error(\"System identifier is required for a public external entity\");\r\n        }\r\n        if (value.pubID != null) {\r\n          this.pubID = this.stringify.dtdPubID(value.pubID);\r\n        }\r\n        if (value.sysID != null) {\r\n          this.sysID = this.stringify.dtdSysID(value.sysID);\r\n        }\r\n        if (value.nData != null) {\r\n          this.nData = this.stringify.dtdNData(value.nData);\r\n        }\r\n        if (this.pe && this.nData) {\r\n          throw new Error(\"Notation declaration is not allowed in a parameter entity\");\r\n        }\r\n      }\r\n    }\r\n\r\n    XMLDTDEntity.prototype.toString = function(options) {\r\n      return this.options.writer.set(options).dtdEntity(this);\r\n    };\r\n\r\n    return XMLDTDEntity;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n\r\n},{\"./Utility\":124,\"./XMLNode\":137}],131:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLDTDNotation, XMLNode,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  module.exports = XMLDTDNotation = (function(superClass) {\r\n    extend(XMLDTDNotation, superClass);\r\n\r\n    function XMLDTDNotation(parent, name, value) {\r\n      XMLDTDNotation.__super__.constructor.call(this, parent);\r\n      if (name == null) {\r\n        throw new Error(\"Missing notation name\");\r\n      }\r\n      if (!value.pubID && !value.sysID) {\r\n        throw new Error(\"Public or system identifiers are required for an external entity\");\r\n      }\r\n      this.name = this.stringify.eleName(name);\r\n      if (value.pubID != null) {\r\n        this.pubID = this.stringify.dtdPubID(value.pubID);\r\n      }\r\n      if (value.sysID != null) {\r\n        this.sysID = this.stringify.dtdSysID(value.sysID);\r\n      }\r\n    }\r\n\r\n    XMLDTDNotation.prototype.toString = function(options) {\r\n      return this.options.writer.set(options).dtdNotation(this);\r\n    };\r\n\r\n    return XMLDTDNotation;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n\r\n},{\"./XMLNode\":137}],132:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLDeclaration, XMLNode, isObject,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  isObject = require('./Utility').isObject;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  module.exports = XMLDeclaration = (function(superClass) {\r\n    extend(XMLDeclaration, superClass);\r\n\r\n    function XMLDeclaration(parent, version, encoding, standalone) {\r\n      var ref;\r\n      XMLDeclaration.__super__.constructor.call(this, parent);\r\n      if (isObject(version)) {\r\n        ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;\r\n      }\r\n      if (!version) {\r\n        version = '1.0';\r\n      }\r\n      this.version = this.stringify.xmlVersion(version);\r\n      if (encoding != null) {\r\n        this.encoding = this.stringify.xmlEncoding(encoding);\r\n      }\r\n      if (standalone != null) {\r\n        this.standalone = this.stringify.xmlStandalone(standalone);\r\n      }\r\n    }\r\n\r\n    XMLDeclaration.prototype.toString = function(options) {\r\n      return this.options.writer.set(options).declaration(this);\r\n    };\r\n\r\n    return XMLDeclaration;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n\r\n},{\"./Utility\":124,\"./XMLNode\":137}],133:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNode, isObject,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  isObject = require('./Utility').isObject;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  XMLDTDAttList = require('./XMLDTDAttList');\r\n\r\n  XMLDTDEntity = require('./XMLDTDEntity');\r\n\r\n  XMLDTDElement = require('./XMLDTDElement');\r\n\r\n  XMLDTDNotation = require('./XMLDTDNotation');\r\n\r\n  module.exports = XMLDocType = (function(superClass) {\r\n    extend(XMLDocType, superClass);\r\n\r\n    function XMLDocType(parent, pubID, sysID) {\r\n      var ref, ref1;\r\n      XMLDocType.__super__.constructor.call(this, parent);\r\n      this.documentObject = parent;\r\n      if (isObject(pubID)) {\r\n        ref = pubID, pubID = ref.pubID, sysID = ref.sysID;\r\n      }\r\n      if (sysID == null) {\r\n        ref1 = [pubID, sysID], sysID = ref1[0], pubID = ref1[1];\r\n      }\r\n      if (pubID != null) {\r\n        this.pubID = this.stringify.dtdPubID(pubID);\r\n      }\r\n      if (sysID != null) {\r\n        this.sysID = this.stringify.dtdSysID(sysID);\r\n      }\r\n    }\r\n\r\n    XMLDocType.prototype.element = function(name, value) {\r\n      var child;\r\n      child = new XMLDTDElement(this, name, value);\r\n      this.children.push(child);\r\n      return this;\r\n    };\r\n\r\n    XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\r\n      var child;\r\n      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\r\n      this.children.push(child);\r\n      return this;\r\n    };\r\n\r\n    XMLDocType.prototype.entity = function(name, value) {\r\n      var child;\r\n      child = new XMLDTDEntity(this, false, name, value);\r\n      this.children.push(child);\r\n      return this;\r\n    };\r\n\r\n    XMLDocType.prototype.pEntity = function(name, value) {\r\n      var child;\r\n      child = new XMLDTDEntity(this, true, name, value);\r\n      this.children.push(child);\r\n      return this;\r\n    };\r\n\r\n    XMLDocType.prototype.notation = function(name, value) {\r\n      var child;\r\n      child = new XMLDTDNotation(this, name, value);\r\n      this.children.push(child);\r\n      return this;\r\n    };\r\n\r\n    XMLDocType.prototype.toString = function(options) {\r\n      return this.options.writer.set(options).docType(this);\r\n    };\r\n\r\n    XMLDocType.prototype.ele = function(name, value) {\r\n      return this.element(name, value);\r\n    };\r\n\r\n    XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\r\n      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\r\n    };\r\n\r\n    XMLDocType.prototype.ent = function(name, value) {\r\n      return this.entity(name, value);\r\n    };\r\n\r\n    XMLDocType.prototype.pent = function(name, value) {\r\n      return this.pEntity(name, value);\r\n    };\r\n\r\n    XMLDocType.prototype.not = function(name, value) {\r\n      return this.notation(name, value);\r\n    };\r\n\r\n    XMLDocType.prototype.up = function() {\r\n      return this.root() || this.documentObject;\r\n    };\r\n\r\n    return XMLDocType;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n\r\n},{\"./Utility\":124,\"./XMLDTDAttList\":128,\"./XMLDTDElement\":129,\"./XMLDTDEntity\":130,\"./XMLDTDNotation\":131,\"./XMLNode\":137}],134:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  isPlainObject = require('./Utility').isPlainObject;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  XMLStringifier = require('./XMLStringifier');\r\n\r\n  XMLStringWriter = require('./XMLStringWriter');\r\n\r\n  module.exports = XMLDocument = (function(superClass) {\r\n    extend(XMLDocument, superClass);\r\n\r\n    function XMLDocument(options) {\r\n      XMLDocument.__super__.constructor.call(this, null);\r\n      options || (options = {});\r\n      if (!options.writer) {\r\n        options.writer = new XMLStringWriter();\r\n      }\r\n      this.options = options;\r\n      this.stringify = new XMLStringifier(options);\r\n      this.isDocument = true;\r\n    }\r\n\r\n    XMLDocument.prototype.end = function(writer) {\r\n      var writerOptions;\r\n      if (!writer) {\r\n        writer = this.options.writer;\r\n      } else if (isPlainObject(writer)) {\r\n        writerOptions = writer;\r\n        writer = this.options.writer.set(writerOptions);\r\n      }\r\n      return writer.document(this);\r\n    };\r\n\r\n    XMLDocument.prototype.toString = function(options) {\r\n      return this.options.writer.set(options).document(this);\r\n    };\r\n\r\n    return XMLDocument;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n\r\n},{\"./Utility\":124,\"./XMLNode\":137,\"./XMLStringWriter\":141,\"./XMLStringifier\":142}],135:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, isFunction, isObject, isPlainObject, ref,\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject;\r\n\r\n  XMLElement = require('./XMLElement');\r\n\r\n  XMLCData = require('./XMLCData');\r\n\r\n  XMLComment = require('./XMLComment');\r\n\r\n  XMLRaw = require('./XMLRaw');\r\n\r\n  XMLText = require('./XMLText');\r\n\r\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\r\n\r\n  XMLDeclaration = require('./XMLDeclaration');\r\n\r\n  XMLDocType = require('./XMLDocType');\r\n\r\n  XMLDTDAttList = require('./XMLDTDAttList');\r\n\r\n  XMLDTDEntity = require('./XMLDTDEntity');\r\n\r\n  XMLDTDElement = require('./XMLDTDElement');\r\n\r\n  XMLDTDNotation = require('./XMLDTDNotation');\r\n\r\n  XMLAttribute = require('./XMLAttribute');\r\n\r\n  XMLStringifier = require('./XMLStringifier');\r\n\r\n  XMLStringWriter = require('./XMLStringWriter');\r\n\r\n  module.exports = XMLDocumentCB = (function() {\r\n    function XMLDocumentCB(options, onData, onEnd) {\r\n      var writerOptions;\r\n      options || (options = {});\r\n      if (!options.writer) {\r\n        options.writer = new XMLStringWriter(options);\r\n      } else if (isPlainObject(options.writer)) {\r\n        writerOptions = options.writer;\r\n        options.writer = new XMLStringWriter(writerOptions);\r\n      }\r\n      this.options = options;\r\n      this.writer = options.writer;\r\n      this.stringify = new XMLStringifier(options);\r\n      this.onDataCallback = onData || function() {};\r\n      this.onEndCallback = onEnd || function() {};\r\n      this.currentNode = null;\r\n      this.currentLevel = -1;\r\n      this.openTags = {};\r\n      this.documentStarted = false;\r\n      this.documentCompleted = false;\r\n      this.root = null;\r\n    }\r\n\r\n    XMLDocumentCB.prototype.node = function(name, attributes, text) {\r\n      var ref1;\r\n      if (name == null) {\r\n        throw new Error(\"Missing node name\");\r\n      }\r\n      if (this.root && this.currentLevel === -1) {\r\n        throw new Error(\"Document can only have one root node\");\r\n      }\r\n      this.openCurrent();\r\n      name = name.valueOf();\r\n      if (attributes == null) {\r\n        attributes = {};\r\n      }\r\n      attributes = attributes.valueOf();\r\n      if (!isObject(attributes)) {\r\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\r\n      }\r\n      this.currentNode = new XMLElement(this, name, attributes);\r\n      this.currentNode.children = false;\r\n      this.currentLevel++;\r\n      this.openTags[this.currentLevel] = this.currentNode;\r\n      if (text != null) {\r\n        this.text(text);\r\n      }\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.element = function(name, attributes, text) {\r\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\r\n        return this.dtdElement.apply(this, arguments);\r\n      } else {\r\n        return this.node(name, attributes, text);\r\n      }\r\n    };\r\n\r\n    XMLDocumentCB.prototype.attribute = function(name, value) {\r\n      var attName, attValue;\r\n      if (!this.currentNode || this.currentNode.children) {\r\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode\");\r\n      }\r\n      if (name != null) {\r\n        name = name.valueOf();\r\n      }\r\n      if (isObject(name)) {\r\n        for (attName in name) {\r\n          if (!hasProp.call(name, attName)) continue;\r\n          attValue = name[attName];\r\n          this.attribute(attName, attValue);\r\n        }\r\n      } else {\r\n        if (isFunction(value)) {\r\n          value = value.apply();\r\n        }\r\n        if (!this.options.skipNullAttributes || (value != null)) {\r\n          this.currentNode.attributes[name] = new XMLAttribute(this, name, value);\r\n        }\r\n      }\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.text = function(value) {\r\n      var node;\r\n      this.openCurrent();\r\n      node = new XMLText(this, value);\r\n      this.onData(this.writer.text(node, this.currentLevel + 1));\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.cdata = function(value) {\r\n      var node;\r\n      this.openCurrent();\r\n      node = new XMLCData(this, value);\r\n      this.onData(this.writer.cdata(node, this.currentLevel + 1));\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.comment = function(value) {\r\n      var node;\r\n      this.openCurrent();\r\n      node = new XMLComment(this, value);\r\n      this.onData(this.writer.comment(node, this.currentLevel + 1));\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.raw = function(value) {\r\n      var node;\r\n      this.openCurrent();\r\n      node = new XMLRaw(this, value);\r\n      this.onData(this.writer.raw(node, this.currentLevel + 1));\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.instruction = function(target, value) {\r\n      var i, insTarget, insValue, len, node;\r\n      this.openCurrent();\r\n      if (target != null) {\r\n        target = target.valueOf();\r\n      }\r\n      if (value != null) {\r\n        value = value.valueOf();\r\n      }\r\n      if (Array.isArray(target)) {\r\n        for (i = 0, len = target.length; i < len; i++) {\r\n          insTarget = target[i];\r\n          this.instruction(insTarget);\r\n        }\r\n      } else if (isObject(target)) {\r\n        for (insTarget in target) {\r\n          if (!hasProp.call(target, insTarget)) continue;\r\n          insValue = target[insTarget];\r\n          this.instruction(insTarget, insValue);\r\n        }\r\n      } else {\r\n        if (isFunction(value)) {\r\n          value = value.apply();\r\n        }\r\n        node = new XMLProcessingInstruction(this, target, value);\r\n        this.onData(this.writer.processingInstruction(node, this.currentLevel + 1));\r\n      }\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {\r\n      var node;\r\n      this.openCurrent();\r\n      if (this.documentStarted) {\r\n        throw new Error(\"declaration() must be the first node\");\r\n      }\r\n      node = new XMLDeclaration(this, version, encoding, standalone);\r\n      this.onData(this.writer.declaration(node, this.currentLevel + 1));\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.doctype = function(root, pubID, sysID) {\r\n      this.openCurrent();\r\n      if (root == null) {\r\n        throw new Error(\"Missing root node name\");\r\n      }\r\n      if (this.root) {\r\n        throw new Error(\"dtd() must come before the root node\");\r\n      }\r\n      this.currentNode = new XMLDocType(this, pubID, sysID);\r\n      this.currentNode.rootNodeName = root;\r\n      this.currentNode.children = false;\r\n      this.currentLevel++;\r\n      this.openTags[this.currentLevel] = this.currentNode;\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.dtdElement = function(name, value) {\r\n      var node;\r\n      this.openCurrent();\r\n      node = new XMLDTDElement(this, name, value);\r\n      this.onData(this.writer.dtdElement(node, this.currentLevel + 1));\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\r\n      var node;\r\n      this.openCurrent();\r\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\r\n      this.onData(this.writer.dtdAttList(node, this.currentLevel + 1));\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.entity = function(name, value) {\r\n      var node;\r\n      this.openCurrent();\r\n      node = new XMLDTDEntity(this, false, name, value);\r\n      this.onData(this.writer.dtdEntity(node, this.currentLevel + 1));\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.pEntity = function(name, value) {\r\n      var node;\r\n      this.openCurrent();\r\n      node = new XMLDTDEntity(this, true, name, value);\r\n      this.onData(this.writer.dtdEntity(node, this.currentLevel + 1));\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.notation = function(name, value) {\r\n      var node;\r\n      this.openCurrent();\r\n      node = new XMLDTDNotation(this, name, value);\r\n      this.onData(this.writer.dtdNotation(node, this.currentLevel + 1));\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.up = function() {\r\n      if (this.currentLevel < 0) {\r\n        throw new Error(\"The document node has no parent\");\r\n      }\r\n      if (this.currentNode) {\r\n        if (this.currentNode.children) {\r\n          this.closeNode(this.currentNode);\r\n        } else {\r\n          this.openNode(this.currentNode);\r\n        }\r\n        this.currentNode = null;\r\n      } else {\r\n        this.closeNode(this.openTags[this.currentLevel]);\r\n      }\r\n      delete this.openTags[this.currentLevel];\r\n      this.currentLevel--;\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.end = function() {\r\n      while (this.currentLevel >= 0) {\r\n        this.up();\r\n      }\r\n      return this.onEnd();\r\n    };\r\n\r\n    XMLDocumentCB.prototype.openCurrent = function() {\r\n      if (this.currentNode) {\r\n        this.currentNode.children = true;\r\n        return this.openNode(this.currentNode);\r\n      }\r\n    };\r\n\r\n    XMLDocumentCB.prototype.openNode = function(node) {\r\n      if (!node.isOpen) {\r\n        if (!this.root && this.currentLevel === 0 && node instanceof XMLElement) {\r\n          this.root = node;\r\n        }\r\n        this.onData(this.writer.openNode(node, this.currentLevel));\r\n        return node.isOpen = true;\r\n      }\r\n    };\r\n\r\n    XMLDocumentCB.prototype.closeNode = function(node) {\r\n      if (!node.isClosed) {\r\n        this.onData(this.writer.closeNode(node, this.currentLevel));\r\n        return node.isClosed = true;\r\n      }\r\n    };\r\n\r\n    XMLDocumentCB.prototype.onData = function(chunk) {\r\n      this.documentStarted = true;\r\n      return this.onDataCallback(chunk);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.onEnd = function() {\r\n      this.documentCompleted = true;\r\n      return this.onEndCallback();\r\n    };\r\n\r\n    XMLDocumentCB.prototype.ele = function() {\r\n      return this.element.apply(this, arguments);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.nod = function(name, attributes, text) {\r\n      return this.node(name, attributes, text);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.txt = function(value) {\r\n      return this.text(value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.dat = function(value) {\r\n      return this.cdata(value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.com = function(value) {\r\n      return this.comment(value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.ins = function(target, value) {\r\n      return this.instruction(target, value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {\r\n      return this.declaration(version, encoding, standalone);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.dtd = function(root, pubID, sysID) {\r\n      return this.doctype(root, pubID, sysID);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.e = function(name, attributes, text) {\r\n      return this.element(name, attributes, text);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.n = function(name, attributes, text) {\r\n      return this.node(name, attributes, text);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.t = function(value) {\r\n      return this.text(value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.d = function(value) {\r\n      return this.cdata(value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.c = function(value) {\r\n      return this.comment(value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.r = function(value) {\r\n      return this.raw(value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.i = function(target, value) {\r\n      return this.instruction(target, value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.att = function() {\r\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\r\n        return this.attList.apply(this, arguments);\r\n      } else {\r\n        return this.attribute.apply(this, arguments);\r\n      }\r\n    };\r\n\r\n    XMLDocumentCB.prototype.a = function() {\r\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\r\n        return this.attList.apply(this, arguments);\r\n      } else {\r\n        return this.attribute.apply(this, arguments);\r\n      }\r\n    };\r\n\r\n    XMLDocumentCB.prototype.ent = function(name, value) {\r\n      return this.entity(name, value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.pent = function(name, value) {\r\n      return this.pEntity(name, value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.not = function(name, value) {\r\n      return this.notation(name, value);\r\n    };\r\n\r\n    return XMLDocumentCB;\r\n\r\n  })();\r\n\r\n}).call(this);\r\n\r\n},{\"./Utility\":124,\"./XMLAttribute\":125,\"./XMLCData\":126,\"./XMLComment\":127,\"./XMLDTDAttList\":128,\"./XMLDTDElement\":129,\"./XMLDTDEntity\":130,\"./XMLDTDNotation\":131,\"./XMLDeclaration\":132,\"./XMLDocType\":133,\"./XMLElement\":136,\"./XMLProcessingInstruction\":138,\"./XMLRaw\":139,\"./XMLStringWriter\":141,\"./XMLStringifier\":142,\"./XMLText\":143}],136:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLAttribute, XMLElement, XMLNode, isFunction, isObject, ref,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  XMLAttribute = require('./XMLAttribute');\r\n\r\n  module.exports = XMLElement = (function(superClass) {\r\n    extend(XMLElement, superClass);\r\n\r\n    function XMLElement(parent, name, attributes) {\r\n      XMLElement.__super__.constructor.call(this, parent);\r\n      if (name == null) {\r\n        throw new Error(\"Missing element name\");\r\n      }\r\n      this.name = this.stringify.eleName(name);\r\n      this.attributes = {};\r\n      if (attributes != null) {\r\n        this.attribute(attributes);\r\n      }\r\n      if (parent.isDocument) {\r\n        this.isRoot = true;\r\n        this.documentObject = parent;\r\n        parent.rootObject = this;\r\n      }\r\n    }\r\n\r\n    XMLElement.prototype.clone = function() {\r\n      var att, attName, clonedSelf, ref1;\r\n      clonedSelf = Object.create(this);\r\n      if (clonedSelf.isRoot) {\r\n        clonedSelf.documentObject = null;\r\n      }\r\n      clonedSelf.attributes = {};\r\n      ref1 = this.attributes;\r\n      for (attName in ref1) {\r\n        if (!hasProp.call(ref1, attName)) continue;\r\n        att = ref1[attName];\r\n        clonedSelf.attributes[attName] = att.clone();\r\n      }\r\n      clonedSelf.children = [];\r\n      this.children.forEach(function(child) {\r\n        var clonedChild;\r\n        clonedChild = child.clone();\r\n        clonedChild.parent = clonedSelf;\r\n        return clonedSelf.children.push(clonedChild);\r\n      });\r\n      return clonedSelf;\r\n    };\r\n\r\n    XMLElement.prototype.attribute = function(name, value) {\r\n      var attName, attValue;\r\n      if (name != null) {\r\n        name = name.valueOf();\r\n      }\r\n      if (isObject(name)) {\r\n        for (attName in name) {\r\n          if (!hasProp.call(name, attName)) continue;\r\n          attValue = name[attName];\r\n          this.attribute(attName, attValue);\r\n        }\r\n      } else {\r\n        if (isFunction(value)) {\r\n          value = value.apply();\r\n        }\r\n        if (!this.options.skipNullAttributes || (value != null)) {\r\n          this.attributes[name] = new XMLAttribute(this, name, value);\r\n        }\r\n      }\r\n      return this;\r\n    };\r\n\r\n    XMLElement.prototype.removeAttribute = function(name) {\r\n      var attName, i, len;\r\n      if (name == null) {\r\n        throw new Error(\"Missing attribute name\");\r\n      }\r\n      name = name.valueOf();\r\n      if (Array.isArray(name)) {\r\n        for (i = 0, len = name.length; i < len; i++) {\r\n          attName = name[i];\r\n          delete this.attributes[attName];\r\n        }\r\n      } else {\r\n        delete this.attributes[name];\r\n      }\r\n      return this;\r\n    };\r\n\r\n    XMLElement.prototype.toString = function(options) {\r\n      return this.options.writer.set(options).element(this);\r\n    };\r\n\r\n    XMLElement.prototype.att = function(name, value) {\r\n      return this.attribute(name, value);\r\n    };\r\n\r\n    XMLElement.prototype.a = function(name, value) {\r\n      return this.attribute(name, value);\r\n    };\r\n\r\n    return XMLElement;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n\r\n},{\"./Utility\":124,\"./XMLAttribute\":125,\"./XMLNode\":137}],137:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLElement, XMLNode, XMLProcessingInstruction, XMLRaw, XMLText, isEmpty, isFunction, isObject, ref,\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isEmpty = ref.isEmpty;\r\n\r\n  XMLElement = null;\r\n\r\n  XMLCData = null;\r\n\r\n  XMLComment = null;\r\n\r\n  XMLDeclaration = null;\r\n\r\n  XMLDocType = null;\r\n\r\n  XMLRaw = null;\r\n\r\n  XMLText = null;\r\n\r\n  XMLProcessingInstruction = null;\r\n\r\n  module.exports = XMLNode = (function() {\r\n    function XMLNode(parent) {\r\n      this.parent = parent;\r\n      if (this.parent) {\r\n        this.options = this.parent.options;\r\n        this.stringify = this.parent.stringify;\r\n      }\r\n      this.children = [];\r\n      if (!XMLElement) {\r\n        XMLElement = require('./XMLElement');\r\n        XMLCData = require('./XMLCData');\r\n        XMLComment = require('./XMLComment');\r\n        XMLDeclaration = require('./XMLDeclaration');\r\n        XMLDocType = require('./XMLDocType');\r\n        XMLRaw = require('./XMLRaw');\r\n        XMLText = require('./XMLText');\r\n        XMLProcessingInstruction = require('./XMLProcessingInstruction');\r\n      }\r\n    }\r\n\r\n    XMLNode.prototype.element = function(name, attributes, text) {\r\n      var childNode, item, j, k, key, lastChild, len, len1, ref1, val;\r\n      lastChild = null;\r\n      if (attributes == null) {\r\n        attributes = {};\r\n      }\r\n      attributes = attributes.valueOf();\r\n      if (!isObject(attributes)) {\r\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\r\n      }\r\n      if (name != null) {\r\n        name = name.valueOf();\r\n      }\r\n      if (Array.isArray(name)) {\r\n        for (j = 0, len = name.length; j < len; j++) {\r\n          item = name[j];\r\n          lastChild = this.element(item);\r\n        }\r\n      } else if (isFunction(name)) {\r\n        lastChild = this.element(name.apply());\r\n      } else if (isObject(name)) {\r\n        for (key in name) {\r\n          if (!hasProp.call(name, key)) continue;\r\n          val = name[key];\r\n          if (isFunction(val)) {\r\n            val = val.apply();\r\n          }\r\n          if ((isObject(val)) && (isEmpty(val))) {\r\n            val = null;\r\n          }\r\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\r\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\r\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\r\n            for (k = 0, len1 = val.length; k < len1; k++) {\r\n              item = val[k];\r\n              childNode = {};\r\n              childNode[key] = item;\r\n              lastChild = this.element(childNode);\r\n            }\r\n          } else if (isObject(val)) {\r\n            lastChild = this.element(key);\r\n            lastChild.element(val);\r\n          } else {\r\n            lastChild = this.element(key, val);\r\n          }\r\n        }\r\n      } else {\r\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\r\n          lastChild = this.text(text);\r\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\r\n          lastChild = this.cdata(text);\r\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\r\n          lastChild = this.comment(text);\r\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\r\n          lastChild = this.raw(text);\r\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\r\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\r\n        } else {\r\n          lastChild = this.node(name, attributes, text);\r\n        }\r\n      }\r\n      if (lastChild == null) {\r\n        throw new Error(\"Could not create any elements with: \" + name);\r\n      }\r\n      return lastChild;\r\n    };\r\n\r\n    XMLNode.prototype.insertBefore = function(name, attributes, text) {\r\n      var child, i, removed;\r\n      if (this.isRoot) {\r\n        throw new Error(\"Cannot insert elements at root level\");\r\n      }\r\n      i = this.parent.children.indexOf(this);\r\n      removed = this.parent.children.splice(i);\r\n      child = this.parent.element(name, attributes, text);\r\n      Array.prototype.push.apply(this.parent.children, removed);\r\n      return child;\r\n    };\r\n\r\n    XMLNode.prototype.insertAfter = function(name, attributes, text) {\r\n      var child, i, removed;\r\n      if (this.isRoot) {\r\n        throw new Error(\"Cannot insert elements at root level\");\r\n      }\r\n      i = this.parent.children.indexOf(this);\r\n      removed = this.parent.children.splice(i + 1);\r\n      child = this.parent.element(name, attributes, text);\r\n      Array.prototype.push.apply(this.parent.children, removed);\r\n      return child;\r\n    };\r\n\r\n    XMLNode.prototype.remove = function() {\r\n      var i, ref1;\r\n      if (this.isRoot) {\r\n        throw new Error(\"Cannot remove the root element\");\r\n      }\r\n      i = this.parent.children.indexOf(this);\r\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref1 = [])), ref1;\r\n      return this.parent;\r\n    };\r\n\r\n    XMLNode.prototype.node = function(name, attributes, text) {\r\n      var child, ref1;\r\n      if (name != null) {\r\n        name = name.valueOf();\r\n      }\r\n      attributes || (attributes = {});\r\n      attributes = attributes.valueOf();\r\n      if (!isObject(attributes)) {\r\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\r\n      }\r\n      child = new XMLElement(this, name, attributes);\r\n      if (text != null) {\r\n        child.text(text);\r\n      }\r\n      this.children.push(child);\r\n      return child;\r\n    };\r\n\r\n    XMLNode.prototype.text = function(value) {\r\n      var child;\r\n      child = new XMLText(this, value);\r\n      this.children.push(child);\r\n      return this;\r\n    };\r\n\r\n    XMLNode.prototype.cdata = function(value) {\r\n      var child;\r\n      child = new XMLCData(this, value);\r\n      this.children.push(child);\r\n      return this;\r\n    };\r\n\r\n    XMLNode.prototype.comment = function(value) {\r\n      var child;\r\n      child = new XMLComment(this, value);\r\n      this.children.push(child);\r\n      return this;\r\n    };\r\n\r\n    XMLNode.prototype.commentBefore = function(value) {\r\n      var child, i, removed;\r\n      i = this.parent.children.indexOf(this);\r\n      removed = this.parent.children.splice(i);\r\n      child = this.parent.comment(value);\r\n      Array.prototype.push.apply(this.parent.children, removed);\r\n      return this;\r\n    };\r\n\r\n    XMLNode.prototype.commentAfter = function(value) {\r\n      var child, i, removed;\r\n      i = this.parent.children.indexOf(this);\r\n      removed = this.parent.children.splice(i + 1);\r\n      child = this.parent.comment(value);\r\n      Array.prototype.push.apply(this.parent.children, removed);\r\n      return this;\r\n    };\r\n\r\n    XMLNode.prototype.raw = function(value) {\r\n      var child;\r\n      child = new XMLRaw(this, value);\r\n      this.children.push(child);\r\n      return this;\r\n    };\r\n\r\n    XMLNode.prototype.instruction = function(target, value) {\r\n      var insTarget, insValue, instruction, j, len;\r\n      if (target != null) {\r\n        target = target.valueOf();\r\n      }\r\n      if (value != null) {\r\n        value = value.valueOf();\r\n      }\r\n      if (Array.isArray(target)) {\r\n        for (j = 0, len = target.length; j < len; j++) {\r\n          insTarget = target[j];\r\n          this.instruction(insTarget);\r\n        }\r\n      } else if (isObject(target)) {\r\n        for (insTarget in target) {\r\n          if (!hasProp.call(target, insTarget)) continue;\r\n          insValue = target[insTarget];\r\n          this.instruction(insTarget, insValue);\r\n        }\r\n      } else {\r\n        if (isFunction(value)) {\r\n          value = value.apply();\r\n        }\r\n        instruction = new XMLProcessingInstruction(this, target, value);\r\n        this.children.push(instruction);\r\n      }\r\n      return this;\r\n    };\r\n\r\n    XMLNode.prototype.instructionBefore = function(target, value) {\r\n      var child, i, removed;\r\n      i = this.parent.children.indexOf(this);\r\n      removed = this.parent.children.splice(i);\r\n      child = this.parent.instruction(target, value);\r\n      Array.prototype.push.apply(this.parent.children, removed);\r\n      return this;\r\n    };\r\n\r\n    XMLNode.prototype.instructionAfter = function(target, value) {\r\n      var child, i, removed;\r\n      i = this.parent.children.indexOf(this);\r\n      removed = this.parent.children.splice(i + 1);\r\n      child = this.parent.instruction(target, value);\r\n      Array.prototype.push.apply(this.parent.children, removed);\r\n      return this;\r\n    };\r\n\r\n    XMLNode.prototype.declaration = function(version, encoding, standalone) {\r\n      var doc, xmldec;\r\n      doc = this.document();\r\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\r\n      if (doc.children[0] instanceof XMLDeclaration) {\r\n        doc.children[0] = xmldec;\r\n      } else {\r\n        doc.children.unshift(xmldec);\r\n      }\r\n      return doc.root() || doc;\r\n    };\r\n\r\n    XMLNode.prototype.doctype = function(pubID, sysID) {\r\n      var child, doc, doctype, i, j, k, len, len1, ref1, ref2;\r\n      doc = this.document();\r\n      doctype = new XMLDocType(doc, pubID, sysID);\r\n      ref1 = doc.children;\r\n      for (i = j = 0, len = ref1.length; j < len; i = ++j) {\r\n        child = ref1[i];\r\n        if (child instanceof XMLDocType) {\r\n          doc.children[i] = doctype;\r\n          return doctype;\r\n        }\r\n      }\r\n      ref2 = doc.children;\r\n      for (i = k = 0, len1 = ref2.length; k < len1; i = ++k) {\r\n        child = ref2[i];\r\n        if (child.isRoot) {\r\n          doc.children.splice(i, 0, doctype);\r\n          return doctype;\r\n        }\r\n      }\r\n      doc.children.push(doctype);\r\n      return doctype;\r\n    };\r\n\r\n    XMLNode.prototype.up = function() {\r\n      if (this.isRoot) {\r\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\r\n      }\r\n      return this.parent;\r\n    };\r\n\r\n    XMLNode.prototype.root = function() {\r\n      var node;\r\n      node = this;\r\n      while (node) {\r\n        if (node.isDocument) {\r\n          return node.rootObject;\r\n        } else if (node.isRoot) {\r\n          return node;\r\n        } else {\r\n          node = node.parent;\r\n        }\r\n      }\r\n    };\r\n\r\n    XMLNode.prototype.document = function() {\r\n      var node;\r\n      node = this;\r\n      while (node) {\r\n        if (node.isDocument) {\r\n          return node;\r\n        } else {\r\n          node = node.parent;\r\n        }\r\n      }\r\n    };\r\n\r\n    XMLNode.prototype.end = function(options) {\r\n      return this.document().end(options);\r\n    };\r\n\r\n    XMLNode.prototype.prev = function() {\r\n      var i;\r\n      i = this.parent.children.indexOf(this);\r\n      if (i < 1) {\r\n        throw new Error(\"Already at the first node\");\r\n      }\r\n      return this.parent.children[i - 1];\r\n    };\r\n\r\n    XMLNode.prototype.next = function() {\r\n      var i;\r\n      i = this.parent.children.indexOf(this);\r\n      if (i === -1 || i === this.parent.children.length - 1) {\r\n        throw new Error(\"Already at the last node\");\r\n      }\r\n      return this.parent.children[i + 1];\r\n    };\r\n\r\n    XMLNode.prototype.importDocument = function(doc) {\r\n      var clonedRoot;\r\n      clonedRoot = doc.root().clone();\r\n      clonedRoot.parent = this;\r\n      clonedRoot.isRoot = false;\r\n      this.children.push(clonedRoot);\r\n      return this;\r\n    };\r\n\r\n    XMLNode.prototype.ele = function(name, attributes, text) {\r\n      return this.element(name, attributes, text);\r\n    };\r\n\r\n    XMLNode.prototype.nod = function(name, attributes, text) {\r\n      return this.node(name, attributes, text);\r\n    };\r\n\r\n    XMLNode.prototype.txt = function(value) {\r\n      return this.text(value);\r\n    };\r\n\r\n    XMLNode.prototype.dat = function(value) {\r\n      return this.cdata(value);\r\n    };\r\n\r\n    XMLNode.prototype.com = function(value) {\r\n      return this.comment(value);\r\n    };\r\n\r\n    XMLNode.prototype.ins = function(target, value) {\r\n      return this.instruction(target, value);\r\n    };\r\n\r\n    XMLNode.prototype.doc = function() {\r\n      return this.document();\r\n    };\r\n\r\n    XMLNode.prototype.dec = function(version, encoding, standalone) {\r\n      return this.declaration(version, encoding, standalone);\r\n    };\r\n\r\n    XMLNode.prototype.dtd = function(pubID, sysID) {\r\n      return this.doctype(pubID, sysID);\r\n    };\r\n\r\n    XMLNode.prototype.e = function(name, attributes, text) {\r\n      return this.element(name, attributes, text);\r\n    };\r\n\r\n    XMLNode.prototype.n = function(name, attributes, text) {\r\n      return this.node(name, attributes, text);\r\n    };\r\n\r\n    XMLNode.prototype.t = function(value) {\r\n      return this.text(value);\r\n    };\r\n\r\n    XMLNode.prototype.d = function(value) {\r\n      return this.cdata(value);\r\n    };\r\n\r\n    XMLNode.prototype.c = function(value) {\r\n      return this.comment(value);\r\n    };\r\n\r\n    XMLNode.prototype.r = function(value) {\r\n      return this.raw(value);\r\n    };\r\n\r\n    XMLNode.prototype.i = function(target, value) {\r\n      return this.instruction(target, value);\r\n    };\r\n\r\n    XMLNode.prototype.u = function() {\r\n      return this.up();\r\n    };\r\n\r\n    XMLNode.prototype.importXMLBuilder = function(doc) {\r\n      return this.importDocument(doc);\r\n    };\r\n\r\n    return XMLNode;\r\n\r\n  })();\r\n\r\n}).call(this);\r\n\r\n},{\"./Utility\":124,\"./XMLCData\":126,\"./XMLComment\":127,\"./XMLDeclaration\":132,\"./XMLDocType\":133,\"./XMLElement\":136,\"./XMLProcessingInstruction\":138,\"./XMLRaw\":139,\"./XMLText\":143}],138:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLNode, XMLProcessingInstruction,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  module.exports = XMLProcessingInstruction = (function(superClass) {\r\n    extend(XMLProcessingInstruction, superClass);\r\n\r\n    function XMLProcessingInstruction(parent, target, value) {\r\n      XMLProcessingInstruction.__super__.constructor.call(this, parent);\r\n      if (target == null) {\r\n        throw new Error(\"Missing instruction target\");\r\n      }\r\n      this.target = this.stringify.insTarget(target);\r\n      if (value) {\r\n        this.value = this.stringify.insValue(value);\r\n      }\r\n    }\r\n\r\n    XMLProcessingInstruction.prototype.clone = function() {\r\n      return Object.create(this);\r\n    };\r\n\r\n    XMLProcessingInstruction.prototype.toString = function(options) {\r\n      return this.options.writer.set(options).processingInstruction(this);\r\n    };\r\n\r\n    return XMLProcessingInstruction;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n\r\n},{\"./XMLNode\":137}],139:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLNode, XMLRaw,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  module.exports = XMLRaw = (function(superClass) {\r\n    extend(XMLRaw, superClass);\r\n\r\n    function XMLRaw(parent, text) {\r\n      XMLRaw.__super__.constructor.call(this, parent);\r\n      if (text == null) {\r\n        throw new Error(\"Missing raw text\");\r\n      }\r\n      this.value = this.stringify.raw(text);\r\n    }\r\n\r\n    XMLRaw.prototype.clone = function() {\r\n      return Object.create(this);\r\n    };\r\n\r\n    XMLRaw.prototype.toString = function(options) {\r\n      return this.options.writer.set(options).raw(this);\r\n    };\r\n\r\n    return XMLRaw;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n\r\n},{\"./XMLNode\":137}],140:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStreamWriter, XMLText, XMLWriterBase,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  XMLDeclaration = require('./XMLDeclaration');\r\n\r\n  XMLDocType = require('./XMLDocType');\r\n\r\n  XMLCData = require('./XMLCData');\r\n\r\n  XMLComment = require('./XMLComment');\r\n\r\n  XMLElement = require('./XMLElement');\r\n\r\n  XMLRaw = require('./XMLRaw');\r\n\r\n  XMLText = require('./XMLText');\r\n\r\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\r\n\r\n  XMLDTDAttList = require('./XMLDTDAttList');\r\n\r\n  XMLDTDElement = require('./XMLDTDElement');\r\n\r\n  XMLDTDEntity = require('./XMLDTDEntity');\r\n\r\n  XMLDTDNotation = require('./XMLDTDNotation');\r\n\r\n  XMLWriterBase = require('./XMLWriterBase');\r\n\r\n  module.exports = XMLStreamWriter = (function(superClass) {\r\n    extend(XMLStreamWriter, superClass);\r\n\r\n    function XMLStreamWriter(stream, options) {\r\n      XMLStreamWriter.__super__.constructor.call(this, options);\r\n      this.stream = stream;\r\n    }\r\n\r\n    XMLStreamWriter.prototype.document = function(doc) {\r\n      var child, i, j, len, len1, ref, ref1, results;\r\n      ref = doc.children;\r\n      for (i = 0, len = ref.length; i < len; i++) {\r\n        child = ref[i];\r\n        child.isLastRootNode = false;\r\n      }\r\n      doc.children[doc.children.length - 1].isLastRootNode = true;\r\n      ref1 = doc.children;\r\n      results = [];\r\n      for (j = 0, len1 = ref1.length; j < len1; j++) {\r\n        child = ref1[j];\r\n        switch (false) {\r\n          case !(child instanceof XMLDeclaration):\r\n            results.push(this.declaration(child));\r\n            break;\r\n          case !(child instanceof XMLDocType):\r\n            results.push(this.docType(child));\r\n            break;\r\n          case !(child instanceof XMLComment):\r\n            results.push(this.comment(child));\r\n            break;\r\n          case !(child instanceof XMLProcessingInstruction):\r\n            results.push(this.processingInstruction(child));\r\n            break;\r\n          default:\r\n            results.push(this.element(child));\r\n        }\r\n      }\r\n      return results;\r\n    };\r\n\r\n    XMLStreamWriter.prototype.attribute = function(att) {\r\n      return this.stream.write(' ' + att.name + '=\"' + att.value + '\"');\r\n    };\r\n\r\n    XMLStreamWriter.prototype.cdata = function(node, level) {\r\n      return this.stream.write(this.space(level) + '<![CDATA[' + node.text + ']]>' + this.endline(node));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.comment = function(node, level) {\r\n      return this.stream.write(this.space(level) + '<!-- ' + node.text + ' -->' + this.endline(node));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.declaration = function(node, level) {\r\n      this.stream.write(this.space(level));\r\n      this.stream.write('<?xml version=\"' + node.version + '\"');\r\n      if (node.encoding != null) {\r\n        this.stream.write(' encoding=\"' + node.encoding + '\"');\r\n      }\r\n      if (node.standalone != null) {\r\n        this.stream.write(' standalone=\"' + node.standalone + '\"');\r\n      }\r\n      this.stream.write(this.spacebeforeslash + '?>');\r\n      return this.stream.write(this.endline(node));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.docType = function(node, level) {\r\n      var child, i, len, ref;\r\n      level || (level = 0);\r\n      this.stream.write(this.space(level));\r\n      this.stream.write('<!DOCTYPE ' + node.root().name);\r\n      if (node.pubID && node.sysID) {\r\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\r\n      } else if (node.sysID) {\r\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\r\n      }\r\n      if (node.children.length > 0) {\r\n        this.stream.write(' [');\r\n        this.stream.write(this.endline(node));\r\n        ref = node.children;\r\n        for (i = 0, len = ref.length; i < len; i++) {\r\n          child = ref[i];\r\n          switch (false) {\r\n            case !(child instanceof XMLDTDAttList):\r\n              this.dtdAttList(child, level + 1);\r\n              break;\r\n            case !(child instanceof XMLDTDElement):\r\n              this.dtdElement(child, level + 1);\r\n              break;\r\n            case !(child instanceof XMLDTDEntity):\r\n              this.dtdEntity(child, level + 1);\r\n              break;\r\n            case !(child instanceof XMLDTDNotation):\r\n              this.dtdNotation(child, level + 1);\r\n              break;\r\n            case !(child instanceof XMLCData):\r\n              this.cdata(child, level + 1);\r\n              break;\r\n            case !(child instanceof XMLComment):\r\n              this.comment(child, level + 1);\r\n              break;\r\n            case !(child instanceof XMLProcessingInstruction):\r\n              this.processingInstruction(child, level + 1);\r\n              break;\r\n            default:\r\n              throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\r\n          }\r\n        }\r\n        this.stream.write(']');\r\n      }\r\n      this.stream.write(this.spacebeforeslash + '>');\r\n      return this.stream.write(this.endline(node));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.element = function(node, level) {\r\n      var att, child, i, len, name, ref, ref1, space;\r\n      level || (level = 0);\r\n      space = this.space(level);\r\n      this.stream.write(space + '<' + node.name);\r\n      ref = node.attributes;\r\n      for (name in ref) {\r\n        if (!hasProp.call(ref, name)) continue;\r\n        att = ref[name];\r\n        this.attribute(att);\r\n      }\r\n      if (node.children.length === 0 || node.children.every(function(e) {\r\n        return e.value === '';\r\n      })) {\r\n        if (this.allowEmpty) {\r\n          this.stream.write('></' + node.name + '>');\r\n        } else {\r\n          this.stream.write(this.spacebeforeslash + '/>');\r\n        }\r\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\r\n        this.stream.write('>');\r\n        this.stream.write(node.children[0].value);\r\n        this.stream.write('</' + node.name + '>');\r\n      } else {\r\n        this.stream.write('>' + this.newline);\r\n        ref1 = node.children;\r\n        for (i = 0, len = ref1.length; i < len; i++) {\r\n          child = ref1[i];\r\n          switch (false) {\r\n            case !(child instanceof XMLCData):\r\n              this.cdata(child, level + 1);\r\n              break;\r\n            case !(child instanceof XMLComment):\r\n              this.comment(child, level + 1);\r\n              break;\r\n            case !(child instanceof XMLElement):\r\n              this.element(child, level + 1);\r\n              break;\r\n            case !(child instanceof XMLRaw):\r\n              this.raw(child, level + 1);\r\n              break;\r\n            case !(child instanceof XMLText):\r\n              this.text(child, level + 1);\r\n              break;\r\n            case !(child instanceof XMLProcessingInstruction):\r\n              this.processingInstruction(child, level + 1);\r\n              break;\r\n            default:\r\n              throw new Error(\"Unknown XML node type: \" + child.constructor.name);\r\n          }\r\n        }\r\n        this.stream.write(space + '</' + node.name + '>');\r\n      }\r\n      return this.stream.write(this.endline(node));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.processingInstruction = function(node, level) {\r\n      this.stream.write(this.space(level) + '<?' + node.target);\r\n      if (node.value) {\r\n        this.stream.write(' ' + node.value);\r\n      }\r\n      return this.stream.write(this.spacebeforeslash + '?>' + this.endline(node));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.raw = function(node, level) {\r\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.text = function(node, level) {\r\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.dtdAttList = function(node, level) {\r\n      this.stream.write(this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType);\r\n      if (node.defaultValueType !== '#DEFAULT') {\r\n        this.stream.write(' ' + node.defaultValueType);\r\n      }\r\n      if (node.defaultValue) {\r\n        this.stream.write(' \"' + node.defaultValue + '\"');\r\n      }\r\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.dtdElement = function(node, level) {\r\n      this.stream.write(this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value);\r\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.dtdEntity = function(node, level) {\r\n      this.stream.write(this.space(level) + '<!ENTITY');\r\n      if (node.pe) {\r\n        this.stream.write(' %');\r\n      }\r\n      this.stream.write(' ' + node.name);\r\n      if (node.value) {\r\n        this.stream.write(' \"' + node.value + '\"');\r\n      } else {\r\n        if (node.pubID && node.sysID) {\r\n          this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\r\n        } else if (node.sysID) {\r\n          this.stream.write(' SYSTEM \"' + node.sysID + '\"');\r\n        }\r\n        if (node.nData) {\r\n          this.stream.write(' NDATA ' + node.nData);\r\n        }\r\n      }\r\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.dtdNotation = function(node, level) {\r\n      this.stream.write(this.space(level) + '<!NOTATION ' + node.name);\r\n      if (node.pubID && node.sysID) {\r\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\r\n      } else if (node.pubID) {\r\n        this.stream.write(' PUBLIC \"' + node.pubID + '\"');\r\n      } else if (node.sysID) {\r\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\r\n      }\r\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.endline = function(node) {\r\n      if (!node.isLastRootNode) {\r\n        return this.newline;\r\n      } else {\r\n        return '';\r\n      }\r\n    };\r\n\r\n    return XMLStreamWriter;\r\n\r\n  })(XMLWriterBase);\r\n\r\n}).call(this);\r\n\r\n},{\"./XMLCData\":126,\"./XMLComment\":127,\"./XMLDTDAttList\":128,\"./XMLDTDElement\":129,\"./XMLDTDEntity\":130,\"./XMLDTDNotation\":131,\"./XMLDeclaration\":132,\"./XMLDocType\":133,\"./XMLElement\":136,\"./XMLProcessingInstruction\":138,\"./XMLRaw\":139,\"./XMLText\":143,\"./XMLWriterBase\":144}],141:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLText, XMLWriterBase,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  XMLDeclaration = require('./XMLDeclaration');\r\n\r\n  XMLDocType = require('./XMLDocType');\r\n\r\n  XMLCData = require('./XMLCData');\r\n\r\n  XMLComment = require('./XMLComment');\r\n\r\n  XMLElement = require('./XMLElement');\r\n\r\n  XMLRaw = require('./XMLRaw');\r\n\r\n  XMLText = require('./XMLText');\r\n\r\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\r\n\r\n  XMLDTDAttList = require('./XMLDTDAttList');\r\n\r\n  XMLDTDElement = require('./XMLDTDElement');\r\n\r\n  XMLDTDEntity = require('./XMLDTDEntity');\r\n\r\n  XMLDTDNotation = require('./XMLDTDNotation');\r\n\r\n  XMLWriterBase = require('./XMLWriterBase');\r\n\r\n  module.exports = XMLStringWriter = (function(superClass) {\r\n    extend(XMLStringWriter, superClass);\r\n\r\n    function XMLStringWriter(options) {\r\n      XMLStringWriter.__super__.constructor.call(this, options);\r\n    }\r\n\r\n    XMLStringWriter.prototype.document = function(doc) {\r\n      var child, i, len, r, ref;\r\n      this.textispresent = false;\r\n      r = '';\r\n      ref = doc.children;\r\n      for (i = 0, len = ref.length; i < len; i++) {\r\n        child = ref[i];\r\n        r += (function() {\r\n          switch (false) {\r\n            case !(child instanceof XMLDeclaration):\r\n              return this.declaration(child);\r\n            case !(child instanceof XMLDocType):\r\n              return this.docType(child);\r\n            case !(child instanceof XMLComment):\r\n              return this.comment(child);\r\n            case !(child instanceof XMLProcessingInstruction):\r\n              return this.processingInstruction(child);\r\n            default:\r\n              return this.element(child, 0);\r\n          }\r\n        }).call(this);\r\n      }\r\n      if (this.pretty && r.slice(-this.newline.length) === this.newline) {\r\n        r = r.slice(0, -this.newline.length);\r\n      }\r\n      return r;\r\n    };\r\n\r\n    XMLStringWriter.prototype.attribute = function(att) {\r\n      return ' ' + att.name + '=\"' + att.value + '\"';\r\n    };\r\n\r\n    XMLStringWriter.prototype.cdata = function(node, level) {\r\n      return this.space(level) + '<![CDATA[' + node.text + ']]>' + this.newline;\r\n    };\r\n\r\n    XMLStringWriter.prototype.comment = function(node, level) {\r\n      return this.space(level) + '<!-- ' + node.text + ' -->' + this.newline;\r\n    };\r\n\r\n    XMLStringWriter.prototype.declaration = function(node, level) {\r\n      var r;\r\n      r = this.space(level);\r\n      r += '<?xml version=\"' + node.version + '\"';\r\n      if (node.encoding != null) {\r\n        r += ' encoding=\"' + node.encoding + '\"';\r\n      }\r\n      if (node.standalone != null) {\r\n        r += ' standalone=\"' + node.standalone + '\"';\r\n      }\r\n      r += this.spacebeforeslash + '?>';\r\n      r += this.newline;\r\n      return r;\r\n    };\r\n\r\n    XMLStringWriter.prototype.docType = function(node, level) {\r\n      var child, i, len, r, ref;\r\n      level || (level = 0);\r\n      r = this.space(level);\r\n      r += '<!DOCTYPE ' + node.root().name;\r\n      if (node.pubID && node.sysID) {\r\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\r\n      } else if (node.sysID) {\r\n        r += ' SYSTEM \"' + node.sysID + '\"';\r\n      }\r\n      if (node.children.length > 0) {\r\n        r += ' [';\r\n        r += this.newline;\r\n        ref = node.children;\r\n        for (i = 0, len = ref.length; i < len; i++) {\r\n          child = ref[i];\r\n          r += (function() {\r\n            switch (false) {\r\n              case !(child instanceof XMLDTDAttList):\r\n                return this.dtdAttList(child, level + 1);\r\n              case !(child instanceof XMLDTDElement):\r\n                return this.dtdElement(child, level + 1);\r\n              case !(child instanceof XMLDTDEntity):\r\n                return this.dtdEntity(child, level + 1);\r\n              case !(child instanceof XMLDTDNotation):\r\n                return this.dtdNotation(child, level + 1);\r\n              case !(child instanceof XMLCData):\r\n                return this.cdata(child, level + 1);\r\n              case !(child instanceof XMLComment):\r\n                return this.comment(child, level + 1);\r\n              case !(child instanceof XMLProcessingInstruction):\r\n                return this.processingInstruction(child, level + 1);\r\n              default:\r\n                throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\r\n            }\r\n          }).call(this);\r\n        }\r\n        r += ']';\r\n      }\r\n      r += this.spacebeforeslash + '>';\r\n      r += this.newline;\r\n      return r;\r\n    };\r\n\r\n    XMLStringWriter.prototype.element = function(node, level) {\r\n      var att, child, i, j, len, len1, name, r, ref, ref1, ref2, space, textispresentwasset;\r\n      level || (level = 0);\r\n      textispresentwasset = false;\r\n      if (this.textispresent) {\r\n        this.newline = '';\r\n        this.pretty = false;\r\n      } else {\r\n        this.newline = this.newlinedefault;\r\n        this.pretty = this.prettydefault;\r\n      }\r\n      space = this.space(level);\r\n      r = '';\r\n      r += space + '<' + node.name;\r\n      ref = node.attributes;\r\n      for (name in ref) {\r\n        if (!hasProp.call(ref, name)) continue;\r\n        att = ref[name];\r\n        r += this.attribute(att);\r\n      }\r\n      if (node.children.length === 0 || node.children.every(function(e) {\r\n        return e.value === '';\r\n      })) {\r\n        if (this.allowEmpty) {\r\n          r += '></' + node.name + '>' + this.newline;\r\n        } else {\r\n          r += this.spacebeforeslash + '/>' + this.newline;\r\n        }\r\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\r\n        r += '>';\r\n        r += node.children[0].value;\r\n        r += '</' + node.name + '>' + this.newline;\r\n      } else {\r\n        if (this.dontprettytextnodes) {\r\n          ref1 = node.children;\r\n          for (i = 0, len = ref1.length; i < len; i++) {\r\n            child = ref1[i];\r\n            if (child.value != null) {\r\n              this.textispresent++;\r\n              textispresentwasset = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (this.textispresent) {\r\n          this.newline = '';\r\n          this.pretty = false;\r\n          space = this.space(level);\r\n        }\r\n        r += '>' + this.newline;\r\n        ref2 = node.children;\r\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\r\n          child = ref2[j];\r\n          r += (function() {\r\n            switch (false) {\r\n              case !(child instanceof XMLCData):\r\n                return this.cdata(child, level + 1);\r\n              case !(child instanceof XMLComment):\r\n                return this.comment(child, level + 1);\r\n              case !(child instanceof XMLElement):\r\n                return this.element(child, level + 1);\r\n              case !(child instanceof XMLRaw):\r\n                return this.raw(child, level + 1);\r\n              case !(child instanceof XMLText):\r\n                return this.text(child, level + 1);\r\n              case !(child instanceof XMLProcessingInstruction):\r\n                return this.processingInstruction(child, level + 1);\r\n              default:\r\n                throw new Error(\"Unknown XML node type: \" + child.constructor.name);\r\n            }\r\n          }).call(this);\r\n        }\r\n        if (textispresentwasset) {\r\n          this.textispresent--;\r\n        }\r\n        if (!this.textispresent) {\r\n          this.newline = this.newlinedefault;\r\n          this.pretty = this.prettydefault;\r\n        }\r\n        r += space + '</' + node.name + '>' + this.newline;\r\n      }\r\n      return r;\r\n    };\r\n\r\n    XMLStringWriter.prototype.processingInstruction = function(node, level) {\r\n      var r;\r\n      r = this.space(level) + '<?' + node.target;\r\n      if (node.value) {\r\n        r += ' ' + node.value;\r\n      }\r\n      r += this.spacebeforeslash + '?>' + this.newline;\r\n      return r;\r\n    };\r\n\r\n    XMLStringWriter.prototype.raw = function(node, level) {\r\n      return this.space(level) + node.value + this.newline;\r\n    };\r\n\r\n    XMLStringWriter.prototype.text = function(node, level) {\r\n      return this.space(level) + node.value + this.newline;\r\n    };\r\n\r\n    XMLStringWriter.prototype.dtdAttList = function(node, level) {\r\n      var r;\r\n      r = this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\r\n      if (node.defaultValueType !== '#DEFAULT') {\r\n        r += ' ' + node.defaultValueType;\r\n      }\r\n      if (node.defaultValue) {\r\n        r += ' \"' + node.defaultValue + '\"';\r\n      }\r\n      r += this.spacebeforeslash + '>' + this.newline;\r\n      return r;\r\n    };\r\n\r\n    XMLStringWriter.prototype.dtdElement = function(node, level) {\r\n      return this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value + this.spacebeforeslash + '>' + this.newline;\r\n    };\r\n\r\n    XMLStringWriter.prototype.dtdEntity = function(node, level) {\r\n      var r;\r\n      r = this.space(level) + '<!ENTITY';\r\n      if (node.pe) {\r\n        r += ' %';\r\n      }\r\n      r += ' ' + node.name;\r\n      if (node.value) {\r\n        r += ' \"' + node.value + '\"';\r\n      } else {\r\n        if (node.pubID && node.sysID) {\r\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\r\n        } else if (node.sysID) {\r\n          r += ' SYSTEM \"' + node.sysID + '\"';\r\n        }\r\n        if (node.nData) {\r\n          r += ' NDATA ' + node.nData;\r\n        }\r\n      }\r\n      r += this.spacebeforeslash + '>' + this.newline;\r\n      return r;\r\n    };\r\n\r\n    XMLStringWriter.prototype.dtdNotation = function(node, level) {\r\n      var r;\r\n      r = this.space(level) + '<!NOTATION ' + node.name;\r\n      if (node.pubID && node.sysID) {\r\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\r\n      } else if (node.pubID) {\r\n        r += ' PUBLIC \"' + node.pubID + '\"';\r\n      } else if (node.sysID) {\r\n        r += ' SYSTEM \"' + node.sysID + '\"';\r\n      }\r\n      r += this.spacebeforeslash + '>' + this.newline;\r\n      return r;\r\n    };\r\n\r\n    XMLStringWriter.prototype.openNode = function(node, level) {\r\n      var att, name, r, ref;\r\n      level || (level = 0);\r\n      if (node instanceof XMLElement) {\r\n        r = this.space(level) + '<' + node.name;\r\n        ref = node.attributes;\r\n        for (name in ref) {\r\n          if (!hasProp.call(ref, name)) continue;\r\n          att = ref[name];\r\n          r += this.attribute(att);\r\n        }\r\n        r += (node.children ? '>' : '/>') + this.newline;\r\n        return r;\r\n      } else {\r\n        r = this.space(level) + '<!DOCTYPE ' + node.rootNodeName;\r\n        if (node.pubID && node.sysID) {\r\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\r\n        } else if (node.sysID) {\r\n          r += ' SYSTEM \"' + node.sysID + '\"';\r\n        }\r\n        r += (node.children ? ' [' : '>') + this.newline;\r\n        return r;\r\n      }\r\n    };\r\n\r\n    XMLStringWriter.prototype.closeNode = function(node, level) {\r\n      level || (level = 0);\r\n      switch (false) {\r\n        case !(node instanceof XMLElement):\r\n          return this.space(level) + '</' + node.name + '>' + this.newline;\r\n        case !(node instanceof XMLDocType):\r\n          return this.space(level) + ']>' + this.newline;\r\n      }\r\n    };\r\n\r\n    return XMLStringWriter;\r\n\r\n  })(XMLWriterBase);\r\n\r\n}).call(this);\r\n\r\n},{\"./XMLCData\":126,\"./XMLComment\":127,\"./XMLDTDAttList\":128,\"./XMLDTDElement\":129,\"./XMLDTDEntity\":130,\"./XMLDTDNotation\":131,\"./XMLDeclaration\":132,\"./XMLDocType\":133,\"./XMLElement\":136,\"./XMLProcessingInstruction\":138,\"./XMLRaw\":139,\"./XMLText\":143,\"./XMLWriterBase\":144}],142:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLStringifier,\r\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  module.exports = XMLStringifier = (function() {\r\n    function XMLStringifier(options) {\r\n      this.assertLegalChar = bind(this.assertLegalChar, this);\r\n      var key, ref, value;\r\n      options || (options = {});\r\n      this.noDoubleEncoding = options.noDoubleEncoding;\r\n      ref = options.stringify || {};\r\n      for (key in ref) {\r\n        if (!hasProp.call(ref, key)) continue;\r\n        value = ref[key];\r\n        this[key] = value;\r\n      }\r\n    }\r\n\r\n    XMLStringifier.prototype.eleName = function(val) {\r\n      val = '' + val || '';\r\n      return this.assertLegalChar(val);\r\n    };\r\n\r\n    XMLStringifier.prototype.eleText = function(val) {\r\n      val = '' + val || '';\r\n      return this.assertLegalChar(this.elEscape(val));\r\n    };\r\n\r\n    XMLStringifier.prototype.cdata = function(val) {\r\n      val = '' + val || '';\r\n      val = val.replace(']]>', ']]]]><![CDATA[>');\r\n      return this.assertLegalChar(val);\r\n    };\r\n\r\n    XMLStringifier.prototype.comment = function(val) {\r\n      val = '' + val || '';\r\n      if (val.match(/--/)) {\r\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\r\n      }\r\n      return this.assertLegalChar(val);\r\n    };\r\n\r\n    XMLStringifier.prototype.raw = function(val) {\r\n      return '' + val || '';\r\n    };\r\n\r\n    XMLStringifier.prototype.attName = function(val) {\r\n      return val = '' + val || '';\r\n    };\r\n\r\n    XMLStringifier.prototype.attValue = function(val) {\r\n      val = '' + val || '';\r\n      return this.attEscape(val);\r\n    };\r\n\r\n    XMLStringifier.prototype.insTarget = function(val) {\r\n      return '' + val || '';\r\n    };\r\n\r\n    XMLStringifier.prototype.insValue = function(val) {\r\n      val = '' + val || '';\r\n      if (val.match(/\\?>/)) {\r\n        throw new Error(\"Invalid processing instruction value: \" + val);\r\n      }\r\n      return val;\r\n    };\r\n\r\n    XMLStringifier.prototype.xmlVersion = function(val) {\r\n      val = '' + val || '';\r\n      if (!val.match(/1\\.[0-9]+/)) {\r\n        throw new Error(\"Invalid version number: \" + val);\r\n      }\r\n      return val;\r\n    };\r\n\r\n    XMLStringifier.prototype.xmlEncoding = function(val) {\r\n      val = '' + val || '';\r\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\r\n        throw new Error(\"Invalid encoding: \" + val);\r\n      }\r\n      return val;\r\n    };\r\n\r\n    XMLStringifier.prototype.xmlStandalone = function(val) {\r\n      if (val) {\r\n        return \"yes\";\r\n      } else {\r\n        return \"no\";\r\n      }\r\n    };\r\n\r\n    XMLStringifier.prototype.dtdPubID = function(val) {\r\n      return '' + val || '';\r\n    };\r\n\r\n    XMLStringifier.prototype.dtdSysID = function(val) {\r\n      return '' + val || '';\r\n    };\r\n\r\n    XMLStringifier.prototype.dtdElementValue = function(val) {\r\n      return '' + val || '';\r\n    };\r\n\r\n    XMLStringifier.prototype.dtdAttType = function(val) {\r\n      return '' + val || '';\r\n    };\r\n\r\n    XMLStringifier.prototype.dtdAttDefault = function(val) {\r\n      if (val != null) {\r\n        return '' + val || '';\r\n      } else {\r\n        return val;\r\n      }\r\n    };\r\n\r\n    XMLStringifier.prototype.dtdEntityValue = function(val) {\r\n      return '' + val || '';\r\n    };\r\n\r\n    XMLStringifier.prototype.dtdNData = function(val) {\r\n      return '' + val || '';\r\n    };\r\n\r\n    XMLStringifier.prototype.convertAttKey = '@';\r\n\r\n    XMLStringifier.prototype.convertPIKey = '?';\r\n\r\n    XMLStringifier.prototype.convertTextKey = '#text';\r\n\r\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\r\n\r\n    XMLStringifier.prototype.convertCommentKey = '#comment';\r\n\r\n    XMLStringifier.prototype.convertRawKey = '#raw';\r\n\r\n    XMLStringifier.prototype.assertLegalChar = function(str) {\r\n      var res;\r\n      res = str.match(/[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/);\r\n      if (res) {\r\n        throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\r\n      }\r\n      return str;\r\n    };\r\n\r\n    XMLStringifier.prototype.elEscape = function(str) {\r\n      var ampregex;\r\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\r\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\r\n    };\r\n\r\n    XMLStringifier.prototype.attEscape = function(str) {\r\n      var ampregex;\r\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\r\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\r\n    };\r\n\r\n    return XMLStringifier;\r\n\r\n  })();\r\n\r\n}).call(this);\r\n\r\n},{}],143:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLNode, XMLText,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  module.exports = XMLText = (function(superClass) {\r\n    extend(XMLText, superClass);\r\n\r\n    function XMLText(parent, text) {\r\n      XMLText.__super__.constructor.call(this, parent);\r\n      if (text == null) {\r\n        throw new Error(\"Missing element text\");\r\n      }\r\n      this.value = this.stringify.eleText(text);\r\n    }\r\n\r\n    XMLText.prototype.clone = function() {\r\n      return Object.create(this);\r\n    };\r\n\r\n    XMLText.prototype.toString = function(options) {\r\n      return this.options.writer.set(options).text(this);\r\n    };\r\n\r\n    return XMLText;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n\r\n},{\"./XMLNode\":137}],144:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLWriterBase,\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  module.exports = XMLWriterBase = (function() {\r\n    function XMLWriterBase(options) {\r\n      var key, ref, ref1, ref2, ref3, ref4, ref5, ref6, value;\r\n      options || (options = {});\r\n      this.pretty = options.pretty || false;\r\n      this.allowEmpty = (ref = options.allowEmpty) != null ? ref : false;\r\n      if (this.pretty) {\r\n        this.indent = (ref1 = options.indent) != null ? ref1 : '  ';\r\n        this.newline = (ref2 = options.newline) != null ? ref2 : '\\n';\r\n        this.offset = (ref3 = options.offset) != null ? ref3 : 0;\r\n        this.dontprettytextnodes = (ref4 = options.dontprettytextnodes) != null ? ref4 : 0;\r\n      } else {\r\n        this.indent = '';\r\n        this.newline = '';\r\n        this.offset = 0;\r\n        this.dontprettytextnodes = 0;\r\n      }\r\n      this.spacebeforeslash = (ref5 = options.spacebeforeslash) != null ? ref5 : '';\r\n      if (this.spacebeforeslash === true) {\r\n        this.spacebeforeslash = ' ';\r\n      }\r\n      this.newlinedefault = this.newline;\r\n      this.prettydefault = this.pretty;\r\n      ref6 = options.writer || {};\r\n      for (key in ref6) {\r\n        if (!hasProp.call(ref6, key)) continue;\r\n        value = ref6[key];\r\n        this[key] = value;\r\n      }\r\n    }\r\n\r\n    XMLWriterBase.prototype.set = function(options) {\r\n      var key, ref, value;\r\n      options || (options = {});\r\n      if (\"pretty\" in options) {\r\n        this.pretty = options.pretty;\r\n      }\r\n      if (\"allowEmpty\" in options) {\r\n        this.allowEmpty = options.allowEmpty;\r\n      }\r\n      if (this.pretty) {\r\n        this.indent = \"indent\" in options ? options.indent : '  ';\r\n        this.newline = \"newline\" in options ? options.newline : '\\n';\r\n        this.offset = \"offset\" in options ? options.offset : 0;\r\n        this.dontprettytextnodes = \"dontprettytextnodes\" in options ? options.dontprettytextnodes : 0;\r\n      } else {\r\n        this.indent = '';\r\n        this.newline = '';\r\n        this.offset = 0;\r\n        this.dontprettytextnodes = 0;\r\n      }\r\n      this.spacebeforeslash = \"spacebeforeslash\" in options ? options.spacebeforeslash : '';\r\n      if (this.spacebeforeslash === true) {\r\n        this.spacebeforeslash = ' ';\r\n      }\r\n      this.newlinedefault = this.newline;\r\n      this.prettydefault = this.pretty;\r\n      ref = options.writer || {};\r\n      for (key in ref) {\r\n        if (!hasProp.call(ref, key)) continue;\r\n        value = ref[key];\r\n        this[key] = value;\r\n      }\r\n      return this;\r\n    };\r\n\r\n    XMLWriterBase.prototype.space = function(level) {\r\n      var indent;\r\n      if (this.pretty) {\r\n        indent = (level || 0) + this.offset + 1;\r\n        if (indent > 0) {\r\n          return new Array(indent).join(this.indent);\r\n        } else {\r\n          return '';\r\n        }\r\n      } else {\r\n        return '';\r\n      }\r\n    };\r\n\r\n    return XMLWriterBase;\r\n\r\n  })();\r\n\r\n}).call(this);\r\n\r\n},{}],145:[function(require,module,exports){\r\n// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;\r\n\r\n  ref = require('./Utility'), assign = ref.assign, isFunction = ref.isFunction;\r\n\r\n  XMLDocument = require('./XMLDocument');\r\n\r\n  XMLDocumentCB = require('./XMLDocumentCB');\r\n\r\n  XMLStringWriter = require('./XMLStringWriter');\r\n\r\n  XMLStreamWriter = require('./XMLStreamWriter');\r\n\r\n  module.exports.create = function(name, xmldec, doctype, options) {\r\n    var doc, root;\r\n    if (name == null) {\r\n      throw new Error(\"Root element needs a name\");\r\n    }\r\n    options = assign({}, xmldec, doctype, options);\r\n    doc = new XMLDocument(options);\r\n    root = doc.element(name);\r\n    if (!options.headless) {\r\n      doc.declaration(options);\r\n      if ((options.pubID != null) || (options.sysID != null)) {\r\n        doc.doctype(options);\r\n      }\r\n    }\r\n    return root;\r\n  };\r\n\r\n  module.exports.begin = function(options, onData, onEnd) {\r\n    var ref1;\r\n    if (isFunction(options)) {\r\n      ref1 = [options, onData], onData = ref1[0], onEnd = ref1[1];\r\n      options = {};\r\n    }\r\n    if (onData) {\r\n      return new XMLDocumentCB(options, onData, onEnd);\r\n    } else {\r\n      return new XMLDocument(options);\r\n    }\r\n  };\r\n\r\n  module.exports.stringWriter = function(options) {\r\n    return new XMLStringWriter(options);\r\n  };\r\n\r\n  module.exports.streamWriter = function(stream, options) {\r\n    return new XMLStreamWriter(stream, options);\r\n  };\r\n\r\n}).call(this);\r\n\r\n},{\"./Utility\":124,\"./XMLDocument\":134,\"./XMLDocumentCB\":135,\"./XMLStreamWriter\":140,\"./XMLStringWriter\":141}]},{},[1])(1)\r\n});\r\n\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJpbmRleC5qcyIsImxpYi9WRVJTSU9OLmpzIiwibGliL19yZXF1aXJlZC5qcyIsImxpYi9hcGkvYW5hbHl0aWNzLmpzIiwibGliL2FwaS9hcGV4LmpzIiwibGliL2FwaS9idWxrLmpzIiwibGliL2FwaS9jaGF0dGVyLmpzIiwibGliL2FwaS9pbmRleC5qcyIsImxpYi9hcGkvbWV0YWRhdGEuanMiLCJsaWIvYXBpL3NvYXAuanMiLCJsaWIvYXBpL3N0cmVhbWluZy1leHRlbnNpb24uanMiLCJsaWIvYXBpL3N0cmVhbWluZy5qcyIsImxpYi9hcGkvdG9vbGluZy5qcyIsImxpYi9icm93c2VyL2NhbnZhcy5qcyIsImxpYi9icm93c2VyL2NsaWVudC5qcyIsImxpYi9icm93c2VyL2pzb25wLmpzIiwibGliL2Jyb3dzZXIvcmVxdWVzdC5qcyIsImxpYi9jYWNoZS5qcyIsImxpYi9jb25uZWN0aW9uLmpzIiwibGliL2NvcmUuanMiLCJsaWIvY3N2LmpzIiwibGliL2RhdGUuanMiLCJsaWIvaHR0cC1hcGkuanMiLCJsaWIvbG9nZ2VyLmpzIiwibGliL29hdXRoMi5qcyIsImxpYi9wcm9jZXNzLmpzIiwibGliL3Byb21pc2UuanMiLCJsaWIvcXVlcnkuanMiLCJsaWIvcXVpY2stYWN0aW9uLmpzIiwibGliL3JlY29yZC1zdHJlYW0uanMiLCJsaWIvcmVjb3JkLmpzIiwibGliL3JlcXVpcmUuanMiLCJsaWIvc29hcC5qcyIsImxpYi9zb2JqZWN0LmpzIiwibGliL3NvcWwtYnVpbGRlci5qcyIsImxpYi90cmFuc3BvcnQuanMiLCJub2RlX21vZHVsZXMvYXNhcC9icm93c2VyLWFzYXAuanMiLCJub2RlX21vZHVsZXMvYXNhcC9icm93c2VyLXJhdy5qcyIsIm5vZGVfbW9kdWxlcy9iYXNlNjQtanMvaW5kZXguanMiLCJub2RlX21vZHVsZXMvYnJvd3Nlci1yZXNvbHZlL2VtcHR5LmpzIiwibm9kZV9tb2R1bGVzL2J1ZmZlci9pbmRleC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLXV0aWwtaXMvbGliL3V0aWwuanMiLCJub2RlX21vZHVsZXMvY3N2LXBhcnNlL2xpYi9pbmRleC5qcyIsIm5vZGVfbW9kdWxlcy9jc3YtcGFyc2UvbGliL3N5bmMuanMiLCJub2RlX21vZHVsZXMvY3N2LXN0cmluZ2lmeS9saWIvaW5kZXguanMiLCJub2RlX21vZHVsZXMvY3N2LXN0cmluZ2lmeS9saWIvc3luYy5qcyIsIm5vZGVfbW9kdWxlcy9ldmVudHMvZXZlbnRzLmpzIiwibm9kZV9tb2R1bGVzL2ZheWUvc3JjL2ZheWVfYnJvd3Nlci5qcyIsIm5vZGVfbW9kdWxlcy9mYXllL3NyYy9taXhpbnMvZGVmZXJyYWJsZS5qcyIsIm5vZGVfbW9kdWxlcy9mYXllL3NyYy9taXhpbnMvbG9nZ2luZy5qcyIsIm5vZGVfbW9kdWxlcy9mYXllL3NyYy9taXhpbnMvcHVibGlzaGVyLmpzIiwibm9kZV9tb2R1bGVzL2ZheWUvc3JjL21peGlucy90aW1lb3V0cy5qcyIsIm5vZGVfbW9kdWxlcy9mYXllL3NyYy9wcm90b2NvbC9jaGFubmVsLmpzIiwibm9kZV9tb2R1bGVzL2ZheWUvc3JjL3Byb3RvY29sL2NsaWVudC5qcyIsIm5vZGVfbW9kdWxlcy9mYXllL3NyYy9wcm90b2NvbC9kaXNwYXRjaGVyLmpzIiwibm9kZV9tb2R1bGVzL2ZheWUvc3JjL3Byb3RvY29sL2Vycm9yLmpzIiwibm9kZV9tb2R1bGVzL2ZheWUvc3JjL3Byb3RvY29sL2V4dGVuc2libGUuanMiLCJub2RlX21vZHVsZXMvZmF5ZS9zcmMvcHJvdG9jb2wvZ3JhbW1hci5qcyIsIm5vZGVfbW9kdWxlcy9mYXllL3NyYy9wcm90b2NvbC9wdWJsaWNhdGlvbi5qcyIsIm5vZGVfbW9kdWxlcy9mYXllL3NyYy9wcm90b2NvbC9zY2hlZHVsZXIuanMiLCJub2RlX21vZHVsZXMvZmF5ZS9zcmMvcHJvdG9jb2wvc3Vic2NyaXB0aW9uLmpzIiwibm9kZV9tb2R1bGVzL2ZheWUvc3JjL3RyYW5zcG9ydC9icm93c2VyX3RyYW5zcG9ydHMuanMiLCJub2RlX21vZHVsZXMvZmF5ZS9zcmMvdHJhbnNwb3J0L2NvcnMuanMiLCJub2RlX21vZHVsZXMvZmF5ZS9zcmMvdHJhbnNwb3J0L2V2ZW50X3NvdXJjZS5qcyIsIm5vZGVfbW9kdWxlcy9mYXllL3NyYy90cmFuc3BvcnQvanNvbnAuanMiLCJub2RlX21vZHVsZXMvZmF5ZS9zcmMvdHJhbnNwb3J0L3RyYW5zcG9ydC5qcyIsIm5vZGVfbW9kdWxlcy9mYXllL3NyYy90cmFuc3BvcnQvd2ViX3NvY2tldC5qcyIsIm5vZGVfbW9kdWxlcy9mYXllL3NyYy90cmFuc3BvcnQveGhyLmpzIiwibm9kZV9tb2R1bGVzL2ZheWUvc3JjL3V0aWwvYXJyYXkuanMiLCJub2RlX21vZHVsZXMvZmF5ZS9zcmMvdXRpbC9icm93c2VyL2V2ZW50LmpzIiwibm9kZV9tb2R1bGVzL2ZheWUvc3JjL3V0aWwvY2xhc3MuanMiLCJub2RlX21vZHVsZXMvZmF5ZS9zcmMvdXRpbC9jb25zdGFudHMuanMiLCJub2RlX21vZHVsZXMvZmF5ZS9zcmMvdXRpbC9jb29raWVzL2Jyb3dzZXJfY29va2llcy5qcyIsIm5vZGVfbW9kdWxlcy9mYXllL3NyYy91dGlsL2NvcHlfb2JqZWN0LmpzIiwibm9kZV9tb2R1bGVzL2ZheWUvc3JjL3V0aWwvZXZlbnRfZW1pdHRlci5qcyIsIm5vZGVfbW9kdWxlcy9mYXllL3NyYy91dGlsL2V4dGVuZC5qcyIsIm5vZGVfbW9kdWxlcy9mYXllL3NyYy91dGlsL3Byb21pc2UuanMiLCJub2RlX21vZHVsZXMvZmF5ZS9zcmMvdXRpbC9zZXQuanMiLCJub2RlX21vZHVsZXMvZmF5ZS9zcmMvdXRpbC90b19qc29uLmpzIiwibm9kZV9tb2R1bGVzL2ZheWUvc3JjL3V0aWwvdXJpLmpzIiwibm9kZV9tb2R1bGVzL2ZheWUvc3JjL3V0aWwvdmFsaWRhdGVfb3B0aW9ucy5qcyIsIm5vZGVfbW9kdWxlcy9mYXllL3NyYy91dGlsL3dlYnNvY2tldC9icm93c2VyX3dlYnNvY2tldC5qcyIsIm5vZGVfbW9kdWxlcy9pZWVlNzU0L2luZGV4LmpzIiwibm9kZV9tb2R1bGVzL2luaGVyaXRzL2luaGVyaXRzX2Jyb3dzZXIuanMiLCJub2RlX21vZHVsZXMvaXMtYnVmZmVyL2luZGV4LmpzIiwibm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMiLCJub2RlX21vZHVsZXMvbG9kYXNoLmdldC9pbmRleC5qcyIsIm5vZGVfbW9kdWxlcy9sb2Rhc2gvY29yZS5qcyIsIm5vZGVfbW9kdWxlcy9tdWx0aXN0cmVhbS9pbmRleC5qcyIsIm5vZGVfbW9kdWxlcy9wcm9jZXNzLW5leHRpY2stYXJncy9pbmRleC5qcyIsIm5vZGVfbW9kdWxlcy9wcm9jZXNzL2Jyb3dzZXIuanMiLCJub2RlX21vZHVsZXMvcHJvbWlzZS9saWIvY29yZS5qcyIsIm5vZGVfbW9kdWxlcy9wcm9taXNlL2xpYi9lczYtZXh0ZW5zaW9ucy5qcyIsIm5vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy1lczMvZGVjb2RlLmpzIiwibm9kZV9tb2R1bGVzL3F1ZXJ5c3RyaW5nLWVzMy9lbmNvZGUuanMiLCJub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2luZGV4LmpzIiwibm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9kdXBsZXgtYnJvd3Nlci5qcyIsIm5vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL19zdHJlYW1fZHVwbGV4LmpzIiwibm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvX3N0cmVhbV9wYXNzdGhyb3VnaC5qcyIsIm5vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL19zdHJlYW1fcmVhZGFibGUuanMiLCJub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX3RyYW5zZm9ybS5qcyIsIm5vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL19zdHJlYW1fd3JpdGFibGUuanMiLCJub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL0J1ZmZlckxpc3QuanMiLCJub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL2Rlc3Ryb3kuanMiLCJub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL3N0cmVhbS1icm93c2VyLmpzIiwibm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9wYXNzdGhyb3VnaC5qcyIsIm5vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vcmVhZGFibGUtYnJvd3Nlci5qcyIsIm5vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vdHJhbnNmb3JtLmpzIiwibm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS93cml0YWJsZS1icm93c2VyLmpzIiwibm9kZV9tb2R1bGVzL3NhZmUtYnVmZmVyL2luZGV4LmpzIiwibm9kZV9tb2R1bGVzL3NheC9saWIvc2F4LmpzIiwibm9kZV9tb2R1bGVzL3N0cmVhbS1icm93c2VyaWZ5L2luZGV4LmpzIiwibm9kZV9tb2R1bGVzL3N0cmluZ19kZWNvZGVyL2xpYi9zdHJpbmdfZGVjb2Rlci5qcyIsIm5vZGVfbW9kdWxlcy90aW1lcnMtYnJvd3NlcmlmeS9tYWluLmpzIiwibm9kZV9tb2R1bGVzL3V0aWwtZGVwcmVjYXRlL2Jyb3dzZXIuanMiLCJub2RlX21vZHVsZXMvdXRpbC9zdXBwb3J0L2lzQnVmZmVyQnJvd3Nlci5qcyIsIm5vZGVfbW9kdWxlcy91dGlsL3V0aWwuanMiLCJub2RlX21vZHVsZXMveG1sMmpzL2xpYi9ib20uanMiLCJub2RlX21vZHVsZXMveG1sMmpzL2xpYi9idWlsZGVyLmpzIiwibm9kZV9tb2R1bGVzL3htbDJqcy9saWIvZGVmYXVsdHMuanMiLCJub2RlX21vZHVsZXMveG1sMmpzL2xpYi9wYXJzZXIuanMiLCJub2RlX21vZHVsZXMveG1sMmpzL2xpYi9wcm9jZXNzb3JzLmpzIiwibm9kZV9tb2R1bGVzL3htbDJqcy9saWIveG1sMmpzLmpzIiwibm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1V0aWxpdHkuanMiLCJub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MQXR0cmlidXRlLmpzIiwibm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTENEYXRhLmpzIiwibm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTENvbW1lbnQuanMiLCJub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MRFREQXR0TGlzdC5qcyIsIm5vZGVfbW9kdWxlcy94bWxidWlsZGVyL2xpYi9YTUxEVERFbGVtZW50LmpzIiwibm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTERUREVudGl0eS5qcyIsIm5vZGVfbW9kdWxlcy94bWxidWlsZGVyL2xpYi9YTUxEVEROb3RhdGlvbi5qcyIsIm5vZGVfbW9kdWxlcy94bWxidWlsZGVyL2xpYi9YTUxEZWNsYXJhdGlvbi5qcyIsIm5vZGVfbW9kdWxlcy94bWxidWlsZGVyL2xpYi9YTUxEb2NUeXBlLmpzIiwibm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTERvY3VtZW50LmpzIiwibm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTERvY3VtZW50Q0IuanMiLCJub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MRWxlbWVudC5qcyIsIm5vZGVfbW9kdWxlcy94bWxidWlsZGVyL2xpYi9YTUxOb2RlLmpzIiwibm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTFByb2Nlc3NpbmdJbnN0cnVjdGlvbi5qcyIsIm5vZGVfbW9kdWxlcy94bWxidWlsZGVyL2xpYi9YTUxSYXcuanMiLCJub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MU3RyZWFtV3JpdGVyLmpzIiwibm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTFN0cmluZ1dyaXRlci5qcyIsIm5vZGVfbW9kdWxlcy94bWxidWlsZGVyL2xpYi9YTUxTdHJpbmdpZmllci5qcyIsIm5vZGVfbW9kdWxlcy94bWxidWlsZGVyL2xpYi9YTUxUZXh0LmpzIiwibm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTFdyaXRlckJhc2UuanMiLCJub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNOQTtBQUNBO0FBQ0E7O0FDRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM1QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDbllBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzVLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FDMzFCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDMVRBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDUkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQy8wQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM3WUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN4SUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDOVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDalNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzFGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2pQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNuREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN0RUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUN2TkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQ3BwREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNoQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2xEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ25LQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM1U0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNwREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzlNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ25SQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FDcEtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQ2ozQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDMUZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3ZSQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDM0dBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNkQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMvTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDOWlCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDMU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQ3pPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDbEVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUMvTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN2SkE7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUN4c0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUMzR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUN4akJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUN0Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FDeFRBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FDOUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDM2dCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDZkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUNoREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQy9DQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNyQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FDMUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNwSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQ2xZQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUN6TEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN2REE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQy9DQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM5Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzVDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ1hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQ3BGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQ2pHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQ2hFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQ25OQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FDaktBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUNsRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUMxRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FDbERBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN2QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNWQTtBQUNBO0FBQ0E7QUFDQTs7QUNIQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ25CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMzS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDWkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2pLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDbERBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNuRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDVkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQ1ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3BGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDdkJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3JCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FDbjZCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUM5d0hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDeEpBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQzVDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3hMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNyTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzNHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNwRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNyRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNKQTtBQUNBOztBQ0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDbElBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzlDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FDMS9CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDck5BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQzlxQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDOUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDekVBO0FBQ0E7O0FDREE7QUFDQTs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1BBO0FBQ0E7O0FDREE7QUFDQTs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzlEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUM3aERBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDL0hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3ZTQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUMzRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQ25FQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUMxa0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDL0hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3hFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNyV0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNsQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNyQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN6RUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMvQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2hDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNsREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ25DQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDeERBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDckNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDeENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMzR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaERBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2xaQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMvR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaGJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNuQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2hDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN2UkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM5VUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNuS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2hDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMxRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIganNmb3JjZSA9IHJlcXVpcmUoJy4uL2NvcmUnKTtcbmpzZm9yY2UuYnJvd3NlciA9IHJlcXVpcmUoJy4vY2xpZW50Jyk7XG5yZXF1aXJlKCcuLi9hcGknKTtcbm1vZHVsZS5leHBvcnRzID0ganNmb3JjZTtcbiIsIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gJzEuOS4xJztcbiIsIi8vIFRoaXMgZmlsZSBjb250ZW50IGlzIGR5bmFtaWNhbGx5IGNyZWF0ZWQgaW4gYnVpbGQgc2NyaXB0XG5cInVzZSBzdHJpY3RcIjtcbm1vZHVsZS5leHBvcnRzID0ge1xuICAnaW5oZXJpdHMnOiByZXF1aXJlKCdpbmhlcml0cycpLFxuICAndXRpbCc6IHJlcXVpcmUoJ3V0aWwnKSxcbiAgJ2V2ZW50cyc6IHJlcXVpcmUoJ2V2ZW50cycpLFxuICAnbG9kYXNoL2NvcmUnOiByZXF1aXJlKCdsb2Rhc2gvY29yZScpLFxuICAncmVhZGFibGUtc3RyZWFtJzogcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtJyksXG4gICdtdWx0aXN0cmVhbSc6IHJlcXVpcmUoJ211bHRpc3RyZWFtJyksXG4gICcuL1ZFUlNJT04nOiByZXF1aXJlKCcuL1ZFUlNJT04nKSxcbiAgJy4vY2FjaGUnOiByZXF1aXJlKCcuL2NhY2hlJyksXG4gICcuL2Nvbm5lY3Rpb24nOiByZXF1aXJlKCcuL2Nvbm5lY3Rpb24nKSxcbiAgJy4vY29yZSc6IHJlcXVpcmUoJy4vY29yZScpLFxuICAnLi9jc3YnOiByZXF1aXJlKCcuL2NzdicpLFxuICAnLi9kYXRlJzogcmVxdWlyZSgnLi9kYXRlJyksXG4gICcuL2h0dHAtYXBpJzogcmVxdWlyZSgnLi9odHRwLWFwaScpLFxuICAnLi9sb2dnZXInOiByZXF1aXJlKCcuL2xvZ2dlcicpLFxuICAnLi9vYXV0aDInOiByZXF1aXJlKCcuL29hdXRoMicpLFxuICAnLi9wcm9jZXNzJzogcmVxdWlyZSgnLi9wcm9jZXNzJyksXG4gICcuL3Byb21pc2UnOiByZXF1aXJlKCcuL3Byb21pc2UnKSxcbiAgJy4vcXVlcnknOiByZXF1aXJlKCcuL3F1ZXJ5JyksXG4gICcuL3F1aWNrLWFjdGlvbic6IHJlcXVpcmUoJy4vcXVpY2stYWN0aW9uJyksXG4gICcuL3JlY29yZC1zdHJlYW0nOiByZXF1aXJlKCcuL3JlY29yZC1zdHJlYW0nKSxcbiAgJy4vcmVjb3JkJzogcmVxdWlyZSgnLi9yZWNvcmQnKSxcbiAgJy4vc29hcCc6IHJlcXVpcmUoJy4vc29hcCcpLFxuICAnLi9zb2JqZWN0JzogcmVxdWlyZSgnLi9zb2JqZWN0JyksXG4gICcuL3NvcWwtYnVpbGRlcic6IHJlcXVpcmUoJy4vc29xbC1idWlsZGVyJyksXG4gICcuL3RyYW5zcG9ydCc6IHJlcXVpcmUoJy4vdHJhbnNwb3J0Jylcbn07IiwiLyoqXG4gKiBAZmlsZSBNYW5hZ2VzIFNhbGVzZm9yY2UgQW5hbHl0aWNzIEFQSVxuICogQGF1dGhvciBTaGluaWNoaSBUb21pdGEgPHNoaW5pY2hpLnRvbWl0YUBnbWFpbC5jb20+XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgXyA9IHJlcXVpcmUoJ2xvZGFzaC9jb3JlJyksXG4gICAganNmb3JjZSA9IHJlcXVpcmUoJy4uL2NvcmUnKSxcbiAgICBQcm9taXNlICA9IHJlcXVpcmUoJy4uL3Byb21pc2UnKTtcblxuLyoqXG4gKiBSZXBvcnQgaW5zdGFuY2UgdG8gcmV0cmlldmluZyBhc3luY2hyb25vdXNseSBleGVjdXRlZCByZXN1bHRcbiAqXG4gKiBAcHJvdGVjdGVkXG4gKiBAY2xhc3MgQW5hbHl0aWNzflJlcG9ydEluc3RhbmNlXG4gKiBAcGFyYW0ge0FuYWx5dGljc35SZXBvcnR9IHJlcG9ydCAtIFJlcG9ydFxuICogQHBhcmFtIHtTdHJpbmd9IGlkIC0gUmVwb3J0IGluc3RhbmNlIGlkXG4gKi9cbnZhciBSZXBvcnRJbnN0YW5jZSA9IGZ1bmN0aW9uKHJlcG9ydCwgaWQpIHtcbiAgdGhpcy5fcmVwb3J0ID0gcmVwb3J0O1xuICB0aGlzLl9jb25uID0gcmVwb3J0Ll9jb25uO1xuICB0aGlzLmlkID0gaWQ7XG59O1xuXG4vKipcbiAqIFJldHJpZXZlIHJlcG9ydCByZXN1bHQgYXN5bmNocm9ub3VzbHkgZXhlY3V0ZWRcbiAqXG4gKiBAbWV0aG9kIEFuYWx5dGljc35SZXBvcnRJbnN0YW5jZSNyZXRyaWV2ZVxuICogQHBhcmFtIHtDYWxsYmFjay48QW5hbHl0aWNzflJlcG9ydFJlc3VsdD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPEFuYWx5dGljc35SZXBvcnRSZXN1bHQ+fVxuICovXG5SZXBvcnRJbnN0YW5jZS5wcm90b3R5cGUucmV0cmlldmUgPSBmdW5jdGlvbihjYWxsYmFjaykge1xuICB2YXIgY29ubiA9IHRoaXMuX2Nvbm4sXG4gICAgICByZXBvcnQgPSB0aGlzLl9yZXBvcnQ7XG4gIHZhciB1cmwgPSBbIGNvbm4uX2Jhc2VVcmwoKSwgXCJhbmFseXRpY3NcIiwgXCJyZXBvcnRzXCIsIHJlcG9ydC5pZCwgXCJpbnN0YW5jZXNcIiwgdGhpcy5pZCBdLmpvaW4oJy8nKTtcbiAgcmV0dXJuIGNvbm4ucmVxdWVzdCh1cmwpLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogUmVwb3J0IG9iamVjdCBpbiBBbmFseXRpY3MgQVBJXG4gKlxuICogQHByb3RlY3RlZFxuICogQGNsYXNzIEFuYWx5dGljc35SZXBvcnRcbiAqIEBwYXJhbSB7Q29ubmVjdGlvbn0gY29ubiBDb25uZWN0aW9uXG4gKi9cbnZhciBSZXBvcnQgPSBmdW5jdGlvbihjb25uLCBpZCkge1xuICB0aGlzLl9jb25uID0gY29ubjtcbiAgdGhpcy5pZCA9IGlkO1xufTtcblxuLyoqXG4gKiBEZXNjcmliZSByZXBvcnQgbWV0YWRhdGFcbiAqXG4gKiBAbWV0aG9kIEFuYWx5dGljc35SZXBvcnQjZGVzY3JpYmVcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPEFuYWx5dGljc35SZXBvcnRNZXRhZGF0YT59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPEFuYWx5dGljc35SZXBvcnRNZXRhZGF0YT59XG4gKi9cblJlcG9ydC5wcm90b3R5cGUuZGVzY3JpYmUgPSBmdW5jdGlvbihjYWxsYmFjaykge1xuICB2YXIgdXJsID0gWyB0aGlzLl9jb25uLl9iYXNlVXJsKCksIFwiYW5hbHl0aWNzXCIsIFwicmVwb3J0c1wiLCB0aGlzLmlkLCBcImRlc2NyaWJlXCIgXS5qb2luKCcvJyk7XG4gIHJldHVybiB0aGlzLl9jb25uLnJlcXVlc3QodXJsKS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIFN5bm9ueW0gb2YgQW5hbHl0aWNzflJlcG9ydCNkZXN0cm95KClcbiAqXG4gKiBAbWV0aG9kIEFuYWx5dGljc35SZXBvcnQjZGVsZXRlXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxBbmFseXRpY3N+UmVwb3J0UmVzdWx0Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48QW5hbHl0aWNzflJlcG9ydFJlc3VsdD59XG4gKi9cbi8qKlxuICogU3lub255bSBvZiBBbmFseXRpY3N+UmVwb3J0I2Rlc3Ryb3koKVxuICpcbiAqIEBtZXRob2QgQW5hbHl0aWNzflJlcG9ydCNkZWxcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPEFuYWx5dGljc35SZXBvcnRSZXN1bHQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxBbmFseXRpY3N+UmVwb3J0UmVzdWx0Pn1cbiAqL1xuLyoqXG4gKiBEZXN0cm95IGEgcmVwb3J0XG4gKlxuICogQG1ldGhvZCBBbmFseXRpY3N+UmVwb3J0I2Rlc3Ryb3lcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPEFuYWx5dGljc35SZXBvcnRSZXN1bHQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxBbmFseXRpY3N+UmVwb3J0UmVzdWx0Pn1cbiAqL1xuUmVwb3J0LnByb3RvdHlwZVtcImRlbGV0ZVwiXSA9XG5SZXBvcnQucHJvdG90eXBlLmRlbCA9XG5SZXBvcnQucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbihjYWxsYmFjaykge1xuICB2YXIgdXJsID0gWyB0aGlzLl9jb25uLl9iYXNlVXJsKCksIFwiYW5hbHl0aWNzXCIsIFwicmVwb3J0c1wiLCB0aGlzLmlkIF0uam9pbignLycpO1xuICByZXR1cm4gdGhpcy5fY29ubi5yZXF1ZXN0KHttZXRob2Q6ICdERUxFVEUnLCB1cmw6IHVybH0pLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogQ2xvbmVzIGEgZ2l2ZW4gcmVwb3J0XG4gKlxuICogQG1ldGhvZCBBbmFseXRpY3N+UmVwb3J0I2Nsb25lXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBuZXcgcmVwb3J0XG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxBbmFseXRpY3N+UmVwb3J0UmVzdWx0Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48QW5hbHl0aWNzflJlcG9ydFJlc3VsdD59XG4gKi9cblJlcG9ydC5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbihuYW1lLCBjYWxsYmFjaykge1xuICB2YXIgdXJsID0gWyB0aGlzLl9jb25uLl9iYXNlVXJsKCksIFwiYW5hbHl0aWNzXCIsIFwicmVwb3J0c1wiIF0uam9pbignLycpO1xuICB1cmwgKz0gXCI/Y2xvbmVJZD1cIiArIHRoaXMuaWQ7XG4gIHZhciBkYXRhID0geyByZXBvcnRNZXRhZGF0YTogeyBuYW1lOiBuYW1lIH0gfTtcbiAgdmFyIHBhcmFtcyA9IHsgbWV0aG9kIDogJ1BPU1QnLCB1cmw6IHVybCwgaGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiIDogXCJhcHBsaWNhdGlvbi9qc29uXCIgfSwgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSl9O1xuXG4gIHJldHVybiB0aGlzLl9jb25uLnJlcXVlc3QocGFyYW1zKS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIEV4cGxhaW4gcGxhbiBmb3IgZXhlY3V0aW5nIHJlcG9ydFxuICpcbiAqIEBtZXRob2QgQW5hbHl0aWNzflJlcG9ydCNleHBsYWluXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxFeHBsYWluSW5mbz59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPEV4cGxhaW5JbmZvPn1cbiAqL1xuUmVwb3J0LnByb3RvdHlwZS5leHBsYWluID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIHVybCA9IFwiL3F1ZXJ5Lz9leHBsYWluPVwiICsgdGhpcy5pZDtcbiAgcmV0dXJuIHRoaXMuX2Nvbm4ucmVxdWVzdCh1cmwpLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cblxuLyoqXG4gKiBSdW4gcmVwb3J0IHN5bmNocm9ub3VzbHlcbiAqXG4gKiBAbWV0aG9kIEFuYWx5dGljc35SZXBvcnQjZXhlY3V0ZVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIE9wdGlvbnNcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gb3B0aW9ucy5kZXRhaWxzIC0gRmxhZyBpZiBpbmNsdWRlIGRldGFpbCBpbiByZXN1bHRcbiAqIEBwYXJhbSB7QW5hbHl0aWNzflJlcG9ydE1ldGFkYXRhfSBvcHRpb25zLm1ldGFkYXRhIC0gT3ZlcnJpZGluZyByZXBvcnQgbWV0YWRhdGFcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPEFuYWx5dGljc35SZXBvcnRSZXN1bHQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxBbmFseXRpY3N+UmVwb3J0UmVzdWx0Pn1cbiAqL1xuUmVwb3J0LnByb3RvdHlwZS5ydW4gPVxuUmVwb3J0LnByb3RvdHlwZS5leGVjID1cblJlcG9ydC5wcm90b3R5cGUuZXhlY3V0ZSA9IGZ1bmN0aW9uKG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBpZiAoXy5pc0Z1bmN0aW9uKG9wdGlvbnMpKSB7XG4gICAgY2FsbGJhY2sgPSBvcHRpb25zO1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICB2YXIgdXJsID0gWyB0aGlzLl9jb25uLl9iYXNlVXJsKCksIFwiYW5hbHl0aWNzXCIsIFwicmVwb3J0c1wiLCB0aGlzLmlkIF0uam9pbignLycpO1xuICB1cmwgKz0gXCI/aW5jbHVkZURldGFpbHM9XCIgKyAob3B0aW9ucy5kZXRhaWxzID8gXCJ0cnVlXCIgOiBcImZhbHNlXCIpO1xuICB2YXIgcGFyYW1zID0geyBtZXRob2QgOiBvcHRpb25zLm1ldGFkYXRhID8gJ1BPU1QnIDogJ0dFVCcsIHVybCA6IHVybCB9O1xuICBpZiAob3B0aW9ucy5tZXRhZGF0YSkge1xuICAgIHBhcmFtcy5oZWFkZXJzID0geyBcIkNvbnRlbnQtVHlwZVwiIDogXCJhcHBsaWNhdGlvbi9qc29uXCIgfTtcbiAgICBwYXJhbXMuYm9keSA9IEpTT04uc3RyaW5naWZ5KG9wdGlvbnMubWV0YWRhdGEpO1xuICB9XG4gIHJldHVybiB0aGlzLl9jb25uLnJlcXVlc3QocGFyYW1zKS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG5cbi8qKlxuICogUnVuIHJlcG9ydCBhc3luY2hyb25vdXNseVxuICpcbiAqIEBtZXRob2QgQW5hbHl0aWNzflJlcG9ydCNleGVjdXRlQXN5bmNcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSBPcHRpb25zXG4gKiBAcGFyYW0ge0Jvb2xlYW59IG9wdGlvbnMuZGV0YWlscyAtIEZsYWcgaWYgaW5jbHVkZSBkZXRhaWwgaW4gcmVzdWx0XG4gKiBAcGFyYW0ge0FuYWx5dGljc35SZXBvcnRNZXRhZGF0YX0gb3B0aW9ucy5tZXRhZGF0YSAtIE92ZXJyaWRpbmcgcmVwb3J0IG1ldGFkYXRhXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxBbmFseXRpY3N+UmVwb3J0SW5zdGFuY2VBdHRycz59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPEFuYWx5dGljc35SZXBvcnRJbnN0YW5jZUF0dHJzPn1cbiAqL1xuUmVwb3J0LnByb3RvdHlwZS5leGVjdXRlQXN5bmMgPSBmdW5jdGlvbihvcHRpb25zLCBjYWxsYmFjaykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgaWYgKF8uaXNGdW5jdGlvbihvcHRpb25zKSkge1xuICAgIGNhbGxiYWNrID0gb3B0aW9ucztcbiAgICBvcHRpb25zID0ge307XG4gIH1cbiAgdmFyIHVybCA9IFsgdGhpcy5fY29ubi5fYmFzZVVybCgpLCBcImFuYWx5dGljc1wiLCBcInJlcG9ydHNcIiwgdGhpcy5pZCwgXCJpbnN0YW5jZXNcIiBdLmpvaW4oJy8nKTtcbiAgaWYgKG9wdGlvbnMuZGV0YWlscykge1xuICAgIHVybCArPSBcIj9pbmNsdWRlRGV0YWlscz10cnVlXCI7XG4gIH1cbiAgdmFyIHBhcmFtcyA9IHsgbWV0aG9kIDogJ1BPU1QnLCB1cmwgOiB1cmwsIGJvZHk6IFwiXCIgfTtcbiAgaWYgKG9wdGlvbnMubWV0YWRhdGEpIHtcbiAgICBwYXJhbXMuaGVhZGVycyA9IHsgXCJDb250ZW50LVR5cGVcIiA6IFwiYXBwbGljYXRpb24vanNvblwiIH07XG4gICAgcGFyYW1zLmJvZHkgPSBKU09OLnN0cmluZ2lmeShvcHRpb25zLm1ldGFkYXRhKTtcbiAgfVxuICByZXR1cm4gdGhpcy5fY29ubi5yZXF1ZXN0KHBhcmFtcykudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBHZXQgcmVwb3J0IGluc3RhbmNlIGZvciBzcGVjaWZpZWQgaW5zdGFuY2UgSURcbiAqXG4gKiBAbWV0aG9kIEFuYWx5dGljc35SZXBvcnQjaW5zdGFuY2VcbiAqIEBwYXJhbSB7U3RyaW5nfSBpZCAtIFJlcG9ydCBpbnN0YW5jZSBJRFxuICogQHJldHVybnMge0FuYWx5dGljc35SZXBvcnRJbnN0YW5jZX1cbiAqL1xuUmVwb3J0LnByb3RvdHlwZS5pbnN0YW5jZSA9IGZ1bmN0aW9uKGlkKSB7XG4gIHJldHVybiBuZXcgUmVwb3J0SW5zdGFuY2UodGhpcywgaWQpO1xufTtcblxuLyoqXG4gKiBMaXN0IHJlcG9ydCBpbnN0YW5jZXMgd2hpY2ggaGFkIGJlZW4gZXhlY3V0ZWQgYXN5bmNocm9ub3VzbHlcbiAqXG4gKiBAbWV0aG9kIEFuYWx5dGljc35SZXBvcnQjaW5zdGFuY2VzXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxBcnJheS48QW5hbHl0aWNzflJlcG9ydEluc3RhbmNlQXR0cnM+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48QXJyYXkuPEFuYWx5dGljc35SZXBvcnRJbnN0YW5jZUF0dHJzPj59XG4gKi9cblJlcG9ydC5wcm90b3R5cGUuaW5zdGFuY2VzID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIHVybCA9IFsgdGhpcy5fY29ubi5fYmFzZVVybCgpLCBcImFuYWx5dGljc1wiLCBcInJlcG9ydHNcIiwgdGhpcy5pZCwgXCJpbnN0YW5jZXNcIiBdLmpvaW4oJy8nKTtcbiAgcmV0dXJuIHRoaXMuX2Nvbm4ucmVxdWVzdCh1cmwpLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogRGFzaGJvYXJkIG9iamVjdCBpbiB0aGUgQW5hbHl0aWNzIEFQSVxuICpcbiAqIEBwcm90ZWN0ZWRcbiAqIEBjbGFzcyBBbmFseXRpY3MtRGFzaGJvYXJkXG4gKiBAcGFyYW0ge0Nvbm5lY3Rpb259IGNvbm4gQ29ubmVjdGlvblxuICogQHBhcmFtIHtTdHJpbmd9IGlkIC0gVGhlIElkXG4gKi9cblxudmFyIERhc2hib2FyZCA9IGZ1bmN0aW9uKGNvbm4sIGlkKSB7XG4gIHRoaXMuX2Nvbm4gPSBjb25uO1xuICB0aGlzLmlkID0gaWQ7XG59O1xuXG4vKipcbiAqIERlc2NyaWJlIGRhc2hib2FyZCBtZXRhZGF0YVxuICpcbiAqIEBtZXRob2QgQW5hbHl0aWNzfkRhc2hib2FyZCNkZXNjcmliZVxuICogQHBhcmFtIHtDYWxsYmFjay48QW5hbHl0aWNzLURhc2hib2FyZE1ldGFkYXRhPn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48QW5hbHl0aWNzLURhc2hib2FyZE1ldGFkYXRhPn1cbiAqL1xuRGFzaGJvYXJkLnByb3RvdHlwZS5kZXNjcmliZSA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHZhciB1cmwgPSBbIHRoaXMuX2Nvbm4uX2Jhc2VVcmwoKSwgXCJhbmFseXRpY3NcIiwgXCJkYXNoYm9hcmRzXCIsIHRoaXMuaWQsIFwiZGVzY3JpYmVcIiBdLmpvaW4oJy8nKTtcbiAgcmV0dXJuIHRoaXMuX2Nvbm4ucmVxdWVzdCh1cmwpLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogR2V0IGRldGFpbHMgYWJvdXQgZGFzaGJvYXJkIGNvbXBvbmVudHNcbiAqXG4gKiBAbWV0aG9kIEFuYWx5dGljc35EYXNoYm9hcmQjY29tcG9uZW50c1xuICogQHBhcmFtIHtDYWxsYmFjay48QW5hbHl0aWNzLURhc2hib2FyZENvbXBvbmVudE1ldGFkYXRhPn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48QW5hbHl0aWNzLURhc2hib2FyZENvbXBvbmVudE1ldGFkYXRhPn1cbiAqL1xuRGFzaGJvYXJkLnByb3RvdHlwZS5jb21wb25lbnRzID0gZnVuY3Rpb24oY29tcG9uZW50SWRzLCBjYWxsYmFjaykge1xuICB2YXIgdXJsID0gWyB0aGlzLl9jb25uLl9iYXNlVXJsKCksIFwiYW5hbHl0aWNzXCIsIFwiZGFzaGJvYXJkc1wiLCB0aGlzLmlkXS5qb2luKCcvJyk7XG4gIHZhciBkYXRhID0ge307XG4gIGlmIChfLmlzRnVuY3Rpb24oY29tcG9uZW50SWRzKSkge1xuICAgIGNhbGxiYWNrID0gY29tcG9uZW50SWRzO1xuICB9IGVsc2UgaWYgKF8uaXNBcnJheShjb21wb25lbnRJZHMpKSB7XG4gICAgZGF0YS5jb21wb25lbnRJZHMgPSBjb21wb25lbnRJZHM7XG4gIH0gZWxzZSBpZiAoXy5pc1N0cmluZyhjb21wb25lbnRJZHMpKSB7XG4gICAgZGF0YS5jb21wb25lbnRJZHMgPSBbIGNvbXBvbmVudElkcyBdO1xuICB9XG4gIHZhciBwYXJhbXMgPSB7IG1ldGhvZCA6ICdQT1NUJywgdXJsIDogdXJsLCBoZWFkZXJzIDogeyBcIkNvbnRlbnQtVHlwZVwiIDogXCJhcHBsaWNhdGlvbi9qc29uXCIgfSwgYm9keSA6IEpTT04uc3RyaW5naWZ5KGRhdGEpfTtcbiAgcmV0dXJuIHRoaXMuX2Nvbm4ucmVxdWVzdChwYXJhbXMpLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogR2V0IGRhc2hib2FyZCBzdGF0dXNcbiAqXG4gKiBAbWV0aG9kIEFuYWx5dGljc35EYXNoYm9hcmQjc3RhdHVzXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxBbmFseXRpY3MtRGFzaGJvYXJkU3RhdHVzTWV0YWRhdGE+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxBbmFseXRpY3MtRGFzaGJvYXJkU3RhdHVzTWV0YWRhdGE+fVxuICovXG5EYXNoYm9hcmQucHJvdG90eXBlLnN0YXR1cyA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHZhciB1cmwgPSBbIHRoaXMuX2Nvbm4uX2Jhc2VVcmwoKSwgXCJhbmFseXRpY3NcIiwgXCJkYXNoYm9hcmRzXCIsIHRoaXMuaWQsIFwic3RhdHVzXCIgXS5qb2luKCcvJyk7XG4gIHJldHVybiB0aGlzLl9jb25uLnJlcXVlc3QodXJsKS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIFJlZnJlc2ggYSBkYXNoYm9hcmRcbiAqXG4gKiBAbWV0aG9kIEFuYWx5dGljc35EYXNoYm9hcmQjcmVmcmVzaFxuICogQHBhcmFtIHtDYWxsYmFjay48QW5hbHl0aWNzLURhc2hib2FyZFN0YXR1c1VybD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPEFuYWx5dGljcy1EYXNoYm9hcmRTdGF0dXNVcmw+fVxuICovXG5EYXNoYm9hcmQucHJvdG90eXBlLnJlZnJlc2ggPSBmdW5jdGlvbihjYWxsYmFjaykge1xuICB2YXIgdXJsID0gWyB0aGlzLl9jb25uLl9iYXNlVXJsKCksIFwiYW5hbHl0aWNzXCIsIFwiZGFzaGJvYXJkc1wiLCB0aGlzLmlkIF0uam9pbignLycpO1xuICB2YXIgcGFyYW1zID0geyBtZXRob2QgOiAnUFVUJywgdXJsIDogdXJsLCBib2R5OiAnJyB9O1xuICByZXR1cm4gdGhpcy5fY29ubi5yZXF1ZXN0KHBhcmFtcykudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBDbG9uZSBhIGRhc2hib2FyZFxuICpcbiAqIEBtZXRob2QgQW5hbHl0aWNzfkRhc2hib2FyZCNjbG9uZVxuICogQHBhcmFtIHtDYWxsYmFjay48QW5hbHl0aWNzLURhc2hib2FyZE1ldGFkYXRhPn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48QW5hbHl0aWNzLURhc2hib2FyZE1ldGFkYXRhPn1cbiAqL1xuRGFzaGJvYXJkLnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uKG5hbWUsIGZvbGRlcmlkLCBjYWxsYmFjaykge1xuICB2YXIgdXJsID0gWyB0aGlzLl9jb25uLl9iYXNlVXJsKCksIFwiYW5hbHl0aWNzXCIsIFwiZGFzaGJvYXJkc1wiIF0uam9pbignLycpO1xuICB1cmwgKz0gXCI/Y2xvbmVJZD1cIiArIHRoaXMuaWQ7XG4gIHZhciBkYXRhID0ge307XG5cbiAgaWYgKF8uaXNPYmplY3QobmFtZSkpIHtcbiAgICBkYXRhID0gbmFtZTtcbiAgICBjYWxsYmFjayA9IGZvbGRlcmlkO1xuICB9IGVsc2Uge1xuICAgIGRhdGEubmFtZSA9IG5hbWU7XG4gICAgZGF0YS5mb2xkZXJJZCA9IGZvbGRlcmlkO1xuICB9XG4gIHZhciBwYXJhbXMgPSB7IG1ldGhvZCA6ICdQT1NUJywgdXJsIDogdXJsLCBoZWFkZXJzIDogeyBcIkNvbnRlbnQtVHlwZVwiIDogXCJhcHBsaWNhdGlvbi9qc29uXCIgfSwgYm9keSA6IEpTT04uc3RyaW5naWZ5KGRhdGEpfTtcblxuICByZXR1cm4gdGhpcy5fY29ubi5yZXF1ZXN0KHBhcmFtcykudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBTeW5vbnltIG9mIEFuYWx5dGljc35EYXNoYm9hcmQjZGVzdHJveSgpXG4gKlxuICogQG1ldGhvZCBBbmFseXRpY3N+RGFzaGJvYXJkI2RlbGV0ZVxuICogQHBhcmFtIHtDYWxsYmFjay48QW5hbHl0aWNzfkRhc2hib2FyZFJlc3VsdD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPEFuYWx5dGljc35EYXNoYm9hcmRSZXN1bHQ+fVxuICovXG4vKipcbiAqIFN5bm9ueW0gb2YgQW5hbHl0aWNzfkRhc2hib2FyZCNkZXN0cm95KClcbiAqXG4gKiBAbWV0aG9kIEFuYWx5dGljc35EYXNoYm9hcmQjZGVsXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxBbmFseXRpY3N+RGFzaGJvYXJkUmVzdWx0Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48QW5hbHl0aWNzfkRhc2hib2FyZFJlc3VsdD59XG4gKi9cbi8qKlxuICogRGVzdHJveSBhIGRhc2hib2FyZFxuICpcbiAqIEBtZXRob2QgQW5hbHl0aWNzfkRhc2hib2FyZCNkZXN0cm95XG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxBbmFseXRpY3N+RGFzaGJvYXJkUmVzdWx0Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48QW5hbHl0aWNzfkRhc2hib2FyZFJlc3VsdD59XG4gKi9cbkRhc2hib2FyZC5wcm90b3R5cGVbXCJkZWxldGVcIl0gPVxuRGFzaGJvYXJkLnByb3RvdHlwZS5kZWwgPVxuRGFzaGJvYXJkLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIHVybCA9IFsgdGhpcy5fY29ubi5fYmFzZVVybCgpLCBcImFuYWx5dGljc1wiLCBcImRhc2hib2FyZHNcIiwgdGhpcy5pZCBdLmpvaW4oJy8nKTtcbiAgcmV0dXJuIHRoaXMuX2Nvbm4ucmVxdWVzdCh7bWV0aG9kOiAnREVMRVRFJywgdXJsOiB1cmx9KS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIEFQSSBjbGFzcyBmb3IgQW5hbHl0aWNzIEFQSVxuICpcbiAqIEBjbGFzc1xuICogQHBhcmFtIHtDb25uZWN0aW9ufSBjb25uIENvbm5lY3Rpb25cbiAqL1xudmFyIEFuYWx5dGljcyA9IGZ1bmN0aW9uKGNvbm4pIHtcbiAgdGhpcy5fY29ubiA9IGNvbm47XG59O1xuXG4vKipcbiAqIEdldCByZXBvcnQgb2JqZWN0IG9mIEFuYWx5dGljcyBBUElcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gaWQgLSBSZXBvcnQgSWRcbiAqIEByZXR1cm5zIHtBbmFseXRpY3N+UmVwb3J0fVxuICovXG5BbmFseXRpY3MucHJvdG90eXBlLnJlcG9ydCA9IGZ1bmN0aW9uKGlkKSB7XG4gIHJldHVybiBuZXcgUmVwb3J0KHRoaXMuX2Nvbm4sIGlkKTtcbn07XG5cbi8qKlxuICogR2V0IHJlY2VudCByZXBvcnQgbGlzdFxuICpcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPEFycmF5LjxBbmFseXRpY3N+UmVwb3J0SW5mbz4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxBcnJheS48QW5hbHl0aWNzflJlcG9ydEluZm8+Pn1cbiAqL1xuQW5hbHl0aWNzLnByb3RvdHlwZS5yZXBvcnRzID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIHVybCA9IFsgdGhpcy5fY29ubi5fYmFzZVVybCgpLCBcImFuYWx5dGljc1wiLCBcInJlcG9ydHNcIiBdLmpvaW4oJy8nKTtcbiAgcmV0dXJuIHRoaXMuX2Nvbm4ucmVxdWVzdCh1cmwpLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogR2V0IGRhc2hib2FyZCBvYmplY3Qgb2YgQW5hbHl0aWNzIEFQSVxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBpZCAtIERhc2hib2FyZCBJZFxuICogQHJldHVybnMge0FuYWx5dGljc35EYXNoYm9hcmR9XG4gKi9cbkFuYWx5dGljcy5wcm90b3R5cGUuZGFzaGJvYXJkID0gZnVuY3Rpb24oaWQpIHtcbiAgcmV0dXJuIG5ldyBEYXNoYm9hcmQodGhpcy5fY29ubiwgaWQpO1xufTtcblxuLyoqXG4gKiBHZXQgcmVjZW50IGRhc2hib2FyZCBsaXN0XG4gKlxuICogQHBhcmFtIHtDYWxsYmFjay48QXJyYXkuPEFuYWx5dGljc35EYXNoYm9hcmRJbmZvPj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPEFycmF5LjxBbmFseXRpY3N+RGFzaGJvYXJkSW5mbz4+fVxuICovXG5BbmFseXRpY3MucHJvdG90eXBlLmRhc2hib2FyZHMgPSBmdW5jdGlvbihjYWxsYmFjaykge1xuICB2YXIgdXJsID0gWyB0aGlzLl9jb25uLl9iYXNlVXJsKCksIFwiYW5hbHl0aWNzXCIsIFwiZGFzaGJvYXJkc1wiIF0uam9pbignLycpO1xuICByZXR1cm4gdGhpcy5fY29ubi5yZXF1ZXN0KHVybCkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKlxuICogUmVnaXN0ZXIgaG9vayBpbiBjb25uZWN0aW9uIGluc3RhbnRpYXRpb24gZm9yIGR5bmFtaWNhbGx5IGFkZGluZyB0aGlzIEFQSSBtb2R1bGUgZmVhdHVyZXNcbiAqL1xuanNmb3JjZS5vbignY29ubmVjdGlvbjpuZXcnLCBmdW5jdGlvbihjb25uKSB7XG4gIGNvbm4uYW5hbHl0aWNzID0gbmV3IEFuYWx5dGljcyhjb25uKTtcbn0pO1xuXG5cbm1vZHVsZS5leHBvcnRzID0gQW5hbHl0aWNzO1xuIiwiLyoqXG4gKiBAZmlsZSBNYW5hZ2VzIFNhbGVzZm9yY2UgQXBleCBSRVNUIGVuZHBvaW50IGNhbGxzXG4gKiBAYXV0aG9yIFNoaW5pY2hpIFRvbWl0YSA8c2hpbmljaGkudG9taXRhQGdtYWlsLmNvbT5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBqc2ZvcmNlID0gcmVxdWlyZSgnLi4vY29yZScpO1xuXG4vKipcbiAqIEFQSSBjbGFzcyBmb3IgQXBleCBSRVNUIGVuZHBvaW50IGNhbGxcbiAqXG4gKiBAY2xhc3NcbiAqIEBwYXJhbSB7Q29ubmVjdGlvbn0gY29ubiBDb25uZWN0aW9uXG4gKi9cbnZhciBBcGV4ID0gZnVuY3Rpb24oY29ubikge1xuICB0aGlzLl9jb25uID0gY29ubjtcbn07XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuQXBleC5wcm90b3R5cGUuX2Jhc2VVcmwgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuX2Nvbm4uaW5zdGFuY2VVcmwgKyBcIi9zZXJ2aWNlcy9hcGV4cmVzdFwiO1xufTtcblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5BcGV4LnByb3RvdHlwZS5fY3JlYXRlUmVxdWVzdFBhcmFtcyA9IGZ1bmN0aW9uKG1ldGhvZCwgcGF0aCwgYm9keSwgb3B0aW9ucykge1xuICB2YXIgcGFyYW1zID0ge1xuICAgIG1ldGhvZDogbWV0aG9kLFxuICAgIHVybDogdGhpcy5fYmFzZVVybCgpICsgcGF0aFxuICB9LFxuICBfaGVhZGVycyA9IHt9O1xuICBpZihvcHRpb25zICYmICdvYmplY3QnID09PSB0eXBlb2Ygb3B0aW9uc1snaGVhZGVycyddKXtcbiAgICBfaGVhZGVycyA9IG9wdGlvbnNbJ2hlYWRlcnMnXTtcbiAgfVxuICBpZiAoIS9eKEdFVHxERUxFVEUpJC9pLnRlc3QobWV0aG9kKSkge1xuICAgIF9oZWFkZXJzW1wiQ29udGVudC1UeXBlXCJdID0gXCJhcHBsaWNhdGlvbi9qc29uXCI7XG4gIH1cbiAgcGFyYW1zLmhlYWRlcnMgPSBfaGVhZGVycztcbiAgaWYgKGJvZHkpIHtcbiAgICBwYXJhbXMuYm9keSA9IEpTT04uc3RyaW5naWZ5KGJvZHkpO1xuICB9XG4gIHJldHVybiBwYXJhbXM7XG59O1xuXG4vKipcbiAqIENhbGwgQXBleCBSRVNUIHNlcnZpY2UgaW4gR0VUIHJlcXVlc3RcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gcGF0aCAtIFVSTCBwYXRoIHRvIEFwZXggUkVTVCBzZXJ2aWNlXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyAtIEhvbGRzIGhlYWRlcnMgYW5kIG90aGVyIG1ldGEgZGF0YSBmb3IgdGhlIHJlcXVlc3QuXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxPYmplY3Q+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxPYmplY3Q+fVxuICovXG5BcGV4LnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbihwYXRoLCBvcHRpb25zLCBjYWxsYmFjaykge1xuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYWxsYmFjayA9IG9wdGlvbnM7XG4gICAgb3B0aW9ucyA9IHVuZGVmaW5lZDtcbiAgfVxuICByZXR1cm4gdGhpcy5fY29ubi5yZXF1ZXN0KHRoaXMuX2NyZWF0ZVJlcXVlc3RQYXJhbXMoJ0dFVCcsIHBhdGgsIHVuZGVmaW5lZCwgb3B0aW9ucykpLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogQ2FsbCBBcGV4IFJFU1Qgc2VydmljZSBpbiBQT1NUIHJlcXVlc3RcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gcGF0aCAtIFVSTCBwYXRoIHRvIEFwZXggUkVTVCBzZXJ2aWNlXG4gKiBAcGFyYW0ge09iamVjdH0gW2JvZHldIC0gUmVxdWVzdCBib2R5XG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyAtIEhvbGRzIGhlYWRlcnMgYW5kIG90aGVyIG1ldGEgZGF0YSBmb3IgdGhlIHJlcXVlc3QuXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxPYmplY3Q+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxPYmplY3Q+fVxuICovXG5BcGV4LnByb3RvdHlwZS5wb3N0ID0gZnVuY3Rpb24ocGF0aCwgYm9keSwgb3B0aW9ucywgY2FsbGJhY2spIHtcbiAgaWYgKHR5cGVvZiBib2R5ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2FsbGJhY2sgPSBib2R5O1xuICAgIGJvZHkgPSB1bmRlZmluZWQ7XG4gICAgb3B0aW9ucyA9IHVuZGVmaW5lZDtcbiAgfVxuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYWxsYmFjayA9IG9wdGlvbnM7XG4gICAgb3B0aW9ucyA9IHVuZGVmaW5lZDtcbiAgfVxuICB2YXIgcGFyYW1zID0gdGhpcy5fY3JlYXRlUmVxdWVzdFBhcmFtcygnUE9TVCcsIHBhdGgsIGJvZHksIG9wdGlvbnMpO1xuICByZXR1cm4gdGhpcy5fY29ubi5yZXF1ZXN0KHBhcmFtcykudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBDYWxsIEFwZXggUkVTVCBzZXJ2aWNlIGluIFBVVCByZXF1ZXN0XG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHBhdGggLSBVUkwgcGF0aCB0byBBcGV4IFJFU1Qgc2VydmljZVxuICogQHBhcmFtIHtPYmplY3R9IFtib2R5XSAtIFJlcXVlc3QgYm9keVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIEhvbGRzIGhlYWRlcnMgYW5kIG90aGVyIG1ldGEgZGF0YSBmb3IgdGhlIHJlcXVlc3QuXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxPYmplY3Q+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxPYmplY3Q+fVxuICovXG5BcGV4LnByb3RvdHlwZS5wdXQgPSBmdW5jdGlvbihwYXRoLCBib2R5LCBvcHRpb25zLCBjYWxsYmFjaykge1xuICBpZiAodHlwZW9mIGJvZHkgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYWxsYmFjayA9IGJvZHk7XG4gICAgYm9keSA9IHVuZGVmaW5lZDtcbiAgICBvcHRpb25zID0gdW5kZWZpbmVkO1xuICB9XG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNhbGxiYWNrID0gb3B0aW9ucztcbiAgICBvcHRpb25zID0gdW5kZWZpbmVkO1xuICB9XG4gIHZhciBwYXJhbXMgPSB0aGlzLl9jcmVhdGVSZXF1ZXN0UGFyYW1zKCdQVVQnLCBwYXRoLCBib2R5LCBvcHRpb25zKTtcbiAgcmV0dXJuIHRoaXMuX2Nvbm4ucmVxdWVzdChwYXJhbXMpLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogQ2FsbCBBcGV4IFJFU1Qgc2VydmljZSBpbiBQQVRDSCByZXF1ZXN0XG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHBhdGggLSBVUkwgcGF0aCB0byBBcGV4IFJFU1Qgc2VydmljZVxuICogQHBhcmFtIHtPYmplY3R9IFtib2R5XSAtIFJlcXVlc3QgYm9keVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIEhvbGRzIGhlYWRlcnMgYW5kIG90aGVyIG1ldGEgZGF0YSBmb3IgdGhlIHJlcXVlc3QuXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxPYmplY3Q+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxPYmplY3Q+fVxuICovXG5BcGV4LnByb3RvdHlwZS5wYXRjaCA9IGZ1bmN0aW9uKHBhdGgsIGJvZHksIG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gIGlmICh0eXBlb2YgYm9keSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNhbGxiYWNrID0gYm9keTtcbiAgICBib2R5ID0gdW5kZWZpbmVkO1xuICAgIG9wdGlvbnMgPSB1bmRlZmluZWQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2FsbGJhY2sgPSBvcHRpb25zO1xuICAgIG9wdGlvbnMgPSB1bmRlZmluZWQ7XG4gIH1cbiAgdmFyIHBhcmFtcyA9IHRoaXMuX2NyZWF0ZVJlcXVlc3RQYXJhbXMoJ1BBVENIJywgcGF0aCwgYm9keSwgb3B0aW9ucyk7XG4gIHJldHVybiB0aGlzLl9jb25uLnJlcXVlc3QocGFyYW1zKS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIFN5bm9ueW0gb2YgQXBleCNkZWxldGUoKVxuICpcbiAqIEBtZXRob2QgQXBleCNkZWxcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gcGF0aCAtIFVSTCBwYXRoIHRvIEFwZXggUkVTVCBzZXJ2aWNlXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxPYmplY3Q+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxPYmplY3Q+fVxuICovXG4vKipcbiAqIENhbGwgQXBleCBSRVNUIHNlcnZpY2UgaW4gREVMRVRFIHJlcXVlc3RcbiAqXG4gKiBAbWV0aG9kIEFwZXgjZGVsZXRlXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHBhdGggLSBVUkwgcGF0aCB0byBBcGV4IFJFU1Qgc2VydmljZVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIEhvbGRzIGhlYWRlcnMgYW5kIG90aGVyIG1ldGEgZGF0YSBmb3IgdGhlIHJlcXVlc3QuXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxPYmplY3Q+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxPYmplY3Q+fVxuICovXG5BcGV4LnByb3RvdHlwZS5kZWwgPVxuICBBcGV4LnByb3RvdHlwZVtcImRlbGV0ZVwiXSA9IGZ1bmN0aW9uKHBhdGgsIG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNhbGxiYWNrID0gb3B0aW9ucztcbiAgICBvcHRpb25zID0gdW5kZWZpbmVkO1xuICB9XG4gIHJldHVybiB0aGlzLl9jb25uLnJlcXVlc3QodGhpcy5fY3JlYXRlUmVxdWVzdFBhcmFtcygnREVMRVRFJywgcGF0aCwgdW5kZWZpbmVkLCBvcHRpb25zKSkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qXG4gKiBSZWdpc3RlciBob29rIGluIGNvbm5lY3Rpb24gaW5zdGFudGlhdGlvbiBmb3IgZHluYW1pY2FsbHkgYWRkaW5nIHRoaXMgQVBJIG1vZHVsZSBmZWF0dXJlc1xuICovXG5qc2ZvcmNlLm9uKCdjb25uZWN0aW9uOm5ldycsIGZ1bmN0aW9uKGNvbm4pIHtcbiAgY29ubi5hcGV4ID0gbmV3IEFwZXgoY29ubik7XG59KTtcblxuXG5tb2R1bGUuZXhwb3J0cyA9IEFwZXg7XG4iLCIvKmdsb2JhbCBwcm9jZXNzKi9cbi8qKlxuICogQGZpbGUgTWFuYWdlcyBTYWxlc2ZvcmNlIEJ1bGsgQVBJIHJlbGF0ZWQgb3BlcmF0aW9uc1xuICogQGF1dGhvciBTaGluaWNoaSBUb21pdGEgPHNoaW5pY2hpLnRvbWl0YUBnbWFpbC5jb20+XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgICAgID0gcmVxdWlyZSgnaW5oZXJpdHMnKSxcbiAgICBzdHJlYW0gICAgICAgPSByZXF1aXJlKCdyZWFkYWJsZS1zdHJlYW0nKSxcbiAgICBEdXBsZXggICAgICAgPSBzdHJlYW0uRHVwbGV4LFxuICAgIGV2ZW50cyAgICAgICA9IHJlcXVpcmUoJ2V2ZW50cycpLFxuICAgIF8gICAgICAgICAgICA9IHJlcXVpcmUoJ2xvZGFzaC9jb3JlJyksXG4gICAgam9pblN0cmVhbXMgID0gcmVxdWlyZSgnbXVsdGlzdHJlYW0nKSxcbiAgICBqc2ZvcmNlICAgICAgPSByZXF1aXJlKCcuLi9jb3JlJyksXG4gICAgUmVjb3JkU3RyZWFtID0gcmVxdWlyZSgnLi4vcmVjb3JkLXN0cmVhbScpLFxuICAgIFByb21pc2UgICAgICA9IHJlcXVpcmUoJy4uL3Byb21pc2UnKSxcbiAgICBIdHRwQXBpICAgICAgPSByZXF1aXJlKCcuLi9odHRwLWFwaScpO1xuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuLyoqXG4gKiBDbGFzcyBmb3IgQnVsayBBUEkgSm9iXG4gKlxuICogQHByb3RlY3RlZFxuICogQGNsYXNzIEJ1bGt+Sm9iXG4gKiBAZXh0ZW5kcyBldmVudHMuRXZlbnRFbWl0dGVyXG4gKlxuICogQHBhcmFtIHtCdWxrfSBidWxrIC0gQnVsayBBUEkgb2JqZWN0XG4gKiBAcGFyYW0ge1N0cmluZ30gW3R5cGVdIC0gU09iamVjdCB0eXBlXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wZXJhdGlvbl0gLSBCdWxrIGxvYWQgb3BlcmF0aW9uICgnaW5zZXJ0JywgJ3VwZGF0ZScsICd1cHNlcnQnLCAnZGVsZXRlJywgb3IgJ2hhcmREZWxldGUnKVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIE9wdGlvbnMgZm9yIGJ1bGsgbG9hZGluZyBvcGVyYXRpb25cbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5leHRJZEZpZWxkXSAtIEV4dGVybmFsIElEIGZpZWxkIG5hbWUgKHVzZWQgd2hlbiB1cHNlcnQgb3BlcmF0aW9uKS5cbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5jb25jdXJyZW5jeU1vZGVdIC0gJ1NlcmlhbCcgb3IgJ1BhcmFsbGVsJy4gRGVmYXVsdHMgdG8gUGFyYWxsZWwuXG4gKiBAcGFyYW0ge1N0cmluZ30gW2pvYklkXSAtIEpvYiBJRCAoaWYgYWxyZWFkeSBhdmFpbGFibGUpXG4gKi9cbnZhciBKb2IgPSBmdW5jdGlvbihidWxrLCB0eXBlLCBvcGVyYXRpb24sIG9wdGlvbnMsIGpvYklkKSB7XG4gIHRoaXMuX2J1bGsgPSBidWxrO1xuICB0aGlzLnR5cGUgPSB0eXBlO1xuICB0aGlzLm9wZXJhdGlvbiA9IG9wZXJhdGlvbjtcbiAgdGhpcy5vcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgdGhpcy5pZCA9IGpvYklkO1xuICB0aGlzLnN0YXRlID0gdGhpcy5pZCA/ICdPcGVuJyA6ICdVbmtub3duJztcbiAgdGhpcy5fYmF0Y2hlcyA9IHt9O1xufTtcblxuaW5oZXJpdHMoSm9iLCBldmVudHMuRXZlbnRFbWl0dGVyKTtcblxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBCdWxrfkpvYkluZm9cbiAqIEBwcm9wIHtTdHJpbmd9IGlkIC0gSm9iIElEXG4gKiBAcHJvcCB7U3RyaW5nfSBvYmplY3QgLSBPYmplY3QgdHlwZSBuYW1lXG4gKiBAcHJvcCB7U3RyaW5nfSBvcGVyYXRpb24gLSBPcGVyYXRpb24gdHlwZSBvZiB0aGUgam9iXG4gKiBAcHJvcCB7U3RyaW5nfSBzdGF0ZSAtIEpvYiBzdGF0dXNcbiAqL1xuXG4vKipcbiAqIFJldHVybiBsYXRlc3Qgam9iSW5mbyBmcm9tIGNhY2hlXG4gKlxuICogQG1ldGhvZCBCdWxrfkpvYiNpbmZvXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxCdWxrfkpvYkluZm8+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxCdWxrfkpvYkluZm8+fVxuICovXG5Kb2IucHJvdG90eXBlLmluZm8gPSBmdW5jdGlvbihjYWxsYmFjaykge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIC8vIGlmIGNhY2hlIGlzIG5vdCBhdmFpbGFibGUsIGNoZWNrIHRoZSBsYXRlc3RcbiAgaWYgKCF0aGlzLl9qb2JJbmZvKSB7XG4gICAgdGhpcy5fam9iSW5mbyA9IHRoaXMuY2hlY2soKTtcbiAgfVxuICByZXR1cm4gdGhpcy5fam9iSW5mby50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIE9wZW4gbmV3IGpvYiBhbmQgZ2V0IGpvYmluZm9cbiAqXG4gKiBAbWV0aG9kIEJ1bGt+Sm9iI29wZW5cbiAqIEBwYXJhbSB7Q2FsbGJhY2suPEJ1bGt+Sm9iSW5mbz59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPEJ1bGt+Sm9iSW5mbz59XG4gKi9cbkpvYi5wcm90b3R5cGUub3BlbiA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIGJ1bGsgPSB0aGlzLl9idWxrO1xuICB2YXIgbG9nZ2VyID0gYnVsay5fbG9nZ2VyO1xuXG4gIC8vIGlmIG5vdCByZXF1ZXN0ZWQgb3BlbmluZyBqb2JcbiAgaWYgKCF0aGlzLl9qb2JJbmZvKSB7XG4gICAgdmFyIG9wZXJhdGlvbiA9IHRoaXMub3BlcmF0aW9uLnRvTG93ZXJDYXNlKCk7XG4gICAgaWYgKG9wZXJhdGlvbiA9PT0gJ2hhcmRkZWxldGUnKSB7IG9wZXJhdGlvbiA9ICdoYXJkRGVsZXRlJzsgfVxuICAgIHZhciBib2R5ID0gW1xuICAgICAgJzw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/PicsXG4gICAgICAnPGpvYkluZm8gIHhtbG5zPVwiaHR0cDovL3d3dy5mb3JjZS5jb20vMjAwOS8wNi9hc3luY2FwaS9kYXRhbG9hZFwiPicsXG4gICAgICAgICc8b3BlcmF0aW9uPicgKyBvcGVyYXRpb24gKyAnPC9vcGVyYXRpb24+JyxcbiAgICAgICAgJzxvYmplY3Q+JyArIHRoaXMudHlwZSArICc8L29iamVjdD4nLFxuICAgICAgICAodGhpcy5vcHRpb25zLmV4dElkRmllbGQgP1xuICAgICAgICAgJzxleHRlcm5hbElkRmllbGROYW1lPicrdGhpcy5vcHRpb25zLmV4dElkRmllbGQrJzwvZXh0ZXJuYWxJZEZpZWxkTmFtZT4nIDpcbiAgICAgICAgICcnKSxcbiAgICAgICAgKHRoaXMub3B0aW9ucy5jb25jdXJyZW5jeU1vZGUgP1xuICAgICAgICAgJzxjb25jdXJyZW5jeU1vZGU+Jyt0aGlzLm9wdGlvbnMuY29uY3VycmVuY3lNb2RlKyc8L2NvbmN1cnJlbmN5TW9kZT4nIDpcbiAgICAgICAgICcnKSxcbiAgICAgICAgKHRoaXMub3B0aW9ucy5hc3NpZ25tZW50UnVsZUlkID9cbiAgICAgICAgICAnPGFzc2lnbm1lbnRSdWxlSWQ+JyArIHRoaXMub3B0aW9ucy5hc3NpZ25tZW50UnVsZUlkICsgJzwvYXNzaWdubWVudFJ1bGVJZD4nIDpcbiAgICAgICAgICAnJyksXG4gICAgICAgICc8Y29udGVudFR5cGU+Q1NWPC9jb250ZW50VHlwZT4nLFxuICAgICAgJzwvam9iSW5mbz4nXG4gICAgXS5qb2luKCcnKTtcblxuICAgIHRoaXMuX2pvYkluZm8gPSBidWxrLl9yZXF1ZXN0KHtcbiAgICAgIG1ldGhvZCA6ICdQT1NUJyxcbiAgICAgIHBhdGggOiBcIi9qb2JcIixcbiAgICAgIGJvZHkgOiBib2R5LFxuICAgICAgaGVhZGVycyA6IHtcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIiA6IFwiYXBwbGljYXRpb24veG1sOyBjaGFyc2V0PXV0Zi04XCJcbiAgICAgIH0sXG4gICAgICByZXNwb25zZVR5cGU6IFwiYXBwbGljYXRpb24veG1sXCJcbiAgICB9KS50aGVuKGZ1bmN0aW9uKHJlcykge1xuICAgICAgc2VsZi5lbWl0KFwib3BlblwiLCByZXMuam9iSW5mbyk7XG4gICAgICBzZWxmLmlkID0gcmVzLmpvYkluZm8uaWQ7XG4gICAgICBzZWxmLnN0YXRlID0gcmVzLmpvYkluZm8uc3RhdGU7XG4gICAgICByZXR1cm4gcmVzLmpvYkluZm87XG4gICAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICBzZWxmLmVtaXQoXCJlcnJvclwiLCBlcnIpO1xuICAgICAgdGhyb3cgZXJyO1xuICAgIH0pO1xuICB9XG4gIHJldHVybiB0aGlzLl9qb2JJbmZvLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogQ3JlYXRlIGEgbmV3IGJhdGNoIGluc3RhbmNlIGluIHRoZSBqb2JcbiAqXG4gKiBAbWV0aG9kIEJ1bGt+Sm9iI2NyZWF0ZUJhdGNoXG4gKiBAcmV0dXJucyB7QnVsa35CYXRjaH1cbiAqL1xuSm9iLnByb3RvdHlwZS5jcmVhdGVCYXRjaCA9IGZ1bmN0aW9uKCkge1xuICB2YXIgYmF0Y2ggPSBuZXcgQmF0Y2godGhpcyk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgYmF0Y2gub24oJ3F1ZXVlJywgZnVuY3Rpb24oKSB7XG4gICAgc2VsZi5fYmF0Y2hlc1tiYXRjaC5pZF0gPSBiYXRjaDtcbiAgfSk7XG4gIHJldHVybiBiYXRjaDtcbn07XG5cbi8qKlxuICogR2V0IGEgYmF0Y2ggaW5zdGFuY2Ugc3BlY2lmaWVkIGJ5IGdpdmVuIGJhdGNoIElEXG4gKlxuICogQG1ldGhvZCBCdWxrfkpvYiNiYXRjaFxuICogQHBhcmFtIHtTdHJpbmd9IGJhdGNoSWQgLSBCYXRjaCBJRFxuICogQHJldHVybnMge0J1bGt+QmF0Y2h9XG4gKi9cbkpvYi5wcm90b3R5cGUuYmF0Y2ggPSBmdW5jdGlvbihiYXRjaElkKSB7XG4gIHZhciBiYXRjaCA9IHRoaXMuX2JhdGNoZXNbYmF0Y2hJZF07XG4gIGlmICghYmF0Y2gpIHtcbiAgICBiYXRjaCA9IG5ldyBCYXRjaCh0aGlzLCBiYXRjaElkKTtcbiAgICB0aGlzLl9iYXRjaGVzW2JhdGNoSWRdID0gYmF0Y2g7XG4gIH1cbiAgcmV0dXJuIGJhdGNoO1xufTtcblxuLyoqXG4gKiBDaGVjayB0aGUgbGF0ZXN0IGpvYiBzdGF0dXMgZnJvbSBzZXJ2ZXJcbiAqXG4gKiBAbWV0aG9kIEJ1bGt+Sm9iI2NoZWNrXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxCdWxrfkpvYkluZm8+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxCdWxrfkpvYkluZm8+fVxuICovXG5Kb2IucHJvdG90eXBlLmNoZWNrID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgYnVsayA9IHRoaXMuX2J1bGs7XG4gIHZhciBsb2dnZXIgPSBidWxrLl9sb2dnZXI7XG5cbiAgdGhpcy5fam9iSW5mbyA9IHRoaXMuX3dhaXRBc3NpZ24oKS50aGVuKGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBidWxrLl9yZXF1ZXN0KHtcbiAgICAgIG1ldGhvZCA6ICdHRVQnLFxuICAgICAgcGF0aCA6IFwiL2pvYi9cIiArIHNlbGYuaWQsXG4gICAgICByZXNwb25zZVR5cGU6IFwiYXBwbGljYXRpb24veG1sXCJcbiAgICB9KTtcbiAgfSkudGhlbihmdW5jdGlvbihyZXMpIHtcbiAgICBsb2dnZXIuZGVidWcocmVzLmpvYkluZm8pO1xuICAgIHNlbGYuaWQgPSByZXMuam9iSW5mby5pZDtcbiAgICBzZWxmLnR5cGUgPSByZXMuam9iSW5mby5vYmplY3Q7XG4gICAgc2VsZi5vcGVyYXRpb24gPSByZXMuam9iSW5mby5vcGVyYXRpb247XG4gICAgc2VsZi5zdGF0ZSA9IHJlcy5qb2JJbmZvLnN0YXRlO1xuICAgIHJldHVybiByZXMuam9iSW5mbztcbiAgfSk7XG4gIHJldHVybiB0aGlzLl9qb2JJbmZvLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogV2FpdCB0aWxsIHRoZSBqb2IgaXMgYXNzaWduZWQgdG8gc2VydmVyXG4gKlxuICogQG1ldGhvZCBCdWxrfkpvYiNpbmZvXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxCdWxrfkpvYkluZm8+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxCdWxrfkpvYkluZm8+fVxuICovXG5Kb2IucHJvdG90eXBlLl93YWl0QXNzaWduID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgcmV0dXJuICh0aGlzLmlkID8gUHJvbWlzZS5yZXNvbHZlKHsgaWQ6IHRoaXMuaWQgfSkgOiB0aGlzLm9wZW4oKSkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuXG4vKipcbiAqIExpc3QgYWxsIHJlZ2lzdGVyZWQgYmF0Y2ggaW5mbyBpbiBqb2JcbiAqXG4gKiBAbWV0aG9kIEJ1bGt+Sm9iI2xpc3RcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPEFycmF5LjxCdWxrfkJhdGNoSW5mbz4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxBcnJheS48QnVsa35CYXRjaEluZm8+Pn1cbiAqL1xuSm9iLnByb3RvdHlwZS5saXN0ID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgYnVsayA9IHRoaXMuX2J1bGs7XG4gIHZhciBsb2dnZXIgPSBidWxrLl9sb2dnZXI7XG5cbiAgcmV0dXJuIHRoaXMuX3dhaXRBc3NpZ24oKS50aGVuKGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBidWxrLl9yZXF1ZXN0KHtcbiAgICAgIG1ldGhvZCA6ICdHRVQnLFxuICAgICAgcGF0aCA6IFwiL2pvYi9cIiArIHNlbGYuaWQgKyBcIi9iYXRjaFwiLFxuICAgICAgcmVzcG9uc2VUeXBlOiBcImFwcGxpY2F0aW9uL3htbFwiXG4gICAgfSk7XG4gIH0pLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgbG9nZ2VyLmRlYnVnKHJlcy5iYXRjaEluZm9MaXN0LmJhdGNoSW5mbyk7XG4gICAgdmFyIGJhdGNoSW5mb0xpc3QgPSByZXMuYmF0Y2hJbmZvTGlzdDtcbiAgICBiYXRjaEluZm9MaXN0ID0gXy5pc0FycmF5KGJhdGNoSW5mb0xpc3QuYmF0Y2hJbmZvKSA/IGJhdGNoSW5mb0xpc3QuYmF0Y2hJbmZvIDogWyBiYXRjaEluZm9MaXN0LmJhdGNoSW5mbyBdO1xuICAgIHJldHVybiBiYXRjaEluZm9MaXN0O1xuICB9KS50aGVuQ2FsbChjYWxsYmFjayk7XG5cbn07XG5cbi8qKlxuICogQ2xvc2Ugb3BlbmVkIGpvYlxuICpcbiAqIEBtZXRob2QgQnVsa35Kb2IjY2xvc2VcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPEJ1bGt+Sm9iSW5mbz59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPEJ1bGt+Sm9iSW5mbz59XG4gKi9cbkpvYi5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbigpIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICByZXR1cm4gdGhpcy5fY2hhbmdlU3RhdGUoXCJDbG9zZWRcIikudGhlbihmdW5jdGlvbihqb2JJbmZvKSB7XG4gICAgc2VsZi5pZCA9IG51bGw7XG4gICAgc2VsZi5lbWl0KFwiY2xvc2VcIiwgam9iSW5mbyk7XG4gICAgcmV0dXJuIGpvYkluZm87XG4gIH0sIGZ1bmN0aW9uKGVycikge1xuICAgIHNlbGYuZW1pdChcImVycm9yXCIsIGVycik7XG4gICAgdGhyb3cgZXJyO1xuICB9KTtcbn07XG5cbi8qKlxuICogU2V0IHRoZSBzdGF0dXMgdG8gYWJvcnRcbiAqXG4gKiBAbWV0aG9kIEJ1bGt+Sm9iI2Fib3J0XG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxCdWxrfkpvYkluZm8+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxCdWxrfkpvYkluZm8+fVxuICovXG5Kb2IucHJvdG90eXBlLmFib3J0ID0gZnVuY3Rpb24oKSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgcmV0dXJuIHRoaXMuX2NoYW5nZVN0YXRlKFwiQWJvcnRlZFwiKS50aGVuKGZ1bmN0aW9uKGpvYkluZm8pIHtcbiAgICBzZWxmLmlkID0gbnVsbDtcbiAgICBzZWxmLmVtaXQoXCJhYm9ydFwiLCBqb2JJbmZvKTtcbiAgICByZXR1cm4gam9iSW5mbztcbiAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgc2VsZi5lbWl0KFwiZXJyb3JcIiwgZXJyKTtcbiAgICB0aHJvdyBlcnI7XG4gIH0pO1xufTtcblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5Kb2IucHJvdG90eXBlLl9jaGFuZ2VTdGF0ZSA9IGZ1bmN0aW9uKHN0YXRlLCBjYWxsYmFjaykge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciBidWxrID0gdGhpcy5fYnVsaztcbiAgdmFyIGxvZ2dlciA9IGJ1bGsuX2xvZ2dlcjtcblxuICB0aGlzLl9qb2JJbmZvID0gdGhpcy5fd2FpdEFzc2lnbigpLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgdmFyIGJvZHkgPSBbXG4gICAgICAnPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+JyxcbiAgICAgICc8am9iSW5mbyB4bWxucz1cImh0dHA6Ly93d3cuZm9yY2UuY29tLzIwMDkvMDYvYXN5bmNhcGkvZGF0YWxvYWRcIj4nLFxuICAgICAgICAnPHN0YXRlPicgKyBzdGF0ZSArICc8L3N0YXRlPicsXG4gICAgICAnPC9qb2JJbmZvPidcbiAgICBdLmpvaW4oJycpO1xuICAgIHJldHVybiBidWxrLl9yZXF1ZXN0KHtcbiAgICAgIG1ldGhvZCA6ICdQT1NUJyxcbiAgICAgIHBhdGggOiBcIi9qb2IvXCIgKyBzZWxmLmlkLFxuICAgICAgYm9keSA6IGJvZHksXG4gICAgICBoZWFkZXJzIDoge1xuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiIDogXCJhcHBsaWNhdGlvbi94bWw7IGNoYXJzZXQ9dXRmLThcIlxuICAgICAgfSxcbiAgICAgIHJlc3BvbnNlVHlwZTogXCJhcHBsaWNhdGlvbi94bWxcIlxuICAgIH0pO1xuICB9KS50aGVuKGZ1bmN0aW9uKHJlcykge1xuICAgIGxvZ2dlci5kZWJ1ZyhyZXMuam9iSW5mbyk7XG4gICAgc2VsZi5zdGF0ZSA9IHJlcy5qb2JJbmZvLnN0YXRlO1xuICAgIHJldHVybiByZXMuam9iSW5mbztcbiAgfSk7XG4gIHJldHVybiB0aGlzLl9qb2JJbmZvLnRoZW5DYWxsKGNhbGxiYWNrKTtcblxufTtcblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuLyoqXG4gKiBCYXRjaCAoZXh0ZW5kcyBSZWNvcmRTdHJlYW0pXG4gKlxuICogQHByb3RlY3RlZFxuICogQGNsYXNzIEJ1bGt+QmF0Y2hcbiAqIEBleHRlbmRzIHtzdHJlYW0uV3JpdGFibGV9XG4gKiBAaW1wbGVtZW50cyB7UHJvbWlzZS48QXJyYXkuPFJlY29yZFJlc3VsdD4+fVxuICogQHBhcmFtIHtCdWxrfkpvYn0gam9iIC0gQnVsayBqb2Igb2JqZWN0XG4gKiBAcGFyYW0ge1N0cmluZ30gW2JhdGNoSWRdIC0gQmF0Y2ggSUQgKGlmIGFscmVhZHkgYXZhaWxhYmxlKVxuICovXG52YXIgQmF0Y2ggPSBmdW5jdGlvbihqb2IsIGJhdGNoSWQpIHtcbiAgQmF0Y2guc3VwZXJfLmNhbGwodGhpcywgeyBvYmplY3RNb2RlOiB0cnVlIH0pO1xuICB0aGlzLmpvYiA9IGpvYjtcbiAgdGhpcy5pZCA9IGJhdGNoSWQ7XG4gIHRoaXMuX2J1bGsgPSBqb2IuX2J1bGs7XG4gIHRoaXMuX2RlZmVycmVkID0gUHJvbWlzZS5kZWZlcigpO1xuICB0aGlzLl9zZXR1cERhdGFTdHJlYW1zKCk7XG59O1xuXG5pbmhlcml0cyhCYXRjaCwgc3RyZWFtLldyaXRhYmxlKTtcblxuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbkJhdGNoLnByb3RvdHlwZS5fc2V0dXBEYXRhU3RyZWFtcyA9IGZ1bmN0aW9uKCkge1xuICB2YXIgYmF0Y2ggPSB0aGlzO1xuICB2YXIgY29udmVydGVyT3B0aW9ucyA9IHsgbnVsbFZhbHVlIDogJyNOL0EnIH07XG4gIHRoaXMuX3VwbG9hZFN0cmVhbSA9IG5ldyBSZWNvcmRTdHJlYW0uU2VyaWFsaXphYmxlKCk7XG4gIHRoaXMuX3VwbG9hZERhdGFTdHJlYW0gPSB0aGlzLl91cGxvYWRTdHJlYW0uc3RyZWFtKCdjc3YnLCBjb252ZXJ0ZXJPcHRpb25zKTtcbiAgdGhpcy5fZG93bmxvYWRTdHJlYW0gPSBuZXcgUmVjb3JkU3RyZWFtLlBhcnNhYmxlKCk7XG4gIHRoaXMuX2Rvd25sb2FkRGF0YVN0cmVhbSA9IHRoaXMuX2Rvd25sb2FkU3RyZWFtLnN0cmVhbSgnY3N2JywgY29udmVydGVyT3B0aW9ucyk7XG5cbiAgdGhpcy5vbignZmluaXNoJywgZnVuY3Rpb24oKSB7XG4gICAgYmF0Y2guX3VwbG9hZFN0cmVhbS5lbmQoKTtcbiAgfSk7XG4gIHRoaXMuX3VwbG9hZERhdGFTdHJlYW0ub25jZSgncmVhZGFibGUnLCBmdW5jdGlvbigpIHtcbiAgICBiYXRjaC5qb2Iub3BlbigpLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAvLyBwaXBlIHVwbG9hZCBkYXRhIHRvIGJhdGNoIEFQSSByZXF1ZXN0IHN0cmVhbVxuICAgICAgYmF0Y2guX3VwbG9hZERhdGFTdHJlYW0ucGlwZShiYXRjaC5fY3JlYXRlUmVxdWVzdFN0cmVhbSgpKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgLy8gZHVwbGV4IGRhdGEgc3RyZWFtLCBvcGVuZWQgYWNjZXNzIHRvIEFQSSBwcm9ncmFtbWVycyBieSBCYXRjaCNzdHJlYW0oKVxuICB2YXIgZGF0YVN0cmVhbSA9IHRoaXMuX2RhdGFTdHJlYW0gPSBuZXcgRHVwbGV4KCk7XG4gIGRhdGFTdHJlYW0uX3dyaXRlID0gZnVuY3Rpb24oZGF0YSwgZW5jLCBjYikge1xuICAgIGJhdGNoLl91cGxvYWREYXRhU3RyZWFtLndyaXRlKGRhdGEsIGVuYywgY2IpO1xuICB9O1xuICBkYXRhU3RyZWFtLm9uKCdmaW5pc2gnLCBmdW5jdGlvbigpIHtcbiAgICBiYXRjaC5fdXBsb2FkRGF0YVN0cmVhbS5lbmQoKTtcbiAgfSk7XG5cbiAgdGhpcy5fZG93bmxvYWREYXRhU3RyZWFtLm9uKCdyZWFkYWJsZScsIGZ1bmN0aW9uKCkge1xuICAgIGRhdGFTdHJlYW0ucmVhZCgwKTtcbiAgfSk7XG4gIHRoaXMuX2Rvd25sb2FkRGF0YVN0cmVhbS5vbignZW5kJywgZnVuY3Rpb24oKSB7XG4gICAgZGF0YVN0cmVhbS5wdXNoKG51bGwpO1xuICB9KTtcbiAgZGF0YVN0cmVhbS5fcmVhZCA9IGZ1bmN0aW9uKHNpemUpIHtcbiAgICB2YXIgY2h1bms7XG4gICAgd2hpbGUgKChjaHVuayA9IGJhdGNoLl9kb3dubG9hZERhdGFTdHJlYW0ucmVhZCgpKSAhPT0gbnVsbCkge1xuICAgICAgZGF0YVN0cmVhbS5wdXNoKGNodW5rKTtcbiAgICB9XG4gIH07XG59O1xuXG4vKipcbiAqIENvbm5lY3QgYmF0Y2ggQVBJIGFuZCBjcmVhdGUgc3RyZWFtIGluc3RhbmNlIG9mIHJlcXVlc3QvcmVzcG9uc2VcbiAqXG4gKiBAcHJpdmF0ZVxuICogQHJldHVybnMge3N0cmVhbS5EdXBsZXh9XG4gKi9cbkJhdGNoLnByb3RvdHlwZS5fY3JlYXRlUmVxdWVzdFN0cmVhbSA9IGZ1bmN0aW9uKCkge1xuICB2YXIgYmF0Y2ggPSB0aGlzO1xuICB2YXIgYnVsayA9IGJhdGNoLl9idWxrO1xuICB2YXIgbG9nZ2VyID0gYnVsay5fbG9nZ2VyO1xuXG4gIHJldHVybiBidWxrLl9yZXF1ZXN0KHtcbiAgICBtZXRob2QgOiAnUE9TVCcsXG4gICAgcGF0aCA6IFwiL2pvYi9cIiArIGJhdGNoLmpvYi5pZCArIFwiL2JhdGNoXCIsXG4gICAgaGVhZGVyczoge1xuICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJ0ZXh0L2NzdlwiXG4gICAgfSxcbiAgICByZXNwb25zZVR5cGU6IFwiYXBwbGljYXRpb24veG1sXCJcbiAgfSwgZnVuY3Rpb24oZXJyLCByZXMpIHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICBiYXRjaC5lbWl0KCdlcnJvcicsIGVycik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvZ2dlci5kZWJ1ZyhyZXMuYmF0Y2hJbmZvKTtcbiAgICAgIGJhdGNoLmlkID0gcmVzLmJhdGNoSW5mby5pZDtcbiAgICAgIGJhdGNoLmVtaXQoJ3F1ZXVlJywgcmVzLmJhdGNoSW5mbyk7XG4gICAgfVxuICB9KS5zdHJlYW0oKTtcbn07XG5cbi8qKlxuICogSW1wbGVtZW50YXRpb24gb2YgV3JpdGFibGVcbiAqXG4gKiBAb3ZlcnJpZGVcbiAqIEBwcml2YXRlXG4gKi9cbkJhdGNoLnByb3RvdHlwZS5fd3JpdGUgPSBmdW5jdGlvbihyZWNvcmQsIGVuYywgY2IpIHtcbiAgcmVjb3JkID0gXy5jbG9uZShyZWNvcmQpO1xuICBpZiAodGhpcy5qb2Iub3BlcmF0aW9uID09PSBcImluc2VydFwiKSB7XG4gICAgZGVsZXRlIHJlY29yZC5JZDtcbiAgfSBlbHNlIGlmICh0aGlzLmpvYi5vcGVyYXRpb24gPT09IFwiZGVsZXRlXCIpIHtcbiAgICByZWNvcmQgPSB7IElkOiByZWNvcmQuSWQgfTtcbiAgfVxuICBkZWxldGUgcmVjb3JkLnR5cGU7XG4gIGRlbGV0ZSByZWNvcmQuYXR0cmlidXRlcztcbiAgdGhpcy5fdXBsb2FkU3RyZWFtLndyaXRlKHJlY29yZCwgZW5jLCBjYik7XG59O1xuXG4vKipcbiAqIFJldHVybnMgZHVwbGV4IHN0cmVhbSB3aGljaCBhY2NlcHRzIENTViBkYXRhIGlucHV0IGFuZCBiYXRjaCByZXN1bHQgb3V0cHV0XG4gKlxuICogQHJldHVybnMge3N0cmVhbS5EdXBsZXh9XG4gKi9cbkJhdGNoLnByb3RvdHlwZS5zdHJlYW0gPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuX2RhdGFTdHJlYW07XG59O1xuXG4vKipcbiAqIEV4ZWN1dGUgYmF0Y2ggb3BlcmF0aW9uXG4gKlxuICogQG1ldGhvZCBCdWxrfkJhdGNoI2V4ZWN1dGVcbiAqIEBwYXJhbSB7QXJyYXkuPFJlY29yZD58c3RyZWFtLlN0cmVhbXxTdHJpbmd9IFtpbnB1dF0gLSBJbnB1dCBzb3VyY2UgZm9yIGJhdGNoIG9wZXJhdGlvbi4gQWNjZXB0cyBhcnJheSBvZiByZWNvcmRzLCBDU1Ygc3RyaW5nLCBhbmQgQ1NWIGRhdGEgaW5wdXQgc3RyZWFtIGluIGluc2VydC91cGRhdGUvdXBzZXJ0L2RlbGV0ZS9oYXJkRGVsZXRlIG9wZXJhdGlvbiwgU09RTCBzdHJpbmcgaW4gcXVlcnkgb3BlcmF0aW9uLlxuICogQHBhcmFtIHtDYWxsYmFjay48QXJyYXkuPFJlY29yZFJlc3VsdD58QXJyYXkuPEJhdGNoUmVzdWx0SW5mbz4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtCdWxrfkJhdGNofVxuICovXG5CYXRjaC5wcm90b3R5cGUucnVuID1cbkJhdGNoLnByb3RvdHlwZS5leGVjID1cbkJhdGNoLnByb3RvdHlwZS5leGVjdXRlID0gZnVuY3Rpb24oaW5wdXQsIGNhbGxiYWNrKSB7XG4gIHZhciBzZWxmID0gdGhpcztcblxuICBpZiAodHlwZW9mIGlucHV0ID09PSAnZnVuY3Rpb24nKSB7IC8vIGlmIGlucHV0IGFyZ3VtZW50IGlzIG9taXR0ZWRcbiAgICBjYWxsYmFjayA9IGlucHV0O1xuICAgIGlucHV0ID0gbnVsbDtcbiAgfVxuXG4gIC8vIGlmIGJhdGNoIGlzIGFscmVhZHkgZXhlY3V0ZWRcbiAgaWYgKHRoaXMuX3Jlc3VsdCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkJhdGNoIGFscmVhZHkgZXhlY3V0ZWQuXCIpO1xuICB9XG5cbiAgdmFyIHJkZWZlcnJlZCA9IFByb21pc2UuZGVmZXIoKTtcbiAgdGhpcy5fcmVzdWx0ID0gcmRlZmVycmVkLnByb21pc2U7XG4gIHRoaXMuX3Jlc3VsdC50aGVuKGZ1bmN0aW9uKHJlcykge1xuICAgIHNlbGYuX2RlZmVycmVkLnJlc29sdmUocmVzKTtcbiAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgc2VsZi5fZGVmZXJyZWQucmVqZWN0KGVycik7XG4gIH0pO1xuICB0aGlzLm9uY2UoJ3Jlc3BvbnNlJywgZnVuY3Rpb24ocmVzKSB7XG4gICAgcmRlZmVycmVkLnJlc29sdmUocmVzKTtcbiAgfSk7XG4gIHRoaXMub25jZSgnZXJyb3InLCBmdW5jdGlvbihlcnIpIHtcbiAgICByZGVmZXJyZWQucmVqZWN0KGVycik7XG4gIH0pO1xuXG4gIGlmIChfLmlzT2JqZWN0KGlucHV0KSAmJiBfLmlzRnVuY3Rpb24oaW5wdXQucGlwZSkpIHsgLy8gaWYgaW5wdXQgaGFzIHN0cmVhbS5SZWFkYWJsZSBpbnRlcmZhY2VcbiAgICBpbnB1dC5waXBlKHRoaXMuX2RhdGFTdHJlYW0pO1xuICB9IGVsc2Uge1xuICAgIHZhciBkYXRhO1xuICAgIGlmIChfLmlzQXJyYXkoaW5wdXQpKSB7XG4gICAgICBfLmZvckVhY2goaW5wdXQsIGZ1bmN0aW9uKHJlY29yZCkge1xuICAgICAgICBPYmplY3Qua2V5cyhyZWNvcmQpLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiByZWNvcmRba2V5XSA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICAgICAgICByZWNvcmRba2V5XSA9IFN0cmluZyhyZWNvcmRba2V5XSlcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIHNlbGYud3JpdGUocmVjb3JkKTtcbiAgICAgIH0pO1xuICAgICAgc2VsZi5lbmQoKTtcbiAgICB9IGVsc2UgaWYgKF8uaXNTdHJpbmcoaW5wdXQpKXtcbiAgICAgIGRhdGEgPSBpbnB1dDtcbiAgICAgIHRoaXMuX2RhdGFTdHJlYW0ud3JpdGUoZGF0YSwgJ3V0ZjgnKTtcbiAgICAgIHRoaXMuX2RhdGFTdHJlYW0uZW5kKCk7XG4gICAgfVxuICB9XG5cbiAgLy8gcmV0dXJuIEJhdGNoIGluc3RhbmNlIGZvciBjaGFpbmluZ1xuICByZXR1cm4gdGhpcy50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIFByb21pc2UvQSsgaW50ZXJmYWNlXG4gKiBodHRwOi8vcHJvbWlzZXMtYXBsdXMuZ2l0aHViLmlvL3Byb21pc2VzLXNwZWMvXG4gKlxuICogRGVsZWdhdGUgdG8gZGVmZXJyZWQgcHJvbWlzZSwgcmV0dXJuIHByb21pc2UgaW5zdGFuY2UgZm9yIGJhdGNoIHJlc3VsdFxuICpcbiAqIEBtZXRob2QgQnVsa35CYXRjaCN0aGVuXG4gKi9cbkJhdGNoLnByb3RvdHlwZS50aGVuID0gZnVuY3Rpb24ob25SZXNvbHZlZCwgb25SZWplY3QsIG9uUHJvZ3Jlc3MpIHtcbiAgcmV0dXJuIHRoaXMuX2RlZmVycmVkLnByb21pc2UudGhlbihvblJlc29sdmVkLCBvblJlamVjdCwgb25Qcm9ncmVzcyk7XG59O1xuXG4vKipcbiAqIFByb21pc2UvQSsgZXh0ZW5zaW9uXG4gKiBDYWxsIFwidGhlblwiIHVzaW5nIGdpdmVuIG5vZGUtc3R5bGUgY2FsbGJhY2sgZnVuY3Rpb25cbiAqXG4gKiBAbWV0aG9kIEJ1bGt+QmF0Y2gjdGhlbkNhbGxcbiAqL1xuQmF0Y2gucHJvdG90eXBlLnRoZW5DYWxsID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgaWYgKF8uaXNGdW5jdGlvbihjYWxsYmFjaykpIHtcbiAgICB0aGlzLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgICBwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uKCkge1xuICAgICAgICBjYWxsYmFjayhudWxsLCByZXMpO1xuICAgICAgfSk7XG4gICAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICBwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uKCkge1xuICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IEJ1bGt+QmF0Y2hJbmZvXG4gKiBAcHJvcCB7U3RyaW5nfSBpZCAtIEJhdGNoIElEXG4gKiBAcHJvcCB7U3RyaW5nfSBqb2JJZCAtIEpvYiBJRFxuICogQHByb3Age1N0cmluZ30gc3RhdGUgLSBCYXRjaCBzdGF0ZVxuICogQHByb3Age1N0cmluZ30gc3RhdGVNZXNzYWdlIC0gQmF0Y2ggc3RhdGUgbWVzc2FnZVxuICovXG5cbi8qKlxuICogQ2hlY2sgdGhlIGxhdGVzdCBiYXRjaCBzdGF0dXMgaW4gc2VydmVyXG4gKlxuICogQG1ldGhvZCBCdWxrfkJhdGNoI2NoZWNrXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxCdWxrfkJhdGNoSW5mbz59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPEJ1bGt+QmF0Y2hJbmZvPn1cbiAqL1xuQmF0Y2gucHJvdG90eXBlLmNoZWNrID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgYnVsayA9IHRoaXMuX2J1bGs7XG4gIHZhciBsb2dnZXIgPSBidWxrLl9sb2dnZXI7XG4gIHZhciBqb2JJZCA9IHRoaXMuam9iLmlkO1xuICB2YXIgYmF0Y2hJZCA9IHRoaXMuaWQ7XG5cbiAgaWYgKCFqb2JJZCB8fCAhYmF0Y2hJZCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkJhdGNoIG5vdCBzdGFydGVkLlwiKTtcbiAgfVxuICByZXR1cm4gYnVsay5fcmVxdWVzdCh7XG4gICAgbWV0aG9kIDogJ0dFVCcsXG4gICAgcGF0aCA6IFwiL2pvYi9cIiArIGpvYklkICsgXCIvYmF0Y2gvXCIgKyBiYXRjaElkLFxuICAgIHJlc3BvbnNlVHlwZTogXCJhcHBsaWNhdGlvbi94bWxcIlxuICB9KS50aGVuKGZ1bmN0aW9uKHJlcykge1xuICAgIGxvZ2dlci5kZWJ1ZyhyZXMuYmF0Y2hJbmZvKTtcbiAgICByZXR1cm4gcmVzLmJhdGNoSW5mbztcbiAgfSkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuXG4vKipcbiAqIFBvbGxpbmcgdGhlIGJhdGNoIHJlc3VsdCBhbmQgcmV0cmlldmVcbiAqXG4gKiBAbWV0aG9kIEJ1bGt+QmF0Y2gjcG9sbFxuICogQHBhcmFtIHtOdW1iZXJ9IGludGVydmFsIC0gUG9sbGluZyBpbnRlcnZhbCBpbiBtaWxsaXNlY29uZHNcbiAqIEBwYXJhbSB7TnVtYmVyfSB0aW1lb3V0IC0gUG9sbGluZyB0aW1lb3V0IGluIG1pbGxpc2Vjb25kc1xuICovXG5CYXRjaC5wcm90b3R5cGUucG9sbCA9IGZ1bmN0aW9uKGludGVydmFsLCB0aW1lb3V0KSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIGpvYklkID0gdGhpcy5qb2IuaWQ7XG4gIHZhciBiYXRjaElkID0gdGhpcy5pZDtcblxuICBpZiAoIWpvYklkIHx8ICFiYXRjaElkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQmF0Y2ggbm90IHN0YXJ0ZWQuXCIpO1xuICB9XG4gIHZhciBzdGFydFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgdmFyIHBvbGwgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbm93ID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG4gICAgaWYgKHN0YXJ0VGltZSArIHRpbWVvdXQgPCBub3cpIHtcbiAgICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXCJQb2xsaW5nIHRpbWUgb3V0LiBKb2IgSWQgPSBcIiArIGpvYklkICsgXCIgLCBiYXRjaCBJZCA9IFwiICsgYmF0Y2hJZCk7XG4gICAgICBlcnIubmFtZSA9ICdQb2xsaW5nVGltZW91dCc7XG4gICAgICBlcnIuam9iSWQgPSBqb2JJZDtcbiAgICAgIGVyci5iYXRjaElkID0gYmF0Y2hJZDtcbiAgICAgIHNlbGYuZW1pdCgnZXJyb3InLCBlcnIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzZWxmLmNoZWNrKGZ1bmN0aW9uKGVyciwgcmVzKSB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIHNlbGYuZW1pdCgnZXJyb3InLCBlcnIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHJlcy5zdGF0ZSA9PT0gXCJGYWlsZWRcIikge1xuICAgICAgICAgIGlmIChwYXJzZUludChyZXMubnVtYmVyUmVjb3Jkc1Byb2Nlc3NlZCwgMTApID4gMCkge1xuICAgICAgICAgICAgc2VsZi5yZXRyaWV2ZSgpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzZWxmLmVtaXQoJ2Vycm9yJywgbmV3IEVycm9yKHJlcy5zdGF0ZU1lc3NhZ2UpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAocmVzLnN0YXRlID09PSBcIkNvbXBsZXRlZFwiKSB7XG4gICAgICAgICAgc2VsZi5yZXRyaWV2ZSgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHNlbGYuZW1pdCgncHJvZ3Jlc3MnLCByZXMpO1xuICAgICAgICAgIHNldFRpbWVvdXQocG9sbCwgaW50ZXJ2YWwpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG4gIHNldFRpbWVvdXQocG9sbCwgaW50ZXJ2YWwpO1xufTtcblxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBCdWxrfkJhdGNoUmVzdWx0SW5mb1xuICogQHByb3Age1N0cmluZ30gaWQgLSBCYXRjaCByZXN1bHQgSURcbiAqIEBwcm9wIHtTdHJpbmd9IGJhdGNoSWQgLSBCYXRjaCBJRCB3aGljaCBpbmNsdWRlcyB0aGlzIGJhdGNoIHJlc3VsdC5cbiAqIEBwcm9wIHtTdHJpbmd9IGpvYklkIC0gSm9iIElEIHdoaWNoIGluY2x1ZGVzIHRoaXMgYmF0Y2ggcmVzdWx0LlxuICovXG5cbi8qKlxuICogUmV0cmlldmUgYmF0Y2ggcmVzdWx0XG4gKlxuICogQG1ldGhvZCBCdWxrfkJhdGNoI3JldHJpZXZlXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxBcnJheS48UmVjb3JkUmVzdWx0PnxBcnJheS48QnVsa35CYXRjaFJlc3VsdEluZm8+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48QXJyYXkuPFJlY29yZFJlc3VsdD58QXJyYXkuPEJ1bGt+QmF0Y2hSZXN1bHRJbmZvPj59XG4gKi9cbkJhdGNoLnByb3RvdHlwZS5yZXRyaWV2ZSA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIGJ1bGsgPSB0aGlzLl9idWxrO1xuICB2YXIgam9iSWQgPSB0aGlzLmpvYi5pZDtcbiAgdmFyIGpvYiA9IHRoaXMuam9iO1xuICB2YXIgYmF0Y2hJZCA9IHRoaXMuaWQ7XG5cbiAgaWYgKCFqb2JJZCB8fCAhYmF0Y2hJZCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkJhdGNoIG5vdCBzdGFydGVkLlwiKTtcbiAgfVxuXG4gIHJldHVybiBqb2IuaW5mbygpLnRoZW4oZnVuY3Rpb24oam9iSW5mbykge1xuICAgIHJldHVybiBidWxrLl9yZXF1ZXN0KHtcbiAgICAgIG1ldGhvZCA6ICdHRVQnLFxuICAgICAgcGF0aCA6IFwiL2pvYi9cIiArIGpvYklkICsgXCIvYmF0Y2gvXCIgKyBiYXRjaElkICsgXCIvcmVzdWx0XCJcbiAgICB9KTtcbiAgfSkudGhlbihmdW5jdGlvbihyZXMpIHtcbiAgICB2YXIgcmVzdWx0cztcbiAgICBpZiAoam9iLm9wZXJhdGlvbiA9PT0gJ3F1ZXJ5Jykge1xuICAgICAgdmFyIGNvbm4gPSBidWxrLl9jb25uO1xuICAgICAgdmFyIHJlc3VsdElkcyA9IHJlc1sncmVzdWx0LWxpc3QnXS5yZXN1bHQ7XG4gICAgICByZXN1bHRzID0gcmVzWydyZXN1bHQtbGlzdCddLnJlc3VsdDtcbiAgICAgIHJlc3VsdHMgPSBfLm1hcChfLmlzQXJyYXkocmVzdWx0cykgPyByZXN1bHRzIDogWyByZXN1bHRzIF0sIGZ1bmN0aW9uKGlkKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgaWQ6IGlkLFxuICAgICAgICAgIGJhdGNoSWQ6IGJhdGNoSWQsXG4gICAgICAgICAgam9iSWQ6IGpvYklkXG4gICAgICAgIH07XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzdWx0cyA9IF8ubWFwKHJlcywgZnVuY3Rpb24ocmV0KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgaWQ6IHJldC5JZCB8fCBudWxsLFxuICAgICAgICAgIHN1Y2Nlc3M6IHJldC5TdWNjZXNzID09PSBcInRydWVcIixcbiAgICAgICAgICBlcnJvcnM6IHJldC5FcnJvciA/IFsgcmV0LkVycm9yIF0gOiBbXVxuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgfVxuICAgIHNlbGYuZW1pdCgncmVzcG9uc2UnLCByZXN1bHRzKTtcbiAgICByZXR1cm4gcmVzdWx0cztcbiAgfSkuZmFpbChmdW5jdGlvbihlcnIpIHtcbiAgICBzZWxmLmVtaXQoJ2Vycm9yJywgZXJyKTtcbiAgICB0aHJvdyBlcnI7XG4gIH0pLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogRmV0Y2ggcXVlcnkgcmVzdWx0IGFzIGEgcmVjb3JkIHN0cmVhbVxuICogQHBhcmFtIHtTdHJpbmd9IHJlc3VsdElkIC0gUmVzdWx0IGlkXG4gKiBAcmV0dXJucyB7UmVjb3JkU3RyZWFtfSAtIFJlY29yZCBzdHJlYW0sIGNvbnZlcnRpYmxlIHRvIENTViBkYXRhIHN0cmVhbVxuICovXG5CYXRjaC5wcm90b3R5cGUucmVzdWx0ID0gZnVuY3Rpb24ocmVzdWx0SWQpIHtcbiAgdmFyIGpvYklkID0gdGhpcy5qb2IuaWQ7XG4gIHZhciBiYXRjaElkID0gdGhpcy5pZDtcbiAgaWYgKCFqb2JJZCB8fCAhYmF0Y2hJZCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkJhdGNoIG5vdCBzdGFydGVkLlwiKTtcbiAgfVxuICB2YXIgcmVzdWx0U3RyZWFtID0gbmV3IFJlY29yZFN0cmVhbS5QYXJzYWJsZSgpO1xuICB2YXIgcmVzdWx0RGF0YVN0cmVhbSA9IHJlc3VsdFN0cmVhbS5zdHJlYW0oJ2NzdicpO1xuICB2YXIgcmVxU3RyZWFtID0gdGhpcy5fYnVsay5fcmVxdWVzdCh7XG4gICAgbWV0aG9kIDogJ0dFVCcsXG4gICAgcGF0aCA6IFwiL2pvYi9cIiArIGpvYklkICsgXCIvYmF0Y2gvXCIgKyBiYXRjaElkICsgXCIvcmVzdWx0L1wiICsgcmVzdWx0SWQsXG4gICAgcmVzcG9uc2VUeXBlOiBcImFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbVwiXG4gIH0pLnN0cmVhbSgpLnBpcGUocmVzdWx0RGF0YVN0cmVhbSk7XG4gIHJldHVybiByZXN1bHRTdHJlYW07XG59O1xuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qKlxuICogQHByaXZhdGVcbiAqL1xudmFyIEJ1bGtBcGkgPSBmdW5jdGlvbigpIHtcbiAgQnVsa0FwaS5zdXBlcl8uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5cbmluaGVyaXRzKEJ1bGtBcGksIEh0dHBBcGkpO1xuXG5CdWxrQXBpLnByb3RvdHlwZS5iZWZvcmVTZW5kID0gZnVuY3Rpb24ocmVxdWVzdCkge1xuICByZXF1ZXN0LmhlYWRlcnMgPSByZXF1ZXN0LmhlYWRlcnMgfHwge307XG4gIHJlcXVlc3QuaGVhZGVyc1tcIlgtU0ZEQy1TRVNTSU9OXCJdID0gdGhpcy5fY29ubi5hY2Nlc3NUb2tlbjtcbn07XG5cbkJ1bGtBcGkucHJvdG90eXBlLmlzU2Vzc2lvbkV4cGlyZWQgPSBmdW5jdGlvbihyZXNwb25zZSkge1xuICByZXR1cm4gcmVzcG9uc2Uuc3RhdHVzQ29kZSA9PT0gNDAwICYmXG4gICAgLzxleGNlcHRpb25Db2RlPkludmFsaWRTZXNzaW9uSWQ8XFwvZXhjZXB0aW9uQ29kZT4vLnRlc3QocmVzcG9uc2UuYm9keSk7XG59O1xuXG5CdWxrQXBpLnByb3RvdHlwZS5oYXNFcnJvckluUmVzcG9uc2VCb2R5ID0gZnVuY3Rpb24oYm9keSkge1xuICByZXR1cm4gISFib2R5LmVycm9yO1xufTtcblxuQnVsa0FwaS5wcm90b3R5cGUucGFyc2VFcnJvciA9IGZ1bmN0aW9uKGJvZHkpIHtcbiAgcmV0dXJuIHtcbiAgICBlcnJvckNvZGU6IGJvZHkuZXJyb3IuZXhjZXB0aW9uQ29kZSxcbiAgICBtZXNzYWdlOiBib2R5LmVycm9yLmV4Y2VwdGlvbk1lc3NhZ2VcbiAgfTtcbn07XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4vKipcbiAqIENsYXNzIGZvciBCdWxrIEFQSVxuICpcbiAqIEBjbGFzc1xuICogQHBhcmFtIHtDb25uZWN0aW9ufSBjb25uIC0gQ29ubmVjdGlvbiBvYmplY3RcbiAqL1xudmFyIEJ1bGsgPSBmdW5jdGlvbihjb25uKSB7XG4gIHRoaXMuX2Nvbm4gPSBjb25uO1xuICB0aGlzLl9sb2dnZXIgPSBjb25uLl9sb2dnZXI7XG59O1xuXG4vKipcbiAqIFBvbGxpbmcgaW50ZXJ2YWwgaW4gbWlsbGlzZWNvbmRzXG4gKiBAdHlwZSB7TnVtYmVyfVxuICovXG5CdWxrLnByb3RvdHlwZS5wb2xsSW50ZXJ2YWwgPSAxMDAwO1xuXG4vKipcbiAqIFBvbGxpbmcgdGltZW91dCBpbiBtaWxsaXNlY29uZHNcbiAqIEB0eXBlIHtOdW1iZXJ9XG4gKi9cbkJ1bGsucHJvdG90eXBlLnBvbGxUaW1lb3V0ID0gMTAwMDA7XG5cbi8qKiBAcHJpdmF0ZSAqKi9cbkJ1bGsucHJvdG90eXBlLl9yZXF1ZXN0ID0gZnVuY3Rpb24ocmVxdWVzdCwgY2FsbGJhY2spIHtcbiAgdmFyIGNvbm4gPSB0aGlzLl9jb25uO1xuICByZXF1ZXN0ID0gXy5jbG9uZShyZXF1ZXN0KTtcbiAgdmFyIGJhc2VVcmwgPSBbIGNvbm4uaW5zdGFuY2VVcmwsIFwic2VydmljZXMvYXN5bmNcIiwgY29ubi52ZXJzaW9uIF0uam9pbignLycpO1xuICByZXF1ZXN0LnVybCA9IGJhc2VVcmwgKyByZXF1ZXN0LnBhdGg7XG4gIHZhciBvcHRpb25zID0geyByZXNwb25zZVR5cGU6IHJlcXVlc3QucmVzcG9uc2VUeXBlIH07XG4gIGRlbGV0ZSByZXF1ZXN0LnBhdGg7XG4gIGRlbGV0ZSByZXF1ZXN0LnJlc3BvbnNlVHlwZTtcbiAgcmV0dXJuIG5ldyBCdWxrQXBpKHRoaXMuX2Nvbm4sIG9wdGlvbnMpLnJlcXVlc3QocmVxdWVzdCkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBDcmVhdGUgYW5kIHN0YXJ0IGJ1bGtsb2FkIGpvYiBhbmQgYmF0Y2hcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZSAtIFNPYmplY3QgdHlwZVxuICogQHBhcmFtIHtTdHJpbmd9IG9wZXJhdGlvbiAtIEJ1bGsgbG9hZCBvcGVyYXRpb24gKCdpbnNlcnQnLCAndXBkYXRlJywgJ3Vwc2VydCcsICdkZWxldGUnLCBvciAnaGFyZERlbGV0ZScpXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gT3B0aW9ucyBmb3IgYnVsayBsb2FkaW5nIG9wZXJhdGlvblxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmV4dElkRmllbGRdIC0gRXh0ZXJuYWwgSUQgZmllbGQgbmFtZSAodXNlZCB3aGVuIHVwc2VydCBvcGVyYXRpb24pLlxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmNvbmN1cnJlbmN5TW9kZV0gLSAnU2VyaWFsJyBvciAnUGFyYWxsZWwnLiBEZWZhdWx0cyB0byBQYXJhbGxlbC5cbiAqIEBwYXJhbSB7QXJyYXkuPFJlY29yZD58c3RyZWFtLlN0cmVhbXxTdHJpbmd9IFtpbnB1dF0gLSBJbnB1dCBzb3VyY2UgZm9yIGJ1bGtsb2FkLiBBY2NlcHRzIGFycmF5IG9mIHJlY29yZHMsIENTViBzdHJpbmcsIGFuZCBDU1YgZGF0YSBpbnB1dCBzdHJlYW0gaW4gaW5zZXJ0L3VwZGF0ZS91cHNlcnQvZGVsZXRlL2hhcmREZWxldGUgb3BlcmF0aW9uLCBTT1FMIHN0cmluZyBpbiBxdWVyeSBvcGVyYXRpb24uXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxBcnJheS48UmVjb3JkUmVzdWx0PnxBcnJheS48QnVsa35CYXRjaFJlc3VsdEluZm8+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7QnVsa35CYXRjaH1cbiAqL1xuQnVsay5wcm90b3R5cGUubG9hZCA9IGZ1bmN0aW9uKHR5cGUsIG9wZXJhdGlvbiwgb3B0aW9ucywgaW5wdXQsIGNhbGxiYWNrKSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgaWYgKCF0eXBlIHx8ICFvcGVyYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnN1ZmZpY2llbnQgYXJndW1lbnRzLiBBdCBsZWFzdCwgJ3R5cGUnIGFuZCAnb3BlcmF0aW9uJyBhcmUgcmVxdWlyZWQuXCIpO1xuICB9XG4gIGlmICghXy5pc09iamVjdChvcHRpb25zKSB8fCBvcHRpb25zLmNvbnN0cnVjdG9yICE9PSBPYmplY3QpIHsgLy8gd2hlbiBvcHRpb25zIGlzIG5vdCBwbGFpbiBoYXNoIG9iamVjdCwgaXQgaXMgb21pdHRlZFxuICAgIGNhbGxiYWNrID0gaW5wdXQ7XG4gICAgaW5wdXQgPSBvcHRpb25zO1xuICAgIG9wdGlvbnMgPSBudWxsO1xuICB9XG4gIHZhciBqb2IgPSB0aGlzLmNyZWF0ZUpvYih0eXBlLCBvcGVyYXRpb24sIG9wdGlvbnMpO1xuICBqb2Iub25jZSgnZXJyb3InLCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICBpZiAoYmF0Y2gpIHtcbiAgICAgIGJhdGNoLmVtaXQoJ2Vycm9yJywgZXJyb3IpOyAvLyBwYXNzIGpvYiBlcnJvciB0byBiYXRjaFxuICAgIH1cbiAgfSk7XG4gIHZhciBiYXRjaCA9IGpvYi5jcmVhdGVCYXRjaCgpO1xuICB2YXIgY2xlYW51cCA9IGZ1bmN0aW9uKCkge1xuICAgIGJhdGNoID0gbnVsbDtcbiAgICBqb2IuY2xvc2UoKTtcbiAgfTtcbiAgdmFyIGNsZWFudXBPbkVycm9yID0gZnVuY3Rpb24oZXJyKSB7XG4gICAgaWYgKGVyci5uYW1lICE9PSAnUG9sbGluZ1RpbWVvdXQnKSB7XG4gICAgICBjbGVhbnVwKCk7XG4gICAgfVxuICB9O1xuICBiYXRjaC5vbigncmVzcG9uc2UnLCBjbGVhbnVwKTtcbiAgYmF0Y2gub24oJ2Vycm9yJywgY2xlYW51cE9uRXJyb3IpO1xuICBiYXRjaC5vbigncXVldWUnLCBmdW5jdGlvbigpIHsgYmF0Y2gucG9sbChzZWxmLnBvbGxJbnRlcnZhbCwgc2VsZi5wb2xsVGltZW91dCk7IH0pO1xuICByZXR1cm4gYmF0Y2guZXhlY3V0ZShpbnB1dCwgY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBFeGVjdXRlIGJ1bGsgcXVlcnkgYW5kIGdldCByZWNvcmQgc3RyZWFtXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHNvcWwgLSBTT1FMIHRvIGV4ZWN1dGUgaW4gYnVsayBqb2JcbiAqIEByZXR1cm5zIHtSZWNvcmRTdHJlYW0uUGFyc2FibGV9IC0gUmVjb3JkIHN0cmVhbSwgY29udmVydGlibGUgdG8gQ1NWIGRhdGEgc3RyZWFtXG4gKi9cbkJ1bGsucHJvdG90eXBlLnF1ZXJ5ID0gZnVuY3Rpb24oc29xbCkge1xuICB2YXIgbSA9IHNvcWwucmVwbGFjZSgvXFwoW1xcc1xcU10rXFwpL2csICcnKS5tYXRjaCgvRlJPTVxccysoXFx3KykvaSk7XG4gIGlmICghbSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHNvYmplY3QgdHlwZSBmb3VuZCBpbiBxdWVyeSwgbWF5YmUgY2F1c2VkIGJ5IGludmFsaWQgU09RTC5cIik7XG4gIH1cbiAgdmFyIHR5cGUgPSBtWzFdO1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciByZWNvcmRTdHJlYW0gPSBuZXcgUmVjb3JkU3RyZWFtLlBhcnNhYmxlKCk7XG4gIHZhciBkYXRhU3RyZWFtID0gcmVjb3JkU3RyZWFtLnN0cmVhbSgnY3N2Jyk7XG4gIHRoaXMubG9hZCh0eXBlLCBcInF1ZXJ5XCIsIHNvcWwpLnRoZW4oZnVuY3Rpb24ocmVzdWx0cykge1xuICAgIHZhciBzdHJlYW1zID0gcmVzdWx0cy5tYXAoZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgICByZXR1cm4gc2VsZlxuICAgICAgICAuam9iKHJlc3VsdC5qb2JJZClcbiAgICAgICAgLmJhdGNoKHJlc3VsdC5iYXRjaElkKVxuICAgICAgICAucmVzdWx0KHJlc3VsdC5pZClcbiAgICAgICAgLnN0cmVhbSgpO1xuICAgIH0pO1xuXG4gICAgam9pblN0cmVhbXMoc3RyZWFtcykucGlwZShkYXRhU3RyZWFtKTtcbiAgfSkuZmFpbChmdW5jdGlvbihlcnIpIHtcbiAgICByZWNvcmRTdHJlYW0uZW1pdCgnZXJyb3InLCBlcnIpO1xuICB9KTtcbiAgcmV0dXJuIHJlY29yZFN0cmVhbTtcbn07XG5cblxuLyoqXG4gKiBDcmVhdGUgYSBuZXcgam9iIGluc3RhbmNlXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHR5cGUgLSBTT2JqZWN0IHR5cGVcbiAqIEBwYXJhbSB7U3RyaW5nfSBvcGVyYXRpb24gLSBCdWxrIGxvYWQgb3BlcmF0aW9uICgnaW5zZXJ0JywgJ3VwZGF0ZScsICd1cHNlcnQnLCAnZGVsZXRlJywgJ2hhcmREZWxldGUnLCBvciAncXVlcnknKVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIE9wdGlvbnMgZm9yIGJ1bGsgbG9hZGluZyBvcGVyYXRpb25cbiAqIEByZXR1cm5zIHtCdWxrfkpvYn1cbiAqL1xuQnVsay5wcm90b3R5cGUuY3JlYXRlSm9iID0gZnVuY3Rpb24odHlwZSwgb3BlcmF0aW9uLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgSm9iKHRoaXMsIHR5cGUsIG9wZXJhdGlvbiwgb3B0aW9ucyk7XG59O1xuXG4vKipcbiAqIEdldCBhIGpvYiBpbnN0YW5jZSBzcGVjaWZpZWQgYnkgZ2l2ZW4gam9iIElEXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGpvYklkIC0gSm9iIElEXG4gKiBAcmV0dXJucyB7QnVsa35Kb2J9XG4gKi9cbkJ1bGsucHJvdG90eXBlLmpvYiA9IGZ1bmN0aW9uKGpvYklkKSB7XG4gIHJldHVybiBuZXcgSm9iKHRoaXMsIG51bGwsIG51bGwsIG51bGwsIGpvYklkKTtcbn07XG5cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKlxuICogUmVnaXN0ZXIgaG9vayBpbiBjb25uZWN0aW9uIGluc3RhbnRpYXRpb24gZm9yIGR5bmFtaWNhbGx5IGFkZGluZyB0aGlzIEFQSSBtb2R1bGUgZmVhdHVyZXNcbiAqL1xuanNmb3JjZS5vbignY29ubmVjdGlvbjpuZXcnLCBmdW5jdGlvbihjb25uKSB7XG4gIGNvbm4uYnVsayA9IG5ldyBCdWxrKGNvbm4pO1xufSk7XG5cblxubW9kdWxlLmV4cG9ydHMgPSBCdWxrO1xuIiwiLyoqXG4gKiBAZmlsZSBNYW5hZ2VzIFNhbGVzZm9yY2UgQ2hhdHRlciBSRVNUIEFQSSBjYWxsc1xuICogQGF1dGhvciBTaGluaWNoaSBUb21pdGEgPHNoaW5pY2hpLnRvbWl0YUBnbWFpbC5jb20+XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpLFxuICAgIF8gICAgICAgPSByZXF1aXJlKCdsb2Rhc2gvY29yZScpLFxuICAgIGpzZm9yY2UgPSByZXF1aXJlKCcuLi9jb3JlJyksXG4gICAgUHJvbWlzZSA9IHJlcXVpcmUoJy4uL3Byb21pc2UnKTtcblxuLyoqXG4gKiBBUEkgY2xhc3MgZm9yIENoYXR0ZXIgUkVTVCBBUEkgY2FsbFxuICpcbiAqIEBjbGFzc1xuICogQHBhcmFtIHtDb25uZWN0aW9ufSBjb25uIENvbm5lY3Rpb25cbiAqL1xudmFyIENoYXR0ZXIgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGNvbm4pIHtcbiAgdGhpcy5fY29ubiA9IGNvbm47XG59O1xuXG4vKipcbiAqIFNlbmRpbmcgcmVxdWVzdCB0byBBUEkgZW5kcG9pbnRcbiAqIEBwcml2YXRlXG4gKi9cbkNoYXR0ZXIucHJvdG90eXBlLl9yZXF1ZXN0ID0gZnVuY3Rpb24ocGFyYW1zLCBjYWxsYmFjaykge1xuICBpZiAoL14ocHV0fHBvc3R8cGF0Y2gpJC9pLnRlc3QocGFyYW1zLm1ldGhvZCkpIHtcbiAgICBpZiAoXy5pc09iamVjdChwYXJhbXMuYm9keSkpIHtcbiAgICAgIHBhcmFtcy5oZWFkZXJzID0ge1xuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgICAgfTtcbiAgICAgIHBhcmFtcy5ib2R5ID0gSlNPTi5zdHJpbmdpZnkocGFyYW1zLmJvZHkpO1xuICAgIH1cbiAgfVxuICBwYXJhbXMudXJsID0gdGhpcy5fbm9ybWFsaXplVXJsKHBhcmFtcy51cmwpO1xuICByZXR1cm4gdGhpcy5fY29ubi5yZXF1ZXN0KHBhcmFtcywgY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBDb252ZXJ0IHBhdGggdG8gc2l0ZSByb290IHJlbGF0aXZlIHVybFxuICogQHByaXZhdGVcbiAqL1xuQ2hhdHRlci5wcm90b3R5cGUuX25vcm1hbGl6ZVVybCA9IGZ1bmN0aW9uKHVybCkge1xuICBpZiAodXJsLmluZGV4T2YoJy9jaGF0dGVyLycpID09PSAwIHx8IHVybC5pbmRleE9mKCcvY29ubmVjdC8nKSA9PT0gMCkge1xuICAgIHJldHVybiAnL3NlcnZpY2VzL2RhdGEvdicgKyB0aGlzLl9jb25uLnZlcnNpb24gKyB1cmw7XG4gIH0gZWxzZSBpZiAoL15cXC92W1xcZF0rXFwuW1xcZF0rXFwvLy50ZXN0KHVybCkpIHtcbiAgICByZXR1cm4gJy9zZXJ2aWNlcy9kYXRhJyArIHVybDtcbiAgfSBlbHNlIGlmICh1cmwuaW5kZXhPZignL3NlcnZpY2VzLycpICE9PSAwICYmIHVybFswXSA9PT0gJy8nKSB7XG4gICAgcmV0dXJuICcvc2VydmljZXMvZGF0YS92JyArIHRoaXMuX2Nvbm4udmVyc2lvbiArICcvY2hhdHRlcicgKyB1cmw7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxufTtcblxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBDaGF0dGVyflJlcXVlc3RQYXJhbXNcbiAqIEBwcm9wIHtTdHJpbmd9IG1ldGhvZCAtIEhUVFAgbWV0aG9kXG4gKiBAcHJvcCB7U3RyaW5nfSB1cmwgLSBSZXNvdXJjZSBVUkxcbiAqIEBwcm9wIHtTdHJpbmd9IFtib2R5XSAtIEhUVFAgYm9keSAoaW4gUE9TVC9QVVQvUEFUQ0ggbWV0aG9kcylcbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IENoYXR0ZXJ+UmVxdWVzdFJlc3VsdFxuICovXG5cbi8qKlxuICogTWFrZSBhIHJlcXVlc3QgZm9yIGNoYXR0ZXIgQVBJIHJlc291cmNlXG4gKlxuICogQHBhcmFtIHtDaGF0dGVyflJlcXVlc3RQYXJhbXN9IHBhcmFtcyAtIFBhcmFtdGVycyByZXByZXNlbnRpbmcgSFRUUCByZXF1ZXN0XG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxDaGF0dGVyflJlcXVlc3RSZXN1bHQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY1xuICogQHJldHVybnMge0NoYXR0ZXJ+UmVxdWVzdH1cbiAqL1xuQ2hhdHRlci5wcm90b3R5cGUucmVxdWVzdCA9IGZ1bmN0aW9uKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgcmV0dXJuIG5ldyBSZXF1ZXN0KHRoaXMsIHBhcmFtcykudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBNYWtlIGEgcmVzb3VyY2UgcmVxdWVzdCB0byBjaGF0dGVyIEFQSVxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgLSBSZXNvdXJjZSBVUkxcbiAqIEBwYXJhbSB7T2JqZWN0fSBbcXVlcnlQYXJhbXNdIC0gUXVlcnkgcGFyYW1ldGVycyAoaW4gaGFzaCBvYmplY3QpXG4gKiBAcmV0dXJucyB7Q2hhdHRlcn5SZXNvdXJjZX1cbiAqL1xuQ2hhdHRlci5wcm90b3R5cGUucmVzb3VyY2UgPSBmdW5jdGlvbih1cmwsIHF1ZXJ5UGFyYW1zKSB7XG4gIHJldHVybiBuZXcgUmVzb3VyY2UodGhpcywgdXJsLCBxdWVyeVBhcmFtcyk7XG59O1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IENoYXR0ZXJ+QmF0Y2hSZXF1ZXN0UmVzdWx0XG4gKiBAcHJvcCB7Qm9vbGVhbn0gaGFzRXJyb3IgLSBGbGFnIGlmIHRoZSBiYXRjaCBoYXMgb25lIG9yIG1vcmUgZXJyb3JzXG4gKiBAcHJvcCB7QXJyYXkuPE9iamVjdD59IHJlc3VsdHMgLSBCYXRjaCByZXF1ZXN0IHJlc3VsdHMgaW4gYXJyYXlcbiAqIEBwcm9wIHtOdW1iZXJ9IHJlc3VsdHMuc3RhdHVzQ29kZSAtIEhUVFAgcmVzcG9uc2Ugc3RhdHVzIGNvZGVcbiAqIEBwcm9wIHtDaGF0dGVyflJlcXVlc3RSZXN1bHR9IHJlc3VsdHMucmVzdWx0IC0gUGFyc2VkIEhUVFAgcmVzcG9uc2UgYm9keVxuICovXG5cbi8qKlxuICogTWFrZSBhIGJhdGNoIHJlcXVlc3QgdG8gY2hhdHRlciBBUElcbiAqXG4gKiBAcGFyYW1zIHtBcnJheS48Q2hhdHRlcn5SZXF1ZXN0Pn0gcmVxdWVzdHMgLSBDaGF0dGVyIEFQSSByZXF1ZXN0c1xuICogQHBhcmFtIHtDYWxsYmFjay48Q2hhdHRlcn5CYXRjaFJlcXVlc3RSZXN1bHQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY1xuICogQHJldHVybnMge1Byb21pc2UuPENoYXR0ZXJ+QmF0Y2hSZXF1ZXN0UmVzdWx0Pn1cbiAqL1xuQ2hhdHRlci5wcm90b3R5cGUuYmF0Y2ggPSBmdW5jdGlvbihyZXF1ZXN0cywgY2FsbGJhY2spIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgYmF0Y2hSZXF1ZXN0cyA9IFtdLCBiYXRjaERlZmVycmVkcyA9IFtdO1xuICBfLmZvckVhY2gocmVxdWVzdHMsIGZ1bmN0aW9uKHJlcXVlc3QpIHtcbiAgICB2YXIgZGVmZXJyZWQgPSBQcm9taXNlLmRlZmVyKCk7XG4gICAgcmVxdWVzdC5fcHJvbWlzZSA9IGRlZmVycmVkLnByb21pc2U7XG4gICAgYmF0Y2hSZXF1ZXN0cy5wdXNoKHJlcXVlc3QuYmF0Y2hQYXJhbXMoKSk7XG4gICAgYmF0Y2hEZWZlcnJlZHMucHVzaChkZWZlcnJlZCk7XG4gIH0pO1xuICB2YXIgcGFyYW1zID0ge1xuICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgIHVybDogdGhpcy5fbm9ybWFsaXplVXJsKCcvY29ubmVjdC9iYXRjaCcpLFxuICAgIGJvZHk6IHtcbiAgICAgIGJhdGNoUmVxdWVzdHM6IGJhdGNoUmVxdWVzdHNcbiAgICB9XG4gIH07XG4gIHJldHVybiB0aGlzLnJlcXVlc3QocGFyYW1zKS50aGVuKGZ1bmN0aW9uKHJlcykge1xuICAgIF8uZm9yRWFjaChyZXMucmVzdWx0cywgZnVuY3Rpb24ocmVzdWx0LCBpKSB7XG4gICAgICB2YXIgZGVmZXJyZWQgPSBiYXRjaERlZmVycmVkc1tpXTtcbiAgICAgIGlmIChyZXN1bHQuc3RhdHVzQ29kZSA+PSA0MDApIHtcbiAgICAgICAgZGVmZXJyZWQucmVqZWN0KHJlc3VsdC5yZXN1bHQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShyZXN1bHQucmVzdWx0KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gcmVzO1xuICB9KS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiBBIGNsYXNzIHJlcHJlc2VudGluZyBjaGF0dGVyIEFQSSByZXF1ZXN0XG4gKlxuICogQHByb3RlY3RlZFxuICogQGNsYXNzIENoYXR0ZXJ+UmVxdWVzdFxuICogQGltcGxlbWVudHMge1Byb21pc2UuPENoYXR0ZXJ+UmVxdWVzdFJlc3VsdD59XG4gKiBAcGFyYW0ge0NoYXR0ZXJ9IGNoYXR0ZXIgLSBDaGF0dGVyIEFQSSBvYmplY3RcbiAqIEBwYXJhbSB7Q2hhdHRlcn5SZXF1ZXN0UGFyYW1zfSBwYXJhbXMgLSBQYXJhbXRlcnMgcmVwcmVzZW50aW5nIEhUVFAgcmVxdWVzdFxuICovXG52YXIgUmVxdWVzdCA9IGZ1bmN0aW9uKGNoYXR0ZXIsIHBhcmFtcykge1xuICB0aGlzLl9jaGF0dGVyID0gY2hhdHRlcjtcbiAgdGhpcy5fcGFyYW1zID0gcGFyYW1zO1xuICB0aGlzLl9wcm9taXNlID0gbnVsbDtcbn07XG5cbi8qKlxuICogQHR5cGVkZWYge09iamVjdH0gQ2hhdHRlcn5CYXRjaFJlcXVlc3RQYXJhbXNcbiAqIEBwcm9wIHtTdHJpbmd9IG1ldGhvZCAtIEhUVFAgbWV0aG9kXG4gKiBAcHJvcCB7U3RyaW5nfSB1cmwgLSBSZXNvdXJjZSBVUkxcbiAqIEBwcm9wIHtTdHJpbmd9IFtyaWNoSW5wdXRdIC0gSFRUUCBib2R5IChpbiBQT1NUL1BVVC9QQVRDSCBtZXRob2RzKVxuICovXG5cbi8qKlxuICogUmV0cmlldmUgcGFyYW1ldGVycyBpbiBiYXRjaCByZXF1ZXN0IGZvcm1cbiAqXG4gKiBAbWV0aG9kIENoYXR0ZXJ+UmVxdWVzdCNiYXRjaFBhcmFtc1xuICogQHJldHVybnMge0NoYXR0ZXJ+QmF0Y2hSZXF1ZXN0UGFyYW1zfVxuICovXG5SZXF1ZXN0LnByb3RvdHlwZS5iYXRjaFBhcmFtcyA9IGZ1bmN0aW9uKCkge1xuICB2YXIgcGFyYW1zID0gdGhpcy5fcGFyYW1zO1xuICB2YXIgYmF0Y2hQYXJhbXMgPSB7XG4gICAgbWV0aG9kOiBwYXJhbXMubWV0aG9kLFxuICAgIHVybDogdGhpcy5fY2hhdHRlci5fbm9ybWFsaXplVXJsKHBhcmFtcy51cmwpXG4gIH07XG4gIGlmICh0aGlzLl9wYXJhbXMuYm9keSkge1xuICAgIGJhdGNoUGFyYW1zLnJpY2hJbnB1dCA9IHRoaXMuX3BhcmFtcy5ib2R5O1xuICB9XG4gIHJldHVybiBiYXRjaFBhcmFtcztcbn07XG5cbi8qKlxuICogUmV0cmlldmUgcGFyYW1ldGVycyBpbiBiYXRjaCByZXF1ZXN0IGZvcm1cbiAqXG4gKiBAbWV0aG9kIENoYXR0ZXJ+UmVxdWVzdCNwcm9taXNlXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48Q2hhdHRlcn5SZXF1ZXN0UmVzdWx0Pn1cbiAqL1xuUmVxdWVzdC5wcm90b3R5cGUucHJvbWlzZSA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5fcHJvbWlzZSB8fCB0aGlzLl9jaGF0dGVyLl9yZXF1ZXN0KHRoaXMuX3BhcmFtcyk7XG59O1xuXG4vKipcbiAqIFJldHVybnMgTm9kZS5qcyBTdHJlYW0gb2JqZWN0IGZvciByZXF1ZXN0XG4gKlxuICogQG1ldGhvZCBDaGF0dGVyflJlcXVlc3Qjc3RyZWFtXG4gKiBAcmV0dXJucyB7c3RyZWFtLlN0cmVhbX1cbiAqL1xuUmVxdWVzdC5wcm90b3R5cGUuc3RyZWFtID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLl9jaGF0dGVyLl9yZXF1ZXN0KHRoaXMuX3BhcmFtcykuc3RyZWFtKCk7XG59O1xuXG4vKipcbiAqIFByb21pc2UvQSsgaW50ZXJmYWNlXG4gKiBodHRwOi8vcHJvbWlzZXMtYXBsdXMuZ2l0aHViLmlvL3Byb21pc2VzLXNwZWMvXG4gKlxuICogRGVsZWdhdGUgdG8gZGVmZXJyZWQgcHJvbWlzZSwgcmV0dXJuIHByb21pc2UgaW5zdGFuY2UgZm9yIGJhdGNoIHJlc3VsdFxuICpcbiAqIEBtZXRob2QgQ2hhdHRlcn5SZXF1ZXN0I3RoZW5cbiAqL1xuUmVxdWVzdC5wcm90b3R5cGUudGhlbiA9IGZ1bmN0aW9uKG9uUmVzb2x2ZSwgb25SZWplY3QpIHtcbiAgcmV0dXJuIHRoaXMucHJvbWlzZSgpLnRoZW4ob25SZXNvbHZlLCBvblJlamVjdCk7XG59O1xuXG4vKipcbiAqIFByb21pc2UvQSsgZXh0ZW5zaW9uXG4gKiBDYWxsIFwidGhlblwiIHVzaW5nIGdpdmVuIG5vZGUtc3R5bGUgY2FsbGJhY2sgZnVuY3Rpb25cbiAqXG4gKiBAbWV0aG9kIENoYXR0ZXJ+UmVxdWVzdCN0aGVuQ2FsbFxuICovXG5SZXF1ZXN0LnByb3RvdHlwZS50aGVuQ2FsbCA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHJldHVybiBfLmlzRnVuY3Rpb24oY2FsbGJhY2spID8gdGhpcy5wcm9taXNlKCkudGhlbkNhbGwoY2FsbGJhY2spIDogdGhpcztcbn07XG5cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqIEEgY2xhc3MgcmVwcmVzZW50aW5nIGNoYXR0ZXIgQVBJIHJlc291cmNlXG4gKlxuICogQHByb3RlY3RlZFxuICogQGNsYXNzIENoYXR0ZXJ+UmVzb3VyY2VcbiAqIEBleHRlbmRzIENoYXR0ZXJ+UmVxdWVzdFxuICogQHBhcmFtIHtDaGF0dGVyfSBjaGF0dGVyIC0gQ2hhdHRlciBBUEkgb2JqZWN0XG4gKiBAcGFyYW0ge1N0cmluZ30gdXJsIC0gUmVzb3VyY2UgVVJMXG4gKiBAcGFyYW0ge09iamVjdH0gW3F1ZXJ5UGFyYW1zXSAtIFF1ZXJ5IHBhcmFtZXRlcnMgKGluIGhhc2ggb2JqZWN0KVxuICovXG52YXIgUmVzb3VyY2UgPSBmdW5jdGlvbihjaGF0dGVyLCB1cmwsIHF1ZXJ5UGFyYW1zKSB7XG4gIGlmIChxdWVyeVBhcmFtcykge1xuICAgIHZhciBxc3RyaW5nID0gXy5tYXAoXy5rZXlzKHF1ZXJ5UGFyYW1zKSwgZnVuY3Rpb24obmFtZSkge1xuICAgICAgcmV0dXJuIG5hbWUgKyBcIj1cIiArIGVuY29kZVVSSUNvbXBvbmVudChxdWVyeVBhcmFtc1tuYW1lXSk7XG4gICAgfSkuam9pbignJicpO1xuICAgIHVybCArPSAodXJsLmluZGV4T2YoJz8nKSA+IDAgPyAnJicgOiAnPycpICsgcXN0cmluZztcbiAgfVxuICBSZXNvdXJjZS5zdXBlcl8uY2FsbCh0aGlzLCBjaGF0dGVyLCB7IG1ldGhvZDogJ0dFVCcsIHVybDogdXJsIH0pO1xuICB0aGlzLl91cmwgPSB1cmw7XG59O1xuXG5pbmhlcml0cyhSZXNvdXJjZSwgUmVxdWVzdCk7XG5cbi8qKlxuICogQ3JlYXRlIGEgbmV3IHJlc291cmNlXG4gKlxuICogQG1ldGhvZCBDaGF0dGVyflJlc291cmNlI2NyZWF0ZVxuICogQHBhcmFtIHtPYmplY3R9IGRhdGEgLSBEYXRhIHRvIG5ld2x5IHBvc3RcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPENoYXR0ZXJ+UmVxdWVzdFJlc3VsdD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge0NoYXR0ZXJ+UmVxdWVzdH1cbiAqL1xuUmVzb3VyY2UucHJvdG90eXBlLmNyZWF0ZSA9IGZ1bmN0aW9uKGRhdGEsIGNhbGxiYWNrKSB7XG4gIHJldHVybiB0aGlzLl9jaGF0dGVyLnJlcXVlc3Qoe1xuICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgIHVybDogdGhpcy5fdXJsLFxuICAgIGJvZHk6IGRhdGFcbiAgfSkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBSZXRyaWV2ZSByZXNvdXJjZSBjb250ZW50XG4gKlxuICogQG1ldGhvZCBDaGF0dGVyflJlc291cmNlI3JldHJpZXZlXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxDaGF0dGVyflJlcXVlc3RSZXN1bHQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtDaGF0dGVyflJlcXVlc3R9XG4gKi9cblJlc291cmNlLnByb3RvdHlwZS5yZXRyaWV2ZSA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHJldHVybiB0aGlzLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogVXBkYXRlIHNwZWNpZmllZCByZXNvdXJjZVxuICpcbiAqIEBtZXRob2QgQ2hhdHRlcn5SZXNvdXJjZSN1cGRhdGVcbiAqIEBwYXJhbSB7T2JlamN0fSBkYXRhIC0gRGF0YSB0byB1cGRhdGVcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPENoYXR0ZXJ+UmVxdWVzdFJlc3VsdD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge0NoYXR0ZXJ+UmVxdWVzdH1cbiAqL1xuUmVzb3VyY2UucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uKGRhdGEsIGNhbGxiYWNrKSB7XG4gIHJldHVybiB0aGlzLl9jaGF0dGVyLnJlcXVlc3Qoe1xuICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgIHVybDogdGhpcy5fdXJsLFxuICAgIGJvZHk6IGRhdGFcbiAgfSkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBTeW5vbnltIG9mIFJlc291cmNlI2RlbGV0ZSgpXG4gKlxuICogQG1ldGhvZCBDaGF0dGVyflJlc291cmNlI2RlbFxuICogQHBhcmFtIHtDYWxsYmFjay48Q2hhdHRlcn5SZXF1ZXN0UmVzdWx0Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7Q2hhdHRlcn5SZXF1ZXN0fVxuICovXG4vKipcbiAqIERlbGV0ZSBzcGVjaWZpZWQgcmVzb3VyY2VcbiAqXG4gKiBAbWV0aG9kIENoYXR0ZXJ+UmVzb3VyY2UjZGVsZXRlXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxDaGF0dGVyflJlcXVlc3RSZXN1bHQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtDaGF0dGVyflJlcXVlc3R9XG4gKi9cblJlc291cmNlLnByb3RvdHlwZS5kZWwgPVxuUmVzb3VyY2UucHJvdG90eXBlW1wiZGVsZXRlXCJdID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgcmV0dXJuIHRoaXMuX2NoYXR0ZXIucmVxdWVzdCh7XG4gICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICB1cmw6IHRoaXMuX3VybFxuICB9KS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLypcbiAqIFJlZ2lzdGVyIGhvb2sgaW4gY29ubmVjdGlvbiBpbnN0YW50aWF0aW9uIGZvciBkeW5hbWljYWxseSBhZGRpbmcgdGhpcyBBUEkgbW9kdWxlIGZlYXR1cmVzXG4gKi9cbmpzZm9yY2Uub24oJ2Nvbm5lY3Rpb246bmV3JywgZnVuY3Rpb24oY29ubikge1xuICBjb25uLmNoYXR0ZXIgPSBuZXcgQ2hhdHRlcihjb25uKTtcbn0pO1xuIiwicmVxdWlyZSgnLi9hbmFseXRpY3MnKTtcbnJlcXVpcmUoJy4vYXBleCcpO1xucmVxdWlyZSgnLi9idWxrJyk7XG5yZXF1aXJlKCcuL2NoYXR0ZXInKTtcbnJlcXVpcmUoJy4vbWV0YWRhdGEnKTtcbnJlcXVpcmUoJy4vc29hcCcpO1xucmVxdWlyZSgnLi9zdHJlYW1pbmcnKTtcbnJlcXVpcmUoJy4vdG9vbGluZycpO1xuIiwiLypnbG9iYWwgcHJvY2VzcywgQnVmZmVyICovXG4vKipcbiAqIEBmaWxlIE1hbmFnZXMgU2FsZXNmb3JjZSBNZXRhZGF0YSBBUElcbiAqIEBhdXRob3IgU2hpbmljaGkgVG9taXRhIDxzaGluaWNoaS50b21pdGFAZ21haWwuY29tPlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKSxcbiAgICBldmVudHMgID0gcmVxdWlyZSgnZXZlbnRzJyksXG4gICAgc3RyZWFtICA9IHJlcXVpcmUoJ3JlYWRhYmxlLXN0cmVhbScpLFxuICAgIF8gICAgICAgPSByZXF1aXJlKCdsb2Rhc2gvY29yZScpLFxuICAgIGpzZm9yY2UgPSByZXF1aXJlKCcuLi9jb3JlJyksXG4gICAgUHJvbWlzZSA9IHJlcXVpcmUoJy4uL3Byb21pc2UnKSxcbiAgICBTT0FQICAgID0gcmVxdWlyZSgnLi4vc29hcCcpO1xuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qKlxuICogQ2xhc3MgZm9yIFNhbGVzZm9yY2UgTWV0YWRhdGEgQVBJXG4gKlxuICogQGNsYXNzXG4gKiBAcGFyYW0ge0Nvbm5lY3Rpb259IGNvbm4gLSBDb25uZWN0aW9uIG9iamVjdFxuICovXG52YXIgTWV0YWRhdGEgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGNvbm4pIHtcbiAgdGhpcy5fY29ubiA9IGNvbm47XG59O1xuXG5cbi8qKlxuICogUG9sbGluZyBpbnRlcnZhbCBpbiBtaWxsaXNlY29uZHNcbiAqIEB0eXBlIHtOdW1iZXJ9XG4gKi9cbk1ldGFkYXRhLnByb3RvdHlwZS5wb2xsSW50ZXJ2YWwgPSAxMDAwO1xuXG4vKipcbiAqIFBvbGxpbmcgdGltZW91dCBpbiBtaWxsaXNlY29uZHNcbiAqIEB0eXBlIHtOdW1iZXJ9XG4gKi9cbk1ldGFkYXRhLnByb3RvdHlwZS5wb2xsVGltZW91dCA9IDEwMDAwO1xuXG5cbi8qKlxuICogQ2FsbCBNZXRhZGF0YSBBUEkgU09BUCBlbmRwb2ludFxuICpcbiAqIEBwcml2YXRlXG4gKi9cbk1ldGFkYXRhLnByb3RvdHlwZS5faW52b2tlID0gZnVuY3Rpb24obWV0aG9kLCBtZXNzYWdlLCBjYWxsYmFjaykge1xuICB2YXIgc29hcEVuZHBvaW50ID0gbmV3IFNPQVAodGhpcy5fY29ubiwge1xuICAgIHhtbG5zOiBcImh0dHA6Ly9zb2FwLnNmb3JjZS5jb20vMjAwNi8wNC9tZXRhZGF0YVwiLFxuICAgIGVuZHBvaW50VXJsOiB0aGlzLl9jb25uLmluc3RhbmNlVXJsICsgXCIvc2VydmljZXMvU29hcC9tL1wiICsgdGhpcy5fY29ubi52ZXJzaW9uXG4gIH0pO1xuICByZXR1cm4gc29hcEVuZHBvaW50Lmludm9rZShtZXRob2QsIG1lc3NhZ2UpLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgcmV0dXJuIHJlcy5yZXN1bHQ7XG4gIH0pLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cblxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBNZXRhZGF0YX5NZXRhZGF0YUluZm9cbiAqIEBwcm9wIHtTdHJpbmd9IGZ1bGxOYW1lIC0gVGhlIG5hbWUgb2YgdGhlIGNvbXBvbmVudFxuICovXG5cbi8qKlxuICogQXN5bmNocm9ub3VzbHkgYWRkcyBvbmUgb3IgbW9yZSBuZXcgbWV0YWRhdGEgY29tcG9uZW50cyB0byB0aGUgb3JnYW5pemF0aW9uLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlIC0gVGhlIHR5cGUgb2YgbWV0YWRhdGEgdG8gY3JlYXRlXG4gKiBAcGFyYW0ge01ldGFkYXRhfk1ldGFkYXRhSW5mb3xBcnJheS48TWV0YWRhdGF+TWV0YWRhdGFJbmZvPn0gbWV0YWRhdGEgLSBNZXRhZGF0YSB0byBjcmVhdGVcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPE1ldGFkYXRhfkFzeW5jUmVzdWx0fEFycmF5LjxNZXRhZGF0YX5Bc3luY1Jlc3VsdD4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtNZXRhZGF0YX5Bc3luY1Jlc3VsdExvY2F0b3J9XG4gKi9cbk1ldGFkYXRhLnByb3RvdHlwZS5jcmVhdGVBc3luYyA9IGZ1bmN0aW9uKHR5cGUsIG1ldGFkYXRhLCBjYWxsYmFjaykge1xuICBpZiAoTnVtYmVyKHRoaXMuX2Nvbm4udmVyc2lvbikgPiAzMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkFzeW5jIG1ldGFkYXRhIENSVUQgY2FsbHMgYXJlIG5vdCBzdXBwb3J0ZWQgb24gdmVyIDMxLjAgb3IgbGF0ZXIuXCIpO1xuICB9XG4gIHZhciBjb252ZXJ0ID0gZnVuY3Rpb24obWQpIHtcbiAgICBtZFtcIkB4c2k6dHlwZVwiXSA9IHR5cGU7XG4gICAgcmV0dXJuIG1kO1xuICB9O1xuICB2YXIgaXNBcnJheSA9IF8uaXNBcnJheShtZXRhZGF0YSk7XG4gIG1ldGFkYXRhID0gaXNBcnJheSA/IF8ubWFwKG1ldGFkYXRhLCBjb252ZXJ0KSA6IGNvbnZlcnQobWV0YWRhdGEpO1xuICB2YXIgcmVzID0gdGhpcy5faW52b2tlKFwiY3JlYXRlXCIsIHsgbWV0YWRhdGE6IG1ldGFkYXRhIH0pO1xuICByZXR1cm4gbmV3IEFzeW5jUmVzdWx0TG9jYXRvcih0aGlzLCByZXMsIGlzQXJyYXkpLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogQHR5cGVkZWYge09iamVjdH0gTWV0YWRhdGF+U2F2ZVJlc3VsdFxuICogQHByb3Age0Jvb2xlYW59IHN1Y2Nlc3MgLSBUcnVlIGlmIG1ldGFkYXRhIGlzIHN1Y2Nlc3NmdWxseSBzYXZlZFxuICogQHByb3Age1N0cmluZ30gZnVsbE5hbWUgLSBGdWxsIG5hbWUgb2YgbWV0YWRhdGEgb2JqZWN0XG4gKi9cblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBjb252ZXJ0VG9TYXZlUmVzdWx0KHJlc3VsdCkge1xuICB2YXIgc2F2ZVJlc3VsdCA9IF8uY2xvbmUocmVzdWx0KTtcbiAgc2F2ZVJlc3VsdC5zdWNjZXNzID0gc2F2ZVJlc3VsdC5zdWNjZXNzID09PSAndHJ1ZSc7XG4gIHJldHVybiBzYXZlUmVzdWx0O1xufVxuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IE1ldGFkYXRhflVwc2VydFJlc3VsdFxuICogQHByb3Age0Jvb2xlYW59IHN1Y2Nlc3MgLSBUcnVlIGlmIG1ldGFkYXRhIGlzIHN1Y2Nlc3NmdWxseSBzYXZlZFxuICogQHByb3Age1N0cmluZ30gZnVsbE5hbWUgLSBGdWxsIG5hbWUgb2YgbWV0YWRhdGEgb2JqZWN0XG4gKiBAcHJvcCB7Qm9vbGVhbn0gY3JlYXRlZCAtIFRydWUgaWYgbWV0YWRhdGEgaXMgbmV3bHkgY3JlYXRlZFxuICovXG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gY29udmVydFRvVXBzZXJ0UmVzdWx0KHJlc3VsdCkge1xuICB2YXIgdXBzZXJ0UmVzdWx0ID0gY29udmVydFRvU2F2ZVJlc3VsdChyZXN1bHQpO1xuICB1cHNlcnRSZXN1bHQuY3JlYXRlZCA9IHVwc2VydFJlc3VsdC5jcmVhdGVkID09PSAndHJ1ZSc7XG4gIHJldHVybiB1cHNlcnRSZXN1bHQ7XG59XG5cbi8qKlxuICogU3lub255bSBvZiBNZXRhZGF0YSNjcmVhdGUoKS5cbiAqXG4gKiBAbWV0aG9kIE1ldGFkYXRhI2NyZWF0ZVN5bmNcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlIC0gVGhlIHR5cGUgb2YgbWV0YWRhdGEgdG8gY3JlYXRlXG4gKiBAcGFyYW0ge01ldGFkYXRhfk1ldGFkYXRhSW5mb3xBcnJheS48TWV0YWRhdGF+TWV0YWRhdGFJbmZvPn0gbWV0YWRhdGEgLSBNZXRhZGF0YSB0byBjcmVhdGVcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPE1ldGFkYXRhflNhdmVSZXN1bHR8QXJyYXkuPE1ldGFkYXRhflNhdmVSZXN1bHQ+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48TWV0YWRhdGF+U2F2ZVJlc3VsdHxBcnJheS48TWV0YWRhdGF+U2F2ZVJlc3VsdD4+fVxuICovXG4vKipcbiAqIFN5bmNocm9ub3VzbHkgYWRkcyBvbmUgb3IgbW9yZSBuZXcgbWV0YWRhdGEgY29tcG9uZW50cyB0byB0aGUgb3JnYW5pemF0aW9uLlxuICpcbiAqIEBtZXRob2QgTWV0YWRhdGEjY3JlYXRlXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZSAtIFRoZSB0eXBlIG9mIG1ldGFkYXRhIHRvIGNyZWF0ZVxuICogQHBhcmFtIHtNZXRhZGF0YX5NZXRhZGF0YUluZm98QXJyYXkuPE1ldGFkYXRhfk1ldGFkYXRhSW5mbz59IG1ldGFkYXRhIC0gTWV0YWRhdGEgdG8gY3JlYXRlXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxNZXRhZGF0YX5TYXZlUmVzdWx0fEFycmF5LjxNZXRhZGF0YX5TYXZlUmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPE1ldGFkYXRhflNhdmVSZXN1bHR8QXJyYXkuPE1ldGFkYXRhflNhdmVSZXN1bHQ+Pn1cbiAqL1xuTWV0YWRhdGEucHJvdG90eXBlLmNyZWF0ZVN5bmMgPVxuTWV0YWRhdGEucHJvdG90eXBlLmNyZWF0ZSA9IGZ1bmN0aW9uKHR5cGUsIG1ldGFkYXRhLCBjYWxsYmFjaykge1xuICB2YXIgY29udmVydCA9IGZ1bmN0aW9uKG1kKSB7XG4gICAgbWRbXCJAeHNpOnR5cGVcIl0gPSB0eXBlO1xuICAgIHJldHVybiBtZDtcbiAgfTtcbiAgdmFyIGlzQXJyYXkgPSBfLmlzQXJyYXkobWV0YWRhdGEpO1xuICBtZXRhZGF0YSA9IGlzQXJyYXkgPyBfLm1hcChtZXRhZGF0YSwgY29udmVydCkgOiBjb252ZXJ0KG1ldGFkYXRhKTtcbiAgcmV0dXJuIHRoaXMuX2ludm9rZShcImNyZWF0ZU1ldGFkYXRhXCIsIHsgbWV0YWRhdGE6IG1ldGFkYXRhIH0pLnRoZW4oZnVuY3Rpb24ocmVzdWx0cykge1xuICAgIHJldHVybiBfLmlzQXJyYXkocmVzdWx0cykgPyBfLm1hcChyZXN1bHRzLCBjb252ZXJ0VG9TYXZlUmVzdWx0KSA6IGNvbnZlcnRUb1NhdmVSZXN1bHQocmVzdWx0cyk7XG4gIH0pLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gY29udmVydFRvTWV0YWRhdGFJbmZvKHJlYykge1xuICB2YXIgbWV0YWRhdGFJbmZvID0gXy5jbG9uZShyZWMpO1xuICBkZWxldGUgbWV0YWRhdGFJbmZvLiQ7XG4gIHJldHVybiBtZXRhZGF0YUluZm87XG59XG5cbi8qKlxuICogU3lub255bSBvZiBNZXRhZGF0YSNyZWFkKClcbiAqXG4gKiBAbWV0aG9kIE1ldGFkYXRhI3JlYWRTeW5jXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZSAtIFRoZSB0eXBlIG9mIG1ldGFkYXRhIHRvIHJlYWRcbiAqIEBwYXJhbSB7U3RyaW5nfEFycmF5LjxTdHJpbmc+fSBmdWxsTmFtZXMgLSBmdWxsIG5hbWUocykgb2YgbWV0YWRhdGEgb2JqZWN0cyB0byByZWFkXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxNZXRhZGF0YX5NZXRhZGF0YUluZm98QXJyYXkuPE1ldGFkYXRhfk1ldGFkYXRhSW5mbz4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxBcnJheS48TWV0YWRhdGF+TWV0YWRhdGFJbmZvfEFycmF5LjxNZXRhZGF0YX5NZXRhZGF0YUluZm8+Pj59XG4gKi9cbi8qKlxuICogU3luY2hyb25vdXNseSByZWFkIHNwZWNpZmllZCBtZXRhZGF0YSBjb21wb25lbnRzIGluIHRoZSBvcmdhbml6YXRpb24uXG4gKlxuICogQG1ldGhvZCBNZXRhZGF0YSNyZWFkXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZSAtIFRoZSB0eXBlIG9mIG1ldGFkYXRhIHRvIHJlYWRcbiAqIEBwYXJhbSB7U3RyaW5nfEFycmF5LjxTdHJpbmc+fSBmdWxsTmFtZXMgLSBmdWxsIG5hbWUocykgb2YgbWV0YWRhdGEgb2JqZWN0cyB0byByZWFkXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxNZXRhZGF0YX5NZXRhZGF0YUluZm98QXJyYXkuPE1ldGFkYXRhfk1ldGFkYXRhSW5mbz4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxBcnJheS48TWV0YWRhdGF+TWV0YWRhdGFJbmZvfEFycmF5LjxNZXRhZGF0YX5NZXRhZGF0YUluZm8+Pj59XG4gKi9cbk1ldGFkYXRhLnByb3RvdHlwZS5yZWFkU3luYyA9XG5NZXRhZGF0YS5wcm90b3R5cGUucmVhZCA9IGZ1bmN0aW9uKHR5cGUsIGZ1bGxOYW1lcywgY2FsbGJhY2spIHtcbiAgcmV0dXJuIHRoaXMuX2ludm9rZShcInJlYWRNZXRhZGF0YVwiLCB7IHR5cGU6IHR5cGUsIGZ1bGxOYW1lczogZnVsbE5hbWVzIH0pLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgcmV0dXJuIF8uaXNBcnJheShyZXMucmVjb3JkcykgPyBfLm1hcChyZXMucmVjb3JkcywgY29udmVydFRvTWV0YWRhdGFJbmZvKSA6IGNvbnZlcnRUb01ldGFkYXRhSW5mbyhyZXMucmVjb3Jkcyk7XG4gIH0pLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogQHR5cGVkZWYge09iamVjdH0gTWV0YWRhdGF+VXBkYXRlTWV0YWRhdGFJbmZvXG4gKiBAcHJvcCB7U3RyaW5nfSBjdXJyZW50TmFtZSAtIFRoZSBBUEkgbmFtZSBvZiB0aGUgY29tcG9uZW50IG9yIGZpZWxkIGJlZm9yZSB0aGUgdXBkYXRlXG4gKiBAcHJvcCB7TWV0YWRhdGF+TWV0YWRhdGFJbmZvfSBtZXRhZGF0YSAtIEZ1bGwgc3BlY2lmaWNhdGlvbiBvZiB0aGUgY29tcG9uZW50IG9yIGZpZWxkIHlvdSB3aXNoIHRvIHVwZGF0ZVxuICovXG5cbi8qKlxuICogQXN5bmNocm9ub3VzbHkgdXBkYXRlcyBvbmUgb3IgbW9yZSBtZXRhZGF0YSBjb21wb25lbnRzIGluIHRoZSBvcmdhbml6YXRpb24uXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHR5cGUgLSBUaGUgdHlwZSBvZiBtZXRhZGF0YSB0byB1cGRhdGVcbiAqIEBwYXJhbSB7TWV0YWRhdGF+VXBkYXRlTWV0YWRhdGFJbmZvfEFycmF5LjxNZXRhZGF0YX5VcGRhdGVNZXRhZGF0YUluZm8+fSB1cGRhdGVNZXRhZGF0YSAtIFVwZGF0aW5nIG1ldGFkYXRhXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxNZXRhZGF0YX5Bc3luY1Jlc3VsdHxBcnJheS48TWV0YWRhdGF+QXN5bmNSZXN1bHQ+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7TWV0YWRhdGF+QXN5bmNSZXN1bHRMb2NhdG9yfVxuICovXG5NZXRhZGF0YS5wcm90b3R5cGUudXBkYXRlQXN5bmMgPSBmdW5jdGlvbih0eXBlLCB1cGRhdGVNZXRhZGF0YSwgY2FsbGJhY2spIHtcbiAgaWYgKE51bWJlcih0aGlzLl9jb25uLnZlcnNpb24pID4gMzApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJBc3luYyBtZXRhZGF0YSBDUlVEIGNhbGxzIGFyZSBub3Qgc3VwcG9ydGVkIG9uIHZlciAzMS4wIG9yIGxhdGVyLlwiKTtcbiAgfVxuICB2YXIgY29udmVydCA9IGZ1bmN0aW9uKHVtZCkge1xuICAgIHVtZC5tZXRhZGF0YVtcIkB4c2k6dHlwZVwiXSA9IHR5cGU7XG4gICAgcmV0dXJuIHVtZDtcbiAgfTtcbiAgdmFyIGlzQXJyYXkgPSBfLmlzQXJyYXkodXBkYXRlTWV0YWRhdGEpO1xuICB1cGRhdGVNZXRhZGF0YSA9IGlzQXJyYXkgPyBfLm1hcCh1cGRhdGVNZXRhZGF0YSwgY29udmVydCkgOiBjb252ZXJ0KHVwZGF0ZU1ldGFkYXRhKTtcbiAgdmFyIHJlcyA9IHRoaXMuX2ludm9rZShcInVwZGF0ZVwiLCB7IHVwZGF0ZU1ldGFkYXRhOiB1cGRhdGVNZXRhZGF0YSB9KTtcbiAgcmV0dXJuIG5ldyBBc3luY1Jlc3VsdExvY2F0b3IodGhpcywgcmVzLCBpc0FycmF5KS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIFN5bm9ueW0gb2YgTWV0YWRhdGEjdXBkYXRlKCkuXG4gKlxuICogQG1ldGhvZCBNZXRhZGF0YSN1cGRhdGVTeW5jXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZSAtIFRoZSB0eXBlIG9mIG1ldGFkYXRhIHRvIHVwZGF0ZVxuICogQHBhcmFtIHtNZXRhZGF0YX5NZXRhZGF0YUluZm98QXJyYXkuPE1ldGFkYXRhfk1ldGFkYXRhSW5mbz59IHVwZGF0ZU1ldGFkYXRhIC0gVXBkYXRpbmcgbWV0YWRhdGFcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPE1ldGFkYXRhflNhdmVSZXN1bHR8QXJyYXkuPE1ldGFkYXRhflNhdmVSZXN1bHQ+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48TWV0YWRhdGF+U2F2ZVJlc3VsdHxBcnJheS48TWV0YWRhdGF+U2F2ZVJlc3VsdD4+fVxuICovXG4vKipcbiAqIFN5bmNocm9ub3VzbHkgdXBkYXRlcyBvbmUgb3IgbW9yZSBtZXRhZGF0YSBjb21wb25lbnRzIGluIHRoZSBvcmdhbml6YXRpb24uXG4gKlxuICogQG1ldGhvZCBNZXRhZGF0YSN1cGRhdGVcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlIC0gVGhlIHR5cGUgb2YgbWV0YWRhdGEgdG8gdXBkYXRlXG4gKiBAcGFyYW0ge01ldGFkYXRhfk1ldGFkYXRhSW5mb3xBcnJheS48TWV0YWRhdGF+TWV0YWRhdGFJbmZvPn0gdXBkYXRlTWV0YWRhdGEgLSBVcGRhdGluZyBtZXRhZGF0YVxuICogQHBhcmFtIHtDYWxsYmFjay48TWV0YWRhdGF+U2F2ZVJlc3VsdHxBcnJheS48TWV0YWRhdGF+U2F2ZVJlc3VsdD4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxNZXRhZGF0YX5TYXZlUmVzdWx0fEFycmF5LjxNZXRhZGF0YX5TYXZlUmVzdWx0Pj59XG4gKi9cbk1ldGFkYXRhLnByb3RvdHlwZS51cGRhdGVTeW5jID1cbk1ldGFkYXRhLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbih0eXBlLCBtZXRhZGF0YSwgY2FsbGJhY2spIHtcbiAgdmFyIGNvbnZlcnQgPSBmdW5jdGlvbihtZCkge1xuICAgIG1kW1wiQHhzaTp0eXBlXCJdID0gdHlwZTtcbiAgICByZXR1cm4gbWQ7XG4gIH07XG4gIHZhciBpc0FycmF5ID0gXy5pc0FycmF5KG1ldGFkYXRhKTtcbiAgbWV0YWRhdGEgPSBpc0FycmF5ID8gXy5tYXAobWV0YWRhdGEsIGNvbnZlcnQpIDogY29udmVydChtZXRhZGF0YSk7XG4gIHJldHVybiB0aGlzLl9pbnZva2UoXCJ1cGRhdGVNZXRhZGF0YVwiLCB7IG1ldGFkYXRhOiBtZXRhZGF0YSB9KS50aGVuKGZ1bmN0aW9uKHJlc3VsdHMpIHtcbiAgICByZXR1cm4gXy5pc0FycmF5KHJlc3VsdHMpID8gXy5tYXAocmVzdWx0cywgY29udmVydFRvU2F2ZVJlc3VsdCkgOiBjb252ZXJ0VG9TYXZlUmVzdWx0KHJlc3VsdHMpO1xuICB9KS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIFN5bm9ueW0gb2YgTWV0YWRhdGEjdXBzZXJ0KCkuXG4gKlxuICogQG1ldGhvZCBNZXRhZGF0YSN1cHNlcnRTeW5jXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZSAtIFRoZSB0eXBlIG9mIG1ldGFkYXRhIHRvIHVwc2VydFxuICogQHBhcmFtIHtNZXRhZGF0YX5NZXRhZGF0YUluZm98QXJyYXkuPE1ldGFkYXRhfk1ldGFkYXRhSW5mbz59IG1ldGFkYXRhIC0gVXBzZXJ0aW5nIG1ldGFkYXRhXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxNZXRhZGF0YX5VcHNlcnRSZXN1bHR8QXJyYXkuPE1ldGFkYXRhflVwc2VydFJlc3VsdD4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxNZXRhZGF0YX5VcHNlcnRSZXN1bHR8QXJyYXkuPE1ldGFkYXRhflVwc2VydFJlc3VsdD4+fVxuICovXG4vKipcbiAqIFVwc2VydHMgb25lIG9yIG1vcmUgY29tcG9uZW50cyBpbiB5b3VyIG9yZ2FuaXphdGlvbidzIGRhdGEuXG4gKlxuICogQG1ldGhvZCBNZXRhZGF0YSN1cHNlcnRcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlIC0gVGhlIHR5cGUgb2YgbWV0YWRhdGEgdG8gdXBzZXJ0XG4gKiBAcGFyYW0ge01ldGFkYXRhfk1ldGFkYXRhSW5mb3xBcnJheS48TWV0YWRhdGF+TWV0YWRhdGFJbmZvPn0gbWV0YWRhdGEgLSBVcHNlcnRpbmcgbWV0YWRhdGFcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPE1ldGFkYXRhflVwc2VydFJlc3VsdHxBcnJheS48TWV0YWRhdGF+VXBzZXJ0UmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPE1ldGFkYXRhflVwc2VydFJlc3VsdHxBcnJheS48TWV0YWRhdGF+VXBzZXJ0UmVzdWx0Pj59XG4gKi9cbk1ldGFkYXRhLnByb3RvdHlwZS51cHNlcnRTeW5jID1cbk1ldGFkYXRhLnByb3RvdHlwZS51cHNlcnQgPSBmdW5jdGlvbih0eXBlLCBtZXRhZGF0YSwgY2FsbGJhY2spIHtcbiAgdmFyIGNvbnZlcnQgPSBmdW5jdGlvbihtZCkge1xuICAgIG1kW1wiQHhzaTp0eXBlXCJdID0gdHlwZTtcbiAgICByZXR1cm4gbWQ7XG4gIH07XG4gIHZhciBpc0FycmF5ID0gXy5pc0FycmF5KG1ldGFkYXRhKTtcbiAgbWV0YWRhdGEgPSBpc0FycmF5ID8gXy5tYXAobWV0YWRhdGEsIGNvbnZlcnQpIDogY29udmVydChtZXRhZGF0YSk7XG4gIHJldHVybiB0aGlzLl9pbnZva2UoXCJ1cHNlcnRNZXRhZGF0YVwiLCB7IG1ldGFkYXRhOiBtZXRhZGF0YSB9KS50aGVuKGZ1bmN0aW9uKHJlc3VsdHMpIHtcbiAgICByZXR1cm4gXy5pc0FycmF5KHJlc3VsdHMpID8gXy5tYXAocmVzdWx0cywgY29udmVydFRvVXBzZXJ0UmVzdWx0KSA6IGNvbnZlcnRUb1Vwc2VydFJlc3VsdChyZXN1bHRzKTtcbiAgfSkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBBc3luY2hyb25vdXNseSBkZWxldGVzIHNwZWNpZmllZCBtZXRhZGF0YSBjb21wb25lbnRzIGluIHRoZSBvcmdhbml6YXRpb24uXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHR5cGUgLSBUaGUgdHlwZSBvZiBtZXRhZGF0YSB0byBkZWxldGVcbiAqIEBwYXJhbSB7U3RyaW5nfE1ldGFkYXRhfk1ldGFkYXRhSW5mb3xBcnJheS48U3RyaW5nPnxBcnJheS48TWV0YWRhdGF+TWV0YWRhdGFJbmZvPn0gbWV0YWRhdGEgLSBUaGUgZnVsbE5hbWUgb2YgbWV0YWRhdGEgb3IgbWV0YWRhdGEgaW5mbyB0byBkZWxldGUuIElmIGl0IGlzIHBhc3NlZCBpbiBmdWxsTmFtZSwgdGhlIHR5cGUgcGFyYW1ldGVyIHNob3VsZCBub3QgYmUgZW1wdHkuXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxNZXRhZGF0YX5Bc3luY1Jlc3VsdHxBcnJheS48TWV0YWRhdGF+QXN5bmNSZXN1bHQ+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7TWV0YWRhdGF+QXN5bmNSZXN1bHRMb2NhdG9yfVxuICovXG5NZXRhZGF0YS5wcm90b3R5cGUuZGVsZXRlQXN5bmMgPSBmdW5jdGlvbih0eXBlLCBtZXRhZGF0YSwgY2FsbGJhY2spIHtcbiAgaWYgKE51bWJlcih0aGlzLl9jb25uLnZlcnNpb24pID4gMzApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJBc3luYyBtZXRhZGF0YSBDUlVEIGNhbGxzIGFyZSBub3Qgc3VwcG9ydGVkIG9uIHZlciAzMS4wIG9yIGxhdGVyLlwiKTtcbiAgfVxuICB2YXIgY29udmVydCA9IGZ1bmN0aW9uKG1kKSB7XG4gICAgaWYgKF8uaXNTdHJpbmcobWQpKSB7XG4gICAgICBtZCA9IHsgZnVsbE5hbWUgOiBtZCB9O1xuICAgIH1cbiAgICBtZFtcIkB4c2k6dHlwZVwiXSA9IHR5cGU7XG4gICAgcmV0dXJuIG1kO1xuICB9O1xuICB2YXIgaXNBcnJheSA9IF8uaXNBcnJheShtZXRhZGF0YSk7XG4gIG1ldGFkYXRhID0gaXNBcnJheSA/IF8ubWFwKG1ldGFkYXRhLCBjb252ZXJ0KSA6IGNvbnZlcnQobWV0YWRhdGEpO1xuICB2YXIgcmVzID0gdGhpcy5faW52b2tlKFwiZGVsZXRlXCIsIHsgbWV0YWRhdGE6IG1ldGFkYXRhIH0pO1xuICByZXR1cm4gbmV3IEFzeW5jUmVzdWx0TG9jYXRvcih0aGlzLCByZXMsIGlzQXJyYXkpLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogU3lub255bSBvZiBNZXRhZGF0YSNkZWxldGUoKS5cbiAqXG4gKiBAZGVwcmVjYXRlZFxuICogQG1ldGhvZCBNZXRhZGF0YSNkZWxcbiAqIEBwYXJhbSB7U3RyaW5nfSBbdHlwZV0gLSBUaGUgdHlwZSBvZiBtZXRhZGF0YSB0byBkZWxldGVcbiAqIEBwYXJhbSB7U3RyaW5nfE1ldGFkYXRhfk1ldGFkYXRhSW5mb3xBcnJheS48U3RyaW5nPnxBcnJheS48TWV0YWRhdGF+TWV0YWRhdGFJbmZvPn0gbWV0YWRhdGEgLSBUaGUgZnVsbE5hbWUgb2YgbWV0YWRhdGEgb3IgbWV0YWRhdGEgaW5mbyB0byBkZWxldGUuIElmIGl0IGlzIHBhc3NlZCBpbiBmdWxsTmFtZSwgdGhlIHR5cGUgcGFyYW1ldGVyIHNob3VsZCBub3QgYmUgZW1wdHkuXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxNZXRhZGF0YX5Bc3luY1Jlc3VsdHxBcnJheS48TWV0YWRhdGF+QXN5bmNSZXN1bHQ+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7TWV0YWRhdGF+QXN5bmNSZXN1bHRMb2NhdG9yfVxuICovXG4vKipcbiAqIFN5bm9ueW0gb2YgTWV0YWRhdGEjZGVsZXRlKCkuXG4gKlxuICogQG1ldGhvZCBNZXRhZGF0YSNkZWxldGVTeW5jXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZSAtIFRoZSB0eXBlIG9mIG1ldGFkYXRhIHRvIGRlbGV0ZVxuICogQHBhcmFtIHtTdHJpbmd8QXJyYXkuPFN0cmluZz59IGZ1bGxOYW1lcyAtIFRoZSBmdWxsTmFtZSBvZiBtZXRhZGF0YSB0byBkZWxldGUuXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxNZXRhZGF0YX5TYXZlUmVzdWx0fEFycmF5LjxNZXRhZGF0YX5TYXZlUmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPE1ldGFkYXRhflNhdmVSZXN1bHR8QXJyYXkuPE1ldGFkYXRhflNhdmVSZXN1bHQ+Pn1cbiAqL1xuXG4vKipcbiAqIFN5bmNocm9ub3VzbHkgZGVsZXRlcyBzcGVjaWZpZWQgbWV0YWRhdGEgY29tcG9uZW50cyBpbiB0aGUgb3JnYW5pemF0aW9uLlxuICpcbiAqIEBtZXRob2QgTWV0YWRhdGEjZGVsZXRlXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZSAtIFRoZSB0eXBlIG9mIG1ldGFkYXRhIHRvIGRlbGV0ZVxuICogQHBhcmFtIHtTdHJpbmd8QXJyYXkuPFN0cmluZz59IGZ1bGxOYW1lcyAtIFRoZSBmdWxsTmFtZSBvZiBtZXRhZGF0YSB0byBkZWxldGUuXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxNZXRhZGF0YX5TYXZlUmVzdWx0fEFycmF5LjxNZXRhZGF0YX5TYXZlUmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPE1ldGFkYXRhflNhdmVSZXN1bHR8QXJyYXkuPE1ldGFkYXRhflNhdmVSZXN1bHQ+Pn1cbiAqL1xuTWV0YWRhdGEucHJvdG90eXBlLmRlbCA9XG5NZXRhZGF0YS5wcm90b3R5cGUuZGVsZXRlU3luYyA9XG5NZXRhZGF0YS5wcm90b3R5cGVbXCJkZWxldGVcIl0gPSBmdW5jdGlvbih0eXBlLCBmdWxsTmFtZXMsIGNhbGxiYWNrKSB7XG4gIHJldHVybiB0aGlzLl9pbnZva2UoXCJkZWxldGVNZXRhZGF0YVwiLCB7IHR5cGU6IHR5cGUsIGZ1bGxOYW1lczogZnVsbE5hbWVzIH0pLnRoZW4oZnVuY3Rpb24ocmVzdWx0cykge1xuICAgIHJldHVybiBfLmlzQXJyYXkocmVzdWx0cykgPyBfLm1hcChyZXN1bHRzLCBjb252ZXJ0VG9TYXZlUmVzdWx0KSA6IGNvbnZlcnRUb1NhdmVSZXN1bHQocmVzdWx0cyk7XG4gIH0pLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogUmVuYW1lIGZ1bGxuYW1lIG9mIGEgbWV0YWRhdGEgY29tcG9uZW50IGluIHRoZSBvcmdhbml6YXRpb25cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZSAtIFRoZSB0eXBlIG9mIG1ldGFkYXRhIHRvIGRlbGV0ZVxuICogQHBhcmFtIHtTdHJpbmd9IG9sZEZ1bGxOYW1lIC0gVGhlIG9yaWdpbmFsIGZ1bGxOYW1lIG9mIG1ldGFkYXRhXG4gKiBAcGFyYW0ge1N0cmluZ30gbmV3RnVsbE5hbWUgLSBUaGUgbmV3IGZ1bGxOYW1lIG9mIG1ldGFkYXRhXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxNZXRhZGF0YX5TYXZlUmVzdWx0Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48TWV0YWRhdGF+U2F2ZVJlc3VsdD59XG4gKi9cbk1ldGFkYXRhLnByb3RvdHlwZS5yZW5hbWUgPSBmdW5jdGlvbih0eXBlLCBvbGRGdWxsTmFtZSwgbmV3RnVsbE5hbWUsIGNhbGxiYWNrKSB7XG4gIHJldHVybiB0aGlzLl9pbnZva2UoXCJyZW5hbWVNZXRhZGF0YVwiLCB7IHR5cGU6IHR5cGUsIG9sZEZ1bGxOYW1lOiBvbGRGdWxsTmFtZSwgbmV3RnVsbE5hbWU6IG5ld0Z1bGxOYW1lIH0pLnRoZW4oZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgcmV0dXJuIGNvbnZlcnRUb1NhdmVSZXN1bHQocmVzdWx0KTtcbiAgfSkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBDaGVja3MgdGhlIHN0YXR1cyBvZiBhc3luY2hyb25vdXMgbWV0YWRhdGEgY2FsbHNcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xBcnJheS48U3RyaW5nPn0gaWRzIC0gVGhlIGFzeW5jaHJvbm91cyBwcm9jZXNzIElEKHMpXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxNZXRhZGF0YX5Bc3luY1Jlc3VsdHxBcnJheS48TWV0YWRhdGF+QXN5bmNSZXN1bHQ+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7TWV0YWRhdGF+QXN5bmNSZXN1bHRMb2NhdG9yfVxuICovXG5NZXRhZGF0YS5wcm90b3R5cGUuY2hlY2tTdGF0dXMgPSBmdW5jdGlvbihpZHMsIGNhbGxiYWNrKSB7XG4gIHZhciBpc0FycmF5ID0gXy5pc0FycmF5KGlkcyk7XG4gIHZhciByZXMgPSB0aGlzLl9pbnZva2UoXCJjaGVja1N0YXR1c1wiLCB7IGFzeW5jUHJvY2Vzc0lkOiBpZHMgfSk7XG4gIHJldHVybiBuZXcgQXN5bmNSZXN1bHRMb2NhdG9yKHRoaXMsIHJlcywgaXNBcnJheSkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBNZXRhZGF0YX5EZXNjcmliZU1ldGFkYXRhUmVzdWx0XG4gKiBAcHJvcCB7QXJyYXkuPE9iamVjdD59IG1ldGFkYXRhT2JqZWN0cyAtIE9uZSBvciBtb3JlIG1ldGFkYXRhIGNvbXBvbmVudHMgYW5kIHRoZWlyIGF0dHJpYnV0ZXNcbiAqIEBwcm9wIHtBcnJheS48U3RyaW5nPn0gbWV0YWRhdGFPYmplY3RzLmNoaWxkWG1sTmFtZXMgLSBMaXN0IG9mIGNoaWxkIHN1Yi1jb21wb25lbnRzIGZvciB0aGlzIGNvbXBvbmVudFxuICogQHByb3Age1N0cmluZ30gbWV0YWRhdGFPYmplY3RzLmRpcmVjdG9yeU5hbWUgLSBUaGUgbmFtZSBvZiB0aGUgZGlyZWN0b3J5IGluIHRoZSAuemlwIGZpbGUgdGhhdCBjb250YWlucyB0aGlzIGNvbXBvbmVudFxuICogQHByb3Age0Jvb2xlYW59IG1ldGFkYXRhT2JqZWN0cy5pbkZvbGRlciAtIEluZGljYXRlcyB3aGV0aGVyIHRoZSBjb21wb25lbnQgaXMgaW4gYSBmb2xkZXIgb3Igbm90XG4gKiBAcHJvcCB7Qm9vbGVhbn0gbWV0YWRhdGFPYmplY3RzLm1ldGFGaWxlIC0gSW5kaWNhdGVzIHdoZXRoZXIgdGhlIGNvbXBvbmVudCByZXF1aXJlcyBhbiBhY2NvbXBhbnlpbmcgbWV0YWRhdGEgZmlsZVxuICogQHByb3Age1N0cmluZ30gbWV0YWRhdGFPYmplY3RzLnN1ZmZpeCAtIFRoZSBmaWxlIHN1ZmZpeCBmb3IgdGhpcyBjb21wb25lbnRcbiAqIEBwcm9wIHtTdHJpbmd9IG1ldGFkYXRhT2JqZWN0cy54bWxOYW1lIC0gVGhlIG5hbWUgb2YgdGhlIHJvb3QgZWxlbWVudCBpbiB0aGUgbWV0YWRhdGEgZmlsZSBmb3IgdGhpcyBjb21wb25lbnRcbiAqIEBwcm9wIHtTdHJpbmd9IG9yZ2FuaXphdGlvbk5hbWVzcGFjZSAtIFRoZSBuYW1lc3BhY2Ugb2YgdGhlIG9yZ2FuaXphdGlvblxuICogQHByb3Age0Jvb2xlYW59IHBhcnRpYWxTYXZlQWxsb3dlZCAtIEluZGljYXRlcyB3aGV0aGVyIHJvbGxiYWNrT25FcnJvciBpcyBhbGxvd2VkIG9yIG5vdFxuICogQHByb3Age0Jvb2xlYW59IHRlc3RSZXF1aXJlZCAtIEluZGljYXRlcyB3aGV0aGVyIHRlc3RzIGFyZSByZXF1aXJlZCBvciBub3RcbiAqL1xuXG4vKipcbiAqIFJldHJpZXZlcyB0aGUgbWV0YWRhdGEgd2hpY2ggZGVzY3JpYmVzIHlvdXIgb3JnYW5pemF0aW9uLCBpbmNsdWRpbmcgQXBleCBjbGFzc2VzIGFuZCB0cmlnZ2VycyxcbiAqIGN1c3RvbSBvYmplY3RzLCBjdXN0b20gZmllbGRzIG9uIHN0YW5kYXJkIG9iamVjdHMsIHRhYiBzZXRzIHRoYXQgZGVmaW5lIGFuIGFwcCxcbiAqIGFuZCBtYW55IG90aGVyIGNvbXBvbmVudHMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IFt2ZXJzaW9uXSAtIFRoZSBBUEkgdmVyc2lvbiBmb3Igd2hpY2ggeW91IHdhbnQgbWV0YWRhdGE7IGZvciBleGFtcGxlLCAyOS4wXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxNZXRhZGF0YX5EZXNjcmliZU1ldGFkYXRhUmVzdWx0Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48TWV0YWRhdGF+RGVzY3JpYmVNZXRhZGF0YVJlc3VsdD59XG4gKi9cbk1ldGFkYXRhLnByb3RvdHlwZS5kZXNjcmliZSA9IGZ1bmN0aW9uKHZlcnNpb24sIGNhbGxiYWNrKSB7XG4gIGlmICghXy5pc1N0cmluZyh2ZXJzaW9uKSkge1xuICAgIGNhbGxiYWNrID0gdmVyc2lvbjtcbiAgICB2ZXJzaW9uID0gdGhpcy5fY29ubi52ZXJzaW9uO1xuICB9XG4gIHJldHVybiB0aGlzLl9pbnZva2UoXCJkZXNjcmliZU1ldGFkYXRhXCIsIHsgYXNPZlZlcnNpb246IHZlcnNpb24gfSkudGhlbihmdW5jdGlvbihyZXMpIHtcbiAgICByZXMubWV0YWRhdGFPYmplY3RzID0gXy5pc0FycmF5KHJlcy5tZXRhZGF0YU9iamVjdHMpID8gcmVzLm1ldGFkYXRhT2JqZWN0cyA6IFsgcmVzLm1ldGFkYXRhT2JqZWN0cyBdO1xuICAgIHJlcy5tZXRhZGF0YU9iamVjdHMgPSBfLm1hcChyZXMubWV0YWRhdGFPYmplY3RzLCBmdW5jdGlvbihtbykge1xuICAgICAgaWYgKG1vLmNoaWxkWG1sTmFtZXMpIHtcbiAgICAgICAgbW8uY2hpbGRYbWxOYW1lcyA9IF8uaXNBcnJheShtby5jaGlsZFhtbE5hbWVzKSA/IG1vLmNoaWxkWG1sTmFtZXM6IFsgbW8uY2hpbGRYbWxOYW1lcyBdO1xuICAgICAgfVxuICAgICAgbW8uaW5Gb2xkZXIgPSBtby5pbkZvbGRlciA9PT0gJ3RydWUnO1xuICAgICAgbW8ubWV0YUZpbGUgPSBtby5tZXRhRmlsZSA9PT0gJ3RydWUnO1xuICAgICAgcmV0dXJuIG1vO1xuICAgIH0pO1xuICAgIHJlcy5wYXJ0aWFsU2F2ZUFsbG93ZWQgPSByZXMucGFydGlhbFNhdmVBbGxvd2VkID09PSAndHJ1ZSc7XG4gICAgcmVzLnRlc3RSZXF1aXJlZCA9IHJlcy50ZXN0UmVxdWlyZWQgPT09ICd0cnVlJztcbiAgICByZXR1cm4gcmVzO1xuICB9KS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IE1ldGFkYXRhfkxpc3RNZXRhZGF0YVF1ZXJ5XG4gKiBAcHJvcCB7U3RyaW5nfSB0eXBlIC0gVGhlIG1ldGFkYXRhIHR5cGUsIHN1Y2ggYXMgQ3VzdG9tT2JqZWN0LCBDdXN0b21GaWVsZCwgb3IgQXBleENsYXNzXG4gKiBAcHJvcCB7U3RyaW5nfSBbZm9sZGVyXSAtIFRoZSBmb2xkZXIgYXNzb2NpYXRlZCB3aXRoIHRoZSBjb21wb25lbnQuXG4gKi9cblxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBNZXRhZGF0YX5GaWxlUHJvcGVydGllc1xuICogQHByb3Age1N0cmluZ30gdHlwZSAtIFRoZSBtZXRhZGF0YSB0eXBlLCBzdWNoIGFzIEN1c3RvbU9iamVjdCwgQ3VzdG9tRmllbGQsIG9yIEFwZXhDbGFzc1xuICogQHByb3Age1N0cmluZ30gY3JlYXRlZEJ5SWQgLSBJRCBvZiB0aGUgdXNlciB3aG8gY3JlYXRlZCB0aGUgZmlsZVxuICogQHByb3Age1N0cmluZ30gY3JlYXRlZEJ5TmFtZSAtIE5hbWUgb2YgdGhlIHVzZXIgd2hvIGNyZWF0ZWQgdGhlIGZpbGVcbiAqIEBwcm9wIHtTdHJpbmd9IGNyZWF0ZWREYXRlIC0gRGF0ZSBhbmQgdGltZSB3aGVuIHRoZSBmaWxlIHdhcyBjcmVhdGVkXG4gKiBAcHJvcCB7U3RyaW5nfSBmaWxlTmFtZSAtIE5hbWUgb2YgdGhlIGZpbGVcbiAqIEBwcm9wIHtTdHJpbmd9IGZ1bGxOYW1lIC0gVGhlIGZpbGUgZGV2ZWxvcGVyIG5hbWUgdXNlZCBhcyBhIHVuaXF1ZSBpZGVudGlmaWVyIGZvciBBUEkgYWNjZXNzXG4gKiBAcHJvcCB7U3RyaW5nfSBpZCAtIElEIG9mIHRoZSBmaWxlXG4gKiBAcHJvcCB7U3RyaW5nfSBsYXN0TW9kaWZpZWRCeUlkIC0gSUQgb2YgdGhlIHVzZXIgd2hvIGxhc3QgbW9kaWZpZWQgdGhlIGZpbGVcbiAqIEBwcm9wIHtTdHJpbmd9IGxhc3RNb2RpZmllZEJ5TmFtZSAtIE5hbWUgb2YgdGhlIHVzZXIgd2hvIGxhc3QgbW9kaWZpZWQgdGhlIGZpbGVcbiAqIEBwcm9wIHtTdHJpbmd9IGxhc3RNb2RpZmllZERhdGUgLSBEYXRlIGFuZCB0aW1lIHRoYXQgdGhlIGZpbGUgd2FzIGxhc3QgbW9kaWZpZWRcbiAqIEBwcm9wIHtTdHJpbmd9IFttYW5hZ2VhYmxlU3RhdGVdIC0gSW5kaWNhdGVzIHRoZSBtYW5hZ2VhYmxlIHN0YXRlIG9mIHRoZSBzcGVjaWZpZWQgY29tcG9uZW50IGlmIGl0IGlzIGNvbnRhaW5lZCBpbiBhIHBhY2thZ2VcbiAqIEBwcm9wIHtTdHJpbmd9IFtuYW1lc3BhY2VQcmVmaXhdIC0gVGhlIG5hbWVzcGFjZSBwcmVmaXggb2YgdGhlIGNvbXBvbmVudFxuICovXG5cbi8qKlxuICogUmV0cmlldmVzIHByb3BlcnR5IGluZm9ybWF0aW9uIGFib3V0IG1ldGFkYXRhIGNvbXBvbmVudHMgaW4geW91ciBvcmdhbml6YXRpb25cbiAqXG4gKiBAcGFyYW0ge01ldGFkYXRhfkxpc3RNZXRhZGF0YVF1ZXJ5fEFycmF5LjxNZXRhZGF0YX5MaXN0TWV0YWRhdGFRdWVyeT59IHF1ZXJpZXMgLSBUaGUgY3JpdGVyaWEgb2JqZWN0KHMpIHNwZWNpZmluZyBtZXRhZGF0YSB0byBsaXN0XG4gKiBAcGFyYW0ge1N0cmluZ30gW3ZlcnNpb25dIC0gVGhlIEFQSSB2ZXJzaW9uIGZvciB3aGljaCB5b3Ugd2FudCBtZXRhZGF0YTsgZm9yIGV4YW1wbGUsIDI5LjBcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPEFycmF5LjxNZXRhZGF0YX5GaWxlUHJvcGVydGllcz4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxBcnJheS48TWV0YWRhdGF+RmlsZVByb3BlcnRpZXM+Pn1cbiAqL1xuTWV0YWRhdGEucHJvdG90eXBlLmxpc3QgPSBmdW5jdGlvbihxdWVyaWVzLCB2ZXJzaW9uLCBjYWxsYmFjaykge1xuICBpZiAoIV8uaXNTdHJpbmcodmVyc2lvbikpIHtcbiAgICBjYWxsYmFjayA9IHZlcnNpb247XG4gICAgdmVyc2lvbiA9IHRoaXMuX2Nvbm4udmVyc2lvbjtcbiAgfVxuICBpZiAoIV8uaXNBcnJheShxdWVyaWVzKSkge1xuICAgIHF1ZXJpZXMgPSBbIHF1ZXJpZXMgXTtcbiAgfVxuICByZXR1cm4gdGhpcy5faW52b2tlKFwibGlzdE1ldGFkYXRhXCIsIHsgcXVlcmllczogcXVlcmllcywgYXNPZlZlcnNpb246IHZlcnNpb24gfSwgY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBNZXRhZGF0YX5SZXRyaWV2ZVJlcXVlc3RcbiAqL1xuXG4vKipcbiAqIFJldHJpZXZlcyBYTUwgZmlsZSByZXByZXNlbnRhdGlvbnMgb2YgY29tcG9uZW50cyBpbiBhbiBvcmdhbml6YXRpb25cbiAqXG4gKiBAcGFyYW0ge01ldGFkYXRhflJldHJpZXZlUmVxdWVzdH0gcmVxdWVzdCAtIE9wdGlvbnMgZm9yIGRldGVybWluaW5nIHdoaWNoIHBhY2thZ2VzIG9yIGZpbGVzIGFyZSByZXRyaWV2ZWRcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPE1ldGFkYXRhfkFzeW5jUmVzdWx0Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7TWV0YWRhdGF+UmV0cmlldmVSZXN1bHRMb2NhdG9yfVxuICovXG5NZXRhZGF0YS5wcm90b3R5cGUucmV0cmlldmUgPSBmdW5jdGlvbihyZXF1ZXN0LCBjYWxsYmFjaykge1xuICB2YXIgcmVzID0gdGhpcy5faW52b2tlKFwicmV0cmlldmVcIiwgeyByZXF1ZXN0OiByZXF1ZXN0IH0pO1xuICByZXR1cm4gbmV3IFJldHJpZXZlUmVzdWx0TG9jYXRvcih0aGlzLCByZXMpLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogQ2hlY2tzIHRoZSBzdGF0dXMgb2YgZGVjbGFyYXRpdmUgbWV0YWRhdGEgY2FsbCByZXRyaWV2ZSgpIGFuZCByZXR1cm5zIHRoZSB6aXAgZmlsZSBjb250ZW50c1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBpZCAtIEFzeW5jIHByb2Nlc3MgaWQgcmV0dXJuZWQgZnJvbSBwcmV2aW91cyByZXRyaWV2ZSByZXF1ZXN0XG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxNZXRhZGF0YX5SZXRyaWV2ZVJlc3VsdD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPE1ldGFkYXRhflJldHJpZXZlUmVzdWx0Pn1cbiAqL1xuTWV0YWRhdGEucHJvdG90eXBlLmNoZWNrUmV0cmlldmVTdGF0dXMgPSBmdW5jdGlvbihpZCwgY2FsbGJhY2spIHtcbiAgcmV0dXJuIHRoaXMuX2ludm9rZShcImNoZWNrUmV0cmlldmVTdGF0dXNcIiwgeyBhc3luY1Byb2Nlc3NJZDogaWQgfSwgY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBEZXBsb3kgY29tcG9uZW50cyBpbnRvIGFuIG9yZ2FuaXphdGlvbiB1c2luZyB6aXBwZWQgZmlsZSByZXByZXNlbnRhdGlvbnNcbiAqXG4gKiBAcGFyYW0ge3N0cmVhbS5TdHJlYW18QnVmZmVyfFN0cmluZ30gemlwSW5wdXQgLSBaaXBwZWQgZmlsZSBpbnB1dCBzb3VyY2UgaW4gcmVhZGFibGUgc3RyZWFtLCBiaW5hcnkgYnVmZmVyIG9yIEJhc2U2NC1lbmNvZGVkIHN0cmluZ1xuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIE9wdGlvbnMgdXNlZCBpbiBkZXBsb3ltZW50XG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLmFsbG93TWlzc2luZ0ZpbGVzXSAtIFNwZWNpZmllcyB3aGV0aGVyIGEgZGVwbG95IHN1Y2NlZWRzIGV2ZW4gaWYgZmlsZXMgdGhhdCBhcmUgc3BlY2lmaWVkIGluIHBhY2thZ2UueG1sIGJ1dCBhcmUgbm90IGluIHRoZSAuemlwIGZpbGUgb3Igbm90LlxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5hdXRvVXBkYXRlUGFja2FnZV0gLSBJZiBhIGZpbGUgaXMgaW4gdGhlIC56aXAgZmlsZSBidXQgbm90IHNwZWNpZmllZCBpbiBwYWNrYWdlLnhtbCwgc3BlY2lmaWVzIHdoZXRoZXIgdGhlIGZpbGUgc2hvdWxkIGJlIGF1dG9tYXRpY2FsbHkgYWRkZWQgdG8gdGhlIHBhY2thZ2Ugb3Igbm90LlxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5jaGVja09ubHldIC0gSW5kaWNhdGVzIHdoZXRoZXIgQXBleCBjbGFzc2VzIGFuZCB0cmlnZ2VycyBhcmUgc2F2ZWQgdG8gdGhlIG9yZ2FuaXphdGlvbiBhcyBwYXJ0IG9mIHRoZSBkZXBsb3ltZW50IChmYWxzZSkgb3Igbm90ICh0cnVlKS5cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuaWdub3JlV2FybmluZ3NdIC0gSW5kaWNhdGVzIHdoZXRoZXIgYSB3YXJuaW5nIHNob3VsZCBhbGxvdyBhIGRlcGxveW1lbnQgdG8gY29tcGxldGUgc3VjY2Vzc2Z1bGx5ICh0cnVlKSBvciBub3QgKGZhbHNlKS4gRGVmYXVsdHMgdG8gZmFsc2UuXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLnBlcmZvcm1SZXRyaWV2ZV0gLSBJbmRpY2F0ZXMgd2hldGhlciBhIHJldHJpZXZlKCkgY2FsbCBpcyBwZXJmb3JtZWQgaW1tZWRpYXRlbHkgYWZ0ZXIgdGhlIGRlcGxveW1lbnQgKHRydWUpIG9yIG5vdCAoZmFsc2UpLlxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5wdXJnZU9uRGVsZXRlXSAtIElmIHRydWUsIHRoZSBkZWxldGVkIGNvbXBvbmVudHMgaW4gdGhlIGRlc3RydWN0aXZlQ2hhbmdlcy54bWwgbWFuaWZlc3QgZmlsZSBhcmVuJ3Qgc3RvcmVkIGluIHRoZSBSZWN5Y2xlIEJpbi5cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMucm9sbGJhY2tPbkVycm9yXSAtIEluZGljYXRlcyB3aGV0aGVyIGFueSBmYWlsdXJlIGNhdXNlcyBhIGNvbXBsZXRlIHJvbGxiYWNrICh0cnVlKSBvciBub3QgKGZhbHNlKS5cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMucnVuQWxsVGVzdHNdIC0gSWYgdHJ1ZSwgYWxsIEFwZXggdGVzdHMgZGVmaW5lZCBpbiB0aGUgb3JnYW5pemF0aW9uIGFyZSBydW4uXG4gKiBAcGFyYW0ge0FycmF5LjxTdHJpbmc+fSBbb3B0aW9ucy5ydW5UZXN0c10gLSBBIGxpc3Qgb2YgQXBleCB0ZXN0cyB0byBiZSBydW4gZHVyaW5nIGRlcGxveW1lbnQuXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLnNpbmdsZVBhY2thZ2VdIC0gSW5kaWNhdGVzIHdoZXRoZXIgdGhlIHNwZWNpZmllZCAuemlwIGZpbGUgcG9pbnRzIHRvIGEgZGlyZWN0b3J5IHN0cnVjdHVyZSB3aXRoIGEgc2luZ2xlIHBhY2thZ2UgKHRydWUpIG9yIGEgc2V0IG9mIHBhY2thZ2VzIChmYWxzZSkuXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxNZXRhZGF0YX5Bc3luY1Jlc3VsdD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge01ldGFkYXRhfkRlcGxveVJlc3VsdExvY2F0b3J9XG4gKi9cbk1ldGFkYXRhLnByb3RvdHlwZS5kZXBsb3kgPSBmdW5jdGlvbih6aXBJbnB1dCwgb3B0aW9ucywgY2FsbGJhY2spIHtcbiAgaWYgKCFvcHRpb25zIHx8IF8uaXNGdW5jdGlvbihvcHRpb25zKSkge1xuICAgIGNhbGxiYWNrID0gb3B0aW9ucztcbiAgICBvcHRpb25zID0ge307XG4gIH1cbiAgdmFyIGRlZmVycmVkID0gUHJvbWlzZS5kZWZlcigpO1xuICBpZiAoXy5pc09iamVjdCh6aXBJbnB1dCkgJiYgXy5pc0Z1bmN0aW9uKHppcElucHV0LnBpcGUpKSB7XG4gICAgdmFyIGJ1ZnMgPSBbXTtcbiAgICB6aXBJbnB1dC5vbignZGF0YScsIGZ1bmN0aW9uKGQpIHtcbiAgICAgIGJ1ZnMucHVzaChkKTtcbiAgICB9KTtcbiAgICB6aXBJbnB1dC5vbignZW5kJywgZnVuY3Rpb24oKSB7XG4gICAgICBkZWZlcnJlZC5yZXNvbHZlKEJ1ZmZlci5jb25jYXQoYnVmcykudG9TdHJpbmcoJ2Jhc2U2NCcpKTtcbiAgICB9KTtcbiAgICAvLyB6aXBJbnB1dC5yZXN1bWUoKTtcbiAgfSBlbHNlIGlmICh6aXBJbnB1dCBpbnN0YW5jZW9mIEJ1ZmZlcikge1xuICAgIGRlZmVycmVkLnJlc29sdmUoemlwSW5wdXQudG9TdHJpbmcoJ2Jhc2U2NCcpKTtcbiAgfSBlbHNlIGlmICh6aXBJbnB1dCBpbnN0YW5jZW9mIFN0cmluZyB8fCB0eXBlb2YgemlwSW5wdXQgPT09ICdzdHJpbmcnKSB7XG4gICAgZGVmZXJyZWQucmVzb2x2ZSh6aXBJbnB1dCk7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgXCJVbmV4cGVjdGVkIHppcElucHV0IHR5cGVcIjtcbiAgfVxuXG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIHJlcyA9IGRlZmVycmVkLnByb21pc2UudGhlbihmdW5jdGlvbih6aXBDb250ZW50QjY0KSB7XG4gICAgcmV0dXJuIHNlbGYuX2ludm9rZShcImRlcGxveVwiLCB7XG4gICAgICBaaXBGaWxlOiB6aXBDb250ZW50QjY0LFxuICAgICAgRGVwbG95T3B0aW9uczogb3B0aW9uc1xuICAgIH0sIGNhbGxiYWNrKTtcbiAgfSk7XG4gIHJldHVybiBuZXcgRGVwbG95UmVzdWx0TG9jYXRvcih0aGlzLCByZXMpLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogQ2hlY2tzIHRoZSBzdGF0dXMgb2YgZGVjbGFyYXRpdmUgbWV0YWRhdGEgY2FsbCBkZXBsb3koKVxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBpZCAtIEFzeW5jIHByb2Nlc3MgaWQgcmV0dXJuZWQgZnJvbSBwcmV2aW91cyBkZXBsb3kgcmVxdWVzdFxuICogQHBhcmFtIHtCb29sZWFufSBbaW5jbHVkZURldGFpbHNdIC0gU2V0cyB0aGUgRGVwbG95UmVzdWx0IG9iamVjdCB0byBpbmNsdWRlIGRldGFpbHMgaW5mb3JtYXRpb24gKGRlZmF1bHQ6IGZhbHNlKVxuICogQHBhcmFtIHtDYWxsYmFjay48TWV0YWRhdGF+RGVwbG95UmVzdWx0Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48TWV0YWRhdGF+RGVwbG95UmVzdWx0Pn1cbiAqL1xuTWV0YWRhdGEucHJvdG90eXBlLmNoZWNrRGVwbG95U3RhdHVzID0gZnVuY3Rpb24oaWQsIGluY2x1ZGVEZXRhaWxzLCBjYWxsYmFjaykge1xuICBpZiAoXy5pc09iamVjdChpbmNsdWRlRGV0YWlscykgfHwgXy5pc0Jvb2xlYW4oaW5jbHVkZURldGFpbHMpKSB7XG4gICAgaW5jbHVkZURldGFpbHMgPSAhIWluY2x1ZGVEZXRhaWxzO1xuICB9IGVsc2Uge1xuICAgIGNhbGxiYWNrID0gaW5jbHVkZURldGFpbHM7XG4gICAgaW5jbHVkZURldGFpbHMgPSBmYWxzZTtcbiAgfVxuICByZXR1cm4gdGhpcy5faW52b2tlKFwiY2hlY2tEZXBsb3lTdGF0dXNcIiwge1xuICAgIGFzeW5jUHJvY2Vzc0lkOiBpZCxcbiAgICBpbmNsdWRlRGV0YWlscyA6IGluY2x1ZGVEZXRhaWxzXG4gIH0pLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgcmVzLmRvbmUgPSByZXMuZG9uZSA9PT0gJ3RydWUnO1xuICAgIHJlcy5zdWNjZXNzID0gcmVzLnN1Y2Nlc3MgPT09ICd0cnVlJztcbiAgICByZXMuY2hlY2tPbmx5ID0gcmVzLmNoZWNrT25seSA9PT0gJ3RydWUnO1xuICAgIGlmIChyZXMuaWdub3JlV2FybmluZ3MpIHtcbiAgICAgIHJlcy5pZ25vcmVXYXJuaW5ncyA9IHJlcy5pZ25vcmVXYXJuaW5ncyA9PT0gJ3RydWUnO1xuICAgIH1cbiAgICBpZiAocmVzLnJvbGxiYWNrT25FcnJvcikge1xuICAgICAgcmVzLnJvbGxiYWNrT25FcnJvciA9IHJlcy5yb2xsYmFja09uRXJyb3IgPT09ICd0cnVlJztcbiAgICB9XG4gICAgcmVzLm51bWJlckNvbXBvbmVudEVycm9ycyA9IE51bWJlcihyZXMubnVtYmVyQ29tcG9uZW50RXJyb3JzKTtcbiAgICByZXMubnVtYmVyQ29tcG9uZW50c0RlcGxveWVkID0gTnVtYmVyKHJlcy5udW1iZXJDb21wb25lbnRzRGVwbG95ZWQpO1xuICAgIHJlcy5udW1iZXJDb21wb25lbnRzVG90YWwgPSBOdW1iZXIocmVzLm51bWJlckNvbXBvbmVudHNUb3RhbCk7XG4gICAgcmVzLm51bWJlclRlc3RFcnJvcnMgPSBOdW1iZXIocmVzLm51bWJlclRlc3RFcnJvcnMpO1xuICAgIHJlcy5udW1iZXJUZXN0c0NvbXBsZXRlZCA9IE51bWJlcihyZXMubnVtYmVyVGVzdHNDb21wbGV0ZWQpO1xuICAgIHJlcy5udW1iZXJUZXN0c1RvdGFsID0gTnVtYmVyKHJlcy5udW1iZXJUZXN0c1RvdGFsKTtcblxuICAgIHJldHVybiByZXM7XG4gIH0pLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi8qKlxuICogQHR5cGVkZWYge09iamVjdH0gTWV0YWRhdGF+QXN5bmNSZXN1bHRcbiAqIEBwcm9wIHtCb29sZWFufSBkb25lIC0gSW5kaWNhdGVzIHdoZXRoZXIgdGhlIGNhbGwgaGFzIGNvbXBsZXRlZCBvciBub3RcbiAqIEBwcm9wIHtTdHJpbmd9IGlkIC0gSUQgb2YgdGhlIGNvbXBvbmVudCBiZWluZyBjcmVhdGVkLCB1cGRhdGVkLCBkZWxldGVkLCBkZXBsb3llZCwgb3IgcmV0cmlldmVkXG4gKiBAcHJvcCB7U3RyaW5nfSBzdGF0ZSAtIFRoZSBzdGF0ZSBmb3VyIHBvc3NpYmxlIHZhbHVlczogUXVldWVkLCBJblByb2dyZXNzLCBDb21wbGV0ZWQsIGFuZCBFcnJvci5cbiAqIEBwcm9wIHtTdHJpbmd9IFtzdGF0dXNDb2RlXSAtIElmIGFuIGVycm9yIG9jY3VycmVkIGR1cmluZyB0aGUgY3JlYXRlKCksIHVwZGF0ZSgpLCBvciBkZWxldGUoKSBjYWxsLCBhIHN0YXR1cyBjb2RlIGlzIHJldHVybmVkXG4gKiBAcHJvcCB7U3RyaW5nfSBbbWVzc2FnZV0gLSBNZXNzYWdlIGNvcnJlc3BvbmRpbmcgdG8gdGhlIHN0YXR1c0NvZGUgZmllbGQgcmV0dXJuZWRcbiAqL1xuXG4vKipcbiAqIFRoZSBsb2NhdG9yIGNsYXNzIGZvciBNZXRhZGF0YSBBUEkgYXN5bmNocm9ub3VzIGNhbGwgcmVzdWx0XG4gKlxuICogQHByb3RlY3RlZFxuICogQGNsYXNzIE1ldGFkYXRhfkFzeW5jUmVzdWx0TG9jYXRvclxuICogQGV4dGVuZHMgZXZlbnRzLkV2ZW50RW1pdHRlclxuICogQGltcGxlbWVudHMgUHJvbWlzZS48TWV0YWRhdGF+QXN5bmNSZXN1bHR8QXJyYXkuPE1ldGFkYXRhfkFzeW5jUmVzdWx0Pj5cbiAqIEBwYXJhbSB7TWV0YWRhdGF9IG1ldGEgLSBNZXRhZGF0YSBBUEkgb2JqZWN0XG4gKiBAcGFyYW0ge1Byb21pc2UuPE1ldGFkYXRhfkFzeW5jUmVzdWx0fEFycmF5LjxNZXRhZGF0YX5Bc3luY1Jlc3VsdD4+fSByZXN1bHRzIC0gUHJvbWlzZSBvYmplY3QgZm9yIGFzeW5jIHJlc3VsdCBpbmZvXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtpc0FycmF5XSAtIEluZGljYXRlcyB3aGV0aGVyIHRoZSBhc3luYyByZXF1ZXN0IGlzIGdpdmVuIGluIGFycmF5IG9yIHNpbmdsZSBvYmplY3RcbiAqL1xudmFyIEFzeW5jUmVzdWx0TG9jYXRvciA9IGZ1bmN0aW9uKG1ldGEsIHJlc3VsdHMsIGlzQXJyYXkpIHtcbiAgdGhpcy5fbWV0YSA9IG1ldGE7XG4gIHRoaXMuX3Jlc3VsdHMgPSByZXN1bHRzO1xuICB0aGlzLl9pc0FycmF5ID0gaXNBcnJheTtcbn07XG5cbmluaGVyaXRzKEFzeW5jUmVzdWx0TG9jYXRvciwgZXZlbnRzLkV2ZW50RW1pdHRlcik7XG5cbi8qKlxuICogUHJvbWlzZS9BKyBpbnRlcmZhY2VcbiAqIGh0dHA6Ly9wcm9taXNlcy1hcGx1cy5naXRodWIuaW8vcHJvbWlzZXMtc3BlYy9cbiAqXG4gKiBEZWxlZ2F0ZSB0byBkZWZlcnJlZCBwcm9taXNlLCByZXR1cm4gcHJvbWlzZSBpbnN0YW5jZSBmb3IgYmF0Y2ggcmVzdWx0XG4gKlxuICogQG1ldGhvZCBNZXRhZGF0YX5Bc3luY1Jlc3VsdExvY2F0b3IjdGhlblxuICovXG5Bc3luY1Jlc3VsdExvY2F0b3IucHJvdG90eXBlLnRoZW4gPSBmdW5jdGlvbihvblJlc29sdmUsIG9uUmVqZWN0KSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgcmV0dXJuIHRoaXMuX3Jlc3VsdHMudGhlbihmdW5jdGlvbihyZXN1bHRzKSB7XG4gICAgdmFyIGNvbnZlcnRUeXBlID0gZnVuY3Rpb24ocmVzKSB7XG4gICAgICBpZiAocmVzLiQgJiYgcmVzLiRbXCJ4c2k6bmlsXCJdID09PSAndHJ1ZScpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgICByZXMuZG9uZSA9IHJlcy5kb25lID09PSAndHJ1ZSc7XG4gICAgICByZXR1cm4gcmVzO1xuICAgIH07XG4gICAgcmVzdWx0cyA9IF8uaXNBcnJheShyZXN1bHRzKSA/IF8ubWFwKHJlc3VsdHMsIGNvbnZlcnRUeXBlKSA6IGNvbnZlcnRUeXBlKHJlc3VsdHMpO1xuICAgIGlmIChzZWxmLl9pc0FycmF5ICYmICFfLmlzQXJyYXkocmVzdWx0cykpIHtcbiAgICAgIHJlc3VsdHMgPSBbIHJlc3VsdHMgXTtcbiAgICB9XG4gICAgcmV0dXJuIG9uUmVzb2x2ZShyZXN1bHRzKTtcbiAgfSwgb25SZWplY3QpO1xufTtcblxuLyoqXG4gKiBQcm9taXNlL0ErIGV4dGVuc2lvblxuICogQ2FsbCBcInRoZW5cIiB1c2luZyBnaXZlbiBub2RlLXN0eWxlIGNhbGxiYWNrIGZ1bmN0aW9uXG4gKlxuICogQG1ldGhvZCBNZXRhZGF0YX5Bc3luY1Jlc3VsdExvY2F0b3IjdGhlbkNhbGxcbiAqL1xuQXN5bmNSZXN1bHRMb2NhdG9yLnByb3RvdHlwZS50aGVuQ2FsbCA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHJldHVybiBfLmlzRnVuY3Rpb24oY2FsbGJhY2spID8gdGhpcy50aGVuKGZ1bmN0aW9uKHJlcykge1xuICAgIHByb2Nlc3MubmV4dFRpY2soZnVuY3Rpb24oKSB7XG4gICAgICBjYWxsYmFjayhudWxsLCByZXMpO1xuICAgIH0pO1xuICB9LCBmdW5jdGlvbihlcnIpIHtcbiAgICBwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uKCkge1xuICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICB9KTtcbiAgfSkgOiB0aGlzO1xufTtcblxuLyoqXG4gKiBDaGVjayB0aGUgc3RhdHVzIG9mIGFzeW5jIHJlcXVlc3RcbiAqXG4gKiBAbWV0aG9kIE1ldGFkYXRhfkFzeW5jUmVzdWx0TG9jYXRvciNjaGVja1xuICogQHBhcmFtIHtDYWxsYmFjay48TWV0YWRhdGF+QXN5bmNSZXN1bHR8QXJyYXkuPE1ldGFkYXRhfkFzeW5jUmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPE1ldGFkYXRhfkFzeW5jUmVzdWx0fEFycmF5LjxNZXRhZGF0YX5Bc3luY1Jlc3VsdD4+fVxuICovXG5Bc3luY1Jlc3VsdExvY2F0b3IucHJvdG90eXBlLmNoZWNrID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgbWV0YSA9IHRoaXMuX21ldGE7XG4gIHJldHVybiB0aGlzLnRoZW4oZnVuY3Rpb24ocmVzdWx0cykge1xuICAgIHZhciBpZHMgPSBfLmlzQXJyYXkocmVzdWx0cykgPyBfLm1hcChyZXN1bHRzLCBmdW5jdGlvbihyZXMpeyByZXR1cm4gcmVzLmlkOyB9KSA6IHJlc3VsdHMuaWQ7XG4gICAgc2VsZi5faWRzID0gaWRzO1xuICAgIHJldHVybiBtZXRhLmNoZWNrU3RhdHVzKGlkcyk7XG4gIH0pLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogUG9sbGluZyB1bnRpbCBhc3luYyBjYWxsIHN0YXR1cyBiZWNvbWVzIGNvbXBsZXRlIG9yIGVycm9yXG4gKlxuICogQG1ldGhvZCBNZXRhZGF0YX5Bc3luY1Jlc3VsdExvY2F0b3IjcG9sbFxuICogQHBhcmFtIHtOdW1iZXJ9IGludGVydmFsIC0gUG9sbGluZyBpbnRlcnZhbCBpbiBtaWxsaXNlY29uZHNcbiAqIEBwYXJhbSB7TnVtYmVyfSB0aW1lb3V0IC0gUG9sbGluZyB0aW1lb3V0IGluIG1pbGxpc2Vjb25kc1xuICovXG5Bc3luY1Jlc3VsdExvY2F0b3IucHJvdG90eXBlLnBvbGwgPSBmdW5jdGlvbihpbnRlcnZhbCwgdGltZW91dCkge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciBzdGFydFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgdmFyIHBvbGwgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbm93ID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG4gICAgaWYgKHN0YXJ0VGltZSArIHRpbWVvdXQgPCBub3cpIHtcbiAgICAgIHZhciBlcnJNc2cgPSBcIlBvbGxpbmcgdGltZSBvdXQuXCI7XG4gICAgICBpZiAoc2VsZi5faWRzKSB7XG4gICAgICAgIGVyck1zZyArPSBcIiBQcm9jZXNzIElkID0gXCIgKyBzZWxmLl9pZHM7XG4gICAgICB9XG4gICAgICBzZWxmLmVtaXQoJ2Vycm9yJywgbmV3IEVycm9yKGVyck1zZykpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzZWxmLmNoZWNrKCkudGhlbihmdW5jdGlvbihyZXN1bHRzKSB7XG4gICAgICB2YXIgZG9uZSA9IHRydWU7XG4gICAgICB2YXIgcmVzdWx0QXJyID0gXy5pc0FycmF5KHJlc3VsdHMpID8gcmVzdWx0cyA6IFsgcmVzdWx0cyBdO1xuICAgICAgZm9yICh2YXIgaT0wLCBsZW49cmVzdWx0QXJyLmxlbmd0aDsgaTxsZW47IGkrKykge1xuICAgICAgICB2YXIgcmVzdWx0ID0gcmVzdWx0QXJyW2ldO1xuICAgICAgICBpZiAocmVzdWx0ICYmICFyZXN1bHQuZG9uZSkge1xuICAgICAgICAgIHNlbGYuZW1pdCgncHJvZ3Jlc3MnLCByZXN1bHQpO1xuICAgICAgICAgIGRvbmUgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGRvbmUpIHtcbiAgICAgICAgc2VsZi5lbWl0KCdjb21wbGV0ZScsIHJlc3VsdHMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0VGltZW91dChwb2xsLCBpbnRlcnZhbCk7XG4gICAgICB9XG4gICAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICBzZWxmLmVtaXQoJ2Vycm9yJywgZXJyKTtcbiAgICB9KTtcbiAgfTtcbiAgc2V0VGltZW91dChwb2xsLCBpbnRlcnZhbCk7XG59O1xuXG4vKipcbiAqIENoZWNrIGFuZCB3YWl0IHVudGlsIHRoZSBhc3luYyByZXF1ZXN0cyBiZWNvbWUgaW4gY29tcGxldGVkIHN0YXR1c1xuICpcbiAqIEBtZXRob2QgTWV0YWRhdGF+QXN5bmNSZXN1bHRMb2NhdG9yI2NvbXBsZXRlXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxNZXRhZGF0YX5Bc3luY1Jlc3VsdHxBcnJheS48TWV0YWRhdGF+QXN5bmNSZXN1bHQ+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48TWV0YWRhdGF+QXN5bmNSZXN1bHR8QXJyYXkuPE1ldGFkYXRhfkFzeW5jUmVzdWx0Pj59XG4gKi9cbkFzeW5jUmVzdWx0TG9jYXRvci5wcm90b3R5cGUuY29tcGxldGUgPSBmdW5jdGlvbihjYWxsYmFjaykge1xuICB2YXIgZGVmZXJyZWQgPSBQcm9taXNlLmRlZmVyKCk7XG4gIHRoaXMub24oJ2NvbXBsZXRlJywgZnVuY3Rpb24ocmVzdWx0cykge1xuICAgIGRlZmVycmVkLnJlc29sdmUocmVzdWx0cyk7XG4gIH0pO1xuICB0aGlzLm9uKCdlcnJvcicsIGZ1bmN0aW9uKGVycikge1xuICAgIGRlZmVycmVkLnJlamVjdChlcnIpO1xuICB9KTtcbiAgdmFyIG1ldGEgPSB0aGlzLl9tZXRhO1xuICB0aGlzLnBvbGwobWV0YS5wb2xsSW50ZXJ2YWwsIG1ldGEucG9sbFRpbWVvdXQpO1xuICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qKlxuICogVGhlIGxvY2F0b3IgY2xhc3MgdG8gdHJhY2sgcmV0cmVpdmUoKSBNZXRhZGF0YSBBUEkgY2FsbCByZXN1bHRcbiAqXG4gKiBAcHJvdGVjdGVkXG4gKiBAY2xhc3MgTWV0YWRhdGF+UmV0cmlldmVSZXN1bHRMb2NhdG9yXG4gKiBAZXh0ZW5kcyBNZXRhZGF0YX5Bc3luY1Jlc3VsdExvY2F0b3JcbiAqIEBwYXJhbSB7TWV0YWRhdGF9IG1ldGEgLSBNZXRhZGF0YSBBUEkgb2JqZWN0XG4gKiBAcGFyYW0ge1Byb21pc2UuPE1ldGFkYXRhfkFzeW5jUmVzdWx0Pn0gcmVzdWx0IC0gUHJvbWlzZSBvYmplY3QgZm9yIGFzeW5jIHJlc3VsdCBvZiByZXRyaWV2ZSBjYWxsKClcbiAqL1xudmFyIFJldHJpZXZlUmVzdWx0TG9jYXRvciA9IGZ1bmN0aW9uKG1ldGEsIHJlc3VsdCkge1xuICBSZXRyaWV2ZVJlc3VsdExvY2F0b3Iuc3VwZXJfLmNhbGwodGhpcywgbWV0YSwgcmVzdWx0KTtcbn07XG5cbmluaGVyaXRzKFJldHJpZXZlUmVzdWx0TG9jYXRvciwgQXN5bmNSZXN1bHRMb2NhdG9yKTtcblxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBNZXRhZGF0YX5SZXRyaWV2ZVJlc3VsdFxuICogQHByb3Age0FycmF5LjxNZXRhZGF0YX5GaWxlUHJvcGVydGllcz59IGZpbGVQcm9wZXJ0aWVzIC0gQ29udGFpbnMgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHByb3BlcnRpZXMgb2YgZWFjaCBjb21wb25lbnQgaW4gdGhlIC56aXAgZmlsZSwgYW5kIHRoZSBtYW5pZmVzdCBmaWxlIHBhY2thZ2UueG1sXG4gKiBAcHJvcCB7U3RyaW5nfSBpZCAtIElEIG9mIHRoZSBjb21wb25lbnQgYmVpbmcgcmV0cmlldmVkXG4gKiBAcHJvcCB7QXJyYXkuPE9iamVjdD59IG1lc3NhZ2VzIC0gQ29udGFpbnMgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHN1Y2Nlc3Mgb3IgZmFpbHVyZSBvZiB0aGUgcmV0cmlldmUoKSBjYWxsXG4gKiBAcHJvcCB7U3RyaW5nfSB6aXBGaWxlIC0gVGhlIHppcCBmaWxlIHJldHVybmVkIGJ5IHRoZSByZXRyaWV2ZSByZXF1ZXN0LiBCYXNlIDY0LWVuY29kZWQgYmluYXJ5IGRhdGFcbiAqL1xuXG4vKipcbiAqIENoZWNrIGFuZCB3YWl0IHVudGlsIHRoZSBhc3luYyByZXF1ZXN0IGJlY29tZXMgaW4gY29tcGxldGVkIHN0YXR1cyxcbiAqIGFuZCByZXRyaWV2ZSB0aGUgcmVzdWx0IGRhdGEuXG4gKlxuICogQG1lbXRob2QgTWV0YWRhdGF+UmV0cmlldmVSZXN1bHRMb2NhdG9yI2NvbXBsZXRlXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxNZXRhZGF0YX5SZXRyaWV2ZVJlc3VsdD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPE1ldGFkYXRhflJldHJpZXZlUmVzdWx0Pn1cbiAqL1xuUmV0cmlldmVSZXN1bHRMb2NhdG9yLnByb3RvdHlwZS5jb21wbGV0ZSA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHZhciBtZXRhID0gdGhpcy5fbWV0YTtcbiAgcmV0dXJuIFJldHJpZXZlUmVzdWx0TG9jYXRvci5zdXBlcl8ucHJvdG90eXBlLmNvbXBsZXRlLmNhbGwodGhpcykudGhlbihmdW5jdGlvbihyZXN1bHQpIHtcbiAgICByZXR1cm4gbWV0YS5jaGVja1JldHJpZXZlU3RhdHVzKHJlc3VsdC5pZCk7XG4gIH0pLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogQ2hhbmdlIHRoZSByZXRyaWV2ZWQgcmVzdWx0IHRvIE5vZGUuanMgcmVhZGFibGUgc3RyZWFtXG4gKlxuICogQG1ldGhvZCBNZXRhZGF0YX5SZXRyaWV2ZVJlc3VsdExvY2F0b3Ijc3RyZWFtXG4gKiBAcmV0dXJucyB7c3RyZWFtLlJlYWRhYmxlfVxuICovXG5SZXRyaWV2ZVJlc3VsdExvY2F0b3IucHJvdG90eXBlLnN0cmVhbSA9IGZ1bmN0aW9uKCkge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciByZXN1bHRTdHJlYW0gPSBuZXcgc3RyZWFtLlJlYWRhYmxlKCk7XG4gIHZhciByZWFkaW5nID0gZmFsc2U7XG4gIHJlc3VsdFN0cmVhbS5fcmVhZCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmIChyZWFkaW5nKSB7IHJldHVybjsgfVxuICAgIHJlYWRpbmcgPSB0cnVlO1xuICAgIHNlbGYuY29tcGxldGUoZnVuY3Rpb24oZXJyLCByZXN1bHQpIHtcbiAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgcmVzdWx0U3RyZWFtLmVtaXQoJ2Vycm9yJywgZXJyKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc3VsdFN0cmVhbS5wdXNoKG5ldyBCdWZmZXIocmVzdWx0LnppcEZpbGUsICdiYXNlNjQnKSk7XG4gICAgICAgIHJlc3VsdFN0cmVhbS5wdXNoKG51bGwpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuICByZXR1cm4gcmVzdWx0U3RyZWFtO1xufTtcblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqIFRoZSBsb2NhdG9yIGNsYXNzIHRvIHRyYWNrIGRlcGxveSgpIE1ldGFkYXRhIEFQSSBjYWxsIHJlc3VsdFxuICpcbiAqIEBwcm90ZWN0ZWRcbiAqIEBjbGFzcyBNZXRhZGF0YX5EZXBsb3lSZXN1bHRMb2NhdG9yXG4gKiBAZXh0ZW5kcyBNZXRhZGF0YX5Bc3luY1Jlc3VsdExvY2F0b3JcbiAqIEBwYXJhbSB7TWV0YWRhdGF9IG1ldGEgLSBNZXRhZGF0YSBBUEkgb2JqZWN0XG4gKiBAcGFyYW0ge1Byb21pc2UuPE1ldGFkYXRhfkFzeW5jUmVzdWx0Pn0gcmVzdWx0IC0gUHJvbWlzZSBvYmplY3QgZm9yIGFzeW5jIHJlc3VsdCBvZiBkZXBsb3koKSBjYWxsXG4gKi9cbnZhciBEZXBsb3lSZXN1bHRMb2NhdG9yID0gZnVuY3Rpb24obWV0YSwgcmVzdWx0KSB7XG4gIERlcGxveVJlc3VsdExvY2F0b3Iuc3VwZXJfLmNhbGwodGhpcywgbWV0YSwgcmVzdWx0KTtcbn07XG5cbmluaGVyaXRzKERlcGxveVJlc3VsdExvY2F0b3IsIEFzeW5jUmVzdWx0TG9jYXRvcik7XG5cbi8qKlxuICogQHR5cGVkZWYge09iamVjdH0gTWV0YWRhdGF+RGVwbG95UmVzdWx0XG4gKiBAcHJvcCB7U3RyaW5nfSBpZCAtIElEIG9mIHRoZSBjb21wb25lbnQgYmVpbmcgZGVwbG95ZWRcbiAqIEBwcm9wIHtCb29sZWFufSBjaGVja09ubHkgLSBJbmRpY2F0ZXMgd2hldGhlciB0aGlzIGRlcGxveW1lbnQgaXMgYmVpbmcgdXNlZCB0byBjaGVjayB0aGUgdmFsaWRpdHkgb2YgdGhlIGRlcGxveWVkIGZpbGVzIHdpdGhvdXQgbWFraW5nIGFueSBjaGFuZ2VzIGluIHRoZSBvcmdhbml6YXRpb24gb3Igbm90XG4gKiBAcHJvcCB7U3RyaW5nfSBjb21wbGV0ZWREYXRlIC0gVGltZXN0YW1wIGZvciB3aGVuIHRoZSBkZXBsb3ltZW50IHByb2Nlc3MgZW5kZWRcbiAqIEBwcm9wIHtTdHJpbmd9IGNyZWF0ZWREYXRlIC0gVGltZXN0YW1wIGZvciB3aGVuIHRoZSBkZXBsb3koKSBjYWxsIHdhcyByZWNlaXZlZFxuICogQHByb3Age0FycmF5LjxPYmplY3Q+fSBbZGV0YWlsc10gLSBQcm92aWRlcyB0aGUgZGV0YWlscyBvZiBhIGRlcGxveW1lbnQgdGhhdCBpcyBpbi1wcm9ncmVzcyBvciBlbmRlZCwgaWYgaW5jbHVkZURldGFpbHMgaXMgc2V0IHRvIHRydWUgaW4gY2hlY2tEZXBsb3lTdGF0dXMoKSBjYWxsXG4gKiBAcHJvcCB7Qm9vbGVhbn0gZG9uZSAtIEluZGljYXRlcyB3aGV0aGVyIHRoZSBzZXJ2ZXIgZmluaXNoZWQgcHJvY2Vzc2luZyB0aGUgZGVwbG95KCkgY2FsbCBmb3IgdGhlIHNwZWNpZmllZCBpZFxuICogQHByb3Age1N0cmluZ30gW2Vycm9yTWVzc2FnZV0gLSBNZXNzYWdlIGNvcnJlc3BvbmRpbmcgdG8gdGhlIHZhbHVlcyBpbiB0aGUgZXJyb3JTdGF0dXNDb2RlIGZpZWxkXG4gKiBAcHJvcCB7U3RyaW5nfSBbZXJyb3JTdGF0dXNDb2RlXSAtIElmIGFuIGVycm9yIG9jY3VycmVkIGR1cmluZyB0aGUgZGVwbG95KCkgY2FsbCwgYSBzdGF0dXMgY29kZSBpcyByZXR1cm5lZCwgYW5kIHRoZSBtZXNzYWdlIGNvcnJlc3BvbmRpbmcgdG8gdGhlIHN0YXR1cyBjb2RlIGlzIHJldHVybmVkIGluIHRoZSBlcnJvck1lc3NhZ2VmaWVsZFxuICogQHByb3Age0Jvb2xlYW59IFtpZ25vcmVXYXJuaW5nc10gLSBTcGVjaWZpZXMgd2hldGhlciBhIGRlcGxveW1lbnQgc2hvdWxkIGNvbnRpbnVlIGV2ZW4gaWYgdGhlIGRlcGxveW1lbnQgZ2VuZXJhdGVzIHdhcm5pbmdzXG4gKiBAcHJvcCB7U3RyaW5nfSBsYXN0TW9kaWZpZWREYXRlIC0gVGltZXN0YW1wIG9mIHRoZSBsYXN0IHVwZGF0ZSBmb3IgdGhlIGRlcGxveW1lbnQgcHJvY2Vzc1xuICogQHByb3Age051bWJlcn0gbnVtYmVyQ29tcG9uZW50RXJyb3JzIC0gVGhlIG51bWJlciBvZiBjb21wb25lbnRzIHRoYXQgZ2VuZXJhdGVkIGVycm9ycyBkdXJpbmcgdGhpcyBkZXBsb3ltZW50XG4gKiBAcHJvcCB7TnVtYmVyfSBudW1iZXJDb21wb25lbnRzRGVwbG95ZWQgLSBUaGUgbnVtYmVyIG9mIGNvbXBvbmVudHMgZGVwbG95ZWQgaW4gdGhlIGRlcGxveW1lbnQgcHJvY2Vzc1xuICogQHByb3Age051bWJlcn0gbnVtYmVyQ29tcG9uZW50c1RvdGFsIC0gVGhlIHRvdGFsIG51bWJlciBvZiBjb21wb25lbnRzIGluIHRoZSBkZXBsb3ltZW50XG4gKiBAcHJvcCB7TnVtYmVyfSBudW1iZXJUZXN0RXJyb3JzIC0gVGhlIG51bWJlciBvZiBBcGV4IHRlc3RzIHRoYXQgaGF2ZSBnZW5lcmF0ZWQgZXJyb3JzIGR1cmluZyB0aGlzIGRlcGxveW1lbnRcbiAqIEBwcm9wIHtOdW1iZXJ9IG51bWJlclRlc3RzQ29tcGxldGVkIC0gVGhlIG51bWJlciBvZiBjb21wbGV0ZWRBcGV4IHRlc3RzIGZvciB0aGlzIGRlcGxveW1lbnRcbiAqIEBwcm9wIHtOdW1iZXJ9IG51bWJlclRlc3RzVG90YWwgLSBUaGUgdG90YWwgbnVtYmVyIG9mIEFwZXggdGVzdHMgZm9yIHRoaXMgZGVwbG95bWVudFxuICogQHByb3Age0Jvb2xlYW59IFtyb2xsYmFja09uRXJyb3JdIC0gSW5kaWNhdGVzIHdoZXRoZXIgYW55IGZhaWx1cmUgY2F1c2VzIGEgY29tcGxldGUgcm9sbGJhY2sgb3Igbm90LiBEZWZhdWx0IGlzIHRydWUuXG4gKiBAcHJvcCB7U3RyaW5nfSBzdGFydERhdGUgLSBUaW1lc3RhbXAgZm9yIHdoZW4gdGhlIGRlcGxveW1lbnQgcHJvY2VzcyBiZWdhblxuICogQHByb3Age1N0cmluZ30gc3RhdHVzIC0gSW5kaWNhdGVzIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBkZXBsb3ltZW50XG4gKiBAcHJvcCB7Qm9vbGVhbn0gc3VjY2VzcyAtIEluZGljYXRlcyB3aGV0aGVyIHRoZSBkZXBsb3ltZW50IHdhcyBzdWNjZXNzZnVsIG9yIG5vdFxuICovXG5cbi8qKlxuICogQ2hlY2sgYW5kIHdhaXQgdW50aWwgdGhlIGFzeW5jIHJlcXVlc3QgYmVjb21lcyBpbiBjb21wbGV0ZWQgc3RhdHVzLFxuICogYW5kIHJldHJpZXZlIHRoZSByZXN1bHQgZGF0YS5cbiAqXG4gKiBAbWV0aG9kIE1ldGFkYXRhfkRlcGxveVJlc3VsdExvY2F0b3IjY29tcGxldGVcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPE1ldGFkYXRhfkRlcGxveVJlc3VsdD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPE1ldGFkYXRhfkRlcGxveVJlc3VsdD59XG4gKi9cbkRlcGxveVJlc3VsdExvY2F0b3IucHJvdG90eXBlLmNvbXBsZXRlID0gZnVuY3Rpb24oaW5jbHVkZURldGFpbHMsIGNhbGxiYWNrKSB7XG4gIGlmIChfLmlzRnVuY3Rpb24oaW5jbHVkZURldGFpbHMpKSB7XG4gICAgY2FsbGJhY2sgPSBpbmNsdWRlRGV0YWlscztcbiAgICBpbmNsdWRlRGV0YWlscyA9IGZhbHNlO1xuICB9XG4gIHZhciBtZXRhID0gdGhpcy5fbWV0YTtcbiAgcmV0dXJuIERlcGxveVJlc3VsdExvY2F0b3Iuc3VwZXJfLnByb3RvdHlwZS5jb21wbGV0ZS5jYWxsKHRoaXMpLnRoZW4oZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgcmV0dXJuIG1ldGEuY2hlY2tEZXBsb3lTdGF0dXMocmVzdWx0LmlkLCBpbmNsdWRlRGV0YWlscyk7XG4gIH0pLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKlxuICogUmVnaXN0ZXIgaG9vayBpbiBjb25uZWN0aW9uIGluc3RhbnRpYXRpb24gZm9yIGR5bmFtaWNhbGx5IGFkZGluZyB0aGlzIEFQSSBtb2R1bGUgZmVhdHVyZXNcbiAqL1xuanNmb3JjZS5vbignY29ubmVjdGlvbjpuZXcnLCBmdW5jdGlvbihjb25uKSB7XG4gIGNvbm4ubWV0YWRhdGEgPSBuZXcgTWV0YWRhdGEoY29ubik7XG59KTtcbiIsIi8qKlxuICogQGZpbGUgU2FsZXNmb3JjZSBTT0FQIEFQSVxuICogQGF1dGhvciBTaGluaWNoaSBUb21pdGEgPHNoaW5pY2hpLnRvbWl0YUBnbWFpbC5jb20+XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgXyA9IHJlcXVpcmUoJ2xvZGFzaC9jb3JlJyk7XG52YXIganNmb3JjZSA9IHJlcXVpcmUoJy4uL2NvcmUnKTtcbnZhciBTT0FQID0gcmVxdWlyZSgnLi4vc29hcCcpO1xuXG4vKipcbiAqIEFQSSBjbGFzcyBmb3IgUGFydG5lciBTT0FQIGNhbGxcbiAqXG4gKiBAY2xhc3NcbiAqIEBwYXJhbSB7Q29ubmVjdGlvbn0gY29ubiAtIENvbm5lY3Rpb25cbiAqL1xudmFyIFNvYXBBcGkgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGNvbm4pIHtcbiAgdGhpcy5fY29ubiA9IGNvbm47XG59O1xuXG4vKipcbiAqIENhbGwgU09BUCBBcGkgKFBhcnRuZXIpIGVuZHBvaW50XG4gKiBAcHJpdmF0ZVxuICovXG5Tb2FwQXBpLnByb3RvdHlwZS5faW52b2tlID0gZnVuY3Rpb24obWV0aG9kLCBtZXNzYWdlLCBzY2hlbWEsIGNhbGxiYWNrKSB7XG4gIHZhciBzb2FwRW5kcG9pbnQgPSBuZXcgU09BUCh0aGlzLl9jb25uLCB7XG4gICAgeG1sbnM6IFwidXJuOnBhcnRuZXIuc29hcC5zZm9yY2UuY29tXCIsXG4gICAgZW5kcG9pbnRVcmw6IHRoaXMuX2Nvbm4uaW5zdGFuY2VVcmwgKyBcIi9zZXJ2aWNlcy9Tb2FwL3UvXCIgKyB0aGlzLl9jb25uLnZlcnNpb25cbiAgfSk7XG4gIHJldHVybiBzb2FwRW5kcG9pbnQuaW52b2tlKG1ldGhvZCwgbWVzc2FnZSwgeyByZXN1bHQ6IHNjaGVtYSB9KS50aGVuKGZ1bmN0aW9uKHJlcykge1xuICAgIHJldHVybiByZXMucmVzdWx0O1xuICB9KS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG5cbi8qICovXG52YXIgU2NoZW1hcyA9IHt9O1xuXG4vKipcbiAqIEB0eXBlZGVmIFNvYXBBcGl+TGVhZENvbnZlcnRcbiAqIEBwcm9wIHtTdHJpbmd9IGNvbnZlcnRlZFN0YXR1cyAtIFN0YXR1cyBvZiBjb252ZXJ0ZWQgbGVhZFxuICogQHByb3Age1N0cmluZ30gbGVhZElkIC0gTGVhZCByZWNvcmQgSWQgdG8gY29udmVydFxuICogQHByb3Age1N0cmluZ30gW2FjY291bnRJZF0gLSBBY2NvdW50IHJlY29yZCBJZCB0byBhc3NpZ24gdGhlIGNvbnZlcnRlZCByZWNvcmRcbiAqIEBwcm9wIHtTdHJpbmd9IFtjb250YWN0SWRdIC0gQ29udGFjdCByZWNvcmQgSWQgdG8gYXNzaWduIHRoZSBjb252ZXJ0ZWQgcmVjb3JkXG4gKiBAcHJvcCB7Qm9vbGVhbn0gW2RvTm90Q3JlYXRlT3Bwb3J0dW5pdHldIC0gVHJ1ZSBpZiB5b3UgZG9uJ3Qgd2FudCB0byBjcmVhdGUgYSBuZXcgb3Bwb3J0dW5pdHlcbiAqIEBwcm9wIHtTdHJpbmd9IFtvcHBvcnR1bml0eU5hbWVdIC0gTmFtZSBvZiBvcHBvcnR1bml0eSB0byBjcmVhdGVcbiAqIEBwcm9wIHtCb29sZWFufSBbb3ZlcndyaXRlTGVhZFNvdXJjZV0gLSBUcnVlIGlmIG92ZXJ3cml0aW5nIGxlYWQgc291cmNlXG4gKiBAcHJvcCB7U3RyaW5nfSBbb3duZXJJZF0gLSBPd25lciBJZFxuICogQHByb3Age0Jvb2xlYW59IFtzZW5kTm90aWZpY2F0aW9uRW1haWxdIC0gVHJ1ZSBpZiBzZW5kIG5vdGlmaWNhdGlvbiBlbWFpbFxuICovXG4vKipcbiAqIEB0eXBlZGVmIFNvYXBBcGl+TGVhZENvbnZlcnRSZXN1bHRcbiAqIEBwcm9wIHtTdHJpbmd9IGxlYWRJZCAtIExlYWQgcmVjb3JkIElkIHRvIGNvbnZlcnRcbiAqIEBwcm9wIHtTdHJpbmd9IFthY2NvdW50SWRdIC0gQWNjb3VudCByZWNvcmQgSWQgb2YgY29udmVydGVkIGxlYWRcbiAqIEBwcm9wIHtTdHJpbmd9IFtjb250YWN0SWRdIC0gQ29udGFjdCByZWNvcmQgSWQgb2YgY29udmVydGVkIGxlYWRcbiAqIEBwcm9wIHtTdHJpbmd9IFtvcHBvcnR1bml0eUlkXSAtIE9wcG9ydHVuaXR5IHJlY29yZCBJZCBjcmVhdGVkIGluIGNvbnZlcnNpb25cbiAqIEBwcm9wIHtCb29sZWFufSBzdWNjZXNzIC0gVHJ1ZSBpZiBzdWNjZXNzZnVsbHkgY29udmVydGVkXG4gKiBAcHJvcCB7QXJyYXkuPE9iamVjdD59IGVycm9ycyAtIEVycm9yXG4gKi9cbi8qKlxuICogQ29udmVydHMgYSBMZWFkIGludG8gYW4gQWNjb3VudCwgQ29udGFjdCwgb3IgKG9wdGlvbmFsbHkpIGFuIE9wcG9ydHVuaXR5LlxuICpcbiAqIEBwYXJhbSB7U29hcEFwaX5MZWFkQ29udmVydHxBcnJheS48U29hcEFwaX5MZWFkQ29udmVydD59IGxlYWRDb252ZXJ0c1xuICogQHBhcmFtIHtDYWxsYmFjay48U29hcEFwaX5MZWFkQ29udmVydFJlc3VsdHxBcnJheS48U29hcEFwaX5MZWFkQ29udmVydFJlc3VsdD4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxTb2FwQXBpfkxlYWRDb252ZXJ0UmVzdWx0fEFycmF5LjxTb2FwQXBpfkxlYWRDb252ZXJ0UmVzdWx0Pj59XG4gKi9cblNvYXBBcGkucHJvdG90eXBlLmNvbnZlcnRMZWFkID0gZnVuY3Rpb24obGVhZENvbnZlcnRzLCBjYWxsYmFjaykge1xuICB2YXIgc2NoZW1hID0gXy5pc0FycmF5KGxlYWRDb252ZXJ0cykgPyBbIFNjaGVtYXMuTGVhZENvbnZlcnRSZXN1bHQgXSA6IFNjaGVtYXMuTGVhZENvbnZlcnRSZXN1bHQ7XG4gIHJldHVybiB0aGlzLl9pbnZva2UoXCJjb252ZXJ0TGVhZFwiLCB7IGxlYWRDb252ZXJ0czogbGVhZENvbnZlcnRzIH0sIHNjaGVtYSwgY2FsbGJhY2spO1xufTtcblNjaGVtYXMuTGVhZENvbnZlcnRSZXN1bHQgPSB7XG4gIHN1Y2Nlc3M6ICdib29sZWFuJyxcbiAgZXJyb3JzOiBbXSxcbiAgbGVhZElkOiAnc3RyaW5nJyxcbiAgYWNjb3VudElkOiAnc3RyaW5nJyxcbiAgY29udGFjdElkOiAnc3RyaW5nJyxcbiAgb3Bwb3J0dW5pdHlJZDogJ3N0cmluZydcbn07XG5cbi8qKlxuICogQHR5cGVkZWYgU29hcEFwaX5NZXJnZVJlcXVlc3RcbiAqIEBwcm9wIHtPYmplY3R9IG1hc3RlclJlY29yZCAtIFRoZSBtZXJnZSBkZXN0aW5hdGlvbiByZWNvcmRcbiAqIEBwcm9wIHtBcnJheS48U3RyaW5nPn0gcmVjb3JkVG9NZXJnZUlkcyAtIElkcyBvZiByZWNvcmRzIHRvIG1lcmdlXG4gKi9cbi8qKlxuICogQHR5cGVkZWYgU29hcEFwaX5NZXJnZVJlc3VsdFxuICogQHByb3Age0Jvb2xlYW59IHN1Y2Nlc3MgLSBUcnVlIGlmIHN1Y2Nlc3NmdWxseSBtZXJnZWRcbiAqIEBwcm9wIHtBcnJheS48T2JqZWN0Pn0gZXJyb3JzIC0gRXJyb3JcbiAqIEBwcm9wIHtTdHJpbmd9IGlkIC0gSUQgb2YgdGhlIG1hc3RlciByZWNvcmRcbiAqIEBwcm9wIHtBcnJheS48U3RyaW5nPn0gbWVyZ2VkUmVjb3JkSWRzIC0gSUQgb2YgdGhlIHJlY29yZHMgdGhhdCB3ZXJlIG1lcmdlZCBpbnRvIHRoZSBtYXN0ZXIgcmVjb3JkXG4gKiBAcHJvcCB7QXJyYXkuPFN0cmluZz59IHVwZGF0ZWRSZWxhdGVkSWRzIC0gSUQgb2YgYWxsIHJlbGF0ZWQgcmVjb3JkcyB0aGF0IHdlcmUgbW92ZWQgKHJlLXBhcmVudGVkKSBhcyBhIHJlc3VsdCBvZiB0aGUgbWVyZ2VcbiAqL1xuXG4vKipcbiAqIE1lcmdlIHVwIHRvIHRocmVlIHJlY29yZHMgaW50byBvbmVcbiAqXG4gKiBAcGFyYW0ge1NvYXBBcGl+TWVyZ2VSZXF1ZXN0fEFycmF5LjxTb2FwQXBpfk1lcmdlUmVxdWVzdD59IG1lcmdlUmVxdWVzdHNcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFNvYXBBcGl+TWVyZ2VSZXN1bHR8QXJyYXkuPFNvYXBBcGl+TWVyZ2VSZXN1bHQ+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48U29hcEFwaX5NZXJnZVJlc3VsdHxBcnJheS48U29hcEFwaX5NZXJnZVJlc3VsdD4+fVxuICovXG5Tb2FwQXBpLnByb3RvdHlwZS5tZXJnZSA9IGZ1bmN0aW9uKG1lcmdlUmVxdWVzdHMsIGNhbGxiYWNrKSB7XG4gIHZhciBzY2hlbWEgPSBfLmlzQXJyYXkobWVyZ2VSZXF1ZXN0cykgPyBbIFNjaGVtYXMuTWVyZ2VSZXN1bHQgXSA6IFNjaGVtYXMuTWVyZ2VSZXN1bHQ7XG4gIHJldHVybiB0aGlzLl9pbnZva2UoXCJtZXJnZVwiLCB7IG1lcmdlUmVxdWVzdHM6IG1lcmdlUmVxdWVzdHMgfSwgc2NoZW1hLCBjYWxsYmFjayk7XG59O1xuU2NoZW1hcy5NZXJnZVJlc3VsdCA9IHtcbiAgc3VjY2VzczogJ2Jvb2xlYW4nLFxuICBlcnJvcnM6IFtdLFxuICBpZDogJ3N0cmluZycsXG4gIG1lcmdlZFJlY29yZElkczogWydzdHJpbmcnXSxcbiAgdXBkYXRlZFJlbGF0ZWRJZHM6IFsnc3RyaW5nJ11cbn07XG5cblxuLyoqXG4gKiBAdHlwZWRlZiBTb2FwQXBpfkVtcHR5UmVjeWNsZUJpblJlc3VsdFxuICogQHByb3Age1N0cmluZ30gaWQgLSBJRCBvZiBhbiBzT2JqZWN0IHRoYXQgeW91IGF0dGVtcHRlZCB0byBkZWxldGUgZnJvbSB0aGUgUmVjeWNsZSBCaW5cbiAqIEBwcm9wIHtCb29sZWFufSBzdWNjZXNzIC0gV2hldGhlciB0aGUgY2FsbCBzdWNjZWVkZWQgKHRydWUpIG9yIG5vdCAoZmFsc2UpIGZvciB0aGlzIHJlY29yZFxuICogQHByb3Age0FycmF5LjxPYmplY3Q+fSBlcnJvcnMgLSBFcnJvcnNcbiAqL1xuLyoqXG4gKiBEZWxldGUgcmVjb3JkcyBmcm9tIHRoZSByZWN5Y2xlIGJpbiBpbW1lZGlhdGVseVxuICpcbiAqIEBwYXJhbSB7QXJyYXkuPFN0cmluZz59IGlkcyAtIFJlY29yZCBpZHMgdG8gZW1wdHkgZnJvbSByZWN5Y2xlIGJpblxuICogQHBhcmFtIHtDYWxsYmFjay48QXJyYXkuPFNvYXBBcGl+RW1wdHlSZWN5Y2xlQmluUmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPEFycmF5LjxTb2FwQXBpfkVtcHR5UmVjeWNsZUJpblJlc3VsdD4+fVxuICovXG5Tb2FwQXBpLnByb3RvdHlwZS5lbXB0eVJlY3ljbGVCaW4gPSBmdW5jdGlvbihpZHMsIGNhbGxiYWNrKSB7XG4gIHJldHVybiB0aGlzLl9pbnZva2UoXCJlbXB0eVJlY3ljbGVCaW5cIiwgeyBpZHM6IGlkcyB9LCBbIFNjaGVtYXMuRW1wdHlSZWN5Y2xlQmluUmVzdWx0IF0sIGNhbGxiYWNrKTtcbn07XG5TY2hlbWFzLkVtcHR5UmVjeWNsZUJpblJlc3VsdCA9IHtcbiAgaWQ6ICdzdHJpbmcnLFxuICBzdWNjZXNzOiAnYm9vbGVhbicsXG4gIGVycm9yczogW11cbn07XG5cblxuLyoqXG4gKiBAdHlwZWRlZiBTb2FwQXBpfkRlc2NyaWJlVGFiU2V0UmVzdWx0XG4gKiBAcHJvcCB7U3RyaW5nfSBsYWJlbCAtIFRoZSBkaXNwbGF5IGxhYmVsIGZvciB0aGlzIHN0YW5kYXJkIG9yIGN1c3RvbSBhcHBcbiAqIEBwcm9wIHtTdHJpbmd9IGxvZ29VcmwgLSBBIGZ1bGx5IHF1YWxpZmllZCBVUkwgdG8gdGhlIGxvZ28gaW1hZ2UgYXNzb2NpYXRlZCB3aXRoIHRoZSBzdGFuZGFyZCBvciBjdXN0b20gYXBwXG4gKiBAcHJvcCB7U3RyaW5nfSBuYW1lc3BhY2UgLSBOYW1lc3BhY2Ugb2YgYXBwbGljYXRpb24gcGFja2FnZVxuICogQHByb3Age0Jvb2xlYW59IHNlbGVjdGVkIC0gSWYgdHJ1ZSwgdGhlbiB0aGlzIHN0YW5kYXJkIG9yIGN1c3RvbSBhcHAgaXMgdGhlIHVzZXLigJlzIGN1cnJlbnRseSBzZWxlY3RlZCBhcHBcbiAqIEBwcm9wIHtBcnJheS48U29hcEFwaX5EZXNjcmliZVRhYj59IHRhYnMgLSBBbiBhcnJheSBvZiB0YWJzIHRoYXQgYXJlIGRpc3BsYXllZCBmb3IgdGhlIHNwZWNpZmllZCBzdGFuZGFyZCBhcHAgb3IgY3VzdG9tIGFwcFxuICovXG4vKipcbiAqIEB0eXBlZGVmIFNvYXBBcGl+RGVzY3JpYmVUYWJcbiAqIEBwcm9wIHtBcnJheS48T2JqZWN0Pn0gY29sb3JzIC0gQXJyYXkgb2YgY29sb3IgaW5mb3JtYXRpb24gdXNlZCBmb3IgYSB0YWJcbiAqIEBwcm9wIHtCb29sZWFufSBjdXN0b20gLSB0cnVlIGlmIHRoaXMgaXMgYSBjdXN0b20gdGFiXG4gKiBAcHJvcCB7U3RyaW5nfSBpY29uVXJsIC0gVGhlIFVSTCBmb3IgdGhlIG1haW4gMzIgeCAzMiBwaXhlbCBpY29uIGZvciBhIHRhYlxuICogQHByb3Age0FycmF5LjxPYmplY3Q+fSBpY29ucyAtIEFycmF5IG9mIGljb24gaW5mb3JtYXRpb24gdXNlZCBmb3IgYSB0YWJcbiAqIEBwcm9wIHtTdHJpbmd9IGxhYmVsIC0gVGhlIGRpc3BsYXkgbGFiZWwgZm9yIHRoaXMgdGFiXG4gKiBAcHJvcCB7U3RyaW5nfSBtaW5pSWNvblVybCAtIFRoZSBVUkwgZm9yIHRoZSAxNiB4IDE2IHBpeGVsIGljb24gdGhhdCByZXByZXNlbnRzIGEgdGFiXG4gKiBAcHJvcCB7U3RyaW5nfSBuYW1lIC0gVGhlIEFQSSBuYW1lIG9mIHRoZSB0YWJcbiAqIEBwcm9wIHtTdHJpbmd9IHNvYmplY3ROYW1lIC0gVGhlIG5hbWUgb2YgdGhlIHNPYmplY3QgdGhhdCBpcyBwcmltYXJpbHkgZGlzcGxheWVkIG9uIHRoaXMgdGFiXG4gKiBAcHJvcCB7U3RyaW5nfSB1cmwgLSBBIGZ1bGx5IHF1YWxpZmllZCBVUkwgZm9yIHZpZXdpbmcgdGhpcyB0YWJcbiAqL1xuLyoqXG4gKiBSZXR1cm5zIGluZm9ybWF0aW9uIGFib3V0IHRoZSBzdGFuZGFyZCBhbmQgY3VzdG9tIGFwcHMgYXZhaWxhYmxlIHRvIHRoZSBsb2dnZWQtaW4gdXNlclxuICpcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPEFycmF5LjxTb2FwQXBpfkRlc2NyaWJlVGFiU2V0UmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPEFycmF5LjxTb2FwQXBpfkRlc2NyaWJlVGFiU2V0UmVzdWx0Pj59XG4gKi9cblNvYXBBcGkucHJvdG90eXBlLmRlc2NyaWJlVGFicyA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHJldHVybiB0aGlzLl9pbnZva2UoXCJkZXNjcmliZVRhYnNcIiwge30sIFsgU2NoZW1hcy5EZXNjcmliZVRhYlNldFJlc3VsdCBdLCBjYWxsYmFjayk7XG59O1xuU2NoZW1hcy5EZXNjcmliZVRhYlNldFJlc3VsdCA9IHtcbiAgbGFiZWw6ICdzdHJpbmcnLFxuICBsb2dvVXJsOiAnc3RyaW5nJyxcbiAgbmFtZXNwYWNlOiAnc3RyaW5nJyxcbiAgc2VsZWN0ZWQ6ICdib29sZWFuJyxcbiAgdGFiczogW3tcbiAgICBjb2xvcnM6IFt7XG4gICAgICB0aGVtZTogJ3N0cmluZycsXG4gICAgICBjb2xvcjogJ3N0cmluZycsXG4gICAgICBjb250ZXh0OiAnc3RyaW5nJ1xuICAgIH1dLFxuICAgIGljb25Vcmw6ICdzdHJpbmcnLFxuICAgIGljb25zOiBbe1xuICAgICAgdGhlbWU6ICdzdHJpbmcnLFxuICAgICAgaGVpZ2h0OiAnbnVtYmVyJyxcbiAgICAgIHdpZHRoOiAnbnVtYmVyJyxcbiAgICAgIHVybDogJ3N0cmluZycsXG4gICAgICBjb250ZW50VHlwZTogJ3N0cmluZydcbiAgICB9XSxcbiAgICBsYWJlbDogJ3N0cmluZycsXG4gICAgY3VzdG9tOiAnYm9vbGVhbicsXG4gICAgbWluaUljb25Vcmw6ICdzdHJpbmcnLFxuICAgIG5hbWU6ICdzdHJpbmcnLFxuICAgIHNvYmplY3ROYW1lOiAnc3RyaW5nJyxcbiAgICB1cmw6ICdzdHJpbmcnXG4gIH1dXG59O1xuXG4vKipcbiAqIFJldHJpZXZlcyB0aGUgY3VycmVudCBzeXN0ZW0gdGltZXN0YW1wIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSAoVVRDKSB0aW1lIHpvbmUpIGZyb20gdGhlIEFQSVxuICpcbiAqIEB0eXBlZGVmIFNvYXBBcGl+U2VydmVyVGltZXN0YW1wUmVzdWx0XG4gKiBAcHJvcCB7U3RyaW5nfSB0aW1lc3RhbXAgLSBUaW1lc3RhbXBcbiAqL1xuLyoqXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxTb2FwQXBpflNlcnZlclRpbWVzdGFtcFJlc3VsdD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPFNvYXBBcGl+U2VydmVyVGltZXN0YW1wUmVzdWx0Pn1cbiAqL1xuU29hcEFwaS5wcm90b3R5cGUuZ2V0U2VydmVyVGltZXN0YW1wID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgcmV0dXJuIHRoaXMuX2ludm9rZShcImdldFNlcnZlclRpbWVzdGFtcFwiLCB7fSwgU2NoZW1hcy5HZXRTZXJ2ZXJUaW1lc3RhbXBSZXN1bHQsIGNhbGxiYWNrKTtcbn07XG5TY2hlbWFzLkdldFNlcnZlclRpbWVzdGFtcFJlc3VsdCA9IHtcbiAgdGltZXN0YW1wOiAnc3RyaW5nJ1xufTtcblxuLyoqXG4gKiBAdHlwZWRlZiBTb2FwQXBpflVzZXJJbmZvUmVzdWx0XG4gKiBAcHJvcCB7Qm9vbGVhbn0gYWNjZXNzaWJpbGl0eU1vZGVcbiAqIEBwcm9wIHtTdHJpbmd9IGN1cnJlbmN5U3ltYm9sXG4gKiBAcHJvcCB7TnVtYmVyfSBvcmdBdHRhY2htZW50RmlsZVNpemVMaW1pdFxuICogQHByb3Age1N0cmluZ30gb3JnRGVmYXVsdEN1cnJlbmN5SXNvQ29kZVxuICogQHByb3Age1N0cmluZ30gb3JnRGlzYWxsb3dIdG1sQXR0YWNobWVudHNcbiAqIEBwcm9wIHtCb29sZWFufSBvcmdIYXNQZXJzb25BY2NvdW50c1xuICogQHByb3Age1N0cmluZ30gb3JnYW5pemF0aW9uSWRcbiAqIEBwcm9wIHtCb29sZWFufSBvcmdhbml6YXRpb25NdWx0aUN1cnJlbmN5XG4gKiBAcHJvcCB7U3RyaW5nfSBvcmdhbml6YXRpb25OYW1lXG4gKiBAcHJvcCB7U3RyaW5nfSBwcm9maWxlSWRcbiAqIEBwcm9wIHtTdHJpbmd9IHJvbGVJZFxuICogQHByb3Age051bWJlcn0gc2Vzc2lvblNlY29uZHNWYWxpZFxuICogQHByb3Age1N0cmluZ30gdXNlckRlZmF1bHRDdXJyZW5jeUlzb0NvZGVcbiAqIEBwcm9wIHtTdHJpbmd9IHVzZXJFbWFpbFxuICogQHByb3Age1N0cmluZ30gdXNlckZ1bGxOYW1lXG4gKiBAcHJvcCB7U3RyaW5nfSB1c2VySWRcbiAqIEBwcm9wIHtTdHJpbmd9IHVzZXJMYW5ndWFnZVxuICogQHByb3Age1N0cmluZ30gdXNlckxvY2FsZVxuICogQHByb3Age1N0cmluZ30gdXNlck5hbWVcbiAqIEBwcm9wIHtTdHJpbmd9IHVzZXJUaW1lWm9uZVxuICogQHByb3Age1N0cmluZ30gdXNlclR5cGVcbiAqIEBwcm9wIHtTdHJpbmd9IHVzZXJVaVNraW5cbiAqL1xuLyoqXG4gKiBSZXRyaWV2ZXMgcGVyc29uYWwgaW5mb3JtYXRpb24gZm9yIHRoZSB1c2VyIGFzc29jaWF0ZWQgd2l0aCB0aGUgY3VycmVudCBzZXNzaW9uXG4gKlxuICogQHBhcmFtIHtDYWxsYmFjay48U29hcEFwaX5Vc2VySW5mb1Jlc3VsdD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPFNvYXBBcGl+VXNlckluZm9SZXN1bHQ+fVxuICovXG5Tb2FwQXBpLnByb3RvdHlwZS5nZXRVc2VySW5mbyA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHJldHVybiB0aGlzLl9pbnZva2UoXCJnZXRVc2VySW5mb1wiLCB7fSwgU2NoZW1hcy5HZXRVc2VySW5mb1Jlc3VsdCwgY2FsbGJhY2spO1xufTtcblNjaGVtYXMuR2V0VXNlckluZm9SZXN1bHQgPSB7XG4gIGFjY2Vzc2liaWxpdHlNb2RlOiAnYm9vbGVhbicsXG4gIGN1cnJlbmN5U3ltYm9sOiAnc3RyaW5nJyxcbiAgb3JnQXR0YWNobWVudEZpbGVTaXplTGltaXQ6ICdudW1iZXInLFxuICBvcmdEZWZhdWx0Q3VycmVuY3lJc29Db2RlOiAnc3RyaW5nJyxcbiAgb3JnRGlzYWxsb3dIdG1sQXR0YWNobWVudHM6ICdib29sZWFuJyxcbiAgb3JnSGFzUGVyc29uQWNjb3VudHM6ICdib29sZWFuJyxcbiAgb3JnYW5pemF0aW9uSWQ6ICdzdHJpbmcnLFxuICBvcmdhbml6YXRpb25NdWx0aUN1cnJlbmN5OiAnYm9vbGVhbicsXG4gIG9yZ2FuaXphdGlvbk5hbWU6ICdzdHJpbmcnLFxuICBwcm9maWxlSWQ6ICdzdHJpbmcnLFxuICByb2xlSWQ6ICdzdHJpbmcnLFxuICBzZXNzaW9uU2Vjb25kc1ZhbGlkOiAnbnVtYmVyJyxcbiAgdXNlckRlZmF1bHRDdXJyZW5jeUlzb0NvZGU6ICdzdHJpbmcnLFxuICB1c2VyRW1haWw6ICdzdHJpbmcnLFxuICB1c2VyRnVsbE5hbWU6ICdzdHJpbmcnLFxuICB1c2VySWQ6ICdzdHJpbmcnLFxuICB1c2VyTGFuZ3VhZ2U6ICdzdHJpbmcnLFxuICB1c2VyTG9jYWxlOiAnc3RyaW5nJyxcbiAgdXNlck5hbWU6ICdzdHJpbmcnLFxuICB1c2VyVGltZVpvbmU6ICdzdHJpbmcnLFxuICB1c2VyVHlwZTogJ3N0cmluZycsXG4gIHVzZXJVaVNraW46ICdzdHJpbmcnXG59O1xuXG4vKipcbiAqIFNldHMgdGhlIHNwZWNpZmllZCB1c2Vy4oCZcyBwYXNzd29yZCB0byB0aGUgc3BlY2lmaWVkIHZhbHVlXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHVzZXJJZCAtIFVzZXIgSWQgdG8gc2V0IHBhc3N3b3JkXG4gKiBAcGFyYW0ge1N0cmluZ30gcGFzc3dvcmQgLSBOZXcgcGFzc3dvcmRcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFN0cmluZz59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPFN0cmluZz59XG4gKi9cblNvYXBBcGkucHJvdG90eXBlLnNldFBhc3N3b3JkID0gZnVuY3Rpb24odXNlcklkLCBwYXNzd29yZCwgY2FsbGJhY2spIHtcbiAgcmV0dXJuIHRoaXMuX2ludm9rZShcInNldFBhc3N3b3JkXCIsIHsgdXNlcklkOiB1c2VySWQsIHBhc3N3b3JkOiBwYXNzd29yZCB9LCBjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIEB0eXBlZGVmIFNvYXBBcGl+UmVzZXRQYXNzd29yZFJlc3VsdFxuICogQHByb3Age1N0cmluZ30gcGFzc3dvcmRcbiAqL1xuLyoqXG4gKiBSZXNldHMgdGhlIHNwZWNpZmllZCB1c2Vy4oCZcyBwYXNzd29yZFxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB1c2VySWQgLSBVc2VyIElkIHRvIHNldCBwYXNzd29yZFxuICogQHBhcmFtIHtTdHJpbmd9IHBhc3N3b3JkIC0gTmV3IHBhc3N3b3JkXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxTb2FwQXBpflJlc2V0UGFzc3dvcmRSZXN1bHQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxTb2FwQXBpflJlc2V0UGFzc3dvcmRSZXN1bHQ+fVxuICovXG5Tb2FwQXBpLnByb3RvdHlwZS5yZXNldFBhc3N3b3JkID0gZnVuY3Rpb24odXNlcklkLCBjYWxsYmFjaykge1xuICByZXR1cm4gdGhpcy5faW52b2tlKFwicmVzZXRQYXNzd29yZFwiLCB7IHVzZXJJZDogdXNlcklkIH0sIGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogQWRkcyBvbmUgb3IgbW9yZSBuZXcgcmVjb3JkcyB0byB5b3VyIG9yZ2FuaXphdGlvbuKAmXMgZGF0YVxuICpcbiAqIEBwYXJhbSB7QXJyYXkuPE9iamVjdD59IHNPYmplY3RzIC0gUmVjb3JkcyB0byBpbnNlcnRcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFNvYXBBcGl+U2F2ZVJlc3VsdD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPFNvYXBBcGl+U2F2ZVJlc3VsdD59XG4gKi9cblNvYXBBcGkucHJvdG90eXBlLmNyZWF0ZSA9IGZ1bmN0aW9uKHNPYmplY3RzLCBjYWxsYmFjaykge1xuICB2YXIgc2NoZW1hID0gXy5pc0FycmF5KHNPYmplY3RzKSA/IFsgU2NoZW1hcy5TYXZlUmVzdWx0IF0gOiBTY2hlbWFzLlNhdmVSZXN1bHQ7XG4gIHZhciBhcmdzID0ge1xuICAgICdAeG1sbnMnIDogJ3VybjpwYXJ0bmVyLnNvYXAuc2ZvcmNlLmNvbScsXG4gICAgJ0B4bWxuczpuczEnIDogJ3NvYmplY3QucGFydG5lci5zb2FwLnNmb3JjZS5jb20nLFxuICAgICduczE6c09iamVjdHMnIDogc09iamVjdHNcbiAgfTtcbiAgcmV0dXJuIHRoaXMuX2ludm9rZShcImNyZWF0ZVwiLCBhcmdzLCBzY2hlbWEsIGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogVXBkYXRlcyBvbmUgb3IgbW9yZSBleGlzdGluZyByZWNvcmRzIGluIHlvdXIgb3JnYW5pemF0aW9u4oCZcyBkYXRhLlxuICpcbiAqIEBwYXJhbSB7QXJyYXkuPE9iamVjdD59IHNPYmplY3RzIC0gUmVjb3JkcyB0byB1cGRhdGVcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFNvYXBBcGl+U2F2ZVJlc3VsdD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPFNvYXBBcGl+U2F2ZVJlc3VsdD59XG4gKi9cblNvYXBBcGkucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uKHNPYmplY3RzLCBjYWxsYmFjaykge1xuICB2YXIgc2NoZW1hID0gXy5pc0FycmF5KHNPYmplY3RzKSA/IFsgU2NoZW1hcy5TYXZlUmVzdWx0IF0gOiBTY2hlbWFzLlNhdmVSZXN1bHQ7XG4gIHZhciBhcmdzID0ge1xuICAgICdAeG1sbnMnIDogJ3VybjpwYXJ0bmVyLnNvYXAuc2ZvcmNlLmNvbScsXG4gICAgJ0B4bWxuczpuczEnIDogJ3NvYmplY3QucGFydG5lci5zb2FwLnNmb3JjZS5jb20nLFxuICAgICduczE6c09iamVjdHMnIDogc09iamVjdHNcbiAgfTtcbiAgcmV0dXJuIHRoaXMuX2ludm9rZShcInVwZGF0ZVwiLCBhcmdzLCBzY2hlbWEsIGNhbGxiYWNrKTtcbn07XG5cblNjaGVtYXMuU2F2ZVJlc3VsdCA9IHtcbiAgc3VjY2VzczogJ2Jvb2xlYW4nLFxuICBlcnJvcnM6IFtdLFxuICBpZDogJ3N0cmluZydcbn07XG5cbi8qKlxuICogQ3JlYXRlcyBuZXcgcmVjb3JkcyBhbmQgdXBkYXRlcyBleGlzdGluZyByZWNvcmRzIGluIHlvdXIgb3JnYW5pemF0aW9u4oCZcyBkYXRhLlxuICpcbiAqIEBwYXJhbSB7QXJyYXkuPE9iamVjdD59IHNPYmplY3RzIC0gUmVjb3JkcyB0byB1cHNlcnRcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFNvYXBBcGl+VXBzZXJ0UmVzdWx0Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48U29hcEFwaX5VcHNlcnRSZXN1bHQ+fVxuICovXG5Tb2FwQXBpLnByb3RvdHlwZS51cHNlcnQgPSBmdW5jdGlvbihleHRlcm5hbElkRmllbGROYW1lLCBzT2JqZWN0cywgY2FsbGJhY2spIHtcbiAgdmFyIHNjaGVtYSA9IF8uaXNBcnJheShzT2JqZWN0cykgPyBbIFNjaGVtYXMuVXBzZXJ0UmVzdWx0IF0gOiBTY2hlbWFzLlVwc2VydFJlc3VsdDtcbiAgdmFyIGFyZ3MgPSB7XG4gICAgJ0B4bWxucycgOiAndXJuOnBhcnRuZXIuc29hcC5zZm9yY2UuY29tJyxcbiAgICAnQHhtbG5zOm5zMScgOiAnc29iamVjdC5wYXJ0bmVyLnNvYXAuc2ZvcmNlLmNvbScsXG4gICAgJ25zMTpleHRlcm5hbElERmllbGROYW1lJyA6IGV4dGVybmFsSWRGaWVsZE5hbWUsXG4gICAgJ25zMTpzT2JqZWN0cycgOiBzT2JqZWN0c1xuICB9O1xuICByZXR1cm4gdGhpcy5faW52b2tlKFwidXBzZXJ0XCIsIGFyZ3MsIHNjaGVtYSwgY2FsbGJhY2spO1xufTtcblxuU2NoZW1hcy5VcHNlcnRSZXN1bHQgPSB7XG4gIGNyZWF0ZWQ6ICdib29sZWFuJyxcbiAgc3VjY2VzczogJ2Jvb2xlYW4nLFxuICBlcnJvcnM6IFtdLFxuICBpZDogJ3N0cmluZydcbn07XG5cbi8qKlxuICogRGVsZXRlcyBvbmUgb3IgbW9yZSByZWNvcmRzIGZyb20geW91ciBvcmdhbml6YXRpb27igJlzIGRhdGFcbiAqXG4gKiBAcGFyYW0ge0FycmF5LjxPYmplY3Q+fSBpZHMgLSBJZCBvZiByZWNvcmRzIHRvIGRlbGV0ZVxuICogQHBhcmFtIHtDYWxsYmFjay48U29hcEFwaX5EZWxldGVSZXN1bHQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxTb2FwQXBpfkRlbGV0ZVJlc3VsdD59XG4gKi9cblNvYXBBcGkucHJvdG90eXBlLmRlbGV0ZSA9IGZ1bmN0aW9uKGlkcywgY2FsbGJhY2spIHtcbiAgdmFyIHNjaGVtYSA9IF8uaXNBcnJheShpZHMpID8gWyBTY2hlbWFzLkRlbGV0ZVJlc3VsdCBdIDogU2NoZW1hcy5EZWxldGVSZXN1bHQ7XG4gIHZhciBhcmdzID0ge1xuICAgICdAeG1sbnMnIDogJ3VybjpwYXJ0bmVyLnNvYXAuc2ZvcmNlLmNvbScsXG4gICAgJ0B4bWxuczpuczEnIDogJ3NvYmplY3QucGFydG5lci5zb2FwLnNmb3JjZS5jb20nLFxuICAgICduczE6aWRzJyA6IGlkc1xuICB9O1xuICByZXR1cm4gdGhpcy5faW52b2tlKFwiZGVsZXRlXCIsIGFyZ3MsIHNjaGVtYSwgY2FsbGJhY2spO1xufTtcblxuU2NoZW1hcy5EZWxldGVSZXN1bHQgPSB7XG4gIHN1Y2Nlc3M6ICdib29sZWFuJyxcbiAgZXJyb3JzOiBbXSxcbiAgaWQ6ICdzdHJpbmcnXG59O1xuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLypcbiAqIFJlZ2lzdGVyIGhvb2sgaW4gY29ubmVjdGlvbiBpbnN0YW50aWF0aW9uIGZvciBkeW5hbWljYWxseSBhZGRpbmcgdGhpcyBBUEkgbW9kdWxlIGZlYXR1cmVzXG4gKi9cbmpzZm9yY2Uub24oJ2Nvbm5lY3Rpb246bmV3JywgZnVuY3Rpb24oY29ubikge1xuICBjb25uLnNvYXAgPSBuZXcgU29hcEFwaShjb25uKTtcbn0pO1xuXG5cbm1vZHVsZS5leHBvcnRzID0gU29hcEFwaTtcbiIsIi8qKlxuICogRmF5ZSBDbGllbnQgZXh0ZW5zaW9uczogaHR0cHM6Ly9mYXllLmpjb2dsYW4uY29tL2Jyb3dzZXIvZXh0ZW5zaW9ucy5odG1sXG4gKlxuICogRm9yIHVzZSB3aXRoIFN0cmVhbWluZy5wcm90b3R5cGUuY3JlYXRlQ2xpZW50KClcbioqL1xudmFyIFN0cmVhbWluZ0V4dGVuc2lvbiA9IHt9O1xuXG4vKipcbiAqIENvbnN0cnVjdG9yIGZvciBhbiBhdXRoIGZhaWx1cmUgZGV0ZWN0b3IgZXh0ZW5zaW9uXG4gKlxuICogQmFzZWQgb24gbmV3IGZlYXR1cmUgcmVsZWFzZWQgd2l0aCBTYWxlc2ZvcmNlIFNwcmluZyAnMTg6XG4gKiBodHRwczovL3JlbGVhc2Vub3Rlcy5kb2NzLnNhbGVzZm9yY2UuY29tL2VuLXVzL3NwcmluZzE4L3JlbGVhc2Utbm90ZXMvcm5fbWVzc2FnaW5nX2NvbWV0ZF9hdXRoX3ZhbGlkYXRpb24uaHRtP2VkaXRpb249JmltcGFjdD1cbiAqXG4gKiBFeGFtcGxlIHRyaWdnZXJpbmcgZXJyb3IgbWVzc2FnZTpcbiAqXG4gKiBgYGBcbiAqIHtcbiAqICAgXCJleHRcIjp7XG4gKiAgICAgXCJzZmRjXCI6e1wiZmFpbHVyZVJlYXNvblwiOlwiNDAxOjpBdXRoZW50aWNhdGlvbiBpbnZhbGlkXCJ9LFxuICogICAgIFwicmVwbGF5XCI6dHJ1ZX0sXG4gKiAgIFwiYWR2aWNlXCI6e1wicmVjb25uZWN0XCI6XCJub25lXCJ9LFxuICogICBcImNoYW5uZWxcIjpcIi9tZXRhL2hhbmRzaGFrZVwiLFxuICogICBcImVycm9yXCI6XCI0MDM6OkhhbmRzaGFrZSBkZW5pZWRcIixcbiAqICAgXCJzdWNjZXNzZnVsXCI6ZmFsc2VcbiAqIH1cbiAqIGBgYFxuICpcbiAqIEV4YW1wbGUgdXNhZ2U6XG4gKlxuICogYGBgamF2YXNjcmlwdFxuICogY29uc3QgY29ubiA9IG5ldyBqc2ZvcmNlLkNvbm5lY3Rpb24oeyDigKYgfSk7XG4gKiBcbiAqIGNvbnN0IGNoYW5uZWwgPSBcIi9ldmVudC9NeV9FdmVudF9fZVwiO1xuICogXG4gKiAvLyBFeGl0IHRoZSBOb2RlIHByb2Nlc3Mgd2hlbiBhdXRoIGZhaWxzXG4gKiBjb25zdCBleGl0Q2FsbGJhY2sgPSAoKSA9PiBwcm9jZXNzLmV4aXQoMSk7XG4gKiBjb25zdCBhdXRoRmFpbHVyZUV4dCA9IG5ldyBqc2ZvcmNlLlN0cmVhbWluZ0V4dGVuc2lvbi5BdXRoRmFpbHVyZShleGl0Q2FsbGJhY2spO1xuICogXG4gKiBjb25zdCBmYXllQ2xpZW50ID0gY29ubi5zdHJlYW1pbmcuY3JlYXRlQ2xpZW50KFsgYXV0aEZhaWx1cmVFeHQgXSk7XG4gKiBcbiAqIGNvbnN0IHN1YnNjcmlwdGlvbiA9IGZheWVDbGllbnQuc3Vic2NyaWJlKGNoYW5uZWwsIGRhdGEgPT4ge1xuICogICBjb25zb2xlLmxvZygndG9waWMgcmVjZWl2ZWQgZGF0YScsIGRhdGEpO1xuICogfSk7XG4gKiBcbiAqIHN1YnNjcmlwdGlvbi5jYW5jZWwoKTtcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZhaWx1cmVDYWxsYmFjayAtIEludm9rZWQgd2hlbiBhdXRoZW50aWNhdGlvbiBiZWNvbWVzIGludmFsaWRcbiAqL1xuU3RyZWFtaW5nRXh0ZW5zaW9uLkF1dGhGYWlsdXJlID0gZnVuY3Rpb24oZmFpbHVyZUNhbGxiYWNrKSB7XG4gIHRoaXMuaW5jb21pbmcgPSBmdW5jdGlvbihtZXNzYWdlLCBjYWxsYmFjaykge1xuICAgIGlmIChcbiAgICAgIChtZXNzYWdlLmNoYW5uZWwgPT09ICcvbWV0YS9jb25uZWN0JyB8fFxuICAgICAgICBtZXNzYWdlLmNoYW5uZWwgPT09ICcvbWV0YS9oYW5kc2hha2UnKVxuICAgICAgJiYgbWVzc2FnZS5hZHZpY2VcbiAgICAgICYmIG1lc3NhZ2UuYWR2aWNlLnJlY29ubmVjdCA9PSAnbm9uZSdcbiAgICApIHtcbiAgICAgIGZhaWx1cmVDYWxsYmFjayhtZXNzYWdlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbGJhY2sobWVzc2FnZSk7XG4gICAgfVxuICB9XG59O1xuXG4vKipcbiAqIENvbnN0cnVjdG9yIGZvciBhIGR1cmFibGUgc3RyZWFtaW5nIHJlcGxheSBleHRlbnNpb25cbiAqXG4gKiBNb2RpZmllZCBmcm9tIG9yaWdpbmFsIFNhbGVzZm9yY2UgZGVtbyBzb3VyY2UgY29kZTpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9kZXZlbG9wZXJmb3JjZS9TYWxlc2ZvcmNlRHVyYWJsZVN0cmVhbWluZ0RlbW8vYmxvYi8zZDRhNTZlYWM5NTZmNzQ0YWQ2YzIyZTZhODE0MWI2ZmViNTdhYmI5L3N0YXRpY3Jlc291cmNlcy9jb21ldGRSZXBsYXlFeHRlbnNpb24ucmVzb3VyY2VcbiAqIFxuICogRXhhbXBsZSB1c2FnZTpcbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBjb25zdCBjb25uID0gbmV3IGpzZm9yY2UuQ29ubmVjdGlvbih7IOKApiB9KTtcbiAqIFxuICogY29uc3QgY2hhbm5lbCA9IFwiL2V2ZW50L015X0V2ZW50X19lXCI7XG4gKiBjb25zdCByZXBsYXlJZCA9IC0yOyAvLyAtMiBpcyBhbGwgcmV0YWluZWQgZXZlbnRzXG4gKiBcbiAqIGNvbnN0IHJlcGxheUV4dCA9IG5ldyBqc2ZvcmNlLlN0cmVhbWluZ0V4dGVuc2lvbi5SZXBsYXkoY2hhbm5lbCwgcmVwbGF5SWQpO1xuICogXG4gKiBjb25zdCBmYXllQ2xpZW50ID0gY29ubi5zdHJlYW1pbmcuY3JlYXRlQ2xpZW50KFsgcmVwbGF5RXh0IF0pO1xuICogXG4gKiBjb25zdCBzdWJzY3JpcHRpb24gPSBmYXllQ2xpZW50LnN1YnNjcmliZShjaGFubmVsLCBkYXRhID0+IHtcbiAqICAgY29uc29sZS5sb2coJ3RvcGljIHJlY2VpdmVkIGRhdGEnLCBkYXRhKTtcbiAqIH0pO1xuICogXG4gKiBzdWJzY3JpcHRpb24uY2FuY2VsKCk7XG4gKiBgYGBcbiAqL1xuU3RyZWFtaW5nRXh0ZW5zaW9uLlJlcGxheSA9IGZ1bmN0aW9uKGNoYW5uZWwsIHJlcGxheUlkKSB7XG4gIHZhciBSRVBMQVlfRlJPTV9LRVkgPSBcInJlcGxheVwiO1xuICBcbiAgdmFyIF9leHRlbnNpb25FbmFibGVkID0gcmVwbGF5SWQgIT0gbnVsbCA/IHRydWUgOiBmYWxzZTtcbiAgdmFyIF9yZXBsYXkgPSByZXBsYXlJZDtcbiAgdmFyIF9jaGFubmVsID0gY2hhbm5lbDtcblxuICB0aGlzLnNldEV4dGVuc2lvbkVuYWJsZWQgPSBmdW5jdGlvbihleHRlbnNpb25FbmFibGVkKSB7XG4gICAgX2V4dGVuc2lvbkVuYWJsZWQgPSBleHRlbnNpb25FbmFibGVkO1xuICB9XG5cbiAgdGhpcy5zZXRSZXBsYXkgPSBmdW5jdGlvbiAocmVwbGF5KSB7XG4gICAgX3JlcGxheSA9IHBhcnNlSW50KHJlcGxheSwgMTApO1xuICB9XG5cbiAgdGhpcy5zZXRDaGFubmVsID0gZnVuY3Rpb24oY2hhbm5lbCkge1xuICAgIF9jaGFubmVsID0gY2hhbm5lbDtcbiAgfVxuXG4gIHRoaXMuaW5jb21pbmcgPSBmdW5jdGlvbihtZXNzYWdlLCBjYWxsYmFjaykge1xuICAgIGlmIChtZXNzYWdlLmNoYW5uZWwgPT09ICcvbWV0YS9oYW5kc2hha2UnKSB7XG4gICAgICBpZiAobWVzc2FnZS5leHQgJiYgbWVzc2FnZS5leHRbUkVQTEFZX0ZST01fS0VZXSA9PSB0cnVlKSB7XG4gICAgICAgIF9leHRlbnNpb25FbmFibGVkID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKG1lc3NhZ2UuY2hhbm5lbCA9PT0gX2NoYW5uZWwgJiYgbWVzc2FnZS5kYXRhICYmIG1lc3NhZ2UuZGF0YS5ldmVudCAmJiBtZXNzYWdlLmRhdGEuZXZlbnQucmVwbGF5SWQpIHtcbiAgICAgIF9yZXBsYXkgPSBtZXNzYWdlLmRhdGEuZXZlbnQucmVwbGF5SWQ7XG4gICAgfVxuICAgIGNhbGxiYWNrKG1lc3NhZ2UpO1xuICB9XG4gIFxuICB0aGlzLm91dGdvaW5nID0gZnVuY3Rpb24obWVzc2FnZSwgY2FsbGJhY2spIHtcbiAgICBpZiAobWVzc2FnZS5jaGFubmVsID09PSAnL21ldGEvc3Vic2NyaWJlJykge1xuICAgICAgaWYgKF9leHRlbnNpb25FbmFibGVkKSB7XG4gICAgICAgIGlmICghbWVzc2FnZS5leHQpIHsgbWVzc2FnZS5leHQgPSB7fTsgfVxuXG4gICAgICAgIHZhciByZXBsYXlGcm9tTWFwID0ge307XG4gICAgICAgIHJlcGxheUZyb21NYXBbX2NoYW5uZWxdID0gX3JlcGxheTtcblxuICAgICAgICAvLyBhZGQgXCJleHQgOiB7IFwicmVwbGF5XCIgOiB7IENIQU5ORUwgOiBSRVBMQVlfVkFMVUUgfX1cIiB0byBzdWJzY3JpYmUgbWVzc2FnZVxuICAgICAgICBtZXNzYWdlLmV4dFtSRVBMQVlfRlJPTV9LRVldID0gcmVwbGF5RnJvbU1hcDtcbiAgICAgIH1cbiAgICB9XG4gICAgY2FsbGJhY2sobWVzc2FnZSk7XG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFN0cmVhbWluZ0V4dGVuc2lvbjtcbiIsIi8qKlxuICogQGZpbGUgTWFuYWdlcyBTdHJlYW1pbmcgQVBJc1xuICogQGF1dGhvciBTaGluaWNoaSBUb21pdGEgPHNoaW5pY2hpLnRvbWl0YUBnbWFpbC5jb20+XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZXZlbnRzID0gcmVxdWlyZSgnZXZlbnRzJyksXG4gICAgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpLFxuICAgIF8gPSByZXF1aXJlKCdsb2Rhc2gvY29yZScpLFxuICAgIEZheWUgICA9IHJlcXVpcmUoJ2ZheWUnKSxcbiAgICBTdHJlYW1pbmdFeHRlbnNpb24gPSByZXF1aXJlKCcuL3N0cmVhbWluZy1leHRlbnNpb24nKSxcbiAgICBqc2ZvcmNlID0gcmVxdWlyZSgnLi4vY29yZScpO1xuXG4vKipcbiAqIFN0cmVhbWluZyBBUEkgdG9waWMgY2xhc3NcbiAqXG4gKiBAY2xhc3MgU3RyZWFtaW5nflRvcGljXG4gKiBAcGFyYW0ge1N0cmVhbWluZ30gc3RlYW1pbmcgLSBTdHJlYW1pbmcgQVBJIG9iamVjdFxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWUgLSBUb3BpYyBuYW1lXG4gKi9cbnZhciBUb3BpYyA9IGZ1bmN0aW9uKHN0cmVhbWluZywgbmFtZSkge1xuICB0aGlzLl9zdHJlYW1pbmcgPSBzdHJlYW1pbmc7XG4gIHRoaXMubmFtZSA9IG5hbWU7XG59O1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IFN0cmVhbWluZ35TdHJlYW1pbmdNZXNzYWdlXG4gKiBAcHJvcCB7T2JqZWN0fSBldmVudFxuICogQHByb3Age09iamVjdH0gZXZlbnQudHlwZSAtIEV2ZW50IHR5cGVcbiAqIEBwcm9wIHtSZWNvcmR9IHNvYmplY3QgLSBSZWNvcmQgaW5mb3JtYXRpb25cbiAqL1xuLyoqXG4gKiBTdWJzY3JpYmUgbGlzdGVuZXIgdG8gdG9waWNcbiAqXG4gKiBAbWV0aG9kIFN0cmVhbWluZ35Ub3BpYyNzdWJzY3JpYmVcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFN0cmVhbWluZ35TdHJlYW1pbmdNZXNhc2dlPn0gbGlzdGVuZXIgLSBTdHJlYW1pbmcgbWVzc2FnZSBsaXN0ZW5lclxuICogQHJldHVybnMge1N1YnNjcmlwdGlvbn0gLSBGYXllIHN1YnNjcmlwdGlvbiBvYmplY3RcbiAqL1xuVG9waWMucHJvdG90eXBlLnN1YnNjcmliZSA9IGZ1bmN0aW9uKGxpc3RlbmVyKSB7XG4gIHJldHVybiB0aGlzLl9zdHJlYW1pbmcuc3Vic2NyaWJlKHRoaXMubmFtZSwgbGlzdGVuZXIpO1xufTtcblxuLyoqXG4gKiBVbnN1YnNjcmliZSBsaXN0ZW5lciBmcm9tIHRvcGljXG4gKlxuICogQG1ldGhvZCBTdHJlYW1pbmd+VG9waWMjdW5zdWJzY3JpYmVcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFN0cmVhbWluZ35TdHJlYW1pbmdNZXNhc2dlPn0gbGlzdGVuZXIgLSBTdHJlYW1pbmcgbWVzc2FnZSBsaXN0ZW5lclxuICogQHJldHVybnMge1N0cmVhbWluZ35Ub3BpY31cbiAqL1xuVG9waWMucHJvdG90eXBlLnVuc3Vic2NyaWJlID0gZnVuY3Rpb24obGlzdGVuZXIpIHtcbiAgdGhpcy5fc3RyZWFtaW5nLnVuc3Vic2NyaWJlKHRoaXMubmFtZSwgbGlzdGVuZXIpO1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4vKipcbiAqIFN0cmVhbWluZyBBUEkgR2VuZXJpYyBTdHJlYW1pbmcgQ2hhbm5lbFxuICpcbiAqIEBjbGFzcyBTdHJlYW1pbmd+Q2hhbm5lbFxuICogQHBhcmFtIHtTdHJlYW1pbmd9IHN0ZWFtaW5nIC0gU3RyZWFtaW5nIEFQSSBvYmplY3RcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lIC0gQ2hhbm5lbCBuYW1lIChzdGFydHMgd2l0aCBcIi91L1wiKVxuICovXG52YXIgQ2hhbm5lbCA9IGZ1bmN0aW9uKHN0cmVhbWluZywgbmFtZSkge1xuICB0aGlzLl9zdHJlYW1pbmcgPSBzdHJlYW1pbmc7XG4gIHRoaXMuX25hbWUgPSBuYW1lO1xufTtcblxuLyoqXG4gKiBTdWJzY3JpYmUgdG8gY2hhbm5lbFxuICpcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFN0cmVhbWluZ35TdHJlYW1pbmdNZXNzYWdlPn0gbGlzdGVuZXIgLSBTdHJlYW1pbmcgbWVzc2FnZSBsaXN0ZW5lclxuICogQHJldHVybnMge1N1YnNjcmlwdGlvbn0gLSBGYXllIHN1YnNjcmlwdGlvbiBvYmplY3RcbiAqL1xuQ2hhbm5lbC5wcm90b3R5cGUuc3Vic2NyaWJlID0gZnVuY3Rpb24obGlzdGVuZXIpIHtcbiAgcmV0dXJuIHRoaXMuX3N0cmVhbWluZy5zdWJzY3JpYmUodGhpcy5fbmFtZSwgbGlzdGVuZXIpO1xufTtcblxuQ2hhbm5lbC5wcm90b3R5cGUudW5zdWJzY3JpYmUgPSBmdW5jdGlvbihsaXN0ZW5lcikge1xuICB0aGlzLl9zdHJlYW1pbmcudW5zdWJzY3JpYmUodGhpcy5fbmFtZSwgbGlzdGVuZXIpO1xuICByZXR1cm4gdGhpcztcbn07XG5cbkNoYW5uZWwucHJvdG90eXBlLnB1c2ggPSBmdW5jdGlvbihldmVudHMsIGNhbGxiYWNrKSB7XG4gIHZhciBpc0FycmF5ID0gXy5pc0FycmF5KGV2ZW50cyk7XG4gIGV2ZW50cyA9IGlzQXJyYXkgPyBldmVudHMgOiBbIGV2ZW50cyBdO1xuICB2YXIgY29ubiA9IHRoaXMuX3N0cmVhbWluZy5fY29ubjtcbiAgaWYgKCF0aGlzLl9pZCkge1xuICAgIHRoaXMuX2lkID0gY29ubi5zb2JqZWN0KCdTdHJlYW1pbmdDaGFubmVsJykuZmluZE9uZSh7IE5hbWU6IHRoaXMuX25hbWUgfSwgJ0lkJylcbiAgICAgIC50aGVuKGZ1bmN0aW9uKHJlYykgeyByZXR1cm4gcmVjLklkIH0pO1xuICB9XG4gIHJldHVybiB0aGlzLl9pZC50aGVuKGZ1bmN0aW9uKGlkKSB7XG4gICAgdmFyIGNoYW5uZWxVcmwgPSAnL3NvYmplY3RzL1N0cmVhbWluZ0NoYW5uZWwvJyArIGlkICsgJy9wdXNoJztcbiAgICByZXR1cm4gY29ubi5yZXF1ZXN0UG9zdChjaGFubmVsVXJsLCB7IHB1c2hFdmVudHM6IGV2ZW50cyB9KTtcbiAgfSkudGhlbihmdW5jdGlvbihyZXRzKSB7XG4gICAgcmV0dXJuIGlzQXJyYXkgPyByZXRzIDogcmV0c1swXTtcbiAgfSkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi8qKlxuICogU3RyZWFtaW5nIEFQSSBjbGFzc1xuICpcbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgZXZlbnRzLkV2ZW50RW1pdHRlclxuICogQHBhcmFtIHtDb25uZWN0aW9ufSBjb25uIC0gQ29ubmVjdGlvbiBvYmplY3RcbiAqL1xudmFyIFN0cmVhbWluZyA9IGZ1bmN0aW9uKGNvbm4pIHtcbiAgdGhpcy5fY29ubiA9IGNvbm47XG59O1xuXG5pbmhlcml0cyhTdHJlYW1pbmcsIGV2ZW50cy5FdmVudEVtaXR0ZXIpO1xuXG4vKiogQHByaXZhdGUgKiovXG5TdHJlYW1pbmcucHJvdG90eXBlLl9jcmVhdGVDbGllbnQgPSBmdW5jdGlvbihmb3JDaGFubmVsTmFtZSwgZXh0ZW5zaW9ucykge1xuICAvLyBmb3JDaGFubmVsTmFtZSBpcyBhZHZpc29yeSwgZm9yIGFuIEFQSSB3b3JrYXJvdW5kLiBJdCBkb2VzIG5vdCByZXN0cmljdCBvciBzZWxlY3QgdGhlIGNoYW5uZWwuXG4gIHZhciBuZWVkc1JlcGxheUZpeCA9IHR5cGVvZiBmb3JDaGFubmVsTmFtZSA9PT0gJ3N0cmluZycgJiYgZm9yQ2hhbm5lbE5hbWUuaW5kZXhPZignL3UvJykgPT09IDA7XG4gIHZhciBlbmRwb2ludFVybCA9IFtcbiAgICB0aGlzLl9jb25uLmluc3RhbmNlVXJsLFxuICAgIC8vIHNwZWNpYWwgZW5kcG9pbnQgXCIvY29tZXRkL3JlcGxheS94eC54XCIgaXMgb25seSBhdmFpbGFibGUgaW4gMzYuMC5cbiAgICAvLyBTZWUgaHR0cHM6Ly9yZWxlYXNlbm90ZXMuZG9jcy5zYWxlc2ZvcmNlLmNvbS9lbi11cy9zdW1tZXIxNi9yZWxlYXNlLW5vdGVzL3JuX2FwaV9zdHJlYW1pbmdfY2xhc3NpY19yZXBsYXkuaHRtXG4gICAgXCJjb21ldGRcIiArIChuZWVkc1JlcGxheUZpeCA9PT0gdHJ1ZSAmJiB0aGlzLl9jb25uLnZlcnNpb24gPT09IFwiMzYuMFwiID8gXCIvcmVwbGF5XCIgOiBcIlwiKSxcbiAgICB0aGlzLl9jb25uLnZlcnNpb25cbiAgXS5qb2luKCcvJyk7XG4gIHZhciBmYXllQ2xpZW50ID0gbmV3IEZheWUuQ2xpZW50KGVuZHBvaW50VXJsLCB7fSk7XG4gIGZheWVDbGllbnQuc2V0SGVhZGVyKCdBdXRob3JpemF0aW9uJywgJ09BdXRoICcrdGhpcy5fY29ubi5hY2Nlc3NUb2tlbik7XG4gIGlmIChleHRlbnNpb25zIGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICBleHRlbnNpb25zLmZvckVhY2goZnVuY3Rpb24oZXh0ZW5zaW9uKSB7XG4gICAgICBmYXllQ2xpZW50LmFkZEV4dGVuc2lvbihleHRlbnNpb24pO1xuICAgIH0pO1xuICB9XG4gIGlmIChmYXllQ2xpZW50Ll9kaXNwYXRjaGVyLmdldENvbm5lY3Rpb25UeXBlcygpLmluZGV4T2YoJ2NhbGxiYWNrLXBvbGxpbmcnKSA9PT0gLTEpIHtcbiAgICAvLyBwcmV2ZW50IHN0cmVhbWluZyBBUEkgc2VydmVyIGVycm9yXG4gICAgZmF5ZUNsaWVudC5fZGlzcGF0Y2hlci5zZWxlY3RUcmFuc3BvcnQoJ2xvbmctcG9sbGluZycpO1xuICAgIGZheWVDbGllbnQuX2Rpc3BhdGNoZXIuX3RyYW5zcG9ydC5iYXRjaGluZyA9IGZhbHNlO1xuICB9XG4gIHJldHVybiBmYXllQ2xpZW50O1xufTtcblxuLyoqIEBwcml2YXRlICoqL1xuU3RyZWFtaW5nLnByb3RvdHlwZS5fZ2V0RmF5ZUNsaWVudCA9IGZ1bmN0aW9uKGNoYW5uZWxOYW1lKSB7XG4gIHZhciBpc0dlbmVyaWMgPSBjaGFubmVsTmFtZS5pbmRleE9mKCcvdS8nKSA9PT0gMDtcbiAgdmFyIGNsaWVudFR5cGUgPSBpc0dlbmVyaWMgPyAnZ2VuZXJpYycgOiAncHVzaFRvcGljJztcbiAgaWYgKCF0aGlzLl9mYXllQ2xpZW50cyB8fCAhdGhpcy5fZmF5ZUNsaWVudHNbY2xpZW50VHlwZV0pIHtcbiAgICB0aGlzLl9mYXllQ2xpZW50cyA9IHRoaXMuX2ZheWVDbGllbnRzIHx8IHt9O1xuICAgIHRoaXMuX2ZheWVDbGllbnRzW2NsaWVudFR5cGVdID0gdGhpcy5fY3JlYXRlQ2xpZW50KGNoYW5uZWxOYW1lKTtcbiAgfVxuICByZXR1cm4gdGhpcy5fZmF5ZUNsaWVudHNbY2xpZW50VHlwZV07XG59O1xuXG5cbi8qKlxuICogR2V0IG5hbWVkIHRvcGljXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWUgLSBUb3BpYyBuYW1lXG4gKiBAcmV0dXJucyB7U3RyZWFtaW5nflRvcGljfVxuICovXG5TdHJlYW1pbmcucHJvdG90eXBlLnRvcGljID0gZnVuY3Rpb24obmFtZSkge1xuICB0aGlzLl90b3BpY3MgPSB0aGlzLl90b3BpY3MgfHwge307XG4gIHZhciB0b3BpYyA9IHRoaXMuX3RvcGljc1tuYW1lXSA9XG4gICAgdGhpcy5fdG9waWNzW25hbWVdIHx8IG5ldyBUb3BpYyh0aGlzLCBuYW1lKTtcbiAgcmV0dXJuIHRvcGljO1xufTtcblxuLyoqXG4gKiBHZXQgQ2hhbm5lbCBmb3IgSWRcbiAqIEBwYXJhbSB7U3RyaW5nfSBjaGFubmVsSWQgLSBJZCBvZiBTdHJlYW1pbmdDaGFubmVsIG9iamVjdFxuICogQHJldHVybnMge1N0cmVhbWluZ35DaGFubmVsfVxuICovXG5TdHJlYW1pbmcucHJvdG90eXBlLmNoYW5uZWwgPSBmdW5jdGlvbihjaGFubmVsSWQpIHtcbiAgcmV0dXJuIG5ldyBDaGFubmVsKHRoaXMsIGNoYW5uZWxJZCk7XG59O1xuXG4vKipcbiAqIFN1YnNjcmliZSB0b3BpYy9jaGFubmVsXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWUgLSBUb3BpYyBuYW1lXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxTdHJlYW1pbmd+U3RyZWFtaW5nTWVzc2FnZT59IGxpc3RlbmVyIC0gU3RyZWFtaW5nIG1lc3NhZ2UgbGlzdGVuZXJcbiAqIEByZXR1cm5zIHtTdWJzY3JpcHRpb259IC0gRmF5ZSBzdWJzY3JpcHRpb24gb2JqZWN0XG4gKi9cblN0cmVhbWluZy5wcm90b3R5cGUuc3Vic2NyaWJlID0gZnVuY3Rpb24obmFtZSwgbGlzdGVuZXIpIHtcbiAgdmFyIGNoYW5uZWxOYW1lID0gbmFtZS5pbmRleE9mKCcvJykgPT09IDAgPyBuYW1lIDogJy90b3BpYy8nICsgbmFtZTtcbiAgdmFyIGZheWVDbGllbnQgPSB0aGlzLl9nZXRGYXllQ2xpZW50KGNoYW5uZWxOYW1lKTtcbiAgcmV0dXJuIGZheWVDbGllbnQuc3Vic2NyaWJlKGNoYW5uZWxOYW1lLCBsaXN0ZW5lcik7XG59O1xuXG4vKipcbiAqIFVuc3Vic2NyaWJlIHRvcGljXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWUgLSBUb3BpYyBuYW1lXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxTdHJlYW1pbmd+U3RyZWFtaW5nTWVzc2FnZT59IGxpc3RlbmVyIC0gU3RyZWFtaW5nIG1lc3NhZ2UgbGlzdGVuZXJcbiAqIEByZXR1cm5zIHtTdHJlYW1pbmd9XG4gKi9cblN0cmVhbWluZy5wcm90b3R5cGUudW5zdWJzY3JpYmUgPSBmdW5jdGlvbihuYW1lLCBsaXN0ZW5lcikge1xuICB2YXIgY2hhbm5lbE5hbWUgPSBuYW1lLmluZGV4T2YoJy8nKSA9PT0gMCA/IG5hbWUgOiAnL3RvcGljLycgKyBuYW1lO1xuICB2YXIgZmF5ZUNsaWVudCA9IHRoaXMuX2dldEZheWVDbGllbnQoY2hhbm5lbE5hbWUpO1xuICBmYXllQ2xpZW50LnVuc3Vic2NyaWJlKGNoYW5uZWxOYW1lLCBsaXN0ZW5lcik7XG4gIHJldHVybiB0aGlzO1xufTtcblxuXG4vKipcbiAqIENyZWF0ZSBhIFN0cmVhbWluZyBjbGllbnQsIG9wdGlvbmFsbHkgd2l0aCBleHRlbnNpb25zXG4gKlxuICogU2VlIEZheWUgZG9jcyBmb3IgaW1wbGVtZW50YXRpb24gZGV0YWlsczogaHR0cHM6Ly9mYXllLmpjb2dsYW4uY29tL2Jyb3dzZXIvZXh0ZW5zaW9ucy5odG1sXG4gKlxuICogRXhhbXBsZSB1c2FnZTpcbiAqIFxuICogYGBgamF2YXNjcmlwdFxuICogLy8gRXN0YWJsaXNoIGEgU2FsZXNmb3JjZSBjb25uZWN0aW9uLiAoRGV0YWlscyBlbGlkZWQpXG4gKiBjb25zdCBjb25uID0gbmV3IGpzZm9yY2UuQ29ubmVjdGlvbih7IOKApiB9KTtcbiAqIFxuICogY29uc3QgZmF5ZUNsaWVudCA9IGNvbm4uc3RyZWFtaW5nLmNyZWF0ZUNsaWVudCgpO1xuICogXG4gKiBjb25zdCBzdWJzY3JpcHRpb24gPSBmYXllQ2xpZW50LnN1YnNjcmliZShjaGFubmVsLCBkYXRhID0+IHtcbiAqICAgY29uc29sZS5sb2coJ3RvcGljIHJlY2VpdmVkIGRhdGEnLCBkYXRhKTtcbiAqIH0pO1xuICogXG4gKiBzdWJzY3JpcHRpb24uY2FuY2VsKCk7XG4gKiBgYGBcbiAqIFxuICogRXhhbXBsZSB3aXRoIGV4dGVuc2lvbnMsIHVzaW5nIFJlcGxheSAmIEF1dGggRmFpbHVyZSBleHRlbnNpb25zIGluIGEgc2VydmVyLXNpZGUgTm9kZS5qcyBhcHA6XG4gKiBcbiAqIGBgYGphdmFzY3JpcHRcbiAqIC8vIEVzdGFibGlzaCBhIFNhbGVzZm9yY2UgY29ubmVjdGlvbi4gKERldGFpbHMgZWxpZGVkKVxuICogY29uc3QgY29ubiA9IG5ldyBqc2ZvcmNlLkNvbm5lY3Rpb24oeyDigKYgfSk7XG4gKiBcbiAqIGNvbnN0IGNoYW5uZWwgPSBcIi9ldmVudC9NeV9FdmVudF9fZVwiO1xuICogY29uc3QgcmVwbGF5SWQgPSAtMjsgLy8gLTIgaXMgYWxsIHJldGFpbmVkIGV2ZW50c1xuICogXG4gKiBjb25zdCBleGl0Q2FsbGJhY2sgPSAoKSA9PiBwcm9jZXNzLmV4aXQoMSk7XG4gKiBjb25zdCBhdXRoRmFpbHVyZUV4dCA9IG5ldyBqc2ZvcmNlLlN0cmVhbWluZ0V4dGVuc2lvbi5BdXRoRmFpbHVyZShleGl0Q2FsbGJhY2spO1xuICogXG4gKiBjb25zdCByZXBsYXlFeHQgPSBuZXcganNmb3JjZS5TdHJlYW1pbmdFeHRlbnNpb24uUmVwbGF5KGNoYW5uZWwsIHJlcGxheUlkKTtcbiAqIFxuICogY29uc3QgZmF5ZUNsaWVudCA9IGNvbm4uc3RyZWFtaW5nLmNyZWF0ZUNsaWVudChbXG4gKiAgIGF1dGhGYWlsdXJlRXh0LFxuICogICByZXBsYXlFeHRcbiAqIF0pO1xuICogXG4gKiBjb25zdCBzdWJzY3JpcHRpb24gPSBmYXllQ2xpZW50LnN1YnNjcmliZShjaGFubmVsLCBkYXRhID0+IHtcbiAqICAgY29uc29sZS5sb2coJ3RvcGljIHJlY2VpdmVkIGRhdGEnLCBkYXRhKTtcbiAqIH0pO1xuICogXG4gKiBzdWJzY3JpcHRpb24uY2FuY2VsKCk7XG4gKiBgYGBcbiAqIFxuICogQHBhcmFtIHtBcnJheX0gRXh0ZW5zaW9ucyAtIE9wdGlvbmFsLCBleHRlbnNpb25zIHRvIGFwcGx5IHRvIHRoZSBGYXllIGNsaWVudFxuICogQHJldHVybnMge0ZheWVDbGllbnR9IC0gRmF5ZSBjbGllbnQgb2JqZWN0XG4gKi9cblN0cmVhbWluZy5wcm90b3R5cGUuY3JlYXRlQ2xpZW50ID0gZnVuY3Rpb24oZXh0ZW5zaW9ucykge1xuICByZXR1cm4gdGhpcy5fY3JlYXRlQ2xpZW50KG51bGwsIGV4dGVuc2lvbnMpO1xufTtcblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKlxuICogUmVnaXN0ZXIgaG9vayBpbiBjb25uZWN0aW9uIGluc3RhbnRpYXRpb24gZm9yIGR5bmFtaWNhbGx5IGFkZGluZyB0aGlzIEFQSSBtb2R1bGUgZmVhdHVyZXNcbiAqL1xuanNmb3JjZS5vbignY29ubmVjdGlvbjpuZXcnLCBmdW5jdGlvbihjb25uKSB7XG4gIGNvbm4uc3RyZWFtaW5nID0gbmV3IFN0cmVhbWluZyhjb25uKTtcbn0pO1xuXG4vKlxuICogXG4gKi9cbmpzZm9yY2UuU3RyZWFtaW5nRXh0ZW5zaW9uID0gU3RyZWFtaW5nRXh0ZW5zaW9uO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFN0cmVhbWluZztcbiIsIi8qKlxuICogQGZpbGUgTWFuYWdlcyBUb29saW5nIEFQSXNcbiAqIEBhdXRob3IgU2hpbmljaGkgVG9taXRhIDxzaGluaWNoaS50b21pdGFAZ21haWwuY29tPlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGpzZm9yY2UgPSByZXF1aXJlKCcuLi9jb3JlJyksXG4gICAgXyAgICAgPSByZXF1aXJlKCdsb2Rhc2gvY29yZScpLFxuICAgIENhY2hlID0gcmVxdWlyZSgnLi4vY2FjaGUnKTtcblxuLyoqXG4gKiBBUEkgY2xhc3MgZm9yIFRvb2xpbmcgQVBJIGNhbGxcbiAqXG4gKiBAY2xhc3NcbiAqIEBwYXJhbSB7Q29ubmVjdGlvbn0gY29ubiAtIENvbm5lY3Rpb25cbiAqL1xudmFyIFRvb2xpbmcgPSBmdW5jdGlvbihjb25uKSB7XG4gIHRoaXMuX2Nvbm4gPSBjb25uO1xuICB0aGlzLl9sb2dnZXIgPSBjb25uLl9sb2dnZXI7XG4gIHZhciBkZWxlZ2F0ZXMgPSBbXG4gICAgXCJxdWVyeVwiLFxuICAgIFwicXVlcnlNb3JlXCIsXG4gICAgXCJjcmVhdGVcIixcbiAgICBcImluc2VydFwiLFxuICAgIFwicmV0cmlldmVcIixcbiAgICBcInVwZGF0ZVwiLFxuICAgIFwidXBzZXJ0XCIsXG4gICAgXCJkZWxcIixcbiAgICBcImRlbGV0ZVwiLFxuICAgIFwiZGVzdHJveVwiLFxuICAgIFwiZGVzY3JpYmVcIixcbiAgICBcImRlc2NyaWJlR2xvYmFsXCIsXG4gICAgXCJzb2JqZWN0XCJcbiAgXTtcbiAgZGVsZWdhdGVzLmZvckVhY2goZnVuY3Rpb24obWV0aG9kKSB7XG4gICAgdGhpc1ttZXRob2RdID0gY29ubi5jb25zdHJ1Y3Rvci5wcm90b3R5cGVbbWV0aG9kXTtcbiAgfSwgdGhpcyk7XG5cbiAgdGhpcy5jYWNoZSA9IG5ldyBDYWNoZSgpO1xuXG4gIHZhciBjYWNoZU9wdGlvbnMgPSB7XG4gICAga2V5OiBmdW5jdGlvbih0eXBlKSB7IHJldHVybiB0eXBlID8gXCJkZXNjcmliZS5cIiArIHR5cGUgOiBcImRlc2NyaWJlXCI7IH1cbiAgfTtcbiAgdGhpcy5kZXNjcmliZSQgPSB0aGlzLmNhY2hlLm1ha2VDYWNoZWFibGUodGhpcy5kZXNjcmliZSwgdGhpcywgY2FjaGVPcHRpb25zKTtcbiAgdGhpcy5kZXNjcmliZSA9IHRoaXMuY2FjaGUubWFrZVJlc3BvbnNlQ2FjaGVhYmxlKHRoaXMuZGVzY3JpYmUsIHRoaXMsIGNhY2hlT3B0aW9ucyk7XG4gIHRoaXMuZGVzY3JpYmVTT2JqZWN0JCA9IHRoaXMuZGVzY3JpYmUkO1xuICB0aGlzLmRlc2NyaWJlU09iamVjdCA9IHRoaXMuZGVzY3JpYmU7XG5cbiAgY2FjaGVPcHRpb25zID0geyBrZXk6ICdkZXNjcmliZUdsb2JhbCcgfTtcbiAgdGhpcy5kZXNjcmliZUdsb2JhbCQgPSB0aGlzLmNhY2hlLm1ha2VDYWNoZWFibGUodGhpcy5kZXNjcmliZUdsb2JhbCwgdGhpcywgY2FjaGVPcHRpb25zKTtcbiAgdGhpcy5kZXNjcmliZUdsb2JhbCA9IHRoaXMuY2FjaGUubWFrZVJlc3BvbnNlQ2FjaGVhYmxlKHRoaXMuZGVzY3JpYmVHbG9iYWwsIHRoaXMsIGNhY2hlT3B0aW9ucyk7XG5cbiAgdGhpcy5pbml0aWFsaXplKCk7XG59O1xuXG4vKipcbiAqIEluaXRpYWxpemUgdG9vbGluZyBBUElcbiAqIEBwcm90ZWN0ZWRcbiAqL1xuVG9vbGluZy5wcm90b3R5cGUuaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLnNvYmplY3RzID0ge307XG4gIHRoaXMuY2FjaGUuY2xlYXIoKTtcbiAgdGhpcy5jYWNoZS5nZXQoJ2Rlc2NyaWJlR2xvYmFsJykucmVtb3ZlQWxsTGlzdGVuZXJzKCd2YWx1ZScpO1xuICB0aGlzLmNhY2hlLmdldCgnZGVzY3JpYmVHbG9iYWwnKS5vbigndmFsdWUnLCBfLmJpbmQoZnVuY3Rpb24ocmVzKSB7XG4gICAgaWYgKHJlcy5yZXN1bHQpIHtcbiAgICAgIHZhciB0eXBlcyA9IF8ubWFwKHJlcy5yZXN1bHQuc29iamVjdHMsIGZ1bmN0aW9uKHNvKSB7IHJldHVybiBzby5uYW1lOyB9KTtcbiAgICAgIHR5cGVzLmZvckVhY2godGhpcy5zb2JqZWN0LCB0aGlzKTtcbiAgICB9XG4gIH0sIHRoaXMpKTtcbn07XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuVG9vbGluZy5wcm90b3R5cGUuX2Jhc2VVcmwgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuX2Nvbm4uX2Jhc2VVcmwoKSArIFwiL3Rvb2xpbmdcIjtcbn07XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuVG9vbGluZy5wcm90b3R5cGUucmVxdWVzdCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5fY29ubi5yZXF1ZXN0LmFwcGx5KHRoaXMuX2Nvbm4sIGFyZ3VtZW50cyk7XG59O1xuXG4vKipcbiAqIEV4ZWN1dGUgcXVlcnkgYnkgdXNpbmcgU09RTFxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzb3FsIC0gU09RTCBzdHJpbmdcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFF1ZXJ5UmVzdWx0Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UXVlcnkuPFF1ZXJ5UmVzdWx0Pn1cbiAqL1xuLyoqXG4gKiBRdWVyeSBuZXh0IHJlY29yZCBzZXQgYnkgdXNpbmcgcXVlcnkgbG9jYXRvclxuICpcbiAqIEBtZXRob2QgVG9vbGluZyNxdWVyeVxuICogQHBhcmFtIHtTdHJpbmd9IGxvY2F0b3IgLSBOZXh0IHJlY29yZCBzZXQgbG9jYXRvclxuICogQHBhcmFtIHtDYWxsYmFjay48UXVlcnlSZXN1bHQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtRdWVyeS48UXVlcnlSZXN1bHQ+fVxuICovXG4vKipcbiAqIFJldHJpZXZlIHNwZWNpZmllZCByZWNvcmRzXG4gKlxuICogQG1ldGhvZCBUb29saW5nI3F1ZXJ5TW9yZVxuICogQHBhcmFtIHtTdHJpbmd9IHR5cGUgLSBTT2JqZWN0IFR5cGVcbiAqIEBwYXJhbSB7U3RyaW5nfEFycmF5LjxTdHJpbmc+fSBpZHMgLSBBIHJlY29yZCBJRCBvciBhcnJheSBvZiByZWNvcmQgSURzXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxSZWNvcmR8QXJyYXkuPFJlY29yZD4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxSZWNvcmR8QXJyYXkuPFJlY29yZD4+fVxuICovXG5cbi8qKlxuICogU3lub255bSBvZiBUb29saW5nI2NyZWF0ZSgpXG4gKlxuICogQG1ldGhvZCBUb29saW5nI2luc2VydFxuICogQHBhcmFtIHtTdHJpbmd9IHR5cGUgLSBTT2JqZWN0IFR5cGVcbiAqIEBwYXJhbSB7T2JqZWN0fEFycmF5LjxPYmplY3Q+fSByZWNvcmRzIC0gQSByZWNvcmQgb3IgYXJyYXkgb2YgcmVjb3JkcyB0byBjcmVhdGVcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFJlY29yZFJlc3VsdHxBcnJheS48UmVjb3JkUmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPFJlY29yZFJlc3VsdHxBcnJheS48UmVjb3JkUmVzdWx0Pj59XG4gKi9cbi8qKlxuICogQ3JlYXRlIHJlY29yZHNcbiAqXG4gKiBAbWV0aG9kIFRvb2xpbmcjY3JlYXRlXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZSAtIFNPYmplY3QgVHlwZVxuICogQHBhcmFtIHtSZWNvcmR8QXJyYXkuPFJlY29yZD59IHJlY29yZHMgLSBBIHJlY29yZCBvciBhcnJheSBvZiByZWNvcmRzIHRvIGNyZWF0ZVxuICogQHBhcmFtIHtDYWxsYmFjay48UmVjb3JkUmVzdWx0fEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48UmVjb3JkUmVzdWx0fEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn1cbiAqL1xuXG4vKipcbiAqIFVwZGF0ZSByZWNvcmRzXG4gKlxuICogQG1ldGhvZCBUb29saW5nI3VwZGF0ZVxuICogQHBhcmFtIHtTdHJpbmd9IHR5cGUgLSBTT2JqZWN0IFR5cGVcbiAqIEBwYXJhbSB7UmVjb3JkfEFycmF5LjxSZWNvcmQ+fSByZWNvcmRzIC0gQSByZWNvcmQgb3IgYXJyYXkgb2YgcmVjb3JkcyB0byB1cGRhdGVcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFJlY29yZFJlc3VsdHxBcnJheS48UmVjb3JkUmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPFJlY29yZFJlc3VsdHxBcnJheS48UmVjb3JkUmVzdWx0Pj59XG4gKi9cblxuLyoqXG4gKiBVcHNlcnQgcmVjb3Jkc1xuICpcbiAqIEBtZXRob2QgVG9vbGluZyN1cHNlcnRcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlIC0gU09iamVjdCBUeXBlXG4gKiBAcGFyYW0ge1JlY29yZHxBcnJheS48UmVjb3JkPn0gcmVjb3JkcyAtIFJlY29yZCBvciBhcnJheSBvZiByZWNvcmRzIHRvIHVwc2VydFxuICogQHBhcmFtIHtTdHJpbmd9IGV4dElkRmllbGQgLSBFeHRlcm5hbCBJRCBmaWVsZCBuYW1lXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxSZWNvcmRSZXN1bHR8QXJyYXkuPFJlY29yZFJlc3VsdD4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2tcbiAqIEByZXR1cm5zIHtQcm9taXNlLjxSZWNvcmRSZXN1bHR8QXJyYXkuPFJlY29yZFJlc3VsdD4+fVxuICovXG5cbi8qKlxuICogU3lub255bSBvZiBUb29saW5nI2Rlc3Ryb3koKVxuICpcbiAqIEBtZXRob2QgVG9vbGluZyNkZWxldGVcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlIC0gU09iamVjdCBUeXBlXG4gKiBAcGFyYW0ge1N0cmluZ3xBcnJheS48U3RyaW5nPn0gaWRzIC0gQSBJRCBvciBhcnJheSBvZiBJRHMgdG8gZGVsZXRlXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxSZWNvcmRSZXN1bHR8QXJyYXkuPFJlY29yZFJlc3VsdD4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2tcbiAqIEByZXR1cm5zIHtQcm9taXNlLjxSZWNvcmRSZXN1bHR8QXJyYXkuPFJlY29yZFJlc3VsdD4+fVxuICovXG4vKipcbiAqIFN5bm9ueW0gb2YgVG9vbGluZyNkZXN0cm95KClcbiAqXG4gKiBAbWV0aG9kIFRvb2xpbmcjZGVsXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZSAtIFNPYmplY3QgVHlwZVxuICogQHBhcmFtIHtTdHJpbmd8QXJyYXkuPFN0cmluZz59IGlkcyAtIEEgSUQgb3IgYXJyYXkgb2YgSURzIHRvIGRlbGV0ZVxuICogQHBhcmFtIHtDYWxsYmFjay48UmVjb3JkUmVzdWx0fEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48UmVjb3JkUmVzdWx0fEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn1cbiAqL1xuLyoqXG4gKiBEZWxldGUgcmVjb3Jkc1xuICpcbiAqIEBtZXRob2QgVG9vbGluZyNkZXN0cm95XG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZSAtIFNPYmplY3QgVHlwZVxuICogQHBhcmFtIHtTdHJpbmd8QXJyYXkuPFN0cmluZz59IGlkcyAtIEEgSUQgb3IgYXJyYXkgb2YgSURzIHRvIGRlbGV0ZVxuICogQHBhcmFtIHtDYWxsYmFjay48UmVjb3JkUmVzdWx0fEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48UmVjb3JkUmVzdWx0fEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn1cbiAqL1xuXG4vKipcbiAqIFN5bm9ueW0gb2YgVG9vbGluZyNkZXNjcmliZSgpXG4gKlxuICogQG1ldGhvZCBUb29saW5nI2Rlc2NyaWJlU09iamVjdFxuICogQHBhcmFtIHtTdHJpbmd9IHR5cGUgLSBTT2JqZWN0IFR5cGVcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPERlc2NyaWJlU09iamVjdFJlc3VsdD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPERlc2NyaWJlU09iamVjdFJlc3VsdD59XG4gKi9cbi8qKlxuICogRGVzY3JpYmUgU09iamVjdCBtZXRhZGF0YVxuICpcbiAqIEBtZXRob2QgVG9vbGluZyNkZXNjcmliZVxuICogQHBhcmFtIHtTdHJpbmd9IHR5cGUgLSBTT2JqZWN0IFR5cGVcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPERlc2NyaWJlU09iamVjdFJlc3VsdD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPERlc2NyaWJlU09iamVjdFJlc3VsdD59XG4gKi9cblxuLyoqXG4gKiBEZXNjcmliZSBnbG9iYWwgU09iamVjdHNcbiAqXG4gKiBAbWV0aG9kIFRvb2xpbmcjZGVzY3JpYmVHbG9iYWxcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPERlc2NyaWJlR2xvYmFsUmVzdWx0Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48RGVzY3JpYmVHbG9iYWxSZXN1bHQ+fVxuICovXG5cbi8qKlxuICogR2V0IFNPYmplY3QgaW5zdGFuY2VcbiAqXG4gKiBAbWV0aG9kIFRvb2xpbmcjc29iamVjdFxuICogQHBhcmFtIHtTdHJpbmd9IHR5cGUgLSBTT2JqZWN0IFR5cGVcbiAqIEByZXR1cm5zIHtTT2JqZWN0fVxuICovXG5cbi8qKlxuICogQHR5cGVkZWYge09iamVjdH0gVG9vbGluZ35FeGVjdXRlQW5vbnltb3VzUmVzdWx0XG4gKiBAcHJvcCB7Qm9vbGVhbn0gY29tcGlsZWQgLSBGbGFnIGlmIHRoZSBxdWVyeSBpcyBjb21waWxlZCBzdWNjZXNzZnVsbHlcbiAqIEBwcm9wIHtTdHJpbmd9IGNvbXBpbGVQcm9ibGVtIC0gRXJyb3IgcmVhc29uIGluIGNvbXBpbGF0aW9uXG4gKiBAcHJvcCB7Qm9vbGVhbn0gc3VjY2VzcyAtIEZsYWcgaWYgdGhlIGNvZGUgaXMgZXhlY3V0ZWQgc3VjY2Vzc2Z1bGx5XG4gKiBAcHJvcCB7TnVtYmVyfSBsaW5lIC0gTGluZSBudW1iZXIgZm9yIHRoZSBlcnJvclxuICogQHByb3Age051bWJlcn0gY29sdW1uIC0gQ29sdW1uIG51bWJlciBmb3IgdGhlIGVycm9yXG4gKiBAcHJvcCB7U3RyaW5nfSBleGNlcHRpb25NZXNzYWdlIC0gRXhjZXB0aW9uIG1lc3NhZ2VcbiAqIEBwcm9wIHtTdHJpbmd9IGV4Y2VwdGlvblN0YWNrVHJhY2UgLSBFeGNlcHRpb24gc3RhY2sgdHJhY2VcbiAqL1xuLyoqXG4gKiBFeGVjdXRlcyBBcGV4IGNvZGUgYW5vbnltb3VzbHlcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gYm9keSAtIEFub255bW91cyBBcGV4IGNvZGVcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFRvb2xpbmd+RXhlY3V0ZUFub255bW91c1Jlc3VsdD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPFRvb2xpbmd+RXhlY3V0ZUFub255bW91c1Jlc3VsdD59XG4gKi9cblRvb2xpbmcucHJvdG90eXBlLmV4ZWN1dGVBbm9ueW1vdXMgPSBmdW5jdGlvbihib2R5LCBjYWxsYmFjaykge1xuICB2YXIgdXJsID0gdGhpcy5fYmFzZVVybCgpICsgXCIvZXhlY3V0ZUFub255bW91cz9hbm9ueW1vdXNCb2R5PVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KGJvZHkpO1xuICByZXR1cm4gdGhpcy5yZXF1ZXN0KHVybCkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBFeGVjdXRlcyBBcGV4IHRlc3RzIGFzeW5jaHJvbm91c2x5XG4gKlxuICogQHBhcmFtIHtBcnJheS48U3RyaW5nPn0gY2xhc3NpZHMgLSBDb21tYSBzZXBhcmF0ZWQgbGlzdCBvZiBjbGFzcyBJRHNcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFRvb2xpbmd+RXhlY3V0ZUFub255bW91c1Jlc3VsdD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPFRvb2xpbmd+RXhlY3V0ZUFub255bW91c1Jlc3VsdD59XG4gKi9cblRvb2xpbmcucHJvdG90eXBlLnJ1blRlc3RzQXN5bmNocm9ub3VzID0gZnVuY3Rpb24oY2xhc3NpZHMsIGNhbGxiYWNrKSB7XG4gIHZhciB1cmwgPSB0aGlzLl9iYXNlVXJsKCkgKyBcIi9ydW5UZXN0c0FzeW5jaHJvbm91cy9cIjtcbiAgcmV0dXJuIHRoaXMuX2Nvbm4ucmVxdWVzdFBvc3QodXJsLCB7Y2xhc3NpZHMgOiBjbGFzc2lkcy5qb2luKCcsJyl9LCB1bmRlZmluZWQsIGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogRXhlY3V0ZXMgQXBleCB0ZXN0cyBzeW5jaHJvbm91c2x5XG4gKlxuICogQHBhcmFtIHtBcnJheS48U3RyaW5nPn0gY2xhc3NuYW1lcyAtIENvbW1hIHNlcGFyYXRlZCBsaXN0IG9mIGNsYXNzIE5hbWVzXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxUb29saW5nfkV4ZWN1dGVBbm9ueW1vdXNSZXN1bHQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxUb29saW5nfkV4ZWN1dGVBbm9ueW1vdXNSZXN1bHQ+fVxuICovXG5Ub29saW5nLnByb3RvdHlwZS5ydW5UZXN0c1N5bmNocm9ub3VzID0gZnVuY3Rpb24oY2xhc3NuYW1lcywgY2FsbGJhY2spIHtcbiAgdmFyIHVybCA9IHRoaXMuX2Jhc2VVcmwoKSArIFwiL3J1blRlc3RzU3luY2hyb25vdXMvXCI7XG4gIHJldHVybiB0aGlzLl9jb25uLnJlcXVlc3RQb3N0KHVybCwge2NsYXNzbmFtZXMgOiBjbGFzc25hbWVzLmpvaW4oJywnKX0sIHVuZGVmaW5lZCwgY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBUb29saW5nfkNvbXBsZXRpb25zUmVzdWx0XG4gKiBAcHJvcCB7T2JqZWN0fSBwdWJsaWNEZWNsYXJhdGlvbnNcbiAqL1xuLyoqXG4gKiBSZXRyaWV2ZXMgYXZhaWxhYmxlIGNvZGUgY29tcGxldGlvbnMgb2YgdGhlIHJlZmVyZW5jZWQgdHlwZVxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBbdHlwZV0gLSBjb21wbGV0aW9uIHR5cGUgKGRlZmF1bHQgJ2FwZXgnKVxuICogQHBhcmFtIHtDYWxsYmFjay48VG9vbGluZ35Db21wbGV0aW9uc1Jlc3VsdD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPFRvb2xpbmd+Q29tcGxldGlvbnNSZXN1bHQ+fVxuICovXG5Ub29saW5nLnByb3RvdHlwZS5jb21wbGV0aW9ucyA9IGZ1bmN0aW9uKHR5cGUsIGNhbGxiYWNrKSB7XG4gIGlmICghXy5pc1N0cmluZyh0eXBlKSkge1xuICAgIGNhbGxiYWNrID0gdHlwZTtcbiAgICB0eXBlID0gJ2FwZXgnO1xuICB9XG4gIHZhciB1cmwgPSB0aGlzLl9iYXNlVXJsKCkgKyBcIi9jb21wbGV0aW9ucz90eXBlPVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KHR5cGUpO1xuICByZXR1cm4gdGhpcy5yZXF1ZXN0KHVybCkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qXG4gKiBSZWdpc3RlciBob29rIGluIGNvbm5lY3Rpb24gaW5zdGFudGlhdGlvbiBmb3IgZHluYW1pY2FsbHkgYWRkaW5nIHRoaXMgQVBJIG1vZHVsZSBmZWF0dXJlc1xuICovXG5qc2ZvcmNlLm9uKCdjb25uZWN0aW9uOm5ldycsIGZ1bmN0aW9uKGNvbm4pIHtcbiAgY29ubi50b29saW5nID0gbmV3IFRvb2xpbmcoY29ubik7XG59KTtcblxuXG5tb2R1bGUuZXhwb3J0cyA9IFRvb2xpbmc7XG4iLCIvKmdsb2JhbCBTZmRjICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBEdXBsZXggPSByZXF1aXJlKCdyZWFkYWJsZS1zdHJlYW0nKS5EdXBsZXgsXG4gICAgXyA9IHJlcXVpcmUoJ2xvZGFzaC9jb3JlJyk7XG5cbmZ1bmN0aW9uIHBhcnNlSGVhZGVycyhocykge1xuICB2YXIgaGVhZGVycyA9IHt9O1xuICBocy5zcGxpdCgvXFxuLykuZm9yRWFjaChmdW5jdGlvbihsaW5lKSB7XG4gICAgdmFyIHBhaXIgPSBsaW5lLnNwbGl0KC9cXHMqOlxccyovKTtcbiAgICB2YXIgbmFtZSA9IHBhaXJbMF0udG9Mb3dlckNhc2UoKTtcbiAgICB2YXIgdmFsdWUgPSBwYWlyWzFdO1xuICAgIGhlYWRlcnNbbmFtZV0gPSB2YWx1ZTtcbiAgfSk7XG4gIHJldHVybiBoZWFkZXJzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcblxuICBzdXBwb3J0ZWQ6IHR5cGVvZiBTZmRjID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgU2ZkYy5jYW52YXMgIT09ICd1bmRlZmluZWQnLFxuXG4gIGNyZWF0ZVJlcXVlc3Q6IGZ1bmN0aW9uKHNpZ25lZFJlcXVlc3QpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24ocGFyYW1zLCBjYWxsYmFjaykge1xuICAgICAgdmFyIHJlc3BvbnNlO1xuICAgICAgdmFyIHN0ciA9IG5ldyBEdXBsZXgoKTtcbiAgICAgIHN0ci5fcmVhZCA9IGZ1bmN0aW9uKHNpemUpIHtcbiAgICAgICAgaWYgKHJlc3BvbnNlKSB7XG4gICAgICAgICAgc3RyLnB1c2gocmVzcG9uc2UuYm9keSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICB2YXIgYnVmcyA9IFtdO1xuICAgICAgdmFyIHNlbnQgPSBmYWxzZTtcbiAgICAgIHN0ci5fd3JpdGUgPSBmdW5jdGlvbihjaHVuaywgZW5jb2RpbmcsIGNhbGxiYWNrKSB7XG4gICAgICAgIGJ1ZnMucHVzaChjaHVuay50b1N0cmluZyhlbmNvZGluZykpO1xuICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgfTtcbiAgICAgIHN0ci5vbignZmluaXNoJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICghc2VudCkge1xuICAgICAgICAgIHNlbmQoYnVmcy5qb2luKCcnKSk7XG4gICAgICAgICAgc2VudCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgaWYgKHBhcmFtcy5ib2R5IHx8IHBhcmFtcy5ib2R5ID09PSBcIlwiIHx8ICEvXihwdXR8cG9zdHxwYXRjaCkkL2kudGVzdChwYXJhbXMubWV0aG9kKSkge1xuICAgICAgICBzZW5kKHBhcmFtcy5ib2R5KTtcbiAgICAgICAgc2VudCA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIHNlbmQoYm9keSkge1xuICAgICAgICB2YXIgc2V0dGluZ3MgPSB7XG4gICAgICAgICAgY2xpZW50OiBzaWduZWRSZXF1ZXN0LmNsaWVudCxcbiAgICAgICAgICBtZXRob2Q6IHBhcmFtcy5tZXRob2QsXG4gICAgICAgICAgZGF0YTogYm9keVxuICAgICAgICB9O1xuICAgICAgICBpZiAocGFyYW1zLmhlYWRlcnMpIHtcbiAgICAgICAgICBzZXR0aW5ncy5oZWFkZXJzID0ge307XG4gICAgICAgICAgZm9yICh2YXIgbmFtZSBpbiBwYXJhbXMuaGVhZGVycykge1xuICAgICAgICAgICAgaWYgKG5hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ2NvbnRlbnQtdHlwZScpIHtcbiAgICAgICAgICAgICAgc2V0dGluZ3MuY29udGVudFR5cGUgPSBwYXJhbXMuaGVhZGVyc1tuYW1lXTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHNldHRpbmdzLmhlYWRlcnNbbmFtZV0gPSBwYXJhbXMuaGVhZGVyc1tuYW1lXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgc2V0dGluZ3Muc3VjY2VzcyA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICB2YXIgaGVhZGVycyA9IHBhcnNlSGVhZGVycyhkYXRhLnJlc3BvbnNlSGVhZGVycyk7XG4gICAgICAgICAgdmFyIGJvZHkgPSBkYXRhLnBheWxvYWQ7XG4gICAgICAgICAgaWYgKCFfLmlzU3RyaW5nKGJvZHkpKSB7XG4gICAgICAgICAgICBib2R5ID0gSlNPTi5zdHJpbmdpZnkoYm9keSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJlc3BvbnNlID0ge1xuICAgICAgICAgICAgc3RhdHVzQ29kZSA6IGRhdGEuc3RhdHVzLFxuICAgICAgICAgICAgaGVhZGVyczogaGVhZGVycyxcbiAgICAgICAgICAgIGJvZHk6IGJvZHlcbiAgICAgICAgICB9O1xuICAgICAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgcmVzcG9uc2UsIHJlc3BvbnNlLmJvZHkpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzdHIuZW5kKCk7XG4gICAgICAgIH07XG4gICAgICAgIHNldHRpbmdzLmZhaWx1cmUgPSBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBTZmRjLmNhbnZhcy5jbGllbnQuYWpheChwYXJhbXMudXJsLCBzZXR0aW5ncyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gc3RyO1xuICAgIH07XG4gIH1cbn07XG4iLCIvKipcbiAqIEBmaWxlIEJyb3dzZXIgY2xpZW50IGNvbm5lY3Rpb24gbWFuYWdlbWVudCBjbGFzc1xuICogQGF1dGhvciBTaGluaWNoaSBUb21pdGEgPHNoaW5pY2hpLnRvbWl0YUBnbWFpbC5jb20+XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZXZlbnRzID0gcmVxdWlyZSgnZXZlbnRzJyksXG4gICAgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpLFxuICAgIHFzID0gcmVxdWlyZSgncXVlcnlzdHJpbmcnKSxcbiAgICBfID0gcmVxdWlyZSgnbG9kYXNoL2NvcmUnKSxcbiAgICBDb25uZWN0aW9uID0gcmVxdWlyZSgnLi4vY29ubmVjdGlvbicpLFxuICAgIE9BdXRoMiA9IHJlcXVpcmUoJy4uL29hdXRoMicpO1xuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHBvcHVwV2luKHVybCwgdywgaCkge1xuICB2YXIgbGVmdCA9IChzY3JlZW4ud2lkdGgvMiktKHcvMik7XG4gIHZhciB0b3AgPSAoc2NyZWVuLmhlaWdodC8yKS0oaC8yKTtcbiAgcmV0dXJuIHdpbmRvdy5vcGVuKHVybCwgbnVsbCwgJ2xvY2F0aW9uPXllcyx0b29sYmFyPW5vLHN0YXR1cz1ubyxtZW51YmFyPW5vLHdpZHRoPScrdysnLGhlaWdodD0nK2grJyx0b3A9Jyt0b3ArJyxsZWZ0PScrbGVmdCk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZUNhbGxiYWNrUmVzcG9uc2UoKSB7XG4gIHZhciByZXMgPSBjaGVja0NhbGxiYWNrUmVzcG9uc2UoKTtcbiAgdmFyIHN0YXRlID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2pzZm9yY2Vfc3RhdGUnKTtcbiAgaWYgKHJlcyAmJiBzdGF0ZSAmJiByZXMuYm9keS5zdGF0ZSA9PT0gc3RhdGUpIHtcbiAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnanNmb3JjZV9zdGF0ZScpO1xuICAgIHZhciBzdGF0ZXMgPSBzdGF0ZS5zcGxpdCgnLicpO1xuICAgIHZhciBwcmVmaXggPSBzdGF0ZXNbMF0sIHByb21wdFR5cGUgPSBzdGF0ZXNbMV07XG4gICAgdmFyIGNsaSA9IG5ldyBDbGllbnQocHJlZml4KTtcbiAgICBpZiAocmVzLnN1Y2Nlc3MpIHtcbiAgICAgIGNsaS5fc3RvcmVUb2tlbnMocmVzLmJvZHkpO1xuICAgICAgbG9jYXRpb24uaGFzaCA9ICcnO1xuICAgIH0gZWxzZSB7XG4gICAgICBjbGkuX3N0b3JlRXJyb3IocmVzLmJvZHkpO1xuICAgIH1cbiAgICBpZiAocHJvbXB0VHlwZSA9PT0gJ3BvcHVwJykgeyB3aW5kb3cuY2xvc2UoKTsgfVxuICAgIHJldHVybiB0cnVlO1xuICB9XG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gY2hlY2tDYWxsYmFja1Jlc3BvbnNlKCkge1xuICB2YXIgcGFyYW1zO1xuICBpZiAod2luZG93LmxvY2F0aW9uLmhhc2gpIHtcbiAgICBwYXJhbXMgPSBxcy5wYXJzZSh3aW5kb3cubG9jYXRpb24uaGFzaC5zdWJzdHJpbmcoMSkpO1xuICAgIGlmIChwYXJhbXMuYWNjZXNzX3Rva2VuKSB7XG4gICAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCBib2R5OiBwYXJhbXMgfTtcbiAgICB9XG4gIH0gZWxzZSBpZiAod2luZG93LmxvY2F0aW9uLnNlYXJjaCkge1xuICAgIHBhcmFtcyA9IHFzLnBhcnNlKHdpbmRvdy5sb2NhdGlvbi5zZWFyY2guc3Vic3RyaW5nKDEpKTtcbiAgICBpZiAocGFyYW1zLmVycm9yKSB7XG4gICAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgYm9keTogcGFyYW1zIH07XG4gICAgfVxuICB9XG59XG5cbi8qKiBAcHJpdmF0ZSAqKi9cbnZhciBjbGllbnRJZHggPSAwO1xuXG5cbi8qKlxuICogQGNsYXNzXG4gKiBAdG9kbyBhZGQgZG9jdW1lbnRcbiAqL1xudmFyIENsaWVudCA9IGZ1bmN0aW9uKHByZWZpeCkge1xuICB0aGlzLl9wcmVmaXggPSBwcmVmaXggfHwgJ2pzZm9yY2UnICsgY2xpZW50SWR4Kys7XG4gIHRoaXMuY29ubmVjdGlvbiA9IG51bGw7XG59O1xuXG5pbmhlcml0cyhDbGllbnQsIGV2ZW50cy5FdmVudEVtaXR0ZXIpO1xuXG4vKipcbiAqXG4gKi9cbkNsaWVudC5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uKGNvbmZpZykge1xuICBpZiAoaGFuZGxlQ2FsbGJhY2tSZXNwb25zZSgpKSB7IHJldHVybjsgfVxuICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgdGhpcy5jb25uZWN0aW9uID0gbmV3IENvbm5lY3Rpb24oY29uZmlnKTtcbiAgdmFyIHRva2VucyA9IHRoaXMuX2dldFRva2VucygpO1xuICBpZiAodG9rZW5zKSB7XG4gICAgdGhpcy5jb25uZWN0aW9uLmluaXRpYWxpemUodG9rZW5zKTtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgIHNlbGYuZW1pdCgnY29ubmVjdCcsIHNlbGYuY29ubmVjdGlvbik7XG4gICAgfSwgMTApO1xuICB9XG59O1xuXG4vKipcbiAqXG4gKi9cbkNsaWVudC5wcm90b3R5cGUubG9naW4gPSBmdW5jdGlvbihvcHRpb25zLCBjYWxsYmFjaykge1xuICBpZiAoXy5pc0Z1bmN0aW9uKG9wdGlvbnMpKSB7XG4gICAgY2FsbGJhY2sgPSBvcHRpb25zO1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgY2FsbGJhY2sgPSBjYWxsYmFjayB8fCBmdW5jdGlvbigpeyB9O1xuICBfLmV4dGVuZChvcHRpb25zLCB0aGlzLmNvbmZpZyk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdGhpcy5fcHJvbXB0KG9wdGlvbnMsIGNhbGxiYWNrKTtcbn07XG5cblxuQ2xpZW50LnByb3RvdHlwZS5fcHJvbXB0ID0gZnVuY3Rpb24ob3B0aW9ucywgY2FsbGJhY2spIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgb2F1dGgyID0gbmV3IE9BdXRoMihvcHRpb25zKTtcbiAgdmFyIHJhbmQgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMik7XG4gIHZhciBzdGF0ZSA9IFsgdGhpcy5fcHJlZml4LCBcInBvcHVwXCIsIHJhbmQgXS5qb2luKCcuJyk7XG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwianNmb3JjZV9zdGF0ZVwiLCBzdGF0ZSk7XG4gIHZhciBhdXRoelVybCA9IG9hdXRoMi5nZXRBdXRob3JpemF0aW9uVXJsKHtcbiAgICByZXNwb25zZV90eXBlOiAndG9rZW4nLFxuICAgIHNjb3BlIDogb3B0aW9ucy5zY29wZSxcbiAgICBzdGF0ZTogc3RhdGVcbiAgfSk7XG4gIHZhciBzaXplID0gb3B0aW9ucy5zaXplIHx8IHt9O1xuICB2YXIgcHcgPSBwb3B1cFdpbihhdXRoelVybCwgc2l6ZS53aWR0aCB8fCA5MTIsIHNpemUuaGVpZ2h0IHx8IDUxMyk7XG4gIGlmICghcHcpIHtcbiAgICBzdGF0ZSA9IFsgdGhpcy5fcHJlZml4LCBcInJlZGlyZWN0XCIsIHJhbmQgXS5qb2luKCcuJyk7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJqc2ZvcmNlX3N0YXRlXCIsIHN0YXRlKTtcbiAgICBhdXRoelVybCA9IG9hdXRoMi5nZXRBdXRob3JpemF0aW9uVXJsKHtcbiAgICAgIHJlc3BvbnNlX3R5cGU6ICd0b2tlbicsXG4gICAgICBzY29wZSA6IG9wdGlvbnMuc2NvcGUsXG4gICAgICBzdGF0ZTogc3RhdGVcbiAgICB9KTtcbiAgICBsb2NhdGlvbi5ocmVmID0gYXV0aHpVcmw7XG4gICAgcmV0dXJuO1xuICB9XG4gIHNlbGYuX3JlbW92ZVRva2VucygpO1xuICB2YXIgcGlkID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghcHcgfHwgcHcuY2xvc2VkKSB7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwocGlkKTtcbiAgICAgICAgdmFyIHRva2VucyA9IHNlbGYuX2dldFRva2VucygpO1xuICAgICAgICBpZiAodG9rZW5zKSB7XG4gICAgICAgICAgc2VsZi5jb25uZWN0aW9uLmluaXRpYWxpemUodG9rZW5zKTtcbiAgICAgICAgICBzZWxmLmVtaXQoJ2Nvbm5lY3QnLCBzZWxmLmNvbm5lY3Rpb24pO1xuICAgICAgICAgIGNhbGxiYWNrKG51bGwsIHsgc3RhdHVzOiAnY29ubmVjdCcgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIGVyciA9IHNlbGYuX2dldEVycm9yKCk7XG4gICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKGVyci5lcnJvciArIFwiOiBcIiArIGVyci5lcnJvcl9kZXNjcmlwdGlvbikpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWxsYmFjayhudWxsLCB7IHN0YXR1czogJ2NhbmNlbCcgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBjYXRjaChlKSB7fVxuICB9LCAxMDAwKTtcbn07XG5cbi8qKlxuICpcbiAqL1xuQ2xpZW50LnByb3RvdHlwZS5pc0xvZ2dlZEluID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiAhISh0aGlzLmNvbm5lY3Rpb24gJiYgdGhpcy5jb25uZWN0aW9uLmFjY2Vzc1Rva2VuKTtcbn07XG5cbi8qKlxuICpcbiAqL1xuQ2xpZW50LnByb3RvdHlwZS5sb2dvdXQgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5jb25uZWN0aW9uLmxvZ291dCgpO1xuICB0aGlzLl9yZW1vdmVUb2tlbnMoKTtcbiAgdGhpcy5lbWl0KCdkaXNjb25uZWN0Jyk7XG59O1xuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbkNsaWVudC5wcm90b3R5cGUuX2dldFRva2VucyA9IGZ1bmN0aW9uKCkge1xuICB2YXIgcmVnZXhwID0gbmV3IFJlZ0V4cChcIihefDtcXFxccyopXCIrdGhpcy5fcHJlZml4K1wiX2xvZ2dlZGluPXRydWUoO3wkKVwiKTtcbiAgaWYgKGRvY3VtZW50LmNvb2tpZS5tYXRjaChyZWdleHApKSB7XG4gICAgdmFyIGlzc3VlZEF0ID0gTnVtYmVyKGxvY2FsU3RvcmFnZS5nZXRJdGVtKHRoaXMuX3ByZWZpeCsnX2lzc3VlZF9hdCcpKTtcbiAgICBpZiAoRGF0ZS5ub3coKSA8IGlzc3VlZEF0ICsgMiAqIDYwICogNjAgKiAxMDAwKSB7IC8vIDIgaG91cnNcbiAgICAgIHZhciB1c2VySW5mbztcbiAgICAgIHZhciBpZFVybCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKHRoaXMuX3ByZWZpeCArICdfaWQnKTtcbiAgICAgIGlmIChpZFVybCkge1xuICAgICAgICB2YXIgaWRzID0gaWRVcmwuc3BsaXQoJy8nKTtcbiAgICAgICAgdXNlckluZm8gPSB7IGlkOiBpZHMucG9wKCksIG9yZ2FuaXphdGlvbklkOiBpZHMucG9wKCksIHVybDogaWRVcmwgfTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGFjY2Vzc1Rva2VuOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLl9wcmVmaXggKyAnX2FjY2Vzc190b2tlbicpLFxuICAgICAgICBpbnN0YW5jZVVybDogbG9jYWxTdG9yYWdlLmdldEl0ZW0odGhpcy5fcHJlZml4ICsgJ19pbnN0YW5jZV91cmwnKSxcbiAgICAgICAgdXNlckluZm86IHVzZXJJbmZvXG4gICAgICB9O1xuICAgIH1cbiAgfVxuICByZXR1cm4gbnVsbDtcbn07XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuQ2xpZW50LnByb3RvdHlwZS5fc3RvcmVUb2tlbnMgPSBmdW5jdGlvbihwYXJhbXMpIHtcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5fcHJlZml4ICsgJ19hY2Nlc3NfdG9rZW4nLCBwYXJhbXMuYWNjZXNzX3Rva2VuKTtcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5fcHJlZml4ICsgJ19pbnN0YW5jZV91cmwnLCBwYXJhbXMuaW5zdGFuY2VfdXJsKTtcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5fcHJlZml4ICsgJ19pc3N1ZWRfYXQnLCBwYXJhbXMuaXNzdWVkX2F0KTtcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5fcHJlZml4ICsgJ19pZCcsIHBhcmFtcy5pZCk7XG4gIGRvY3VtZW50LmNvb2tpZSA9IHRoaXMuX3ByZWZpeCArICdfbG9nZ2VkaW49dHJ1ZTsnO1xufTtcblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5DbGllbnQucHJvdG90eXBlLl9yZW1vdmVUb2tlbnMgPSBmdW5jdGlvbigpIHtcbiAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0odGhpcy5fcHJlZml4ICsgJ19hY2Nlc3NfdG9rZW4nKTtcbiAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0odGhpcy5fcHJlZml4ICsgJ19pbnN0YW5jZV91cmwnKTtcbiAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0odGhpcy5fcHJlZml4ICsgJ19pc3N1ZWRfYXQnKTtcbiAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0odGhpcy5fcHJlZml4ICsgJ19pZCcpO1xuICBkb2N1bWVudC5jb29raWUgPSB0aGlzLl9wcmVmaXggKyAnX2xvZ2dlZGluPSc7XG59O1xuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbkNsaWVudC5wcm90b3R5cGUuX2dldEVycm9yID0gZnVuY3Rpb24oKSB7XG4gIHRyeSB7XG4gICAgdmFyIGVyciA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0odGhpcy5fcHJlZml4ICsgJ19lcnJvcicpKTtcbiAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSh0aGlzLl9wcmVmaXggKyAnX2Vycm9yJyk7XG4gICAgcmV0dXJuIGVycjtcbiAgfSBjYXRjaChlKSB7fVxufTtcblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5DbGllbnQucHJvdG90eXBlLl9zdG9yZUVycm9yID0gZnVuY3Rpb24oZXJyKSB7XG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHRoaXMuX3ByZWZpeCArICdfZXJyb3InLCBKU09OLnN0cmluZ2lmeShlcnIpKTtcbn07XG5cbi8qKlxuICpcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBuZXcgQ2xpZW50KCk7XG5cbm1vZHVsZS5leHBvcnRzLkNsaWVudCA9IENsaWVudDtcbiIsIi8qZ2xvYmFsIHdpbmRvdywgZG9jdW1lbnQgKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIF9pbmRleCA9IDA7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuXG4gIHN1cHBvcnRlZDogdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyxcblxuICBjcmVhdGVSZXF1ZXN0OiBmdW5jdGlvbihqc29ucFBhcmFtLCB0aW1lb3V0KSB7XG4gICAganNvbnBQYXJhbSA9IGpzb25wUGFyYW0gfHwgJ2NhbGxiYWNrJztcbiAgICB0aW1lb3V0ID0gdGltZW91dCB8fCAxMDAwMDtcblxuICAgIHJldHVybiBmdW5jdGlvbihwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgICBpZiAocGFyYW1zLm1ldGhvZC50b1VwcGVyQ2FzZSgpICE9PSAnR0VUJykge1xuICAgICAgICByZXR1cm4gY2FsbGJhY2sobmV3IEVycm9yKCdKU09OUCBvbmx5IHN1cHBvcnRzIEdFVCByZXF1ZXN0LicpKTtcbiAgICAgIH1cbiAgICAgIHZhciBjYkZ1bmNOYW1lID0gJ19qc2ZvcmNlX2pzb25wQ2FsbGJhY2tfJyArICgrK19pbmRleCk7XG4gICAgICB2YXIgY2FsbGJhY2tzID0gd2luZG93O1xuICAgICAgdmFyIHVybCA9IHBhcmFtcy51cmw7XG4gICAgICB1cmwgKz0gdXJsLmluZGV4T2YoJz8nKT4wID8gJyYnIDogJz8nO1xuICAgICAgdXJsICs9IGpzb25wUGFyYW0gKyAnPScgKyBjYkZ1bmNOYW1lO1xuXG4gICAgICB2YXIgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG4gICAgICBzY3JpcHQudHlwZSA9ICd0ZXh0L2phdmFzY3JpcHQnO1xuICAgICAgc2NyaXB0LnNyYyA9IHVybDtcbiAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5hcHBlbmRDaGlsZChzY3JpcHQpO1xuXG4gICAgICB2YXIgcGlkID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgY2xlYW51cCgpO1xuICAgICAgICBjYWxsYmFjayhuZXcgRXJyb3IoXCJKU09OUCBjYWxsIHRpbWUgb3V0LlwiKSk7XG4gICAgICB9LCB0aW1lb3V0KTtcblxuICAgICAgY2FsbGJhY2tzW2NiRnVuY05hbWVdID0gZnVuY3Rpb24ocmVzKSB7XG4gICAgICAgIGNsZWFudXAoKTtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwge1xuICAgICAgICAgIHN0YXR1c0NvZGU6IDIwMCxcbiAgICAgICAgICBoZWFkZXJzOiB7IFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiIH0sXG4gICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkocmVzKVxuICAgICAgICB9KTtcbiAgICAgIH07XG5cbiAgICAgIHZhciBjbGVhbnVwID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGNsZWFyVGltZW91dChwaWQpO1xuICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQucmVtb3ZlQ2hpbGQoc2NyaXB0KTtcbiAgICAgICAgZGVsZXRlIGNhbGxiYWNrc1tjYkZ1bmNOYW1lXTtcbiAgICAgIH07XG4gICAgfTtcblxuICB9XG5cbn07IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgRHVwbGV4ID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtJykuRHVwbGV4O1xudmFyIF8gPSByZXF1aXJlKCdsb2Rhc2gvY29yZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICB4aHIub3BlbihwYXJhbXMubWV0aG9kLCBwYXJhbXMudXJsKTtcbiAgaWYgKHBhcmFtcy5oZWFkZXJzKSB7XG4gICAgZm9yICh2YXIgaGVhZGVyIGluIHBhcmFtcy5oZWFkZXJzKSB7XG4gICAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcihoZWFkZXIsIHBhcmFtcy5oZWFkZXJzW2hlYWRlcl0pO1xuICAgIH1cbiAgfVxuICB4aHIuc2V0UmVxdWVzdEhlYWRlcihcIkFjY2VwdFwiLCBcIiovKlwiKTtcbiAgdmFyIHJlc3BvbnNlO1xuICB2YXIgc3RyID0gbmV3IER1cGxleCgpO1xuICBzdHIuX3JlYWQgPSBmdW5jdGlvbihzaXplKSB7XG4gICAgaWYgKHJlc3BvbnNlKSB7XG4gICAgICBzdHIucHVzaChyZXNwb25zZS5ib2R5KTtcbiAgICB9XG4gIH07XG4gIHZhciBidWZzID0gW107XG4gIHZhciBzZW50ID0gZmFsc2U7XG4gIHN0ci5fd3JpdGUgPSBmdW5jdGlvbihjaHVuaywgZW5jb2RpbmcsIGNhbGxiYWNrKSB7XG4gICAgYnVmcy5wdXNoKGNodW5rLnRvU3RyaW5nKGVuY29kaW5nID09PSBcImJ1ZmZlclwiID8gXCJiaW5hcnlcIiA6IGVuY29kaW5nKSk7XG4gICAgY2FsbGJhY2soKTtcbiAgfTtcbiAgc3RyLm9uKCdmaW5pc2gnLCBmdW5jdGlvbigpIHtcbiAgICBpZiAoIXNlbnQpIHtcbiAgICAgIHhoci5zZW5kKGJ1ZnMuam9pbignJykpO1xuICAgICAgc2VudCA9IHRydWU7XG4gICAgfVxuICB9KTtcbiAgaWYgKHBhcmFtcy5ib2R5IHx8IHBhcmFtcy5ib2R5ID09PSBcIlwiIHx8ICEvXihwdXR8cG9zdHxwYXRjaCkkL2kudGVzdChwYXJhbXMubWV0aG9kKSkge1xuICAgIHhoci5zZW5kKHBhcmFtcy5ib2R5KTtcbiAgICBzZW50ID0gdHJ1ZTtcbiAgfVxuICB4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKHhoci5yZWFkeVN0YXRlID09PSA0KSB7XG4gICAgICB2YXIgaGVhZGVyTmFtZXMgPSBnZXRSZXNwb25zZUhlYWRlck5hbWVzKHhocik7XG4gICAgICB2YXIgaGVhZGVycyA9IHt9O1xuICAgICAgXy5mb3JFYWNoKGhlYWRlck5hbWVzLCBmdW5jdGlvbihoZWFkZXJOYW1lKSB7XG4gICAgICAgIGlmIChoZWFkZXJOYW1lKSB7XG4gICAgICAgICAgaGVhZGVyc1toZWFkZXJOYW1lXSA9IHhoci5nZXRSZXNwb25zZUhlYWRlcihoZWFkZXJOYW1lKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXNwb25zZSA9IHtcbiAgICAgICAgc3RhdHVzQ29kZTogeGhyLnN0YXR1cyxcbiAgICAgICAgaGVhZGVyczogaGVhZGVycyxcbiAgICAgICAgYm9keTogeGhyLnJlc3BvbnNlXG4gICAgICB9O1xuICAgICAgaWYgKCFyZXNwb25zZS5zdGF0dXNDb2RlKSB7XG4gICAgICAgIHJlc3BvbnNlLnN0YXR1c0NvZGUgPSA0MDA7XG4gICAgICAgIHJlc3BvbnNlLmJvZHkgPSBcIkFjY2VzcyBEZWNsaW5lZFwiO1xuICAgICAgfVxuICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsIHJlc3BvbnNlLCByZXNwb25zZS5ib2R5KTtcbiAgICAgIH1cbiAgICAgIHN0ci5lbmQoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBzdHI7XG59O1xuXG5mdW5jdGlvbiBnZXRSZXNwb25zZUhlYWRlck5hbWVzKHhocikge1xuICB2YXIgaGVhZGVyTGluZXMgPSAoeGhyLmdldEFsbFJlc3BvbnNlSGVhZGVycygpIHx8IFwiXCIpLnNwbGl0KC9bXFxyXFxuXSsvKTtcbiAgcmV0dXJuIF8ubWFwKGhlYWRlckxpbmVzLCBmdW5jdGlvbihoZWFkZXJMaW5lKSB7XG4gICAgcmV0dXJuIGhlYWRlckxpbmUuc3BsaXQoL1xccyo6LylbMF0udG9Mb3dlckNhc2UoKTtcbiAgfSk7XG59XG4iLCIvKipcbiAqIEBmaWxlIE1hbmFnZXMgYXN5bmNocm9ub3VzIG1ldGhvZCByZXNwb25zZSBjYWNoZVxuICogQGF1dGhvciBTaGluaWNoaSBUb21pdGEgPHNoaW5pY2hpLnRvbWl0YUBnbWFpbC5jb20+XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZXZlbnRzID0gcmVxdWlyZSgnZXZlbnRzJyksXG4gICAgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpLFxuICAgIF8gICAgICA9IHJlcXVpcmUoJ2xvZGFzaC9jb3JlJyk7XG5cbi8qKlxuICogQ2xhc3MgZm9yIG1hbmFnaW5nIGNhY2hlIGVudHJ5XG4gKlxuICogQHByaXZhdGVcbiAqIEBjbGFzc1xuICogQGNvbnN0cnVjdG9yXG4gKiBAdGVtcGxhdGUgVFxuICovXG52YXIgQ2FjaGVFbnRyeSA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLmZldGNoaW5nID0gZmFsc2U7XG59O1xuXG5pbmhlcml0cyhDYWNoZUVudHJ5LCBldmVudHMuRXZlbnRFbWl0dGVyKTtcblxuLyoqXG4gKiBHZXQgdmFsdWUgaW4gdGhlIGNhY2hlIGVudHJ5XG4gKlxuICogQHBhcmFtIHtDYWxsYmFjay48VD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvbiBjYWxsYmFja2VkIHRoZSBjYWNoZSBlbnRyeSB1cGRhdGVkXG4gKiBAcmV0dXJucyB7VHx1bmRlZmluZWR9XG4gKi9cbkNhY2hlRW50cnkucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIGlmICghY2FsbGJhY2spIHtcbiAgICByZXR1cm4gdGhpcy5fdmFsdWU7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5vbmNlKCd2YWx1ZScsIGNhbGxiYWNrKTtcbiAgICBpZiAoIV8uaXNVbmRlZmluZWQodGhpcy5fdmFsdWUpKSB7XG4gICAgICB0aGlzLmVtaXQoJ3ZhbHVlJywgdGhpcy5fdmFsdWUpO1xuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBTZXQgdmFsdWUgaW4gdGhlIGNhY2hlIGVudHJ5XG4gKlxuICogQHBhcmFtIHtUfSBbdmFsdWVdIC0gQSB2YWx1ZSBmb3IgY2FjaGluZ1xuICovXG5DYWNoZUVudHJ5LnByb3RvdHlwZS5zZXQgPSBmdW5jdGlvbih2YWx1ZSkge1xuICB0aGlzLl92YWx1ZSA9IHZhbHVlO1xuICB0aGlzLmVtaXQoJ3ZhbHVlJywgdGhpcy5fdmFsdWUpO1xufTtcblxuLyoqXG4gKiBDbGVhciBjYWNoZWQgdmFsdWVcbiAqL1xuQ2FjaGVFbnRyeS5wcm90b3R5cGUuY2xlYXIgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5mZXRjaGluZyA9IGZhbHNlO1xuICBkZWxldGUgdGhpcy5fdmFsdWU7XG59O1xuXG5cbi8qKlxuICogQ2FjaGluZyBtYW5hZ2VyIGZvciBhc3luYyBtZXRob2RzXG4gKlxuICogQGNsYXNzXG4gKiBAY29uc3RydWN0b3JcbiAqL1xudmFyIENhY2hlID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuX2VudHJpZXMgPSB7fTtcbn07XG5cbi8qKlxuICogcmV0cml2ZSBjYWNoZSBlbnRyeSwgb3IgY3JlYXRlIGlmIG5vdCBleGlzdHMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IFtrZXldIC0gS2V5IG9mIGNhY2hlIGVudHJ5XG4gKiBAcmV0dXJucyB7Q2FjaGVFbnRyeX1cbiAqL1xuQ2FjaGUucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uKGtleSkge1xuICBpZiAoa2V5ICYmIHRoaXMuX2VudHJpZXNba2V5XSkge1xuICAgIHJldHVybiB0aGlzLl9lbnRyaWVzW2tleV07XG4gIH0gZWxzZSB7XG4gICAgdmFyIGVudHJ5ID0gbmV3IENhY2hlRW50cnkoKTtcbiAgICB0aGlzLl9lbnRyaWVzW2tleV0gPSBlbnRyeTtcbiAgICByZXR1cm4gZW50cnk7XG4gIH1cbn07XG5cbi8qKlxuICogY2xlYXIgY2FjaGUgZW50cmllcyBwcmVmaXggbWF0Y2hpbmcgZ2l2ZW4ga2V5XG4gKiBAcGFyYW0ge1N0cmluZ30gW2tleV0gLSBLZXkgcHJlZml4IG9mIGNhY2hlIGVudHJ5IHRvIGNsZWFyXG4gKi9cbkNhY2hlLnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uKGtleSkge1xuICBmb3IgKHZhciBrIGluIHRoaXMuX2VudHJpZXMpIHtcbiAgICBpZiAoIWtleSB8fCBrLmluZGV4T2Yoa2V5KSA9PT0gMCkge1xuICAgICAgdGhpcy5fZW50cmllc1trXS5jbGVhcigpO1xuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBjcmVhdGUgYW5kIHJldHVybiBjYWNoZSBrZXkgZnJvbSBuYW1lc3BhY2UgYW5kIHNlcmlhbGl6ZWQgYXJndW1lbnRzLlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gY3JlYXRlQ2FjaGVLZXkobmFtZXNwYWNlLCBhcmdzKSB7XG4gIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuYXBwbHkoYXJncyk7XG4gIHJldHVybiBuYW1lc3BhY2UgKyAnKCcgKyBfLm1hcChhcmdzLCBmdW5jdGlvbihhKXsgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGEpOyB9KS5qb2luKCcsJykgKyAnKSc7XG59XG5cbi8qKlxuICogRW5hYmxlIGNhY2hpbmcgZm9yIGFzeW5jIGNhbGwgZm4gdG8gaW50ZXJjZXB0IHRoZSByZXNwb25zZSBhbmQgc3RvcmUgaXQgdG8gY2FjaGUuXG4gKiBUaGUgb3JpZ2luYWwgYXN5bmMgY2FsbGwgZm4gaXMgYWx3YXlzIGludm9rZWQuXG4gKlxuICogQHByb3RlY3RlZFxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gLSBGdW5jdGlvbiB0byBjb3ZlcnQgY2FjaGVhYmxlXG4gKiBAcGFyYW0ge09iamVjdH0gW3Njb3BlXSAtIFNjb3BlIG9mIGZ1bmN0aW9uIGNhbGxcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSBPcHRpb25zXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn0gLSBDYWNoZWQgdmVyc2lvbiBvZiBmdW5jdGlvblxuICovXG5DYWNoZS5wcm90b3R5cGUubWFrZVJlc3BvbnNlQ2FjaGVhYmxlID0gZnVuY3Rpb24oZm4sIHNjb3BlLCBvcHRpb25zKSB7XG4gIHZhciBjYWNoZSA9IHRoaXM7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuYXBwbHkoYXJndW1lbnRzKTtcbiAgICB2YXIgY2FsbGJhY2sgPSBhcmdzLnBvcCgpO1xuICAgIGlmICghXy5pc0Z1bmN0aW9uKGNhbGxiYWNrKSkge1xuICAgICAgYXJncy5wdXNoKGNhbGxiYWNrKTtcbiAgICAgIGNhbGxiYWNrID0gbnVsbDtcbiAgICB9XG4gICAgdmFyIGtleSA9IF8uaXNTdHJpbmcob3B0aW9ucy5rZXkpID8gb3B0aW9ucy5rZXkgOlxuICAgICAgICAgICAgICBfLmlzRnVuY3Rpb24ob3B0aW9ucy5rZXkpID8gb3B0aW9ucy5rZXkuYXBwbHkoc2NvcGUsIGFyZ3MpIDpcbiAgICAgICAgICAgICAgY3JlYXRlQ2FjaGVLZXkob3B0aW9ucy5uYW1lc3BhY2UsIGFyZ3MpO1xuICAgIHZhciBlbnRyeSA9IGNhY2hlLmdldChrZXkpO1xuICAgIGVudHJ5LmZldGNoaW5nID0gdHJ1ZTtcbiAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgIGFyZ3MucHVzaChmdW5jdGlvbihlcnIsIHJlc3VsdCkge1xuICAgICAgICBlbnRyeS5zZXQoeyBlcnJvcjogZXJyLCByZXN1bHQ6IHJlc3VsdCB9KTtcbiAgICAgICAgY2FsbGJhY2soZXJyLCByZXN1bHQpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHZhciByZXQsIGVycm9yO1xuICAgIHRyeSB7XG4gICAgICByZXQgPSBmbi5hcHBseShzY29wZSB8fCB0aGlzLCBhcmdzKTtcbiAgICB9IGNhdGNoKGUpIHtcbiAgICAgIGVycm9yID0gZTtcbiAgICB9XG4gICAgaWYgKHJldCAmJiBfLmlzRnVuY3Rpb24ocmV0LnRoZW4pKSB7IC8vIGlmIHRoZSByZXR1cm5lZCB2YWx1ZSBpcyBwcm9taXNlXG4gICAgICBpZiAoIWNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiByZXQudGhlbihmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgICAgICBlbnRyeS5zZXQoeyBlcnJvcjogdW5kZWZpbmVkLCByZXN1bHQ6IHJlc3VsdCB9KTtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9LCBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICBlbnRyeS5zZXQoeyBlcnJvcjogZXJyLCByZXN1bHQ6IHVuZGVmaW5lZCB9KTtcbiAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHJldDtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgZW50cnkuc2V0KHsgZXJyb3I6IGVycm9yLCByZXN1bHQ6IHJldCB9KTtcbiAgICAgIGlmIChlcnJvcikgeyB0aHJvdyBlcnJvcjsgfVxuICAgICAgcmV0dXJuIHJldDtcbiAgICB9XG4gIH07XG59O1xuXG4vKipcbiAqIEVuYWJsZSBjYWNoaW5nIGZvciBhc3luYyBjYWxsIGZuIHRvIGxvb2t1cCB0aGUgcmVzcG9uc2UgY2FjaGUgZmlyc3QsIHRoZW4gaW52b2tlIG9yaWdpbmFsIGlmIG5vIGNhY2hlZCB2YWx1ZS5cbiAqXG4gKiBAcHJvdGVjdGVkXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiAtIEZ1bmN0aW9uIHRvIGNvdmVydCBjYWNoZWFibGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBbc2NvcGVdIC0gU2NvcGUgb2YgZnVuY3Rpb24gY2FsbFxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIE9wdGlvbnNcbiAqIEByZXR1cm4ge0Z1bmN0aW9ufSAtIENhY2hlZCB2ZXJzaW9uIG9mIGZ1bmN0aW9uXG4gKi9cbkNhY2hlLnByb3RvdHlwZS5tYWtlQ2FjaGVhYmxlID0gZnVuY3Rpb24oZm4sIHNjb3BlLCBvcHRpb25zKSB7XG4gIHZhciBjYWNoZSA9IHRoaXM7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICB2YXIgJGZuID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuYXBwbHkoYXJndW1lbnRzKTtcbiAgICB2YXIgY2FsbGJhY2sgPSBhcmdzLnBvcCgpO1xuICAgIGlmICghXy5pc0Z1bmN0aW9uKGNhbGxiYWNrKSkge1xuICAgICAgYXJncy5wdXNoKGNhbGxiYWNrKTtcbiAgICB9XG4gICAgdmFyIGtleSA9IF8uaXNTdHJpbmcob3B0aW9ucy5rZXkpID8gb3B0aW9ucy5rZXkgOlxuICAgICAgICAgICAgICBfLmlzRnVuY3Rpb24ob3B0aW9ucy5rZXkpID8gb3B0aW9ucy5rZXkuYXBwbHkoc2NvcGUsIGFyZ3MpIDpcbiAgICAgICAgICAgICAgY3JlYXRlQ2FjaGVLZXkob3B0aW9ucy5uYW1lc3BhY2UsIGFyZ3MpO1xuICAgIHZhciBlbnRyeSA9IGNhY2hlLmdldChrZXkpO1xuICAgIGlmICghXy5pc0Z1bmN0aW9uKGNhbGxiYWNrKSkgeyAvLyBpZiBjYWxsYmFjayBpcyBub3QgZ2l2ZW4gaW4gbGFzdCBhcmcsIHJldHVybiBjYWNoZWQgcmVzdWx0IChpbW1lZGlhdGUpLlxuICAgICAgdmFyIHZhbHVlID0gZW50cnkuZ2V0KCk7XG4gICAgICBpZiAoIXZhbHVlKSB7IHRocm93IG5ldyBFcnJvcignRnVuY3Rpb24gY2FsbCByZXN1bHQgaXMgbm90IGNhY2hlZCB5ZXQuJyk7IH1cbiAgICAgIGlmICh2YWx1ZS5lcnJvcikgeyB0aHJvdyB2YWx1ZS5lcnJvcjsgfVxuICAgICAgcmV0dXJuIHZhbHVlLnJlc3VsdDtcbiAgICB9XG4gICAgZW50cnkuZ2V0KGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICBjYWxsYmFjayh2YWx1ZS5lcnJvciwgdmFsdWUucmVzdWx0KTtcbiAgICB9KTtcbiAgICBpZiAoIWVudHJ5LmZldGNoaW5nKSB7IC8vIG9ubHkgd2hlbiBubyBvdGhlciBjbGllbnQgaXMgY2FsbGluZyBmdW5jdGlvblxuICAgICAgZW50cnkuZmV0Y2hpbmcgPSB0cnVlO1xuICAgICAgYXJncy5wdXNoKGZ1bmN0aW9uKGVyciwgcmVzdWx0KSB7XG4gICAgICAgIGVudHJ5LnNldCh7IGVycm9yOiBlcnIsIHJlc3VsdDogcmVzdWx0IH0pO1xuICAgICAgfSk7XG4gICAgICBmbi5hcHBseShzY29wZSB8fCB0aGlzLCBhcmdzKTtcbiAgICB9XG4gIH07XG4gICRmbi5jbGVhciA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBrZXkgPSBfLmlzU3RyaW5nKG9wdGlvbnMua2V5KSA/IG9wdGlvbnMua2V5IDpcbiAgICAgICAgICAgICAgXy5pc0Z1bmN0aW9uKG9wdGlvbnMua2V5KSA/IG9wdGlvbnMua2V5LmFwcGx5KHNjb3BlLCBhcmd1bWVudHMpIDpcbiAgICAgICAgICAgICAgY3JlYXRlQ2FjaGVLZXkob3B0aW9ucy5uYW1lc3BhY2UsIGFyZ3VtZW50cyk7XG4gICAgY2FjaGUuY2xlYXIoa2V5KTtcbiAgfTtcbiAgcmV0dXJuICRmbjtcbn07XG5cblxubW9kdWxlLmV4cG9ydHMgPSBDYWNoZTtcbiIsIi8qZ2xvYmFsIEJ1ZmZlciAqL1xuLyoqXG4gKiBAZmlsZSBDb25uZWN0aW9uIGNsYXNzIHRvIGtlZXAgdGhlIEFQSSBzZXNzaW9uIGluZm9ybWF0aW9uIGFuZCBtYW5hZ2UgcmVxdWVzdHNcbiAqIEBhdXRob3IgU2hpbmljaGkgVG9taXRhIDxzaGluaWNoaS50b21pdGFAZ21haWwuY29tPlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGV2ZW50cyAgPSByZXF1aXJlKCdldmVudHMnKSxcbiAgICBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyksXG4gICAgXyAgICAgICA9IHJlcXVpcmUoJ2xvZGFzaC9jb3JlJyksXG4gICAgUHJvbWlzZSA9IHJlcXVpcmUoJy4vcHJvbWlzZScpLFxuICAgIExvZ2dlciAgPSByZXF1aXJlKCcuL2xvZ2dlcicpLFxuICAgIE9BdXRoMiAgPSByZXF1aXJlKCcuL29hdXRoMicpLFxuICAgIFF1ZXJ5ICAgPSByZXF1aXJlKCcuL3F1ZXJ5JyksXG4gICAgU09iamVjdCA9IHJlcXVpcmUoJy4vc29iamVjdCcpLFxuICAgIFF1aWNrQWN0aW9uID0gcmVxdWlyZSgnLi9xdWljay1hY3Rpb24nKSxcbiAgICBIdHRwQXBpID0gcmVxdWlyZSgnLi9odHRwLWFwaScpLFxuICAgIFRyYW5zcG9ydCA9IHJlcXVpcmUoJy4vdHJhbnNwb3J0JyksXG4gICAgUHJvY2VzcyA9IHJlcXVpcmUoJy4vcHJvY2VzcycpLFxuICAgIENhY2hlICAgPSByZXF1aXJlKCcuL2NhY2hlJyk7XG5cbnZhciBkZWZhdWx0cyA9IHtcbiAgbG9naW5Vcmw6IFwiaHR0cHM6Ly9sb2dpbi5zYWxlc2ZvcmNlLmNvbVwiLFxuICBpbnN0YW5jZVVybDogXCJcIixcbiAgdmVyc2lvbjogXCI0Mi4wXCJcbn07XG5cbi8qXG4gKiBDb25zdGFudCBvZiBtYXhpbXVtIHJlY29yZHMgbnVtIGluIERNTCBvcGVyYXRpb24gKHVwZGF0ZS9kZWxldGUpXG4gKi9cbnZhciBNQVhfRE1MX0NPVU5UID0gMjAwO1xuXG5cbi8qKlxuICogQ29ubmVjdGlvbiBjbGFzcyB0byBrZWVwIHRoZSBBUEkgc2Vzc2lvbiBpbmZvcm1hdGlvbiBhbmQgbWFuYWdlIHJlcXVlc3RzXG4gKlxuICogQGNvbnN0cnVjdG9yXG4gKiBAZXh0ZW5kcyBldmVudHMuRXZlbnRFbWl0dGVyXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gQ29ubmVjdGlvbiBvcHRpb25zXG4gKiBAcGFyYW0ge09BdXRoMnxPYmplY3R9IFtvcHRpb25zLm9hdXRoMl0gLSBPQXV0aDIgaW5zdGFuY2Ugb3Igb3B0aW9ucyB0byBiZSBwYXNzZWQgdG8gT0F1dGgyIGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMubG9nTGV2ZWxdIC0gT3V0cHV0IGxvZ2dpbmcgbGV2ZWwgKERFQlVHfElORk98V0FSTnxFUlJPUnxGQVRBTClcbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy52ZXJzaW9uXSAtIFNhbGVzZm9yY2UgQVBJIFZlcnNpb24gKHdpdGhvdXQgXCJ2XCIgcHJlZml4KVxuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLm1heFJlcXVlc3RdIC0gTWF4IG51bWJlciBvZiByZXF1ZXN0cyBhbGxvd2VkIGluIHBhcmFsbGVsIGNhbGxcbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5sb2dpblVybF0gLSBTYWxlc2ZvcmNlIExvZ2luIFNlcnZlciBVUkwgKGUuZy4gaHR0cHM6Ly9sb2dpbi5zYWxlc2ZvcmNlLmNvbS8pXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuaW5zdGFuY2VVcmxdIC0gU2FsZXNmb3JjZSBJbnN0YW5jZSBVUkwgKGUuZy4gaHR0cHM6Ly9uYTEuc2FsZXNmb3JjZS5jb20vKVxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLnNlcnZlclVybF0gLSBTYWxlc2ZvcmNlIFNPQVAgc2VydmljZSBlbmRwb2ludCBVUkwgKGUuZy4gaHR0cHM6Ly9uYTEuc2FsZXNmb3JjZS5jb20vc2VydmljZXMvU29hcC91LzI4LjApXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYWNjZXNzVG9rZW5dIC0gU2FsZXNmb3JjZSBPQXV0aDIgYWNjZXNzIHRva2VuXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuc2Vzc2lvbklkXSAtIFNhbGVzZm9yY2Ugc2Vzc2lvbiBJRFxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLnJlZnJlc2hUb2tlbl0gLSBTYWxlc2ZvcmNlIE9BdXRoMiByZWZyZXNoIHRva2VuXG4gKiBAcGFyYW0ge1N0cmluZ3xPYmplY3R9IFtvcHRpb25zLnNpZ25lZFJlcXVlc3RdIC0gU2FsZXNmb3JjZSBDYW52YXMgc2lnbmVkIHJlcXVlc3QgKFJhdyBCYXNlNjQgc3RyaW5nLCBKU09OIHN0cmluZywgb3IgZGVzZXJpYWxpemVkIEpTT04pXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMucHJveHlVcmxdIC0gQ3Jvc3MtZG9tYWluIHByb3h5IHNlcnZlciBVUkwsIHVzZWQgaW4gYnJvd3NlciBjbGllbnQsIG5vbiBWaXN1YWxmb3JjZSBhcHAuXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuaHR0cFByb3h5XSAtIFVSTCBvZiBIVFRQIHByb3h5IHNlcnZlciwgdXNlZCBpbiBzZXJ2ZXIgY2xpZW50LlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zLmNhbGxPcHRpb25zXSAtIENhbGwgb3B0aW9ucyB1c2VkIGluIGVhY2ggU09BUC9SRVNUIEFQSSByZXF1ZXN0LiBTZWUgbWFudWFsLlxuICovXG52YXIgQ29ubmVjdGlvbiA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICB0aGlzLl9sb2dnZXIgPSBuZXcgTG9nZ2VyKG9wdGlvbnMubG9nTGV2ZWwpO1xuXG4gIHZhciBvYXV0aDIgPSBvcHRpb25zLm9hdXRoMiB8fCB7XG4gICAgbG9naW5VcmwgOiBvcHRpb25zLmxvZ2luVXJsLFxuICAgIGNsaWVudElkIDogb3B0aW9ucy5jbGllbnRJZCxcbiAgICBjbGllbnRTZWNyZXQgOiBvcHRpb25zLmNsaWVudFNlY3JldCxcbiAgICByZWRpcmVjdFVyaSA6IG9wdGlvbnMucmVkaXJlY3RVcmksXG4gICAgcHJveHlVcmw6IG9wdGlvbnMucHJveHlVcmwsXG4gICAgaHR0cFByb3h5OiBvcHRpb25zLmh0dHBQcm94eVxuICB9O1xuXG4gIC8qKlxuICAgKiBPQXV0aDIgb2JqZWN0XG4gICAqIEBtZW1iZXIge09BdXRoMn0gQ29ubmVjdGlvbiNvYXV0aDJcbiAgICovXG4gIHRoaXMub2F1dGgyID0gb2F1dGgyID0gb2F1dGgyIGluc3RhbmNlb2YgT0F1dGgyID8gb2F1dGgyIDogbmV3IE9BdXRoMihvYXV0aDIpO1xuXG4gIHRoaXMubG9naW5VcmwgPSBvcHRpb25zLmxvZ2luVXJsIHx8IG9hdXRoMi5sb2dpblVybCB8fCBkZWZhdWx0cy5sb2dpblVybDtcbiAgdGhpcy52ZXJzaW9uID0gb3B0aW9ucy52ZXJzaW9uIHx8IGRlZmF1bHRzLnZlcnNpb247XG4gIHRoaXMubWF4UmVxdWVzdCA9IG9wdGlvbnMubWF4UmVxdWVzdCB8fCB0aGlzLm1heFJlcXVlc3QgfHwgMTA7XG5cbiAgLyoqIEBwcml2YXRlICovXG4gIGlmIChvcHRpb25zLnByb3h5VXJsKSB7XG4gICAgdGhpcy5fdHJhbnNwb3J0ID0gbmV3IFRyYW5zcG9ydC5Qcm94eVRyYW5zcG9ydChvcHRpb25zLnByb3h5VXJsKTtcbiAgfSBlbHNlIGlmIChvcHRpb25zLmh0dHBQcm94eSkge1xuICAgIHRoaXMuX3RyYW5zcG9ydCA9IG5ldyBUcmFuc3BvcnQuSHR0cFByb3h5VHJhbnNwb3J0KG9wdGlvbnMuaHR0cFByb3h5KTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLl90cmFuc3BvcnQgPSBuZXcgVHJhbnNwb3J0KCk7XG4gIH1cblxuICB0aGlzLmNhbGxPcHRpb25zID0gb3B0aW9ucy5jYWxsT3B0aW9ucztcblxuICAvKlxuICAgKiBGaXJlIGNvbm5lY3Rpb246bmV3IGV2ZW50IHRvIG5vdGlmeSBqc2ZvcmNlIHBsdWdpbiBtb2R1bGVzXG4gICAqL1xuICB2YXIganNmb3JjZSA9IHJlcXVpcmUoJy4vY29yZScpO1xuICBqc2ZvcmNlLmVtaXQoJ2Nvbm5lY3Rpb246bmV3JywgdGhpcyk7XG5cbiAgLyoqXG4gICAqIFN0cmVhbWluZyBBUEkgb2JqZWN0XG4gICAqIEBtZW1iZXIge1N0cmVhbWluZ30gQ29ubmVjdGlvbiNzdHJlYW1pbmdcbiAgICovXG4gIC8vIHRoaXMuc3RyZWFtaW5nID0gbmV3IFN0cmVhbWluZyh0aGlzKTtcbiAgLyoqXG4gICAqIEJ1bGsgQVBJIG9iamVjdFxuICAgKiBAbWVtYmVyIHtCdWxrfSBDb25uZWN0aW9uI2J1bGtcbiAgICovXG4gIC8vIHRoaXMuYnVsayA9IG5ldyBCdWxrKHRoaXMpO1xuICAvKipcbiAgICogVG9vbGluZyBBUEkgb2JqZWN0XG4gICAqIEBtZW1iZXIge1Rvb2xpbmd9IENvbm5lY3Rpb24jdG9vbGluZ1xuICAgKi9cbiAgLy8gdGhpcy50b29saW5nID0gbmV3IFRvb2xpbmcodGhpcyk7XG4gIC8qKlxuICAgKiBBbmFseXRpY3MgQVBJIG9iamVjdFxuICAgKiBAbWVtYmVyIHtBbmFseXRpY3N9IENvbm5lY3Rpb24jYW5hbHl0aWNzXG4gICAqL1xuICAvLyB0aGlzLmFuYWx5dGljcyA9IG5ldyBBbmFseXRpY3ModGhpcyk7XG4gIC8qKlxuICAgKiBDaGF0dGVyIEFQSSBvYmplY3RcbiAgICogQG1lbWJlciB7Q2hhdHRlcn0gQ29ubmVjdGlvbiNjaGF0dGVyXG4gICAqL1xuICAvLyB0aGlzLmNoYXR0ZXIgPSBuZXcgQ2hhdHRlcih0aGlzKTtcbiAgLyoqXG4gICAqIE1ldGFkYXRhIEFQSSBvYmplY3RcbiAgICogQG1lbWJlciB7TWV0YWRhdGF9IENvbm5lY3Rpb24jbWV0YWRhdGFcbiAgICovXG4gIC8vIHRoaXMubWV0YWRhdGEgPSBuZXcgTWV0YWRhdGEodGhpcyk7XG5cbiAgLyoqXG4gICAqIFNPQVAgQVBJIG9iamVjdFxuICAgKiBAbWVtYmVyIHtTb2FwQXBpfSBDb25uZWN0aW9uI3NvYXBcbiAgICovXG4gIC8vIHRoaXMuc29hcCA9IG5ldyBTb2FwQXBpKHRoaXMpO1xuXG4gIC8qKlxuICAgKiBBcGV4IFJFU1QgQVBJIG9iamVjdFxuICAgKiBAbWVtYmVyIHtBcGV4fSBDb25uZWN0aW9uI2FwZXhcbiAgICovXG4gIC8vIHRoaXMuYXBleCA9IG5ldyBBcGV4KHRoaXMpO1xuXG4gIC8qKlxuICAgKiBAbWVtYmVyIHtQcm9jZXNzfSBDb25uZWN0aW9uI3Byb2Nlc3NcbiAgICovXG4gIHRoaXMucHJvY2VzcyA9IG5ldyBQcm9jZXNzKHRoaXMpO1xuXG4gIC8qKlxuICAgKiBDYWNoZSBvYmplY3QgZm9yIHJlc3VsdFxuICAgKiBAbWVtYmVyIHtDYWNoZX0gQ29ubmVjdGlvbiNjYWNoZVxuICAgKi9cbiAgdGhpcy5jYWNoZSA9IG5ldyBDYWNoZSgpO1xuXG4gIC8vIEFsbG93IHRvIGRlbGVnYXRlIGNvbm5lY3Rpb24gcmVmcmVzaCB0byBvdXRlciBmdW5jdGlvblxuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciByZWZyZXNoRm4gPSBvcHRpb25zLnJlZnJlc2hGbjtcbiAgaWYgKCFyZWZyZXNoRm4gJiYgdGhpcy5vYXV0aDIuY2xpZW50SWQpIHtcbiAgICByZWZyZXNoRm4gPSBvYXV0aFJlZnJlc2hGbjtcbiAgfVxuICBpZiAocmVmcmVzaEZuKSB7XG4gICAgdGhpcy5fcmVmcmVzaERlbGVnYXRlID0gbmV3IEh0dHBBcGkuU2Vzc2lvblJlZnJlc2hEZWxlZ2F0ZSh0aGlzLCByZWZyZXNoRm4pO1xuICB9XG5cbiAgdmFyIGNhY2hlT3B0aW9ucyA9IHtcbiAgICBrZXk6IGZ1bmN0aW9uKHR5cGUpIHsgcmV0dXJuIHR5cGUgPyBcImRlc2NyaWJlLlwiICsgdHlwZSA6IFwiZGVzY3JpYmVcIjsgfVxuICB9O1xuICB0aGlzLmRlc2NyaWJlJCA9IHRoaXMuY2FjaGUubWFrZUNhY2hlYWJsZSh0aGlzLmRlc2NyaWJlLCB0aGlzLCBjYWNoZU9wdGlvbnMpO1xuICB0aGlzLmRlc2NyaWJlID0gdGhpcy5jYWNoZS5tYWtlUmVzcG9uc2VDYWNoZWFibGUodGhpcy5kZXNjcmliZSwgdGhpcywgY2FjaGVPcHRpb25zKTtcbiAgdGhpcy5kZXNjcmliZVNPYmplY3QkID0gdGhpcy5kZXNjcmliZSQ7XG4gIHRoaXMuZGVzY3JpYmVTT2JqZWN0ID0gdGhpcy5kZXNjcmliZTtcblxuICBjYWNoZU9wdGlvbnMgPSB7IGtleTogJ2Rlc2NyaWJlR2xvYmFsJyB9O1xuICB0aGlzLmRlc2NyaWJlR2xvYmFsJCA9IHRoaXMuY2FjaGUubWFrZUNhY2hlYWJsZSh0aGlzLmRlc2NyaWJlR2xvYmFsLCB0aGlzLCBjYWNoZU9wdGlvbnMpO1xuICB0aGlzLmRlc2NyaWJlR2xvYmFsID0gdGhpcy5jYWNoZS5tYWtlUmVzcG9uc2VDYWNoZWFibGUodGhpcy5kZXNjcmliZUdsb2JhbCwgdGhpcywgY2FjaGVPcHRpb25zKTtcblxuICB0aGlzLmluaXRpYWxpemUob3B0aW9ucyk7XG59O1xuXG5pbmhlcml0cyhDb25uZWN0aW9uLCBldmVudHMuRXZlbnRFbWl0dGVyKTtcblxuLyoqXG4gKiBJbml0aWFsaXplIGNvbm5lY3Rpb24uXG4gKlxuICogQHByb3RlY3RlZFxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgLSBJbml0aWFsaXphdGlvbiBvcHRpb25zXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuaW5zdGFuY2VVcmxdIC0gU2FsZXNmb3JjZSBJbnN0YW5jZSBVUkwgKGUuZy4gaHR0cHM6Ly9uYTEuc2FsZXNmb3JjZS5jb20vKVxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLnNlcnZlclVybF0gLSBTYWxlc2ZvcmNlIFNPQVAgc2VydmljZSBlbmRwb2ludCBVUkwgKGUuZy4gaHR0cHM6Ly9uYTEuc2FsZXNmb3JjZS5jb20vc2VydmljZXMvU29hcC91LzI4LjApXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYWNjZXNzVG9rZW5dIC0gU2FsZXNmb3JjZSBPQXV0aDIgYWNjZXNzIHRva2VuXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuc2Vzc2lvbklkXSAtIFNhbGVzZm9yY2Ugc2Vzc2lvbiBJRFxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLnJlZnJlc2hUb2tlbl0gLSBTYWxlc2ZvcmNlIE9BdXRoMiByZWZyZXNoIHRva2VuXG4gKiBAcGFyYW0ge1N0cmluZ3xPYmplY3R9IFtvcHRpb25zLnNpZ25lZFJlcXVlc3RdIC0gU2FsZXNmb3JjZSBDYW52YXMgc2lnbmVkIHJlcXVlc3QgKFJhdyBCYXNlNjQgc3RyaW5nLCBKU09OIHN0cmluZywgb3IgZGVzZXJpYWxpemVkIEpTT04pXG4gKiBAcGFyYW0ge1VzZXJJbmZvfSBbb3B0aW9ucy51c2VySW5mb10gLSBMb2dnZWQgaW4gdXNlciBpbmZvcm1hdGlvblxuICovXG5Db25uZWN0aW9uLnByb3RvdHlwZS5pbml0aWFsaXplID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMuaW5zdGFuY2VVcmwgJiYgb3B0aW9ucy5zZXJ2ZXJVcmwpIHtcbiAgICBvcHRpb25zLmluc3RhbmNlVXJsID0gb3B0aW9ucy5zZXJ2ZXJVcmwuc3BsaXQoJy8nKS5zbGljZSgwLCAzKS5qb2luKCcvJyk7XG4gIH1cbiAgdGhpcy5pbnN0YW5jZVVybCA9IG9wdGlvbnMuaW5zdGFuY2VVcmwgfHwgb3B0aW9ucy5zZXJ2ZXJVcmwgfHwgdGhpcy5pbnN0YW5jZVVybCB8fCBkZWZhdWx0cy5pbnN0YW5jZVVybDtcblxuICB0aGlzLmFjY2Vzc1Rva2VuID0gb3B0aW9ucy5zZXNzaW9uSWQgfHwgb3B0aW9ucy5hY2Nlc3NUb2tlbiB8fCB0aGlzLmFjY2Vzc1Rva2VuO1xuICB0aGlzLnJlZnJlc2hUb2tlbiA9IG9wdGlvbnMucmVmcmVzaFRva2VuIHx8IHRoaXMucmVmcmVzaFRva2VuO1xuICBpZiAodGhpcy5yZWZyZXNoVG9rZW4gJiYgIXRoaXMuX3JlZnJlc2hEZWxlZ2F0ZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIlJlZnJlc2ggdG9rZW4gaXMgc3BlY2lmaWVkIHdpdGhvdXQgb2F1dGgyIGNsaWVudCBpbmZvcm1hdGlvbiBvciByZWZyZXNoIGZ1bmN0aW9uXCIpO1xuICB9XG5cbiAgdGhpcy5zaWduZWRSZXF1ZXN0ID0gb3B0aW9ucy5zaWduZWRSZXF1ZXN0ICYmIHBhcnNlU2lnbmVkUmVxdWVzdChvcHRpb25zLnNpZ25lZFJlcXVlc3QpO1xuICBpZiAodGhpcy5zaWduZWRSZXF1ZXN0KSB7XG4gICAgdGhpcy5hY2Nlc3NUb2tlbiA9IHRoaXMuc2lnbmVkUmVxdWVzdC5jbGllbnQub2F1dGhUb2tlbjtcbiAgICBpZiAoVHJhbnNwb3J0LkNhbnZhc1RyYW5zcG9ydC5zdXBwb3J0ZWQpIHtcbiAgICAgIHRoaXMuX3RyYW5zcG9ydCA9IG5ldyBUcmFuc3BvcnQuQ2FudmFzVHJhbnNwb3J0KHRoaXMuc2lnbmVkUmVxdWVzdCk7XG4gICAgfVxuICB9XG5cbiAgaWYgKG9wdGlvbnMudXNlckluZm8pIHtcbiAgICB0aGlzLnVzZXJJbmZvID0gb3B0aW9ucy51c2VySW5mbztcbiAgfVxuXG4gIHRoaXMubGltaXRJbmZvID0ge307XG5cbiAgdGhpcy5zb2JqZWN0cyA9IHt9O1xuICB0aGlzLmNhY2hlLmNsZWFyKCk7XG4gIHRoaXMuY2FjaGUuZ2V0KCdkZXNjcmliZUdsb2JhbCcpLnJlbW92ZUFsbExpc3RlbmVycygndmFsdWUnKTtcbiAgdGhpcy5jYWNoZS5nZXQoJ2Rlc2NyaWJlR2xvYmFsJykub24oJ3ZhbHVlJywgXy5iaW5kKGZ1bmN0aW9uKHJlcykge1xuICAgIGlmIChyZXMucmVzdWx0KSB7XG4gICAgICB2YXIgdHlwZXMgPSBfLm1hcChyZXMucmVzdWx0LnNvYmplY3RzLCBmdW5jdGlvbihzbykgeyByZXR1cm4gc28ubmFtZTsgfSk7XG4gICAgICB0eXBlcy5mb3JFYWNoKHRoaXMuc29iamVjdCwgdGhpcyk7XG4gICAgfVxuICB9LCB0aGlzKSk7XG5cbiAgaWYgKHRoaXMudG9vbGluZykge1xuICAgIHRoaXMudG9vbGluZy5pbml0aWFsaXplKCk7XG4gIH1cblxuICB0aGlzLl9zZXNzaW9uVHlwZSA9IG9wdGlvbnMuc2Vzc2lvbklkID8gXCJzb2FwXCIgOiBcIm9hdXRoMlwiO1xuXG59O1xuXG4vKiogQHByaXZhdGUgKiovXG5mdW5jdGlvbiBvYXV0aFJlZnJlc2hGbihjb25uLCBjYWxsYmFjaykge1xuICBjb25uLm9hdXRoMi5yZWZyZXNoVG9rZW4oY29ubi5yZWZyZXNoVG9rZW4sIGZ1bmN0aW9uKGVyciwgcmVzKSB7XG4gICAgaWYgKGVycikgeyByZXR1cm4gY2FsbGJhY2soZXJyKTsgfVxuICAgIHZhciB1c2VySW5mbyA9IHBhcnNlSWRVcmwocmVzLmlkKTtcbiAgICBjb25uLmluaXRpYWxpemUoe1xuICAgICAgaW5zdGFuY2VVcmwgOiByZXMuaW5zdGFuY2VfdXJsLFxuICAgICAgYWNjZXNzVG9rZW4gOiByZXMuYWNjZXNzX3Rva2VuLFxuICAgICAgdXNlckluZm8gOiB1c2VySW5mb1xuICAgIH0pO1xuICAgIGNhbGxiYWNrKG51bGwsIHJlcy5hY2Nlc3NfdG9rZW4sIHJlcyk7XG4gIH0pO1xufVxuXG4vKiogQHByaXZhdGUgKiovXG5mdW5jdGlvbiBwYXJzZVNpZ25lZFJlcXVlc3Qoc3IpIHtcbiAgaWYgKF8uaXNTdHJpbmcoc3IpKSB7XG4gICAgaWYgKHNyWzBdID09PSAneycpIHsgLy8gbWlnaHQgYmUgSlNPTlxuICAgICAgcmV0dXJuIEpTT04ucGFyc2Uoc3IpO1xuICAgIH0gZWxzZSB7IC8vIG1pZ2h0IGJlIG9yaWdpbmFsIGJhc2U2NC1lbmNvZGVkIHNpZ25lZCByZXF1ZXN0XG4gICAgICB2YXIgbXNnID0gc3Iuc3BsaXQoJy4nKS5wb3AoKTsgLy8gcmV0cmlldmUgbGF0dGVyIHBhcnRcbiAgICAgIHZhciBqc29uID0gQnVmZmVyLmZyb20obXNnLCAnYmFzZTY0JykudG9TdHJpbmcoJ3V0Zi04Jyk7XG4gICAgICByZXR1cm4gSlNPTi5wYXJzZShqc29uKTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgcmV0dXJuIHNyO1xufVxuXG5cbi8qKiBAcHJpdmF0ZSAqKi9cbkNvbm5lY3Rpb24ucHJvdG90eXBlLl9iYXNlVXJsID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBbIHRoaXMuaW5zdGFuY2VVcmwsIFwic2VydmljZXMvZGF0YVwiLCBcInZcIiArIHRoaXMudmVyc2lvbiBdLmpvaW4oJy8nKTtcbn07XG5cbi8qKlxuICogQ29udmVydCBwYXRoIHRvIGFic29sdXRlIHVybFxuICogQHByaXZhdGVcbiAqL1xuQ29ubmVjdGlvbi5wcm90b3R5cGUuX25vcm1hbGl6ZVVybCA9IGZ1bmN0aW9uKHVybCkge1xuICBpZiAodXJsWzBdID09PSAnLycpIHtcbiAgICBpZiAodXJsLmluZGV4T2YoJy9zZXJ2aWNlcy8nKSA9PT0gMCkge1xuICAgICAgcmV0dXJuIHRoaXMuaW5zdGFuY2VVcmwgKyB1cmw7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB0aGlzLl9iYXNlVXJsKCkgKyB1cmw7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHJldHVybiB1cmw7XG4gIH1cbn07XG5cbi8qKlxuICogU2VuZCBSRVNUIEFQSSByZXF1ZXN0IHdpdGggZ2l2ZW4gSFRUUCByZXF1ZXN0IGluZm8sIHdpdGggY29ubmVjdGVkIHNlc3Npb24gaW5mb3JtYXRpb24uXG4gKlxuICogRW5kcG9pbnQgVVJMIGNhbiBiZSBhYnNvbHV0ZSBVUkwgKCdodHRwczovL25hMS5zYWxlc2ZvcmNlLmNvbS9zZXJ2aWNlcy9kYXRhL3YzMi4wL3NvYmplY3RzL0FjY291bnQvZGVzY3JpYmUnKVxuICogLCByZWxhdGl2ZSBwYXRoIGZyb20gcm9vdCAoJy9zZXJ2aWNlcy9kYXRhL3YzMi4wL3NvYmplY3RzL0FjY291bnQvZGVzY3JpYmUnKVxuICogLCBvciByZWxhdGl2ZSBwYXRoIGZyb20gdmVyc2lvbiByb290ICgnL3NvYmplY3RzL0FjY291bnQvZGVzY3JpYmUnKS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xPYmplY3R9IHJlcXVlc3QgLSBIVFRQIHJlcXVlc3Qgb2JqZWN0IG9yIFVSTCB0byBHRVQgcmVxdWVzdFxuICogQHBhcmFtIHtTdHJpbmd9IHJlcXVlc3QubWV0aG9kIC0gSFRUUCBtZXRob2QgVVJMIHRvIHNlbmQgSFRUUCByZXF1ZXN0XG4gKiBAcGFyYW0ge1N0cmluZ30gcmVxdWVzdC51cmwgLSBVUkwgdG8gc2VuZCBIVFRQIHJlcXVlc3RcbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVxdWVzdC5oZWFkZXJzXSAtIEhUVFAgcmVxdWVzdCBoZWFkZXJzIGluIGhhc2ggb2JqZWN0IChrZXktdmFsdWUpXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gSFRUUCBBUEkgcmVxdWVzdCBvcHRpb25zXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxPYmplY3Q+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxPYmplY3Q+fVxuICovXG5Db25uZWN0aW9uLnByb3RvdHlwZS5yZXF1ZXN0ID0gZnVuY3Rpb24ocmVxdWVzdCwgb3B0aW9ucywgY2FsbGJhY2spIHtcbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2FsbGJhY2sgPSBvcHRpb25zO1xuICAgIG9wdGlvbnMgPSBudWxsO1xuICB9XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgLy8gaWYgcmVxdWVzdCBpcyBzaW1wbGUgc3RyaW5nLCByZWdhcmQgaXQgYXMgdXJsIGluIEdFVCBtZXRob2RcbiAgaWYgKF8uaXNTdHJpbmcocmVxdWVzdCkpIHtcbiAgICByZXF1ZXN0ID0geyBtZXRob2Q6ICdHRVQnLCB1cmw6IHJlcXVlc3QgfTtcbiAgfVxuICAvLyBpZiB1cmwgaXMgZ2l2ZW4gaW4gcmVsYXRpdmUgcGF0aCwgcHJlcGVuZCBiYXNlIHVybCBvciBpbnN0YW5jZSB1cmwgYmVmb3JlLlxuICByZXF1ZXN0LnVybCA9IHRoaXMuX25vcm1hbGl6ZVVybChyZXF1ZXN0LnVybCk7XG5cbiAgdmFyIGh0dHBBcGkgPSBuZXcgSHR0cEFwaSh0aGlzLCBvcHRpb25zKTtcblxuICAvLyBsb2cgYXBpIHVzYWdlIGFuZCBpdHMgcXVvdGFcbiAgaHR0cEFwaS5vbigncmVzcG9uc2UnLCBmdW5jdGlvbihyZXNwb25zZSkge1xuICAgIGlmIChyZXNwb25zZS5oZWFkZXJzICYmIHJlc3BvbnNlLmhlYWRlcnNbXCJzZm9yY2UtbGltaXQtaW5mb1wiXSkge1xuICAgICAgdmFyIGFwaVVzYWdlID0gcmVzcG9uc2UuaGVhZGVyc1tcInNmb3JjZS1saW1pdC1pbmZvXCJdLm1hdGNoKC9hcGlcXC11c2FnZT0oXFxkKylcXC8oXFxkKykvKTtcbiAgICAgIGlmIChhcGlVc2FnZSkge1xuICAgICAgICBzZWxmLmxpbWl0SW5mbyA9IHtcbiAgICAgICAgICBhcGlVc2FnZToge1xuICAgICAgICAgICAgdXNlZDogcGFyc2VJbnQoYXBpVXNhZ2VbMV0sIDEwKSxcbiAgICAgICAgICAgIGxpbWl0OiBwYXJzZUludChhcGlVc2FnZVsyXSwgMTApXG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG4gIHJldHVybiBodHRwQXBpLnJlcXVlc3QocmVxdWVzdCkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBTZW5kIEhUVFAgR0VUIHJlcXVlc3RcbiAqXG4gKiBFbmRwb2ludCBVUkwgY2FuIGJlIGFic29sdXRlIFVSTCAoJ2h0dHBzOi8vbmExLnNhbGVzZm9yY2UuY29tL3NlcnZpY2VzL2RhdGEvdjMyLjAvc29iamVjdHMvQWNjb3VudC9kZXNjcmliZScpXG4gKiAsIHJlbGF0aXZlIHBhdGggZnJvbSByb290ICgnL3NlcnZpY2VzL2RhdGEvdjMyLjAvc29iamVjdHMvQWNjb3VudC9kZXNjcmliZScpXG4gKiAsIG9yIHJlbGF0aXZlIHBhdGggZnJvbSB2ZXJzaW9uIHJvb3QgKCcvc29iamVjdHMvQWNjb3VudC9kZXNjcmliZScpLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgLSBFbmRwb2ludCBVUkwgdG8gcmVxdWVzdCBIVFRQIEdFVFxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIEhUVFAgQVBJIHJlcXVlc3Qgb3B0aW9uc1xuICogQHBhcmFtIHtDYWxsYmFjay48T2JqZWN0Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48T2JqZWN0Pn1cbiAqL1xuQ29ubmVjdGlvbi5wcm90b3R5cGUucmVxdWVzdEdldCA9IGZ1bmN0aW9uKHVybCwgb3B0aW9ucywgY2FsbGJhY2spIHtcbiAgdmFyIHJlcXVlc3QgPSB7XG4gICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgIHVybDogdXJsXG4gIH07XG4gIHJldHVybiB0aGlzLnJlcXVlc3QocmVxdWVzdCwgb3B0aW9ucywgY2FsbGJhY2spO1xufTtcblxuXG4vKipcbiAqIFNlbmQgSFRUUCBQT1NUIHJlcXVlc3Qgd2l0aCBKU09OIGJvZHksIHdpdGggY29ubmVjdGVkIHNlc3Npb24gaW5mb3JtYXRpb25cbiAqXG4gKiBFbmRwb2ludCBVUkwgY2FuIGJlIGFic29sdXRlIFVSTCAoJ2h0dHBzOi8vbmExLnNhbGVzZm9yY2UuY29tL3NlcnZpY2VzL2RhdGEvdjMyLjAvc29iamVjdHMvQWNjb3VudC9kZXNjcmliZScpXG4gKiAsIHJlbGF0aXZlIHBhdGggZnJvbSByb290ICgnL3NlcnZpY2VzL2RhdGEvdjMyLjAvc29iamVjdHMvQWNjb3VudC9kZXNjcmliZScpXG4gKiAsIG9yIHJlbGF0aXZlIHBhdGggZnJvbSB2ZXJzaW9uIHJvb3QgKCcvc29iamVjdHMvQWNjb3VudC9kZXNjcmliZScpLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgLSBFbmRwb2ludCBVUkwgdG8gcmVxdWVzdCBIVFRQIFBPU1RcbiAqIEBwYXJhbSB7T2JqZWN0fSBib2R5IC0gQW55IEpTIG9iamVjdCB3aGljaCBjYW4gYmUgc2VyaWFsaXplZCB0byBKU09OXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gSFRUUCBBUEkgcmVxdWVzdCBvcHRpb25zXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxPYmplY3Q+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxPYmplY3Q+fVxuICovXG5Db25uZWN0aW9uLnByb3RvdHlwZS5yZXF1ZXN0UG9zdCA9IGZ1bmN0aW9uKHVybCwgYm9keSwgb3B0aW9ucywgY2FsbGJhY2spIHtcbiAgdmFyIHJlcXVlc3QgPSB7XG4gICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICB1cmw6IHVybCxcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeShib2R5KSxcbiAgICBoZWFkZXJzOiB7IFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiIH1cbiAgfTtcbiAgcmV0dXJuIHRoaXMucmVxdWVzdChyZXF1ZXN0LCBvcHRpb25zLCBjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIFNlbmQgSFRUUCBQVVQgcmVxdWVzdCB3aXRoIEpTT04gYm9keSwgd2l0aCBjb25uZWN0ZWQgc2Vzc2lvbiBpbmZvcm1hdGlvblxuICpcbiAqIEVuZHBvaW50IFVSTCBjYW4gYmUgYWJzb2x1dGUgVVJMICgnaHR0cHM6Ly9uYTEuc2FsZXNmb3JjZS5jb20vc2VydmljZXMvZGF0YS92MzIuMC9zb2JqZWN0cy9BY2NvdW50L2Rlc2NyaWJlJylcbiAqICwgcmVsYXRpdmUgcGF0aCBmcm9tIHJvb3QgKCcvc2VydmljZXMvZGF0YS92MzIuMC9zb2JqZWN0cy9BY2NvdW50L2Rlc2NyaWJlJylcbiAqICwgb3IgcmVsYXRpdmUgcGF0aCBmcm9tIHZlcnNpb24gcm9vdCAoJy9zb2JqZWN0cy9BY2NvdW50L2Rlc2NyaWJlJykuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHVybCAtIEVuZHBvaW50IFVSTCB0byByZXF1ZXN0IEhUVFAgUFVUXG4gKiBAcGFyYW0ge09iamVjdH0gYm9keSAtIEFueSBKUyBvYmplY3Qgd2hpY2ggY2FuIGJlIHNlcmlhbGl6ZWQgdG8gSlNPTlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIEhUVFAgQVBJIHJlcXVlc3Qgb3B0aW9uc1xuICogQHBhcmFtIHtDYWxsYmFjay48T2JqZWN0Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48T2JqZWN0Pn1cbiAqL1xuQ29ubmVjdGlvbi5wcm90b3R5cGUucmVxdWVzdFB1dCA9IGZ1bmN0aW9uKHVybCwgYm9keSwgb3B0aW9ucywgY2FsbGJhY2spIHtcbiAgdmFyIHJlcXVlc3QgPSB7XG4gICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgIHVybDogdXJsLFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGJvZHkpLFxuICAgIGhlYWRlcnM6IHsgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIgfVxuICB9O1xuICByZXR1cm4gdGhpcy5yZXF1ZXN0KHJlcXVlc3QsIG9wdGlvbnMsIGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogU2VuZCBIVFRQIFBBVENIIHJlcXVlc3Qgd2l0aCBKU09OIGJvZHlcbiAqXG4gKiBFbmRwb2ludCBVUkwgY2FuIGJlIGFic29sdXRlIFVSTCAoJ2h0dHBzOi8vbmExLnNhbGVzZm9yY2UuY29tL3NlcnZpY2VzL2RhdGEvdjMyLjAvc29iamVjdHMvQWNjb3VudC9kZXNjcmliZScpXG4gKiAsIHJlbGF0aXZlIHBhdGggZnJvbSByb290ICgnL3NlcnZpY2VzL2RhdGEvdjMyLjAvc29iamVjdHMvQWNjb3VudC9kZXNjcmliZScpXG4gKiAsIG9yIHJlbGF0aXZlIHBhdGggZnJvbSB2ZXJzaW9uIHJvb3QgKCcvc29iamVjdHMvQWNjb3VudC9kZXNjcmliZScpLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgLSBFbmRwb2ludCBVUkwgdG8gcmVxdWVzdCBIVFRQIFBBVENIXG4gKiBAcGFyYW0ge09iamVjdH0gYm9keSAtIEFueSBKUyBvYmplY3Qgd2hpY2ggY2FuIGJlIHNlcmlhbGl6ZWQgdG8gSlNPTlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIEhUVFAgQVBJIHJlcXVlc3Qgb3B0aW9uc1xuICogQHBhcmFtIHtDYWxsYmFjay48T2JqZWN0Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48T2JqZWN0Pn1cbiAqL1xuQ29ubmVjdGlvbi5wcm90b3R5cGUucmVxdWVzdFBhdGNoID0gZnVuY3Rpb24odXJsLCBib2R5LCBvcHRpb25zLCBjYWxsYmFjaykge1xuICB2YXIgcmVxdWVzdCA9IHtcbiAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICB1cmw6IHVybCxcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeShib2R5KSxcbiAgICBoZWFkZXJzOiB7IFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiIH1cbiAgfTtcbiAgcmV0dXJuIHRoaXMucmVxdWVzdChyZXF1ZXN0LCBvcHRpb25zLCBjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIFNlbmQgSFRUUCBERUxFVEUgcmVxdWVzdFxuICpcbiAqIEVuZHBvaW50IFVSTCBjYW4gYmUgYWJzb2x1dGUgVVJMICgnaHR0cHM6Ly9uYTEuc2FsZXNmb3JjZS5jb20vc2VydmljZXMvZGF0YS92MzIuMC9zb2JqZWN0cy9BY2NvdW50L2Rlc2NyaWJlJylcbiAqICwgcmVsYXRpdmUgcGF0aCBmcm9tIHJvb3QgKCcvc2VydmljZXMvZGF0YS92MzIuMC9zb2JqZWN0cy9BY2NvdW50L2Rlc2NyaWJlJylcbiAqICwgb3IgcmVsYXRpdmUgcGF0aCBmcm9tIHZlcnNpb24gcm9vdCAoJy9zb2JqZWN0cy9BY2NvdW50L2Rlc2NyaWJlJykuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHVybCAtIEVuZHBvaW50IFVSTCB0byByZXF1ZXN0IEhUVFAgREVMRVRFXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gSFRUUCBBUEkgcmVxdWVzdCBvcHRpb25zXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxPYmplY3Q+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxPYmplY3Q+fVxuICovXG5Db25uZWN0aW9uLnByb3RvdHlwZS5yZXF1ZXN0RGVsZXRlID0gZnVuY3Rpb24odXJsLCBvcHRpb25zLCBjYWxsYmFjaykge1xuICB2YXIgcmVxdWVzdCA9IHtcbiAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgdXJsOiB1cmxcbiAgfTtcbiAgcmV0dXJuIHRoaXMucmVxdWVzdChyZXF1ZXN0LCBvcHRpb25zLCBjYWxsYmFjayk7XG59O1xuXG5cbi8qKiBAcHJpdmF0ZSAqL1xuZnVuY3Rpb24gZm9ybWF0RGF0ZShkYXRlKSB7XG4gIGZ1bmN0aW9uIHBhZChudW1iZXIpIHtcbiAgICBpZiAobnVtYmVyIDwgMTApIHtcbiAgICAgIHJldHVybiAnMCcgKyBudW1iZXI7XG4gICAgfVxuICAgIHJldHVybiBudW1iZXI7XG4gIH1cblxuICByZXR1cm4gZGF0ZS5nZXRVVENGdWxsWWVhcigpICtcbiAgICAnLScgKyBwYWQoZGF0ZS5nZXRVVENNb250aCgpICsgMSkgK1xuICAgICctJyArIHBhZChkYXRlLmdldFVUQ0RhdGUoKSkgK1xuICAgICdUJyArIHBhZChkYXRlLmdldFVUQ0hvdXJzKCkpICtcbiAgICAnOicgKyBwYWQoZGF0ZS5nZXRVVENNaW51dGVzKCkpICtcbiAgICAnOicgKyBwYWQoZGF0ZS5nZXRVVENTZWNvbmRzKCkpICtcbiAgICAnKzAwOjAwJztcbn1cblxuXG4vKiogQHByaXZhdGUgKiovXG5mdW5jdGlvbiBwYXJzZUlkVXJsKGlkVXJsKSB7XG4gIHZhciBpZFVybHMgPSBpZFVybC5zcGxpdChcIi9cIik7XG4gIHZhciB1c2VySWQgPSBpZFVybHMucG9wKCksIG9yZ0lkID0gaWRVcmxzLnBvcCgpO1xuICByZXR1cm4ge1xuICAgIGlkOiB1c2VySWQsXG4gICAgb3JnYW5pemF0aW9uSWQ6IG9yZ0lkLFxuICAgIHVybDogaWRVcmxcbiAgfTtcbn1cblxuLyoqXG4gKiBAY2FsbGJhY2sgQ2FsbGJhY2tcbiAqIEB0eXBlIHtGdW5jdGlvbn1cbiAqIEBwYXJhbSB7RXJyb3J9IGVyciAtIENhbGxiYWNrIGVycm9yXG4gKiBAcGFyYW0ge1R9IHJlc3BvbnNlIC0gQ2FsbGJhY2sgcmVzcG9uc2VcbiAqIEB0ZW1wbGF0ZSBUXG4gKi9cblxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBRdWVyeVJlc3VsdFxuICogQHByb3Age0Jvb2xlYW59IGRvbmUgLSBGbGFnIGlmIHRoZSBxdWVyeSBpcyBmZXRjaGVkIGFsbCByZWNvcmRzIG9yIG5vdFxuICogQHByb3Age1N0cmluZ30gW25leHRSZWNvcmRzVXJsXSAtIFVSTCBsb2NhdG9yIGZvciBuZXh0IHJlY29yZCBzZXQsIChhdmFpbGFibGUgd2hlbiBkb25lID0gZmFsc2UpXG4gKiBAcHJvcCB7TnVtYmVyfSB0b3RhbFNpemUgLSBUb3RhbCBzaXplIGZvciBxdWVyeVxuICogQHByb3Age0FycmF5LjxSZWNvcmQ+fSBbcmVjb3Jkc10gLSBBcnJheSBvZiByZWNvcmRzIGZldGNoZWRcbiAqL1xuXG4vKipcbiAqIEV4ZWN1dGUgcXVlcnkgYnkgdXNpbmcgU09RTFxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzb3FsIC0gU09RTCBzdHJpbmdcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSBRdWVyeSBvcHRpb25zXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnMuaGVhZGVyc10gLSBBZGRpdGlvbmFsIEhUVFAgcmVxdWVzdCBoZWFkZXJzIHNlbnQgaW4gcXVlcnkgcmVxdWVzdFxuICogQHBhcmFtIHtDYWxsYmFjay48UXVlcnlSZXN1bHQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtRdWVyeS48UXVlcnlSZXN1bHQ+fVxuICovXG5Db25uZWN0aW9uLnByb3RvdHlwZS5xdWVyeSA9IGZ1bmN0aW9uKHNvcWwsIG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNhbGxiYWNrID0gb3B0aW9ucztcbiAgICBvcHRpb25zID0gdW5kZWZpbmVkO1xuICB9XG4gIHZhciBxdWVyeSA9IG5ldyBRdWVyeSh0aGlzLCBzb3FsLCBvcHRpb25zKTtcbiAgaWYgKGNhbGxiYWNrKSB7XG4gICAgcXVlcnkucnVuKGNhbGxiYWNrKTtcbiAgfVxuICByZXR1cm4gcXVlcnk7XG59O1xuXG4vKipcbiAqIEV4ZWN1dGUgcXVlcnkgYnkgdXNpbmcgU09RTCwgaW5jbHVkaW5nIGRlbGV0ZWQgcmVjb3Jkc1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzb3FsIC0gU09RTCBzdHJpbmdcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSBRdWVyeSBvcHRpb25zXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnMuaGVhZGVyc10gLSBBZGRpdGlvbmFsIEhUVFAgcmVxdWVzdCBoZWFkZXJzIHNlbnQgaW4gcXVlcnkgcmVxdWVzdFxuICogQHBhcmFtIHtDYWxsYmFjay48UXVlcnlSZXN1bHQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtRdWVyeS48UXVlcnlSZXN1bHQ+fVxuICovXG5Db25uZWN0aW9uLnByb3RvdHlwZS5xdWVyeUFsbCA9IGZ1bmN0aW9uKHNvcWwsIG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNhbGxiYWNrID0gb3B0aW9ucztcbiAgICBvcHRpb25zID0gdW5kZWZpbmVkO1xuICB9XG4gIHZhciBxdWVyeSA9IG5ldyBRdWVyeSh0aGlzLCBzb3FsLCBvcHRpb25zKTtcbiAgcXVlcnkuc2NhbkFsbCh0cnVlKTtcbiAgaWYgKGNhbGxiYWNrKSB7XG4gICAgcXVlcnkucnVuKGNhbGxiYWNrKTtcbiAgfVxuICByZXR1cm4gcXVlcnk7XG59O1xuXG4vKipcbiAqIFF1ZXJ5IG5leHQgcmVjb3JkIHNldCBieSB1c2luZyBxdWVyeSBsb2NhdG9yXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGxvY2F0b3IgLSBOZXh0IHJlY29yZCBzZXQgbG9jYXRvclxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIFF1ZXJ5IG9wdGlvbnNcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucy5oZWFkZXJzXSAtIEFkZGl0aW9uYWwgSFRUUCByZXF1ZXN0IGhlYWRlcnMgc2VudCBpbiBxdWVyeSByZXF1ZXN0XG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxRdWVyeVJlc3VsdD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1F1ZXJ5LjxRdWVyeVJlc3VsdD59XG4gKi9cbkNvbm5lY3Rpb24ucHJvdG90eXBlLnF1ZXJ5TW9yZSA9IGZ1bmN0aW9uKGxvY2F0b3IsIG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNhbGxiYWNrID0gb3B0aW9ucztcbiAgICBvcHRpb25zID0gdW5kZWZpbmVkO1xuICB9XG4gIHZhciBxdWVyeSA9IG5ldyBRdWVyeSh0aGlzLCB7IGxvY2F0b3I6IGxvY2F0b3IgfSwgb3B0aW9ucyk7XG4gIGlmIChjYWxsYmFjaykge1xuICAgIHF1ZXJ5LnJ1bihjYWxsYmFjayk7XG4gIH1cbiAgcmV0dXJuIHF1ZXJ5O1xufTtcblxuLyoqIEBwcml2YXRlICovXG5Db25uZWN0aW9uLnByb3RvdHlwZS5fZW5zdXJlVmVyc2lvbiA9IGZ1bmN0aW9uKG1ham9yVmVyc2lvbikge1xuICB2YXIgdmVyc2lvbnMgPSB0aGlzLnZlcnNpb24uc3BsaXQoJy4nKTtcbiAgcmV0dXJuIHBhcnNlSW50KHZlcnNpb25zWzBdLCAxMCkgPj0gbWFqb3JWZXJzaW9uO1xufVxuXG4vKipcbiAqIFJldHJpZXZlIHNwZWNpZmllZCByZWNvcmRzXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHR5cGUgLSBTT2JqZWN0IFR5cGVcbiAqIEBwYXJhbSB7U3RyaW5nfEFycmF5LjxTdHJpbmc+fSBpZHMgLSBBIHJlY29yZCBJRCBvciBhcnJheSBvZiByZWNvcmQgSURzXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gT3B0aW9ucyBmb3IgcmVzdCBhcGkuXG4gKiBAcGFyYW0ge0FycmF5LjxTdHJpbmc+fSBbb3B0aW9ucy5maWVsZHNdIC0gRmV0Y2hpbmcgZmllbGQgbmFtZXMgaW4gcmV0cmlldmluZyByZWNvcmRcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucy5oZWFkZXJzXSAtIEFkZGl0aW9uYWwgSFRUUCByZXF1ZXN0IGhlYWRlcnMgc2VudCBpbiByZXRyaWV2ZSByZXF1ZXN0XG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxSZWNvcmR8QXJyYXkuPFJlY29yZD4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxSZWNvcmR8QXJyYXkuPFJlY29yZD4+fVxuICovXG5Db25uZWN0aW9uLnByb3RvdHlwZS5yZXRyaWV2ZSA9IGZ1bmN0aW9uKHR5cGUsIGlkcywgb3B0aW9ucywgY2FsbGJhY2spIHtcbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2FsbGJhY2sgPSBvcHRpb25zO1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgcmV0dXJuIChcbiAgICBfLmlzQXJyYXkoaWRzKSA/XG4gICAgICAodGhpcy5fZW5zdXJlVmVyc2lvbig0MikgPyAvLyBjaGVjayB0aGUgdmVyc2lvbiB3aGV0aGVyIFNPYmplY3QgY29sbGVjdGlvbiBBUEkgaXMgc3VwcG9ydGVkICg0Mi4wKVxuICAgICAgICB0aGlzLl9yZXRyaWV2ZU1hbnkodHlwZSwgaWRzLCBvcHRpb25zKSA6XG4gICAgICAgIHRoaXMuX3JldHJpZXZlUGFyYWxsZWwodHlwZSwgaWRzLCBvcHRpb25zKSkgOlxuICAgICAgdGhpcy5fcmV0cmlldmVTaW5nbGUodHlwZSwgaWRzLCBvcHRpb25zKVxuICApLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKiBAcHJpdmF0ZSAqL1xuQ29ubmVjdGlvbi5wcm90b3R5cGUuX3JldHJpZXZlU2luZ2xlID0gZnVuY3Rpb24odHlwZSwgaWQsIG9wdGlvbnMpIHtcbiAgaWYgKCFpZCkge1xuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoJ0ludmFsaWQgcmVjb3JkIElELiBTcGVjaWZ5IHZhbGlkIHJlY29yZCBJRCB2YWx1ZScpKTtcbiAgfVxuICB2YXIgdXJsID0gWyB0aGlzLl9iYXNlVXJsKCksIFwic29iamVjdHNcIiwgdHlwZSwgaWQgXS5qb2luKCcvJyk7XG4gIGlmIChvcHRpb25zLmZpZWxkcykge1xuICAgIHVybCArPSAnP2ZpZWxkcz0nICsgb3B0aW9ucy5maWVsZHMuam9pbignLCcpO1xuICB9XG4gIHJldHVybiB0aGlzLnJlcXVlc3Qoe1xuICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgdXJsOiB1cmwsXG4gICAgaGVhZGVyczogb3B0aW9ucy5oZWFkZXJzLFxuICB9KTtcbn07XG5cbi8qKiBAcHJpdmF0ZSAqL1xuQ29ubmVjdGlvbi5wcm90b3R5cGUuX3JldHJpZXZlUGFyYWxsZWwgPSBmdW5jdGlvbih0eXBlLCBpZHMsIG9wdGlvbnMpIHtcbiAgaWYgKGlkcy5sZW5ndGggPiB0aGlzLm1heFJlcXVlc3QpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKFwiRXhjZWVkZWQgbWF4IGxpbWl0IG9mIGNvbmN1cnJlbnQgY2FsbFwiKSk7XG4gIH1cbiAgdmFyIHNlbGYgPSB0aGlzO1xuICByZXR1cm4gUHJvbWlzZS5hbGwoXG4gICAgaWRzLm1hcChmdW5jdGlvbihpZCkge1xuICAgICAgcmV0dXJuIHNlbGYuX3JldHJpZXZlU2luZ2xlKHR5cGUsIGlkLCBvcHRpb25zKS5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgaWYgKG9wdGlvbnMuYWxsT3JOb25lIHx8IGVyci5lcnJvckNvZGUgIT09ICdOT1RfRk9VTkQnKSB7XG4gICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfSk7XG4gICAgfSlcbiAgKTtcbn07XG5cbi8qKiBAcHJpdmF0ZSAqL1xuQ29ubmVjdGlvbi5wcm90b3R5cGUuX3JldHJpZXZlTWFueSA9IGZ1bmN0aW9uKHR5cGUsIGlkcywgb3B0aW9ucykge1xuICBpZiAoaWRzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoW10pO1xuICB9XG4gIHZhciB1cmwgPSBbIHRoaXMuX2Jhc2VVcmwoKSwgXCJjb21wb3NpdGVcIiwgXCJzb2JqZWN0c1wiLCB0eXBlIF0uam9pbignLycpO1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHJldHVybiAoXG4gICAgb3B0aW9ucy5maWVsZHMgP1xuICAgICAgUHJvbWlzZS5yZXNvbHZlKG9wdGlvbnMuZmllbGRzKSA6XG4gICAgICBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgc2VsZi5kZXNjcmliZSQodHlwZSwgZnVuY3Rpb24oZXJyLCBzbykge1xuICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YXIgZmllbGRzID0gc28uZmllbGRzLm1hcChmdW5jdGlvbihmaWVsZCkge1xuICAgICAgICAgICAgICByZXR1cm4gZmllbGQubmFtZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmVzb2x2ZShmaWVsZHMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KVxuICApLnRoZW4oZnVuY3Rpb24oZmllbGRzKSB7XG4gICAgcmV0dXJuIHNlbGYucmVxdWVzdCh7XG4gICAgICBtZXRob2QgOiAnUE9TVCcsXG4gICAgICB1cmwgOiB1cmwsXG4gICAgICBib2R5IDogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBpZHMgOiBpZHMsXG4gICAgICAgIGZpZWxkcyA6IGZpZWxkc1xuICAgICAgfSksXG4gICAgICBoZWFkZXJzIDogXy5kZWZhdWx0cyhvcHRpb25zLmhlYWRlcnMgfHwge30sIHtcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIiA6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgICB9KVxuICAgIH0pO1xuICB9KTtcbn07XG5cblxuLyoqXG4gKiBAdHlwZWRlZiBSZWNvcmRSZXN1bHRcbiAqIEBwcm9wIHtCb29sZWFufSBzdWNjZXNzIC0gVGhlIHJlc3VsdCBpcyBzdWNjZWVzc2Z1bCBvciBub3RcbiAqIEBwcm9wIHtTdHJpbmd9IFtpZF0gLSBSZWNvcmQgSURcbiAqIEBwcm9wIHtBcnJheS48T2JqZWN0Pn0gW2Vycm9yc10gLSBFcnJvcnMgKGF2YWlsYWJsZSB3aGVuIHN1Y2Nlc3MgPSBmYWxzZSlcbiAqL1xuXG4vKiogQHByaXZhdGUgKi9cbkNvbm5lY3Rpb24ucHJvdG90eXBlLl90b1JlY29yZFJlc3VsdCA9IGZ1bmN0aW9uKGlkLCBlcnIpIHtcbiAgdmFyIGVycm9yID0ge1xuICAgIHN0YXR1c0NvZGU6IGVyci5lcnJvckNvZGUsXG4gICAgbWVzc2FnZTogZXJyLm1lc3NhZ2VcbiAgfTtcbiAgaWYgKGVyci5jb250ZW50KSB7IGVycm9yLmNvbnRlbnQgPSBlcnIuY29udGVudDsgfSAvLyBwcmVzZXJ2ZSBFeHRlcm5hbCBpZCBkdXBsaWNhdGlvbiBtZXNzYWdlXG4gIGlmIChlcnIuZmllbGRzKSB7IGVycm9yLmZpZWxkcyA9IGVyci5maWVsZHM7IH0gLy8gcHJlc2VydmUgRE1MIGV4Y2VwdGlvbiBvY2N1cnJlZCBmaWVsZHNcbiAgdmFyIHJlc3VsdCA9IHtcbiAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICBlcnJvcnM6IFtlcnJvcl1cbiAgfTtcbiAgaWYgKGlkKSB7IHJlc3VsdC5pZCA9IGlkOyB9XG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG4vKipcbiAqIFN5bm9ueW0gb2YgQ29ubmVjdGlvbiNjcmVhdGUoKVxuICpcbiAqIEBtZXRob2QgQ29ubmVjdGlvbiNpbnNlcnRcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlIC0gU09iamVjdCBUeXBlXG4gKiBAcGFyYW0ge09iamVjdHxBcnJheS48T2JqZWN0Pn0gcmVjb3JkcyAtIEEgcmVjb3JkIG9yIGFycmF5IG9mIHJlY29yZHMgdG8gY3JlYXRlXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gT3B0aW9ucyBmb3IgcmVzdCBhcGkuXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLmFsbE9yTm9uZV0gLSBJZiB0cnVlLCBhbnkgZmFpbGVkIHJlY29yZHMgaW4gYSBjYWxsIGNhdXNlIGFsbCBjaGFuZ2VzIGZvciB0aGUgY2FsbCB0byBiZSByb2xsZWQgYmFja1xuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5hbGxvd1JlY3Vyc2l2ZV0gLSBJZiB0cnVlLCB3aGVuIHJlY29yZHMgZ29lcyBvdmVyIHRoZSBtYXggbnVtIG9mIGNvbGxlY3Rpb24gQVBJICg9MjAwKSwgcmVjb3JkcyBhcmUgZGl2aWRlZCBpbnRvIHNldmVyYWwgY2h1bmtzIGFuZCByZXF1ZXN0ZWQgcmVjdXJzaXZlbHkuXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnMuaGVhZGVyc10gLSBBZGRpdGlvbmFsIEhUVFAgcmVxdWVzdCBoZWFkZXJzIHNlbnQgaW4gcmV0cmlldmUgcmVxdWVzdFxuICogQHBhcmFtIHtDYWxsYmFjay48UmVjb3JkUmVzdWx0fEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48UmVjb3JkUmVzdWx0fEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn1cbiAqL1xuLyoqXG4gKiBDcmVhdGUgcmVjb3Jkc1xuICpcbiAqIEBtZXRob2QgQ29ubmVjdGlvbiNjcmVhdGVcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlIC0gU09iamVjdCBUeXBlXG4gKiBAcGFyYW0ge1JlY29yZHxBcnJheS48UmVjb3JkPn0gcmVjb3JkcyAtIEEgcmVjb3JkIG9yIGFycmF5IG9mIHJlY29yZHMgdG8gY3JlYXRlXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gT3B0aW9ucyBmb3IgcmVzdCBhcGkuXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLmFsbE9yTm9uZV0gLSBJZiB0cnVlLCBhbnkgZmFpbGVkIHJlY29yZHMgaW4gYSBjYWxsIGNhdXNlIGFsbCBjaGFuZ2VzIGZvciB0aGUgY2FsbCB0byBiZSByb2xsZWQgYmFja1xuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5hbGxvd1JlY3Vyc2l2ZV0gLSBJZiB0cnVlLCB3aGVuIHJlY29yZHMgZ29lcyBvdmVyIHRoZSBtYXggbnVtIG9mIGNvbGxlY3Rpb24gQVBJICg9MjAwKSwgcmVjb3JkcyBhcmUgZGl2aWRlZCBpbnRvIHNldmVyYWwgY2h1bmtzIGFuZCByZXF1ZXN0ZWQgcmVjdXJzaXZlbHkuXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnMuaGVhZGVyc10gLSBBZGRpdGlvbmFsIEhUVFAgcmVxdWVzdCBoZWFkZXJzIHNlbnQgaW4gcmV0cmlldmUgcmVxdWVzdFxuICogQHBhcmFtIHtDYWxsYmFjay48UmVjb3JkUmVzdWx0fEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48UmVjb3JkUmVzdWx0fEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn1cbiAqL1xuQ29ubmVjdGlvbi5wcm90b3R5cGUuaW5zZXJ0ID1cbkNvbm5lY3Rpb24ucHJvdG90eXBlLmNyZWF0ZSA9IGZ1bmN0aW9uKHR5cGUsIHJlY29yZHMsIG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gIGlmICghXy5pc1N0cmluZyh0eXBlKSkge1xuICAgIC8vIHJldmVyc2Ugb3JkZXJcbiAgICBjYWxsYmFjayA9IG9wdGlvbnM7XG4gICAgb3B0aW9ucyA9IHJlY29yZHM7XG4gICAgcmVjb3JkcyA9IHR5cGU7XG4gICAgdHlwZSA9IG51bGw7XG4gIH1cbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2FsbGJhY2sgPSBvcHRpb25zO1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgcmV0dXJuIChcbiAgICBfLmlzQXJyYXkocmVjb3JkcykgP1xuICAgICAgKHRoaXMuX2Vuc3VyZVZlcnNpb24oNDIpID8gLy8gY2hlY2sgdGhlIHZlcnNpb24gd2hldGhlciBTT2JqZWN0IGNvbGxlY3Rpb24gQVBJIGlzIHN1cHBvcnRlZCAoNDIuMClcbiAgICAgICAgdGhpcy5fY3JlYXRlTWFueSh0eXBlLCByZWNvcmRzLCBvcHRpb25zKSA6XG4gICAgICAgIHRoaXMuX2NyZWF0ZVBhcmFsbGVsKHR5cGUsIHJlY29yZHMsIG9wdGlvbnMpKSA6XG4gICAgICB0aGlzLl9jcmVhdGVTaW5nbGUodHlwZSwgcmVjb3Jkcywgb3B0aW9ucylcbiAgKS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKiogQHByaXZhdGUgKi9cbkNvbm5lY3Rpb24ucHJvdG90eXBlLl9jcmVhdGVTaW5nbGUgPSBmdW5jdGlvbih0eXBlLCByZWNvcmQsIG9wdGlvbnMpIHtcbiAgdmFyIHNvYmplY3RUeXBlID0gdHlwZSB8fCAocmVjb3JkLmF0dHJpYnV0ZXMgJiYgcmVjb3JkLmF0dHJpYnV0ZXMudHlwZSkgfHwgcmVjb3JkLnR5cGU7XG4gIGlmICghc29iamVjdFR5cGUpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKCdObyBTT2JqZWN0IFR5cGUgZGVmaW5lZCBpbiByZWNvcmQnKSk7XG4gIH1cbiAgcmVjb3JkID0gXy5jbG9uZShyZWNvcmQpO1xuICBkZWxldGUgcmVjb3JkLklkO1xuICBkZWxldGUgcmVjb3JkLnR5cGU7XG4gIGRlbGV0ZSByZWNvcmQuYXR0cmlidXRlcztcbiAgdmFyIHVybCA9IFsgdGhpcy5fYmFzZVVybCgpLCBcInNvYmplY3RzXCIsIHNvYmplY3RUeXBlIF0uam9pbignLycpO1xuICByZXR1cm4gdGhpcy5yZXF1ZXN0KHtcbiAgICBtZXRob2QgOiAnUE9TVCcsXG4gICAgdXJsIDogdXJsLFxuICAgIGJvZHkgOiBKU09OLnN0cmluZ2lmeShyZWNvcmQpLFxuICAgIGhlYWRlcnMgOiBfLmRlZmF1bHRzKG9wdGlvbnMuaGVhZGVycyB8fCB7fSwge1xuICAgICAgXCJDb250ZW50LVR5cGVcIiA6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgfSlcbiAgfSk7XG59O1xuXG4vKiogQHByaXZhdGUgKi9cbkNvbm5lY3Rpb24ucHJvdG90eXBlLl9jcmVhdGVQYXJhbGxlbCA9IGZ1bmN0aW9uKHR5cGUsIHJlY29yZHMsIG9wdGlvbnMpIHtcbiAgaWYgKHJlY29yZHMubGVuZ3RoID4gdGhpcy5tYXhSZXF1ZXN0KSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBFcnJvcihcIkV4Y2VlZGVkIG1heCBsaW1pdCBvZiBjb25jdXJyZW50IGNhbGxcIikpO1xuICB9XG4gIHZhciBzZWxmID0gdGhpcztcbiAgcmV0dXJuIFByb21pc2UuYWxsKFxuICAgIHJlY29yZHMubWFwKGZ1bmN0aW9uKHJlY29yZCkge1xuICAgICAgcmV0dXJuIHNlbGYuX2NyZWF0ZVNpbmdsZSh0eXBlLCByZWNvcmQsIG9wdGlvbnMpLmNhdGNoKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAvLyBiZSBhd2FyZSB0aGF0IGFsbE9yTm9uZSBpbiBwYXJhbGxlbCBtb2RlIHdpbGwgbm90IHJldmVydCB0aGUgb3RoZXIgc3VjY2Vzc2Z1bCByZXF1ZXN0c1xuICAgICAgICAvLyBpdCBvbmx5IHJhaXNlcyBlcnJvciB3aGVuIG1ldCBhdCBsZWFzdCBvbmUgZmFpbGVkIHJlcXVlc3QuXG4gICAgICAgIGlmIChvcHRpb25zLmFsbE9yTm9uZSB8fCAhZXJyLmVycm9yQ29kZSkge1xuICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fdG9SZWNvcmRSZXN1bHQobnVsbCwgZXJyKTtcbiAgICAgIH0pO1xuICAgIH0pXG4gICk7XG59O1xuXG4vKiogQHByaXZhdGUgKi9cbkNvbm5lY3Rpb24ucHJvdG90eXBlLl9jcmVhdGVNYW55ID0gZnVuY3Rpb24odHlwZSwgcmVjb3Jkcywgb3B0aW9ucykge1xuICBpZiAocmVjb3Jkcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKFtdKTtcbiAgfVxuICBpZiAocmVjb3Jkcy5sZW5ndGggPiBNQVhfRE1MX0NPVU5UICYmIG9wdGlvbnMuYWxsb3dSZWN1cnNpdmUpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgcmV0dXJuIHNlbGYuX2NyZWF0ZU1hbnkodHlwZSwgcmVjb3Jkcy5zbGljZSgwLCBNQVhfRE1MX0NPVU5UKSwgb3B0aW9ucykudGhlbihmdW5jdGlvbihyZXRzMSkge1xuICAgICAgcmV0dXJuIHNlbGYuX2NyZWF0ZU1hbnkodHlwZSwgcmVjb3Jkcy5zbGljZShNQVhfRE1MX0NPVU5UKSwgb3B0aW9ucykudGhlbihmdW5jdGlvbihyZXRzMikge1xuICAgICAgICByZXR1cm4gcmV0czEuY29uY2F0KHJldHMyKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIHJlY29yZHMgPSBfLm1hcChyZWNvcmRzLCBmdW5jdGlvbihyZWNvcmQpIHtcbiAgICB2YXIgc29iamVjdFR5cGUgPSB0eXBlIHx8IChyZWNvcmQuYXR0cmlidXRlcyAmJiByZWNvcmQuYXR0cmlidXRlcy50eXBlKSB8fCByZWNvcmQudHlwZTtcbiAgICBpZiAoIXNvYmplY3RUeXBlKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKCdObyBTT2JqZWN0IFR5cGUgZGVmaW5lZCBpbiByZWNvcmQnKSk7XG4gICAgfVxuICAgIHJlY29yZCA9IF8uY2xvbmUocmVjb3JkKTtcbiAgICBkZWxldGUgcmVjb3JkLklkO1xuICAgIGRlbGV0ZSByZWNvcmQudHlwZTtcbiAgICByZWNvcmQuYXR0cmlidXRlcyA9IHsgdHlwZSA6IHNvYmplY3RUeXBlIH07XG4gICAgcmV0dXJuIHJlY29yZDtcbiAgfSk7XG4gIHZhciB1cmwgPSBbIHRoaXMuX2Jhc2VVcmwoKSwgXCJjb21wb3NpdGVcIiwgXCJzb2JqZWN0c1wiIF0uam9pbignLycpO1xuICByZXR1cm4gdGhpcy5yZXF1ZXN0KHtcbiAgICBtZXRob2QgOiAnUE9TVCcsXG4gICAgdXJsIDogdXJsLFxuICAgIGJvZHkgOiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICBhbGxPck5vbmUgOiBvcHRpb25zLmFsbE9yTm9uZSB8fCBmYWxzZSxcbiAgICAgIHJlY29yZHMgOiByZWNvcmRzXG4gICAgfSksXG4gICAgaGVhZGVycyA6IF8uZGVmYXVsdHMob3B0aW9ucy5oZWFkZXJzIHx8IHt9LCB7XG4gICAgICBcIkNvbnRlbnQtVHlwZVwiIDogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9KVxuICB9KTtcbn07XG5cbi8qKlxuICogVXBkYXRlIHJlY29yZHNcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZSAtIFNPYmplY3QgVHlwZVxuICogQHBhcmFtIHtSZWNvcmR8QXJyYXkuPFJlY29yZD59IHJlY29yZHMgLSBBIHJlY29yZCBvciBhcnJheSBvZiByZWNvcmRzIHRvIHVwZGF0ZVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIE9wdGlvbnMgZm9yIHJlc3QgYXBpLlxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5hbGxPck5vbmVdIC0gSWYgdHJ1ZSwgYW55IGZhaWxlZCByZWNvcmRzIGluIGEgY2FsbCBjYXVzZSBhbGwgY2hhbmdlcyBmb3IgdGhlIGNhbGwgdG8gYmUgcm9sbGVkIGJhY2tcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuYWxsb3dSZWN1cnNpdmVdIC0gSWYgdHJ1ZSwgd2hlbiByZWNvcmRzIGdvZXMgb3ZlciB0aGUgbWF4IG51bSBvZiBjb2xsZWN0aW9uIEFQSSAoPTIwMCksIHJlY29yZHMgYXJlIGRpdmlkZWQgaW50byBzZXZlcmFsIGNodW5rcyBhbmQgcmVxdWVzdGVkIHJlY3Vyc2l2ZWx5LlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zLmhlYWRlcnNdIC0gQWRkaXRpb25hbCBIVFRQIHJlcXVlc3QgaGVhZGVycyBzZW50IGluIHJldHJpZXZlIHJlcXVlc3RcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFJlY29yZFJlc3VsdHxBcnJheS48UmVjb3JkUmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPFJlY29yZFJlc3VsdHxBcnJheS48UmVjb3JkUmVzdWx0Pj59XG4gKi9cbkNvbm5lY3Rpb24ucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uKHR5cGUsIHJlY29yZHMsIG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gIGlmICghXy5pc1N0cmluZyh0eXBlKSkge1xuICAgIC8vIHJldmVyc2Ugb3JkZXJcbiAgICBjYWxsYmFjayA9IG9wdGlvbnM7XG4gICAgb3B0aW9ucyA9IHJlY29yZHM7XG4gICAgcmVjb3JkcyA9IHR5cGU7XG4gICAgdHlwZSA9IG51bGw7XG4gIH1cbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2FsbGJhY2sgPSBvcHRpb25zO1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgcmV0dXJuIChcbiAgICBfLmlzQXJyYXkocmVjb3JkcykgP1xuICAgICAgKHRoaXMuX2Vuc3VyZVZlcnNpb24oNDIpID8gLy8gY2hlY2sgdGhlIHZlcnNpb24gd2hldGhlciBTT2JqZWN0IGNvbGxlY3Rpb24gQVBJIGlzIHN1cHBvcnRlZCAoNDIuMClcbiAgICAgICAgdGhpcy5fdXBkYXRlTWFueSh0eXBlLCByZWNvcmRzLCBvcHRpb25zKSA6XG4gICAgICAgIHRoaXMuX3VwZGF0ZVBhcmFsbGVsKHR5cGUsIHJlY29yZHMsIG9wdGlvbnMpKSA6XG4gICAgICB0aGlzLl91cGRhdGVTaW5nbGUodHlwZSwgcmVjb3Jkcywgb3B0aW9ucylcbiAgKS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKiogQHByaXZhdGUgKi9cbkNvbm5lY3Rpb24ucHJvdG90eXBlLl91cGRhdGVTaW5nbGUgPSBmdW5jdGlvbih0eXBlLCByZWNvcmQsIG9wdGlvbnMpIHtcbiAgdmFyIGlkID0gcmVjb3JkLklkO1xuICBpZiAoIWlkKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBFcnJvcignUmVjb3JkIGlkIGlzIG5vdCBmb3VuZCBpbiByZWNvcmQuJykpO1xuICB9XG4gIHZhciBzb2JqZWN0VHlwZSA9IHR5cGUgfHwgKHJlY29yZC5hdHRyaWJ1dGVzICYmIHJlY29yZC5hdHRyaWJ1dGVzLnR5cGUpIHx8IHJlY29yZC50eXBlO1xuICBpZiAoIXNvYmplY3RUeXBlKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBFcnJvcignTm8gU09iamVjdCBUeXBlIGRlZmluZWQgaW4gcmVjb3JkJykpO1xuICB9XG4gIHJlY29yZCA9IF8uY2xvbmUocmVjb3JkKTtcbiAgZGVsZXRlIHJlY29yZC5JZDtcbiAgZGVsZXRlIHJlY29yZC50eXBlO1xuICBkZWxldGUgcmVjb3JkLmF0dHJpYnV0ZXM7XG4gIHZhciB1cmwgPSBbIHRoaXMuX2Jhc2VVcmwoKSwgXCJzb2JqZWN0c1wiLCBzb2JqZWN0VHlwZSwgaWQgXS5qb2luKCcvJyk7XG4gIHJldHVybiB0aGlzLnJlcXVlc3Qoe1xuICAgIG1ldGhvZCA6ICdQQVRDSCcsXG4gICAgdXJsIDogdXJsLFxuICAgIGJvZHkgOiBKU09OLnN0cmluZ2lmeShyZWNvcmQpLFxuICAgIGhlYWRlcnMgOiBfLmRlZmF1bHRzKG9wdGlvbnMuaGVhZGVycyB8fCB7fSwge1xuICAgICAgXCJDb250ZW50LVR5cGVcIiA6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgfSlcbiAgfSwge1xuICAgIG5vQ29udGVudFJlc3BvbnNlOiB7IGlkIDogaWQsIHN1Y2Nlc3MgOiB0cnVlLCBlcnJvcnMgOiBbXSB9XG4gIH0pO1xufTtcblxuLyoqIEBwcml2YXRlICovXG5Db25uZWN0aW9uLnByb3RvdHlwZS5fdXBkYXRlUGFyYWxsZWwgPSBmdW5jdGlvbih0eXBlLCByZWNvcmRzLCBvcHRpb25zKSB7XG4gIGlmIChyZWNvcmRzLmxlbmd0aCA+IHRoaXMubWF4UmVxdWVzdCkge1xuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoXCJFeGNlZWRlZCBtYXggbGltaXQgb2YgY29uY3VycmVudCBjYWxsXCIpKTtcbiAgfVxuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHJldHVybiBQcm9taXNlLmFsbChcbiAgICByZWNvcmRzLm1hcChmdW5jdGlvbihyZWNvcmQpIHtcbiAgICAgIHJldHVybiBzZWxmLl91cGRhdGVTaW5nbGUodHlwZSwgcmVjb3JkLCBvcHRpb25zKS5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgLy8gYmUgYXdhcmUgdGhhdCBhbGxPck5vbmUgaW4gcGFyYWxsZWwgbW9kZSB3aWxsIG5vdCByZXZlcnQgdGhlIG90aGVyIHN1Y2Nlc3NmdWwgcmVxdWVzdHNcbiAgICAgICAgLy8gaXQgb25seSByYWlzZXMgZXJyb3Igd2hlbiBtZXQgYXQgbGVhc3Qgb25lIGZhaWxlZCByZXF1ZXN0LlxuICAgICAgICBpZiAob3B0aW9ucy5hbGxPck5vbmUgfHwgIWVyci5lcnJvckNvZGUpIHtcbiAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX3RvUmVjb3JkUmVzdWx0KHJlY29yZC5JZCwgZXJyKTtcbiAgICAgIH0pO1xuICAgIH0pXG4gICk7XG59O1xuXG4vKiogQHByaXZhdGUgKi9cbkNvbm5lY3Rpb24ucHJvdG90eXBlLl91cGRhdGVNYW55ID0gZnVuY3Rpb24odHlwZSwgcmVjb3Jkcywgb3B0aW9ucykge1xuICBpZiAocmVjb3Jkcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKFtdKTtcbiAgfVxuICBpZiAocmVjb3Jkcy5sZW5ndGggPiBNQVhfRE1MX0NPVU5UICYmIG9wdGlvbnMuYWxsb3dSZWN1cnNpdmUpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgcmV0dXJuIHNlbGYuX3VwZGF0ZU1hbnkodHlwZSwgcmVjb3Jkcy5zbGljZSgwLCBNQVhfRE1MX0NPVU5UKSwgb3B0aW9ucykudGhlbihmdW5jdGlvbihyZXRzMSkge1xuICAgICAgcmV0dXJuIHNlbGYuX3VwZGF0ZU1hbnkodHlwZSwgcmVjb3Jkcy5zbGljZShNQVhfRE1MX0NPVU5UKSwgb3B0aW9ucykudGhlbihmdW5jdGlvbihyZXRzMikge1xuICAgICAgICByZXR1cm4gcmV0czEuY29uY2F0KHJldHMyKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIHJlY29yZHMgPSBfLm1hcChyZWNvcmRzLCBmdW5jdGlvbihyZWNvcmQpIHtcbiAgICB2YXIgaWQgPSByZWNvcmQuSWQ7XG4gICAgaWYgKCFpZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdSZWNvcmQgaWQgaXMgbm90IGZvdW5kIGluIHJlY29yZC4nKTtcbiAgICB9XG4gICAgdmFyIHNvYmplY3RUeXBlID0gdHlwZSB8fCAocmVjb3JkLmF0dHJpYnV0ZXMgJiYgcmVjb3JkLmF0dHJpYnV0ZXMudHlwZSkgfHwgcmVjb3JkLnR5cGU7XG4gICAgaWYgKCFzb2JqZWN0VHlwZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBTT2JqZWN0IFR5cGUgZGVmaW5lZCBpbiByZWNvcmQnKTtcbiAgICB9XG4gICAgcmVjb3JkID0gXy5jbG9uZShyZWNvcmQpO1xuICAgIGRlbGV0ZSByZWNvcmQuSWQ7XG4gICAgcmVjb3JkLmlkID0gaWQ7XG4gICAgZGVsZXRlIHJlY29yZC50eXBlO1xuICAgIHJlY29yZC5hdHRyaWJ1dGVzID0geyB0eXBlIDogc29iamVjdFR5cGUgfTtcbiAgICByZXR1cm4gcmVjb3JkO1xuICB9KTtcbiAgdmFyIHVybCA9IFsgdGhpcy5fYmFzZVVybCgpLCBcImNvbXBvc2l0ZVwiLCBcInNvYmplY3RzXCIgXS5qb2luKCcvJyk7XG4gIHJldHVybiB0aGlzLnJlcXVlc3Qoe1xuICAgIG1ldGhvZCA6ICdQQVRDSCcsXG4gICAgdXJsIDogdXJsLFxuICAgIGJvZHkgOiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICBhbGxPck5vbmUgOiBvcHRpb25zLmFsbE9yTm9uZSB8fCBmYWxzZSxcbiAgICAgIHJlY29yZHMgOiByZWNvcmRzXG4gICAgfSksXG4gICAgaGVhZGVycyA6IF8uZGVmYXVsdHMob3B0aW9ucy5oZWFkZXJzIHx8IHt9LCB7XG4gICAgICBcIkNvbnRlbnQtVHlwZVwiIDogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9KVxuICB9KTtcbn07XG5cbi8qKlxuICogVXBzZXJ0IHJlY29yZHNcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZSAtIFNPYmplY3QgVHlwZVxuICogQHBhcmFtIHtSZWNvcmR8QXJyYXkuPFJlY29yZD59IHJlY29yZHMgLSBSZWNvcmQgb3IgYXJyYXkgb2YgcmVjb3JkcyB0byB1cHNlcnRcbiAqIEBwYXJhbSB7U3RyaW5nfSBleHRJZEZpZWxkIC0gRXh0ZXJuYWwgSUQgZmllbGQgbmFtZVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIE9wdGlvbnMgZm9yIHJlc3QgYXBpLlxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5hbGxPck5vbmVdIC0gSWYgdHJ1ZSwgYW55IGZhaWxlZCByZWNvcmRzIGluIGEgY2FsbCBjYXVzZSBhbGwgY2hhbmdlcyBmb3IgdGhlIGNhbGwgdG8gYmUgcm9sbGVkIGJhY2tcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucy5oZWFkZXJzXSAtIEFkZGl0aW9uYWwgSFRUUCByZXF1ZXN0IGhlYWRlcnMgc2VudCBpbiByZXRyaWV2ZSByZXF1ZXN0XG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxSZWNvcmRSZXN1bHR8QXJyYXkuPFJlY29yZFJlc3VsdD4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2tcbiAqIEByZXR1cm5zIHtQcm9taXNlLjxSZWNvcmRSZXN1bHR8QXJyYXkuPFJlY29yZFJlc3VsdD4+fVxuICovXG5Db25uZWN0aW9uLnByb3RvdHlwZS51cHNlcnQgPSBmdW5jdGlvbih0eXBlLCByZWNvcmRzLCBleHRJZEZpZWxkLCBvcHRpb25zLCBjYWxsYmFjaykge1xuICAvLyBZb3UgY2FuIG9taXQgXCJ0eXBlXCIgYXJndW1lbnQsIHdoZW4gdGhlIHJlY29yZCBpbmNsdWRlcyB0eXBlIGluZm9ybWF0aW9uLlxuICBpZiAoIV8uaXNTdHJpbmcodHlwZSkpIHtcbiAgICAvLyByZXZlcnNlIG9yZGVyXG4gICAgY2FsbGJhY2sgPSBvcHRpb25zO1xuICAgIG9wdGlvbnMgPSBleHRJZEZpZWxkO1xuICAgIGV4dElkRmllbGQgPSByZWNvcmRzO1xuICAgIHJlY29yZHMgPSB0eXBlO1xuICAgIHR5cGUgPSBudWxsO1xuICB9XG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNhbGxiYWNrID0gb3B0aW9ucztcbiAgICBvcHRpb25zID0ge307XG4gIH1cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIGlzQXJyYXkgPSBfLmlzQXJyYXkocmVjb3Jkcyk7XG4gIHJlY29yZHMgPSBpc0FycmF5ID8gcmVjb3JkcyA6IFsgcmVjb3JkcyBdO1xuICBpZiAocmVjb3Jkcy5sZW5ndGggPiB0aGlzLm1heFJlcXVlc3QpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKFwiRXhjZWVkZWQgbWF4IGxpbWl0IG9mIGNvbmN1cnJlbnQgY2FsbFwiKSkudGhlbkNhbGwoY2FsbGJhY2spO1xuICB9XG4gIHJldHVybiBQcm9taXNlLmFsbChcbiAgICBfLm1hcChyZWNvcmRzLCBmdW5jdGlvbihyZWNvcmQpIHtcbiAgICAgIHZhciBzb2JqZWN0VHlwZSA9IHR5cGUgfHwgKHJlY29yZC5hdHRyaWJ1dGVzICYmIHJlY29yZC5hdHRyaWJ1dGVzLnR5cGUpIHx8IHJlY29yZC50eXBlO1xuICAgICAgdmFyIGV4dElkID0gcmVjb3JkW2V4dElkRmllbGRdO1xuICAgICAgcmVjb3JkID0gXy5jbG9uZShyZWNvcmQpO1xuICAgICAgZGVsZXRlIHJlY29yZFtleHRJZEZpZWxkXTtcbiAgICAgIGRlbGV0ZSByZWNvcmQudHlwZTtcbiAgICAgIGRlbGV0ZSByZWNvcmQuYXR0cmlidXRlcztcblxuICAgICAgdmFyIHVybCA9IFsgc2VsZi5fYmFzZVVybCgpLCBcInNvYmplY3RzXCIsIHNvYmplY3RUeXBlLCBleHRJZEZpZWxkLCBleHRJZCBdLmpvaW4oJy8nKTtcbiAgICAgIHJldHVybiBzZWxmLnJlcXVlc3Qoe1xuICAgICAgICBtZXRob2QgOiAnUEFUQ0gnLFxuICAgICAgICB1cmwgOiB1cmwsXG4gICAgICAgIGJvZHkgOiBKU09OLnN0cmluZ2lmeShyZWNvcmQpLFxuICAgICAgICBoZWFkZXJzIDogXy5kZWZhdWx0cyhvcHRpb25zLmhlYWRlcnMgfHwge30sIHtcbiAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiIDogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICAgICAgfSlcbiAgICAgIH0sIHtcbiAgICAgICAgbm9Db250ZW50UmVzcG9uc2U6IHsgc3VjY2VzcyA6IHRydWUsIGVycm9ycyA6IFtdIH1cbiAgICAgIH0pXG4gICAgICAuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgIC8vIGJlIGF3YXJlIHRoYXQgYGFsbE9yTm9uZWAgb3B0aW9uIGluIHVwc2VydCBtZXRob2Qgd2lsbCBub3QgcmV2ZXJ0IHRoZSBvdGhlciBzdWNjZXNzZnVsIHJlcXVlc3RzXG4gICAgICAgIC8vIGl0IG9ubHkgcmFpc2VzIGVycm9yIHdoZW4gbWV0IGF0IGxlYXN0IG9uZSBmYWlsZWQgcmVxdWVzdC5cbiAgICAgICAgaWYgKCFpc0FycmF5IHx8IG9wdGlvbnMuYWxsT3JOb25lIHx8ICFlcnIuZXJyb3JDb2RlKSB7IHRocm93IGVycjsgfVxuICAgICAgICByZXR1cm4gdGhpcy5fdG9SZWNvcmRSZXN1bHQobnVsbCwgZXJyKTtcbiAgICAgIH0pXG4gICAgfSlcbiAgKS50aGVuKGZ1bmN0aW9uKHJlc3VsdHMpIHtcbiAgICByZXR1cm4gIWlzQXJyYXkgJiYgXy5pc0FycmF5KHJlc3VsdHMpID8gcmVzdWx0c1swXSA6IHJlc3VsdHM7XG4gIH0pLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogU3lub255bSBvZiBDb25uZWN0aW9uI2Rlc3Ryb3koKVxuICpcbiAqIEBtZXRob2QgQ29ubmVjdGlvbiNkZWxldGVcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlIC0gU09iamVjdCBUeXBlXG4gKiBAcGFyYW0ge1N0cmluZ3xBcnJheS48U3RyaW5nPn0gaWRzIC0gQSBJRCBvciBhcnJheSBvZiBJRHMgdG8gZGVsZXRlXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gT3B0aW9ucyBmb3IgcmVzdCBhcGkuXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLmFsbE9yTm9uZV0gLSBJZiB0cnVlLCBhbnkgZmFpbGVkIHJlY29yZHMgaW4gYSBjYWxsIGNhdXNlIGFsbCBjaGFuZ2VzIGZvciB0aGUgY2FsbCB0byBiZSByb2xsZWQgYmFja1xuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5hbGxvd1JlY3Vyc2l2ZV0gLSBJZiB0cnVlLCB3aGVuIGlkcyBnb2VzIG92ZXIgdGhlIG1heCBudW0gb2YgY29sbGVjdGlvbiBBUEkgKD0yMDApLCBpZHMgYXJlIGRpdmlkZWQgaW50byBzZXZlcmFsIGNodW5rcyBhbmQgcmVxdWVzdGVkIHJlY3Vyc2l2ZWx5LlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zLmhlYWRlcnNdIC0gQWRkaXRpb25hbCBIVFRQIHJlcXVlc3QgaGVhZGVycyBzZW50IGluIHJldHJpZXZlIHJlcXVlc3RcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFJlY29yZFJlc3VsdHxBcnJheS48UmVjb3JkUmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFja1xuICogQHJldHVybnMge1Byb21pc2UuPFJlY29yZFJlc3VsdHxBcnJheS48UmVjb3JkUmVzdWx0Pj59XG4gKi9cbi8qKlxuICogU3lub255bSBvZiBDb25uZWN0aW9uI2Rlc3Ryb3koKVxuICpcbiAqIEBtZXRob2QgQ29ubmVjdGlvbiNkZWxcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlIC0gU09iamVjdCBUeXBlXG4gKiBAcGFyYW0ge1N0cmluZ3xBcnJheS48U3RyaW5nPn0gaWRzIC0gQSBJRCBvciBhcnJheSBvZiBJRHMgdG8gZGVsZXRlXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gT3B0aW9ucyBmb3IgcmVzdCBhcGkuXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLmFsbE9yTm9uZV0gLSBJZiB0cnVlLCBhbnkgZmFpbGVkIHJlY29yZHMgaW4gYSBjYWxsIGNhdXNlIGFsbCBjaGFuZ2VzIGZvciB0aGUgY2FsbCB0byBiZSByb2xsZWQgYmFja1xuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5hbGxvd1JlY3Vyc2l2ZV0gLSBJZiB0cnVlLCB3aGVuIGlkcyBnb2VzIG92ZXIgdGhlIG1heCBudW0gb2YgY29sbGVjdGlvbiBBUEkgKD0yMDApLCBpZHMgYXJlIGRpdmlkZWQgaW50byBzZXZlcmFsIGNodW5rcyBhbmQgcmVxdWVzdGVkIHJlY3Vyc2l2ZWx5LlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zLmhlYWRlcnNdIC0gQWRkaXRpb25hbCBIVFRQIHJlcXVlc3QgaGVhZGVycyBzZW50IGluIHJldHJpZXZlIHJlcXVlc3RcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFJlY29yZFJlc3VsdHxBcnJheS48UmVjb3JkUmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFja1xuICogQHJldHVybnMge1Byb21pc2UuPFJlY29yZFJlc3VsdHxBcnJheS48UmVjb3JkUmVzdWx0Pj59XG4gKi9cbi8qKlxuICogRGVsZXRlIHJlY29yZHNcbiAqXG4gKiBAbWV0aG9kIENvbm5lY3Rpb24jZGVzdHJveVxuICogQHBhcmFtIHtTdHJpbmd9IHR5cGUgLSBTT2JqZWN0IFR5cGVcbiAqIEBwYXJhbSB7U3RyaW5nfEFycmF5LjxTdHJpbmc+fSBpZHMgLSBBIElEIG9yIGFycmF5IG9mIElEcyB0byBkZWxldGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSBPcHRpb25zIGZvciByZXN0IGFwaS5cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuYWxsT3JOb25lXSAtIElmIHRydWUsIGFueSBmYWlsZWQgcmVjb3JkcyBpbiBhIGNhbGwgY2F1c2UgYWxsIGNoYW5nZXMgZm9yIHRoZSBjYWxsIHRvIGJlIHJvbGxlZCBiYWNrXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLmFsbG93UmVjdXJzaXZlXSAtIElmIHRydWUsIHdoZW4gaWRzIGdvZXMgb3ZlciB0aGUgbWF4IG51bSBvZiBjb2xsZWN0aW9uIEFQSSAoPTIwMCksIGlkcyBhcmUgZGl2aWRlZCBpbnRvIHNldmVyYWwgY2h1bmtzIGFuZCByZXF1ZXN0ZWQgcmVjdXJzaXZlbHkuXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnMuaGVhZGVyc10gLSBBZGRpdGlvbmFsIEhUVFAgcmVxdWVzdCBoZWFkZXJzIHNlbnQgaW4gcmV0cmlldmUgcmVxdWVzdFxuICogQHBhcmFtIHtDYWxsYmFjay48UmVjb3JkUmVzdWx0fEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48UmVjb3JkUmVzdWx0fEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn1cbiAqL1xuQ29ubmVjdGlvbi5wcm90b3R5cGVbXCJkZWxldGVcIl0gPVxuQ29ubmVjdGlvbi5wcm90b3R5cGUuZGVsID1cbkNvbm5lY3Rpb24ucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbih0eXBlLCBpZHMsIG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNhbGxiYWNrID0gb3B0aW9ucztcbiAgICBvcHRpb25zID0ge307XG4gIH1cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIHJldHVybiAoXG4gICAgXy5pc0FycmF5KGlkcykgP1xuICAgICAgKHRoaXMuX2Vuc3VyZVZlcnNpb24oNDIpID8gLy8gY2hlY2sgdGhlIHZlcnNpb24gd2hldGhlciBTT2JqZWN0IGNvbGxlY3Rpb24gQVBJIGlzIHN1cHBvcnRlZCAoNDIuMClcbiAgICAgICAgdGhpcy5fZGVzdHJveU1hbnkodHlwZSwgaWRzLCBvcHRpb25zKSA6XG4gICAgICAgIHRoaXMuX2Rlc3Ryb3lQYXJhbGxlbCh0eXBlLCBpZHMsIG9wdGlvbnMpKSA6XG4gICAgICB0aGlzLl9kZXN0cm95U2luZ2xlKHR5cGUsIGlkcywgb3B0aW9ucylcbiAgKS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKiogQHByaXZhdGUgKi9cbkNvbm5lY3Rpb24ucHJvdG90eXBlLl9kZXN0cm95U2luZ2xlID0gZnVuY3Rpb24odHlwZSwgaWQsIG9wdGlvbnMpIHtcbiAgdmFyIHVybCA9IFsgdGhpcy5fYmFzZVVybCgpLCBcInNvYmplY3RzXCIsIHR5cGUsIGlkIF0uam9pbignLycpO1xuICByZXR1cm4gdGhpcy5yZXF1ZXN0KHtcbiAgICBtZXRob2QgOiAnREVMRVRFJyxcbiAgICB1cmwgOiB1cmwsXG4gICAgaGVhZGVyczogb3B0aW9ucy5oZWFkZXJzIHx8IG51bGxcbiAgfSwge1xuICAgIG5vQ29udGVudFJlc3BvbnNlOiB7IGlkIDogaWQsIHN1Y2Nlc3MgOiB0cnVlLCBlcnJvcnMgOiBbXSB9XG4gIH0pO1xufTtcblxuLyoqIEBwcml2YXRlICovXG5Db25uZWN0aW9uLnByb3RvdHlwZS5fZGVzdHJveVBhcmFsbGVsID0gZnVuY3Rpb24odHlwZSwgaWRzLCBvcHRpb25zKSB7XG4gIGlmIChpZHMubGVuZ3RoID4gdGhpcy5tYXhSZXF1ZXN0KSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBFcnJvcihcIkV4Y2VlZGVkIG1heCBsaW1pdCBvZiBjb25jdXJyZW50IGNhbGxcIikpO1xuICB9XG4gIHZhciBzZWxmID0gdGhpcztcbiAgcmV0dXJuIFByb21pc2UuYWxsKFxuICAgIGlkcy5tYXAoZnVuY3Rpb24oaWQpIHtcbiAgICAgIHJldHVybiBzZWxmLl9kZXN0cm95U2luZ2xlKHR5cGUsIGlkLCBvcHRpb25zKS5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgLy8gYmUgYXdhcmUgdGhhdCBgYWxsT3JOb25lYCBvcHRpb24gaW4gcGFyYWxsZWwgbW9kZSB3aWxsIG5vdCByZXZlcnQgdGhlIG90aGVyIHN1Y2Nlc3NmdWwgcmVxdWVzdHNcbiAgICAgICAgLy8gaXQgb25seSByYWlzZXMgZXJyb3Igd2hlbiBtZXQgYXQgbGVhc3Qgb25lIGZhaWxlZCByZXF1ZXN0LlxuICAgICAgICBpZiAob3B0aW9ucy5hbGxPck5vbmUgfHwgIWVyci5lcnJvckNvZGUpIHtcbiAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX3RvUmVjb3JkUmVzdWx0KGlkLCBlcnIpO1xuICAgICAgfSk7XG4gICAgfSlcbiAgKTtcbn07XG5cblxuLyoqIEBwcml2YXRlICovXG5Db25uZWN0aW9uLnByb3RvdHlwZS5fZGVzdHJveU1hbnkgPSBmdW5jdGlvbih0eXBlLCBpZHMsIG9wdGlvbnMpIHtcbiAgaWYgKGlkcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKFtdKTtcbiAgfVxuICBpZiAoaWRzLmxlbmd0aCA+IE1BWF9ETUxfQ09VTlQgJiYgb3B0aW9ucy5hbGxvd1JlY3Vyc2l2ZSkge1xuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICByZXR1cm4gc2VsZi5fZGVzdHJveU1hbnkodHlwZSwgaWRzLnNsaWNlKDAsIE1BWF9ETUxfQ09VTlQpLCBvcHRpb25zKS50aGVuKGZ1bmN0aW9uKHJldHMxKSB7XG4gICAgICByZXR1cm4gc2VsZi5fZGVzdHJveU1hbnkodHlwZSwgaWRzLnNsaWNlKE1BWF9ETUxfQ09VTlQpLCBvcHRpb25zKS50aGVuKGZ1bmN0aW9uKHJldHMyKSB7XG4gICAgICAgIHJldHVybiByZXRzMS5jb25jYXQocmV0czIpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgdmFyIHVybCA9IFsgdGhpcy5fYmFzZVVybCgpLCBcImNvbXBvc2l0ZVwiLCBcInNvYmplY3RzP2lkcz1cIiBdLmpvaW4oJy8nKSArIGlkcy5qb2luKCcsJyk7XG4gIGlmIChvcHRpb25zLmFsbE9yTm9uZSkge1xuICAgIHVybCArPSAnJmFsbE9yTm9uZT10cnVlJztcbiAgfVxuICByZXR1cm4gdGhpcy5yZXF1ZXN0KHtcbiAgICBtZXRob2QgOiAnREVMRVRFJyxcbiAgICB1cmwgOiB1cmwsXG4gICAgaGVhZGVyczogb3B0aW9ucy5oZWFkZXJzIHx8IG51bGxcbiAgfSk7XG59O1xuXG4vKipcbiAqIEV4ZWN1dGUgc2VhcmNoIGJ5IFNPU0xcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc29zbCAtIFNPU0wgc3RyaW5nXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxBcnJheS48UmVjb3JkUmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn1cbiAqL1xuQ29ubmVjdGlvbi5wcm90b3R5cGUuc2VhcmNoID0gZnVuY3Rpb24oc29zbCwgY2FsbGJhY2spIHtcbiAgdmFyIHVybCA9IHRoaXMuX2Jhc2VVcmwoKSArIFwiL3NlYXJjaD9xPVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KHNvc2wpO1xuICByZXR1cm4gdGhpcy5yZXF1ZXN0KHVybCkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBSZXN1bHQgcmV0dXJuZWQgYnkgZGVzY3JpYmVTT2JqZWN0IGNhbGxcbiAqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBEZXNjcmliZVNPYmplY3RSZXN1bHRcbiAqL1xuLyoqXG4gKiBTeW5vbnltIG9mIENvbm5lY3Rpb24jZGVzY3JpYmUoKVxuICpcbiAqIEBtZXRob2QgQ29ubmVjdGlvbiNkZXNjcmliZVNPYmplY3RcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlIC0gU09iamVjdCBUeXBlXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxEZXNjcmliZVNPYmplY3RSZXN1bHQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxEZXNjcmliZVNPYmplY3RSZXN1bHQ+fVxuICovXG4vKipcbiAqIERlc2NyaWJlIFNPYmplY3QgbWV0YWRhdGFcbiAqXG4gKiBAbWV0aG9kIENvbm5lY3Rpb24jZGVzY3JpYmVcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlIC0gU09iamVjdCBUeXBlXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxEZXNjcmliZVNPYmplY3RSZXN1bHQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxEZXNjcmliZVNPYmplY3RSZXN1bHQ+fVxuICovXG5Db25uZWN0aW9uLnByb3RvdHlwZS5kZXNjcmliZSA9XG5Db25uZWN0aW9uLnByb3RvdHlwZS5kZXNjcmliZVNPYmplY3QgPSBmdW5jdGlvbih0eXBlLCBjYWxsYmFjaykge1xuICB2YXIgdXJsID0gWyB0aGlzLl9iYXNlVXJsKCksIFwic29iamVjdHNcIiwgdHlwZSwgXCJkZXNjcmliZVwiIF0uam9pbignLycpO1xuICByZXR1cm4gdGhpcy5yZXF1ZXN0KHVybCkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuXG4vKipcbiAqIFJlc3VsdCByZXR1cm5lZCBieSBkZXNjcmliZUdsb2JhbCBjYWxsXG4gKlxuICogQHR5cGVkZWYge09iamVjdH0gRGVzY3JpYmVHbG9iYWxSZXN1bHRcbiAqL1xuLyoqXG4gKiBEZXNjcmliZSBnbG9iYWwgU09iamVjdHNcbiAqXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxEZXNjcmliZUdsb2JhbFJlc3VsdD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPERlc2NyaWJlR2xvYmFsUmVzdWx0Pn1cbiAqL1xuQ29ubmVjdGlvbi5wcm90b3R5cGUuZGVzY3JpYmVHbG9iYWwgPSBmdW5jdGlvbihjYWxsYmFjaykge1xuICB2YXIgdXJsID0gdGhpcy5fYmFzZVVybCgpICsgXCIvc29iamVjdHNcIjtcbiAgcmV0dXJuIHRoaXMucmVxdWVzdCh1cmwpLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cblxuLyoqXG4gKiBHZXQgU09iamVjdCBpbnN0YW5jZVxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlIC0gU09iamVjdCBUeXBlXG4gKiBAcmV0dXJucyB7U09iamVjdH1cbiAqL1xuQ29ubmVjdGlvbi5wcm90b3R5cGUuc29iamVjdCA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgdGhpcy5zb2JqZWN0cyA9IHRoaXMuc29iamVjdHMgfHwge307XG4gIHZhciBzb2JqZWN0ID0gdGhpcy5zb2JqZWN0c1t0eXBlXSA9XG4gICAgdGhpcy5zb2JqZWN0c1t0eXBlXSB8fCBuZXcgU09iamVjdCh0aGlzLCB0eXBlKTtcbiAgcmV0dXJuIHNvYmplY3Q7XG59O1xuXG4vKipcbiAqIEdldCBpZGVudGl0eSBpbmZvcm1hdGlvbiBvZiBjdXJyZW50IHVzZXJcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gSWRlbnRpdHkgY2FsbCBvcHRpb25zXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnMuaGVhZGVyc10gLSBBZGRpdGlvbmFsIEhUVFAgcmVxdWVzdCBoZWFkZXJzIHNlbnQgaW4gaWRlbnRpdHkgcmVxdWVzdFxuICogQHBhcmFtIHtDYWxsYmFjay48SWRlbnRpdHlJbmZvPn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48SWRlbnRpdHlJbmZvPn1cbiAqL1xuQ29ubmVjdGlvbi5wcm90b3R5cGUuaWRlbnRpdHkgPSBmdW5jdGlvbihvcHRpb25zLCBjYWxsYmFjaykge1xuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYWxsYmFjayA9IG9wdGlvbnM7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciBpZFVybCA9IHRoaXMudXNlckluZm8gJiYgdGhpcy51c2VySW5mby51cmw7XG4gIHJldHVybiBQcm9taXNlLnJlc29sdmUoXG4gICAgaWRVcmwgP1xuICAgIHsgaWRlbnRpdHk6IGlkVXJsIH0gOlxuICAgIHRoaXMucmVxdWVzdCh7IG1ldGhvZDogJ0dFVCcsIHVybDogdGhpcy5fYmFzZVVybCgpLCBoZWFkZXJzOiBvcHRpb25zLmhlYWRlcnMgfSlcbiAgKS50aGVuKGZ1bmN0aW9uKHJlcykge1xuICAgIHZhciB1cmwgPSByZXMuaWRlbnRpdHk7XG4gICAgcmV0dXJuIHNlbGYucmVxdWVzdCh7IG1ldGhvZDogJ0dFVCcsIHVybDogdXJsIH0pO1xuICB9KS50aGVuKGZ1bmN0aW9uKHJlcykge1xuICAgIHNlbGYudXNlckluZm8gPSB7XG4gICAgICBpZDogcmVzLnVzZXJfaWQsXG4gICAgICBvcmdhbml6YXRpb25JZDogcmVzLm9yZ2FuaXphdGlvbl9pZCxcbiAgICAgIHVybDogcmVzLmlkXG4gICAgfTtcbiAgICByZXR1cm4gcmVzO1xuICB9KS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIEB0eXBlZGVmIFVzZXJJbmZvXG4gKiBAcHJvcCB7U3RyaW5nfSBpZCAtIFVzZXIgSURcbiAqIEBwcm9wIHtTdHJpbmd9IG9yZ2FuaXphdGlvbklkIC0gT3JnYW5pemF0aW9uIElEXG4gKiBAcHJvcCB7U3RyaW5nfSB1cmwgLSBJZGVudGl0eSBVUkwgb2YgdGhlIHVzZXJcbiAqL1xuXG4vKipcbiAqIEF1dGhvcml6ZSAodXNpbmcgb2F1dGgyIHdlYiBzZXJ2ZXIgZmxvdylcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gY29kZSAtIEF1dGhvcml6YXRpb24gY29kZVxuICogQHBhcmFtIHtPYmplY3R9IFtwYXJhbXNdIC0gT3B0aW9uYWwgcGFyYW1ldGVycyB0byBzZW5kIGluIHRva2VuIHJldHJpZXZhbFxuICogQHBhcmFtIHtTdHJpbmd9IFtwYXJhbXMuY29kZV92ZXJpZmllcl0gLSBDb2RlIHZlcmlmaWVyIHZhbHVlIChSRkMgNzYzNiAtIFByb29mIEtleSBvZiBDb2RlIEV4Y2hhbmdlKVxuICogQHBhcmFtIHtDYWxsYmFjay48VXNlckluZm8+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxVc2VySW5mbz59XG4gKi9cbkNvbm5lY3Rpb24ucHJvdG90eXBlLmF1dGhvcml6ZSA9IGZ1bmN0aW9uKGNvZGUsIHBhcmFtcywgY2FsbGJhY2spIHtcbiAgaWYgKHR5cGVvZiBwYXJhbXMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYWxsYmFjayA9IHBhcmFtcztcbiAgICBwYXJhbXMgPSB7fTtcbiAgfVxuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciBsb2dnZXIgPSB0aGlzLl9sb2dnZXI7XG5cbiAgcmV0dXJuIHRoaXMub2F1dGgyLnJlcXVlc3RUb2tlbihjb2RlLCBwYXJhbXMpLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgdmFyIHVzZXJJbmZvID0gcGFyc2VJZFVybChyZXMuaWQpO1xuICAgIHNlbGYuaW5pdGlhbGl6ZSh7XG4gICAgICBpbnN0YW5jZVVybCA6IHJlcy5pbnN0YW5jZV91cmwsXG4gICAgICBhY2Nlc3NUb2tlbiA6IHJlcy5hY2Nlc3NfdG9rZW4sXG4gICAgICByZWZyZXNoVG9rZW4gOiByZXMucmVmcmVzaF90b2tlbixcbiAgICAgIHVzZXJJbmZvOiB1c2VySW5mb1xuICAgIH0pO1xuICAgIGxvZ2dlci5kZWJ1ZyhcIjxsb2dpbj4gY29tcGxldGVkLiB1c2VyIGlkID0gXCIgKyB1c2VySW5mby5pZCArIFwiLCBvcmcgaWQgPSBcIiArIHVzZXJJbmZvLm9yZ2FuaXphdGlvbklkKTtcbiAgICByZXR1cm4gdXNlckluZm87XG5cbiAgfSkudGhlbkNhbGwoY2FsbGJhY2spO1xuXG59O1xuXG5cbi8qKlxuICogTG9naW4gdG8gU2FsZXNmb3JjZVxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB1c2VybmFtZSAtIFNhbGVzZm9yY2UgdXNlcm5hbWVcbiAqIEBwYXJhbSB7U3RyaW5nfSBwYXNzd29yZCAtIFNhbGVzZm9yY2UgcGFzc3dvcmQgKGFuZCBzZWN1cml0eSB0b2tlbiwgaWYgcmVxdWlyZWQpXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxVc2VySW5mbz59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPFVzZXJJbmZvPn1cbiAqL1xuQ29ubmVjdGlvbi5wcm90b3R5cGUubG9naW4gPSBmdW5jdGlvbih1c2VybmFtZSwgcGFzc3dvcmQsIGNhbGxiYWNrKSB7XG4gIC8vIHJlZ2lzdGVyIHJlZnJlc2hEZWxlZ2F0ZSBmb3Igc2Vzc2lvbiBleHBpcmF0aW9uXG4gIHRoaXMuX3JlZnJlc2hEZWxlZ2F0ZSA9IG5ldyBIdHRwQXBpLlNlc3Npb25SZWZyZXNoRGVsZWdhdGUodGhpcywgY3JlYXRlVXNlcm5hbWVQYXNzd29yZFJlZnJlc2hGbih1c2VybmFtZSwgcGFzc3dvcmQpKTtcbiAgaWYgKHRoaXMub2F1dGgyICYmIHRoaXMub2F1dGgyLmNsaWVudElkICYmIHRoaXMub2F1dGgyLmNsaWVudFNlY3JldCkge1xuICAgIHJldHVybiB0aGlzLmxvZ2luQnlPQXV0aDIodXNlcm5hbWUsIHBhc3N3b3JkLCBjYWxsYmFjayk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHRoaXMubG9naW5CeVNvYXAodXNlcm5hbWUsIHBhc3N3b3JkLCBjYWxsYmFjayk7XG4gIH1cbn07XG5cbi8qKiBAcHJpdmF0ZSAqKi9cbmZ1bmN0aW9uIGNyZWF0ZVVzZXJuYW1lUGFzc3dvcmRSZWZyZXNoRm4odXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gIHJldHVybiBmdW5jdGlvbihjb25uLCBjYWxsYmFjaykge1xuICAgIGNvbm4ubG9naW4odXNlcm5hbWUsIHBhc3N3b3JkLCBmdW5jdGlvbihlcnIpIHtcbiAgICAgIGlmIChlcnIpIHsgcmV0dXJuIGNhbGxiYWNrKGVycik7IH1cbiAgICAgIGNhbGxiYWNrKG51bGwsIGNvbm4uYWNjZXNzVG9rZW4pO1xuICAgIH0pO1xuICB9O1xufVxuXG4vKipcbiAqIExvZ2luIGJ5IE9BdXRoMiB1c2VybmFtZSAmIHBhc3N3b3JkIGZsb3dcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdXNlcm5hbWUgLSBTYWxlc2ZvcmNlIHVzZXJuYW1lXG4gKiBAcGFyYW0ge1N0cmluZ30gcGFzc3dvcmQgLSBTYWxlc2ZvcmNlIHBhc3N3b3JkIChhbmQgc2VjdXJpdHkgdG9rZW4sIGlmIHJlcXVpcmVkKVxuICogQHBhcmFtIHtDYWxsYmFjay48VXNlckluZm8+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxVc2VySW5mbz59XG4gKi9cbkNvbm5lY3Rpb24ucHJvdG90eXBlLmxvZ2luQnlPQXV0aDIgPSBmdW5jdGlvbih1c2VybmFtZSwgcGFzc3dvcmQsIGNhbGxiYWNrKSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIGxvZ2dlciA9IHRoaXMuX2xvZ2dlcjtcbiAgcmV0dXJuIHRoaXMub2F1dGgyLmF1dGhlbnRpY2F0ZSh1c2VybmFtZSwgcGFzc3dvcmQpLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgdmFyIHVzZXJJbmZvID0gcGFyc2VJZFVybChyZXMuaWQpO1xuICAgIHNlbGYuaW5pdGlhbGl6ZSh7XG4gICAgICBpbnN0YW5jZVVybCA6IHJlcy5pbnN0YW5jZV91cmwsXG4gICAgICBhY2Nlc3NUb2tlbiA6IHJlcy5hY2Nlc3NfdG9rZW4sXG4gICAgICB1c2VySW5mbzogdXNlckluZm9cbiAgICB9KTtcbiAgICBsb2dnZXIuZGVidWcoXCI8bG9naW4+IGNvbXBsZXRlZC4gdXNlciBpZCA9IFwiICsgdXNlckluZm8uaWQgKyBcIiwgb3JnIGlkID0gXCIgKyB1c2VySW5mby5vcmdhbml6YXRpb25JZCk7XG4gICAgcmV0dXJuIHVzZXJJbmZvO1xuXG4gIH0pLnRoZW5DYWxsKGNhbGxiYWNrKTtcblxufTtcblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBlc2Moc3RyKSB7XG4gIHJldHVybiBzdHIgJiYgU3RyaW5nKHN0cikucmVwbGFjZSgvJi9nLCAnJmFtcDsnKS5yZXBsYWNlKC88L2csICcmbHQ7JylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC8+L2csICcmZ3Q7JykucmVwbGFjZSgvXCIvZywgJyZxdW90OycpO1xufVxuXG4vKipcbiAqIExvZ2luIGJ5IFNPQVAgd2ViIHNlcnZpY2UgQVBJXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHVzZXJuYW1lIC0gU2FsZXNmb3JjZSB1c2VybmFtZVxuICogQHBhcmFtIHtTdHJpbmd9IHBhc3N3b3JkIC0gU2FsZXNmb3JjZSBwYXNzd29yZCAoYW5kIHNlY3VyaXR5IHRva2VuLCBpZiByZXF1aXJlZClcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFVzZXJJbmZvPn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48VXNlckluZm8+fVxuICovXG5Db25uZWN0aW9uLnByb3RvdHlwZS5sb2dpbkJ5U29hcCA9IGZ1bmN0aW9uKHVzZXJuYW1lLCBwYXNzd29yZCwgY2FsbGJhY2spIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgbG9nZ2VyID0gdGhpcy5fbG9nZ2VyO1xuICB2YXIgYm9keSA9IFtcbiAgICAnPHNlOkVudmVsb3BlIHhtbG5zOnNlPVwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvc29hcC9lbnZlbG9wZS9cIj4nLFxuICAgICAgJzxzZTpIZWFkZXIvPicsXG4gICAgICAnPHNlOkJvZHk+JyxcbiAgICAgICAgJzxsb2dpbiB4bWxucz1cInVybjpwYXJ0bmVyLnNvYXAuc2ZvcmNlLmNvbVwiPicsXG4gICAgICAgICAgJzx1c2VybmFtZT4nICsgZXNjKHVzZXJuYW1lKSArICc8L3VzZXJuYW1lPicsXG4gICAgICAgICAgJzxwYXNzd29yZD4nICsgZXNjKHBhc3N3b3JkKSArICc8L3Bhc3N3b3JkPicsXG4gICAgICAgICc8L2xvZ2luPicsXG4gICAgICAnPC9zZTpCb2R5PicsXG4gICAgJzwvc2U6RW52ZWxvcGU+J1xuICBdLmpvaW4oJycpO1xuXG4gIHZhciBzb2FwTG9naW5FbmRwb2ludCA9IFsgdGhpcy5sb2dpblVybCwgXCJzZXJ2aWNlcy9Tb2FwL3VcIiwgdGhpcy52ZXJzaW9uIF0uam9pbignLycpO1xuXG4gIHJldHVybiB0aGlzLl90cmFuc3BvcnQuaHR0cFJlcXVlc3Qoe1xuICAgIG1ldGhvZCA6ICdQT1NUJyxcbiAgICB1cmwgOiBzb2FwTG9naW5FbmRwb2ludCxcbiAgICBib2R5IDogYm9keSxcbiAgICBoZWFkZXJzIDoge1xuICAgICAgXCJDb250ZW50LVR5cGVcIiA6IFwidGV4dC94bWxcIixcbiAgICAgIFwiU09BUEFjdGlvblwiIDogJ1wiXCInXG4gICAgfVxuICB9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgdmFyIG07XG4gICAgaWYgKHJlc3BvbnNlLnN0YXR1c0NvZGUgPj0gNDAwKSB7XG4gICAgICBtID0gcmVzcG9uc2UuYm9keS5tYXRjaCgvPGZhdWx0c3RyaW5nPihbXjxdKyk8XFwvZmF1bHRzdHJpbmc+Lyk7XG4gICAgICB2YXIgZmF1bHRzdHJpbmcgPSBtICYmIG1bMV07XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoZmF1bHRzdHJpbmcgfHwgcmVzcG9uc2UuYm9keSk7XG4gICAgfVxuICAgIGxvZ2dlci5kZWJ1ZyhcIlNPQVAgcmVzcG9uc2UgPSBcIiArIHJlc3BvbnNlLmJvZHkpO1xuICAgIG0gPSByZXNwb25zZS5ib2R5Lm1hdGNoKC88c2VydmVyVXJsPihbXjxdKyk8XFwvc2VydmVyVXJsPi8pO1xuICAgIHZhciBzZXJ2ZXJVcmwgPSBtICYmIG1bMV07XG4gICAgbSA9IHJlc3BvbnNlLmJvZHkubWF0Y2goLzxzZXNzaW9uSWQ+KFtePF0rKTxcXC9zZXNzaW9uSWQ+Lyk7XG4gICAgdmFyIHNlc3Npb25JZCA9IG0gJiYgbVsxXTtcbiAgICBtID0gcmVzcG9uc2UuYm9keS5tYXRjaCgvPHVzZXJJZD4oW148XSspPFxcL3VzZXJJZD4vKTtcbiAgICB2YXIgdXNlcklkID0gbSAmJiBtWzFdO1xuICAgIG0gPSByZXNwb25zZS5ib2R5Lm1hdGNoKC88b3JnYW5pemF0aW9uSWQ+KFtePF0rKTxcXC9vcmdhbml6YXRpb25JZD4vKTtcbiAgICB2YXIgb3JnSWQgPSBtICYmIG1bMV07XG4gICAgdmFyIGlkVXJsID0gc29hcExvZ2luRW5kcG9pbnQuc3BsaXQoJy8nKS5zbGljZSgwLCAzKS5qb2luKCcvJyk7XG4gICAgaWRVcmwgKz0gXCIvaWQvXCIgKyBvcmdJZCArIFwiL1wiICsgdXNlcklkO1xuICAgIHZhciB1c2VySW5mbyA9IHtcbiAgICAgIGlkOiB1c2VySWQsXG4gICAgICBvcmdhbml6YXRpb25JZDogb3JnSWQsXG4gICAgICB1cmw6IGlkVXJsXG4gICAgfTtcbiAgICBzZWxmLmluaXRpYWxpemUoe1xuICAgICAgc2VydmVyVXJsOiBzZXJ2ZXJVcmwuc3BsaXQoJy8nKS5zbGljZSgwLCAzKS5qb2luKCcvJyksXG4gICAgICBzZXNzaW9uSWQ6IHNlc3Npb25JZCxcbiAgICAgIHVzZXJJbmZvOiB1c2VySW5mb1xuICAgIH0pO1xuICAgIGxvZ2dlci5kZWJ1ZyhcIjxsb2dpbj4gY29tcGxldGVkLiB1c2VyIGlkID0gXCIgKyB1c2VySWQgKyBcIiwgb3JnIGlkID0gXCIgKyBvcmdJZCk7XG4gICAgcmV0dXJuIHVzZXJJbmZvO1xuXG4gIH0pLnRoZW5DYWxsKGNhbGxiYWNrKTtcblxufTtcblxuLyoqXG4gKiBMb2dvdXQgdGhlIGN1cnJlbnQgc2Vzc2lvbiBcbiAqXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtyZXZva2VdIC0gUmV2b2tlcyBBUEkgQWNjZXNzIGlmIHNldCB0byB0cnVlXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjx1bmRlZmluZWQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjx1bmRlZmluZWQ+fVxuICovXG5Db25uZWN0aW9uLnByb3RvdHlwZS5sb2dvdXQgPSBmdW5jdGlvbihyZXZva2UsIGNhbGxiYWNrKSB7XG4gIGlmICh0eXBlb2YgcmV2b2tlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2FsbGJhY2sgPSByZXZva2U7XG4gICAgcmV2b2tlID0gZmFsc2U7XG4gIH1cblxuICBpZiAodGhpcy5fc2Vzc2lvblR5cGUgPT09IFwib2F1dGgyXCIpIHtcbiAgICByZXR1cm4gdGhpcy5sb2dvdXRCeU9BdXRoMihyZXZva2UsIGNhbGxiYWNrKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gdGhpcy5sb2dvdXRCeVNvYXAocmV2b2tlLCBjYWxsYmFjayk7XG4gIH1cbn07XG5cbi8qKlxuICogTG9nb3V0IHRoZSBjdXJyZW50IHNlc3Npb24gYnkgcmV2b2tpbmcgYWNjZXNzIHRva2VuIHZpYSBPQXV0aDIgc2Vzc2lvbiByZXZva2VcbiAqXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtyZXZva2VdIC0gUmV2b2tlcyBBUEkgQWNjZXNzIGlmIHNldCB0byB0cnVlXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjx1bmRlZmluZWQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjx1bmRlZmluZWQ+fVxuICovXG5Db25uZWN0aW9uLnByb3RvdHlwZS5sb2dvdXRCeU9BdXRoMiA9IGZ1bmN0aW9uKHJldm9rZSwgY2FsbGJhY2spIHtcbiAgaWYgKHR5cGVvZiByZXZva2UgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYWxsYmFjayA9IHJldm9rZTtcbiAgICByZXZva2UgPSBmYWxzZTtcbiAgfVxuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciBsb2dnZXIgPSB0aGlzLl9sb2dnZXI7XG5cbiAgcmV0dXJuIHRoaXMub2F1dGgyLnJldm9rZVRva2VuKHJldm9rZSA/IHRoaXMucmVmcmVzaFRva2VuIDogdGhpcy5hY2Nlc3NUb2tlbikudGhlbihmdW5jdGlvbigpIHtcbiAgICAvLyBEZXN0cm95IHRoZSBzZXNzaW9uIGJvdW5kIHRvIHRoaXMgY29ubmVjdGlvblxuICAgIHNlbGYuYWNjZXNzVG9rZW4gPSBudWxsO1xuICAgIHNlbGYudXNlckluZm8gPSBudWxsO1xuICAgIHNlbGYucmVmcmVzaFRva2VuID0gbnVsbDtcbiAgICBzZWxmLmluc3RhbmNlVXJsID0gbnVsbDtcbiAgICBzZWxmLmNhY2hlLmNsZWFyKCk7XG5cbiAgICAvLyBub3RoaW5nIHVzZWZ1bCByZXR1cm5lZCBieSBsb2dvdXQgQVBJLCBqdXN0IHJldHVyblxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH0pLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cblxuLyoqXG4gKiBMb2dvdXQgdGhlIHNlc3Npb24gYnkgdXNpbmcgU09BUCB3ZWIgc2VydmljZSBBUElcbiAqXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtyZXZva2VdIC0gUmV2b2tlcyBBUEkgQWNjZXNzIGlmIHNldCB0byB0cnVlXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjx1bmRlZmluZWQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjx1bmRlZmluZWQ+fVxuICovXG5Db25uZWN0aW9uLnByb3RvdHlwZS5sb2dvdXRCeVNvYXAgPSBmdW5jdGlvbihyZXZva2UsIGNhbGxiYWNrKSB7XG4gIGlmICh0eXBlb2YgcmV2b2tlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2FsbGJhY2sgPSByZXZva2U7XG4gICAgcmV2b2tlID0gZmFsc2U7XG4gIH1cbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgbG9nZ2VyID0gdGhpcy5fbG9nZ2VyO1xuXG4gIHZhciBib2R5ID0gW1xuICAgICc8c2U6RW52ZWxvcGUgeG1sbnM6c2U9XCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VudmVsb3BlL1wiPicsXG4gICAgICAnPHNlOkhlYWRlcj4nLFxuICAgICAgICAnPFNlc3Npb25IZWFkZXIgeG1sbnM9XCJ1cm46cGFydG5lci5zb2FwLnNmb3JjZS5jb21cIj4nLFxuICAgICAgICAgICc8c2Vzc2lvbklkPicgKyBlc2MocmV2b2tlID8gdGhpcy5yZWZyZXNoVG9rZW4gOiB0aGlzLmFjY2Vzc1Rva2VuKSArICc8L3Nlc3Npb25JZD4nLFxuICAgICAgICAnPC9TZXNzaW9uSGVhZGVyPicsXG4gICAgICAnPC9zZTpIZWFkZXI+JyxcbiAgICAgICc8c2U6Qm9keT4nLFxuICAgICAgICAnPGxvZ291dCB4bWxucz1cInVybjpwYXJ0bmVyLnNvYXAuc2ZvcmNlLmNvbVwiLz4nLFxuICAgICAgJzwvc2U6Qm9keT4nLFxuICAgICc8L3NlOkVudmVsb3BlPidcbiAgXS5qb2luKCcnKTtcblxuICByZXR1cm4gdGhpcy5fdHJhbnNwb3J0Lmh0dHBSZXF1ZXN0KHtcbiAgICBtZXRob2QgOiAnUE9TVCcsXG4gICAgdXJsIDogWyB0aGlzLmluc3RhbmNlVXJsLCBcInNlcnZpY2VzL1NvYXAvdVwiLCB0aGlzLnZlcnNpb24gXS5qb2luKCcvJyksXG4gICAgYm9keSA6IGJvZHksXG4gICAgaGVhZGVycyA6IHtcbiAgICAgIFwiQ29udGVudC1UeXBlXCIgOiBcInRleHQveG1sXCIsXG4gICAgICBcIlNPQVBBY3Rpb25cIiA6ICdcIlwiJ1xuICAgIH1cbiAgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgIGxvZ2dlci5kZWJ1ZyhcIlNPQVAgc3RhdHVzQ29kZSA9IFwiICsgcmVzcG9uc2Uuc3RhdHVzQ29kZSArIFwiLCByZXNwb25zZSA9IFwiICsgcmVzcG9uc2UuYm9keSk7XG4gICAgaWYgKHJlc3BvbnNlLnN0YXR1c0NvZGUgPj0gNDAwKSB7XG4gICAgICB2YXIgbSA9IHJlc3BvbnNlLmJvZHkubWF0Y2goLzxmYXVsdHN0cmluZz4oW148XSspPFxcL2ZhdWx0c3RyaW5nPi8pO1xuICAgICAgdmFyIGZhdWx0c3RyaW5nID0gbSAmJiBtWzFdO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGZhdWx0c3RyaW5nIHx8IHJlc3BvbnNlLmJvZHkpO1xuICAgIH1cblxuICAgIC8vIERlc3Ryb3kgdGhlIHNlc3Npb24gYm91bmQgdG8gdGhpcyBjb25uZWN0aW9uXG4gICAgc2VsZi5hY2Nlc3NUb2tlbiA9IG51bGw7XG4gICAgc2VsZi51c2VySW5mbyA9IG51bGw7XG4gICAgc2VsZi5yZWZyZXNoVG9rZW4gPSBudWxsO1xuICAgIHNlbGYuaW5zdGFuY2VVcmwgPSBudWxsO1xuICAgIHNlbGYuY2FjaGUuY2xlYXIoKTtcblxuICAgIC8vIG5vdGhpbmcgdXNlZnVsIHJldHVybmVkIGJ5IGxvZ291dCBBUEksIGp1c3QgcmV0dXJuXG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcblxuICB9KS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIExpc3QgcmVjZW50bHkgdmlld2VkIHJlY29yZHNcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gW3R5cGVdIC0gU09iamVjdCB0eXBlXG4gKiBAcGFyYW0ge051bWJlcn0gW2xpbWl0XSAtIExpbWl0IG51bSB0byBmZXRjaFxuICogQHBhcmFtIHtDYWxsYmFjay48QXJyYXkuPFJlY29yZFJlc3VsdD4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxBcnJheS48UmVjb3JkUmVzdWx0Pj59XG4gKi9cbkNvbm5lY3Rpb24ucHJvdG90eXBlLnJlY2VudCA9IGZ1bmN0aW9uKHR5cGUsIGxpbWl0LCBjYWxsYmFjaykge1xuICBpZiAoIV8uaXNTdHJpbmcodHlwZSkpIHtcbiAgICBjYWxsYmFjayA9IGxpbWl0O1xuICAgIGxpbWl0ID0gdHlwZTtcbiAgICB0eXBlID0gdW5kZWZpbmVkO1xuICB9XG4gIGlmICghXy5pc051bWJlcihsaW1pdCkpIHtcbiAgICBjYWxsYmFjayA9IGxpbWl0O1xuICAgIGxpbWl0ID0gdW5kZWZpbmVkO1xuICB9XG4gIHZhciB1cmw7XG4gIGlmICh0eXBlKSB7XG4gICAgdXJsID0gWyB0aGlzLl9iYXNlVXJsKCksIFwic29iamVjdHNcIiwgdHlwZSBdLmpvaW4oJy8nKTtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KHVybCkudGhlbihmdW5jdGlvbihyZXMpIHtcbiAgICAgIHJldHVybiBsaW1pdCA/IHJlcy5yZWNlbnRJdGVtcy5zbGljZSgwLCBsaW1pdCkgOiByZXMucmVjZW50SXRlbXM7XG4gICAgfSkudGhlbkNhbGwoY2FsbGJhY2spO1xuICB9IGVsc2Uge1xuICAgIHVybCA9IHRoaXMuX2Jhc2VVcmwoKSArIFwiL3JlY2VudFwiO1xuICAgIGlmIChsaW1pdCkge1xuICAgICAgdXJsICs9IFwiP2xpbWl0PVwiICsgbGltaXQ7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLnJlcXVlc3QodXJsKS50aGVuQ2FsbChjYWxsYmFjayk7XG4gIH1cblxufTtcblxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBVcGRhdGVkUmVjb3Jkc0luZm9cbiAqIEBwcm9wIHtTdHJpbmd9IGxhdGVzdERhdGVDb3ZlcmVkIC0gVGhlIHRpbWVzdGFtcCBvZiB0aGUgbGFzdCBkYXRlIGNvdmVyZWQuXG4gKiBAcHJvcCB7QXJyYXkuPFN0cmluZz59IGlkcyAtIFVwZGF0ZWQgcmVjb3JkIElEcy5cbiAqL1xuXG4vKipcbiAqIFJldHJpZXZlIHVwZGF0ZWQgcmVjb3Jkc1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlIC0gU09iamVjdCBUeXBlXG4gKiBAcGFyYW0ge1N0cmluZ3xEYXRlfSBzdGFydCAtIHN0YXJ0IGRhdGUgb3Igc3RyaW5nIHJlcHJlc2VudGluZyB0aGUgc3RhcnQgb2YgdGhlIGludGVydmFsXG4gKiBAcGFyYW0ge1N0cmluZ3xEYXRlfSBlbmQgLSBzdGFydCBkYXRlIG9yIHN0cmluZyByZXByZXNlbnRpbmcgdGhlIGVuZCBvZiB0aGUgaW50ZXJ2YWwgbXVzdCBiZSA+IHN0YXJ0XG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxVcGRhdGVkUmVjb3Jkc0luZm8+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxVcGRhdGVkUmVjb3Jkc0luZm8+fVxuICovXG5Db25uZWN0aW9uLnByb3RvdHlwZS51cGRhdGVkID0gZnVuY3Rpb24gKHR5cGUsIHN0YXJ0LCBlbmQsIGNhbGxiYWNrKSB7XG4gIHZhciB1cmwgPSBbIHRoaXMuX2Jhc2VVcmwoKSwgXCJzb2JqZWN0c1wiLCB0eXBlLCBcInVwZGF0ZWRcIiBdLmpvaW4oJy8nKTtcblxuICBpZiAodHlwZW9mIHN0YXJ0ID09PSAnc3RyaW5nJykge1xuICAgIHN0YXJ0ID0gbmV3IERhdGUoc3RhcnQpO1xuICB9XG5cbiAgaWYgKHN0YXJ0IGluc3RhbmNlb2YgRGF0ZSkge1xuICAgIHN0YXJ0ID0gZm9ybWF0RGF0ZShzdGFydCk7XG4gIH1cblxuICBpZiAoc3RhcnQpIHtcbiAgICB1cmwgKz0gXCI/c3RhcnQ9XCIgKyBlbmNvZGVVUklDb21wb25lbnQoc3RhcnQpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBlbmQgPT09ICdzdHJpbmcnKSB7XG4gICAgZW5kID0gbmV3IERhdGUoZW5kKTtcbiAgfVxuXG4gIGlmIChlbmQgaW5zdGFuY2VvZiBEYXRlKSB7XG4gICAgZW5kID0gZm9ybWF0RGF0ZShlbmQpO1xuICB9XG5cbiAgaWYgKGVuZCkge1xuICAgIHVybCArPSBcIiZlbmQ9XCIgKyBlbmNvZGVVUklDb21wb25lbnQoZW5kKTtcbiAgfVxuXG4gIHJldHVybiB0aGlzLnJlcXVlc3QodXJsKS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IERlbGV0ZWRSZWNvcmRzSW5mb1xuICogQHByb3Age1N0cmluZ30gZWFybGllc3REYXRlQXZhaWxhYmxlIC0gVGhlIHRpbWVzdGFtcCBvZiB0aGUgZWFybGllc3QgZGF0ZSBhdmFpbGFibGVcbiAqIEBwcm9wIHtTdHJpbmd9IGxhdGVzdERhdGVDb3ZlcmVkIC0gVGhlIHRpbWVzdGFtcCBvZiB0aGUgbGFzdCBkYXRlIGNvdmVyZWRcbiAqIEBwcm9wIHtBcnJheS48T2JqZWN0Pn0gZGVsZXRlZFJlY29yZHMgLSBVcGRhdGVkIHJlY29yZHNcbiAqIEBwcm9wIHtTdHJpbmd9IGRlbGV0ZWRSZWNvcmRzLmlkIC0gUmVjb3JkIElEXG4gKiBAcHJvcCB7U3RyaW5nfSBkZWxldGVkUmVjb3Jkcy5kZWxldGVkRGF0ZSAtIFRoZSB0aW1lc3RhbXAgd2hlbiB0aGlzIHJlY29yZCB3YXMgZGVsZXRlZFxuICovXG5cbi8qKlxuICogUmV0cmlldmUgZGVsZXRlZCByZWNvcmRzXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHR5cGUgLSBTT2JqZWN0IFR5cGVcbiAqIEBwYXJhbSB7U3RyaW5nfERhdGV9IHN0YXJ0IC0gc3RhcnQgZGF0ZSBvciBzdHJpbmcgcmVwcmVzZW50aW5nIHRoZSBzdGFydCBvZiB0aGUgaW50ZXJ2YWxcbiAqIEBwYXJhbSB7U3RyaW5nfERhdGV9IGVuZCAtIHN0YXJ0IGRhdGUgb3Igc3RyaW5nIHJlcHJlc2VudGluZyB0aGUgZW5kIG9mIHRoZSBpbnRlcnZhbFxuICogQHBhcmFtIHtDYWxsYmFjay48RGVsZXRlZFJlY29yZHNJbmZvPn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48RGVsZXRlZFJlY29yZHNJbmZvPn1cbiAqL1xuQ29ubmVjdGlvbi5wcm90b3R5cGUuZGVsZXRlZCA9IGZ1bmN0aW9uICh0eXBlLCBzdGFydCwgZW5kLCBjYWxsYmFjaykge1xuICB2YXIgdXJsID0gWyB0aGlzLl9iYXNlVXJsKCksIFwic29iamVjdHNcIiwgdHlwZSwgXCJkZWxldGVkXCIgXS5qb2luKCcvJyk7XG5cbiAgaWYgKHR5cGVvZiBzdGFydCA9PT0gJ3N0cmluZycpIHtcbiAgICBzdGFydCA9IG5ldyBEYXRlKHN0YXJ0KTtcbiAgfVxuXG4gIGlmIChzdGFydCBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICBzdGFydCA9IGZvcm1hdERhdGUoc3RhcnQpO1xuICB9XG5cbiAgaWYgKHN0YXJ0KSB7XG4gICAgdXJsICs9IFwiP3N0YXJ0PVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KHN0YXJ0KTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgZW5kID09PSAnc3RyaW5nJykge1xuICAgIGVuZCA9IG5ldyBEYXRlKGVuZCk7XG4gIH1cblxuICBpZiAoZW5kIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgIGVuZCA9IGZvcm1hdERhdGUoZW5kKTtcbiAgfVxuXG4gIGlmIChlbmQpIHtcbiAgICB1cmwgKz0gXCImZW5kPVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KGVuZCk7XG4gIH1cblxuICByZXR1cm4gdGhpcy5yZXF1ZXN0KHVybCkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IFRhYnNJbmZvIC0gU2VlIHRoZSBBUEkgZG9jdW1lbnQgZm9yIGRldGFpbCBzdHJ1Y3R1cmVcbiAqL1xuXG4vKipcbiAqIFJldHVybnMgYSBsaXN0IG9mIGFsbCB0YWJzXG4gKlxuICogQHBhcmFtIHtDYWxsYmFjay48VGFic0luZm8+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxUYWJzSW5mbz59XG4gKi9cbkNvbm5lY3Rpb24ucHJvdG90eXBlLnRhYnMgPSBmdW5jdGlvbihjYWxsYmFjaykge1xuICB2YXIgdXJsID0gWyB0aGlzLl9iYXNlVXJsKCksIFwidGFic1wiIF0uam9pbignLycpO1xuICByZXR1cm4gdGhpcy5yZXF1ZXN0KHVybCkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IExpbWl0c0luZm8gLSBTZWUgdGhlIEFQSSBkb2N1bWVudCBmb3IgZGV0YWlsIHN0cnVjdHVyZVxuICovXG5cbi8qKlxuICogUmV0dXJucyBjdXJyZW4gc3lzdGVtIGxpbWl0IGluIHRoZSBvcmdhbml6YXRpb25cbiAqXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxMaW1pdHNJbmZvPn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48TGltaXRzSW5mbz59XG4gKi9cbkNvbm5lY3Rpb24ucHJvdG90eXBlLmxpbWl0cyA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHZhciB1cmwgPSBbIHRoaXMuX2Jhc2VVcmwoKSwgXCJsaW1pdHNcIiBdLmpvaW4oJy8nKTtcbiAgcmV0dXJuIHRoaXMucmVxdWVzdCh1cmwpLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cblxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBUaGVtZUluZm8gLSBTZWUgdGhlIEFQSSBkb2N1bWVudCBmb3IgZGV0YWlsIHN0cnVjdHVyZVxuICovXG5cbi8qKlxuICogUmV0dXJucyBhIHRoZW1lIGluZm9cbiAqXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxUaGVtZUluZm8+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxUaGVtZUluZm8+fVxuICovXG5Db25uZWN0aW9uLnByb3RvdHlwZS50aGVtZSA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHZhciB1cmwgPSBbIHRoaXMuX2Jhc2VVcmwoKSwgXCJ0aGVtZVwiIF0uam9pbignLycpO1xuICByZXR1cm4gdGhpcy5yZXF1ZXN0KHVybCkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIGFsbCByZWdpc3RlcmVkIGdsb2JhbCBxdWljayBhY3Rpb25zXG4gKlxuICogQHBhcmFtIHtDYWxsYmFjay48QXJyYXkuPFF1aWNrQWN0aW9uflF1aWNrQWN0aW9uSW5mbz4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxBcnJheS48UXVpY2tBY3Rpb25+UXVpY2tBY3Rpb25JbmZvPj59XG4gKi9cbkNvbm5lY3Rpb24ucHJvdG90eXBlLnF1aWNrQWN0aW9ucyA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHJldHVybiB0aGlzLnJlcXVlc3QoXCIvcXVpY2tBY3Rpb25zXCIpLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogR2V0IHJlZmVyZW5jZSBmb3Igc3BlY2lmaWVkIGdsb2JhbCBxdWljayBhY2l0b25cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gYWN0aW9uTmFtZSAtIE5hbWUgb2YgdGhlIGdsb2JhbCBxdWljayBhY3Rpb25cbiAqIEByZXR1cm5zIHtRdWlja0FjdGlvbn1cbiAqL1xuQ29ubmVjdGlvbi5wcm90b3R5cGUucXVpY2tBY3Rpb24gPSBmdW5jdGlvbihhY3Rpb25OYW1lKSB7XG4gIHJldHVybiBuZXcgUXVpY2tBY3Rpb24odGhpcywgXCIvcXVpY2tBY3Rpb25zL1wiICsgYWN0aW9uTmFtZSk7XG59O1xuIiwiLyoqXG4gKiBAZmlsZSBKU2ZvcmNlIENvcmVcbiAqIEBhdXRob3IgU2hpbmljaGkgVG9taXRhIDxzaGluaWNoaS50b21pdGFAZ21haWwuY29tPlxuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXI7XG5cbnZhciBqc2ZvcmNlID0gbW9kdWxlLmV4cG9ydHMgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5qc2ZvcmNlLlZFUlNJT04gPSByZXF1aXJlKCcuL1ZFUlNJT04nKTtcbmpzZm9yY2UuQ29ubmVjdGlvbiA9IHJlcXVpcmUoJy4vY29ubmVjdGlvbicpO1xuanNmb3JjZS5PQXV0aDIgPSByZXF1aXJlKCcuL29hdXRoMicpO1xuanNmb3JjZS5EYXRlID0ganNmb3JjZS5TZkRhdGUgPSByZXF1aXJlKFwiLi9kYXRlXCIpO1xuanNmb3JjZS5SZWNvcmRTdHJlYW0gPSByZXF1aXJlKCcuL3JlY29yZC1zdHJlYW0nKTtcbmpzZm9yY2UuUHJvbWlzZSA9IHJlcXVpcmUoJy4vcHJvbWlzZScpO1xuanNmb3JjZS5yZXF1aXJlID0gcmVxdWlyZSgnLi9yZXF1aXJlJyk7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBfID0gcmVxdWlyZSgnbG9kYXNoL2NvcmUnKSxcbiAgICBjc3ZQYXJzZSA9IHJlcXVpcmUoJ2Nzdi1wYXJzZScpLFxuICAgIGNzdlBhcnNlU3luYyA9IHJlcXVpcmUoJ2Nzdi1wYXJzZS9saWIvc3luYycpLFxuICAgIGNzdlN0cmluZ2lmeSA9IHJlcXVpcmUoJ2Nzdi1zdHJpbmdpZnknKSxcbiAgICBjc3ZTdHJpbmdpZnlTeW5jID0gcmVxdWlyZSgnY3N2LXN0cmluZ2lmeS9saWIvc3luYycpO1xuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHBhcnNlQ1NWKHN0ciwgb3B0aW9ucykge1xuICBvcHRpb25zID0gXy5leHRlbmQoe30sIG9wdGlvbnMsIHsgY29sdW1uczogdHJ1ZSB9KTtcbiAgcmV0dXJuIGNzdlBhcnNlU3luYyhzdHIsIG9wdGlvbnMpO1xufVxuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHRvQ1NWKHJlY29yZHMsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IF8uZXh0ZW5kKHt9LCBvcHRpb25zLCB7IGhlYWRlcjogdHJ1ZSB9KTtcbiAgcmV0dXJuIGNzdlN0cmluZ2lmeVN5bmMocmVjb3Jkcywgb3B0aW9ucyk7XG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gcGFyc2VDU1ZTdHJlYW0ob3B0aW9ucykge1xuICBvcHRpb25zID0gXy5leHRlbmQoe30sIG9wdGlvbnMsIHsgY29sdW1uczogdHJ1ZSB9KTtcbiAgcmV0dXJuIGNzdlBhcnNlKG9wdGlvbnMpO1xufVxuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHNlcmlhbGl6ZUNTVlN0cmVhbShvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBfLmV4dGVuZCh7fSwgb3B0aW9ucywgeyBoZWFkZXI6IHRydWUgfSk7XG4gIHJldHVybiBjc3ZTdHJpbmdpZnkob3B0aW9ucyk7XG59XG5cblxuLyoqXG4gKiBAcHJvdGVjdGVkXG4gKi9cbm1vZHVsZS5leHBvcnRzID0ge1xuICBwYXJzZUNTVjogcGFyc2VDU1YsXG4gIHRvQ1NWOiB0b0NTVixcbiAgcGFyc2VDU1ZTdHJlYW06IHBhcnNlQ1NWU3RyZWFtLFxuICBzZXJpYWxpemVDU1ZTdHJlYW06IHNlcmlhbGl6ZUNTVlN0cmVhbVxufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIF8gPSByZXF1aXJlKCdsb2Rhc2gvY29yZScpO1xuXG4vKipcbiAqIEEgZGF0ZSBvYmplY3QgdG8ga2VlcCBTYWxlc2ZvcmNlIGRhdGUgbGl0ZXJhbFxuICpcbiAqIEBjbGFzc1xuICogQGNvbnN0cnVjdG9yXG4gKiBAc2VlIGh0dHA6Ly93d3cuc2FsZXNmb3JjZS5jb20vdXMvZGV2ZWxvcGVyL2RvY3Mvc29xbF9zb3NsL0NvbnRlbnQvc2ZvcmNlX2FwaV9jYWxsc19zb3FsX3NlbGVjdF9kYXRlZm9ybWF0cy5odG1cbiAqL1xudmFyIFNmRGF0ZSA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGl0ZXJhbCkge1xuICB0aGlzLl9saXRlcmFsID0gbGl0ZXJhbDtcbn07XG5cbi8qKlxuICogUmV0dXJucyBsaXRlcmFsIHdoZW4gY29udmVydGVkIHRvIHN0cmluZ1xuICpcbiAqIEBvdmVycmlkZVxuICovXG5TZkRhdGUucHJvdG90eXBlLnRvU3RyaW5nID1cblNmRGF0ZS5wcm90b3R5cGUudG9KU09OID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLl9saXRlcmFsOyB9O1xuXG5cbi8qKiBAcHJpdmF0ZSAqKi9cbmZ1bmN0aW9uIHplcm9wYWQobikgeyByZXR1cm4gKG48MTAgPyBcIjBcIiA6IFwiXCIpICsgbjsgfVxuXG4vKipcbiAqIENvbnZlcnQgSmF2YVNjcmlwdCBkYXRlIG9iamVjdCB0byBJU084NjAxIERhdGUgZm9ybWF0IChlLmcuIDIwMTItMTAtMzEpXG4gKlxuICogQHBhcmFtIHtTdHJpbmd8TnVtYmVyfERhdGV9IGRhdGUgLSBJbnB1dCBkYXRlXG4gKiBAcmV0dXJucyB7U2ZEYXRlfSAtIFNhbGVzZm9yY2UgZGF0ZSBsaXRlcmFsIHdpdGggSVNPODYwMSBkYXRlIGZvcm1hdFxuICovXG5TZkRhdGUudG9EYXRlTGl0ZXJhbCA9IGZ1bmN0aW9uKGRhdGUpIHtcbiAgaWYgKF8uaXNOdW1iZXIoZGF0ZSkpIHtcbiAgICBkYXRlID0gbmV3IERhdGUoZGF0ZSk7XG4gIH0gZWxzZSBpZiAoXy5pc1N0cmluZyhkYXRlKSkge1xuICAgIGRhdGUgPSBTZkRhdGUucGFyc2VEYXRlKGRhdGUpO1xuICB9XG4gIHZhciB5eSA9IGRhdGUuZ2V0RnVsbFllYXIoKTtcbiAgdmFyIG1tID0gZGF0ZS5nZXRNb250aCgpKzE7XG4gIHZhciBkZCA9IGRhdGUuZ2V0RGF0ZSgpO1xuICB2YXIgZHN0ciA9IFsgeXksIHplcm9wYWQobW0pLCB6ZXJvcGFkKGRkKSBdLmpvaW4oXCItXCIpO1xuICByZXR1cm4gbmV3IFNmRGF0ZShkc3RyKTtcbn07XG5cbi8qKlxuICogQ29udmVydCBKYXZhU2NyaXB0IGRhdGUgb2JqZWN0IHRvIElTTzg2MDEgRGF0ZVRpbWUgZm9ybWF0XG4gKiAoZS5nLiAyMDEyLTEwLTMxVDEyOjM0OjU2WilcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xOdW1iZXJ8RGF0ZX0gZGF0ZSAtIElucHV0IGRhdGVcbiAqIEByZXR1cm5zIHtTZkRhdGV9IC0gU2FsZXNmb3JjZSBkYXRlIGxpdGVyYWwgd2l0aCBJU084NjAxIGRhdGV0aW1lIGZvcm1hdFxuICovXG5TZkRhdGUudG9EYXRlVGltZUxpdGVyYWwgPSBmdW5jdGlvbihkYXRlKSB7XG4gIGlmIChfLmlzTnVtYmVyKGRhdGUpKSB7XG4gICAgZGF0ZSA9IG5ldyBEYXRlKGRhdGUpO1xuICB9IGVsc2UgaWYgKF8uaXNTdHJpbmcoZGF0ZSkpIHtcbiAgICBkYXRlID0gU2ZEYXRlLnBhcnNlRGF0ZShkYXRlKTtcbiAgfVxuICB2YXIgeXkgPSBkYXRlLmdldFVUQ0Z1bGxZZWFyKCk7XG4gIHZhciBtbSA9IGRhdGUuZ2V0VVRDTW9udGgoKSsxO1xuICB2YXIgZGQgPSBkYXRlLmdldFVUQ0RhdGUoKTtcbiAgdmFyIGhoID0gZGF0ZS5nZXRVVENIb3VycygpO1xuICB2YXIgbWkgPSBkYXRlLmdldFVUQ01pbnV0ZXMoKTtcbiAgdmFyIHNzID0gZGF0ZS5nZXRVVENTZWNvbmRzKCk7XG4gIHZhciBkdHN0ciA9XG4gICAgWyB5eSwgemVyb3BhZChtbSksIHplcm9wYWQoZGQpIF0uam9pbihcIi1cIikgKyBcIlRcIiArXG4gICAgWyB6ZXJvcGFkKGhoKSwgemVyb3BhZChtaSksIHplcm9wYWQoc3MpIF0uam9pbihcIjpcIikgKyBcIlpcIjtcbiAgcmV0dXJuIG5ldyBTZkRhdGUoZHRzdHIpO1xufTtcblxuLyoqXG4gKiBQYXJzZSBJUzA4NjAxIGRhdGUodGltZSkgZm9ybWF0dGVkIHN0cmluZyBhbmQgcmV0dXJuIGRhdGUgaW5zdGFuY2VcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJucyB7RGF0ZX1cbiAqL1xuU2ZEYXRlLnBhcnNlRGF0ZSA9IGZ1bmN0aW9uKHN0cikge1xuICB2YXIgZCA9IG5ldyBEYXRlKCk7XG4gIHZhciByZWdleHAgPSAvXihbXFxkXXs0fSktPyhbXFxkXXsyfSktPyhbXFxkXXsyfSkoVChbXFxkXXsyfSk6PyhbXFxkXXsyfSk6PyhbXFxkXXsyfSkoLihbXFxkXXszfSkpPyhafChbXFwrXFwtXSkoW1xcZF17Mn0pOj8oW1xcZF17Mn0pKSk/JC87XG4gIHZhciBtID0gc3RyLm1hdGNoKHJlZ2V4cCk7XG4gIGlmIChtKSB7XG4gICAgZCA9IG5ldyBEYXRlKDApO1xuICAgIGlmICghbVs0XSkge1xuICAgICAgZC5zZXRGdWxsWWVhcihwYXJzZUludChtWzFdLCAxMCkpO1xuICAgICAgZC5zZXREYXRlKHBhcnNlSW50KG1bM10sIDEwKSk7XG4gICAgICBkLnNldE1vbnRoKHBhcnNlSW50KG1bMl0sIDEwKSAtIDEpO1xuICAgICAgZC5zZXRIb3VycygwKTtcbiAgICAgIGQuc2V0TWludXRlcygwKTtcbiAgICAgIGQuc2V0U2Vjb25kcygwKTtcbiAgICAgIGQuc2V0TWlsbGlzZWNvbmRzKDApO1xuICAgIH0gZWxzZSB7XG4gICAgICBkLnNldFVUQ0Z1bGxZZWFyKHBhcnNlSW50KG1bMV0sIDEwKSk7XG4gICAgICBkLnNldFVUQ0RhdGUocGFyc2VJbnQobVszXSwgMTApKTtcbiAgICAgIGQuc2V0VVRDTW9udGgocGFyc2VJbnQobVsyXSwgMTApIC0gMSk7XG4gICAgICBkLnNldFVUQ0hvdXJzKHBhcnNlSW50KG1bNV0sIDEwKSk7XG4gICAgICBkLnNldFVUQ01pbnV0ZXMocGFyc2VJbnQobVs2XSwgMTApKTtcbiAgICAgIGQuc2V0VVRDU2Vjb25kcyhwYXJzZUludChtWzddLCAxMCkpO1xuICAgICAgZC5zZXRVVENNaWxsaXNlY29uZHMocGFyc2VJbnQobVs5XSB8fCAnMCcsIDEwKSk7XG4gICAgICBpZiAobVsxMF0gJiYgbVsxMF0gIT09ICdaJykge1xuICAgICAgICB2YXIgb2Zmc2V0ID0gcGFyc2VJbnQobVsxMl0sMTApICogNjAgKyBwYXJzZUludChtWzEzXSwgMTApO1xuICAgICAgICBkLnNldFRpbWUoKG1bMTFdID09PSAnKycgPyAtMSA6IDEpICogb2Zmc2V0ICogNjAgKiAxMDAwICtkLmdldFRpbWUoKSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgZGF0ZSBmb3JtYXQgaXMgc3BlY2lmaWVkIDogXCIgKyBzdHIpO1xuICB9XG59O1xuXG4vKlxuICogUHJlLWRlZmluZWQgU2FsZXNmb3JjZSBEYXRlIExpdGVyYWxzXG4gKi9cbnZhciBTZkRhdGVMaXRlcmFscyA9IHtcbiAgWUVTVEVSREFZOiAxLFxuICBUT0RBWTogMSxcbiAgVE9NT1JST1c6IDEsXG4gIExBU1RfV0VFSzogMSxcbiAgVEhJU19XRUVLOiAxLFxuICBORVhUX1dFRUs6IDEsXG4gIExBU1RfTU9OVEg6IDEsXG4gIFRISVNfTU9OVEg6IDEsXG4gIE5FWFRfTU9OVEg6IDEsXG4gIExBU1RfOTBfREFZUzogMSxcbiAgTkVYVF85MF9EQVlTOiAxLFxuICBMQVNUX05fREFZUzogMixcbiAgTkVYVF9OX0RBWVM6IDIsXG4gIE5FWFRfTl9XRUVLUzogMixcbiAgTEFTVF9OX1dFRUtTOiAyLFxuICBORVhUX05fTU9OVEhTOiAyLFxuICBMQVNUX05fTU9OVEhTOiAyLFxuICBUSElTX1FVQVJURVI6IDEsXG4gIExBU1RfUVVBUlRFUjogMSxcbiAgTkVYVF9RVUFSVEVSOiAxLFxuICBORVhUX05fUVVBUlRFUlM6IDIsXG4gIExBU1RfTl9RVUFSVEVSUzogMixcbiAgVEhJU19ZRUFSOiAxLFxuICBMQVNUX1lFQVI6IDEsXG4gIE5FWFRfWUVBUjogMSxcbiAgTkVYVF9OX1lFQVJTOiAyLFxuICBMQVNUX05fWUVBUlM6IDIsXG4gIFRISVNfRklTQ0FMX1FVQVJURVI6IDEsXG4gIExBU1RfRklTQ0FMX1FVQVJURVI6IDEsXG4gIE5FWFRfRklTQ0FMX1FVQVJURVI6IDEsXG4gIE5FWFRfTl9GSVNDQUxfUVVBUlRFUlM6MixcbiAgTEFTVF9OX0ZJU0NBTF9RVUFSVEVSUzoyLFxuICBUSElTX0ZJU0NBTF9ZRUFSOjEsXG4gIExBU1RfRklTQ0FMX1lFQVI6MSxcbiAgTkVYVF9GSVNDQUxfWUVBUjoxLFxuICBORVhUX05fRklTQ0FMX1lFQVJTOiAyLFxuICBMQVNUX05fRklTQ0FMX1lFQVJTOiAyXG59O1xuXG5mb3IgKHZhciBsaXRlcmFsIGluIFNmRGF0ZUxpdGVyYWxzKSB7XG4gIHZhciB0eXBlID0gU2ZEYXRlTGl0ZXJhbHNbbGl0ZXJhbF07XG4gIFNmRGF0ZVtsaXRlcmFsXSA9XG4gICB0eXBlID09PSAxID8gbmV3IFNmRGF0ZShsaXRlcmFsKSA6IGNyZWF0ZUxpdGVyYWxCdWlsZGVyKGxpdGVyYWwpO1xufVxuXG4vKiogQHByaXZhdGUgKiovXG5mdW5jdGlvbiBjcmVhdGVMaXRlcmFsQnVpbGRlcihsaXRlcmFsKSB7XG4gIHJldHVybiBmdW5jdGlvbihudW0pIHsgcmV0dXJuIG5ldyBTZkRhdGUobGl0ZXJhbCArIFwiOlwiICsgbnVtKTsgfTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKSxcbiAgICBldmVudHMgPSByZXF1aXJlKCdldmVudHMnKSxcbiAgICBfID0gcmVxdWlyZSgnbG9kYXNoL2NvcmUnKSxcbiAgICBQcm9taXNlID0gcmVxdWlyZSgnLi9wcm9taXNlJyk7XG5cbi8qKlxuICogSFRUUCBiYXNlZCBBUEkgY2xhc3Mgd2l0aCBhdXRob3JpemF0aW9uIGhvb2tcbiAqXG4gKiBAY29uc3RydWN0b3JcbiAqIEBleHRlbmRzIGV2ZW50cy5FdmVudEVtaXR0ZXJcbiAqIEBwYXJhbSB7Q29ubmVjdGlvbn0gY29ubiAtIENvbm5lY3Rpb24gb2JqZWN0XG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gSHR0cCBBUEkgT3B0aW9uc1xuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLnJlc3BvbnNlVHlwZV0gLSBPdmVycmlkaW5nIGNvbnRlbnQgbWltZS10eXBlIGluIHJlc3BvbnNlXG4gKiBAcGFyYW0ge1RyYW5zcG9ydH0gW29wdGlvbnMudHJhbnNwb3J0XSAtIFRyYW5zcG9ydCBmb3IgaHR0cCBhcGlcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucy5ub0NvbnRlbnRSZXNwb25zZV0gLSBBbHRlcm5hdGl2ZSByZXNwb25zZSB3aGVuIG5vIGNvbnRlbnQgcmV0dXJuZWQgaW4gcmVzcG9uc2UgKD0gSFRUUCAyMDQpXG4gKi9cbnZhciBIdHRwQXBpID0gZnVuY3Rpb24oY29ubiwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgdGhpcy5fY29ubiA9IGNvbm47XG4gIHRoaXMub24oJ3Jlc3VtZScsIGZ1bmN0aW9uKGVycikgeyBjb25uLmVtaXQoJ3Jlc3VtZScsIGVycik7IH0pO1xuICB0aGlzLl9yZXNwb25zZVR5cGUgPSBvcHRpb25zLnJlc3BvbnNlVHlwZTtcbiAgdGhpcy5fdHJhbnNwb3J0ID0gb3B0aW9ucy50cmFuc3BvcnQgfHwgY29ubi5fdHJhbnNwb3J0O1xuICB0aGlzLl9ub0NvbnRlbnRSZXNwb25zZSA9IG9wdGlvbnMubm9Db250ZW50UmVzcG9uc2U7XG59O1xuXG5pbmhlcml0cyhIdHRwQXBpLCBldmVudHMuRXZlbnRFbWl0dGVyKTtcblxuLyoqXG4gKiBDYWxsb3V0IHRvIEFQSSBlbmRwb2ludCB1c2luZyBodHRwXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHJlcXVlc3QgLSBIdHRwIFJlcXVlc3Qgb2JqZWN0XG4gKiBAcGFyYW0ge1N0cmluZ30gcmVxdWVzdC51cmwgLSBFbmRwb2ludCBVUkwgdG8gcmVxdWVzdFxuICogQHBhcmFtIHtTdHJpbmd9IHJlcXVlc3QubWV0aG9kIC0gSHR0cCBtZXRob2QgZm9yIHJlcXVlc3RcbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVxdWVzdC5oZWFkZXJzXSAtIEh0dHAgcmVxdWVzdCBoZWFkZXJzIGluIGhhc2ggb2JqZWN0XG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxPYmplY3Q+fSBjYWxsYmFjayAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48T2JqZWN0Pn0gLVxuICovXG5IdHRwQXBpLnByb3RvdHlwZS5yZXF1ZXN0ID0gZnVuY3Rpb24ocmVxdWVzdCwgY2FsbGJhY2spIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgY29ubiA9IHRoaXMuX2Nvbm47XG4gIHZhciBsb2dnZXIgPSBjb25uLl9sb2dnZXI7XG4gIHZhciByZWZyZXNoRGVsZWdhdGUgPSB0aGlzLmdldFJlZnJlc2hEZWxlZ2F0ZSgpO1xuICAvLyByZW1lbWJlciBwcmV2aW91cyBpbnN0YW5jZSB1cmwgaW4gY2FzZSBpdCBjaGFuZ2VzIGFmdGVyIGEgcmVmcmVzaFxuICB2YXIgbGFzdEluc3RhbmNlVXJsID0gY29ubi5pbnN0YW5jZVVybDtcblxuICB2YXIgZGVmZXJyZWQgPSBQcm9taXNlLmRlZmVyKCk7XG5cbiAgdmFyIG9uUmVzdW1lID0gZnVuY3Rpb24oZXJyKSB7XG4gICAgaWYgKGVycikge1xuICAgICAgZGVmZXJyZWQucmVqZWN0KGVycik7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIGNoZWNrIHRvIHNlZSBpZiB0aGUgdG9rZW4gcmVmcmVzaCBoYXMgY2hhbmdlZCB0aGUgaW5zdGFuY2UgdXJsXG4gICAgaWYobGFzdEluc3RhbmNlVXJsICE9PSBjb25uLmluc3RhbmNlVXJsKXtcbiAgICAgIC8vIGlmIHRoZSBpbnN0YW5jZSB1cmwgaGFzIGNoYW5nZWRcbiAgICAgIC8vIHRoZW4gcmVwbGFjZSB0aGUgY3VycmVudCByZXF1ZXN0IHVybHMgaW5zdGFuY2UgdXJsIGZyYWdtZW50XG4gICAgICAvLyB3aXRoIHRoZSB1cGRhdGVkIGluc3RhbmNlIHVybFxuICAgICAgcmVxdWVzdC51cmwgPSByZXF1ZXN0LnVybC5yZXBsYWNlKGxhc3RJbnN0YW5jZVVybCxjb25uLmluc3RhbmNlVXJsKTtcbiAgICB9XG5cbiAgICBzZWxmLnJlcXVlc3QocmVxdWVzdCkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgZGVmZXJyZWQucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICBkZWZlcnJlZC5yZWplY3QoZXJyKTtcbiAgICB9KTtcbiAgfTtcblxuICBpZiAocmVmcmVzaERlbGVnYXRlICYmIHJlZnJlc2hEZWxlZ2F0ZS5fcmVmcmVzaGluZykge1xuICAgIHJlZnJlc2hEZWxlZ2F0ZS5vbmNlKCdyZXN1bWUnLCBvblJlc3VtZSk7XG4gICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2UudGhlbkNhbGwoY2FsbGJhY2spO1xuICB9XG5cbiAgLy8gaG9vayBiZWZvcmUgc2VuZGluZ1xuICBzZWxmLmJlZm9yZVNlbmQocmVxdWVzdCk7XG5cbiAgc2VsZi5lbWl0KCdyZXF1ZXN0JywgcmVxdWVzdCk7XG4gIGxvZ2dlci5kZWJ1ZyhcIjxyZXF1ZXN0PiBtZXRob2Q9XCIgKyByZXF1ZXN0Lm1ldGhvZCArIFwiLCB1cmw9XCIgKyByZXF1ZXN0LnVybCk7XG4gIHZhciByZXF1ZXN0VGltZSA9IERhdGUubm93KCk7XG5cbiAgcmV0dXJuIHRoaXMuX3RyYW5zcG9ydC5odHRwUmVxdWVzdChyZXF1ZXN0KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgdmFyIHJlc3BvbnNlVGltZSA9IERhdGUubm93KCk7XG4gICAgbG9nZ2VyLmRlYnVnKFwiZWxhcHBzZWQgdGltZSA6IFwiICsgKHJlc3BvbnNlVGltZSAtIHJlcXVlc3RUaW1lKSArIFwibXNlY1wiKTtcbiAgICBsb2dnZXIuZGVidWcoXCI8cmVzcG9uc2U+IHN0YXR1cz1cIiArIHJlc3BvbnNlLnN0YXR1c0NvZGUgKyBcIiwgdXJsPVwiICsgcmVxdWVzdC51cmwpO1xuXG4gICAgc2VsZi5lbWl0KCdyZXNwb25zZScsIHJlc3BvbnNlKTtcbiAgICAvLyBSZWZyZXNoIHRva2VuIGlmIHNlc3Npb24gaGFzIGJlZW4gZXhwaXJlZCBhbmQgcmVxdWlyZXMgYXV0aGVudGljYXRpb25cbiAgICAvLyB3aGVuIHNlc3Npb24gcmVmcmVzaCBkZWxlZ2F0ZSBpcyBhdmFpbGFibGVcbiAgICBpZiAoc2VsZi5pc1Nlc3Npb25FeHBpcmVkKHJlc3BvbnNlKSAmJiByZWZyZXNoRGVsZWdhdGUpIHtcbiAgICAgIHJlZnJlc2hEZWxlZ2F0ZS5yZWZyZXNoKHJlcXVlc3RUaW1lLCBvblJlc3VtZSk7XG4gICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgICB9XG4gICAgaWYgKHNlbGYuaXNFcnJvclJlc3BvbnNlKHJlc3BvbnNlKSkge1xuICAgICAgdmFyIGVyciA9IHNlbGYuZ2V0RXJyb3IocmVzcG9uc2UpO1xuICAgICAgdGhyb3cgZXJyO1xuICAgIH1cbiAgICByZXR1cm4gc2VsZi5nZXRSZXNwb25zZUJvZHkocmVzcG9uc2UpO1xuICB9LCBmdW5jdGlvbihlcnIpIHtcbiAgICB2YXIgcmVzcG9uc2VUaW1lID0gRGF0ZS5ub3coKTtcbiAgICBsb2dnZXIuZGVidWcoXCJlbGFwcHNlZCB0aW1lIDogXCIgKyAocmVzcG9uc2VUaW1lIC0gcmVxdWVzdFRpbWUpICsgXCJtc2VjXCIpO1xuICAgIGxvZ2dlci5lcnJvcihlcnIpO1xuICAgIHRocm93IGVycjtcbiAgfSlcbiAgLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogQHByb3RlY3RlZFxuICovXG5IdHRwQXBpLnByb3RvdHlwZS5nZXRSZWZyZXNoRGVsZWdhdGUgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuX2Nvbm4uX3JlZnJlc2hEZWxlZ2F0ZTtcbn07XG5cbi8qKlxuICpcbiAqIEBwcm90ZWN0ZWRcbiAqL1xuSHR0cEFwaS5wcm90b3R5cGUuYmVmb3JlU2VuZCA9IGZ1bmN0aW9uKHJlcXVlc3QpIHtcbiAgcmVxdWVzdC5oZWFkZXJzID0gcmVxdWVzdC5oZWFkZXJzIHx8IHt9O1xuICBpZiAodGhpcy5fY29ubi5hY2Nlc3NUb2tlbikge1xuICAgIHJlcXVlc3QuaGVhZGVycy5BdXRob3JpemF0aW9uID0gXCJCZWFyZXIgXCIgKyB0aGlzLl9jb25uLmFjY2Vzc1Rva2VuO1xuICB9XG4gIGlmICh0aGlzLl9jb25uLmNhbGxPcHRpb25zKSB7XG4gICAgdmFyIGNhbGxPcHRpb25zID0gW107XG4gICAgZm9yICh2YXIgbmFtZSBpbiB0aGlzLl9jb25uLmNhbGxPcHRpb25zKSB7XG4gICAgICBjYWxsT3B0aW9ucy5wdXNoKG5hbWUgKyBcIj1cIiArIHRoaXMuX2Nvbm4uY2FsbE9wdGlvbnNbbmFtZV0pO1xuICAgIH1cbiAgICByZXF1ZXN0LmhlYWRlcnNbXCJTZm9yY2UtQ2FsbC1PcHRpb25zXCJdID0gY2FsbE9wdGlvbnMuam9pbignLCAnKTtcbiAgfVxufTtcblxuLyoqXG4gKiBEZXRlY3QgcmVzcG9uc2UgY29udGVudCBtaW1lLXR5cGVcbiAqIEBwcm90ZWN0ZWRcbiAqL1xuSHR0cEFwaS5wcm90b3R5cGUuZ2V0UmVzcG9uc2VDb250ZW50VHlwZSA9IGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gIHJldHVybiB0aGlzLl9yZXNwb25zZVR5cGUgfHwgcmVzcG9uc2UuaGVhZGVycyAmJiByZXNwb25zZS5oZWFkZXJzW1wiY29udGVudC10eXBlXCJdO1xufTtcblxuLyoqXG4gKlxuICovXG5IdHRwQXBpLnByb3RvdHlwZS5wYXJzZVJlc3BvbnNlQm9keSA9IGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gIHZhciBjb250ZW50VHlwZSA9IHRoaXMuZ2V0UmVzcG9uc2VDb250ZW50VHlwZShyZXNwb25zZSk7XG4gIHZhciBwYXJzZUJvZHkgPSAvXih0ZXh0fGFwcGxpY2F0aW9uKVxcL3htbCg7fCQpLy50ZXN0KGNvbnRlbnRUeXBlKSA/IHBhcnNlWE1MIDpcbiAgICAgICAgIC9eYXBwbGljYXRpb25cXC9qc29uKDt8JCkvLnRlc3QoY29udGVudFR5cGUpID8gcGFyc2VKU09OIDpcbiAgICAgICAgIC9edGV4dFxcL2Nzdig7fCQpLy50ZXN0KGNvbnRlbnRUeXBlKSA/IHBhcnNlQ1NWIDpcbiAgICAgICAgIHBhcnNlVGV4dDtcbiAgdHJ5IHtcbiAgICByZXR1cm4gcGFyc2VCb2R5KHJlc3BvbnNlLmJvZHkpO1xuICB9IGNhdGNoKGUpIHtcbiAgICByZXR1cm4gcmVzcG9uc2UuYm9keTtcbiAgfVxufTtcblxuLyoqXG4gKiBHZXQgcmVzcG9uc2UgYm9keVxuICogQHByb3RlY3RlZFxuICovXG5IdHRwQXBpLnByb3RvdHlwZS5nZXRSZXNwb25zZUJvZHkgPSBmdW5jdGlvbihyZXNwb25zZSkge1xuICBpZiAocmVzcG9uc2Uuc3RhdHVzQ29kZSA9PT0gMjA0KSB7IC8vIE5vIENvbnRlbnRcbiAgICByZXR1cm4gdGhpcy5fbm9Db250ZW50UmVzcG9uc2U7XG4gIH1cbiAgdmFyIGJvZHkgPSB0aGlzLnBhcnNlUmVzcG9uc2VCb2R5KHJlc3BvbnNlKTtcbiAgdmFyIGVycjtcbiAgaWYgKHRoaXMuaGFzRXJyb3JJblJlc3BvbnNlQm9keShib2R5KSkge1xuICAgIGVyciA9IHRoaXMuZ2V0RXJyb3IocmVzcG9uc2UsIGJvZHkpO1xuICAgIHRocm93IGVycjtcbiAgfVxuICBpZiAocmVzcG9uc2Uuc3RhdHVzQ29kZSA9PT0gMzAwKSB7IC8vIE11bHRpcGxlIENob2ljZXNcbiAgICBlcnIgPSBuZXcgRXJyb3IoJ011bHRpcGxlIHJlY29yZHMgZm91bmQnKTtcbiAgICBlcnIubmFtZSA9IFwiTVVMVElQTEVfQ0hPSUNFU1wiO1xuICAgIGVyci5jb250ZW50ID0gYm9keTtcbiAgICB0aHJvdyBlcnI7XG4gIH1cbiAgcmV0dXJuIGJvZHk7XG59O1xuXG4vKiogQHByaXZhdGUgKi9cbmZ1bmN0aW9uIHBhcnNlSlNPTihzdHIpIHtcbiAgcmV0dXJuIEpTT04ucGFyc2Uoc3RyKTtcbn1cblxuLyoqIEBwcml2YXRlICovXG5mdW5jdGlvbiBwYXJzZVhNTChzdHIpIHtcbiAgdmFyIHJldCA9IHt9O1xuICByZXF1aXJlKCd4bWwyanMnKS5wYXJzZVN0cmluZyhzdHIsIHsgZXhwbGljaXRBcnJheTogZmFsc2UgfSwgZnVuY3Rpb24oZXJyLCByZXN1bHQpIHtcbiAgICByZXQgPSB7IGVycm9yOiBlcnIsIHJlc3VsdCA6IHJlc3VsdCB9O1xuICB9KTtcbiAgaWYgKHJldC5lcnJvcikgeyB0aHJvdyByZXQuZXJyb3I7IH1cbiAgcmV0dXJuIHJldC5yZXN1bHQ7XG59XG5cbi8qKiBAcHJpdmF0ZSAqL1xuZnVuY3Rpb24gcGFyc2VDU1Yoc3RyKSB7XG4gIHJldHVybiByZXF1aXJlKCcuL2NzdicpLnBhcnNlQ1NWKHN0cik7XG59XG5cbi8qKiBAcHJpdmF0ZSAqL1xuZnVuY3Rpb24gcGFyc2VUZXh0KHN0cikgeyByZXR1cm4gc3RyOyB9XG5cblxuLyoqXG4gKiBEZXRlY3Qgc2Vzc2lvbiBleHBpcnlcbiAqIEBwcm90ZWN0ZWRcbiAqL1xuSHR0cEFwaS5wcm90b3R5cGUuaXNTZXNzaW9uRXhwaXJlZCA9IGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gIHJldHVybiByZXNwb25zZS5zdGF0dXNDb2RlID09PSA0MDE7XG59O1xuXG4vKipcbiAqIERldGVjdCBlcnJvciByZXNwb25zZVxuICogQHByb3RlY3RlZFxuICovXG5IdHRwQXBpLnByb3RvdHlwZS5pc0Vycm9yUmVzcG9uc2UgPSBmdW5jdGlvbihyZXNwb25zZSkge1xuICByZXR1cm4gcmVzcG9uc2Uuc3RhdHVzQ29kZSA+PSA0MDA7XG59O1xuXG4vKipcbiAqIERldGVjdCBlcnJvciBpbiByZXNwb25zZSBib2R5XG4gKiBAcHJvdGVjdGVkXG4gKi9cbkh0dHBBcGkucHJvdG90eXBlLmhhc0Vycm9ySW5SZXNwb25zZUJvZHkgPSBmdW5jdGlvbihib2R5KSB7XG4gIHJldHVybiBmYWxzZTtcbn07XG5cbi8qKlxuICogUGFyc2luZyBlcnJvciBtZXNzYWdlIGluIHJlc3BvbnNlXG4gKiBAcHJvdGVjdGVkXG4gKi9cbkh0dHBBcGkucHJvdG90eXBlLnBhcnNlRXJyb3IgPSBmdW5jdGlvbihib2R5KSB7XG4gIHZhciBlcnJvcnMgPSBib2R5O1xuICByZXR1cm4gXy5pc0FycmF5KGVycm9ycykgPyBlcnJvcnNbMF0gOiBlcnJvcnM7XG59O1xuXG4vKipcbiAqIEdldCBlcnJvciBtZXNzYWdlIGluIHJlc3BvbnNlXG4gKiBAcHJvdGVjdGVkXG4gKi9cbkh0dHBBcGkucHJvdG90eXBlLmdldEVycm9yID0gZnVuY3Rpb24ocmVzcG9uc2UsIGJvZHkpIHtcbiAgdmFyIGVycm9yO1xuICB0cnkge1xuICAgIGVycm9yID0gdGhpcy5wYXJzZUVycm9yKGJvZHkgfHwgdGhpcy5wYXJzZVJlc3BvbnNlQm9keShyZXNwb25zZSkpO1xuICB9IGNhdGNoKGUpIHt9XG4gIGVycm9yID0gXy5pc09iamVjdChlcnJvcikgJiYgXy5pc1N0cmluZyhlcnJvci5tZXNzYWdlKSA/IGVycm9yIDoge1xuICAgIGVycm9yQ29kZTogJ0VSUk9SX0hUVFBfJyArIHJlc3BvbnNlLnN0YXR1c0NvZGUsXG4gICAgbWVzc2FnZSA6IHJlc3BvbnNlLmJvZHlcbiAgfTtcbiAgdmFyIGVyciA9IG5ldyBFcnJvcihlcnJvci5tZXNzYWdlKTtcbiAgZXJyLm5hbWUgPSBlcnJvci5lcnJvckNvZGU7XG4gIGZvciAodmFyIGtleSBpbiBlcnJvcikgeyBlcnJba2V5XSA9IGVycm9yW2tleV07IH1cbiAgcmV0dXJuIGVycjtcbn07XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi8qKlxuICogQHByb3RlY3RlZFxuICovXG52YXIgU2Vzc2lvblJlZnJlc2hEZWxlZ2F0ZSA9IGZ1bmN0aW9uKGNvbm4sIHJlZnJlc2hGbikge1xuICB0aGlzLl9jb25uID0gY29ubjtcbiAgdGhpcy5fcmVmcmVzaEZuID0gcmVmcmVzaEZuO1xuICB0aGlzLl9yZWZyZXNoaW5nID0gZmFsc2U7XG59O1xuXG5pbmhlcml0cyhTZXNzaW9uUmVmcmVzaERlbGVnYXRlLCBldmVudHMuRXZlbnRFbWl0dGVyKTtcblxuLyoqXG4gKiBSZWZyZXNoIGFjY2VzcyB0b2tlblxuICogQHByaXZhdGVcbiAqL1xuU2Vzc2lvblJlZnJlc2hEZWxlZ2F0ZS5wcm90b3R5cGUucmVmcmVzaCA9IGZ1bmN0aW9uKHNpbmNlLCBjYWxsYmFjaykge1xuICAvLyBDYWxsYmFjayBpbW1lZGlhdGVseSBXaGVuIHJlZnJlc2hlZCBhZnRlciBkZXNpZ25hdGVkIHRpbWVcbiAgaWYgKHRoaXMuX2xhc3RSZWZyZXNoZWRBdCA+IHNpbmNlKSB7IHJldHVybiBjYWxsYmFjaygpOyB9XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIGNvbm4gPSB0aGlzLl9jb25uO1xuICB2YXIgbG9nZ2VyID0gY29ubi5fbG9nZ2VyO1xuICBzZWxmLm9uY2UoJ3Jlc3VtZScsIGNhbGxiYWNrKTtcbiAgaWYgKHNlbGYuX3JlZnJlc2hpbmcpIHsgcmV0dXJuOyB9XG4gIGxvZ2dlci5kZWJ1ZyhcIjxyZWZyZXNoIHRva2VuPlwiKTtcbiAgc2VsZi5fcmVmcmVzaGluZyA9IHRydWU7XG4gIHJldHVybiBzZWxmLl9yZWZyZXNoRm4oY29ubiwgZnVuY3Rpb24oZXJyLCBhY2Nlc3NUb2tlbiwgcmVzKSB7XG4gICAgaWYgKCFlcnIpIHtcbiAgICAgIGxvZ2dlci5kZWJ1ZyhcIkNvbm5lY3Rpb24gcmVmcmVzaCBjb21wbGV0ZWQuXCIpO1xuICAgICAgY29ubi5hY2Nlc3NUb2tlbiA9IGFjY2Vzc1Rva2VuO1xuICAgICAgY29ubi5lbWl0KFwicmVmcmVzaFwiLCBhY2Nlc3NUb2tlbiwgcmVzKTtcbiAgICB9XG4gICAgc2VsZi5fbGFzdFJlZnJlc2hlZEF0ID0gRGF0ZS5ub3coKTtcbiAgICBzZWxmLl9yZWZyZXNoaW5nID0gZmFsc2U7XG4gICAgc2VsZi5lbWl0KCdyZXN1bWUnLCBlcnIpO1xuICB9KTtcbn07XG5cblxuLyoqXG4gKlxuICovXG5IdHRwQXBpLlNlc3Npb25SZWZyZXNoRGVsZWdhdGUgPSBTZXNzaW9uUmVmcmVzaERlbGVnYXRlO1xubW9kdWxlLmV4cG9ydHMgPSBIdHRwQXBpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIEBwcm90ZWN0ZWRcbiAqIEBjbGFzc1xuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge1N0cmluZ3xOdW1iZXJ9IGxvZ0xldmVsIC0gTG9nIGxldmVsXG4gKi9cbnZhciBMb2dnZXIgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGxvZ0xldmVsKSB7XG4gIGlmICh0eXBlb2YgbG9nTGV2ZWwgPT09ICdzdHJpbmcnKSB7XG4gICAgbG9nTGV2ZWwgPSBMb2dMZXZlbHNbbG9nTGV2ZWxdO1xuICB9XG4gIGlmICghbG9nTGV2ZWwpIHtcbiAgICBsb2dMZXZlbCA9IExvZ0xldmVscy5JTkZPO1xuICB9XG4gIHRoaXMuX2xvZ0xldmVsID0gbG9nTGV2ZWw7XG59O1xuXG4vKipcbiAqIEBtZW1iZXJvZiBMb2dnZXJcbiAqL1xudmFyIExvZ0xldmVscyA9IExvZ2dlci5Mb2dMZXZlbHMgPSB7XG4gIFwiREVCVUdcIiA6IDEsXG4gIFwiSU5GT1wiIDogMixcbiAgXCJXQVJOXCIgOiAzLFxuICBcIkVSUk9SXCIgOiA0LFxuICBcIkZBVEFMXCIgOiA1XG59O1xuXG4vKipcbiAqIE91dHB1dCBsb2dcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbGV2ZWwgLSBMb2dnaW5nIHRhcmdldCBsZXZlbFxuICogQHBhcmFtIHtTdHJpbmd9IG1lc3NhZ2UgLSBNZXNzYWdlIHRvIGxvZ1xuICovXG5Mb2dnZXIucHJvdG90eXBlLmxvZyA9IGZ1bmN0aW9uKGxldmVsLCBtZXNzYWdlKSB7XG4gIGlmICh0aGlzLl9sb2dMZXZlbCA8PSBsZXZlbCkge1xuICAgIGlmIChsZXZlbCA8IExvZ0xldmVscy5FUlJPUikge1xuICAgICAgY29uc29sZS5sb2cobWVzc2FnZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgfVxuICB9XG59O1xuXG5mb3IgKHZhciBsZXZlbCBpbiBMb2dMZXZlbHMpIHtcbiAgTG9nZ2VyLnByb3RvdHlwZVtsZXZlbC50b0xvd2VyQ2FzZSgpXSA9IGNyZWF0ZUxvZ2dlckZ1bmN0aW9uKExvZ0xldmVsc1tsZXZlbF0pO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMb2dnZXJGdW5jdGlvbihsZXZlbCkge1xuICByZXR1cm4gZnVuY3Rpb24obWVzc2FnZSkgeyB0aGlzLmxvZyhsZXZlbCwgbWVzc2FnZSk7IH07XG59XG4iLCIvKipcbiAqIEBmaWxlIE1hbmFnZXMgU2FsZXNmb3JjZSBPQXV0aDIgb3BlcmF0aW9uc1xuICogQGF1dGhvciBTaGluaWNoaSBUb21pdGEgPHNoaW5pY2hpLnRvbWl0YUBnbWFpbC5jb20+XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgcXVlcnlzdHJpbmcgPSByZXF1aXJlKCdxdWVyeXN0cmluZycpLFxuICAgIF8gPSByZXF1aXJlKCdsb2Rhc2gvY29yZScpLFxuICAgIFRyYW5zcG9ydCA9IHJlcXVpcmUoJy4vdHJhbnNwb3J0Jyk7XG5cbnZhciBkZWZhdWx0cyA9IHtcbiAgbG9naW5VcmwgOiBcImh0dHBzOi8vbG9naW4uc2FsZXNmb3JjZS5jb21cIlxufTtcblxuLyoqXG4gKiBPQXV0aDIgY2xhc3NcbiAqXG4gKiBAY2xhc3NcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgLSBPQXV0aDIgY29uZmlnIG9wdGlvbnNcbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5sb2dpblVybF0gLSBTYWxlc2ZvcmNlIGxvZ2luIHNlcnZlciBVUkxcbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hdXRoelNlcnZpY2VVcmxdIC0gT0F1dGgyIGF1dGhvcml6YXRpb24gc2VydmljZSBVUkwuIElmIG5vdCBzcGVjaWZpZWQsIGl0IGdlbmVyYXRlcyBmcm9tIGRlZmF1bHQgYnkgYWRkaW5nIHRvIGxvZ2luIHNlcnZlciBVUkwuXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMudG9rZW5TZXJ2aWNlVXJsXSAtIE9BdXRoMiB0b2tlbiBzZXJ2aWNlIFVSTC4gSWYgbm90IHNwZWNpZmllZCBpdCBnZW5lcmF0ZXMgZnJvbSBkZWZhdWx0IGJ5IGFkZGluZyB0byBsb2dpbiBzZXJ2ZXIgVVJMLlxuICogQHBhcmFtIHtTdHJpbmd9IG9wdGlvbnMuY2xpZW50SWQgLSBPQXV0aDIgY2xpZW50IElELlxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmNsaWVudFNlY3JldF0gLSBPQXV0aDIgY2xpZW50IHNlY3JldCAoVGhpcyBpcyBvcHRpb25hbCBmb3IgcHVibGljIGNsaWVudCkuXG4gKiBAcGFyYW0ge1N0cmluZ30gb3B0aW9ucy5yZWRpcmVjdFVyaSAtIFVSSSB0byBiZSBjYWxsYmFja2VkIGZyb20gU2FsZXNmb3JjZSBPQXV0aDIgYXV0aG9yaXphdGlvbiBzZXJ2aWNlLlxuICovXG52YXIgT0F1dGgyID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zLmF1dGh6U2VydmljZVVybCAmJiBvcHRpb25zLnRva2VuU2VydmljZVVybCkge1xuICAgIHRoaXMubG9naW5VcmwgPSBvcHRpb25zLmF1dGh6U2VydmljZVVybC5zcGxpdCgnLycpLnNsaWNlKDAsIDMpLmpvaW4oJy8nKTtcbiAgICB0aGlzLmF1dGh6U2VydmljZVVybCA9IG9wdGlvbnMuYXV0aHpTZXJ2aWNlVXJsO1xuICAgIHRoaXMudG9rZW5TZXJ2aWNlVXJsID0gb3B0aW9ucy50b2tlblNlcnZpY2VVcmw7XG4gICAgdGhpcy5yZXZva2VTZXJ2aWNlVXJsID0gb3B0aW9ucy5yZXZva2VTZXJ2aWNlVXJsO1xuICB9IGVsc2Uge1xuICAgIHRoaXMubG9naW5VcmwgPSBvcHRpb25zLmxvZ2luVXJsIHx8IGRlZmF1bHRzLmxvZ2luVXJsO1xuICAgIHRoaXMuYXV0aHpTZXJ2aWNlVXJsID0gdGhpcy5sb2dpblVybCArIFwiL3NlcnZpY2VzL29hdXRoMi9hdXRob3JpemVcIjtcbiAgICB0aGlzLnRva2VuU2VydmljZVVybCA9IHRoaXMubG9naW5VcmwgKyBcIi9zZXJ2aWNlcy9vYXV0aDIvdG9rZW5cIjtcbiAgICB0aGlzLnJldm9rZVNlcnZpY2VVcmwgPSB0aGlzLmxvZ2luVXJsICsgXCIvc2VydmljZXMvb2F1dGgyL3Jldm9rZVwiO1xuICB9XG4gIHRoaXMuY2xpZW50SWQgPSBvcHRpb25zLmNsaWVudElkO1xuICB0aGlzLmNsaWVudFNlY3JldCA9IG9wdGlvbnMuY2xpZW50U2VjcmV0O1xuICB0aGlzLnJlZGlyZWN0VXJpID0gb3B0aW9ucy5yZWRpcmVjdFVyaTtcbiAgaWYgKG9wdGlvbnMucHJveHlVcmwpIHtcbiAgICB0aGlzLl90cmFuc3BvcnQgPSBuZXcgVHJhbnNwb3J0LlByb3h5VHJhbnNwb3J0KG9wdGlvbnMucHJveHlVcmwpO1xuICB9IGVsc2UgaWYgKG9wdGlvbnMuaHR0cFByb3h5KSB7XG4gICAgdGhpcy5fdHJhbnNwb3J0ID0gbmV3IFRyYW5zcG9ydC5IdHRwUHJveHlUcmFuc3BvcnQob3B0aW9ucy5odHRwUHJveHkpO1xuICB9IGVsc2Uge1xuICAgIHRoaXMuX3RyYW5zcG9ydCA9IG5ldyBUcmFuc3BvcnQoKTtcbiAgfVxufTtcblxuXG5cbi8qKlxuICpcbiAqL1xuXy5leHRlbmQoT0F1dGgyLnByb3RvdHlwZSwgLyoqIEBsZW5kcyBPQXV0aDIucHJvdG90eXBlICoqLyB7XG5cbiAgLyoqXG4gICAqIEdldCBTYWxlc2ZvcmNlIE9BdXRoMiBhdXRob3JpemF0aW9uIHBhZ2UgVVJMIHRvIHJlZGlyZWN0IHVzZXIgYWdlbnQuXG4gICAqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbXMgLSBQYXJhbWV0ZXJzXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbcGFyYW1zLnNjb3BlXSAtIFNjb3BlIHZhbHVlcyBpbiBzcGFjZS1zZXBhcmF0ZWQgc3RyaW5nXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbcGFyYW1zLnN0YXRlXSAtIFN0YXRlIHBhcmFtZXRlclxuICAgKiBAcGFyYW0ge1N0cmluZ30gW3BhcmFtcy5jb2RlX2NoYWxsZW5nZV0gLSBDb2RlIGNoYWxsZW5nZSB2YWx1ZSAoUkZDIDc2MzYgLSBQcm9vZiBLZXkgb2YgQ29kZSBFeGNoYW5nZSlcbiAgICogQHJldHVybnMge1N0cmluZ30gQXV0aG9yaXphdGlvbiBwYWdlIFVSTFxuICAgKi9cbiAgZ2V0QXV0aG9yaXphdGlvblVybCA6IGZ1bmN0aW9uKHBhcmFtcykge1xuICAgIHBhcmFtcyA9IF8uZXh0ZW5kKHtcbiAgICAgIHJlc3BvbnNlX3R5cGUgOiBcImNvZGVcIixcbiAgICAgIGNsaWVudF9pZCA6IHRoaXMuY2xpZW50SWQsXG4gICAgICByZWRpcmVjdF91cmkgOiB0aGlzLnJlZGlyZWN0VXJpXG4gICAgfSwgcGFyYW1zIHx8IHt9KTtcbiAgICByZXR1cm4gdGhpcy5hdXRoelNlcnZpY2VVcmwgK1xuICAgICAgKHRoaXMuYXV0aHpTZXJ2aWNlVXJsLmluZGV4T2YoJz8nKSA+PSAwID8gXCImXCIgOiBcIj9cIikgK1xuICAgICAgcXVlcnlzdHJpbmcuc3RyaW5naWZ5KHBhcmFtcyk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEB0eXBlZGVmIFRva2VuUmVzcG9uc2VcbiAgICogQHR5cGUge09iamVjdH1cbiAgICogQHByb3BlcnR5IHtTdHJpbmd9IGFjY2Vzc190b2tlblxuICAgKiBAcHJvcGVydHkge1N0cmluZ30gcmVmcmVzaF90b2tlblxuICAgKi9cblxuICAvKipcbiAgICogT0F1dGgyIFJlZnJlc2ggVG9rZW4gRmxvd1xuICAgKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gcmVmcmVzaFRva2VuIC0gUmVmcmVzaCB0b2tlblxuICAgKiBAcGFyYW0ge0NhbGxiYWNrLjxUb2tlblJlc3BvbnNlPn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gICAqIEByZXR1cm5zIHtQcm9taXNlLjxUb2tlblJlc3BvbnNlPn1cbiAgICovXG4gIHJlZnJlc2hUb2tlbiA6IGZ1bmN0aW9uKHJlZnJlc2hUb2tlbiwgY2FsbGJhY2spIHtcbiAgICB2YXIgcGFyYW1zID0ge1xuICAgICAgZ3JhbnRfdHlwZSA6IFwicmVmcmVzaF90b2tlblwiLFxuICAgICAgcmVmcmVzaF90b2tlbiA6IHJlZnJlc2hUb2tlbixcbiAgICAgIGNsaWVudF9pZCA6IHRoaXMuY2xpZW50SWRcbiAgICB9O1xuICAgIGlmICh0aGlzLmNsaWVudFNlY3JldCkge1xuICAgICAgcGFyYW1zLmNsaWVudF9zZWNyZXQgPSB0aGlzLmNsaWVudFNlY3JldDtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuX3Bvc3RQYXJhbXMocGFyYW1zLCBjYWxsYmFjayk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIE9BdXRoMiBXZWIgU2VydmVyIEF1dGhlbnRpY2F0aW9uIEZsb3cgKEF1dGhvcml6YXRpb24gQ29kZSlcbiAgICogQWNjZXNzIFRva2VuIFJlcXVlc3RcbiAgICpcbiAgICogQHBhcmFtIHtTdHJpbmd9IGNvZGUgLSBBdXRob3JpemF0aW9uIGNvZGVcbiAgICogQHBhcmFtIHtPYmplY3R9IFtwYXJhbXNdIC0gT3B0aW9uYWwgcGFyYW1ldGVycyB0byBzZW5kIGluIHRva2VuIHJldHJpZXZhbFxuICAgKiBAcGFyYW0ge1N0cmluZ30gW3BhcmFtcy5jb2RlX3ZlcmlmaWVyXSAtIENvZGUgdmVyaWZpZXIgdmFsdWUgKFJGQyA3NjM2IC0gUHJvb2YgS2V5IG9mIENvZGUgRXhjaGFuZ2UpXG4gICAqIEBwYXJhbSB7Q2FsbGJhY2suPFRva2VuUmVzcG9uc2U+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAgICogQHJldHVybnMge1Byb21pc2UuPFRva2VuUmVzcG9uc2U+fVxuICAgKi9cbiAgcmVxdWVzdFRva2VuIDogZnVuY3Rpb24oY29kZSwgcGFyYW1zLCBjYWxsYmFjaykge1xuICAgIGlmICh0eXBlb2YgcGFyYW1zID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBjYWxsYmFjayA9IHBhcmFtcztcbiAgICAgIHBhcmFtcyA9IHt9O1xuICAgIH1cbiAgICBwYXJhbXMgPSBfLmV4dGVuZCh7XG4gICAgICBncmFudF90eXBlIDogXCJhdXRob3JpemF0aW9uX2NvZGVcIixcbiAgICAgIGNvZGUgOiBjb2RlLFxuICAgICAgY2xpZW50X2lkIDogdGhpcy5jbGllbnRJZCxcbiAgICAgIHJlZGlyZWN0X3VyaSA6IHRoaXMucmVkaXJlY3RVcmlcbiAgICB9LCBwYXJhbXMgfHwge30pO1xuICAgIGlmICh0aGlzLmNsaWVudFNlY3JldCkge1xuICAgICAgcGFyYW1zLmNsaWVudF9zZWNyZXQgPSB0aGlzLmNsaWVudFNlY3JldDtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuX3Bvc3RQYXJhbXMocGFyYW1zLCBjYWxsYmFjayk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIE9BdXRoMiBVc2VybmFtZS1QYXNzd29yZCBGbG93IChSZXNvdXJjZSBPd25lciBQYXNzd29yZCBDcmVkZW50aWFscylcbiAgICpcbiAgICogQHBhcmFtIHtTdHJpbmd9IHVzZXJuYW1lIC0gU2FsZXNmb3JjZSB1c2VybmFtZVxuICAgKiBAcGFyYW0ge1N0cmluZ30gcGFzc3dvcmQgLSBTYWxlc2ZvcmNlIHBhc3N3b3JkXG4gICAqIEBwYXJhbSB7Q2FsbGJhY2suPFRva2VuUmVzcG9uc2U+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAgICogQHJldHVybnMge1Byb21pc2UuPFRva2VuUmVzcG9uc2U+fVxuICAgKi9cbiAgYXV0aGVudGljYXRlIDogZnVuY3Rpb24odXNlcm5hbWUsIHBhc3N3b3JkLCBjYWxsYmFjaykge1xuICAgIHJldHVybiB0aGlzLl9wb3N0UGFyYW1zKHtcbiAgICAgIGdyYW50X3R5cGUgOiBcInBhc3N3b3JkXCIsXG4gICAgICB1c2VybmFtZSA6IHVzZXJuYW1lLFxuICAgICAgcGFzc3dvcmQgOiBwYXNzd29yZCxcbiAgICAgIGNsaWVudF9pZCA6IHRoaXMuY2xpZW50SWQsXG4gICAgICBjbGllbnRfc2VjcmV0IDogdGhpcy5jbGllbnRTZWNyZXQsXG4gICAgICByZWRpcmVjdF91cmkgOiB0aGlzLnJlZGlyZWN0VXJpXG4gICAgfSwgY2FsbGJhY2spO1xuICB9LFxuXG4gIC8qKlxuICAgKiBPQXV0aDIgUmV2b2tlIFNlc3Npb24gb3IgQVBJIFRva2VuXG4gICAqXG4gICAqIEBwYXJhbSB7U3RyaW5nfSB0b2tlbiAtIEFjY2VzcyBvciBSZWZyZXNoIHRva2VuIHRvIHJldm9rZS4gUGFzc2luZyBpbiB0aGUgQWNjZXNzIHRva2VuIHJldm9rZXMgdGhlIHNlc3Npb24uIFBhc3NpbmcgaW4gdGhlIFJlZnJlc2ggdG9rZW4gcmV2b2tlcyBBUEkgQWNjZXNzLlxuICAgKiBAcGFyYW0ge0NhbGxiYWNrLjx1bmRlZmluZWQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAgICogQHJldHVybnMge1Byb21pc2UuPHVuZGVmaW5lZD59XG4gICAqL1xuICByZXZva2VUb2tlbiA6IGZ1bmN0aW9uKHRva2VuLCBjYWxsYmFjaykge1xuICAgIHJldHVybiB0aGlzLl90cmFuc3BvcnQuaHR0cFJlcXVlc3Qoe1xuICAgICAgbWV0aG9kIDogJ1BPU1QnLFxuICAgICAgdXJsIDogdGhpcy5yZXZva2VTZXJ2aWNlVXJsLFxuICAgICAgYm9keTogcXVlcnlzdHJpbmcuc3RyaW5naWZ5KHsgdG9rZW46IHRva2VuIH0pLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiXG4gICAgICB9XG4gICAgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1c0NvZGUgPj0gNDAwKSB7XG4gICAgICAgIHZhciByZXMgPSBxdWVyeXN0cmluZy5wYXJzZShyZXNwb25zZS5ib2R5KTtcbiAgICAgICAgaWYgKCFyZXMgfHwgIXJlcy5lcnJvcikge1xuICAgICAgICAgIHJlcyA9IHsgZXJyb3I6IFwiRVJST1JfSFRUUF9cIityZXNwb25zZS5zdGF0dXNDb2RlLCBlcnJvcl9kZXNjcmlwdGlvbjogcmVzcG9uc2UuYm9keSB9O1xuICAgICAgICB9XG4gICAgICAgIHZhciBlcnIgPSBuZXcgRXJyb3IocmVzLmVycm9yX2Rlc2NyaXB0aW9uKTtcbiAgICAgICAgZXJyLm5hbWUgPSByZXMuZXJyb3I7XG4gICAgICAgIHRocm93IGVycjtcbiAgICAgIH1cbiAgICB9KS50aGVuQ2FsbChjYWxsYmFjayk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBfcG9zdFBhcmFtcyA6IGZ1bmN0aW9uKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICByZXR1cm4gdGhpcy5fdHJhbnNwb3J0Lmh0dHBSZXF1ZXN0KHtcbiAgICAgIG1ldGhvZCA6ICdQT1NUJyxcbiAgICAgIHVybCA6IHRoaXMudG9rZW5TZXJ2aWNlVXJsLFxuICAgICAgYm9keSA6IHF1ZXJ5c3RyaW5nLnN0cmluZ2lmeShwYXJhbXMpLFxuICAgICAgaGVhZGVycyA6IHtcbiAgICAgICAgXCJjb250ZW50LXR5cGVcIiA6IFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCJcbiAgICAgIH1cbiAgICB9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICB2YXIgcmVzO1xuICAgICAgdHJ5IHtcbiAgICAgICAgcmVzID0gSlNPTi5wYXJzZShyZXNwb25zZS5ib2R5KTtcbiAgICAgIH0gY2F0Y2goZSkge31cbiAgICAgIGlmIChyZXNwb25zZS5zdGF0dXNDb2RlID49IDQwMCkge1xuICAgICAgICByZXMgPSByZXMgfHwgeyBlcnJvcjogXCJFUlJPUl9IVFRQX1wiK3Jlc3BvbnNlLnN0YXR1c0NvZGUsIGVycm9yX2Rlc2NyaXB0aW9uOiByZXNwb25zZS5ib2R5IH07XG4gICAgICAgIHZhciBlcnIgPSBuZXcgRXJyb3IocmVzLmVycm9yX2Rlc2NyaXB0aW9uKTtcbiAgICAgICAgZXJyLm5hbWUgPSByZXMuZXJyb3I7XG4gICAgICAgIHRocm93IGVycjtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXM7XG4gICAgfSkudGhlbkNhbGwoY2FsbGJhY2spO1xuICB9XG5cbn0pO1xuIiwiLyoqXG4gKiBAZmlsZSBQcm9jZXNzIGNsYXNzIHRvIG1hbmFnZS9ydW4gd29ya2Zsb3cgcnVsZSBhbmQgYXBwcm92YWwgcHJvY2Vzc1xuICogQGF1dGhvciBTaGluaWNoaSBUb21pdGEgPHNoaW5pY2hpLnRvbWl0YUBnbWFpbC5jb20+XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgXyA9IHJlcXVpcmUoJ2xvZGFzaC9jb3JlJyksXG4gICAgUHJvbWlzZSA9IHJlcXVpcmUoJy4vcHJvbWlzZScpLFxuICAgIENvbm5lY2l0b24gPSByZXF1aXJlKCcuL2Nvbm5lY3Rpb24nKTtcblxuLyoqXG4gKiBBIGNsYXNzIHdoaWNoIG1hbmFnZXMgcHJvY2VzcyBydWxlcyBhbmQgYXBwcm92YWwgcHJvY2Vzc2VzXG4gKlxuICogQGNsYXNzXG4gKiBAcGFyYW0ge0Nvbm5lY3Rpb259IGNvbm4gLSBDb25uZWN0aW9uIG9iamVjdFxuICovXG52YXIgUHJvY2VzcyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oY29ubikge1xuICAvKipcbiAgICogT2JqZWN0IHdoaWNoIG1hbmdhZ2VzIHByb2Nlc3MgcnVsZXNcbiAgICogQG1lbWJlciB7UHJvY2Vzc35Qcm9jZXNzUnVsZX0gUHJvY2VzcyNydWxlXG4gICAqL1xuICB0aGlzLnJ1bGUgPSBuZXcgUHJvY2Vzc1J1bGUoY29ubik7XG4gIC8qKlxuICAgKiBPYmplY3Qgd2hpY2ggbWFuZ2FnZXMgYXBwcm92YWwgcHJvY2Vzc1xuICAgKiBAbWVtYmVyIHtQcm9jZXNzfkFwcHJvdmFsUHJvY2Vzc30gUHJvY2VzcyNhcHByb3ZhbFxuICAgKi9cbiAgdGhpcy5hcHByb3ZhbCA9IG5ldyBBcHByb3ZhbFByb2Nlc3MoY29ubik7XG59O1xuXG4vKipcbiAqIEEgY2xhc3Mgd2hpY2ggbWFuYWdlcyBwcm9jZXNzICh3b3JrZmxvdykgcnVsZXNcbiAqXG4gKiBAY2xhc3MgUHJvY2Vzc35Qcm9jZXNzUnVsZVxuICogQHBhcmFtIHtDb25uZWN0aW9ufSBjb25uIC0gQ29ubmVjdGlvbiBvYmplY3RcbiAqL1xudmFyIFByb2Nlc3NSdWxlID0gZnVuY3Rpb24oY29ubikge1xuICB0aGlzLl9jb25uID0gY29ubjtcbn07XG5cbi8qKlxuICogQHR5cGVkZWYge09iamVjdH0gUHJvY2Vzc35Qcm9jZXNzUnVsZURlZmluaXRpb25cbiAqIEBwcm9wIHtTdHJpbmd9IGlkIC0gSWQgb2YgYXBwcm92YWwgcHJvY2VzcyBkZWZpbml0aW9uXG4gKiBAcHJvcCB7U3RyaW5nfSBuYW1lIC0gTmFtZSBvZiBwcm9jZXNzIHJ1bGUgZGVmaW5pdGlvblxuICogQHByb3Age1N0cmluZ30gb2JqZWN0IC0gU09iamVjdCBuYW1lIHdoaWNoIHByb2Nlc3MgcnVsZSBpcyBkZWZpbmVkXG4gKi9cblxuLyoqXG4gKiBHZXQgYWxsIHByb2Nlc3MgcnVsZSBkZWZpbml0aW9ucyByZWdpc3RlcmVkIHRvIHNvYmplY3RzXG4gKlxuICogQG1ldGhvZCBQcm9jZXNzflByb2Nlc3NSdWxlI2xpc3RcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPE1hcC48U3RyaW5nLCBBcnJheS48UHJvY2Vzc35Qcm9jZXNzUnVsZURlZmluaXRpb24+Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPE1hcC48U3RyaW5nLCBBcnJheS48UHJvY2Vzc35Qcm9jZXNzUnVsZURlZmluaXRpb24+Pj59XG4gKi9cblByb2Nlc3NSdWxlLnByb3RvdHlwZS5saXN0ID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgcmV0dXJuIHRoaXMuX2Nvbm4ucmVxdWVzdChcIi9wcm9jZXNzL3J1bGVzXCIpLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgcmV0dXJuIHJlcy5ydWxlcztcbiAgfSkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IFByb2Nlc3N+UHJvY2Vzc1J1bGVUcmlnZ2VyUmVzdWx0XG4gKiBAcHJvcCB7Qm9vbGVhbn0gc3VjY2VzcyAtIElzIHByb2Nlc3MgcnVsZSB0cmlnZ2VyIHN1Y2NlZWRlZCBvciBub3RcbiAqIEBwcm9wIHtBcnJheS48T2JqZWN0Pn0gZXJyb3JzIC0gQXJyYXkgb2YgZXJyb3JzIHJldHVybmVkIGlmIHRoZSByZXF1ZXN0IGZhaWxlZFxuICovXG5cbi8qKlxuICogVHJpZ2dlciBwcm9jZXNzIHJ1bGUgZm9yIGdpdmVuIGVudGl0aWVzXG4gKlxuICogQG1ldGhvZCBQcm9jZXNzflByb2Nlc3NSdWxlI3RyaWdnZXJcbiAqIEBwYXJhbSB7U3RyaW5nfEFycmF5LjxTdHJpbmc+fSBjb250ZXh0SWRzIC0gRW50aXR5IElEKHMpIHRvIHRyaWdnZXIgd29ya2Zsb3cgcHJvY2Vzc1xuICogQHBhcmFtIHtDYWxsYmFjay48UHJvY2Vzc35Qcm9jZXNzUnVsZVRyaWdnZXJSZXN1bHQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxQcm9jZXNzflByb2Nlc3NSdWxlVHJpZ2dlclJlc3VsdD59XG4gKi9cblByb2Nlc3NSdWxlLnByb3RvdHlwZS50cmlnZ2VyID0gZnVuY3Rpb24oY29udGV4dElkcywgY2FsbGJhY2spIHtcbiAgY29udGV4dElkcyA9IF8uaXNBcnJheShjb250ZXh0SWRzKSA/IGNvbnRleHRJZHMgOiBbIGNvbnRleHRJZHMgXTtcbiAgcmV0dXJuIHRoaXMuX2Nvbm4ucmVxdWVzdCh7XG4gICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICB1cmw6IFwiL3Byb2Nlc3MvcnVsZXMvXCIsXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgY29udGV4dElkczogY29udGV4dElkc1xuICAgIH0pLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgfVxuICB9KS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIEEgY2xhc3Mgd2hpY2ggbWFuYWdlcyBhcHByb3ZhbCBwcm9jZXNzZXNcbiAqXG4gKiBAY2xhc3MgUHJvY2Vzc35BcHByb3ZhbFByb2Nlc3NcbiAqIEBwYXJhbSB7Q29ubmVjdGlvbn0gY29ubiAtIENvbm5lY3Rpb24gb2JqZWN0XG4gKi9cbnZhciBBcHByb3ZhbFByb2Nlc3MgPSBmdW5jdGlvbihjb25uKSB7XG4gIHRoaXMuX2Nvbm4gPSBjb25uO1xufTtcblxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBQcm9jZXNzfkFwcHJvdmFsUHJvY2Vzc0RlZmluaXRpb25cbiAqIEBwcm9wIHtTdHJpbmd9IGlkIC0gSWQgb2YgYXBwcm92YWwgcHJvY2VzcyBkZWZpbml0aW9uXG4gKiBAcHJvcCB7U3RyaW5nfSBuYW1lIC0gTmFtZSBvZiBhcHByb3ZhbCBwcm9jZXNzIGRlZmluaXRpb25cbiAqIEBwcm9wIHtTdHJpbmd9IG9iamVjdCAtIFNPYmplY3QgbmFtZSB3aGljaCBhcHByb3ZhbCBwcm9jZXNzIGlzIGRlZmluZWRcbiAqIEBwcm9wIHtOdW1iZXJ9IHNvcnRPcmRlciAtIFByb2Nlc3Npbmcgb3JkZXIgb2YgYXBwcm92YWwgaW4gU09iamVjdFxuICovXG4vKipcbiAqIEdldCBhbGwgYXBwcm92YWwgcHJvY2VzcyBkZWZpbml0aW9ucyByZWdpc3RlcmVkIHRvIHNvYmplY3RzXG4gKlxuICogQG1ldGhvZCBQcm9jZXNzfkFwcHJvdmFsUHJvY2VzcyNsaXN0XG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxNYXAuPFN0cmluZywgQXJyYXkuPEFwcHJvdmFsUHJvY2Vzc0RlZmluaXRpb24+Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPE1hcC48U3RyaW5nLCBBcnJheS48QXBwcm92YWxQcm9jZXNzRGVmaW5pdGlvbj4+Pn1cbiAqL1xuQXBwcm92YWxQcm9jZXNzLnByb3RvdHlwZS5saXN0ID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgcmV0dXJuIHRoaXMuX2Nvbm4ucmVxdWVzdChcIi9wcm9jZXNzL2FwcHJvdmFsc1wiKS50aGVuKGZ1bmN0aW9uKHJlcykge1xuICAgIHJldHVybiByZXMuYXBwcm92YWxzO1xuICB9KS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IFByb2Nlc3N+QXBwcm92YWxQcm9jZXNzUmVxdWVzdFJlc3VsdFxuICogQHByb3Age0Jvb2xlYW59IHN1Y2Nlc3MgLSBUcnVlIGlmIHByb2Nlc3Npbmcgb3IgYXBwcm92YWwgY29tcGxldGVkIHN1Y2Nlc3NmdWxseVxuICogQHByb3Age0FycmF5LjxPYmplY3Q+fSBlcnJvcnMgLSBUaGUgc2V0IG9mIGVycm9ycyByZXR1cm5lZCBpZiB0aGUgcmVxdWVzdCBmYWlsZWRcbiAqIEBwcm9wIHtBcnJheS48U3RyaW5nPn0gYWN0b3JJZHMgLSBJRHMgb2YgdGhlIHVzZXJzIHdobyBhcmUgY3VycmVudGx5IGFzc2lnbmVkIHRvIHRoaXMgYXBwcm92YWwgc3RlcFxuICogQHByb3Age1N0cmluZ30gZW50aXR5SWQgLSBPYmplY3QgYmVpbmcgcHJvY2Vzc2VkXG4gKiBAcHJvcCB7U3RyaW5nfSBpbnN0YW5jZUlkIC0gSUQgb2YgdGhlIFByb2Nlc3NJbnN0YW5jZSBhc3NvY2lhdGVkIHdpdGggdGhlIG9iamVjdCBzdWJtaXR0ZWQgZm9yIHByb2Nlc3NpbmdcbiAqIEBwcm9wIHtTdHJpbmd9IGluc3RhbmNlU3RhdHVzIC0gU3RhdHVzIG9mIHRoZSBjdXJyZW50IHByb2Nlc3MgaW5zdGFuY2UgKG5vdCBhbiBpbmRpdmlkdWFsIG9iamVjdCBidXQgdGhlIGVudGlyZSBwcm9jZXNzIGluc3RhbmNlKVxuICogQHByb3Age0FycmF5LjxTdHJpbmc+fSBuZXdXb3JrSXRlbUlkcyAtIENhc2UtaW5zZW5zaXRpdmUgSURzIHRoYXQgcG9pbnQgdG8gUHJvY2Vzc0luc3RhbmNlV29ya2l0ZW0gaXRlbXMgKHRoZSBzZXQgb2YgcGVuZGluZyBhcHByb3ZhbCByZXF1ZXN0cylcbiAqL1xuXG4vKipcbiAqIFNlbmQgYnVsayByZXF1ZXN0cyBmb3IgYXBwcm92YWwgcHJvY2Vzc1xuICpcbiAqIEBtZXRob2QgUHJvY2Vzc35BcHByb3ZhbFByb2Nlc3MjcmVxdWVzdFxuICogQHBhcmFtIHtBcnJheS48QXBwcm92YWxQcm9jZXNzUmVxdWVzdD59IHJlcXVlc3RzIC0gQXJyYXkgb2YgYXBwcm92YWwgcHJvY2VzcyByZXF1ZXN0IHRvIHNlbmRcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPEFycmF5LjxBcHByb3ZhbFByb2Nlc3NSZXF1ZXN0UmVzdWx0Pj59IC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEBwYXJhbSB7UHJvbWlzZS48QXJyYXkuPEFwcHJvdmFsUHJvY2Vzc1JlcXVlc3RSZXN1bHQ+Pn1cbiAqL1xuQXBwcm92YWxQcm9jZXNzLnByb3RvdHlwZS5yZXF1ZXN0ID0gZnVuY3Rpb24ocmVxdWVzdHMsIGNhbGxiYWNrKSB7XG4gIHJlcXVlc3RzID0gcmVxdWVzdHMubWFwKGZ1bmN0aW9uKHJlcSkge1xuICAgIHJldHVybiByZXEuX3JlcXVlc3QgPyByZXEuX3JlcXVlc3QgOiByZXE7XG4gIH0pO1xuICByZXR1cm4gdGhpcy5fY29ubi5yZXF1ZXN0KHtcbiAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICB1cmw6ICcvcHJvY2Vzcy9hcHByb3ZhbHMnLFxuICAgIGhlYWRlcnM6IHsgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIgfSxcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHJlcXVlc3RzOiByZXF1ZXN0cyB9KVxuICB9KS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIENyZWF0ZSBhcHByb3ZhbCBwcm9jZXNzIHJlcXVlc3RcbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5BcHByb3ZhbFByb2Nlc3MucHJvdG90eXBlLl9jcmVhdGVSZXF1ZXN0ID0gZnVuY3Rpb24oYWN0aW9uVHlwZSwgY29udGV4dElkLCBjb21tZW50cywgb3B0aW9ucywgY2FsbGJhY2spIHtcbiAgaWYgKHR5cGVvZiBjb21tZW50cyA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgY2FsbGJhY2sgPSBjb21tZW50cztcbiAgICBvcHRpb25zID0gbnVsbDtcbiAgICBjb21tZW50cyA9IG51bGw7XG4gIH1cbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBjYWxsYmFjayA9IG9wdGlvbnM7XG4gICAgb3B0aW9ucyA9IG51bGw7XG4gIH1cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIHZhciByZXF1ZXN0ID0ge1xuICAgIGFjdGlvblR5cGU6IGFjdGlvblR5cGUsXG4gICAgY29udGV4dElkOiBjb250ZXh0SWQsXG4gICAgY29tbWVudHM6IGNvbW1lbnRzXG4gIH07XG4gIF8uZXh0ZW5kKHJlcXVlc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gbmV3IEFwcHJvdmFsUHJvY2Vzc1JlcXVlc3QodGhpcywgcmVxdWVzdCkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBTdWJtaXQgYXBwcm92YWwgcmVxdWVzdCBmb3IgYW4gaXRlbVxuICpcbiAqIEBtZXRob2QgUHJvY2Vzc35BcHByb3ZhbFByb2Nlc3Mjc3VibWl0XG4gKiBAcGFyYW0ge1N0cmluZ30gY29udGV4dElkIC0gSUQgb2YgdGhlIGl0ZW0gdGhhdCBpcyBiZWluZyBhY3RlZCB1cG9uXG4gKiBAcGFyYW0ge1N0cmluZ30gW2NvbW1lbnRzXSAtIENvbW1lbnQgdG8gYWRkIHRvIHRoZSBoaXN0b3J5IHN0ZXAgYXNzb2NpYXRlZCB3aXRoIHRoaXMgcmVxdWVzdFxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIFJlcXVlc3QgcGFyYW1ldGVyc1xuICogQHBhcmFtIHtBcnJheS48U3RyaW5nPn0gW29wdGlvbnMubmV4dEFwcHJvdmVySWRzXSAtIElmIHRoZSBwcm9jZXNzIHJlcXVpcmVzIHNwZWNpZmljYXRpb24gb2YgdGhlIG5leHQgYXBwcm92YWwsIHRoZSBJRCBvZiB0aGUgdXNlciB0byBiZSBhc3NpZ25lZCB0aGUgbmV4dCByZXF1ZXN0XG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMucHJvY2Vzc0RlZmluaXRpb25OYW1lT3JJZF0gLSBEZXZlbG9wZXIgbmFtZSBvciBJRCBvZiB0aGUgcHJvY2VzcyBkZWZpbml0aW9uXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLnNraXBFbnRyeUNyaXRlcmlhXSAtIERldGVybWluZXMgd2hldGhlciB0byBldmFsdWF0ZSB0aGUgZW50cnkgY3JpdGVyaWEgZm9yIHRoZSBwcm9jZXNzICh0cnVlKSBvciBub3QgKGZhbHNlKSBpZiB0aGUgcHJvY2VzcyBkZWZpbml0aW9uIG5hbWUgb3IgSUQgaXNu4oCZdCBudWxsXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxBcHByb3ZhbFByb2Nlc3NSZXF1ZXN0UmVzdWx0Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7QXBwcm92YWxQcm9jZXNzUmVxdWVzdH1cbiAqL1xuQXBwcm92YWxQcm9jZXNzLnByb3RvdHlwZS5zdWJtaXQgPSBmdW5jdGlvbihjb250ZXh0SWQsIGNvbW1lbnRzLCBvcHRpb25zLCBjYWxsYmFjaykge1xuICByZXR1cm4gdGhpcy5fY3JlYXRlUmVxdWVzdChcIlN1Ym1pdFwiLCBjb250ZXh0SWQsIGNvbW1lbnRzLCBvcHRpb25zLCBjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIEFwcHJvdmUgYXBwcm92YWwgcmVxdWVzdCBmb3IgYW4gaXRlbVxuICpcbiAqIEBtZXRob2QgUHJvY2Vzc35BcHByb3ZhbFByb2Nlc3MjYXBwcm92ZVxuICogQHBhcmFtIHtTdHJpbmd9IHdvcmtpdGVtSWQgLSBJRCBvZiB0aGUgaXRlbSB0aGF0IGlzIGJlaW5nIGFjdGVkIHVwb25cbiAqIEBwYXJhbSB7U3RyaW5nfSBbY29tbWVudHNdIC0gQ29tbWVudCB0byBhZGQgdG8gdGhlIGhpc3Rvcnkgc3RlcCBhc3NvY2lhdGVkIHdpdGggdGhpcyByZXF1ZXN0XG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gUmVxdWVzdCBwYXJhbWV0ZXJzXG4gKiBAcGFyYW0ge0FycmF5LjxTdHJpbmc+fSBbb3B0aW9ucy5uZXh0QXBwcm92ZXJJZHNdIC0gSWYgdGhlIHByb2Nlc3MgcmVxdWlyZXMgc3BlY2lmaWNhdGlvbiBvZiB0aGUgbmV4dCBhcHByb3ZhbCwgdGhlIElEIG9mIHRoZSB1c2VyIHRvIGJlIGFzc2lnbmVkIHRoZSBuZXh0IHJlcXVlc3RcbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5wcm9jZXNzRGVmaW5pdGlvbk5hbWVPcklkXSAtIERldmVsb3BlciBuYW1lIG9yIElEIG9mIHRoZSBwcm9jZXNzIGRlZmluaXRpb25cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuc2tpcEVudHJ5Q3JpdGVyaWFdIC0gRGV0ZXJtaW5lcyB3aGV0aGVyIHRvIGV2YWx1YXRlIHRoZSBlbnRyeSBjcml0ZXJpYSBmb3IgdGhlIHByb2Nlc3MgKHRydWUpIG9yIG5vdCAoZmFsc2UpIGlmIHRoZSBwcm9jZXNzIGRlZmluaXRpb24gbmFtZSBvciBJRCBpc27igJl0IG51bGxcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPEFwcHJvdmFsUHJvY2Vzc1JlcXVlc3RSZXN1bHQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtBcHByb3ZhbFByb2Nlc3NSZXF1ZXN0fVxuICovXG5BcHByb3ZhbFByb2Nlc3MucHJvdG90eXBlLmFwcHJvdmUgPSBmdW5jdGlvbih3b3JraXRlbUlkLCBjb21tZW50cywgb3B0aW9ucywgY2FsbGJhY2spIHtcbiAgcmV0dXJuIHRoaXMuX2NyZWF0ZVJlcXVlc3QoXCJBcHByb3ZlXCIsIHdvcmtpdGVtSWQsIGNvbW1lbnRzLCBvcHRpb25zLCBjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIFJlamVjdCBhcHByb3ZhbCByZXF1ZXN0IGZvciBhbiBpdGVtXG4gKlxuICogQG1ldGhvZCBQcm9jZXNzfkFwcHJvdmFsUHJvY2VzcyNyZWplY3RcbiAqIEBwYXJhbSB7U3RyaW5nfSB3b3JraXRlbUlkIC0gSUQgb2YgdGhlIGl0ZW0gdGhhdCBpcyBiZWluZyBhY3RlZCB1cG9uXG4gKiBAcGFyYW0ge1N0cmluZ30gW2NvbW1lbnRzXSAtIENvbW1lbnQgdG8gYWRkIHRvIHRoZSBoaXN0b3J5IHN0ZXAgYXNzb2NpYXRlZCB3aXRoIHRoaXMgcmVxdWVzdFxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIFJlcXVlc3QgcGFyYW1ldGVyc1xuICogQHBhcmFtIHtBcnJheS48U3RyaW5nPn0gW29wdGlvbnMubmV4dEFwcHJvdmVySWRzXSAtIElmIHRoZSBwcm9jZXNzIHJlcXVpcmVzIHNwZWNpZmljYXRpb24gb2YgdGhlIG5leHQgYXBwcm92YWwsIHRoZSBJRCBvZiB0aGUgdXNlciB0byBiZSBhc3NpZ25lZCB0aGUgbmV4dCByZXF1ZXN0XG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMucHJvY2Vzc0RlZmluaXRpb25OYW1lT3JJZF0gLSBEZXZlbG9wZXIgbmFtZSBvciBJRCBvZiB0aGUgcHJvY2VzcyBkZWZpbml0aW9uXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLnNraXBFbnRyeUNyaXRlcmlhXSAtIERldGVybWluZXMgd2hldGhlciB0byBldmFsdWF0ZSB0aGUgZW50cnkgY3JpdGVyaWEgZm9yIHRoZSBwcm9jZXNzICh0cnVlKSBvciBub3QgKGZhbHNlKSBpZiB0aGUgcHJvY2VzcyBkZWZpbml0aW9uIG5hbWUgb3IgSUQgaXNu4oCZdCBudWxsXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxBcHByb3ZhbFByb2Nlc3NSZXF1ZXN0UmVzdWx0Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7QXBwcm92YWxQcm9jZXNzUmVxdWVzdH1cbiAqL1xuQXBwcm92YWxQcm9jZXNzLnByb3RvdHlwZS5yZWplY3QgPSBmdW5jdGlvbih3b3JraXRlbUlkLCBjb21tZW50cywgb3B0aW9ucywgY2FsbGJhY2spIHtcbiAgcmV0dXJuIHRoaXMuX2NyZWF0ZVJlcXVlc3QoXCJSZWplY3RcIiwgd29ya2l0ZW1JZCwgY29tbWVudHMsIG9wdGlvbnMsIGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogQSBjbGFzcyByZXByZXNlbnRpbmcgYXBwcm92YWwgcHJvY2VzcyByZXF1ZXN0XG4gKlxuICogQHByb3RlY3RlZFxuICogQGNsYXNzIFByb2Nlc3N+QXBwcm92YWxQcm9jZXNzUmVxdWVzdFxuICogQGltcGxlbWVudHMge1Byb21pc2UuPFByb2Nlc3N+QXBwcm92YWxQcm9jZXNzUmVxdWVzdFJlc3VsdD59XG4gKiBAcGFyYW0ge1Byb2Nlc3N+QXBwcm92YWxQcm9jZXNzfSBwcm9jZXNzIC0gQXBwcm92YWxQcm9jZXNzXG4gKiBAcGFyYW0ge09iamVjdH0gcmVxdWVzdCAtIFJlcXVlc3QgcGFyYW1ldGVyc1xuICogQHBhcmFtIHtTdHJpbmd9IHJlcXVlc3QuYWN0aW9uVHlwZSAtIFJlcHJlc2VudHMgdGhlIGtpbmQgb2YgYWN0aW9uIHRvIHRha2U6IFN1Ym1pdCwgQXBwcm92ZSwgb3IgUmVqZWN0XG4gKiBAcGFyYW0ge1N0cmluZ30gcmVxdWVzdC5jb250ZXh0SWQgLSBJRCBvZiB0aGUgaXRlbSB0aGF0IGlzIGJlaW5nIGFjdGVkIHVwb25cbiAqIEBwYXJhbSB7U3RyaW5nfSByZXF1ZXN0LmNvbW1lbnRzIC0gQ29tbWVudCB0byBhZGQgdG8gdGhlIGhpc3Rvcnkgc3RlcCBhc3NvY2lhdGVkIHdpdGggdGhpcyByZXF1ZXN0XG4gKiBAcGFyYW0ge0FycmF5LjxTdHJpbmc+fSBbcmVxdWVzdC5uZXh0QXBwcm92ZXJJZHNdIC0gSWYgdGhlIHByb2Nlc3MgcmVxdWlyZXMgc3BlY2lmaWNhdGlvbiBvZiB0aGUgbmV4dCBhcHByb3ZhbCwgdGhlIElEIG9mIHRoZSB1c2VyIHRvIGJlIGFzc2lnbmVkIHRoZSBuZXh0IHJlcXVlc3RcbiAqIEBwYXJhbSB7U3RyaW5nfSBbcmVxdWVzdC5wcm9jZXNzRGVmaW5pdGlvbk5hbWVPcklkXSAtIERldmVsb3BlciBuYW1lIG9yIElEIG9mIHRoZSBwcm9jZXNzIGRlZmluaXRpb25cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW3JlcXVlc3Quc2tpcEVudHJ5Q3JpdGVyaWFdIC0gRGV0ZXJtaW5lcyB3aGV0aGVyIHRvIGV2YWx1YXRlIHRoZSBlbnRyeSBjcml0ZXJpYSBmb3IgdGhlIHByb2Nlc3MgKHRydWUpIG9yIG5vdCAoZmFsc2UpIGlmIHRoZSBwcm9jZXNzIGRlZmluaXRpb24gbmFtZSBvciBJRCBpc27igJl0IG51bGxcbiAqL1xudmFyIEFwcHJvdmFsUHJvY2Vzc1JlcXVlc3QgPSBmdW5jdGlvbihwcm9jZXNzLCByZXF1ZXN0KSB7XG4gIHRoaXMuX3Byb2Nlc3MgPSBwcm9jZXNzO1xuICB0aGlzLl9yZXF1ZXN0ID0gcmVxdWVzdDtcbn07XG5cbi8qKlxuICogUHJvbWlzZS9BKyBpbnRlcmZhY2VcbiAqIGh0dHA6Ly9wcm9taXNlcy1hcGx1cy5naXRodWIuaW8vcHJvbWlzZXMtc3BlYy9cbiAqXG4gKiBAbWV0aG9kIFByb2Nlc3N+QXBwcm92YWxQcm9jZXNzUmVxdWVzdCN0aGVuXG4gKi9cbkFwcHJvdmFsUHJvY2Vzc1JlcXVlc3QucHJvdG90eXBlLnRoZW4gPSBmdW5jdGlvbihvblJlc29sdmUsIG9uUmVqZWN0KSB7XG4gIGlmICghdGhpcy5fcHJvbWlzZSkge1xuICAgIHRoaXMuX3Byb21pc2UgPSB0aGlzLl9wcm9jZXNzLnJlcXVlc3QoWyB0aGlzIF0pLnRoZW4oZnVuY3Rpb24ocmV0cykge1xuICAgICAgcmV0dXJuIHJldHNbMF07XG4gICAgfSk7XG4gIH1cbiAgdGhpcy5fcHJvbWlzZS50aGVuKG9uUmVzb2x2ZSwgb25SZWplY3QpO1xufTtcblxuLyoqXG4gKiBQcm9taXNlL0ErIGV4dGVuc2lvblxuICogQ2FsbCBcInRoZW5cIiB1c2luZyBnaXZlbiBub2RlLXN0eWxlIGNhbGxiYWNrIGZ1bmN0aW9uXG4gKlxuICogQG1ldGhvZCBQcm9jZXNzfkFwcHJvdmFsUHJvY2Vzc1JlcXVlc3QjdGhlbkNhbGxcbiAqL1xuQXBwcm92YWxQcm9jZXNzUmVxdWVzdC5wcm90b3R5cGUudGhlbkNhbGwgPSBmdW5jdGlvbihjYWxsYmFjaykge1xuICByZXR1cm4gY2FsbGJhY2sgPyB0aGlzLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgY2FsbGJhY2sobnVsbCwgcmVzKTtcbiAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSkgOlxuICB0aGlzO1xufTtcbiIsIi8qZ2xvYmFsIHByb2Nlc3MqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBfID0gcmVxdWlyZSgnbG9kYXNoL2NvcmUnKTtcblxuLyoqXG4gKiBAY2FsbGJhY2sgUmVzb2x2ZWRDYWxsYmFja1xuICogQHBhcmFtIHtUfSByZXN1bHQgLSBSZXNvbHZlZCB2YWx1ZVxuICogQHJldHVybnMge1N9XG4gKiBAdGVtcGxhdGUgVCxTXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgUmVqZWN0ZWRDYWxsYmFja1xuICogQHBhcmFtIHtFcnJvcn0gcmVhc29uIC0gUmVqZWN0ZWQgcmVhc29uXG4gKiBAcmV0dXJucyB7U31cbiAqIEB0ZW1wbGF0ZSBTXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgUmVzb2x2ZUNhbGxiYWNrXG4gKiBAcGFyYW0ge1R9IHJlc3VsdFxuICogQHRlbXBsYXRlIFRcbiAqL1xuXG4vKipcbiAqIEBjYWxsYmFjayBSZWplY3RlZENhbGxiYWNrXG4gKiBAcGFyYW0ge0Vycm9yfSByZWFzb24gLSBSZWplY3RlZCByZWFzb25cbiAqIEByZXR1cm5zIHtTfVxuICogQHRlbXBsYXRlIFNcbiAqL1xuXG4vKipcbiAqIEBjYWxsYmFjayBQcm9taXNlQ2FsbGJhY2tcbiAqIEBwYXJhbSB7UmVzb2x2ZUNhbGxiYWNrLjxUPn0gcmVzb2x2ZVxuICogQHBhcmFtIHtSZWplY3RDYWxsYmFja30gcmVqZWN0XG4gKiBAdGVtcGxhdGUgVFxuICovXG5cbi8qKlxuICogUHJvbWlzZSBjbGFzcyB3aXRoIGEgbGl0dGxlIGV4dGVuc2lvblxuICpcbiAqIEBjbGFzcyBQcm9taXNlXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7UHJvbWlzZUNhbGxiYWNrLjxUPn1cbiAqIEB0ZW1wbGF0ZSBUXG4gKi9cbnZhciBQcm9taXNlID0gcmVxdWlyZSgncHJvbWlzZS9saWIvZXM2LWV4dGVuc2lvbnMnKTtcblxuLyoqXG4gKiBUaGUgXCJ0aGVuXCIgbWV0aG9kIGZyb20gdGhlIFByb21pc2VzL0ErIHNwZWNpZmljYXRpb25cbiAqXG4gKiBAbWV0aG9kIFByb21pc2UjdGhlblxuICogQHBhcmFtIHtGdWxmaWxsZWRDYWxsYmFjay48VCwgUzE+fSBbb25GdWxmaWxsZWRdXG4gKiBAcGFyYW0ge1JlamVjdGVkQ2FsbGJhY2suPFMyPn0gW29uUmVqZWN0ZWRdXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48UzF8UzI+fVxuICovXG5cbi8qKlxuICogQ2FsbCBcInRoZW5cIiB1c2luZyBnaXZlbiBub2RlLXN0eWxlIGNhbGxiYWNrIGZ1bmN0aW9uLlxuICogVGhpcyBpcyBiYXNpY2FsbHkgc2FtZSBhcyBcIm5vZGVpZnlcIiBleGNlcHQgdGhhdCBpdCBhbHdheXMgcmV0dXJuIHRoZSBvcmlnaW5hbCBwcm9taXNlXG4gKlxuICogQG1ldGhvZCBQcm9taXNlI3RoZW5DYWxsXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxUPn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZX1cbiAqL1xuUHJvbWlzZS5wcm90b3R5cGUudGhlbkNhbGwgPSBmdW5jdGlvbihjYWxsYmFjaykge1xuICBpZiAoXy5pc0Z1bmN0aW9uKGNhbGxiYWNrKSkge1xuICAgIHRoaXMudGhlbihmdW5jdGlvbihyZXMpIHtcbiAgICAgIHByb2Nlc3MubmV4dFRpY2soZnVuY3Rpb24oKSB7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsIHJlcyk7XG4gICAgICB9KTtcbiAgICB9LCBmdW5jdGlvbihlcnIpIHtcbiAgICAgIHByb2Nlc3MubmV4dFRpY2soZnVuY3Rpb24oKSB7XG4gICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogQSBzdWdhciBtZXRob2QsIGVxdWl2YWxlbnQgdG8gcHJvbWlzZS50aGVuKHVuZGVmaW5lZCwgb25SZWplY3RlZCkuXG4gKlxuICogQG1ldGhvZCBQcm9taXNlI2NhdGNoXG4gKiBAcGFyYW0ge1JlamVjdGVkQ2FsbGJhY2suPFM+fSBvblJlamVjdGVkXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48Uz59XG4gKi9cblxuLyoqXG4gKiBTeW5vbnltIG9mIFByb21pc2UjY2F0Y2hcbiAqXG4gKiBAbWV0aG9kIFByb21pc2UjZmFpbFxuICogQHBhcmFtIHtSZWplY3RlZENhbGxiYWNrLjxTPn0gb25SZWplY3RlZFxuICogQHJldHVybnMge1Byb21pc2UuPFM+fVxuICovXG5Qcm9taXNlLnByb3RvdHlwZS5mYWlsID0gUHJvbWlzZS5wcm90b3R5cGVbJ2NhdGNoJ107XG5cbi8qKlxuICogUmV0dXJucyByZXNvbHZpbmcgcHJvbWlzZSB3aXRoIGdpdmVuIHJlYXNvblxuICpcbiAqIEBtZXRob2QgUHJvbWlzZS5yZXNvbHZlXG4gKiBAcGFyYW0geyp9IHJlc3VsdCAtIFJlc29sdmVkIHZhbHVlXG4gKiBAcmV0dXJucyB7UHJvbWlzZX1cbiAqL1xuXG4vKipcbiAqIFJldHVybnMgcmVqZWN0aW5nIHByb21pc2Ugd2l0aCBnaXZlbiByZWFzb25cbiAqXG4gKiBAbWV0aG9kIFByb21pc2UucmVqZWN0XG4gKiBAcGFyYW0ge0Vycm9yfSByZWFzb24gLSBSZWplY3RpbmcgcmVhc29uXG4gKiBAcmV0dXJucyB7UHJvbWlzZX1cbiAqL1xuXG4vKipcbiAqIFJldHVybnMgYSBwcm9taXNlIHRoYXQgaXMgZnVsZmlsbGVkIHdpdGggYW4gYXJyYXkgY29udGFpbmluZyB0aGUgZnVsZmlsbG1lbnQgdmFsdWUgb2YgZWFjaCBwcm9taXNlLFxuICogb3IgaXMgcmVqZWN0ZWQgd2l0aCB0aGUgc2FtZSByZWplY3Rpb24gcmVhc29uIGFzIHRoZSBmaXJzdCBwcm9taXNlIHRvIGJlIHJlamVjdGVkLlxuICpcbiAqIEBtZXRob2QgUHJvbWlzZS5hbGxcbiAqIEBwYXJhbSB7QXJyYXkuPFByb21pc2UuPCo+fCo+fSBwcm9taXNlc1xuICogQHJldHVybnMge1Byb21pc2UuPEFycmF5LjwqPj59XG4gKi9cblxuLyoqXG4gKiBSZXR1cm5zIGEgZGVmZXJyZWQgb2JqZWN0XG4gKlxuICogQG1ldGhvZCBQcm9taXNlLmRlZmVyXG4gKiBAcmV0dXJucyB7RGVmZXJyZWR9XG4gKi9cblByb21pc2UuZGVmZXIgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBEZWZlcnJlZCgpO1xufTtcblxuLyoqXG4gKiBEZWZlcnJlZCBvYmplY3RcbiAqXG4gKiBAcHJvdGVjdGVkXG4gKiBAY29uc3RydWN0b3JcbiAqL1xudmFyIERlZmVycmVkID0gZnVuY3Rpb24oKSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdGhpcy5wcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgc2VsZi5yZXNvbHZlID0gcmVzb2x2ZTtcbiAgICBzZWxmLnJlamVjdCA9IHJlamVjdDtcbiAgfSk7XG59O1xuXG4vKipcbiAqIFJlc29sdmUgcHJvbWlzZVxuICogQG1ldGhvZCBEZWZlcnJlZCNyZXNvbHZlXG4gKiBAcGFyYW0geyp9IHJlc3VsdCAtIFJlc29sdmluZyByZXN1bHRcbiAqL1xuXG4vKipcbiAqIFJlamVjdCBwcm9taXNlXG4gKiBAbWV0aG9kIERlZmVycmVkI3JlamVjdFxuICogQHBhcmFtIHtFcnJvcn0gZXJyb3IgLSBSZWplY3RpbmcgcmVhc29uXG4gKi9cblxuLyoqXG4gKlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IFByb21pc2U7XG4iLCIvKmdsb2JhbCBwcm9jZXNzKi9cbi8qKlxuICogQGZpbGUgTWFuYWdlcyBxdWVyeSBmb3IgcmVjb3JkcyBpbiBTYWxlc2ZvcmNlXG4gKiBAYXV0aG9yIFNoaW5pY2hpIFRvbWl0YSA8c2hpbmljaGkudG9taXRhQGdtYWlsLmNvbT5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyksXG4gICAgZXZlbnRzID0gcmVxdWlyZSgnZXZlbnRzJyksXG4gICAgc3RyZWFtID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtJyksXG4gICAgXyAgICAgID0gcmVxdWlyZSgnbG9kYXNoL2NvcmUnKSxcbiAgICBQcm9taXNlID0gcmVxdWlyZSgnLi9wcm9taXNlJyksXG4gICAgU2ZEYXRlID0gcmVxdWlyZShcIi4vZGF0ZVwiKSxcbiAgICBTT1FMQnVpbGRlciA9IHJlcXVpcmUoXCIuL3NvcWwtYnVpbGRlclwiKSxcbiAgICBSZWNvcmRTdHJlYW0gPSByZXF1aXJlKFwiLi9yZWNvcmQtc3RyZWFtXCIpO1xuXG4vKipcbiAqIFF1ZXJ5XG4gKlxuICogQHByb3RlY3RlZFxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyB7c3RyZWFtLlJlYWRhYmxlfVxuICogQGltcGxlbWVudHMgUHJvbWlzZS48VD5cbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge0Nvbm5lY3Rpb259IGNvbm4gLSBDb25uZWN0aW9uIG9iamVjdFxuICogQHBhcmFtIHtPYmplY3R8U3RyaW5nfSBjb25maWcgLSBRdWVyeSBjb25maWcgb2JqZWN0IG9yIFNPUUwgc3RyaW5nXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gRGVmYXVsdCBxdWVyeSBvcHRpb25zXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLmF1dG9GZXRjaF0gLSBVc2luZyBhdXRvIGZldGNoIG1vZGUgb3Igbm90XG4gKiBAcGFyYW0ge051bWJlcn0gW29wdGlvbnMubWF4RmV0Y2hdIC0gTWF4IGZldGNoaW5nIHJlY29yZHMgaW4gYXV0byBmZXRjaCBtb2RlXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLnNjYW5BbGxdIC0gSW5jbHVkaW5nIGRlbGV0ZWQgcmVjb3JkcyBmb3IgcXVlcnkgdGFyZ2V0IG9yIG5vdFxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zLmhlYWRlcnNdIC0gQWRkaXRpb25hbCBIVFRQIHJlcXVlc3QgaGVhZGVycyBzZW50IGluIHF1ZXJ5IHJlcXVlc3RcbiAqL1xudmFyIFF1ZXJ5ID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihjb25uLCBjb25maWcsIG9wdGlvbnMpIHtcbiAgUXVlcnkuc3VwZXJfLmNhbGwodGhpcywgeyBvYmplY3RNb2RlOiB0cnVlIH0pO1xuXG4gIHRoaXMuX2Nvbm4gPSBjb25uO1xuICBpZiAoXy5pc1N0cmluZyhjb25maWcpKSB7IC8vIGlmIHF1ZXJ5IGNvbmZpZyBpcyBzdHJpbmcsIGl0IGlzIGdpdmVuIGluIFNPUUwuXG4gICAgdGhpcy5fc29xbCA9IGNvbmZpZztcbiAgfSBlbHNlIGlmIChjb25maWcubG9jYXRvciAmJiBjb25maWcubG9jYXRvci5pbmRleE9mKFwiL1wiKSA+PSAwKSB7IC8vIGlmIGxvY2F0b3IgZ2l2ZW4gaW4gdXJsIGZvciBuZXh0IHJlY29yZHNcbiAgICB0aGlzLl9sb2NhdG9yID0gY29uZmlnLmxvY2F0b3Iuc3BsaXQoXCIvXCIpLnBvcCgpO1xuICB9IGVsc2Uge1xuICAgIHRoaXMuX2NvbmZpZyA9IGNvbmZpZztcbiAgICB0aGlzLnNlbGVjdChjb25maWcuZmllbGRzKTtcbiAgICBpZiAoY29uZmlnLmluY2x1ZGVzKSB7XG4gICAgICB0aGlzLmluY2x1ZGUoY29uZmlnLmluY2x1ZGVzKTtcbiAgICB9XG4gICAgaWYgKGNvbmZpZy5zb3J0KSB7XG4gICAgICB0aGlzLnNvcnQoY29uZmlnLnNvcnQpO1xuICAgIH1cbiAgfVxuICB0aGlzLl9vcHRpb25zID0gXy5kZWZhdWx0cyhvcHRpb25zIHx8IHt9LCB7XG4gICAgbWF4RmV0Y2g6IDEwMDAwLFxuICAgIGF1dG9GZXRjaDogZmFsc2UsXG4gICAgc2NhbkFsbDogZmFsc2UsXG4gICAgcmVzcG9uc2VUYXJnZXQ6IFJlc3BvbnNlVGFyZ2V0cy5RdWVyeVJlc3VsdFxuICB9KTtcbiAgdGhpcy5fZXhlY3V0ZWQgPSBmYWxzZTtcbiAgdGhpcy5fZmluaXNoZWQgPSBmYWxzZTtcbiAgdGhpcy5fY2hhaW5pbmcgPSBmYWxzZTtcblxuICB0aGlzLl9kZWZlcnJlZCA9IFByb21pc2UuZGVmZXIoKTtcblxuICB2YXIgc2VsZiA9IHRoaXM7XG59O1xuXG5pbmhlcml0cyhRdWVyeSwgc3RyZWFtLlJlYWRhYmxlKTtcblxuLyoqXG4gKiBTZWxlY3QgZmllbGRzIHRvIGluY2x1ZGUgaW4gdGhlIHJldHVybmluZyByZXN1bHRcbiAqXG4gKiBAcGFyYW0ge09iamVjdHxBcnJheS48U3RyaW5nPnxTdHJpbmd9IGZpZWxkcyAtIEZpZWxkcyB0byBmZXRjaC4gRm9ybWF0IGNhbiBiZSBpbiBKU09OIG9iamVjdCAoTW9uZ29EQi1saWtlKSwgYXJyYXkgb2YgZmllbGQgbmFtZXMsIG9yIGNvbW1hLXNlcGFyYXRlZCBmaWVsZCBuYW1lcy5cbiAqIEByZXR1cm5zIHtRdWVyeS48VD59XG4gKi9cblF1ZXJ5LnByb3RvdHlwZS5zZWxlY3QgPSBmdW5jdGlvbihmaWVsZHMpIHtcbiAgaWYgKHRoaXMuX3NvcWwpIHtcbiAgICB0aHJvdyBFcnJvcihcIkNhbm5vdCBzZXQgc2VsZWN0IGZpZWxkcyBmb3IgdGhlIHF1ZXJ5IHdoaWNoIGhhcyBhbHJlYWR5IGJ1aWx0IFNPUUwuXCIpO1xuICB9XG4gIGZpZWxkcyA9IGZpZWxkcyB8fCAnKic7XG4gIGlmIChfLmlzU3RyaW5nKGZpZWxkcykpIHtcbiAgICBmaWVsZHMgPSBmaWVsZHMuc3BsaXQoL1xccyosXFxzKi8pO1xuICB9IGVsc2UgaWYgKF8uaXNPYmplY3QoZmllbGRzKSAmJiAhXy5pc0FycmF5KGZpZWxkcykpIHtcbiAgICB2YXIgX2ZpZWxkcyA9ICBbXTtcbiAgICBmb3IgKHZhciBrIGluIGZpZWxkcykge1xuICAgICAgaWYgKGZpZWxkc1trXSkgeyBfZmllbGRzLnB1c2goayk7IH1cbiAgICB9XG4gICAgZmllbGRzID0gX2ZpZWxkcztcbiAgfVxuICB0aGlzLl9jb25maWcuZmllbGRzID0gZmllbGRzO1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogU2V0IHF1ZXJ5IGNvbmRpdGlvbnMgdG8gZmlsdGVyIHRoZSByZXN1bHQgcmVjb3Jkc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fFN0cmluZ30gY29uZGl0aW9ucyAtIENvbmRpdGlvbnMgaW4gSlNPTiBvYmplY3QgKE1vbmdvREItbGlrZSksIG9yIHJhdyBTT1FMIFdIRVJFIGNsYXVzZSBzdHJpbmcuXG4gKiBAcmV0dXJucyB7UXVlcnkuPFQ+fVxuICovXG5RdWVyeS5wcm90b3R5cGUud2hlcmUgPSBmdW5jdGlvbihjb25kaXRpb25zKSB7XG4gIGlmICh0aGlzLl9zb3FsKSB7XG4gICAgdGhyb3cgRXJyb3IoXCJDYW5ub3Qgc2V0IHdoZXJlIGNvbmRpdGlvbnMgZm9yIHRoZSBxdWVyeSB3aGljaCBoYXMgYWxyZWFkeSBidWlsdCBTT1FMLlwiKTtcbiAgfVxuICB0aGlzLl9jb25maWcuY29uZGl0aW9ucyA9IGNvbmRpdGlvbnM7XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBMaW1pdCB0aGUgcmV0dXJuaW5nIHJlc3VsdFxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBsaW1pdCAtIE1heGltdW0gbnVtYmVyIG9mIHJlY29yZHMgdGhlIHF1ZXJ5IHdpbGwgcmV0dXJuLlxuICogQHJldHVybnMge1F1ZXJ5LjxUPn1cbiAqL1xuUXVlcnkucHJvdG90eXBlLmxpbWl0ID0gZnVuY3Rpb24obGltaXQpIHtcbiAgaWYgKHRoaXMuX3NvcWwpIHtcbiAgICB0aHJvdyBFcnJvcihcIkNhbm5vdCBzZXQgbGltaXQgZm9yIHRoZSBxdWVyeSB3aGljaCBoYXMgYWxyZWFkeSBidWlsdCBTT1FMLlwiKTtcbiAgfVxuICB0aGlzLl9jb25maWcubGltaXQgPSBsaW1pdDtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIFN5bm9ueW0gb2YgUXVlcnkjb2Zmc2V0KClcbiAqXG4gKiBAbWV0aG9kIFF1ZXJ5I3NraXBcbiAqIEBwYXJhbSB7TnVtYmVyfSBvZmZzZXQgLSBPZmZzZXQgbnVtYmVyIHdoZXJlIGJlZ2lucyByZXR1cm5pbmcgcmVzdWx0cy5cbiAqIEByZXR1cm5zIHtRdWVyeS48VD59XG4gKi9cbi8qKlxuICogU2tpcCByZWNvcmRzXG4gKlxuICogQG1ldGhvZCBRdWVyeSNvZmZzZXRcbiAqIEBwYXJhbSB7TnVtYmVyfSBvZmZzZXQgLSBPZmZzZXQgbnVtYmVyIHdoZXJlIGJlZ2lucyByZXR1cm5pbmcgcmVzdWx0cy5cbiAqIEByZXR1cm5zIHtRdWVyeS48VD59XG4gKi9cblF1ZXJ5LnByb3RvdHlwZS5za2lwID1cblF1ZXJ5LnByb3RvdHlwZS5vZmZzZXQgPSBmdW5jdGlvbihvZmZzZXQpIHtcbiAgaWYgKHRoaXMuX3NvcWwpIHtcbiAgICB0aHJvdyBFcnJvcihcIkNhbm5vdCBzZXQgc2tpcC9vZmZzZXQgZm9yIHRoZSBxdWVyeSB3aGljaCBoYXMgYWxyZWFkeSBidWlsdCBTT1FMLlwiKTtcbiAgfVxuICB0aGlzLl9jb25maWcub2Zmc2V0ID0gb2Zmc2V0O1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogU3lub255bSBvZiBRdWVyeSNzb3J0KClcbiAqXG4gKiBAbWVtdGhvZCBRdWVyeSNvcmRlcmJ5XG4gKiBAcGFyYW0ge1N0cmluZ3xPYmplY3R9IHNvcnQgLSBTb3J0aW5nIGZpZWxkIG9yIGhhc2ggb2JqZWN0IHdpdGggZmllbGQgbmFtZSBhbmQgc29yZCBkaXJlY3Rpb25cbiAqIEBwYXJhbSB7U3RyaW5nfE51bWJlcn0gW2Rpcl0gLSBTb3J0aW5nIGRpcmVjdGlvbiAoQVNDfERFU0N8MXwtMSlcbiAqIEByZXR1cm5zIHtRdWVyeS48VD59XG4gKi9cbi8qKlxuICogU2V0IHF1ZXJ5IHNvcnQgd2l0aCBkaXJlY3Rpb25cbiAqXG4gKiBAbWV0aG9kIFF1ZXJ5I3NvcnRcbiAqIEBwYXJhbSB7U3RyaW5nfE9iamVjdH0gc29ydCAtIFNvcnRpbmcgZmllbGQgb3IgaGFzaCBvYmplY3Qgd2l0aCBmaWVsZCBuYW1lIGFuZCBzb3JkIGRpcmVjdGlvblxuICogQHBhcmFtIHtTdHJpbmd8TnVtYmVyfSBbZGlyXSAtIFNvcnRpbmcgZGlyZWN0aW9uIChBU0N8REVTQ3wxfC0xKVxuICogQHJldHVybnMge1F1ZXJ5LjxUPn1cbiAqL1xuUXVlcnkucHJvdG90eXBlLnNvcnQgPVxuUXVlcnkucHJvdG90eXBlLm9yZGVyYnkgPSBmdW5jdGlvbihzb3J0LCBkaXIpIHtcbiAgaWYgKHRoaXMuX3NvcWwpIHtcbiAgICB0aHJvdyBFcnJvcihcIkNhbm5vdCBzZXQgc29ydCBmb3IgdGhlIHF1ZXJ5IHdoaWNoIGhhcyBhbHJlYWR5IGJ1aWx0IFNPUUwuXCIpO1xuICB9XG4gIGlmIChfLmlzU3RyaW5nKHNvcnQpICYmIF8uaXNTdHJpbmcoZGlyKSkge1xuICAgIHNvcnQgPSBbIFsgc29ydCwgZGlyIF0gXTtcbiAgfVxuICB0aGlzLl9jb25maWcuc29ydCA9IHNvcnQ7XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBJbmNsdWRlIGNoaWxkIHJlbGF0aW9uc2hpcCBxdWVyeVxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBjaGlsZFJlbE5hbWUgLSBDaGlsZCByZWxhdGlvbnNoaXAgbmFtZSB0byBpbmNsdWRlIGluIHF1ZXJ5IHJlc3VsdFxuICogQHBhcmFtIHtPYmplY3R8U3RyaW5nfSBbY29uZGl0aW9uc10gLSBDb25kaXRpb25zIGluIEpTT04gb2JqZWN0IChNb25nb0RCLWxpa2UpLCBvciByYXcgU09RTCBXSEVSRSBjbGF1c2Ugc3RyaW5nLlxuICogQHBhcmFtIHtPYmplY3R8QXJyYXkuPFN0cmluZz58U3RyaW5nfSBbZmllbGRzXSAtIEZpZWxkcyB0byBmZXRjaC4gRm9ybWF0IGNhbiBiZSBpbiBKU09OIG9iamVjdCAoTW9uZ29EQi1saWtlKSwgYXJyYXkgb2YgZmllbGQgbmFtZXMsIG9yIGNvbW1hLXNlcGFyYXRlZCBmaWVsZCBuYW1lcy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSBPcHRpb25hbCBxdWVyeSBjb25maWd1bGF0aW9ucy5cbiAqIEBwYXJhbSB7TnVtYmVyfSBbb3B0aW9ucy5saW1pdF0gLSBNYXhpbXVtIG51bWJlciBvZiByZWNvcmRzIHRoZSBxdWVyeSB3aWxsIHJldHVybi5cbiAqIEBwYXJhbSB7TnVtYmVyfSBbb3B0aW9ucy5vZmZzZXRdIC0gT2Zmc2V0IG51bWJlciB3aGVyZSBiZWdpbnMgcmV0dXJuaW5nIHJlc3VsdHMuXG4gKiBAcGFyYW0ge051bWJlcn0gW29wdGlvbnMuc2tpcF0gLSBTeW5vbnltIG9mIG9wdGlvbnMub2Zmc2V0LlxuICogQHJldHVybnMge1F1ZXJ5flN1YlF1ZXJ5fVxuICovXG5RdWVyeS5wcm90b3R5cGUuaW5jbHVkZSA9IGZ1bmN0aW9uKGNoaWxkUmVsTmFtZSwgY29uZGl0aW9ucywgZmllbGRzLCBvcHRpb25zKSB7XG4gIGlmICh0aGlzLl9zb3FsKSB7XG4gICAgdGhyb3cgRXJyb3IoXCJDYW5ub3QgaW5jbHVkZSBjaGlsZCByZWxhdGlvbnNoaXAgaW50byB0aGUgcXVlcnkgd2hpY2ggaGFzIGFscmVhZHkgYnVpbHQgU09RTC5cIik7XG4gIH1cbiAgaWYgKF8uaXNPYmplY3QoY2hpbGRSZWxOYW1lKSkge1xuICAgIHZhciBpbmNsdWRlcyA9IGNoaWxkUmVsTmFtZTtcbiAgICBmb3IgKHZhciBjcm5hbWUgaW4gaW5jbHVkZXMpIHtcbiAgICAgIHZhciBjb25maWcgPSBpbmNsdWRlc1tjcm5hbWVdO1xuICAgICAgdGhpcy5pbmNsdWRlKGNybmFtZSwgY29uZmlnLmNvbmRpdGlvbnMsIGNvbmZpZy5maWVsZHMsIGNvbmZpZyk7XG4gICAgfVxuICAgIHJldHVybjtcbiAgfVxuICB2YXIgY2hpbGRDb25maWcgPSB7XG4gICAgdGFibGU6IGNoaWxkUmVsTmFtZSxcbiAgICBjb25kaXRpb25zOiBjb25kaXRpb25zLFxuICAgIGZpZWxkczogZmllbGRzLFxuICAgIGxpbWl0OiBvcHRpb25zICYmIG9wdGlvbnMubGltaXQsXG4gICAgb2Zmc2V0OiBvcHRpb25zICYmIChvcHRpb25zLm9mZnNldCB8fCBvcHRpb25zLnNraXApLFxuICAgIHNvcnQ6IG9wdGlvbnMgJiYgb3B0aW9ucy5zb3J0XG4gIH07XG4gIGlmICghXy5pc0FycmF5KHRoaXMuX2NvbmZpZy5pbmNsdWRlcykpIHRoaXMuX2NvbmZpZy5pbmNsdWRlcyA9IFtdO1xuICB0aGlzLl9jb25maWcuaW5jbHVkZXMucHVzaChjaGlsZENvbmZpZyk7XG4gIHZhciBjaGlsZFF1ZXJ5ID0gbmV3IFN1YlF1ZXJ5KHRoaXMuX2Nvbm4sIHRoaXMsIGNoaWxkQ29uZmlnKTtcbiAgdGhpcy5fY2hpbGRyZW4gPSB0aGlzLl9jaGlsZHJlbiB8fCBbXTtcbiAgdGhpcy5fY2hpbGRyZW4ucHVzaChjaGlsZFF1ZXJ5KTtcbiAgcmV0dXJuIGNoaWxkUXVlcnk7XG59O1xuXG5cbi8qKlxuICogU2V0dGluZyBtYXhGZXRjaCBxdWVyeSBvcHRpb25cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gbWF4RmV0Y2ggLSBNYXggZmV0Y2hpbmcgcmVjb3JkcyBpbiBhdXRvIGZldGNoIG1vZGVcbiAqIEByZXR1cm5zIHtRdWVyeS48VD59XG4gKi9cblF1ZXJ5LnByb3RvdHlwZS5tYXhGZXRjaCA9IGZ1bmN0aW9uKG1heEZldGNoKSB7XG4gIHRoaXMuX29wdGlvbnMubWF4RmV0Y2ggPSBtYXhGZXRjaDtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIFN3aXRjaGluZyBhdXRvIGZldGNoIG1vZGVcbiAqXG4gKiBAcGFyYW0ge0Jvb2xlYW59IGF1dG9GZXRjaCAtIFVzaW5nIGF1dG8gZmV0Y2ggbW9kZSBvciBub3RcbiAqIEByZXR1cm5zIHtRdWVyeS48VD59XG4gKi9cblF1ZXJ5LnByb3RvdHlwZS5hdXRvRmV0Y2ggPSBmdW5jdGlvbihhdXRvRmV0Y2gpIHtcbiAgdGhpcy5fb3B0aW9ucy5hdXRvRmV0Y2ggPSBhdXRvRmV0Y2g7XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBTZXQgZmxhZyB0byBzY2FuIGFsbCByZWNvcmRzIGluY2x1ZGluZyBkZWxldGVkIGFuZCBhcmNoaXZlZC5cbiAqXG4gKiBAcGFyYW0ge0Jvb2xlYW59IHNjYW5BbGwgLSBGbGFnIHdoZXRoZXIgaW5jbHVkZSBkZWxldGVkL2FyY2hpdmVkIHJlY29yZCBvciBub3QuIERlZmF1bHQgaXMgZmFsc2UuXG4gKiBAcmV0dXJucyB7UXVlcnkuPFQ+fVxuICovXG5RdWVyeS5wcm90b3R5cGUuc2NhbkFsbCA9IGZ1bmN0aW9uKHNjYW5BbGwpIHtcbiAgdGhpcy5fb3B0aW9ucy5zY2FuQWxsID0gc2NhbkFsbDtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbnZhciBSZXNwb25zZVRhcmdldHMgPSBRdWVyeS5SZXNwb25zZVRhcmdldHMgPSB7fTtcblsgXCJRdWVyeVJlc3VsdFwiLCBcIlJlY29yZHNcIiwgXCJTaW5nbGVSZWNvcmRcIiwgXCJDb3VudFwiIF0uZm9yRWFjaChmdW5jdGlvbihmKSB7XG4gIFJlc3BvbnNlVGFyZ2V0c1tmXSA9IGY7XG59KTtcblxuLyoqXG4gKiBAcHJvdGVjdGVkXG4gKiBAcGFyYW0ge1N0cmluZ30gcmVzcG9uc2VUYXJnZXQgLSBRdWVyeSByZXNwb25zZSB0YXJnZXRcbiAqIEByZXR1cm5zIHtRdWVyeS48Uz59XG4gKi9cblF1ZXJ5LnByb3RvdHlwZS5zZXRSZXNwb25zZVRhcmdldCA9IGZ1bmN0aW9uKHJlc3BvbnNlVGFyZ2V0KSB7XG4gIGlmIChyZXNwb25zZVRhcmdldCBpbiBSZXNwb25zZVRhcmdldHMpIHtcbiAgICB0aGlzLl9vcHRpb25zLnJlc3BvbnNlVGFyZ2V0ID0gcmVzcG9uc2VUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5cbi8qKlxuICogU3lub255bSBvZiBRdWVyeSNleGVjdXRlKClcbiAqXG4gKiBAbWV0aG9kIFF1ZXJ5I3J1blxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIFF1ZXJ5IG9wdGlvbnNcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuYXV0b0ZldGNoXSAtIFVzaW5nIGF1dG8gZmV0Y2ggbW9kZSBvciBub3RcbiAqIEBwYXJhbSB7TnVtYmVyfSBbb3B0aW9ucy5tYXhGZXRjaF0gLSBNYXggZmV0Y2hpbmcgcmVjb3JkcyBpbiBhdXRvIGZldGNoIG1vZGVcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuc2NhbkFsbF0gLSBJbmNsdWRpbmcgZGVsZXRlZCByZWNvcmRzIGZvciBxdWVyeSB0YXJnZXQgb3Igbm90XG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnMuaGVhZGVyc10gLSBBZGRpdGlvbmFsIEhUVFAgcmVxdWVzdCBoZWFkZXJzIHNlbnQgaW4gcXVlcnkgcmVxdWVzdFxuICogQHBhcmFtIHtDYWxsYmFjay48VD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1F1ZXJ5LjxUPn1cbiAqL1xuUXVlcnkucHJvdG90eXBlLnJ1biA9XG4vKipcbiAqIFN5bm9ueW0gb2YgUXVlcnkjZXhlY3V0ZSgpXG4gKlxuICogQG1ldGhvZCBRdWVyeSNleGVjXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gUXVlcnkgb3B0aW9uc1xuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5hdXRvRmV0Y2hdIC0gVXNpbmcgYXV0byBmZXRjaCBtb2RlIG9yIG5vdFxuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLm1heEZldGNoXSAtIE1heCBmZXRjaGluZyByZWNvcmRzIGluIGF1dG8gZmV0Y2ggbW9kZVxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5zY2FuQWxsXSAtIEluY2x1ZGluZyBkZWxldGVkIHJlY29yZHMgZm9yIHF1ZXJ5IHRhcmdldCBvciBub3RcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucy5oZWFkZXJzXSAtIEFkZGl0aW9uYWwgSFRUUCByZXF1ZXN0IGhlYWRlcnMgc2VudCBpbiBxdWVyeSByZXF1ZXN0XG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxUPn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UXVlcnkuPFQ+fVxuICovXG5RdWVyeS5wcm90b3R5cGUuZXhlYyA9XG4vKipcbiAqIEV4ZWN1dGUgcXVlcnkgYW5kIGZldGNoIHJlY29yZHMgZnJvbSBzZXJ2ZXIuXG4gKlxuICogQG1ldGhvZCBRdWVyeSNleGVjdXRlXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gUXVlcnkgb3B0aW9uc1xuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5hdXRvRmV0Y2hdIC0gVXNpbmcgYXV0byBmZXRjaCBtb2RlIG9yIG5vdFxuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLm1heEZldGNoXSAtIE1heCBmZXRjaGluZyByZWNvcmRzIGluIGF1dG8gZmV0Y2ggbW9kZVxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5zY2FuQWxsXSAtIEluY2x1ZGluZyBkZWxldGVkIHJlY29yZHMgZm9yIHF1ZXJ5IHRhcmdldCBvciBub3RcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucy5oZWFkZXJzXSAtIEFkZGl0aW9uYWwgSFRUUCByZXF1ZXN0IGhlYWRlcnMgc2VudCBpbiBxdWVyeSByZXF1ZXN0XG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxUPn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UXVlcnkuPFQ+fVxuICovXG5RdWVyeS5wcm90b3R5cGUuZXhlY3V0ZSA9IGZ1bmN0aW9uKG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIGxvZ2dlciA9IHRoaXMuX2Nvbm4uX2xvZ2dlcjtcbiAgdmFyIGRlZmVycmVkID0gdGhpcy5fZGVmZXJyZWQ7XG5cbiAgaWYgKHRoaXMuX2V4ZWN1dGVkKSB7XG4gICAgZGVmZXJyZWQucmVqZWN0KG5ldyBFcnJvcihcInJlLWV4ZWN1dGluZyBhbHJlYWR5IGV4ZWN1dGVkIHF1ZXJ5XCIpKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGlmICh0aGlzLl9maW5pc2hlZCkge1xuICAgIGRlZmVycmVkLnJlamVjdChuZXcgRXJyb3IoXCJleGVjdXRpbmcgYWxyZWFkeSBjbG9zZWQgcXVlcnlcIikpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBjYWxsYmFjayA9IG9wdGlvbnM7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBvcHRpb25zID0ge1xuICAgIGhlYWRlcnM6IG9wdGlvbnMuaGVhZGVycyB8fCBzZWxmLl9vcHRpb25zLmhlYWRlcnMsXG4gICAgcmVzcG9uc2VUYXJnZXQ6IG9wdGlvbnMucmVzcG9uc2VUYXJnZXQgfHwgc2VsZi5fb3B0aW9ucy5yZXNwb25zZVRhcmdldCxcbiAgICBhdXRvRmV0Y2g6IG9wdGlvbnMuYXV0b0ZldGNoIHx8IHNlbGYuX29wdGlvbnMuYXV0b0ZldGNoLFxuICAgIG1heEZldGNoOiBvcHRpb25zLm1heEZldGNoIHx8IHNlbGYuX29wdGlvbnMubWF4RmV0Y2gsXG4gICAgc2NhbkFsbDogb3B0aW9ucy5zY2FuQWxsIHx8IHNlbGYuX29wdGlvbnMuc2NhbkFsbFxuICB9O1xuXG4gIC8vIGNhbGxiYWNrIGFuZCBwcm9taXNlIHJlc29sdXRpb247XG4gIHZhciBwcm9taXNlQ2FsbGJhY2sgPSBmdW5jdGlvbihlcnIsIHJlcykge1xuICAgIGlmIChfLmlzRnVuY3Rpb24oY2FsbGJhY2spKSB7XG4gICAgICB0cnkge1xuICAgICAgICByZXMgPSBjYWxsYmFjayhlcnIsIHJlcyk7XG4gICAgICAgIGVyciA9IG51bGw7XG4gICAgICB9IGNhdGNoKGUpIHtcbiAgICAgICAgZXJyID0gZTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKGVycikge1xuICAgICAgZGVmZXJyZWQucmVqZWN0KGVycik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzKTtcbiAgICB9XG4gIH07XG4gIHRoaXMub25jZSgncmVzcG9uc2UnLCBmdW5jdGlvbihyZXMpIHtcbiAgICBwcm9taXNlQ2FsbGJhY2sobnVsbCwgcmVzKTtcbiAgfSk7XG4gIHRoaXMub25jZSgnZXJyb3InLCBmdW5jdGlvbihlcnIpIHtcbiAgICBwcm9taXNlQ2FsbGJhY2soZXJyKTtcbiAgfSk7XG5cbiAgLy8gY29sbGVjdCBmZXRjaGVkIHJlY29yZHMgaW4gYXJyYXlcbiAgLy8gb25seSB3aGVuIHJlc3BvbnNlIHRhcmdldCBpcyBSZWNvcmRzIGFuZFxuICAvLyBlaXRoZXIgY2FsbGJhY2sgb3IgY2hhaW5pbmcgcHJvbWlzZXMgYXJlIGF2YWlsYWJsZSB0byB0aGlzIHF1ZXJ5LlxuICB0aGlzLm9uY2UoJ2ZldGNoJywgZnVuY3Rpb24oKSB7XG4gICAgaWYgKG9wdGlvbnMucmVzcG9uc2VUYXJnZXQgPT09IFJlc3BvbnNlVGFyZ2V0cy5SZWNvcmRzICYmIChzZWxmLl9jaGFpbmluZyB8fCBjYWxsYmFjaykpIHtcbiAgICAgIGxvZ2dlci5kZWJ1ZygnLS0tIGNvbGxlY3RpbmcgYWxsIGZldGNoZWQgcmVjb3JkcyAtLS0nKTtcbiAgICAgIHZhciByZWNvcmRzID0gW107XG4gICAgICB2YXIgb25SZWNvcmQgPSBmdW5jdGlvbihyZWNvcmQpIHtcbiAgICAgICAgcmVjb3Jkcy5wdXNoKHJlY29yZCk7XG4gICAgICB9O1xuICAgICAgc2VsZi5vbigncmVjb3JkJywgb25SZWNvcmQpO1xuICAgICAgc2VsZi5vbmNlKCdlbmQnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgc2VsZi5yZW1vdmVMaXN0ZW5lcigncmVjb3JkJywgb25SZWNvcmQpO1xuICAgICAgICBzZWxmLmVtaXQoJ3Jlc3BvbnNlJywgcmVjb3Jkcywgc2VsZik7XG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xuXG4gIC8vIGZsYWcgdG8gcHJldmVudCByZS1leGVjdXRpb25cbiAgdGhpcy5fZXhlY3V0ZWQgPSB0cnVlO1xuXG4gIC8vIHN0YXJ0IGFjdHVhbCBxdWVyeVxuICBsb2dnZXIuZGVidWcoJz4+PiBRdWVyeSBzdGFydCA+Pj4nKTtcbiAgdGhpcy5fZXhlY3V0ZShvcHRpb25zKS50aGVuKGZ1bmN0aW9uKCkge1xuICAgIGxvZ2dlci5kZWJ1ZygnKioqIFF1ZXJ5IGZpbmlzaGVkICoqKicpO1xuICB9KS5mYWlsKGZ1bmN0aW9uKGVycikge1xuICAgIGxvZ2dlci5kZWJ1ZygnLS0tIFF1ZXJ5IGVycm9yIC0tLScpO1xuICAgIHNlbGYuZW1pdCgnZXJyb3InLCBlcnIpO1xuICB9KTtcblxuICAvLyByZXR1cm4gUXVlcnkgaW5zdGFuY2UgZm9yIGNoYWluaW5nXG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5RdWVyeS5wcm90b3R5cGUuX2V4ZWN1dGUgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIGxvZ2dlciA9IHRoaXMuX2Nvbm4uX2xvZ2dlcjtcbiAgdmFyIHJlc3BvbnNlVGFyZ2V0ID0gb3B0aW9ucy5yZXNwb25zZVRhcmdldDtcbiAgdmFyIGF1dG9GZXRjaCA9IG9wdGlvbnMuYXV0b0ZldGNoO1xuICB2YXIgbWF4RmV0Y2ggPSBvcHRpb25zLm1heEZldGNoO1xuICB2YXIgc2NhbkFsbCA9IG9wdGlvbnMuc2NhbkFsbDtcblxuICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKFxuICAgIHNlbGYuX2xvY2F0b3IgP1xuICAgIHNlbGYuX2Nvbm4uX2Jhc2VVcmwoKSArIFwiL3F1ZXJ5L1wiICsgc2VsZi5fbG9jYXRvciA6XG4gICAgc2VsZi50b1NPUUwoKS50aGVuKGZ1bmN0aW9uKHNvcWwpIHtcbiAgICAgIHNlbGYudG90YWxGZXRjaGVkID0gMDtcbiAgICAgIGxvZ2dlci5kZWJ1ZyhcIlNPUUwgPSBcIiArIHNvcWwpO1xuICAgICAgcmV0dXJuIHNlbGYuX2Nvbm4uX2Jhc2VVcmwoKSArIFwiL1wiICsgKHNjYW5BbGwgPyBcInF1ZXJ5QWxsXCIgOiBcInF1ZXJ5XCIpICsgXCI/cT1cIiArIGVuY29kZVVSSUNvbXBvbmVudChzb3FsKTtcbiAgICB9KVxuICApLnRoZW4oZnVuY3Rpb24odXJsKSB7XG4gICAgcmV0dXJuIHNlbGYuX2Nvbm4ucmVxdWVzdCh7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgdXJsOiB1cmwsXG4gICAgICBoZWFkZXJzOiBvcHRpb25zLmhlYWRlcnNcbiAgICB9KTtcbiAgfSkudGhlbihmdW5jdGlvbihkYXRhKSB7XG4gICAgc2VsZi5lbWl0KFwiZmV0Y2hcIik7XG4gICAgc2VsZi50b3RhbFNpemUgPSBkYXRhLnRvdGFsU2l6ZTtcbiAgICB2YXIgcmVzO1xuICAgIHN3aXRjaChyZXNwb25zZVRhcmdldCkge1xuICAgICAgY2FzZSBSZXNwb25zZVRhcmdldHMuU2luZ2xlUmVjb3JkOlxuICAgICAgICByZXMgPSBkYXRhLnJlY29yZHMgJiYgZGF0YS5yZWNvcmRzLmxlbmd0aCA+IDAgPyBkYXRhLnJlY29yZHNbMF0gOiBudWxsO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgUmVzcG9uc2VUYXJnZXRzLlJlY29yZHM6XG4gICAgICAgIHJlcyA9IGRhdGEucmVjb3JkcztcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFJlc3BvbnNlVGFyZ2V0cy5Db3VudDpcbiAgICAgICAgcmVzID0gZGF0YS50b3RhbFNpemU7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmVzID0gZGF0YTtcbiAgICB9XG4gICAgLy8gb25seSBmaXJlIHJlc3BvbnNlIGV2ZW50IHdoZW4gaXQgc2hvdWxkIGJlIG5vdGlmaWVkIHBlciBmZXRjaFxuICAgIGlmIChyZXNwb25zZVRhcmdldCAhPT0gUmVzcG9uc2VUYXJnZXRzLlJlY29yZHMpIHtcbiAgICAgIHNlbGYuZW1pdChcInJlc3BvbnNlXCIsIHJlcywgc2VsZik7XG4gICAgfVxuXG4gICAgLy8gc3RyZWFtaW5nIHJlY29yZCBpbnN0YW5jZXNcbiAgICB2YXIgbnVtUmVjb3JkcyA9IChkYXRhLnJlY29yZHMgJiYgZGF0YS5yZWNvcmRzLmxlbmd0aCkgfHwgMDtcbiAgICBmb3IgKHZhciBpPTA7IGk8bnVtUmVjb3JkczsgaSsrKSB7XG4gICAgICBpZiAoc2VsZi50b3RhbEZldGNoZWQgPj0gbWF4RmV0Y2gpIHtcbiAgICAgICAgc2VsZi5fZmluaXNoZWQgPSB0cnVlO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIHZhciByZWNvcmQgPSBkYXRhLnJlY29yZHNbaV07XG4gICAgICBzZWxmLnB1c2gocmVjb3JkKTtcbiAgICAgIHNlbGYuZW1pdCgncmVjb3JkJywgcmVjb3JkLCBzZWxmLnRvdGFsRmV0Y2hlZCsrLCBzZWxmKTtcbiAgICB9XG4gICAgaWYgKGRhdGEubmV4dFJlY29yZHNVcmwpIHtcbiAgICAgIHNlbGYuX2xvY2F0b3IgPSBkYXRhLm5leHRSZWNvcmRzVXJsLnNwbGl0KCcvJykucG9wKCk7XG4gICAgfVxuICAgIHNlbGYuX2ZpbmlzaGVkID0gc2VsZi5fZmluaXNoZWQgfHwgZGF0YS5kb25lIHx8ICFhdXRvRmV0Y2g7XG4gICAgaWYgKHNlbGYuX2ZpbmlzaGVkKSB7XG4gICAgICBzZWxmLnB1c2gobnVsbCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNlbGYuX2V4ZWN1dGUob3B0aW9ucyk7XG4gICAgfVxuICAgIHJldHVybiByZXM7XG4gIH0pO1xufTtcblxuLyoqXG4gKiBSZWFkYWJsZSBzdHJlYW0gaW1wbGVtZW50YXRpb25cbiAqXG4gKiBAb3ZlcnJpZGVcbiAqIEBwcml2YXRlXG4gKi9cblF1ZXJ5LnByb3RvdHlwZS5fcmVhZCA9IGZ1bmN0aW9uKHNpemUpIHtcbiAgaWYgKCF0aGlzLl9maW5pc2hlZCAmJiAhdGhpcy5fZXhlY3V0ZWQpIHtcbiAgICB0aGlzLmV4ZWN1dGUoeyBhdXRvRmV0Y2g6IHRydWUgfSk7XG4gIH1cbn07XG5cbi8qKiBAb3ZlcnJpZGUgKiovXG5RdWVyeS5wcm90b3R5cGUub24gPSBmdW5jdGlvbihlLCBmbikge1xuICBpZiAoZSA9PT0gJ3JlY29yZCcpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgdGhpcy5vbigncmVhZGFibGUnLCBmdW5jdGlvbigpIHtcbiAgICAgIHdoaWxlKHNlbGYucmVhZCgpICE9PSBudWxsKSB7fSAvLyBkaXNjYXJkIGJ1ZmZlcmVkIHJlY29yZHNcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gUXVlcnkuc3VwZXJfLnByb3RvdHlwZS5vbi5jYWxsKHRoaXMsIGUsIGZuKTtcbn07XG5cbi8qKiBAb3ZlcnJpZGUgKiovXG5RdWVyeS5wcm90b3R5cGUuYWRkTGlzdGVuZXIgPSBRdWVyeS5wcm90b3R5cGUub247XG5cblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5RdWVyeS5wcm90b3R5cGUuX2V4cGFuZEZpZWxkcyA9IGZ1bmN0aW9uKCkge1xuICBpZiAodGhpcy5fc29xbCkge1xuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoXCJDYW5ub3QgZXhwYW5kIGZpZWxkcyBmb3IgdGhlIHF1ZXJ5IHdoaWNoIGhhcyBhbHJlYWR5IGJ1aWx0IFNPUUwuXCIpKTtcbiAgfVxuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciBsb2dnZXIgPSBzZWxmLl9jb25uLl9sb2dnZXI7XG4gIHZhciBjb25uID0gdGhpcy5fY29ubjtcbiAgdmFyIHRhYmxlID0gdGhpcy5fY29uZmlnLnRhYmxlO1xuICB2YXIgZmllbGRzID0gdGhpcy5fY29uZmlnLmZpZWxkcyB8fCBbXTtcblxuICBsb2dnZXIuZGVidWcoJ19leHBhbmRGaWVsZHM6IHRhYmxlID0gJyArIHRhYmxlICsgJywgZmllbGRzID0gJyArIGZpZWxkcy5qb2luKCcsICcpKTtcblxuICByZXR1cm4gUHJvbWlzZS5hbGwoW1xuICAgIFByb21pc2UucmVzb2x2ZShzZWxmLl9wYXJlbnQgPyBmaW5kUmVsYXRpb25UYWJsZSh0YWJsZSkgOiB0YWJsZSlcbiAgICAgIC50aGVuKGZ1bmN0aW9uKHRhYmxlKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLmFsbChcbiAgICAgICAgICBfLm1hcChmaWVsZHMsIGZ1bmN0aW9uKGZpZWxkKSB7IHJldHVybiBleHBhbmRBc3Rlcmlza0ZpZWxkKHRhYmxlLCBmaWVsZCk7IH0pXG4gICAgICAgICkudGhlbihmdW5jdGlvbihleHBhbmRlZEZpZWxkcykge1xuICAgICAgICAgIHNlbGYuX2NvbmZpZy5maWVsZHMgPSBfLmZsYXR0ZW4oZXhwYW5kZWRGaWVsZHMpO1xuICAgICAgICB9KTtcbiAgICAgIH0pLFxuICAgIFByb21pc2UuYWxsKFxuICAgICAgXy5tYXAoc2VsZi5fY2hpbGRyZW4gfHwgW10sIGZ1bmN0aW9uKGNoaWxkUXVlcnkpIHtcbiAgICAgICAgcmV0dXJuIGNoaWxkUXVlcnkuX2V4cGFuZEZpZWxkcygpO1xuICAgICAgfSlcbiAgICApXG4gIF0pO1xuXG4gIGZ1bmN0aW9uIGZpbmRSZWxhdGlvblRhYmxlKHJuYW1lKSB7XG4gICAgdmFyIHB0YWJsZSA9IHNlbGYuX3BhcmVudC5fY29uZmlnLnRhYmxlO1xuICAgIGxvZ2dlci5kZWJ1ZygnZmluZGluZyB0YWJsZSBmb3IgcmVsYXRpb24gXCInICsgcm5hbWUgKyAnXCIgaW4gXCInICsgcHRhYmxlICsgJ1wiLi4uJyk7XG4gICAgcmV0dXJuIGRlc2NyaWJlQ2FjaGUocHRhYmxlKS50aGVuKGZ1bmN0aW9uKHNvYmplY3QpIHtcbiAgICAgIHZhciB1cHBlclJuYW1lID0gcm5hbWUudG9VcHBlckNhc2UoKTtcbiAgICAgIHZhciBjaGlsZFJlbGF0aW9uID0gXy5maW5kKHNvYmplY3QuY2hpbGRSZWxhdGlvbnNoaXBzLCBmdW5jdGlvbihjcikge1xuICAgICAgICByZXR1cm4gKGNyLnJlbGF0aW9uc2hpcE5hbWUgfHwgJycpLnRvVXBwZXJDYXNlKCkgPT09IHVwcGVyUm5hbWU7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBjaGlsZFJlbGF0aW9uID8gY2hpbGRSZWxhdGlvbi5jaGlsZFNPYmplY3QgOlxuICAgICAgICBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoXCJObyBjaGlsZCByZWxhdGlvbnNoaXAgZm91bmQ6IFwiICsgcm5hbWUgKSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBkZXNjcmliZUNhY2hlKHRhYmxlKSB7XG4gICAgbG9nZ2VyLmRlYnVnKCdkZXNjcmliZSBjYWNoZTogJyt0YWJsZSk7XG4gICAgdmFyIGRlZmVycmVkID0gUHJvbWlzZS5kZWZlcigpO1xuICAgIGNvbm4uZGVzY3JpYmUkKHRhYmxlLCBmdW5jdGlvbihlcnIsIHNvYmplY3QpIHtcbiAgICAgIGxvZ2dlci5kZWJ1ZygnLi4uIGRvbmUuJyk7XG4gICAgICBpZiAoZXJyKSB7IGRlZmVycmVkLnJlamVjdChlcnIpOyB9XG4gICAgICBlbHNlIHsgZGVmZXJyZWQucmVzb2x2ZShzb2JqZWN0KTsgfVxuICAgIH0pO1xuICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICB9XG5cbiAgZnVuY3Rpb24gZXhwYW5kQXN0ZXJpc2tGaWVsZCh0YWJsZSwgZmllbGQpIHtcbiAgICBsb2dnZXIuZGVidWcoJ2V4cGFuZGluZyBmaWVsZCBcIicrIGZpZWxkICsgJ1wiIGluIFwiJyArIHRhYmxlICsgJ1wiLi4uJyk7XG4gICAgdmFyIGZwYXRoID0gZmllbGQuc3BsaXQoJy4nKTtcbiAgICByZXR1cm4gZnBhdGhbZnBhdGgubGVuZ3RoIC0gMV0gPT09ICcqJyA/XG4gICAgICBkZXNjcmliZUNhY2hlKHRhYmxlKS50aGVuKGZ1bmN0aW9uKHNvYmplY3QpIHtcbiAgICAgICAgbG9nZ2VyLmRlYnVnKCd0YWJsZSAnK3RhYmxlKydoYXMgYmVlbiBkZXNjcmliZWQnKTtcbiAgICAgICAgaWYgKGZwYXRoLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICB2YXIgcm5hbWUgPSBmcGF0aC5zaGlmdCgpO1xuICAgICAgICAgIHZhciByZmllbGQgPSBfLmZpbmQoc29iamVjdC5maWVsZHMsIGZ1bmN0aW9uKGYpIHtcbiAgICAgICAgICAgIHJldHVybiBmLnJlbGF0aW9uc2hpcE5hbWUgJiZcbiAgICAgICAgICAgICAgICAgICBmLnJlbGF0aW9uc2hpcE5hbWUudG9VcHBlckNhc2UoKSA9PT0gcm5hbWUudG9VcHBlckNhc2UoKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBpZiAocmZpZWxkKSB7XG4gICAgICAgICAgICB2YXIgcnRhYmxlID0gcmZpZWxkLnJlZmVyZW5jZVRvLmxlbmd0aCA9PT0gMSA/IHJmaWVsZC5yZWZlcmVuY2VUb1swXSA6ICdOYW1lJztcbiAgICAgICAgICAgIHJldHVybiBleHBhbmRBc3Rlcmlza0ZpZWxkKHJ0YWJsZSwgZnBhdGguam9pbignLicpKS50aGVuKGZ1bmN0aW9uKGZwYXRocykge1xuICAgICAgICAgICAgICByZXR1cm4gXy5tYXAoZnBhdGhzLCBmdW5jdGlvbihmcGF0aCkgeyByZXR1cm4gcm5hbWUgKyAnLicgKyBmcGF0aDsgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gXy5tYXAoc29iamVjdC5maWVsZHMsIGZ1bmN0aW9uKGYpIHsgcmV0dXJuIGYubmFtZTsgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pIDpcbiAgICAgIFByb21pc2UucmVzb2x2ZShbIGZpZWxkIF0pO1xuICB9XG59O1xuXG4vKipcbiAqIEV4cGxhaW4gcGxhbiBmb3IgZXhlY3V0aW5nIHF1ZXJ5XG4gKlxuICogQHBhcmFtIHtDYWxsYmFjay48RXhwbGFpbkluZm8+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxFeHBsYWluSW5mbz59XG4gKi9cblF1ZXJ5LnByb3RvdHlwZS5leHBsYWluID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgbG9nZ2VyID0gdGhpcy5fY29ubi5fbG9nZ2VyO1xuICByZXR1cm4gc2VsZi50b1NPUUwoKS50aGVuKGZ1bmN0aW9uKHNvcWwpIHtcbiAgICBsb2dnZXIuZGVidWcoXCJTT1FMID0gXCIgKyBzb3FsKTtcbiAgICB2YXIgdXJsID0gXCIvcXVlcnkvP2V4cGxhaW49XCIgKyBlbmNvZGVVUklDb21wb25lbnQoc29xbCk7XG4gICAgcmV0dXJuIHNlbGYuX2Nvbm4ucmVxdWVzdCh1cmwpO1xuICB9KS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIFJldHVybiBTT1FMIGV4cHJlc3Npb24gZm9yIHRoZSBxdWVyeVxuICpcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFN0cmluZz59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPFN0cmluZz59XG4gKi9cblF1ZXJ5LnByb3RvdHlwZS50b1NPUUwgPSBmdW5jdGlvbihjYWxsYmFjaykge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHJldHVybiBQcm9taXNlLnJlc29sdmUoc2VsZi5fc29xbCB8fFxuICAgIHNlbGYuX2V4cGFuZEZpZWxkcygpLnRoZW4oZnVuY3Rpb24oKSB7IHJldHVybiBTT1FMQnVpbGRlci5jcmVhdGVTT1FMKHNlbGYuX2NvbmZpZyk7IH0pXG4gICkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBDcmVhdGUgZGF0YSBzdHJlYW0gb2YgcXVlcmllZCByZWNvcmRzLlxuICogQXV0b21hdGljYWxseSByZXN1bWUgcXVlcnkgaWYgcGF1c2VkLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBbdHlwZV0gLSBUeXBlIG9mIG91dGdvaW5nIGRhdGEgZm9ybWF0LiBDdXJyZW50bHkgJ2NzdicgaXMgZGVmYXVsdCB2YWx1ZSBhbmQgdGhlIG9ubHkgc3VwcG9ydGVkLlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIE9wdGlvbnMgcGFzc2VkIHRvIGNvbnZlcnRlclxuICogQHJldHVybnMge3N0cmVhbS5SZWFkYWJsZX1cbiAqL1xuUXVlcnkucHJvdG90eXBlLnN0cmVhbSA9IFJlY29yZFN0cmVhbS5TZXJpYWxpemFibGUucHJvdG90eXBlLnN0cmVhbTtcblxuLyoqXG4gKiBHZXQgcmVjb3JkIHN0cmVhbSBvZiBxdWVyaWVkIHJlY29yZHMgYXBwbHlpbmcgdGhlIGdpdmVuIG1hcHBpbmcgZnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge1JlY29yZE1hcEZ1bmN0aW9ufSBmbiAtIFJlY29yZCBtYXBwaW5nIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UmVjb3JkU3RyZWFtLlNlcmlhbGl6YWJsZX1cbiAqL1xuUXVlcnkucHJvdG90eXBlLm1hcCA9IFJlY29yZFN0cmVhbS5wcm90b3R5cGUubWFwO1xuXG4vKipcbiAqIEdldCByZWNvcmQgc3RyZWFtIG9mIHF1ZXJpZWQgcmVjb3JkcywgYXBwbHlpbmcgdGhlIGdpdmVuIGZpbHRlciBmdW5jdGlvblxuICpcbiAqIEBwYXJhbSB7UmVjb3JkRmlsdGVyRnVuY3Rpb259IGZuIC0gUmVjb3JkIGZpbHRlcmluZyBmdW5jdGlvblxuICogQHJldHVybnMge1JlY29yZFN0cmVhbS5TZXJpYWxpemFibGV9XG4gKi9cblF1ZXJ5LnByb3RvdHlwZS5maWx0ZXIgPSBSZWNvcmRTdHJlYW0ucHJvdG90eXBlLm1hcDtcblxuLypcbiAqIERlZmF1bHQgdGhyZXNob2xkIG51bSBvZiBidWxrIEFQSSBzd2l0Y2hpbmdcbiAqL1xudmFyIERFRkFVTFRfQlVMS19USFJFU0hPTEQgPSAyMDA7XG5cbi8qKlxuICogU3lub255bSBvZiBRdWVyeSNkZXN0cm95KClcbiAqXG4gKiBAbWV0aG9kIFF1ZXJ5I2RlbGV0ZVxuICogQHBhcmFtIHtTdHJpbmd9IFt0eXBlXSAtIFNPYmplY3QgdHlwZS4gUmVxdWlyZWQgZm9yIFNPUUwgYmFzZWQgcXVlcnkgb2JqZWN0LlxuICogQHBhcmFtIHtDYWxsYmFjay48QXJyYXkuPFJlY29yZFJlc3VsdD4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxBcnJheS48UmVjb3JkUmVzdWx0Pj59XG4gKi9cbi8qKlxuICogU3lub255bSBvZiBRdWVyeSNkZXN0cm95KClcbiAqXG4gKiBAbWV0aG9kIFF1ZXJ5I2RlbFxuICogQHBhcmFtIHtTdHJpbmd9IFt0eXBlXSAtIFNPYmplY3QgdHlwZS4gUmVxdWlyZWQgZm9yIFNPUUwgYmFzZWQgcXVlcnkgb2JqZWN0LlxuICogQHBhcmFtIHtDYWxsYmFjay48QXJyYXkuPFJlY29yZFJlc3VsdD4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxBcnJheS48UmVjb3JkUmVzdWx0Pj59XG4gKi9cbi8qKlxuICogRGVsZXRlIHF1ZXJpZWQgcmVjb3Jkc1xuICpcbiAqIEBtZXRob2QgUXVlcnkjZGVzdHJveVxuICogQHBhcmFtIHtTdHJpbmd9IFt0eXBlXSAtIFNPYmplY3QgdHlwZS4gUmVxdWlyZWQgZm9yIFNPUUwgYmFzZWQgcXVlcnkgb2JqZWN0LlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIE1hc3MgZGVsZXRlIG9wZXJhdGlvbiBvcHRpb25zXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLmFsbG93QnVsa10gLSBBbGxvdyBzd2l0Y2hpbmcgdG8gQnVsayBBUEkgd2hlbiB0aGUgbnVtIG9mIHF1ZXJpZWQgcmVjb3JkcyByZWFjaGVkIHRvIGNlcnRhaW4gdGhyZXNob2xkLiBEZWZhdWx0IGlzIHRydWUuXG4gKiBAcGFyYW0ge051bWJlcn0gW29wdGlvbnMuYnVsa1RocmVzaG9sZF0gLSBUaHJlc2hvbGQgbnVtIHRvIHN3aXRjaCB0byB1c2UgQnVsayBBUEkgaW5zdGVhZCBvZiB1c3VhbCBgU09iamVjdCNkZWxldGUoKWAgY2FsbC4gRGVmYXVsdCB2YWx1ZSBpcyAyMDAgYWZ0ZXIgQVBJIHZlciA0Mi4wLCBhbmQgMC41ICogYG1heFJlcXVlc3RgIGJlZm9yZSBBUEkgdmVyIDQyLjAuXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxBcnJheS48UmVjb3JkUmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn1cbiAqL1xuUXVlcnkucHJvdG90eXBlW1wiZGVsZXRlXCJdID1cblF1ZXJ5LnByb3RvdHlwZS5kZWwgPVxuUXVlcnkucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbih0eXBlLCBvcHRpb25zLCBjYWxsYmFjaykge1xuICBpZiAodHlwZW9mIHR5cGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYWxsYmFjayA9IHR5cGU7XG4gICAgb3B0aW9ucyA9IHt9O1xuICAgIHR5cGUgPSBudWxsO1xuICB9IGVsc2UgaWYgKHR5cGVvZiB0eXBlID09PSAnb2JqZWN0JyAmJiB0eXBlICE9PSBudWxsKSB7XG4gICAgY2FsbGJhY2sgPSBvcHRpb25zO1xuICAgIG9wdGlvbnMgPSB0eXBlO1xuICAgIHR5cGUgPSBudWxsO1xuICB9XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICB0eXBlID0gdHlwZSB8fCAodGhpcy5fY29uZmlnICYmIHRoaXMuX2NvbmZpZy50YWJsZSk7XG4gIGlmICghdHlwZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIlNPUUwgYmFzZWQgcXVlcnkgbmVlZHMgU09iamVjdCB0eXBlIGluZm9ybWF0aW9uIHRvIGJ1bGsgZGVsZXRlLlwiKTtcbiAgfVxuICAvLyBTZXQgdGhlIHRocmVzaG9sZCBudW1iZXIgdG8gcGFzcyB0byBidWxrIEFQSVxuICB2YXIgdGhyZXNob2xkTnVtID1cbiAgICBvcHRpb25zLmFsbG93QnVsayA9PT0gZmFsc2UgP1xuICAgICAgLTEgOlxuICAgIHR5cGVvZiBvcHRpb25zLmJ1bGtUaHJlc2hvbGQgPT09ICdudW1iZXInID9cbiAgICAgIG9wdGlvbnMuYnVsa1RocmVzaG9sZCA6XG4gICAgICAvLyBkZXRlcm1pbmUgdGhyZXNob2xkIGlmIHRoZSBjb25uZWN0aW9uIHZlcnNpb24gc3VwcG9ydHMgU09iamVjdCBjb2xsZWN0aW9uIEFQSSBvciBub3RcbiAgICAgICh0aGlzLl9jb25uLl9lbnN1cmVWZXJzaW9uKDQyKSA/IERFRkFVTFRfQlVMS19USFJFU0hPTEQgOiB0aGlzLl9jb25uLm1heFJlcXVlc3QgLyAyKTtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgdmFyIHJlY29yZHMgPSBbXTtcbiAgICB2YXIgYmF0Y2ggPSBudWxsO1xuICAgIHZhciBoYW5kbGVSZWNvcmQgPSBmdW5jdGlvbihyZWMpIHtcbiAgICAgIGlmICghcmVjLklkKSB7XG4gICAgICAgIHNlbGYuZW1pdCgnZXJyb3InLCBuZXcgRXJyb3IoJ1F1ZXJpZWQgcmVjb3JkIGRvZXMgbm90IGluY2x1ZGUgU2FsZXNmb3JjZSByZWNvcmQgSUQuJykpXG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHZhciByZWNvcmQgPSB7IElkOiByZWMuSWQgfTtcbiAgICAgIGlmIChiYXRjaCkge1xuICAgICAgICBiYXRjaC53cml0ZShyZWNvcmQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVjb3Jkcy5wdXNoKHJlY29yZCk7XG4gICAgICAgIGlmICh0aHJlc2hvbGROdW0gPCAwIHx8IHJlY29yZHMubGVuZ3RoID4gdGhyZXNob2xkTnVtKSB7XG4gICAgICAgICAgLy8gVXNlIGJ1bGsgZGVsZXRlIGluc3RlYWQgb2YgU09iamVjdCBSRVNUIEFQSVxuICAgICAgICAgIGJhdGNoID1cbiAgICAgICAgICAgIHNlbGYuX2Nvbm4uc29iamVjdCh0eXBlKS5kZWxldGVCdWxrKClcbiAgICAgICAgICAgICAgLm9uKCdyZXNwb25zZScsIHJlc29sdmUpXG4gICAgICAgICAgICAgIC5vbignZXJyb3InLCByZWplY3QpO1xuICAgICAgICAgIHJlY29yZHMuZm9yRWFjaChmdW5jdGlvbihyZWNvcmQpIHtcbiAgICAgICAgICAgIGJhdGNoLndyaXRlKHJlY29yZCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgcmVjb3JkcyA9IFtdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcbiAgICB2YXIgaGFuZGxlRW5kID0gZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoYmF0Y2gpIHtcbiAgICAgICAgYmF0Y2guZW5kKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgaWRzID0gcmVjb3Jkcy5tYXAoZnVuY3Rpb24gKHJlY29yZCkgeyByZXR1cm4gcmVjb3JkLklkOyB9KTtcbiAgICAgICAgc2VsZi5fY29ubi5zb2JqZWN0KHR5cGUpLmRlc3Ryb3koaWRzLCB7IGFsbG93UmVjdXJzaXZlOiB0cnVlIH0pLnRoZW4ocmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHNlbGYub24oJ2RhdGEnLCBoYW5kbGVSZWNvcmQpXG4gICAgICAub24oJ2VuZCcsIGhhbmRsZUVuZClcbiAgICAgIC5vbignZXJyb3InLCByZWplY3QpO1xuICB9KS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIFVwZGF0ZSBxdWVyaWVkIHJlY29yZHMsIHVzaW5nIGdpdmVuIG1hcHBpbmcgZnVuY3Rpb24vb2JqZWN0XG4gKlxuICogQHBhcmFtIHtSZWNvcmR8UmVjb3JkTWFwRnVuY3Rpb259IG1hcHBpbmcgLSBNYXBwaW5nIHJlY29yZCBvciByZWNvcmQgbWFwcGluZyBmdW5jdGlvblxuICogQHBhcmFtIHtTdHJpbmd9IFt0eXBlXSAtIFNPYmplY3QgdHlwZS4gUmVxdWlyZWQgZm9yIFNPUUwgYmFzZWQgcXVlcnkgb2JqZWN0LlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIE1hc3MgdXBkYXRlIG9wZXJhdGlvbiBvcHRpb25zXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLmFsbG93QnVsa10gLSBBbGxvdyBzd2l0Y2hpbmcgdG8gQnVsayBBUEkgd2hlbiB0aGUgbnVtIG9mIHF1ZXJpZWQgcmVjb3JkcyByZWFjaGVkIHRvIGNlcnRhaW4gdGhyZXNob2xkLiBEZWZhdWx0IGlzIHRydWUuXG4gKiBAcGFyYW0ge051bWJlcn0gW29wdGlvbnMuYnVsa1RocmVzaG9sZF0gLSBUaHJlc2hvbGQgbnVtIHRvIHN3aXRjaCB0byB1c2UgQnVsayBBUEkgaW5zdGVhZCBvZiB1c3VhbCBgU09iamVjdCNkZWxldGUoKWAgY2FsbC4gRGVmYXVsdCB2YWx1ZSBpcyAyMDAgYWZ0ZXIgQVBJIHZlciA0Mi4wLCBhbmQgMC41ICogYG1heFJlcXVlc3RgIGJlZm9yZSBBUEkgdmVyIDQyLjAuXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxBcnJheS48UmVjb3JkUmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn1cbiAqL1xuUXVlcnkucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uKG1hcHBpbmcsIHR5cGUsIG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gIGlmICh0eXBlb2YgdHlwZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNhbGxiYWNrID0gdHlwZTtcbiAgICBvcHRpb25zID0ge307XG4gICAgdHlwZSA9IG51bGw7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHR5cGUgPT09ICdvYmplY3QnICYmIHR5cGUgIT09IG51bGwpIHtcbiAgICBjYWxsYmFjayA9IG9wdGlvbnM7XG4gICAgb3B0aW9ucyA9IHR5cGU7XG4gICAgdHlwZSA9IG51bGw7XG4gIH1cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIHR5cGUgPSB0eXBlIHx8ICh0aGlzLl9jb25maWcgJiYgdGhpcy5fY29uZmlnLnRhYmxlKTtcbiAgaWYgKCF0eXBlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiU09RTCBiYXNlZCBxdWVyeSBuZWVkcyBTT2JqZWN0IHR5cGUgaW5mb3JtYXRpb24gdG8gYnVsayB1cGRhdGUuXCIpO1xuICB9XG4gIHZhciB1cGRhdGVTdHJlYW0gPSBfLmlzRnVuY3Rpb24obWFwcGluZykgPyBSZWNvcmRTdHJlYW0ubWFwKG1hcHBpbmcpIDogUmVjb3JkU3RyZWFtLnJlY29yZE1hcFN0cmVhbShtYXBwaW5nKTtcbiAgLy8gU2V0IHRoZSB0aHJlc2hvbGQgbnVtYmVyIHRvIHBhc3MgdG8gYnVsayBBUElcbiAgdmFyIHRocmVzaG9sZE51bSA9XG4gICAgb3B0aW9ucy5hbGxvd0J1bGsgPT09IGZhbHNlID9cbiAgICAgIC0xIDpcbiAgICB0eXBlb2Ygb3B0aW9ucy5idWxrVGhyZXNob2xkID09PSAnbnVtYmVyJyA/XG4gICAgICBvcHRpb25zLmJ1bGtUaHJlc2hvbGQgOlxuICAgICAgLy8gZGV0ZXJtaW5lIHRocmVzaG9sZCBpZiB0aGUgY29ubmVjdGlvbiB2ZXJzaW9uIHN1cHBvcnRzIFNPYmplY3QgY29sbGVjdGlvbiBBUEkgb3Igbm90XG4gICAgICAodGhpcy5fY29ubi5fZW5zdXJlVmVyc2lvbig0MikgPyBERUZBVUxUX0JVTEtfVEhSRVNIT0xEIDogdGhpcy5fY29ubi5tYXhSZXF1ZXN0IC8gMik7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgIHZhciByZWNvcmRzID0gW107XG4gICAgdmFyIGJhdGNoID0gbnVsbDtcbiAgICB2YXIgaGFuZGxlUmVjb3JkID0gZnVuY3Rpb24ocmVjb3JkKSB7XG4gICAgICBpZiAoYmF0Y2gpIHtcbiAgICAgICAgYmF0Y2gud3JpdGUocmVjb3JkKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlY29yZHMucHVzaChyZWNvcmQpO1xuICAgICAgICBpZiAodGhyZXNob2xkTnVtIDwgMCB8fCByZWNvcmRzLmxlbmd0aCA+IHRocmVzaG9sZE51bSkge1xuICAgICAgICAgIC8vIFVzZSBidWxrIHVwZGF0ZSBpbnN0ZWFkIG9mIFNPYmplY3QgUkVTVCBBUElcbiAgICAgICAgICBiYXRjaCA9XG4gICAgICAgICAgICBzZWxmLl9jb25uLnNvYmplY3QodHlwZSkudXBkYXRlQnVsaygpXG4gICAgICAgICAgICAgIC5vbigncmVzcG9uc2UnLCByZXNvbHZlKVxuICAgICAgICAgICAgICAub24oJ2Vycm9yJywgcmVqZWN0KTtcbiAgICAgICAgICByZWNvcmRzLmZvckVhY2goZnVuY3Rpb24ocmVjb3JkKSB7XG4gICAgICAgICAgICBiYXRjaC53cml0ZShyZWNvcmQpO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIHJlY29yZHMgPSBbXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gICAgdmFyIGhhbmRsZUVuZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKGJhdGNoKSB7XG4gICAgICAgIGJhdGNoLmVuZCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2VsZi5fY29ubi5zb2JqZWN0KHR5cGUpLnVwZGF0ZShyZWNvcmRzLCB7IGFsbG93UmVjdXJzaXZlOiB0cnVlIH0pLnRoZW4ocmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHNlbGYub24oJ2Vycm9yJywgcmVqZWN0KVxuICAgICAgLnBpcGUodXBkYXRlU3RyZWFtKVxuICAgICAgLm9uKCdkYXRhJywgaGFuZGxlUmVjb3JkKVxuICAgICAgLm9uKCdlbmQnLCBoYW5kbGVFbmQpXG4gICAgICAub24oJ2Vycm9yJywgcmVqZWN0KTtcbiAgfSkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBQcm9taXNlL0ErIGludGVyZmFjZVxuICogaHR0cDovL3Byb21pc2VzLWFwbHVzLmdpdGh1Yi5pby9wcm9taXNlcy1zcGVjL1xuICpcbiAqIERlbGVnYXRlIHRvIGRlZmVycmVkIHByb21pc2UsIHJldHVybiBwcm9taXNlIGluc3RhbmNlIGZvciBxdWVyeSByZXN1bHRcbiAqXG4gKiBAcGFyYW0ge0Z1bGZpbGxlZENhbGxiYWNrLjxULCBTMT59IFtvbkZ1bGZpbGxlZF1cbiAqIEBwYXJhbSB7UmVqZWN0ZWRDYWxsYmFjay48UzI+fSBbb25SZWplY3RlZF1cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxTMXxTMj59XG4gKi9cblF1ZXJ5LnByb3RvdHlwZS50aGVuID0gZnVuY3Rpb24ob25SZXNvbHZlZCwgb25SZWplY3QpIHtcbiAgdGhpcy5fY2hhaW5pbmcgPSB0cnVlO1xuICBpZiAoIXRoaXMuX2ZpbmlzaGVkICYmICF0aGlzLl9leGVjdXRlZCkgeyB0aGlzLmV4ZWN1dGUoKTsgfVxuICByZXR1cm4gdGhpcy5fZGVmZXJyZWQucHJvbWlzZS50aGVuLmFwcGx5KHRoaXMuX2RlZmVycmVkLnByb21pc2UsIGFyZ3VtZW50cyk7XG59O1xuXG4vKipcbiAqIFByb21pc2UvQSsgZXh0ZW5zaW9uXG4gKiBDYWxsIFwidGhlblwiIHVzaW5nIGdpdmVuIG5vZGUtc3R5bGUgY2FsbGJhY2sgZnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxUPn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UXVlcnl9XG4gKi9cblF1ZXJ5LnByb3RvdHlwZS50aGVuQ2FsbCA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIGlmIChfLmlzRnVuY3Rpb24oY2FsbGJhY2spKSB7XG4gICAgdGhpcy50aGVuKGZ1bmN0aW9uKHJlcykge1xuICAgICAgcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbigpIHtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgcmVzKTtcbiAgICAgIH0pO1xuICAgIH0sIGZ1bmN0aW9uKGVycikge1xuICAgICAgcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbigpIHtcbiAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi8qKlxuICogU3ViUXVlcnkgb2JqZWN0IGZvciByZXByZXNlbnRpbmcgY2hpbGQgcmVsYXRpb25zaGlwIHF1ZXJ5XG4gKlxuICogQHByb3RlY3RlZFxuICogQGNsYXNzIFF1ZXJ5flN1YlF1ZXJ5XG4gKiBAZXh0ZW5kcyBRdWVyeVxuICogQHBhcmFtIHtDb25uZWN0aW9ufSBjb25uIC0gQ29ubmVjdGlvbiBvYmplY3RcbiAqIEBwYXJhbSB7UXVlcnl9IHBhcmVudCAtIFBhcmVudCBxdWVyeSBvYmplY3RcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcgLSBTdWIgcXVlcnkgY29uZmlndXJhdGlvblxuICovXG52YXIgU3ViUXVlcnkgPSBmdW5jdGlvbihjb25uLCBwYXJlbnQsIGNvbmZpZykge1xuICBTdWJRdWVyeS5zdXBlcl8uY2FsbCh0aGlzLCBjb25uLCBjb25maWcpO1xuICB0aGlzLl9wYXJlbnQgPSBwYXJlbnQ7XG59O1xuXG5pbmhlcml0cyhTdWJRdWVyeSwgUXVlcnkpO1xuXG4vKipcbiAqIEBtZXRob2QgUXVlcnl+U3ViUXVlcnkjaW5jbHVkZVxuICogQG92ZXJyaWRlXG4gKi9cblN1YlF1ZXJ5LnByb3RvdHlwZS5pbmNsdWRlID0gZnVuY3Rpb24oKSB7XG4gIHRocm93IG5ldyBFcnJvcihcIk5vdCBhbGxvd2VkIHRvIGluY2x1ZGUgYW5vdGhlciBzdWJxdWVyeSBpbiBzdWJxdWVyeS5cIik7XG59O1xuXG4vKipcbiAqIEJhY2sgdGhlIGNvbnRleHQgdG8gcGFyZW50IHF1ZXJ5IG9iamVjdFxuICpcbiAqIEBtZXRob2QgUXVlcnl+U3ViUXVlcnkjZW5kXG4gKiBAcmV0dXJucyB7UXVlcnl9XG4gKi9cblN1YlF1ZXJ5LnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuX3BhcmVudDtcbn07XG5cbi8qKlxuICogSWYgZXhlY3V0ZSBpcyBjYWxsZWQgaW4gc3VicXVlcnkgY29udGV4dCwgZGVsZWdhdGUgaXQgdG8gcGFyZW50IHF1ZXJ5IG9iamVjdFxuICpcbiAqIEBtZXRob2QgUXVlcnl+U3ViUXVlcnkjZXhlY3V0ZVxuICogQG92ZXJyaWRlXG4gKi9cblN1YlF1ZXJ5LnByb3RvdHlwZS5ydW4gPVxuU3ViUXVlcnkucHJvdG90eXBlLmV4ZWMgPVxuU3ViUXVlcnkucHJvdG90eXBlLmV4ZWN1dGUgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuX3BhcmVudC5leGVjdXRlLmFwcGx5KHRoaXMuX3BhcmVudCwgYXJndW1lbnRzKTtcbn07XG4iLCIvKipcbiAqIEBmaWxlIFJlcHJlc2VudHMgU2FsZXNmb3JjZSBRdWlja0FjdGlvblxuICogQGF1dGhvciBTaGluaWNoaSBUb21pdGEgPHNoaW5pY2hpLnRvbWl0YUBnbWFpbC5jb20+XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5cbi8qKlxuICogQSBjbGFzcyBmb3IgcXVpY2sgYWN0aW9uXG4gKlxuICogQHByb3RlY3RlZFxuICogQGNvbnN0cnVjdG9yXG4gKi9cbnZhciBRdWlja0FjdGlvbiA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oY29ubiwgcGF0aCkge1xuICB0aGlzLl9jb25uID0gY29ubjtcbiAgdGhpcy5fcGF0aCA9IHBhdGg7XG59O1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IFF1aWNrQWN0aW9uflF1aWNrQWN0aW9uSW5mb1xuICogQHByb3Age1N0cmluZ30gdHlwZSAtIFR5cGUgb2YgdGhlIGFjdGlvbiAoZS5nLiBDcmVhdGUsIFVwZGF0ZSwgUG9zdCwgTG9nQUNhbGwpXG4gKiBAcHJvcCB7U3RyaW5nfSBuYW1lIC0gTmFtZSBvZiB0aGUgYWN0aW9uXG4gKiBAcHJvcCB7U3RyaW5nfSBsYWJlbCAtIExhYmVsIG9mIHRoZSBhY3Rpb25cbiAqIEBwcm9wIHtPYmplY3R9IHVybHMgLSBFbmRwb2ludCBVUkwgaW5mb3JtYXRpb24gb2YgdGhlIGFjdGlvblxuICovXG4vKipcbiAqIEB0eXBlZGVmIHtRdWlja0FjdGlvbn5RdWlja0FjdGlvbkluZm99IFF1aWNrQWN0aW9uflF1aWNrQWN0aW9uRGVzY3JpdmVJbmZvXG4gKiBAcHJvcCB7U3RyaW5nfSBjb250ZXh0U29iamVjdFR5cGUgLSBPYmplY3QgdHlwZSB1c2VkIGZvciB0aGUgYWN0aW9uXG4gKiBAcHJvcCB7U3RyaW5nfSB0YXJnZXRTb2JqZWN0VHlwZSAtIE9iamVjdCB0eXBlIG9mIHRoZSBhY3Rpb24gdG8gdGFyZ2V0XG4gKiBAcHJvcCB7U3RyaW5nfSB0YXJnZXRQYXJlbnRGaWVsZCAtIEZpZWxkIG5hbWUgaW4gdGhlIHRhcmdldCBvYmplY3Qgd2hpY2ggcmVmZXJzIHBhcmVudChjb250ZXh0KSBvYmplY3QgcmVjb3JkIElELlxuICogQHByb3Age1N0cmluZ30gdGFyZ2V0UmVjb3JkVHlwZUlkIC0gUmVjb3JkIHR5cGUgb2YgdGhlIHRhcmdldGVkIHJlY29yZFxuICogQHByb3Age09iamVjdH0gbGF5b3V0IC0gTGF5b3V0IHNlY3Rpb25zIHRoYXQgY29tcHJpc2UgYW4gYWN0aW9uXG4gKi9cblxuLyoqXG4gKiBEZXNjcmliZSB0aGUgYWN0aW9uJ3MgaW5mb3JtYXRpb24gKGluY2x1ZGluZyBsYXlvdXQsIGV0Yy4pXG4gKlxuICogQHBhcmFtIHtDYWxsYmFjay48UXVpY2tBY3Rpb25+UXVpY2tBY3Rpb25EZXNjcml2ZUluZm8+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxRdWlja0FjdGlvbn5RdWlja0FjdGlvbkRlc2NyaXZlSW5mbz59XG4gKi9cblF1aWNrQWN0aW9uLnByb3RvdHlwZS5kZXNjcmliZSA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHZhciB1cmwgPSB0aGlzLl9wYXRoICsgXCIvZGVzY3JpYmVcIjtcbiAgcmV0dXJuIHRoaXMuX2Nvbm4ucmVxdWVzdCh1cmwpLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogUmV0cmlldmUgZGVmYXVsdCBmaWVsZCB2YWx1ZXMgaW4gdGhlIGFjdGlvbiAoZm9yIGdpdmVuIHJlY29yZCwgaWYgc3BlY2lmaWVkKVxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBbY29udGV4dElkXSAtIElEIG9mIHJlY29yZCB0byBnZXQgZGVmYXVsdCB2YWx1ZXMgc3BlY2lmaWMgdG8gdGhlIHJlY29yZFxuICogQHBhcmFtIHtDYWxsYmFjay48UmVjb3JkPn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48UmVjb3JkPn1cbiAqL1xuUXVpY2tBY3Rpb24ucHJvdG90eXBlLmRlZmF1bHRWYWx1ZXMgPSBmdW5jdGlvbihjb250ZXh0SWQsIGNhbGxiYWNrKSB7XG4gIGlmICh0eXBlb2YgY29udGV4dElkID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2FsbGJhY2sgPSBjb250ZXh0SWQ7XG4gICAgY29udGV4dElkID0gbnVsbDtcbiAgfVxuICB2YXIgdXJsID0gdGhpcy5fcGF0aCArIFwiL2RlZmF1bHRWYWx1ZXNcIjtcbiAgaWYgKGNvbnRleHRJZCkge1xuICAgIHVybCArPSBcIi9cIiArIGNvbnRleHRJZDtcbiAgfVxuICByZXR1cm4gdGhpcy5fY29ubi5yZXF1ZXN0KHVybCkudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBRdWlja0FjdGlvbn5RdWlja0FjdGlvblJlc3VsdFxuICogQHBhcmFtIHtTdHJpbmd9IGlkIC0gUmVjb3JkIGlkIG9mIHRoZSBhY3Rpb24gcmVzdWx0XG4gKiBAcGFyYW0ge0FycmF5LjxTdHJpbmc+fSBmZWVkSXRlbUlkcyAtIExpc3Qgb2YgSURzIGZvciBmZWVkIGl0ZW1cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gc3VjY2VzcyAtIFRydWUgaWYgdGhlIGFjdGlvbiBzdWNjZXNzZnVsbHkgY29tcGxldGVkXG4gKiBAcGFyYW0ge0Jvb2xlYW59IGNyZWF0ZWQgLSBUcnVlIGlmIHRoZSBhY3Rpb24geWllbGRzIGEgbmV3IHJlY29yZFxuICogQHBhcmFtIHtTdHJpbmd9IGNvbnRleHRJZCAtIENvbnRleHQgcmVjb3JkIElEIG9mIHRoZSBhY3Rpb25cbiAqIEBwYXJhbSB7QXJyYXkuPE9iamVjdD59IGVycm9ycyAtIEVycm9ycyBpZiB0aGUgYWN0aW9uIGZhaWxlZFxuICovXG5cbi8qKlxuICogRXhlY3V0ZSB0aGUgYWN0aW9uIGZvciBnaXZlbiBjb250ZXh0IElkIGFuZCByZWNvcmQgaW5mb3JtYXRpb25cbiAqIFxuICogQHBhcmFtIHtTdHJpbmd9IGNvbnRleHRJZCAtIENvbnRleHQgcmVjb3JkIElEIG9mIHRoZSBhY3Rpb25cbiAqIEBwYXJhbSB7UmVjb3JkfSByZWNvcmQgLSBJbnB1dCByZWNvcmQgaW5mb3JtYXRpb24gZm9yIHRoZSBhY3Rpb25cbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFF1aWNrQWN0aW9uflF1aWNrQWN0aW9uUmVzdWx0Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48UXVpY2tBY3Rpb25+UXVpY2tBY3Rpb25SZXN1bHQ+fVxuICovXG5RdWlja0FjdGlvbi5wcm90b3R5cGUuZXhlY3V0ZSA9IGZ1bmN0aW9uKGNvbnRleHRJZCwgcmVjb3JkLCBjYWxsYmFjaykge1xuICB2YXIgYm9keSA9IHtcbiAgICBjb250ZXh0SWQ6IGNvbnRleHRJZCxcbiAgICByZWNvcmQ6IHJlY29yZFxuICB9O1xuICByZXR1cm4gdGhpcy5fY29ubi5yZXF1ZXN0UG9zdCh0aGlzLl9wYXRoLCBib2R5KS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuIiwiLyoqXG4gKiBAZmlsZSBSZXByZXNlbnRzIHN0cmVhbSB0aGF0IGhhbmRsZXMgU2FsZXNmb3JjZSByZWNvcmQgYXMgc3RyZWFtIGRhdGFcbiAqIEBhdXRob3IgU2hpbmljaGkgVG9taXRhIDxzaGluaWNoaS50b21pdGFAZ21haWwuY29tPlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGV2ZW50cyA9IHJlcXVpcmUoJ2V2ZW50cycpLFxuICAgIHN0cmVhbSA9IHJlcXVpcmUoJ3JlYWRhYmxlLXN0cmVhbScpLFxuICAgIER1cGxleCA9IHN0cmVhbS5EdXBsZXgsXG4gICAgVHJhbnNmb3JtID0gc3RyZWFtLlRyYW5zZm9ybSxcbiAgICBQYXNzVGhyb3VnaCA9IHN0cmVhbS5QYXNzVGhyb3VnaCxcbiAgICBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyksXG4gICAgXyAgICAgID0gcmVxdWlyZSgnbG9kYXNoL2NvcmUnKSxcbiAgICBDU1YgICAgPSByZXF1aXJlKCcuL2NzdicpO1xuXG5cbi8qKlxuICogQ2xhc3MgZm9yIFJlY29yZCBTdHJlYW1cbiAqXG4gKiBAY2xhc3NcbiAqIEBjb25zdHJ1Y3RvclxuICogQGV4dGVuZHMgc3RyZWFtLlRyYW5zZm9ybVxuICovXG52YXIgUmVjb3JkU3RyZWFtID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgUmVjb3JkU3RyZWFtLnN1cGVyXy5jYWxsKHRoaXMsIHsgb2JqZWN0TW9kZTogdHJ1ZSB9KTtcbn07XG5cbmluaGVyaXRzKFJlY29yZFN0cmVhbSwgVHJhbnNmb3JtKTtcblxuXG4vKlxuICogQG92ZXJyaWRlXG4gKi9cblJlY29yZFN0cmVhbS5wcm90b3R5cGUuX3RyYW5zZm9ybSA9IGZ1bmN0aW9uKHJlY29yZCwgZW5jLCBjYWxsYmFjaykge1xuICB0aGlzLmVtaXQoJ3JlY29yZCcsIHJlY29yZCk7XG4gIHRoaXMucHVzaChyZWNvcmQpO1xuICBjYWxsYmFjaygpO1xufTtcblxuLyoqXG4gKiBHZXQgcmVjb3JkIHN0cmVhbSBvZiBxdWVyaWVkIHJlY29yZHMgYXBwbHlpbmcgdGhlIGdpdmVuIG1hcHBpbmcgZnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge1JlY29yZE1hcEZ1bmN0aW9ufSBmbiAtIFJlY29yZCBtYXBwaW5nIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UmVjb3JkU3RyZWFtfVxuICovXG5SZWNvcmRTdHJlYW0ucHJvdG90eXBlLm1hcCA9IGZ1bmN0aW9uKGZuKSB7XG4gIHJldHVybiB0aGlzLnBpcGUoUmVjb3JkU3RyZWFtLm1hcChmbikpO1xufTtcblxuLyoqXG4gKiBHZXQgcmVjb3JkIHN0cmVhbSBvZiBxdWVyaWVkIHJlY29yZHMsIGFwcGx5aW5nIHRoZSBnaXZlbiBmaWx0ZXIgZnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge1JlY29yZEZpbHRlckZ1bmN0aW9ufSBmbiAtIFJlY29yZCBmaWx0ZXJpbmcgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtSZWNvcmRTdHJlYW19XG4gKi9cblJlY29yZFN0cmVhbS5wcm90b3R5cGUuZmlsdGVyID0gZnVuY3Rpb24oZm4pIHtcbiAgcmV0dXJuIHRoaXMucGlwZShSZWNvcmRTdHJlYW0uZmlsdGVyKGZuKSk7XG59O1xuXG5cbi8qKlxuICogQGNsYXNzIFJlY29yZFN0cmVhbS5TZXJpYWxpemFibGVcbiAqIEBleHRlbmRzIHtSZWNvcmRTdHJlYW19XG4gKi9cbnZhciBTZXJpYWxpemFibGUgPSBSZWNvcmRTdHJlYW0uU2VyaWFsaXphYmxlID0gZnVuY3Rpb24oKSB7XG4gIFNlcmlhbGl6YWJsZS5zdXBlcl8uY2FsbCh0aGlzKTtcbiAgdGhpcy5fZGF0YVN0cmVhbSA9IG51bGw7XG59O1xuXG5pbmhlcml0cyhTZXJpYWxpemFibGUsIFJlY29yZFN0cmVhbSk7XG5cbi8qKlxuICogQ3JlYXRlIHJlYWRhYmxlIGRhdGEgc3RyZWFtIHdoaWNoIGVtaXRzIHNlcmlhbGl6ZWQgcmVjb3JkIGRhdGFcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gW3R5cGVdIC0gVHlwZSBvZiBvdXRnb2luZyBkYXRhIGZvcm1hdC4gQ3VycmVudGx5ICdjc3YnIGlzIGRlZmF1bHQgdmFsdWUgYW5kIHRoZSBvbmx5IHN1cHBvcnRlZC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSBPcHRpb25zIHBhc3NlZCB0byBjb252ZXJ0ZXJcbiAqIEByZXR1cm5zIHtzdHJlYW0uUmVhZGFibGV9XG4qL1xuU2VyaWFsaXphYmxlLnByb3RvdHlwZS5zdHJlYW0gPSBmdW5jdGlvbih0eXBlLCBvcHRpb25zKSB7XG4gIHR5cGUgPSB0eXBlIHx8ICdjc3YnO1xuICB2YXIgY29udmVydGVyID0gRGF0YVN0cmVhbUNvbnZlcnRlcnNbdHlwZV07XG4gIGlmICghY29udmVydGVyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdDb252ZXJ0aW5nIFsnICsgdHlwZSArICddIGRhdGEgc3RyZWFtIGlzIG5vdCBzdXBwb3J0ZWQuJyk7XG4gIH1cbiAgaWYgKCF0aGlzLl9kYXRhU3RyZWFtKSB7XG4gICAgdGhpcy5fZGF0YVN0cmVhbSA9IG5ldyBQYXNzVGhyb3VnaCgpO1xuICAgIHRoaXMucGlwZShjb252ZXJ0ZXIuc2VyaWFsaXplKG9wdGlvbnMpKVxuICAgICAgLnBpcGUodGhpcy5fZGF0YVN0cmVhbSk7XG4gIH1cbiAgcmV0dXJuIHRoaXMuX2RhdGFTdHJlYW07XG59O1xuXG5cbi8qKlxuICogQGNsYXNzIFJlY29yZFN0cmVhbS5QYXJzYWJsZVxuICogQGV4dGVuZHMge1JlY29yZFN0cmVhbX1cbiAqL1xudmFyIFBhcnNhYmxlID0gUmVjb3JkU3RyZWFtLlBhcnNhYmxlID0gZnVuY3Rpb24oKSB7XG4gIFBhcnNhYmxlLnN1cGVyXy5jYWxsKHRoaXMpO1xuICB0aGlzLl9kYXRhU3RyZWFtID0gbnVsbDtcbn07XG5cbmluaGVyaXRzKFBhcnNhYmxlLCBSZWNvcmRTdHJlYW0pO1xuXG4vKipcbiAqIENyZWF0ZSB3cml0YWJsZSBkYXRhIHN0cmVhbSB3aGljaCBhY2NlcHRzIHNlcmlhbGl6ZWQgcmVjb3JkIGRhdGFcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gW3R5cGVdIC0gVHlwZSBvZiBvdXRnb2luZyBkYXRhIGZvcm1hdC4gQ3VycmVudGx5ICdjc3YnIGlzIGRlZmF1bHQgdmFsdWUgYW5kIHRoZSBvbmx5IHN1cHBvcnRlZC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSBPcHRpb25zIHBhc3NlZCB0byBjb252ZXJ0ZXJcbiAqIEByZXR1cm5zIHtzdHJlYW0uUmVhZGFibGV9XG4qL1xuUGFyc2FibGUucHJvdG90eXBlLnN0cmVhbSA9IGZ1bmN0aW9uKHR5cGUsIG9wdGlvbnMpIHtcbiAgdHlwZSA9IHR5cGUgfHwgJ2Nzdic7XG4gIHZhciBjb252ZXJ0ZXIgPSBEYXRhU3RyZWFtQ29udmVydGVyc1t0eXBlXTtcbiAgaWYgKCFjb252ZXJ0ZXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvbnZlcnRpbmcgWycgKyB0eXBlICsgJ10gZGF0YSBzdHJlYW0gaXMgbm90IHN1cHBvcnRlZC4nKTtcbiAgfVxuICBpZiAoIXRoaXMuX2RhdGFTdHJlYW0pIHtcbiAgICB0aGlzLl9kYXRhU3RyZWFtID0gbmV3IFBhc3NUaHJvdWdoKCk7XG4gICAgdGhpcy5fcGFyc2VyU3RyZWFtID0gY29udmVydGVyLnBhcnNlKG9wdGlvbnMpLm9uKCdlcnJvcicsIGZ1bmN0aW9uKGVycm9yKSB7IHRoaXMuZW1pdCgnZXJyb3InLCBlcnJvcik7IH0pO1xuICAgIHRoaXMuX3BhcnNlclN0cmVhbS5waXBlKHRoaXMpLnBpcGUobmV3IFBhc3NUaHJvdWdoKHsgb2JqZWN0TW9kZTogdHJ1ZSwgaGlnaFdhdGVyTWFyazogKCA1MDAgKiAxMDAwICkgfSkpO1xuICB9XG4gIHJldHVybiB0aGlzLl9kYXRhU3RyZWFtO1xufTtcblxuXG4vKiBAb3ZlcnJpZGUgKi9cblBhcnNhYmxlLnByb3RvdHlwZS5vbiA9IGZ1bmN0aW9uKGV2LCBmbikge1xuICBpZiAoZXYgPT09ICdyZWFkYWJsZScgfHwgZXYgPT09ICdyZWNvcmQnKSB7XG4gICAgdGhpcy5fZGF0YVN0cmVhbS5waXBlKHRoaXMuX3BhcnNlclN0cmVhbSk7XG4gIH1cbiAgcmV0dXJuIFBhcnNhYmxlLnN1cGVyXy5wcm90b3R5cGUub24uY2FsbCh0aGlzLCBldiwgZm4pO1xufTtcblxuLyogQG92ZXJyaWRlICovXG5QYXJzYWJsZS5wcm90b3R5cGUuYWRkTGlzdGVuZXIgPSBQYXJzYWJsZS5wcm90b3R5cGUub247XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG4vKipcbiAqIEBjYWxsYmFjayBSZWNvcmRNYXBGdW5jdGlvblxuICogQHBhcmFtIHtSZWNvcmR9IHJlY29yZCAtIFNvdXJjZSByZWNvcmQgdG8gbWFwXG4gKiBAcmV0dXJucyB7UmVjb3JkfVxuICovXG5cbi8qKlxuICogQ3JlYXRlIGEgcmVjb3JkIHN0cmVhbSB3aGljaCBtYXBzIHJlY29yZHMgYW5kIHBhc3MgdGhlbSB0byBkb3duc3RyZWFtXG4gKlxuICogQHBhcmFtIHtSZWNvcmRNYXBGdW5jdGlvbn0gZm4gLSBSZWNvcmQgbWFwcGluZyBmdW5jdGlvblxuICogQHJldHVybnMge1JlY29yZFN0cmVhbS5TZXJpYWxpemFibGV9XG4gKi9cblJlY29yZFN0cmVhbS5tYXAgPSBmdW5jdGlvbihmbikge1xuICB2YXIgbWFwU3RyZWFtID0gbmV3IFJlY29yZFN0cmVhbS5TZXJpYWxpemFibGUoKTtcbiAgbWFwU3RyZWFtLl90cmFuc2Zvcm0gPSBmdW5jdGlvbihyZWNvcmQsIGVuYywgY2FsbGJhY2spIHtcbiAgICB2YXIgcmVjID0gZm4ocmVjb3JkKSB8fCByZWNvcmQ7IC8vIGlmIG5vdCByZXR1cm5lZCByZWNvcmQsIHVzZSBzYW1lIHJlY29yZFxuICAgIHRoaXMucHVzaChyZWMpO1xuICAgIGNhbGxiYWNrKCk7XG4gIH07XG4gIHJldHVybiBtYXBTdHJlYW07XG59O1xuXG4vKipcbiAqIENyZWF0ZSBtYXBwaW5nIHN0cmVhbSB1c2luZyBnaXZlbiByZWNvcmQgdGVtcGxhdGVcbiAqXG4gKiBAcGFyYW0ge1JlY29yZH0gcmVjb3JkIC0gTWFwcGluZyByZWNvcmQgb2JqZWN0LiBJbiBtYXBwaW5nIGZpZWxkIHZhbHVlLCB0ZW1sYXRlIG5vdGF0aW9uIGNhbiBiZSB1c2VkIHRvIHJlZmVyIGZpZWxkIHZhbHVlIGluIHNvdXJjZSByZWNvcmQsIGlmIG5vZXZhbCBwYXJhbSBpcyBub3QgdHJ1ZS5cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW25vZXZhbF0gLSBEaXNhYmxlIHRlbXBsYXRlIGV2YWx1YXRpb24gaW4gbWFwcGluZyByZWNvcmQuXG4gKiBAcmV0dXJucyB7UmVjb3JkU3RyZWFtLlNlcmlhbGl6YWJsZX1cbiAqL1xuUmVjb3JkU3RyZWFtLnJlY29yZE1hcFN0cmVhbSA9IGZ1bmN0aW9uKHJlY29yZCwgbm9ldmFsKSB7XG4gIHJldHVybiBSZWNvcmRTdHJlYW0ubWFwKGZ1bmN0aW9uKHJlYykge1xuICAgIHZhciBtYXBwZWQgPSB7IElkOiByZWMuSWQgfTtcbiAgICBmb3IgKHZhciBwcm9wIGluIHJlY29yZCkge1xuICAgICAgbWFwcGVkW3Byb3BdID0gbm9ldmFsID8gcmVjb3JkW3Byb3BdIDogZXZhbE1hcHBpbmcocmVjb3JkW3Byb3BdLCByZWMpO1xuICAgIH1cbiAgICByZXR1cm4gbWFwcGVkO1xuICB9KTtcblxuICBmdW5jdGlvbiBldmFsTWFwcGluZyh2YWx1ZSwgbWFwcGluZykge1xuICAgIGlmIChfLmlzU3RyaW5nKHZhbHVlKSkge1xuICAgICAgdmFyIG0gPSAvXlxcJFxceyhcXHcrKVxcfSQvLmV4ZWModmFsdWUpO1xuICAgICAgaWYgKG0pIHsgcmV0dXJuIG1hcHBpbmdbbVsxXV07IH1cbiAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKC9cXCRcXHsoXFx3KylcXH0vZywgZnVuY3Rpb24oJDAsIHByb3ApIHtcbiAgICAgICAgdmFyIHYgPSBtYXBwaW5nW3Byb3BdO1xuICAgICAgICByZXR1cm4gXy5pc051bGwodikgfHwgXy5pc1VuZGVmaW5lZCh2KSA/IFwiXCIgOiBTdHJpbmcodik7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBAY2FsbGJhY2sgUmVjb3JkRmlsdGVyRnVuY3Rpb25cbiAqIEBwYXJhbSB7UmVjb3JkfSByZWNvcmQgLSBTb3VyY2UgcmVjb3JkIHRvIGZpbHRlclxuICogQHJldHVybnMge0Jvb2xlYW59XG4gKi9cblxuLyoqXG4gKiBDcmVhdGUgYSByZWNvcmQgc3RyZWFtIHdoaWNoIGZpbHRlcnMgcmVjb3JkcyBhbmQgcGFzcyB0aGVtIHRvIGRvd25zdHJlYW1cbiAqXG4gKiBAcGFyYW0ge1JlY29yZEZpbHRlckZ1bmN0aW9ufSBmbiAtIFJlY29yZCBmaWx0ZXJpbmcgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtSZWNvcmRTdHJlYW0uU2VyaWFsaXphYmxlfVxuICovXG5SZWNvcmRTdHJlYW0uZmlsdGVyID0gZnVuY3Rpb24oZm4pIHtcbiAgdmFyIGZpbHRlclN0cmVhbSA9IG5ldyBSZWNvcmRTdHJlYW0uU2VyaWFsaXphYmxlKCk7XG4gIGZpbHRlclN0cmVhbS5fdHJhbnNmb3JtID0gZnVuY3Rpb24ocmVjb3JkLCBlbmMsIGNhbGxiYWNrKSB7XG4gICAgaWYgKGZuKHJlY29yZCkpIHsgdGhpcy5wdXNoKHJlY29yZCk7IH1cbiAgICBjYWxsYmFjaygpO1xuICB9O1xuICByZXR1cm4gZmlsdGVyU3RyZWFtO1xufTtcblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBjb252ZXJ0UmVjb3JkRm9yU2VyaWFsaXphdGlvbihyZWNvcmQsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKHJlY29yZCkucmVkdWNlKGZ1bmN0aW9uKHJlYywga2V5KSB7XG4gICAgdmFyIHZhbHVlID0gcmVjW2tleV07XG4gICAgdmFyIHQgPSB0eXBlb2YgdmFsdWU7XG4gICAgdmFyIHVyZWMgPSB7fTtcbiAgICBpZiAoa2V5ID09PSAnYXR0cmlidXRlcycpIHsgLy8gJ2F0dHJpYnV0ZXMnIHByb3Agd2lsbCBiZSBpZ25vcmVkXG4gICAgICByZWMgPSBfLmV4dGVuZCh7fSwgcmVjKTtcbiAgICAgIGRlbGV0ZSByZWNba2V5XTtcbiAgICB9IGVsc2UgaWYgKG9wdGlvbnMubnVsbFZhbHVlICYmIHZhbHVlID09PSBudWxsKSB7XG4gICAgICB1cmVjW2tleV0gPSBvcHRpb25zLm51bGxWYWx1ZTtcbiAgICAgIHJlYyA9IF8uZXh0ZW5kKHt9LCByZWMsIHVyZWMpO1xuICAgIH0gZWxzZSBpZiAodmFsdWUgIT09IG51bGwgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jykge1xuICAgICAgdmFyIHByZWNvcmQgPSBjb252ZXJ0UmVjb3JkRm9yU2VyaWFsaXphdGlvbih2YWx1ZSwgb3B0aW9ucyk7XG4gICAgICByZWMgPSBPYmplY3Qua2V5cyhwcmVjb3JkKS5yZWR1Y2UoZnVuY3Rpb24ocHJlYywgcGtleSkge1xuICAgICAgICBwcmVjW2tleSArICcuJyArIHBrZXldID0gcHJlY29yZFtwa2V5XTtcbiAgICAgICAgcmV0dXJuIHByZWM7XG4gICAgICB9LCBfLmV4dGVuZCh7fSwgcmVjKSk7XG4gICAgfVxuICAgIHJldHVybiByZWM7XG4gIH0sIHJlY29yZCk7XG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gY3JlYXRlUGlwZWxpbmVTdHJlYW0oczEsIHMyKSB7XG4gIHZhciBwaXBlbGluZSA9IG5ldyBQYXNzVGhyb3VnaCgpO1xuICBwaXBlbGluZS5vbigncGlwZScsIGZ1bmN0aW9uKHNvdXJjZSkge1xuICAgIHNvdXJjZS51bnBpcGUocGlwZWxpbmUpO1xuICAgIHNvdXJjZS5waXBlKHMxKS5waXBlKHMyKTtcbiAgfSk7XG4gIHBpcGVsaW5lLnBpcGUgPSBmdW5jdGlvbihkZXN0LCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIHMyLnBpcGUoZGVzdCwgb3B0aW9ucyk7XG4gIH07XG4gIHJldHVybiBwaXBlbGluZTtcbn1cblxuLyoqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKiovXG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xudmFyIENTVlN0cmVhbUNvbnZlcnRlciA9IHtcbiAgc2VyaWFsaXplOiBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgcmV0dXJuIGNyZWF0ZVBpcGVsaW5lU3RyZWFtKFxuICAgICAgUmVjb3JkU3RyZWFtLm1hcChmdW5jdGlvbihyZWNvcmQpIHtcbiAgICAgICAgcmV0dXJuIGNvbnZlcnRSZWNvcmRGb3JTZXJpYWxpemF0aW9uKHJlY29yZCwgb3B0aW9ucyk7XG4gICAgICB9KSxcbiAgICAgIENTVi5zZXJpYWxpemVDU1ZTdHJlYW0ob3B0aW9ucylcbiAgICApO1xuICB9LFxuICBwYXJzZTogZnVuY3Rpb24ob3B0aW9ucykge1xuICAgIHJldHVybiBDU1YucGFyc2VDU1ZTdHJlYW0ob3B0aW9ucyk7XG4gIH1cbn07XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xudmFyIERhdGFTdHJlYW1Db252ZXJ0ZXJzID0gUmVjb3JkU3RyZWFtLkRhdGFTdHJlYW1Db252ZXJ0ZXJzID0ge1xuICBjc3Y6IENTVlN0cmVhbUNvbnZlcnRlclxufTtcbiIsIi8qKlxuICogQGZpbGUgUmVwcmVzZW50cyBTYWxlc2ZvcmNlIHJlY29yZCBpbmZvcm1hdGlvblxuICogQGF1dGhvciBTaGluaWNoaSBUb21pdGEgPHNoaW5pY2hpLnRvbWl0YUBnbWFpbC5jb20+XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgXyA9IHJlcXVpcmUoJ2xvZGFzaC9jb3JlJyk7XG5cbi8qKlxuICogQSBzaW1wbGUgaGFzaCBvYmplY3QgaW5jbHVkaW5nIHJlY29yZCBmaWVsZCBpbmZvcm1hdGlvblxuICpcbiAqIEB0eXBlZGVmIHtPYmplY3R9IFJlY29yZFxuICovXG5cbi8qKlxuICogUmVtb3RlIHJlZmVyZW5jZSB0byByZWNvcmQgaW5mb3JtYXRpb25cbiAqXG4gKiBAcHJvdGVjdGVkXG4gKiBAY2xhc3NcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtDb25uZWN0aW9ufSBjb25uIC0gQ29ubmVjdGlvbiBvYmplY3RcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlIC0gU09iamVjdCB0eXBlXG4gKiBAcGFyYW0ge1N0cmluZ30gaWQgLSBSZWNvcmQgSURcbiAqL1xudmFyIFJlY29yZFJlZmVyZW5jZSA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oY29ubiwgdHlwZSwgaWQpIHtcbiAgdGhpcy5fY29ubiA9IGNvbm47XG4gIHRoaXMudHlwZSA9IHR5cGU7XG4gIHRoaXMuaWQgPSBpZDtcbn07XG5cbi8qKlxuICogUmV0cmlldmUgcmVjb3JkIGZpZWxkIGluZm9ybWF0aW9uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIE9wdGlvbnMgZm9yIHJlc3QgYXBpLlxuICogQHBhcmFtIHtDYWxsYmFjay48UmVjb3JkPn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48UmVjb3JkPn1cbiAqL1xuUmVjb3JkUmVmZXJlbmNlLnByb3RvdHlwZS5yZXRyaWV2ZSA9IGZ1bmN0aW9uKG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNhbGxiYWNrID0gb3B0aW9ucztcbiAgICBvcHRpb25zID0ge307XG4gIH1cbiAgcmV0dXJuIHRoaXMuX2Nvbm4ucmV0cmlldmUodGhpcy50eXBlLCB0aGlzLmlkLCBvcHRpb25zLCBjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIFVwZGF0ZSByZWNvcmQgZmllbGQgaW5mb3JtYXRpb25cbiAqXG4gKiBAcGFyYW0ge1JlY29yZH0gcmVjb3JkIC0gQSBSZWNvcmQgd2hpY2ggaW5jbHVkZXMgZmllbGRzIHRvIHVwZGF0ZVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIE9wdGlvbnMgZm9yIHJlc3QgYXBpLlxuICogQHBhcmFtIHtDYWxsYmFjay48UmVjb3JkUmVzdWx0Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48UmVjb3JkUmVzdWx0Pn1cbiAqL1xuUmVjb3JkUmVmZXJlbmNlLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbihyZWNvcmQsIG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNhbGxiYWNrID0gb3B0aW9ucztcbiAgICBvcHRpb25zID0ge307XG4gIH1cbiAgcmVjb3JkID0gXy5jbG9uZShyZWNvcmQpO1xuICByZWNvcmQuSWQgPSB0aGlzLmlkO1xuICByZXR1cm4gdGhpcy5fY29ubi51cGRhdGUodGhpcy50eXBlLCByZWNvcmQsIG9wdGlvbnMsIGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogU3lub255bSBvZiBSZWNvcmQjZGVzdHJveSgpXG4gKlxuICogQG1ldGhvZCBSZWNvcmRSZWZlcmVuY2UjZGVsZXRlXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gT3B0aW9ucyBmb3IgcmVzdCBhcGkuXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxSZWNvcmRSZXN1bHQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxSZWNvcmRSZXN1bHQ+fVxuICovXG5SZWNvcmRSZWZlcmVuY2UucHJvdG90eXBlW1wiZGVsZXRlXCJdID1cbi8qKlxuICogU3lub255bSBvZiBSZWNvcmQjZGVzdHJveSgpXG4gKlxuICogQG1ldGhvZCBSZWNvcmRSZWZlcmVuY2UjZGVsXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxSZWNvcmRSZXN1bHQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxSZWNvcmRSZXN1bHQ+fVxuICovXG5SZWNvcmRSZWZlcmVuY2UucHJvdG90eXBlLmRlbCA9XG4vKipcbiAqIERlbGV0ZSByZWNvcmQgZmllbGRcbiAqXG4gKiBAbWV0aG9kIFJlY29yZFJlZmVyZW5jZSNkZXN0cm95XG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gT3B0aW9ucyBmb3IgcmVzdCBhcGkuXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxSZWNvcmRSZXN1bHQ+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxSZWNvcmRSZXN1bHQ+fVxuICovXG5SZWNvcmRSZWZlcmVuY2UucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbihvcHRpb25zLCBjYWxsYmFjaykge1xuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYWxsYmFjayA9IG9wdGlvbnM7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIHJldHVybiB0aGlzLl9jb25uLmRlc3Ryb3kodGhpcy50eXBlLCB0aGlzLmlkLCBvcHRpb25zLCBjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIEdldCBibG9iIGZpZWxkIGFzIHN0cmVhbVxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBmaWVsZE5hbWUgLSBCbG9iIGZpZWxkIG5hbWVcbiAqIEByZXR1cm5zIHtzdHJlYW0uU3RyZWFtfVxuICovXG5SZWNvcmRSZWZlcmVuY2UucHJvdG90eXBlLmJsb2IgPSBmdW5jdGlvbihmaWVsZE5hbWUpIHtcbiAgdmFyIHVybCA9IFsgdGhpcy5fY29ubi5fYmFzZVVybCgpLCAnc29iamVjdHMnLCB0aGlzLnR5cGUsIHRoaXMuaWQsIGZpZWxkTmFtZSBdLmpvaW4oJy8nKTtcbiAgcmV0dXJuIHRoaXMuX2Nvbm4ucmVxdWVzdCh1cmwpLnN0cmVhbSgpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHJlcXVpcmVkID0gcmVxdWlyZSgnLi9fcmVxdWlyZWQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihuYW1lKSB7XG4gIGlmIChuYW1lID09PSAnLi9qc2ZvcmNlJyB8fCBuYW1lID09PSAnanNmb3JjZScpIHtcbiAgICBuYW1lID0gJy4vY29yZSc7XG4gIH1cbiAgdmFyIG0gPSByZXF1aXJlZFtuYW1lXTtcbiAgaWYgKHR5cGVvZiBtID09PSAndW5kZWZpbmVkJykge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIgKyBuYW1lICsgXCInXCIpO1xuICB9XG4gIHJldHVybiBtO1xufTtcbiIsIi8qKlxuICogQGZpbGUgTWFuYWdlcyBtZXRob2QgY2FsbCB0byBTT0FQIGVuZHBvaW50XG4gKiBAYXV0aG9yIFNoaW5pY2hpIFRvbWl0YSA8c2hpbmljaGkudG9taXRhQGdtYWlsLmNvbT5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyksXG4gICAgXyA9IHJlcXVpcmUoJ2xvZGFzaC9jb3JlJyksXG4gICAgeG1sMmpzID0gcmVxdWlyZSgneG1sMmpzJyksXG4gICAgSHR0cEFwaSA9IHJlcXVpcmUoJy4vaHR0cC1hcGknKTtcblxuXG4vKipcbiAqIENsYXNzIGZvciBTT0FQIGVuZHBvaW50IG9mIFNhbGVzZm9yY2VcbiAqXG4gKiBAcHJvdGVjdGVkXG4gKiBAY2xhc3NcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtDb25uZWN0aW9ufSBjb25uIC0gQ29ubmVjdGlvbiBpbnN0YW5jZVxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgLSBTT0FQIGVuZHBvaW50IHNldHRpbmcgb3B0aW9uc1xuICogQHBhcmFtIHtTdHJpbmd9IG9wdGlvbnMuZW5kcG9pbnRVcmwgLSBTT0FQIGVuZHBvaW50IFVSTFxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLnhtbG5zXSAtIFhNTCBuYW1lc3BhY2UgZm9yIG1ldGhvZCBjYWxsIChkZWZhdWx0IGlzIFwidXJuOnBhcnRuZXIuc29hcC5zZm9yY2UuY29tXCIpXG4gKi9cbnZhciBTT0FQID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihjb25uLCBvcHRpb25zKSB7XG4gIFNPQVAuc3VwZXJfLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIHRoaXMuX2VuZHBvaW50VXJsID0gb3B0aW9ucy5lbmRwb2ludFVybDtcbiAgdGhpcy5feG1sbnMgPSBvcHRpb25zLnhtbG5zIHx8ICd1cm46cGFydG5lci5zb2FwLnNmb3JjZS5jb20nO1xufTtcblxuaW5oZXJpdHMoU09BUCwgSHR0cEFwaSk7XG5cbi8qKlxuICogSW52b2tlIFNPQVAgY2FsbCB1c2luZyBtZXRob2QgYW5kIGFyZ3VtZW50c1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBtZXRob2QgLSBNZXRob2QgbmFtZVxuICogQHBhcmFtIHtPYmplY3R9IGFyZ3MgLSBBcmd1bWVudHMgZm9yIHRoZSBtZXRob2QgY2FsbFxuICogQHBhcmFtIHtPYmplY3R9IFtzY2hlbWFdIC0gU2NoZW1hIGRlZmluaXRpb24gb2YgcmVzcG9uc2UgbWVzc2FnZVxuICogQHBhcmFtIHtDYWxsYmFjay48T2JqZWN0Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48T2JqZWN0Pn1cbiAqL1xuU09BUC5wcm90b3R5cGUuaW52b2tlID0gZnVuY3Rpb24obWV0aG9kLCBhcmdzLCBzY2hlbWEsIGNhbGxiYWNrKSB7XG4gIGlmICh0eXBlb2Ygc2NoZW1hID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2FsbGJhY2sgPSBzY2hlbWE7XG4gICAgc2NoZW1hID0gbnVsbDtcbiAgfVxuICB2YXIgbWVzc2FnZSA9IHt9O1xuICBtZXNzYWdlW21ldGhvZF0gPSBhcmdzO1xuICByZXR1cm4gdGhpcy5yZXF1ZXN0KHtcbiAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICB1cmw6IHRoaXMuX2VuZHBvaW50VXJsLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgICdDb250ZW50LVR5cGUnOiAndGV4dC94bWwnLFxuICAgICAgJ1NPQVBBY3Rpb24nOiAnXCJcIidcbiAgICB9LFxuICAgIG1lc3NhZ2U6IG1lc3NhZ2VcbiAgfSkudGhlbihmdW5jdGlvbihyZXMpIHtcbiAgICByZXR1cm4gc2NoZW1hID8gY29udmVydFR5cGUocmVzLCBzY2hlbWEpIDogcmVzO1xuICB9KS50aGVuQ2FsbChjYWxsYmFjayk7XG59O1xuXG4vKiBAcHJpdmF0ZSAqL1xuZnVuY3Rpb24gY29udmVydFR5cGUodmFsdWUsIHNjaGVtYSkge1xuICBpZiAoXy5pc0FycmF5KHZhbHVlKSkge1xuICAgIHJldHVybiB2YWx1ZS5tYXAoZnVuY3Rpb24odikge1xuICAgICAgcmV0dXJuIGNvbnZlcnRUeXBlKHYsIHNjaGVtYSAmJiBzY2hlbWFbMF0pXG4gICAgfSk7XG4gIH0gZWxzZSBpZiAoXy5pc09iamVjdCh2YWx1ZSkpIHtcbiAgICBpZiAodmFsdWUuJCAmJiB2YWx1ZS4kWyd4c2k6bmlsJ10gPT09ICd0cnVlJykge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSBlbHNlIGlmIChfLmlzQXJyYXkoc2NoZW1hKSkge1xuICAgICAgcmV0dXJuIFsgY29udmVydFR5cGUodmFsdWUsIHNjaGVtYVswXSkgXTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIG8gPSB7fTtcbiAgICAgIGZvciAodmFyIGtleSBpbiB2YWx1ZSkge1xuICAgICAgICBvW2tleV0gPSBjb252ZXJ0VHlwZSh2YWx1ZVtrZXldLCBzY2hlbWEgJiYgc2NoZW1hW2tleV0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG87XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGlmIChfLmlzQXJyYXkoc2NoZW1hKSkge1xuICAgICAgcmV0dXJuIFsgY29udmVydFR5cGUodmFsdWUsIHNjaGVtYVswXSkgXTtcbiAgICB9IGVsc2UgaWYgKF8uaXNPYmplY3Qoc2NoZW1hKSkge1xuICAgICAgcmV0dXJuIHt9O1xuICAgIH0gZWxzZSB7XG4gICAgICBzd2l0Y2goc2NoZW1hKSB7XG4gICAgICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICAgICAgcmV0dXJuIFN0cmluZyh2YWx1ZSk7XG4gICAgICAgIGNhc2UgJ251bWJlcic6XG4gICAgICAgICAgcmV0dXJuIE51bWJlcih2YWx1ZSk7XG4gICAgICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAgICAgIHJldHVybiB2YWx1ZSA9PT0gJ3RydWUnO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLyoqIEBvdmVycmlkZSAqKi9cblNPQVAucHJvdG90eXBlLmJlZm9yZVNlbmQgPSBmdW5jdGlvbihyZXF1ZXN0KSB7XG4gIHJlcXVlc3QuYm9keSA9IHRoaXMuX2NyZWF0ZUVudmVsb3BlKHJlcXVlc3QubWVzc2FnZSk7XG59O1xuXG4vKiogQG92ZXJyaWRlICoqL1xuU09BUC5wcm90b3R5cGUuaXNTZXNzaW9uRXhwaXJlZCA9IGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gIHJldHVybiByZXNwb25zZS5zdGF0dXNDb2RlID09PSA1MDAgJiZcbiAgICAvPGZhdWx0Y29kZT5bYS16QS1aXSs6SU5WQUxJRF9TRVNTSU9OX0lEPFxcL2ZhdWx0Y29kZT4vLnRlc3QocmVzcG9uc2UuYm9keSk7XG59O1xuXG4vKiogQG92ZXJyaWRlICoqL1xuU09BUC5wcm90b3R5cGUucGFyc2VFcnJvciA9IGZ1bmN0aW9uKGJvZHkpIHtcbiAgdmFyIGVycm9yID0gbG9va3VwVmFsdWUoYm9keSwgWyAvOkVudmVsb3BlJC8sIC86Qm9keSQvLCAvOkZhdWx0JC8gXSk7XG4gIHJldHVybiB7XG4gICAgZXJyb3JDb2RlOiBlcnJvci5mYXVsdGNvZGUsXG4gICAgbWVzc2FnZTogZXJyb3IuZmF1bHRzdHJpbmdcbiAgfTtcbn07XG5cbi8qKiBAb3ZlcnJpZGUgKiovXG5TT0FQLnByb3RvdHlwZS5nZXRSZXNwb25zZUJvZHkgPSBmdW5jdGlvbihyZXNwb25zZSkge1xuICB2YXIgYm9keSA9IFNPQVAuc3VwZXJfLnByb3RvdHlwZS5nZXRSZXNwb25zZUJvZHkuY2FsbCh0aGlzLCByZXNwb25zZSk7XG4gIHJldHVybiBsb29rdXBWYWx1ZShib2R5LCBbIC86RW52ZWxvcGUkLywgLzpCb2R5JC8sIC8uKy8gXSk7XG59O1xuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIGxvb2t1cFZhbHVlKG9iaiwgcHJvcFJlZ0V4cHMpIHtcbiAgdmFyIHJlZ2V4cCA9IHByb3BSZWdFeHBzLnNoaWZ0KCk7XG4gIGlmICghcmVnZXhwKSB7XG4gICAgcmV0dXJuIG9iajtcbiAgfVxuICBlbHNlIHtcbiAgICBmb3IgKHZhciBwcm9wIGluIG9iaikge1xuICAgICAgaWYgKHJlZ2V4cC50ZXN0KHByb3ApKSB7XG4gICAgICAgIHJldHVybiBsb29rdXBWYWx1ZShvYmpbcHJvcF0sIHByb3BSZWdFeHBzKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiB0b1hNTChuYW1lLCB2YWx1ZSkge1xuICBpZiAoXy5pc09iamVjdChuYW1lKSkge1xuICAgIHZhbHVlID0gbmFtZTtcbiAgICBuYW1lID0gbnVsbDtcbiAgfVxuICBpZiAoXy5pc0FycmF5KHZhbHVlKSkge1xuICAgIHJldHVybiBfLm1hcCh2YWx1ZSwgZnVuY3Rpb24odikgeyByZXR1cm4gdG9YTUwobmFtZSwgdik7IH0pLmpvaW4oJycpO1xuICB9IGVsc2Uge1xuICAgIHZhciBhdHRycyA9IFtdO1xuICAgIHZhciBlbGVtcyA9IFtdO1xuICAgIGlmIChfLmlzT2JqZWN0KHZhbHVlKSkge1xuICAgICAgZm9yICh2YXIgayBpbiB2YWx1ZSkge1xuICAgICAgICB2YXIgdiA9IHZhbHVlW2tdO1xuICAgICAgICBpZiAoa1swXSA9PT0gJ0AnKSB7XG4gICAgICAgICAgayA9IGsuc3Vic3RyaW5nKDEpO1xuICAgICAgICAgIGF0dHJzLnB1c2goayArICc9XCInICsgdiArICdcIicpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGVsZW1zLnB1c2godG9YTUwoaywgdikpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB2YWx1ZSA9IGVsZW1zLmpvaW4oJycpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YWx1ZSA9IFN0cmluZyh2YWx1ZSlcbiAgICAgICAgLnJlcGxhY2UoLyYvZywgJyZhbXA7JylcbiAgICAgICAgLnJlcGxhY2UoLzwvZywgJyZsdDsnKVxuICAgICAgICAucmVwbGFjZSgvPi9nLCAnJmd0OycpXG4gICAgICAgIC5yZXBsYWNlKC9cIi9nLCAnJnF1b3Q7JylcbiAgICAgICAgLnJlcGxhY2UoLycvZywgJyZhcG9zOycpO1xuICAgIH1cbiAgICB2YXIgc3RhcnRUYWcgPSBuYW1lID8gJzwnICsgbmFtZSArIChhdHRycy5sZW5ndGggPiAwID8gJyAnICsgYXR0cnMuam9pbignICcpIDogJycpICsgJz4nIDogJyc7XG4gICAgdmFyIGVuZFRhZyA9IG5hbWUgPyAnPC8nICsgbmFtZSArICc+JyA6ICcnO1xuICAgIHJldHVybiAgc3RhcnRUYWcgKyB2YWx1ZSArIGVuZFRhZztcbiAgfVxufVxuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cblNPQVAucHJvdG90eXBlLl9jcmVhdGVFbnZlbG9wZSA9IGZ1bmN0aW9uKG1lc3NhZ2UpIHtcbiAgdmFyIGhlYWRlciA9IHt9O1xuICB2YXIgY29ubiA9IHRoaXMuX2Nvbm47XG4gIGlmIChjb25uLmFjY2Vzc1Rva2VuKSB7XG4gICAgaGVhZGVyLlNlc3Npb25IZWFkZXIgPSB7IHNlc3Npb25JZDogdGhpcy5fY29ubi5hY2Nlc3NUb2tlbiB9O1xuICB9XG4gIGlmIChjb25uLmNhbGxPcHRpb25zKSB7XG4gICAgaGVhZGVyLkNhbGxPcHRpb25zID0gY29ubi5jYWxsT3B0aW9ucztcbiAgfVxuICByZXR1cm4gW1xuICAgICc8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz4nLFxuICAgICc8c29hcGVudjpFbnZlbG9wZSB4bWxuczpzb2FwZW52PVwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvc29hcC9lbnZlbG9wZS9cIicsXG4gICAgJyB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwiJyxcbiAgICAnIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlXCI+JyxcbiAgICAnPHNvYXBlbnY6SGVhZGVyIHhtbG5zPVwiJyArIHRoaXMuX3htbG5zICsgJ1wiPicsXG4gICAgdG9YTUwoaGVhZGVyKSxcbiAgICAnPC9zb2FwZW52OkhlYWRlcj4nLFxuICAgICc8c29hcGVudjpCb2R5IHhtbG5zPVwiJyArIHRoaXMuX3htbG5zICsgJ1wiPicsXG4gICAgdG9YTUwobWVzc2FnZSksXG4gICAgJzwvc29hcGVudjpCb2R5PicsXG4gICAgJzwvc29hcGVudjpFbnZlbG9wZT4nXG4gIF0uam9pbignJyk7XG59O1xuIiwiLyoqXG4gKiBAZmlsZSBSZXByZXNlbnRzIFNhbGVzZm9yY2UgU09iamVjdFxuICogQGF1dGhvciBTaGluaWNoaSBUb21pdGEgPHNoaW5pY2hpLnRvbWl0YUBnbWFpbC5jb20+XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgXyAgICAgID0gcmVxdWlyZSgnbG9kYXNoL2NvcmUnKSxcbiAgICBSZWNvcmQgPSByZXF1aXJlKCcuL3JlY29yZCcpLFxuICAgIFF1ZXJ5ICA9IHJlcXVpcmUoJy4vcXVlcnknKSxcbiAgICBDYWNoZSAgPSByZXF1aXJlKCcuL2NhY2hlJyksXG4gICAgUXVpY2tBY3Rpb24gPSByZXF1aXJlKCcuL3F1aWNrLWFjdGlvbicpO1xuXG4vKipcbiAqIEEgY2xhc3MgZm9yIG9yZ2FuaXppbmcgYWxsIFNPYmplY3QgYWNjZXNzXG4gKlxuICogQGNvbnN0cnVjdG9yXG4gKi9cbnZhciBTT2JqZWN0ID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihjb25uLCB0eXBlKSB7XG4gIHRoaXMuX2Nvbm4gPSBjb25uO1xuICB0aGlzLnR5cGUgPSB0eXBlO1xuICB2YXIgY2FjaGVPcHRpb25zID0geyBrZXk6IFwiZGVzY3JpYmUuXCIgKyB0aGlzLnR5cGUgfTtcbiAgdGhpcy5kZXNjcmliZSQgPSBjb25uLmNhY2hlLm1ha2VDYWNoZWFibGUodGhpcy5kZXNjcmliZSwgdGhpcywgY2FjaGVPcHRpb25zKTtcbiAgdGhpcy5kZXNjcmliZSA9IGNvbm4uY2FjaGUubWFrZVJlc3BvbnNlQ2FjaGVhYmxlKHRoaXMuZGVzY3JpYmUsIHRoaXMsIGNhY2hlT3B0aW9ucyk7XG5cbiAgY2FjaGVPcHRpb25zID0geyBrZXk6IFwibGF5b3V0cy5cIiArIHRoaXMudHlwZSB9O1xuICB0aGlzLmxheW91dHMkID0gY29ubi5jYWNoZS5tYWtlQ2FjaGVhYmxlKHRoaXMubGF5b3V0cywgdGhpcywgY2FjaGVPcHRpb25zKTtcbiAgdGhpcy5sYXlvdXRzID0gY29ubi5jYWNoZS5tYWtlUmVzcG9uc2VDYWNoZWFibGUodGhpcy5sYXlvdXRzLCB0aGlzLCBjYWNoZU9wdGlvbnMpO1xuXG4gIGNhY2hlT3B0aW9ucyA9IHsga2V5OiBcImNvbXBhY3RMYXlvdXRzLlwiICsgdGhpcy50eXBlIH07XG4gIHRoaXMuY29tcGFjdExheW91dHMkID0gY29ubi5jYWNoZS5tYWtlQ2FjaGVhYmxlKHRoaXMuY29tcGFjdExheW91dHMsIHRoaXMsIGNhY2hlT3B0aW9ucyk7XG4gIHRoaXMuY29tcGFjdExheW91dHMgPSBjb25uLmNhY2hlLm1ha2VSZXNwb25zZUNhY2hlYWJsZSh0aGlzLmNvbXBhY3RMYXlvdXRzLCB0aGlzLCBjYWNoZU9wdGlvbnMpO1xuXG4gIGNhY2hlT3B0aW9ucyA9IHsga2V5OiBcImFwcHJvdmFsTGF5b3V0cy5cIiArIHRoaXMudHlwZSB9O1xuICB0aGlzLmFwcHJvdmFsTGF5b3V0cyQgPSBjb25uLmNhY2hlLm1ha2VDYWNoZWFibGUodGhpcy5hcHByb3ZhbExheW91dHMsIHRoaXMsIGNhY2hlT3B0aW9ucyk7XG4gIHRoaXMuYXBwcm92YWxMYXlvdXRzID0gY29ubi5jYWNoZS5tYWtlUmVzcG9uc2VDYWNoZWFibGUodGhpcy5hcHByb3ZhbExheW91dHMsIHRoaXMsIGNhY2hlT3B0aW9ucyk7XG59O1xuXG4vKipcbiAqIFN5bm9ueW0gb2YgU09iamVjdCNjcmVhdGUoKVxuICpcbiAqIEBtZXRob2QgU09iamVjdCNpbnNlcnRcbiAqIEBwYXJhbSB7UmVjb3JkfEFycmF5LjxSZWNvcmQ+fSByZWNvcmRzIC0gQSByZWNvcmQgb3IgYXJyYXkgb2YgcmVjb3JkcyB0byBjcmVhdGVcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFJlY29yZFJlc3VsdHxBcnJheS48UmVjb3JkUmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPFJlY29yZFJlc3VsdHxBcnJheS48UmVjb3JkUmVzdWx0Pj59XG4gKi9cbi8qKlxuICogQ3JlYXRlIHJlY29yZHNcbiAqXG4gKiBAbWV0aG9kIFNPYmplY3QjY3JlYXRlXG4gKiBAcGFyYW0ge1JlY29yZHxBcnJheS48UmVjb3JkPn0gcmVjb3JkcyAtIEEgcmVjb3JkIG9yIGFycmF5IG9mIHJlY29yZHMgdG8gY3JlYXRlXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gT3B0aW9ucyBmb3IgcmVzdCBhcGkuXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxSZWNvcmRSZXN1bHR8QXJyYXkuPFJlY29yZFJlc3VsdD4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxSZWNvcmRSZXN1bHR8QXJyYXkuPFJlY29yZFJlc3VsdD4+fVxuICovXG5TT2JqZWN0LnByb3RvdHlwZS5pbnNlcnQgPVxuU09iamVjdC5wcm90b3R5cGUuY3JlYXRlID0gZnVuY3Rpb24ocmVjb3Jkcywgb3B0aW9ucywgY2FsbGJhY2spIHtcbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2FsbGJhY2sgPSBvcHRpb25zO1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICByZXR1cm4gdGhpcy5fY29ubi5jcmVhdGUodGhpcy50eXBlLCByZWNvcmRzLCBvcHRpb25zLCBjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIFJldHJpZXZlIHNwZWNpZmllZCByZWNvcmRzXG4gKlxuICogQHBhcmFtIHtTdHJpbmd8QXJyYXkuPFN0cmluZz59IGlkcyAtIEEgcmVjb3JkIElEIG9yIGFycmF5IG9mIHJlY29yZCBJRHNcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSBPcHRpb25zIGZvciByZXN0IGFwaS5cbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFJlY29yZHxBcnJheS48UmVjb3JkPj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPFJlY29yZHxBcnJheS48UmVjb3JkPj59XG4gKi9cblNPYmplY3QucHJvdG90eXBlLnJldHJpZXZlID0gZnVuY3Rpb24oaWRzLCBvcHRpb25zLCBjYWxsYmFjaykge1xuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYWxsYmFjayA9IG9wdGlvbnM7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIHJldHVybiB0aGlzLl9jb25uLnJldHJpZXZlKHRoaXMudHlwZSwgaWRzLCBvcHRpb25zLCBjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIFVwZGF0ZSByZWNvcmRzXG4gKlxuICogQHBhcmFtIHtSZWNvcmR8QXJyYXkuPFJlY29yZD59IHJlY29yZHMgLSBBIHJlY29yZCBvciBhcnJheSBvZiByZWNvcmRzIHRvIHVwZGF0ZVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIE9wdGlvbnMgZm9yIHJlc3QgYXBpLlxuICogQHBhcmFtIHtDYWxsYmFjay48UmVjb3JkUmVzdWx0fEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48UmVjb3JkUmVzdWx0fEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn1cbiAqL1xuU09iamVjdC5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24ocmVjb3Jkcywgb3B0aW9ucywgY2FsbGJhY2spIHtcbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2FsbGJhY2sgPSBvcHRpb25zO1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICByZXR1cm4gdGhpcy5fY29ubi51cGRhdGUodGhpcy50eXBlLCByZWNvcmRzLCBvcHRpb25zLCBjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIFVwc2VydCByZWNvcmRzXG4gKlxuICogQHBhcmFtIHtSZWNvcmR8QXJyYXkuPFJlY29yZD59IHJlY29yZHMgLSBSZWNvcmQgb3IgYXJyYXkgb2YgcmVjb3JkcyB0byB1cHNlcnRcbiAqIEBwYXJhbSB7U3RyaW5nfSBleHRJZEZpZWxkIC0gRXh0ZXJuYWwgSUQgZmllbGQgbmFtZVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIE9wdGlvbnMgZm9yIHJlc3QgYXBpLlxuICogQHBhcmFtIHtDYWxsYmFjay48UmVjb3JkUmVzdWx0fEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48UmVjb3JkUmVzdWx0fEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn1cbiAqL1xuU09iamVjdC5wcm90b3R5cGUudXBzZXJ0ID0gZnVuY3Rpb24ocmVjb3JkcywgZXh0SWRGaWVsZCwgb3B0aW9ucywgY2FsbGJhY2spIHtcbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2FsbGJhY2sgPSBvcHRpb25zO1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICByZXR1cm4gdGhpcy5fY29ubi51cHNlcnQodGhpcy50eXBlLCByZWNvcmRzLCBleHRJZEZpZWxkLCBvcHRpb25zLCBjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIFN5bm9ueW0gb2YgU09iamVjdCNkZXN0cm95KClcbiAqXG4gKiBAbWV0aG9kIFNPYmplY3QjZGVsZXRlXG4gKiBAcGFyYW0ge1N0cmluZ3xBcnJheS48U3RyaW5nPn0gaWRzIC0gQSBJRCBvciBhcnJheSBvZiBJRHMgdG8gZGVsZXRlXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxSZWNvcmRSZXN1bHR8QXJyYXkuPFJlY29yZFJlc3VsdD4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxSZWNvcmRSZXN1bHR8QXJyYXkuPFJlY29yZFJlc3VsdD4+fVxuICovXG4vKipcbiAqIFN5bm9ueW0gb2YgU09iamVjdCNkZXN0cm95KClcbiAqXG4gKiBAbWV0aG9kIFNPYmplY3QjZGVsXG4gKiBAcGFyYW0ge1N0cmluZ3xBcnJheS48U3RyaW5nPn0gaWRzIC0gQSBJRCBvciBhcnJheSBvZiBJRHMgdG8gZGVsZXRlXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxSZWNvcmRSZXN1bHR8QXJyYXkuPFJlY29yZFJlc3VsdD4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxSZWNvcmRSZXN1bHR8QXJyYXkuPFJlY29yZFJlc3VsdD4+fVxuICovXG4vKipcbiAqIERlbGV0ZSByZWNvcmRzXG4gKlxuICogQG1ldGhvZCBTT2JqZWN0I2Rlc3Ryb3lcbiAqIEBwYXJhbSB7U3RyaW5nfEFycmF5LjxTdHJpbmc+fSBpZHMgLSBBIElEIG9yIGFycmF5IG9mIElEcyB0byBkZWxldGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSBPcHRpb25zIGZvciByZXN0IGFwaS5cbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFJlY29yZFJlc3VsdHxBcnJheS48UmVjb3JkUmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPFJlY29yZFJlc3VsdHxBcnJheS48UmVjb3JkUmVzdWx0Pj59XG4gKi9cblNPYmplY3QucHJvdG90eXBlW1wiZGVsZXRlXCJdID1cblNPYmplY3QucHJvdG90eXBlLmRlbCA9XG5TT2JqZWN0LnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24oaWRzLCBvcHRpb25zLCBjYWxsYmFjaykge1xuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYWxsYmFjayA9IG9wdGlvbnM7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIHJldHVybiB0aGlzLl9jb25uLmRlc3Ryb3kodGhpcy50eXBlLCBpZHMsIG9wdGlvbnMsIGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogRGVzY3JpYmUgU09iamVjdCBtZXRhZGF0YVxuICpcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPERlc2NyaWJlU09iamVjdFJlc3VsdD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPERlc2NyaWJlU09iamVjdFJlc3VsdD59XG4gKi9cblNPYmplY3QucHJvdG90eXBlLmRlc2NyaWJlID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgcmV0dXJuIHRoaXMuX2Nvbm4uZGVzY3JpYmUodGhpcy50eXBlLCBjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIEdldCByZWNvcmQgcmVwcmVzZW50YXRpb24gaW5zdGFuY2UgYnkgZ2l2ZW4gaWRcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gaWQgLSBBIHJlY29yZCBJRFxuICogQHJldHVybnMge1JlY29yZFJlZmVyZW5jZX1cbiAqL1xuU09iamVjdC5wcm90b3R5cGUucmVjb3JkID0gZnVuY3Rpb24oaWQpIHtcbiAgcmV0dXJuIG5ldyBSZWNvcmQodGhpcy5fY29ubiwgdGhpcy50eXBlLCBpZCk7XG59O1xuXG4vKipcbiAqIEZpbmQgYW5kIGZldGNoIHJlY29yZHMgd2hpY2ggbWF0Y2hlcyBnaXZlbiBjb25kaXRpb25zXG4gKlxuICogQHBhcmFtIHtPYmplY3R8U3RyaW5nfSBbY29uZGl0aW9uc10gLSBDb25kaXRpb25zIGluIEpTT04gb2JqZWN0IChNb25nb0RCLWxpa2UpLCBvciByYXcgU09RTCBXSEVSRSBjbGF1c2Ugc3RyaW5nLlxuICogQHBhcmFtIHtPYmplY3R8QXJyYXkuPFN0cmluZz58U3RyaW5nfSBbZmllbGRzXSAtIEZpZWxkcyB0byBmZXRjaC4gRm9ybWF0IGNhbiBiZSBpbiBKU09OIG9iamVjdCAoTW9uZ29EQi1saWtlKSwgYXJyYXkgb2YgZmllbGQgbmFtZXMsIG9yIGNvbW1hLXNlcGFyYXRlZCBmaWVsZCBuYW1lcy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSBRdWVyeSBvcHRpb25zLlxuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLmxpbWl0XSAtIE1heGltdW0gbnVtYmVyIG9mIHJlY29yZHMgdGhlIHF1ZXJ5IHdpbGwgcmV0dXJuLlxuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLm9mZnNldF0gLSBPZmZzZXQgbnVtYmVyIHdoZXJlIGJlZ2lucyByZXR1cm5pbmcgcmVzdWx0cy5cbiAqIEBwYXJhbSB7TnVtYmVyfSBbb3B0aW9ucy5za2lwXSAtIFN5bm9ueW0gb2Ygb3B0aW9ucy5vZmZzZXQuXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxBcnJheS48UmVjb3JkPj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1F1ZXJ5LjxBcnJheS48UmVjb3JkPj59XG4gKi9cblNPYmplY3QucHJvdG90eXBlLmZpbmQgPSBmdW5jdGlvbihjb25kaXRpb25zLCBmaWVsZHMsIG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gIGlmICh0eXBlb2YgY29uZGl0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNhbGxiYWNrID0gY29uZGl0aW9ucztcbiAgICBjb25kaXRpb25zID0ge307XG4gICAgZmllbGRzID0gbnVsbDtcbiAgICBvcHRpb25zID0gbnVsbDtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZmllbGRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2FsbGJhY2sgPSBmaWVsZHM7XG4gICAgZmllbGRzID0gbnVsbDtcbiAgICBvcHRpb25zID0gbnVsbDtcbiAgfSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNhbGxiYWNrID0gb3B0aW9ucztcbiAgICBvcHRpb25zID0gbnVsbDtcbiAgfVxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgdmFyIGNvbmZpZyA9IHtcbiAgICBmaWVsZHM6IGZpZWxkcyxcbiAgICBpbmNsdWRlczogb3B0aW9ucy5pbmNsdWRlcyxcbiAgICB0YWJsZTogdGhpcy50eXBlLFxuICAgIGNvbmRpdGlvbnM6IGNvbmRpdGlvbnMsXG4gICAgbGltaXQ6IG9wdGlvbnMubGltaXQsXG4gICAgc29ydDogb3B0aW9ucy5zb3J0LFxuICAgIG9mZnNldDogb3B0aW9ucy5vZmZzZXQgfHwgb3B0aW9ucy5za2lwXG4gIH07XG4gIHZhciBxdWVyeSA9IG5ldyBRdWVyeSh0aGlzLl9jb25uLCBjb25maWcsIG9wdGlvbnMpO1xuICBxdWVyeS5zZXRSZXNwb25zZVRhcmdldChRdWVyeS5SZXNwb25zZVRhcmdldHMuUmVjb3Jkcyk7XG4gIGlmIChjYWxsYmFjaykgeyBxdWVyeS5ydW4oY2FsbGJhY2spOyB9XG4gIHJldHVybiBxdWVyeTtcbn07XG5cbi8qKlxuICogRmV0Y2ggb25lIHJlY29yZCB3aGljaCBtYXRjaGVzIGdpdmVuIGNvbmRpdGlvbnNcbiAqXG4gKiBAcGFyYW0ge09iamVjdHxTdHJpbmd9IFtjb25kaXRpb25zXSAtIENvbmRpdGlvbnMgaW4gSlNPTiBvYmplY3QgKE1vbmdvREItbGlrZSksIG9yIHJhdyBTT1FMIFdIRVJFIGNsYXVzZSBzdHJpbmcuXG4gKiBAcGFyYW0ge09iamVjdHxBcnJheS48U3RyaW5nPnxTdHJpbmd9IFtmaWVsZHNdIC0gRmllbGRzIHRvIGZldGNoLiBGb3JtYXQgY2FuIGJlIGluIEpTT04gb2JqZWN0IChNb25nb0RCLWxpa2UpLCBhcnJheSBvZiBmaWVsZCBuYW1lcywgb3IgY29tbWEtc2VwYXJhdGVkIGZpZWxkIG5hbWVzLlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIFF1ZXJ5IG9wdGlvbnMuXG4gKiBAcGFyYW0ge051bWJlcn0gW29wdGlvbnMubGltaXRdIC0gTWF4aW11bSBudW1iZXIgb2YgcmVjb3JkcyB0aGUgcXVlcnkgd2lsbCByZXR1cm4uXG4gKiBAcGFyYW0ge051bWJlcn0gW29wdGlvbnMub2Zmc2V0XSAtIE9mZnNldCBudW1iZXIgd2hlcmUgYmVnaW5zIHJldHVybmluZyByZXN1bHRzLlxuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLnNraXBdIC0gU3lub255bSBvZiBvcHRpb25zLm9mZnNldC5cbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFJlY29yZD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1F1ZXJ5LjxSZWNvcmQ+fVxuICovXG5TT2JqZWN0LnByb3RvdHlwZS5maW5kT25lID0gZnVuY3Rpb24oY29uZGl0aW9ucywgZmllbGRzLCBvcHRpb25zLCBjYWxsYmFjaykge1xuICBpZiAodHlwZW9mIGNvbmRpdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYWxsYmFjayA9IGNvbmRpdGlvbnM7XG4gICAgY29uZGl0aW9ucyA9IHt9O1xuICAgIGZpZWxkcyA9IG51bGw7XG4gICAgb3B0aW9ucyA9IG51bGw7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGZpZWxkcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNhbGxiYWNrID0gZmllbGRzO1xuICAgIGZpZWxkcyA9IG51bGw7XG4gICAgb3B0aW9ucyA9IG51bGw7XG4gIH0gZWxzZSBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYWxsYmFjayA9IG9wdGlvbnM7XG4gICAgb3B0aW9ucyA9IG51bGw7XG4gIH1cbiAgb3B0aW9ucyA9IF8uZXh0ZW5kKG9wdGlvbnMgfHwge30sIHsgbGltaXQ6IDEgfSk7XG4gIHZhciBxdWVyeSA9IHRoaXMuZmluZChjb25kaXRpb25zLCBmaWVsZHMsIG9wdGlvbnMpO1xuICBxdWVyeS5zZXRSZXNwb25zZVRhcmdldChRdWVyeS5SZXNwb25zZVRhcmdldHMuU2luZ2xlUmVjb3JkKTtcbiAgaWYgKGNhbGxiYWNrKSB7IHF1ZXJ5LnJ1bihjYWxsYmFjayk7IH1cbiAgcmV0dXJuIHF1ZXJ5O1xufTtcblxuLyoqXG4gKiBGaW5kIGFuZCBmZXRjaCByZWNvcmRzIG9ubHkgYnkgc3BlY2lmeWluZyBmaWVsZHMgdG8gZmV0Y2guXG4gKlxuICogQHBhcmFtIHtPYmplY3R8QXJyYXkuPFN0cmluZz58U3RyaW5nfSBbZmllbGRzXSAtIEZpZWxkcyB0byBmZXRjaC4gRm9ybWF0IGNhbiBiZSBpbiBKU09OIG9iamVjdCAoTW9uZ29EQi1saWtlKSwgYXJyYXkgb2YgZmllbGQgbmFtZXMsIG9yIGNvbW1hLXNlcGFyYXRlZCBmaWVsZCBuYW1lcy5cbiAqIEBwYXJhbSB7Q2FsbGJhY2suPEFycmF5LjxSZWNvcmQ+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UXVlcnkuPEFycmF5LjxSZWNvcmQ+Pn1cbiAqL1xuU09iamVjdC5wcm90b3R5cGUuc2VsZWN0ID0gZnVuY3Rpb24oZmllbGRzLCBjYWxsYmFjaykge1xuICByZXR1cm4gdGhpcy5maW5kKG51bGwsIGZpZWxkcywgbnVsbCwgY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBDb3VudCBudW0gb2YgcmVjb3JkcyB3aGljaCBtYXRjaGVzIGdpdmVuIGNvbmRpdGlvbnNcbiAqXG4gKiBAcGFyYW0ge09iamVjdHxTdHJpbmd9IFtjb25kaXRpb25zXSAtIENvbmRpdGlvbnMgaW4gSlNPTiBvYmplY3QgKE1vbmdvREItbGlrZSksIG9yIHJhdyBTT1FMIFdIRVJFIGNsYXVzZSBzdHJpbmcuXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxOdW1iZXI+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtRdWVyeS48TnVtYmVyPn1cbiAqL1xuU09iamVjdC5wcm90b3R5cGUuY291bnQgPSBmdW5jdGlvbihjb25kaXRpb25zLCBjYWxsYmFjaykge1xuICBpZiAodHlwZW9mIGNvbmRpdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYWxsYmFjayA9IGNvbmRpdGlvbnM7XG4gICAgY29uZGl0aW9ucyA9IHt9O1xuICB9XG4gIHZhciBxdWVyeSA9IHRoaXMuZmluZChjb25kaXRpb25zLCB7IFwiY291bnQoKVwiIDogdHJ1ZSB9KTtcbiAgcXVlcnkuc2V0UmVzcG9uc2VUYXJnZXQoXCJDb3VudFwiKTtcbiAgaWYgKGNhbGxiYWNrKSB7IHF1ZXJ5LnJ1bihjYWxsYmFjayk7IH1cbiAgcmV0dXJuIHF1ZXJ5O1xufTtcblxuXG4vKipcbiAqIENhbGwgQnVsayNsb2FkKCkgdG8gZXhlY3V0ZSBidWxrbG9hZCwgcmV0dXJuaW5nIGJhdGNoIG9iamVjdFxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBvcGVyYXRpb24gLSBCdWxrIGxvYWQgb3BlcmF0aW9uICgnaW5zZXJ0JywgJ3VwZGF0ZScsICd1cHNlcnQnLCAnZGVsZXRlJywgb3IgJ2hhcmREZWxldGUnKVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIE9wdGlvbnMgZm9yIGJ1bGsgbG9hZGluZyBvcGVyYXRpb25cbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5leHRJZEZpZWxkXSAtIEV4dGVybmFsIElEIGZpZWxkIG5hbWUgKHVzZWQgd2hlbiB1cHNlcnQgb3BlcmF0aW9uKS5cbiAqIEBwYXJhbSB7QXJyYXkuPFJlY29yZD58c3RyZWFtLlN0cmVhbXxTdHJpbmd9IFtpbnB1dF0gLSBJbnB1dCBzb3VyY2UgZm9yIGJ1bGtsb2FkLiBBY2NlcHRzIGFycmF5IG9mIHJlY29yZHMsIENTdiBzdHJpbmcsIGFuZCBDU1YgZGF0YSBpbnB1dCBzdHJlYW0uXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxBcnJheS48UmVjb3JkUmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge0J1bGt+QmF0Y2h9XG4gKi9cblNPYmplY3QucHJvdG90eXBlLmJ1bGtsb2FkID0gZnVuY3Rpb24ob3BlcmF0aW9uLCBvcHRpb25zLCBpbnB1dCwgY2FsbGJhY2spIHtcbiAgcmV0dXJuIHRoaXMuX2Nvbm4uYnVsay5sb2FkKHRoaXMudHlwZSwgb3BlcmF0aW9uLCBvcHRpb25zLCBpbnB1dCwgY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBTeW5vbnltIG9mIFNPYmplY3QjY3JlYXRlQnVsaygpXG4gKlxuICogQG1ldGhvZCBTT2JqZWN0I2luc2VydEJ1bGtcbiAqIEBwYXJhbSB7QXJyYXkuPFJlY29yZD58c3RyZWFtLlN0cmVhbXxTdHJpbmd9IFtpbnB1dF0gLSBJbnB1dCBzb3VyY2UgZm9yIGJ1bGsgaW5zZXJ0LiBBY2NlcHRzIGFycmF5IG9mIHJlY29yZHMsIENTdiBzdHJpbmcsIGFuZCBDU1YgZGF0YSBpbnB1dCBzdHJlYW0uXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxBcnJheS48UmVjb3JkUmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge0J1bGt+QmF0Y2h9XG4gKi9cbi8qKlxuICogQnVsa2x5IGluc2VydCBpbnB1dCBkYXRhIHVzaW5nIGJ1bGsgQVBJXG4gKlxuICogQG1ldGhvZCBTT2JqZWN0I2NyZWF0ZUJ1bGtcbiAqIEBwYXJhbSB7QXJyYXkuPFJlY29yZD58c3RyZWFtLlN0cmVhbXxTdHJpbmd9IFtpbnB1dF0gLSBJbnB1dCBzb3VyY2UgZm9yIGJ1bGsgaW5zZXJ0LiBBY2NlcHRzIGFycmF5IG9mIHJlY29yZHMsIENTdiBzdHJpbmcsIGFuZCBDU1YgZGF0YSBpbnB1dCBzdHJlYW0uXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxBcnJheS48UmVjb3JkUmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge0J1bGt+QmF0Y2h9XG4gKi9cblNPYmplY3QucHJvdG90eXBlLmluc2VydEJ1bGsgPVxuU09iamVjdC5wcm90b3R5cGUuY3JlYXRlQnVsayA9IGZ1bmN0aW9uKGlucHV0LCBjYWxsYmFjaykge1xuICByZXR1cm4gdGhpcy5idWxrbG9hZChcImluc2VydFwiLCBpbnB1dCwgY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBCdWxrbHkgdXBkYXRlIHJlY29yZHMgYnkgaW5wdXQgZGF0YSB1c2luZyBidWxrIEFQSVxuICpcbiAqIEBwYXJhbSB7QXJyYXkuPFJlY29yZD58c3RyZWFtLlN0cmVhbXxTdHJpbmd9IFtpbnB1dF0gLSBJbnB1dCBzb3VyY2UgZm9yIGJ1bGsgdXBkYXRlIEFjY2VwdHMgYXJyYXkgb2YgcmVjb3JkcywgQ1N2IHN0cmluZywgYW5kIENTViBkYXRhIGlucHV0IHN0cmVhbS5cbiAqIEBwYXJhbSB7Q2FsbGJhY2suPEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7QnVsa35CYXRjaH1cbiAqL1xuU09iamVjdC5wcm90b3R5cGUudXBkYXRlQnVsayA9IGZ1bmN0aW9uKGlucHV0LCBjYWxsYmFjaykge1xuICByZXR1cm4gdGhpcy5idWxrbG9hZChcInVwZGF0ZVwiLCBpbnB1dCwgY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBCdWxrbHkgdXBzZXJ0IHJlY29yZHMgYnkgaW5wdXQgZGF0YSB1c2luZyBidWxrIEFQSVxuICpcbiAqIEBwYXJhbSB7QXJyYXkuPFJlY29yZD58c3RyZWFtLlN0cmVhbXxTdHJpbmd9IFtpbnB1dF0gLSBJbnB1dCBzb3VyY2UgZm9yIGJ1bGsgdXBzZXJ0LiBBY2NlcHRzIGFycmF5IG9mIHJlY29yZHMsIENTdiBzdHJpbmcsIGFuZCBDU1YgZGF0YSBpbnB1dCBzdHJlYW0uXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuZXh0SWRGaWVsZF0gLSBFeHRlcm5hbCBJRCBmaWVsZCBuYW1lXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxBcnJheS48UmVjb3JkUmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge0J1bGt+QmF0Y2h9XG4gKi9cblNPYmplY3QucHJvdG90eXBlLnVwc2VydEJ1bGsgPSBmdW5jdGlvbihpbnB1dCwgZXh0SWRGaWVsZCwgY2FsbGJhY2spIHtcbiAgcmV0dXJuIHRoaXMuYnVsa2xvYWQoXCJ1cHNlcnRcIiwgeyBleHRJZEZpZWxkOiBleHRJZEZpZWxkIH0sIGlucHV0LCBjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIFN5bm9ueW0gb2YgU09iamVjdCNkZXN0cm95QnVsaygpXG4gKlxuICogQG1ldGhvZCBTT2JqZWN0I2RlbGV0ZUJ1bGtcbiAqIEBwYXJhbSB7QXJyYXkuPFJlY29yZD58c3RyZWFtLlN0cmVhbXxTdHJpbmd9IFtpbnB1dF0gLSBJbnB1dCBzb3VyY2UgZm9yIGJ1bGsgZGVsZXRlLiBBY2NlcHRzIGFycmF5IG9mIHJlY29yZHMsIENTdiBzdHJpbmcsIGFuZCBDU1YgZGF0YSBpbnB1dCBzdHJlYW0uXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxBcnJheS48UmVjb3JkUmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge0J1bGt+QmF0Y2h9XG4gKi9cbi8qKlxuICogQnVsa2x5IGRlbGV0ZSByZWNvcmRzIHNwZWNpZmllZCBieSBpbnB1dCBkYXRhIHVzaW5nIGJ1bGsgQVBJXG4gKlxuICogQG1ldGhvZCBTT2JqZWN0I2Rlc3Ryb3lCdWxrXG4gKiBAcGFyYW0ge0FycmF5LjxSZWNvcmQ+fHN0cmVhbS5TdHJlYW18U3RyaW5nfSBbaW5wdXRdIC0gSW5wdXQgc291cmNlIGZvciBidWxrIGRlbGV0ZS4gQWNjZXB0cyBhcnJheSBvZiByZWNvcmRzLCBDU3Ygc3RyaW5nLCBhbmQgQ1NWIGRhdGEgaW5wdXQgc3RyZWFtLlxuICogQHBhcmFtIHtDYWxsYmFjay48QXJyYXkuPFJlY29yZFJlc3VsdD4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtCdWxrfkJhdGNofVxuICovXG5TT2JqZWN0LnByb3RvdHlwZS5kZWxldGVCdWxrID1cblNPYmplY3QucHJvdG90eXBlLmRlc3Ryb3lCdWxrID0gZnVuY3Rpb24oaW5wdXQsIGNhbGxiYWNrKSB7XG4gIHJldHVybiB0aGlzLmJ1bGtsb2FkKFwiZGVsZXRlXCIsIGlucHV0LCBjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIFN5bm9ueW0gb2YgU09iamVjdCNkZXN0cm95SGFyZEJ1bGsoKVxuICpcbiAqIEBtZXRob2QgU09iamVjdCNkZWxldGVIYXJkQnVsa1xuICogQHBhcmFtIHtBcnJheS48UmVjb3JkPnxzdHJlYW0uU3RyZWFtfFN0cmluZ30gW2lucHV0XSAtIElucHV0IHNvdXJjZSBmb3IgYnVsayBkZWxldGUuIEFjY2VwdHMgYXJyYXkgb2YgcmVjb3JkcywgQ1N2IHN0cmluZywgYW5kIENTViBkYXRhIGlucHV0IHN0cmVhbS5cbiAqIEBwYXJhbSB7Q2FsbGJhY2suPEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7QnVsa35CYXRjaH1cbiAqL1xuLyoqXG4gKiBCdWxrbHkgaGFyZCBkZWxldGUgcmVjb3JkcyBzcGVjaWZpZWQgaW4gaW5wdXQgZGF0YSB1c2luZyBidWxrIEFQSVxuICpcbiAqIEBtZXRob2QgU09iamVjdCNkZXN0cm95SGFyZEJ1bGtcbiAqIEBwYXJhbSB7QXJyYXkuPFJlY29yZD58c3RyZWFtLlN0cmVhbXxTdHJpbmd9IFtpbnB1dF0gLSBJbnB1dCBzb3VyY2UgZm9yIGJ1bGsgZGVsZXRlLiBBY2NlcHRzIGFycmF5IG9mIHJlY29yZHMsIENTdiBzdHJpbmcsIGFuZCBDU1YgZGF0YSBpbnB1dCBzdHJlYW0uXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxBcnJheS48UmVjb3JkUmVzdWx0Pj59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge0J1bGt+QmF0Y2h9XG4gKi9cblNPYmplY3QucHJvdG90eXBlLmRlbGV0ZUhhcmRCdWxrID1cblNPYmplY3QucHJvdG90eXBlLmRlc3Ryb3lIYXJkQnVsayA9IGZ1bmN0aW9uKGlucHV0LCBjYWxsYmFjaykge1xuICByZXR1cm4gdGhpcy5idWxrbG9hZChcImhhcmREZWxldGVcIiwgaW5wdXQsIGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogUmV0cmlldmUgcmVjZW50bHkgYWNjZXNzZWQgcmVjb3Jkc1xuICpcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPEFycmF5LjxSZWNvcmRSZXN1bHQ+Pn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48QXJyYXkuPFJlY29yZFJlc3VsdD4+fVxuICovXG5TT2JqZWN0LnByb3RvdHlwZS5yZWNlbnQgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgcmV0dXJuIHRoaXMuX2Nvbm4ucmVjZW50KHRoaXMudHlwZSwgY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBSZXRyaWV2ZSB0aGUgdXBkYXRlZCByZWNvcmRzXG4gKlxuICogQHBhcmFtIHtTdHJpbmd8RGF0ZX0gc3RhcnQgLSBzdGFydCBkYXRlIG9yIHN0cmluZyByZXByZXNlbnRpbmcgdGhlIHN0YXJ0IG9mIHRoZSBpbnRlcnZhbFxuICogQHBhcmFtIHtTdHJpbmd8RGF0ZX0gZW5kIC0gc3RhcnQgZGF0ZSBvciBzdHJpbmcgcmVwcmVzZW50aW5nIHRoZSBlbmQgb2YgdGhlIGludGVydmFsLCBtdXN0IGJlID4gc3RhcnRcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPFVwZGF0ZWRSZWNvcmRzSW5mbz59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPFVwZGF0ZWRSZWNvcmRzSW5mbz59XG4gKi9cblNPYmplY3QucHJvdG90eXBlLnVwZGF0ZWQgPSBmdW5jdGlvbiAoc3RhcnQsIGVuZCwgY2FsbGJhY2spIHtcbiAgcmV0dXJuIHRoaXMuX2Nvbm4udXBkYXRlZCh0aGlzLnR5cGUsIHN0YXJ0LCBlbmQsIGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogUmV0cmlldmUgdGhlIGRlbGV0ZWQgcmVjb3Jkc1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfERhdGV9IHN0YXJ0IC0gc3RhcnQgZGF0ZSBvciBzdHJpbmcgcmVwcmVzZW50aW5nIHRoZSBzdGFydCBvZiB0aGUgaW50ZXJ2YWxcbiAqIEBwYXJhbSB7U3RyaW5nfERhdGV9IGVuZCAtIHN0YXJ0IGRhdGUgb3Igc3RyaW5nIHJlcHJlc2VudGluZyB0aGUgZW5kIG9mIHRoZSBpbnRlcnZhbCwgbXVzdCBiZSA+IHN0YXJ0XG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxEZWxldGVkUmVjb3Jkc0luZm8+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxEZWxldGVkUmVjb3Jkc0luZm8+fVxuICovXG5TT2JqZWN0LnByb3RvdHlwZS5kZWxldGVkID0gZnVuY3Rpb24gKHN0YXJ0LCBlbmQsIGNhbGxiYWNrKSB7XG4gIHJldHVybiB0aGlzLl9jb25uLmRlbGV0ZWQodGhpcy50eXBlLCBzdGFydCwgZW5kLCBjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IExheW91dEluZm9cbiAqIEBwcm9wIHtBcnJheS48T2JqZWN0Pn0gbGF5b3V0cyAtIEFycmF5IG9mIGxheW91dHNcbiAqIEBwcm9wIHtBcnJheS48T2JqZWN0Pn0gcmVjb3JkVHlwZU1hcHBpbmdzIC0gQXJyYXkgb2YgcmVjb3JkIHR5cGUgbWFwcGluZ3NcbiAqL1xuLyoqXG4gKiBEZXNjcmliZSBsYXlvdXQgaW5mb3JtYXRpb24gZm9yIFNPYmplY3RcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gW2xheW91dE5hbWVdIC0gTmFtZSBvZiBuYW1lZCBsYXlvdXQuIChlLmcuIFVzZXJBbHQgaW4gVXNlciBTT2JqZWN0KVxuICogQHBhcmFtIHtDYWxsYmFjay48TGF5b3V0SW5mbz59IFtjYWxsYmFja10gLSBDYWxsYmFjayBmdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPExheW91dEluZm8+fVxuICovXG5TT2JqZWN0LnByb3RvdHlwZS5sYXlvdXRzID0gZnVuY3Rpb24obGF5b3V0TmFtZSwgY2FsbGJhY2spIHtcbiAgaWYgKHR5cGVvZiBsYXlvdXROYW1lID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2FsbGJhY2sgPSBsYXlvdXROYW1lO1xuICAgIGxheW91dE5hbWUgPSBudWxsO1xuICB9XG4gIHZhciB1cmwgPSBcIi9zb2JqZWN0cy9cIiArIHRoaXMudHlwZSArIFwiL2Rlc2NyaWJlL1wiICsgKGxheW91dE5hbWUgPyBcIm5hbWVkTGF5b3V0cy9cIitsYXlvdXROYW1lIDogXCJsYXlvdXRzXCIpO1xuICByZXR1cm4gdGhpcy5fY29ubi5yZXF1ZXN0KHVybCwgY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBDb21wYWN0TGF5b3V0SW5mb1xuICogQHByb3Age0FycmF5LjxPYmplY3Q+fSBjb21wYWN0TGF5b3V0cyAtIEFycmF5IG9mIGNvbXBhY3QgbGF5b3V0c1xuICogQHByb3Age1N0cmluZ30gZGVmYXVsdENvbXBhY3RMYXlvdXRJZCAtIElEIG9mIGRlZmF1bHQgY29tcGFjdCBsYXlvdXRcbiAqIEBwcm9wIHtBcnJheS48T2JqZWN0Pn0gcmVjb3JkVHlwZUNvbXBhY3RMYXlvdXRNYXBwaW5ncyAtIEFycmF5IG9mIHJlY29yZCB0eXBlIG1hcHBpbmdzXG4gKi9cbi8qKlxuICogRGVzY3JpYmUgY29tcGFjdCBsYXlvdXQgaW5mb3JtYXRpb24gZGVmaW5lZCBmb3IgU09iamVjdFxuICpcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPENvbXBhY3RMYXlvdXRJbmZvPn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48Q29tcGFjdExheW91dEluZm8+fVxuICovXG5TT2JqZWN0LnByb3RvdHlwZS5jb21wYWN0TGF5b3V0cyA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHZhciB1cmwgPSBcIi9zb2JqZWN0cy9cIiArIHRoaXMudHlwZSArIFwiL2Rlc2NyaWJlL2NvbXBhY3RMYXlvdXRzXCI7XG4gIHJldHVybiB0aGlzLl9jb25uLnJlcXVlc3QodXJsLCBjYWxsYmFjayk7XG59O1xuXG5cbi8qKlxuICogQHR5cGVkZWYge09iamVjdH0gQXBwcm92YWxMYXlvdXRJbmZvXG4gKiBAcHJvcCB7QXJyYXkuPE9iamVjdD59IGFwcHJvdmFsTGF5b3V0cyAtIEFycmF5IG9mIGFwcHJvdmFsIGxheW91dHNcbiAqL1xuLyoqXG4gKiBEZXNjcmliZSBjb21wYWN0IGxheW91dCBpbmZvcm1hdGlvbiBkZWZpbmVkIGZvciBTT2JqZWN0XG4gKlxuICogQHBhcmFtIHtDYWxsYmFjay48QXBwcm92YWxMYXlvdXRJbmZvPn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48QXBwcm92YWxMYXlvdXRJbmZvPn1cbiAqL1xuU09iamVjdC5wcm90b3R5cGUuYXBwcm92YWxMYXlvdXRzID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIHVybCA9IFwiL3NvYmplY3RzL1wiICsgdGhpcy50eXBlICsgXCIvZGVzY3JpYmUvYXBwcm92YWxMYXlvdXRzXCI7XG4gIHJldHVybiB0aGlzLl9jb25uLnJlcXVlc3QodXJsLCBjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIFJldHVybnMgdGhlIGxpc3Qgb2YgbGlzdCB2aWV3cyBmb3IgdGhlIFNPYmplY3RcbiAqXG4gKiBAcGFyYW0ge0NhbGxiYWNrLjxMaXN0Vmlld3NJbmZvPn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48TGlzdFZpZXdzSW5mbz59XG4gKi9cblNPYmplY3QucHJvdG90eXBlLmxpc3R2aWV3cyA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHZhciB1cmwgPSB0aGlzLl9jb25uLl9iYXNlVXJsKCkgKyAnL3NvYmplY3RzLycgKyB0aGlzLnR5cGUgKyAnL2xpc3R2aWV3cyc7XG4gIHJldHVybiB0aGlzLl9jb25uLnJlcXVlc3QodXJsLCBjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIFJldHVybnMgdGhlIGxpc3QgdmlldyBpbmZvIGluIHNwZWNpZmVkIHZpZXcgaWRcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gaWQgLSBMaXN0IHZpZXcgSURcbiAqIEByZXR1cm5zIHtMaXN0Vmlld31cbiAqL1xuU09iamVjdC5wcm90b3R5cGUubGlzdHZpZXcgPSBmdW5jdGlvbihpZCkge1xuICByZXR1cm4gbmV3IExpc3RWaWV3KHRoaXMuX2Nvbm4sIHRoaXMudHlwZSwgaWQpO1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIGFsbCByZWdpc3RlcmVkIHF1aWNrIGFjdGlvbnMgZm9yIHRoZSBTT2JqZWN0XG4gKlxuICogQHBhcmFtIHtDYWxsYmFjay48QXJyYXkuPFF1aWNrQWN0aW9uflF1aWNrQWN0aW9uSW5mbz4+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxBcnJheS48UXVpY2tBY3Rpb25+UXVpY2tBY3Rpb25JbmZvPj59XG4gKi9cblNPYmplY3QucHJvdG90eXBlLnF1aWNrQWN0aW9ucyA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHJldHVybiB0aGlzLl9jb25uLnJlcXVlc3QoXCIvc29iamVjdHMvXCIgKyB0aGlzLnR5cGUgKyBcIi9xdWlja0FjdGlvbnNcIikudGhlbkNhbGwoY2FsbGJhY2spO1xufTtcblxuLyoqXG4gKiBHZXQgcmVmZXJlbmNlIGZvciBzcGVjaWZpZWQgcXVpY2sgYWNpdG9uIGluIHRoZSBTT2JqZWN0XG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGFjdGlvbk5hbWUgLSBOYW1lIG9mIHRoZSBxdWljayBhY3Rpb25cbiAqIEByZXR1cm5zIHtRdWlja0FjdGlvbn1cbiAqL1xuU09iamVjdC5wcm90b3R5cGUucXVpY2tBY3Rpb24gPSBmdW5jdGlvbihhY3Rpb25OYW1lKSB7XG4gIHJldHVybiBuZXcgUXVpY2tBY3Rpb24odGhpcy5fY29ubiwgXCIvc29iamVjdHMvXCIgKyB0aGlzLnR5cGUgKyBcIi9xdWlja0FjdGlvbnMvXCIgKyBhY3Rpb25OYW1lKTtcbn07XG5cblxuLyoqXG4gKiBBIGNsYXNzIGZvciBvcmdhbml6aW5nIGxpc3QgdmlldyBpbmZvcm1hdGlvblxuICpcbiAqIEBwcm90ZWN0ZWRcbiAqIEBjbGFzcyBMaXN0Vmlld1xuICogQHBhcmFtIHtDb25uZWN0aW9ufSBjb25uIC0gQ29ubmVjdGlvbiBpbnN0YW5jZVxuICogQHBhcmFtIHtTT2JqZWN0fSB0eXBlIC0gU09iamVjdCB0eXBlXG4gKiBAcGFyYW0ge1N0cmluZ30gaWQgLSBMaXN0IHZpZXcgSURcbiAqL1xudmFyIExpc3RWaWV3ID0gZnVuY3Rpb24oY29ubiwgdHlwZSwgaWQpIHtcbiAgdGhpcy5fY29ubiA9IGNvbm47XG4gIHRoaXMudHlwZSA9IHR5cGU7XG4gIHRoaXMuaWQgPSBpZDtcbn07XG5cbi8qKlxuICogRXhlY3V0ZXMgcXVlcnkgZm9yIHRoZSBsaXN0IHZpZXcgYW5kIHJldHVybnMgdGhlIHJlc3VsdGluZyBkYXRhIGFuZCBwcmVzZW50YXRpb24gaW5mb3JtYXRpb24uXG4gKlxuICogQHBhcmFtIHtDYWxsYmFjay48TGlzdFZpZXdSZXN1bHRJbmZvPn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48TGlzdFZpZXdSZXN1bHRJbmZvPn1cbiAqL1xuTGlzdFZpZXcucHJvdG90eXBlLnJlc3VsdHMgPSBmdW5jdGlvbihjYWxsYmFjaykge1xuICB2YXIgdXJsID0gIHRoaXMuX2Nvbm4uX2Jhc2VVcmwoKSArICcvc29iamVjdHMvJyArIHRoaXMudHlwZSArICcvbGlzdHZpZXdzLycgKyB0aGlzLmlkICsgJy9yZXN1bHRzJztcbiAgcmV0dXJuIHRoaXMuX2Nvbm4ucmVxdWVzdCh1cmwsIGNhbGxiYWNrKTtcbn07XG5cblxuLyoqXG4gKiBSZXR1cm5zIGRldGFpbGVkIGluZm9ybWF0aW9uIGFib3V0IGEgbGlzdCB2aWV3XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIElkZW50aXR5IGNhbGwgb3B0aW9uc1xuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zLmhlYWRlcnNdIC0gQWRkaXRpb25hbCBIVFRQIHJlcXVlc3QgaGVhZGVycyBzZW50IGluIGlkZW50aXR5IHJlcXVlc3RcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPExpc3RWaWV3RGVzY3JpYmVJbmZvPn0gW2NhbGxiYWNrXSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48TGlzdFZpZXdEZXNjcmliZUluZm8+fVxuICovXG5MaXN0Vmlldy5wcm90b3R5cGUuZGVzY3JpYmUgPSBmdW5jdGlvbihvcHRpb25zLCBjYWxsYmFjaykge1xuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYWxsYmFjayA9IG9wdGlvbnM7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICB2YXIgdXJsID0gIHRoaXMuX2Nvbm4uX2Jhc2VVcmwoKSArICcvc29iamVjdHMvJyArIHRoaXMudHlwZSArICcvbGlzdHZpZXdzLycgKyB0aGlzLmlkICsgJy9kZXNjcmliZSc7XG4gIHJldHVybiB0aGlzLl9jb25uLnJlcXVlc3QoeyBtZXRob2Q6ICdHRVQnLCB1cmw6IHVybCwgaGVhZGVyczogb3B0aW9ucy5oZWFkZXJzIH0sIGNhbGxiYWNrKTtcbn07XG5cbi8qKlxuICogRXhwbGFpbiBwbGFuIGZvciBleGVjdXRpbmcgbGlzdCB2aWV3XG4gKlxuICogQHBhcmFtIHtDYWxsYmFjay48RXhwbGFpbkluZm8+fSBbY2FsbGJhY2tdIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxFeHBsYWluSW5mbz59XG4gKi9cbkxpc3RWaWV3LnByb3RvdHlwZS5leHBsYWluID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIHVybCA9IFwiL3F1ZXJ5Lz9leHBsYWluPVwiICsgdGhpcy5pZDtcbiAgcmV0dXJuIHRoaXMuX2Nvbm4ucmVxdWVzdCh1cmwsIGNhbGxiYWNrKTtcbn07XG4iLCIvKipcbiAqIEBmaWxlIENyZWF0ZSBhbmQgYnVpbGQgU09RTCBzdHJpbmcgZnJvbSBjb25maWd1cmF0aW9uXG4gKiBAYXV0aG9yIFNoaW5pY2hpIFRvbWl0YSA8c2hpbmljaGkudG9taXRhQGdtYWlsLmNvbT5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBfICAgICAgPSByZXF1aXJlKCdsb2Rhc2gvY29yZScpLFxuICAgIFNmRGF0ZSA9IHJlcXVpcmUoXCIuL2RhdGVcIik7XG5cblxuLyoqXG4gKiBDcmVhdGUgU09RTFxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gY3JlYXRlU09RTChxdWVyeSkge1xuICB2YXIgc29xbCA9IFtcbiAgICBcIlNFTEVDVCBcIixcbiAgICBjcmVhdGVGaWVsZHNDbGF1c2UocXVlcnkuZmllbGRzLCBxdWVyeS5pbmNsdWRlcyksXG4gICAgXCIgRlJPTSBcIixcbiAgICBxdWVyeS50YWJsZVxuICBdLmpvaW4oXCJcIik7XG4gIHZhciBjb25kID0gY3JlYXRlQ29uZGl0aW9uQ2xhdXNlKHF1ZXJ5LmNvbmRpdGlvbnMpO1xuICBpZiAoY29uZCkge1xuICAgIHNvcWwgKz0gXCIgV0hFUkUgXCIgKyBjb25kO1xuICB9XG4gIHZhciBvcmRlcmJ5ID0gY3JlYXRlT3JkZXJCeUNsYXVzZShxdWVyeS5zb3J0KTtcbiAgaWYgKG9yZGVyYnkpIHtcbiAgICBzb3FsICs9IFwiIE9SREVSIEJZIFwiICsgb3JkZXJieTtcbiAgfVxuICBpZiAocXVlcnkubGltaXQpIHtcbiAgICBzb3FsICs9IFwiIExJTUlUIFwiICsgcXVlcnkubGltaXQ7XG4gIH1cbiAgaWYgKHF1ZXJ5Lm9mZnNldCkge1xuICAgIHNvcWwgKz0gXCIgT0ZGU0VUIFwiICsgcXVlcnkub2Zmc2V0O1xuICB9XG4gIHJldHVybiBzb3FsO1xufVxuXG4vKiogQHByaXZhdGUgKiovXG5mdW5jdGlvbiBjcmVhdGVGaWVsZHNDbGF1c2UoZmllbGRzLCBjaGlsZFF1ZXJpZXMpIHtcbiAgY2hpbGRRdWVyaWVzID0gXy5tYXAoXy52YWx1ZXMoY2hpbGRRdWVyaWVzIHx8IHt9KSwgZnVuY3Rpb24oY3F1ZXJ5KSB7XG4gICAgcmV0dXJuICcoJyArIGNyZWF0ZVNPUUwoY3F1ZXJ5KSArICcpJztcbiAgfSk7XG4gIHJldHVybiAoZmllbGRzIHx8IFsgXCJJZFwiIF0pLmNvbmNhdChjaGlsZFF1ZXJpZXMpLmpvaW4oJywgJyk7XG59XG5cbi8qKiBAcHJpdmF0ZSAqKi9cbmZ1bmN0aW9uIGNyZWF0ZUNvbmRpdGlvbkNsYXVzZShjb25kaXRpb25zLCBvcGVyYXRvciwgZGVwdGgpIHtcbiAgaWYgKF8uaXNTdHJpbmcoY29uZGl0aW9ucykpIHtcbiAgICByZXR1cm4gY29uZGl0aW9ucztcbiAgfVxuICBjb25kaXRpb25zID0gY29uZGl0aW9ucyB8fCBbXTtcbiAgb3BlcmF0b3IgPSBvcGVyYXRvciB8fCBcIkFORFwiO1xuICBkZXB0aCA9IGRlcHRoIHx8IDA7XG4gIGlmICghaXNBcnJheShjb25kaXRpb25zKSkgeyAvLyBpZiBwYXNzZWQgaW4gaGFzaCBvYmplY3RcbiAgICBjb25kaXRpb25zID0gXy5rZXlzKGNvbmRpdGlvbnMpLm1hcChmdW5jdGlvbihrZXkpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGtleToga2V5LFxuICAgICAgICB2YWx1ZTogY29uZGl0aW9uc1trZXldXG4gICAgICB9O1xuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIGNvbmRpdGlvbnMgPSBjb25kaXRpb25zLm1hcChmdW5jdGlvbihjb25kKSB7XG4gICAgICB2YXIgY29uZHMgPSBbXTtcbiAgICAgIGZvciAodmFyIGtleSBpbiBjb25kKSB7XG4gICAgICAgIGNvbmRzLnB1c2goe1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIHZhbHVlOiBjb25kW2tleV1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29uZHMubGVuZ3RoPjEgPyBjb25kcyA6IGNvbmRzWzBdO1xuICAgIH0pO1xuICB9XG4gIGNvbmRpdGlvbnMgPSBjb25kaXRpb25zLm1hcChmdW5jdGlvbihjb25kKSB7XG4gICAgdmFyIGQgPSBkZXB0aCsxLCBvcDtcbiAgICBzd2l0Y2ggKGNvbmQua2V5KSB7XG4gICAgICBjYXNlIFwiJG9yXCIgOlxuICAgICAgY2FzZSBcIiRhbmRcIiA6XG4gICAgICBjYXNlIFwiJG5vdFwiIDpcbiAgICAgICAgaWYgKG9wZXJhdG9yICE9PSBcIk5PVFwiICYmIGNvbmRpdGlvbnMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgZCA9IGRlcHRoOyAvLyBub3QgY2hhbmdlIHRyZWUgZGVwdGhcbiAgICAgICAgfVxuICAgICAgICBvcCA9IGNvbmQua2V5ID09PSBcIiRvclwiID8gXCJPUlwiIDpcbiAgICAgICAgICAgICBjb25kLmtleSA9PT0gXCIkYW5kXCIgPyBcIkFORFwiIDpcbiAgICAgICAgICAgICBcIk5PVFwiO1xuICAgICAgICByZXR1cm4gY3JlYXRlQ29uZGl0aW9uQ2xhdXNlKGNvbmQudmFsdWUsIG9wLCBkKTtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBjcmVhdGVGaWVsZEV4cHJlc3Npb24oY29uZC5rZXksIGNvbmQudmFsdWUpO1xuICAgIH1cbiAgfSkuZmlsdGVyKGZ1bmN0aW9uKGV4cHIpIHsgcmV0dXJuIGV4cHI7IH0pO1xuXG4gIHZhciBwYXJlbjtcbiAgaWYgKG9wZXJhdG9yID09PSAnTk9UJykge1xuICAgIHBhcmVuID0gZGVwdGggPiAwO1xuICAgIHJldHVybiAocGFyZW4gPyBcIihcIiA6IFwiXCIpICsgXCJOT1QgXCIgKyBjb25kaXRpb25zWzBdICsgKHBhcmVuID8gXCIpXCIgOiBcIlwiKTtcbiAgfSBlbHNlIHtcbiAgICBwYXJlbiA9IGRlcHRoID4gMCAmJiBjb25kaXRpb25zLmxlbmd0aCA+IDE7XG4gICAgcmV0dXJuIChwYXJlbiA/IFwiKFwiIDogXCJcIikgKyBjb25kaXRpb25zLmpvaW4oXCIgXCIrb3BlcmF0b3IrXCIgXCIpICsgKHBhcmVuID8gXCIpXCIgOiBcIlwiKTtcbiAgfVxufVxuXG52YXIgb3BNYXAgPSB7XG4gIFwiPVwiICAgICA6IFwiPVwiLFxuICBcIiRlcVwiICAgOiBcIj1cIixcbiAgXCIhPVwiICAgIDogXCIhPVwiLFxuICBcIiRuZVwiICAgOiBcIiE9XCIsXG4gIFwiPlwiICAgICA6IFwiPlwiLFxuICBcIiRndFwiICAgOiBcIj5cIixcbiAgXCI8XCIgICAgIDogXCI8XCIsXG4gIFwiJGx0XCIgICA6IFwiPFwiLFxuICBcIj49XCIgICAgOiBcIj49XCIsXG4gIFwiJGd0ZVwiICA6IFwiPj1cIixcbiAgXCI8PVwiICAgIDogXCI8PVwiLFxuICBcIiRsdGVcIiAgOiBcIjw9XCIsXG4gIFwiJGxpa2VcIiA6IFwiTElLRVwiLFxuICBcIiRubGlrZVwiIDogXCJOT1QgTElLRVwiLFxuICBcIiRpblwiICAgOiBcIklOXCIsXG4gIFwiJG5pblwiICA6IFwiTk9UIElOXCIsXG4gIFwiJGluY2x1ZGVzXCIgOiBcIklOQ0xVREVTXCIsXG4gIFwiJGV4Y2x1ZGVzXCIgOiBcIkVYQ0xVREVTXCIsXG4gIFwiJGV4aXN0c1wiIDogXCJFWElTVFNcIlxufTtcblxuLyoqIEBwcml2YXRlICoqL1xuZnVuY3Rpb24gY3JlYXRlRmllbGRFeHByZXNzaW9uKGZpZWxkLCB2YWx1ZSkge1xuICB2YXIgb3AgPSBcIiRlcVwiO1xuXG4gIC8vIEFzc3VtZSB0aGUgYCRpbmAgb3BlcmF0b3IgaWYgdmFsdWUgaXMgYW4gYXJyYXkgYW5kIG5vbmUgd2FzIHN1cHBsaWVkLlxuICBpZiAoXy5pc0FycmF5KHZhbHVlKSkgeyBvcCA9IFwiJGluXCI7IH1cbiAgLy8gT3RoZXJ3aXNlLCBpZiBhbiBvYmplY3Qgd2FzIHBhc3NlZCB0aGVuIHByb2Nlc3MgdGhlIHN1cHBsaWVkIG9wcy5cbiAgZWxzZSBpZiAoXy5pc09iamVjdCh2YWx1ZSkpIHtcbiAgICB2YXIgX3ZhbHVlO1xuICAgIGZvciAodmFyIGsgaW4gdmFsdWUpIHtcbiAgICAgIGlmIChrWzBdID09PSBcIiRcIikge1xuICAgICAgICBvcCA9IGs7XG4gICAgICAgIHZhbHVlID0gdmFsdWVba107XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICB2YXIgc2ZvcCA9IG9wTWFwW29wXTtcbiAgaWYgKCFzZm9wIHx8IF8uaXNVbmRlZmluZWQodmFsdWUpKSB7IHJldHVybiBudWxsOyB9XG4gIHZhciB2YWx1ZUV4cHIgPSBjcmVhdGVWYWx1ZUV4cHJlc3Npb24odmFsdWUpO1xuICBpZiAoXy5pc1VuZGVmaW5lZCh2YWx1ZUV4cHIpKSB7IHJldHVybiBudWxsOyB9XG4gIHN3aXRjaCAoc2ZvcCkge1xuICAgIGNhc2UgXCJOT1QgTElLRVwiOlxuICAgICAgcmV0dXJuIFwiKFwiICsgWyBcIk5PVFwiLCBmaWVsZCwgJ0xJS0UnLCB2YWx1ZUV4cHIgXS5qb2luKFwiIFwiKSArIFwiKVwiO1xuICAgIGNhc2UgXCJFWElTVFNcIjpcbiAgICAgIHJldHVybiBbIGZpZWxkLCB2YWx1ZSA/IFwiIT1cIiA6IFwiPVwiLCBcIm51bGxcIiBdLmpvaW4oXCIgXCIpO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gWyBmaWVsZCwgc2ZvcCwgdmFsdWVFeHByIF0uam9pbihcIiBcIik7XG4gIH1cbn1cblxuLyoqIEBwcml2YXRlICoqL1xuZnVuY3Rpb24gY3JlYXRlVmFsdWVFeHByZXNzaW9uKHZhbHVlKSB7XG4gIGlmIChpc0FycmF5KHZhbHVlKSkge1xuICAgIHJldHVybiB2YWx1ZS5sZW5ndGggPiAwID9cbiAgICAgICAgICAgXCIoXCIgKyB2YWx1ZS5tYXAoY3JlYXRlVmFsdWVFeHByZXNzaW9uKS5qb2luKFwiLCBcIikgKyBcIilcIiA6XG4gICAgICAgICAgIHVuZGVmaW5lZDtcbiAgfVxuICBpZiAodmFsdWUgaW5zdGFuY2VvZiBTZkRhdGUpIHtcbiAgICByZXR1cm4gdmFsdWUudG9TdHJpbmcoKTtcbiAgfVxuICBpZiAoXy5pc1N0cmluZyh2YWx1ZSkpIHtcbiAgICByZXR1cm4gXCInXCIgKyBlc2NhcGVTT1FMU3RyaW5nKHZhbHVlKSArIFwiJ1wiO1xuICB9XG4gIGlmIChfLmlzTnVtYmVyKHZhbHVlKSkge1xuICAgIHJldHVybiAodmFsdWUpLnRvU3RyaW5nKCk7XG4gIH1cbiAgaWYgKF8uaXNOdWxsKHZhbHVlKSkge1xuICAgIHJldHVybiBcIm51bGxcIjtcbiAgfVxuICByZXR1cm4gdmFsdWU7XG59XG5cbi8qKiBAcHJpdmF0ZSAqKi9cbmZ1bmN0aW9uIGVzY2FwZVNPUUxTdHJpbmcoc3RyKSB7XG4gIHJldHVybiBTdHJpbmcoc3RyIHx8ICcnKS5yZXBsYWNlKC8nL2csIFwiXFxcXCdcIik7XG59XG5cbi8qKiBAcHJpdmF0ZSAqKi9cbmZ1bmN0aW9uIGlzQXJyYXkoYSkge1xuICByZXR1cm4gXy5pc09iamVjdChhKSAmJiBfLmlzRnVuY3Rpb24oYS5wb3ApO1xufVxuXG5cbi8qKiBAcHJpdmF0ZSAqKi9cbmZ1bmN0aW9uIGNyZWF0ZU9yZGVyQnlDbGF1c2Uoc29ydCkge1xuICBzb3J0ID0gc29ydCB8fCBbXTtcbiAgaWYgKF8uaXNTdHJpbmcoc29ydCkpIHtcbiAgICBpZiAoLyx8XFxzKyhhc2N8ZGVzYylcXHMqJC8udGVzdChzb3J0KSkge1xuICAgICAgLy8gbXVzdCBiZSBzcGVjaWZpZWQgaW4gcHVyZSBcIm9yZGVyIGJ5XCIgY2xhdXNlLiBSZXR1cm4gcmF3IGNvbmZpZy5cbiAgICAgIHJldHVybiBzb3J0O1xuICAgIH1cbiAgICAvLyBzb3J0IG9yZGVyIGluIG1vbmdvb3NlLXN0eWxlIGV4cHJlc3Npb24uXG4gICAgLy8gZS5nLiBcIkZpZWxkQSAtRmllbGRCXCIgPT4gXCJPUkRFUiBCWSBGaWVsZEEgQVNDLCBGaWVsZEIgREVTQ1wiXG4gICAgc29ydCA9IHNvcnQuc3BsaXQoL1xccysvKS5tYXAoZnVuY3Rpb24oZmllbGQpIHtcbiAgICAgIHZhciBkaXIgPSBcIkFTQ1wiOyAvLyBhc2NlbmRpbmdcbiAgICAgIHZhciBmbGFnID0gZmllbGRbMF07XG4gICAgICBpZiAoZmxhZyA9PT0gJy0nKSB7XG4gICAgICAgIGRpciA9IFwiREVTQ1wiO1xuICAgICAgICBmaWVsZCA9IGZpZWxkLnN1YnN0cmluZygxKTtcbiAgICAgIH0gZWxzZSBpZiAoZmxhZyA9PT0gJysnKSB7XG4gICAgICAgIGZpZWxkID0gZmllbGQuc3Vic3RyaW5nKDEpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFsgZmllbGQsIGRpciBdO1xuICAgIH0pO1xuICB9IGVsc2UgaWYgKCFpc0FycmF5KHNvcnQpKSB7XG4gICAgc29ydCA9IF8ua2V5cyhzb3J0KS5tYXAoZnVuY3Rpb24oZmllbGQpIHtcbiAgICAgIHZhciBkaXIgPSBzb3J0W2ZpZWxkXTtcbiAgICAgIHJldHVybiBbIGZpZWxkLCBkaXIgXTtcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gc29ydC5tYXAoZnVuY3Rpb24ocykge1xuICAgIHZhciBmaWVsZCA9IHNbMF0sIGRpciA9IHNbMV07XG4gICAgc3dpdGNoIChTdHJpbmcoZGlyKSkge1xuICAgICAgY2FzZSBcIkRFU0NcIjpcbiAgICAgIGNhc2UgXCJkZXNjXCI6XG4gICAgICBjYXNlIFwiZGVzY2VuZGluZ1wiOlxuICAgICAgY2FzZSBcIi1cIjpcbiAgICAgIGNhc2UgXCItMVwiOlxuICAgICAgICBkaXIgPSBcIkRFU0NcIjtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBkaXIgPSBcIkFTQ1wiO1xuICAgIH1cbiAgICByZXR1cm4gZmllbGQgKyBcIiBcIiArIGRpcjtcbiAgfSkuam9pbihcIiwgXCIpO1xufVxuXG5cbmV4cG9ydHMuY3JlYXRlU09RTCA9IGNyZWF0ZVNPUUw7XG4iLCIvKmdsb2JhbCBwcm9jZXNzLCBTZmRjICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKSxcbiAgICBQcm9taXNlID0gcmVxdWlyZSgnLi9wcm9taXNlJyk7XG5cbi8qICovXG5cbnZhciByZXF1ZXN0ID0gcmVxdWlyZSgncmVxdWVzdCcpLFxuICAgIGNhbnZhcyA9IHJlcXVpcmUoJy4vYnJvd3Nlci9jYW52YXMnKSxcbiAgICBqc29ucCA9IHJlcXVpcmUoJy4vYnJvd3Nlci9qc29ucCcpO1xuXG4vLyBzZXQgb3B0aW9ucyBpZiBkZWZhdWx0cyBzZXR0aW5nIGlzIGF2YWlsYWJsZSBpbiByZXF1ZXN0LCB3aGljaCBpcyBub3QgYXZhaWxhYmxlIGluIHhociBtb2R1bGUuXG5pZiAocmVxdWVzdC5kZWZhdWx0cykge1xuICB2YXIgZGVmYXVsdHMgPSB7XG4gICAgZm9sbG93QWxsUmVkaXJlY3RzOiB0cnVlXG4gIH07XG4gIGlmIChwcm9jZXNzLmVudi5IVFRQX1BST1hZKSB7XG4gICAgZGVmYXVsdHMucHJveHkgPSBwcm9jZXNzLmVudi5IVFRQX1BST1hZO1xuICB9XG4gIGlmIChwYXJzZUludChwcm9jZXNzLmVudi5IVFRQX1RJTUVPVVQpKSB7XG4gICAgZGVmYXVsdHMudGltZW91dCA9IHBhcnNlSW50KHByb2Nlc3MuZW52LkhUVFBfVElNRU9VVCk7XG4gIH1cbiAgcmVxdWVzdCA9IHJlcXVlc3QuZGVmYXVsdHMoZGVmYXVsdHMpO1xufVxuXG52YXIgYmFzZVVybDtcbmlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykge1xuICBiYXNlVXJsID0gcHJvY2Vzcy5lbnYuTE9DQVRJT05fQkFTRV9VUkwgfHwgXCJcIjtcbn0gZWxzZSB7XG4gIHZhciBhcGlIb3N0ID0gbm9ybWFsaXplQXBpSG9zdCh3aW5kb3cubG9jYXRpb24uaG9zdCk7XG4gIGJhc2VVcmwgPSBhcGlIb3N0ID8gXCJodHRwczovL1wiICsgYXBpSG9zdCA6IFwiXCI7XG59XG5cbi8qKlxuICogQWRkIHN0cmVhbSgpIG1ldGhvZCB0byBwcm9taXNlIChhbmQgZm9sbG93aW5nIHByb21pc2UgY2hhaW4pLCB0byBhY2Nlc3Mgb3JpZ2luYWwgcmVxdWVzdCBzdHJlYW0uXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBzdHJlYW1pZnkocHJvbWlzZSwgZmFjdG9yeSkge1xuICB2YXIgX3RoZW4gPSBwcm9taXNlLnRoZW47XG4gIHByb21pc2UudGhlbiA9IGZ1bmN0aW9uKCkge1xuICAgIGZhY3RvcnkoKTtcbiAgICB2YXIgbmV3UHJvbWlzZSA9IF90aGVuLmFwcGx5KHByb21pc2UsIGFyZ3VtZW50cyk7XG4gICAgcmV0dXJuIHN0cmVhbWlmeShuZXdQcm9taXNlLCBmYWN0b3J5KTtcbiAgfTtcbiAgcHJvbWlzZS5zdHJlYW0gPSBmYWN0b3J5O1xuICByZXR1cm4gcHJvbWlzZTtcbn1cblxuLyoqXG4gKiBOb3JtYXJpemUgU2FsZXNmb3JjZSBBUEkgaG9zdCBuYW1lXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBub3JtYWxpemVBcGlIb3N0KGFwaUhvc3QpIHtcbiAgdmFyIG0gPSAvKFxcdyspXFwuKHZpc3VhbFxcLmZvcmNlfHNhbGVzZm9yY2UpXFwuY29tJC8uZXhlYyhhcGlIb3N0KTtcbiAgaWYgKG0pIHtcbiAgICBhcGlIb3N0ID0gbVsxXSArIFwiLnNhbGVzZm9yY2UuY29tXCI7XG4gIH1cbiAgcmV0dXJuIGFwaUhvc3Q7XG59XG5cbi8qKlxuICogQ2xhc3MgZm9yIEhUVFAgcmVxdWVzdCB0cmFuc3BvcnRcbiAqXG4gKiBAY2xhc3NcbiAqIEBwcm90ZWN0ZWRcbiAqL1xudmFyIFRyYW5zcG9ydCA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7fTtcblxuLyoqXG4gKiBNYWtlIEhUVFAgcmVxdWVzdCwgcmV0dXJucyBwcm9taXNlIGluc3RlYWQgb2Ygc3RyZWFtXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHBhcmFtcyAtIEhUVFAgcmVxdWVzdFxuICogQHBhcmFtIHtDYWxsYmFjay48T2JqZWN0Pn0gW2NhbGxiYWNrXSAtIENhbGJhY2sgRnVuY3Rpb25cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxPYmplY3Q+fVxuICovXG5UcmFuc3BvcnQucHJvdG90eXBlLmh0dHBSZXF1ZXN0ID0gZnVuY3Rpb24ocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgZGVmZXJyZWQgPSBQcm9taXNlLmRlZmVyKCk7XG4gIHZhciByZXE7XG4gIHZhciBodHRwUmVxdWVzdCA9IHRoaXMuX2dldEh0dHBSZXF1ZXN0TW9kdWxlKCk7XG4gIHZhciBjcmVhdGVSZXF1ZXN0ID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKCFyZXEpIHtcbiAgICAgIHJlcSA9IGh0dHBSZXF1ZXN0KHBhcmFtcywgZnVuY3Rpb24oZXJyLCByZXNwb25zZSkge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgZGVmZXJyZWQucmVqZWN0KGVycik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVxO1xuICB9O1xuICByZXR1cm4gc3RyZWFtaWZ5KGRlZmVycmVkLnByb21pc2UsIGNyZWF0ZVJlcXVlc3QpLnRoZW5DYWxsKGNhbGxiYWNrKTtcbn07XG5cbi8qKiBAcHJvdGVjdGVkICoqL1xuVHJhbnNwb3J0LnByb3RvdHlwZS5fZ2V0SHR0cFJlcXVlc3RNb2R1bGUgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHJlcXVlc3Q7XG59O1xuXG5cbi8qKlxuICogQ2xhc3MgZm9yIEpTT05QIHJlcXVlc3QgdHJhbnNwb3J0XG4gKiBAY2xhc3MgVHJhbnNwb3J0fkpzb25wVHJhbnNwb3J0XG4gKiBAcHJvdGVjdGVkXG4gKiBAZXh0ZW5kcyBUcmFuc3BvcnRcbiAqIEBwYXJhbSB7U3RyaW5nfSBqc29ucFBhcmFtIC0gQ2FsbGJhY2sgcGFyYW1ldGVyIG5hbWUgZm9yIEpTT05QIGludm9rYXRpb24uXG4gKi9cbnZhciBKc29ucFRyYW5zcG9ydCA9IFRyYW5zcG9ydC5Kc29ucFRyYW5zcG9ydCA9IGZ1bmN0aW9uKGpzb25wUGFyYW0pIHtcbiAgdGhpcy5fanNvbnBQYXJhbSA9IGpzb25wUGFyYW07XG59O1xuXG5pbmhlcml0cyhKc29ucFRyYW5zcG9ydCwgVHJhbnNwb3J0KTtcblxuLyoqIEBwcm90ZWN0ZWQgKiovXG5Kc29ucFRyYW5zcG9ydC5wcm90b3R5cGUuX2dldEh0dHBSZXF1ZXN0TW9kdWxlID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBqc29ucC5jcmVhdGVSZXF1ZXN0KHRoaXMuX2pzb25wUGFyYW0pO1xufTtcblxuSnNvbnBUcmFuc3BvcnQuc3VwcG9ydGVkID0ganNvbnAuc3VwcG9ydGVkO1xuXG5cbi8qKlxuICogQ2xhc3MgZm9yIFNmZGMgQ2FudmFzIHJlcXVlc3QgdHJhbnNwb3J0XG4gKiBAY2xhc3MgVHJhbnNwb3J0fkNhbnZhc1RyYW5zcG9ydFxuICogQHByb3RlY3RlZFxuICogQGV4dGVuZHMgVHJhbnNwb3J0XG4gKiBAcGFyYW0ge09iamVjdH0gc2lnbmVkUmVxdWVzdCAtIFBhcnNlZCBzaWduZWQgcmVxdWVzdCBvYmplY3RcbiAqL1xudmFyIENhbnZhc1RyYW5zcG9ydCA9IFRyYW5zcG9ydC5DYW52YXNUcmFuc3BvcnQgPSBmdW5jdGlvbihzaWduZWRSZXF1ZXN0KSB7XG4gIHRoaXMuX3NpZ25lZFJlcXVlc3QgPSBzaWduZWRSZXF1ZXN0O1xufTtcblxuaW5oZXJpdHMoQ2FudmFzVHJhbnNwb3J0LCBUcmFuc3BvcnQpO1xuXG4vKiogQHByb3RlY3RlZCAqKi9cbkNhbnZhc1RyYW5zcG9ydC5wcm90b3R5cGUuX2dldEh0dHBSZXF1ZXN0TW9kdWxlID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBjYW52YXMuY3JlYXRlUmVxdWVzdCh0aGlzLl9zaWduZWRSZXF1ZXN0KTtcbn07XG5cbkNhbnZhc1RyYW5zcG9ydC5zdXBwb3J0ZWQgPSBjYW52YXMuc3VwcG9ydGVkO1xuXG5cbi8qKlxuICogQ2xhc3MgZm9yIEhUVFAgcmVxdWVzdCB0cmFuc3BvcnQgdXNpbmcgQUpBWCBwcm94eSBzZXJ2aWNlXG4gKlxuICogQGNsYXNzIFRyYW5zcG9ydH5Qcm94eVRyYW5zcG9ydFxuICogQHByb3RlY3RlZFxuICogQGV4dGVuZHMgVHJhbnNwb3J0XG4gKiBAcGFyYW0ge1N0cmluZ30gcHJveHlVcmwgLSBBSkFYIFByb3h5IHNlcnZlciBVUkxcbiAqL1xudmFyIFByb3h5VHJhbnNwb3J0ID0gVHJhbnNwb3J0LlByb3h5VHJhbnNwb3J0ID0gZnVuY3Rpb24ocHJveHlVcmwpIHtcbiAgdGhpcy5fcHJveHlVcmwgPSBwcm94eVVybDtcbn07XG5cbmluaGVyaXRzKFByb3h5VHJhbnNwb3J0LCBUcmFuc3BvcnQpO1xuXG4vKipcbiAqIE1ha2UgSFRUUCByZXF1ZXN0IHZpYSBBSkFYIHByb3h5XG4gKlxuICogQG1ldGhvZCBUcmFuc3BvcnR+UHJveHlUcmFuc3BvcnQjaHR0cFJlcXVlc3RcbiAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbXMgLSBIVFRQIHJlcXVlc3RcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPE9iamVjdD59IFtjYWxsYmFja10gLSBDYWxiYWNrIEZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48T2JqZWN0Pn1cbiAqL1xuUHJveHlUcmFuc3BvcnQucHJvdG90eXBlLmh0dHBSZXF1ZXN0ID0gZnVuY3Rpb24ocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgdXJsID0gcGFyYW1zLnVybDtcbiAgaWYgKHVybC5pbmRleE9mKFwiL1wiKSA9PT0gMCkge1xuICAgIHVybCA9IGJhc2VVcmwgKyB1cmw7XG4gIH1cbiAgdmFyIHByb3h5UGFyYW1zID0ge1xuICAgIG1ldGhvZDogcGFyYW1zLm1ldGhvZCxcbiAgICB1cmw6IHRoaXMuX3Byb3h5VXJsICsgJz8nICsgRGF0ZS5ub3coKSArIFwiLlwiICsgKFwiXCIgKyBNYXRoLnJhbmRvbSgpKS5zdWJzdHJpbmcoMiksXG4gICAgaGVhZGVyczoge1xuICAgICAgJ3NhbGVzZm9yY2Vwcm94eS1lbmRwb2ludCc6IHVybFxuICAgIH1cbiAgfTtcbiAgaWYgKHBhcmFtcy5ib2R5IHx8IHBhcmFtcy5ib2R5ID09PSBcIlwiKSB7XG4gICAgcHJveHlQYXJhbXMuYm9keSA9IHBhcmFtcy5ib2R5O1xuICB9XG4gIGlmIChwYXJhbXMuaGVhZGVycykge1xuICAgIGZvciAodmFyIG5hbWUgaW4gcGFyYW1zLmhlYWRlcnMpIHtcbiAgICAgIHByb3h5UGFyYW1zLmhlYWRlcnNbbmFtZV0gPSBwYXJhbXMuaGVhZGVyc1tuYW1lXTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIFByb3h5VHJhbnNwb3J0LnN1cGVyXy5wcm90b3R5cGUuaHR0cFJlcXVlc3QuY2FsbCh0aGlzLCBwcm94eVBhcmFtcywgY2FsbGJhY2spO1xufTtcblxuXG4vKipcbiAqIENsYXNzIGZvciBIVFRQIHJlcXVlc3QgdHJhbnNwb3J0IHVzaW5nIGEgcHJveHkgc2VydmVyXG4gKlxuICogQGNsYXNzIFRyYW5zcG9ydH5IdHRwUHJveHlUcmFuc3BvcnRcbiAqIEBwcm90ZWN0ZWRcbiAqIEBleHRlbmRzIFRyYW5zcG9ydFxuICogQHBhcmFtIHtTdHJpbmd9IGh0dHBQcm94eSAtIFVSTCBvZiB0aGUgSFRUUCBwcm94eSBzZXJ2ZXJcbiAqL1xudmFyIEh0dHBQcm94eVRyYW5zcG9ydCA9IFRyYW5zcG9ydC5IdHRwUHJveHlUcmFuc3BvcnQgPSBmdW5jdGlvbihodHRwUHJveHkpIHtcbiAgdGhpcy5faHR0cFByb3h5ID0gaHR0cFByb3h5O1xufTtcblxuaW5oZXJpdHMoSHR0cFByb3h5VHJhbnNwb3J0LCBUcmFuc3BvcnQpO1xuXG4vKipcbiAqIE1ha2UgSFRUUCByZXF1ZXN0IHZpYSBwcm94eSBzZXJ2ZXJcbiAqXG4gKiBAbWV0aG9kIFRyYW5zcG9ydH5IdHRwUHJveHlUcmFuc3BvcnQjaHR0cFJlcXVlc3RcbiAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbXMgLSBIVFRQIHJlcXVlc3RcbiAqIEBwYXJhbSB7Q2FsbGJhY2suPE9iamVjdD59IFtjYWxsYmFja10gLSBDYWxsYmFjayBGdW5jdGlvblxuICogQHJldHVybnMge1Byb21pc2UuPE9iamVjdD59XG4gKi9cbkh0dHBQcm94eVRyYW5zcG9ydC5wcm90b3R5cGUuaHR0cFJlcXVlc3QgPSBmdW5jdGlvbihwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciB1cmwgPSBwYXJhbXMudXJsO1xuICBpZiAodXJsLmluZGV4T2YoXCIvXCIpID09PSAwKSB7XG4gICAgdXJsID0gYmFzZVVybCArIHVybDtcbiAgfVxuICB2YXIgcHJveHlQYXJhbXMgPSB7XG4gICAgbWV0aG9kOiBwYXJhbXMubWV0aG9kLFxuICAgIHVybDogcGFyYW1zLnVybCxcbiAgICBwcm94eTogdGhpcy5faHR0cFByb3h5LFxuICAgIGhlYWRlcnM6IHt9XG4gIH07XG4gIGlmIChwYXJhbXMuYm9keSB8fCBwYXJhbXMuYm9keSA9PT0gXCJcIikge1xuICAgIHByb3h5UGFyYW1zLmJvZHkgPSBwYXJhbXMuYm9keTtcbiAgfVxuICBpZiAocGFyYW1zLmhlYWRlcnMpIHtcbiAgICBmb3IgKHZhciBuYW1lIGluIHBhcmFtcy5oZWFkZXJzKSB7XG4gICAgICBwcm94eVBhcmFtcy5oZWFkZXJzW25hbWVdID0gcGFyYW1zLmhlYWRlcnNbbmFtZV07XG4gICAgfVxuICB9XG4gIHJldHVybiBIdHRwUHJveHlUcmFuc3BvcnQuc3VwZXJfLnByb3RvdHlwZS5odHRwUmVxdWVzdC5jYWxsKHRoaXMsIHByb3h5UGFyYW1zLCBjYWxsYmFjayk7XG59O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIHJhd0FzYXAgcHJvdmlkZXMgZXZlcnl0aGluZyB3ZSBuZWVkIGV4Y2VwdCBleGNlcHRpb24gbWFuYWdlbWVudC5cbnZhciByYXdBc2FwID0gcmVxdWlyZShcIi4vcmF3XCIpO1xuLy8gUmF3VGFza3MgYXJlIHJlY3ljbGVkIHRvIHJlZHVjZSBHQyBjaHVybi5cbnZhciBmcmVlVGFza3MgPSBbXTtcbi8vIFdlIHF1ZXVlIGVycm9ycyB0byBlbnN1cmUgdGhleSBhcmUgdGhyb3duIGluIHJpZ2h0IG9yZGVyIChGSUZPKS5cbi8vIEFycmF5LWFzLXF1ZXVlIGlzIGdvb2QgZW5vdWdoIGhlcmUsIHNpbmNlIHdlIGFyZSBqdXN0IGRlYWxpbmcgd2l0aCBleGNlcHRpb25zLlxudmFyIHBlbmRpbmdFcnJvcnMgPSBbXTtcbnZhciByZXF1ZXN0RXJyb3JUaHJvdyA9IHJhd0FzYXAubWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyKHRocm93Rmlyc3RFcnJvcik7XG5cbmZ1bmN0aW9uIHRocm93Rmlyc3RFcnJvcigpIHtcbiAgICBpZiAocGVuZGluZ0Vycm9ycy5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgcGVuZGluZ0Vycm9ycy5zaGlmdCgpO1xuICAgIH1cbn1cblxuLyoqXG4gKiBDYWxscyBhIHRhc2sgYXMgc29vbiBhcyBwb3NzaWJsZSBhZnRlciByZXR1cm5pbmcsIGluIGl0cyBvd24gZXZlbnQsIHdpdGggcHJpb3JpdHlcbiAqIG92ZXIgb3RoZXIgZXZlbnRzIGxpa2UgYW5pbWF0aW9uLCByZWZsb3csIGFuZCByZXBhaW50LiBBbiBlcnJvciB0aHJvd24gZnJvbSBhblxuICogZXZlbnQgd2lsbCBub3QgaW50ZXJydXB0LCBub3IgZXZlbiBzdWJzdGFudGlhbGx5IHNsb3cgZG93biB0aGUgcHJvY2Vzc2luZyBvZlxuICogb3RoZXIgZXZlbnRzLCBidXQgd2lsbCBiZSByYXRoZXIgcG9zdHBvbmVkIHRvIGEgbG93ZXIgcHJpb3JpdHkgZXZlbnQuXG4gKiBAcGFyYW0ge3tjYWxsfX0gdGFzayBBIGNhbGxhYmxlIG9iamVjdCwgdHlwaWNhbGx5IGEgZnVuY3Rpb24gdGhhdCB0YWtlcyBub1xuICogYXJndW1lbnRzLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGFzYXA7XG5mdW5jdGlvbiBhc2FwKHRhc2spIHtcbiAgICB2YXIgcmF3VGFzaztcbiAgICBpZiAoZnJlZVRhc2tzLmxlbmd0aCkge1xuICAgICAgICByYXdUYXNrID0gZnJlZVRhc2tzLnBvcCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJhd1Rhc2sgPSBuZXcgUmF3VGFzaygpO1xuICAgIH1cbiAgICByYXdUYXNrLnRhc2sgPSB0YXNrO1xuICAgIHJhd0FzYXAocmF3VGFzayk7XG59XG5cbi8vIFdlIHdyYXAgdGFza3Mgd2l0aCByZWN5Y2xhYmxlIHRhc2sgb2JqZWN0cy4gIEEgdGFzayBvYmplY3QgaW1wbGVtZW50c1xuLy8gYGNhbGxgLCBqdXN0IGxpa2UgYSBmdW5jdGlvbi5cbmZ1bmN0aW9uIFJhd1Rhc2soKSB7XG4gICAgdGhpcy50YXNrID0gbnVsbDtcbn1cblxuLy8gVGhlIHNvbGUgcHVycG9zZSBvZiB3cmFwcGluZyB0aGUgdGFzayBpcyB0byBjYXRjaCB0aGUgZXhjZXB0aW9uIGFuZCByZWN5Y2xlXG4vLyB0aGUgdGFzayBvYmplY3QgYWZ0ZXIgaXRzIHNpbmdsZSB1c2UuXG5SYXdUYXNrLnByb3RvdHlwZS5jYWxsID0gZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICAgIHRoaXMudGFzay5jYWxsKCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgaWYgKGFzYXAub25lcnJvcikge1xuICAgICAgICAgICAgLy8gVGhpcyBob29rIGV4aXN0cyBwdXJlbHkgZm9yIHRlc3RpbmcgcHVycG9zZXMuXG4gICAgICAgICAgICAvLyBJdHMgbmFtZSB3aWxsIGJlIHBlcmlvZGljYWxseSByYW5kb21pemVkIHRvIGJyZWFrIGFueSBjb2RlIHRoYXRcbiAgICAgICAgICAgIC8vIGRlcGVuZHMgb24gaXRzIGV4aXN0ZW5jZS5cbiAgICAgICAgICAgIGFzYXAub25lcnJvcihlcnJvcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBJbiBhIHdlYiBicm93c2VyLCBleGNlcHRpb25zIGFyZSBub3QgZmF0YWwuIEhvd2V2ZXIsIHRvIGF2b2lkXG4gICAgICAgICAgICAvLyBzbG93aW5nIGRvd24gdGhlIHF1ZXVlIG9mIHBlbmRpbmcgdGFza3MsIHdlIHJldGhyb3cgdGhlIGVycm9yIGluIGFcbiAgICAgICAgICAgIC8vIGxvd2VyIHByaW9yaXR5IHR1cm4uXG4gICAgICAgICAgICBwZW5kaW5nRXJyb3JzLnB1c2goZXJyb3IpO1xuICAgICAgICAgICAgcmVxdWVzdEVycm9yVGhyb3coKTtcbiAgICAgICAgfVxuICAgIH0gZmluYWxseSB7XG4gICAgICAgIHRoaXMudGFzayA9IG51bGw7XG4gICAgICAgIGZyZWVUYXNrc1tmcmVlVGFza3MubGVuZ3RoXSA9IHRoaXM7XG4gICAgfVxufTtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vLyBVc2UgdGhlIGZhc3Rlc3QgbWVhbnMgcG9zc2libGUgdG8gZXhlY3V0ZSBhIHRhc2sgaW4gaXRzIG93biB0dXJuLCB3aXRoXG4vLyBwcmlvcml0eSBvdmVyIG90aGVyIGV2ZW50cyBpbmNsdWRpbmcgSU8sIGFuaW1hdGlvbiwgcmVmbG93LCBhbmQgcmVkcmF3XG4vLyBldmVudHMgaW4gYnJvd3NlcnMuXG4vL1xuLy8gQW4gZXhjZXB0aW9uIHRocm93biBieSBhIHRhc2sgd2lsbCBwZXJtYW5lbnRseSBpbnRlcnJ1cHQgdGhlIHByb2Nlc3Npbmcgb2Zcbi8vIHN1YnNlcXVlbnQgdGFza3MuIFRoZSBoaWdoZXIgbGV2ZWwgYGFzYXBgIGZ1bmN0aW9uIGVuc3VyZXMgdGhhdCBpZiBhblxuLy8gZXhjZXB0aW9uIGlzIHRocm93biBieSBhIHRhc2ssIHRoYXQgdGhlIHRhc2sgcXVldWUgd2lsbCBjb250aW51ZSBmbHVzaGluZyBhc1xuLy8gc29vbiBhcyBwb3NzaWJsZSwgYnV0IGlmIHlvdSB1c2UgYHJhd0FzYXBgIGRpcmVjdGx5LCB5b3UgYXJlIHJlc3BvbnNpYmxlIHRvXG4vLyBlaXRoZXIgZW5zdXJlIHRoYXQgbm8gZXhjZXB0aW9ucyBhcmUgdGhyb3duIGZyb20geW91ciB0YXNrLCBvciB0byBtYW51YWxseVxuLy8gY2FsbCBgcmF3QXNhcC5yZXF1ZXN0Rmx1c2hgIGlmIGFuIGV4Y2VwdGlvbiBpcyB0aHJvd24uXG5tb2R1bGUuZXhwb3J0cyA9IHJhd0FzYXA7XG5mdW5jdGlvbiByYXdBc2FwKHRhc2spIHtcbiAgICBpZiAoIXF1ZXVlLmxlbmd0aCkge1xuICAgICAgICByZXF1ZXN0Rmx1c2goKTtcbiAgICAgICAgZmx1c2hpbmcgPSB0cnVlO1xuICAgIH1cbiAgICAvLyBFcXVpdmFsZW50IHRvIHB1c2gsIGJ1dCBhdm9pZHMgYSBmdW5jdGlvbiBjYWxsLlxuICAgIHF1ZXVlW3F1ZXVlLmxlbmd0aF0gPSB0YXNrO1xufVxuXG52YXIgcXVldWUgPSBbXTtcbi8vIE9uY2UgYSBmbHVzaCBoYXMgYmVlbiByZXF1ZXN0ZWQsIG5vIGZ1cnRoZXIgY2FsbHMgdG8gYHJlcXVlc3RGbHVzaGAgYXJlXG4vLyBuZWNlc3NhcnkgdW50aWwgdGhlIG5leHQgYGZsdXNoYCBjb21wbGV0ZXMuXG52YXIgZmx1c2hpbmcgPSBmYWxzZTtcbi8vIGByZXF1ZXN0Rmx1c2hgIGlzIGFuIGltcGxlbWVudGF0aW9uLXNwZWNpZmljIG1ldGhvZCB0aGF0IGF0dGVtcHRzIHRvIGtpY2tcbi8vIG9mZiBhIGBmbHVzaGAgZXZlbnQgYXMgcXVpY2tseSBhcyBwb3NzaWJsZS4gYGZsdXNoYCB3aWxsIGF0dGVtcHQgdG8gZXhoYXVzdFxuLy8gdGhlIGV2ZW50IHF1ZXVlIGJlZm9yZSB5aWVsZGluZyB0byB0aGUgYnJvd3NlcidzIG93biBldmVudCBsb29wLlxudmFyIHJlcXVlc3RGbHVzaDtcbi8vIFRoZSBwb3NpdGlvbiBvZiB0aGUgbmV4dCB0YXNrIHRvIGV4ZWN1dGUgaW4gdGhlIHRhc2sgcXVldWUuIFRoaXMgaXNcbi8vIHByZXNlcnZlZCBiZXR3ZWVuIGNhbGxzIHRvIGBmbHVzaGAgc28gdGhhdCBpdCBjYW4gYmUgcmVzdW1lZCBpZlxuLy8gYSB0YXNrIHRocm93cyBhbiBleGNlcHRpb24uXG52YXIgaW5kZXggPSAwO1xuLy8gSWYgYSB0YXNrIHNjaGVkdWxlcyBhZGRpdGlvbmFsIHRhc2tzIHJlY3Vyc2l2ZWx5LCB0aGUgdGFzayBxdWV1ZSBjYW4gZ3Jvd1xuLy8gdW5ib3VuZGVkLiBUbyBwcmV2ZW50IG1lbW9yeSBleGhhdXN0aW9uLCB0aGUgdGFzayBxdWV1ZSB3aWxsIHBlcmlvZGljYWxseVxuLy8gdHJ1bmNhdGUgYWxyZWFkeS1jb21wbGV0ZWQgdGFza3MuXG52YXIgY2FwYWNpdHkgPSAxMDI0O1xuXG4vLyBUaGUgZmx1c2ggZnVuY3Rpb24gcHJvY2Vzc2VzIGFsbCB0YXNrcyB0aGF0IGhhdmUgYmVlbiBzY2hlZHVsZWQgd2l0aFxuLy8gYHJhd0FzYXBgIHVubGVzcyBhbmQgdW50aWwgb25lIG9mIHRob3NlIHRhc2tzIHRocm93cyBhbiBleGNlcHRpb24uXG4vLyBJZiBhIHRhc2sgdGhyb3dzIGFuIGV4Y2VwdGlvbiwgYGZsdXNoYCBlbnN1cmVzIHRoYXQgaXRzIHN0YXRlIHdpbGwgcmVtYWluXG4vLyBjb25zaXN0ZW50IGFuZCB3aWxsIHJlc3VtZSB3aGVyZSBpdCBsZWZ0IG9mZiB3aGVuIGNhbGxlZCBhZ2Fpbi5cbi8vIEhvd2V2ZXIsIGBmbHVzaGAgZG9lcyBub3QgbWFrZSBhbnkgYXJyYW5nZW1lbnRzIHRvIGJlIGNhbGxlZCBhZ2FpbiBpZiBhblxuLy8gZXhjZXB0aW9uIGlzIHRocm93bi5cbmZ1bmN0aW9uIGZsdXNoKCkge1xuICAgIHdoaWxlIChpbmRleCA8IHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICB2YXIgY3VycmVudEluZGV4ID0gaW5kZXg7XG4gICAgICAgIC8vIEFkdmFuY2UgdGhlIGluZGV4IGJlZm9yZSBjYWxsaW5nIHRoZSB0YXNrLiBUaGlzIGVuc3VyZXMgdGhhdCB3ZSB3aWxsXG4gICAgICAgIC8vIGJlZ2luIGZsdXNoaW5nIG9uIHRoZSBuZXh0IHRhc2sgdGhlIHRhc2sgdGhyb3dzIGFuIGVycm9yLlxuICAgICAgICBpbmRleCA9IGluZGV4ICsgMTtcbiAgICAgICAgcXVldWVbY3VycmVudEluZGV4XS5jYWxsKCk7XG4gICAgICAgIC8vIFByZXZlbnQgbGVha2luZyBtZW1vcnkgZm9yIGxvbmcgY2hhaW5zIG9mIHJlY3Vyc2l2ZSBjYWxscyB0byBgYXNhcGAuXG4gICAgICAgIC8vIElmIHdlIGNhbGwgYGFzYXBgIHdpdGhpbiB0YXNrcyBzY2hlZHVsZWQgYnkgYGFzYXBgLCB0aGUgcXVldWUgd2lsbFxuICAgICAgICAvLyBncm93LCBidXQgdG8gYXZvaWQgYW4gTyhuKSB3YWxrIGZvciBldmVyeSB0YXNrIHdlIGV4ZWN1dGUsIHdlIGRvbid0XG4gICAgICAgIC8vIHNoaWZ0IHRhc2tzIG9mZiB0aGUgcXVldWUgYWZ0ZXIgdGhleSBoYXZlIGJlZW4gZXhlY3V0ZWQuXG4gICAgICAgIC8vIEluc3RlYWQsIHdlIHBlcmlvZGljYWxseSBzaGlmdCAxMDI0IHRhc2tzIG9mZiB0aGUgcXVldWUuXG4gICAgICAgIGlmIChpbmRleCA+IGNhcGFjaXR5KSB7XG4gICAgICAgICAgICAvLyBNYW51YWxseSBzaGlmdCBhbGwgdmFsdWVzIHN0YXJ0aW5nIGF0IHRoZSBpbmRleCBiYWNrIHRvIHRoZVxuICAgICAgICAgICAgLy8gYmVnaW5uaW5nIG9mIHRoZSBxdWV1ZS5cbiAgICAgICAgICAgIGZvciAodmFyIHNjYW4gPSAwLCBuZXdMZW5ndGggPSBxdWV1ZS5sZW5ndGggLSBpbmRleDsgc2NhbiA8IG5ld0xlbmd0aDsgc2NhbisrKSB7XG4gICAgICAgICAgICAgICAgcXVldWVbc2Nhbl0gPSBxdWV1ZVtzY2FuICsgaW5kZXhdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcXVldWUubGVuZ3RoIC09IGluZGV4O1xuICAgICAgICAgICAgaW5kZXggPSAwO1xuICAgICAgICB9XG4gICAgfVxuICAgIHF1ZXVlLmxlbmd0aCA9IDA7XG4gICAgaW5kZXggPSAwO1xuICAgIGZsdXNoaW5nID0gZmFsc2U7XG59XG5cbi8vIGByZXF1ZXN0Rmx1c2hgIGlzIGltcGxlbWVudGVkIHVzaW5nIGEgc3RyYXRlZ3kgYmFzZWQgb24gZGF0YSBjb2xsZWN0ZWQgZnJvbVxuLy8gZXZlcnkgYXZhaWxhYmxlIFNhdWNlTGFicyBTZWxlbml1bSB3ZWIgZHJpdmVyIHdvcmtlciBhdCB0aW1lIG9mIHdyaXRpbmcuXG4vLyBodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9zcHJlYWRzaGVldHMvZC8xbUctNVVZR3VwNXF4R2RFTVdraFA2QldDejA1M05VYjJFMVFvVVRVMTZ1QS9lZGl0I2dpZD03ODM3MjQ1OTNcblxuLy8gU2FmYXJpIDYgYW5kIDYuMSBmb3IgZGVza3RvcCwgaVBhZCwgYW5kIGlQaG9uZSBhcmUgdGhlIG9ubHkgYnJvd3NlcnMgdGhhdFxuLy8gaGF2ZSBXZWJLaXRNdXRhdGlvbk9ic2VydmVyIGJ1dCBub3QgdW4tcHJlZml4ZWQgTXV0YXRpb25PYnNlcnZlci5cbi8vIE11c3QgdXNlIGBnbG9iYWxgIG9yIGBzZWxmYCBpbnN0ZWFkIG9mIGB3aW5kb3dgIHRvIHdvcmsgaW4gYm90aCBmcmFtZXMgYW5kIHdlYlxuLy8gd29ya2Vycy4gYGdsb2JhbGAgaXMgYSBwcm92aXNpb24gb2YgQnJvd3NlcmlmeSwgTXIsIE1ycywgb3IgTW9wLlxuXG4vKiBnbG9iYWxzIHNlbGYgKi9cbnZhciBzY29wZSA9IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiBzZWxmO1xudmFyIEJyb3dzZXJNdXRhdGlvbk9ic2VydmVyID0gc2NvcGUuTXV0YXRpb25PYnNlcnZlciB8fCBzY29wZS5XZWJLaXRNdXRhdGlvbk9ic2VydmVyO1xuXG4vLyBNdXRhdGlvbk9ic2VydmVycyBhcmUgZGVzaXJhYmxlIGJlY2F1c2UgdGhleSBoYXZlIGhpZ2ggcHJpb3JpdHkgYW5kIHdvcmtcbi8vIHJlbGlhYmx5IGV2ZXJ5d2hlcmUgdGhleSBhcmUgaW1wbGVtZW50ZWQuXG4vLyBUaGV5IGFyZSBpbXBsZW1lbnRlZCBpbiBhbGwgbW9kZXJuIGJyb3dzZXJzLlxuLy9cbi8vIC0gQW5kcm9pZCA0LTQuM1xuLy8gLSBDaHJvbWUgMjYtMzRcbi8vIC0gRmlyZWZveCAxNC0yOVxuLy8gLSBJbnRlcm5ldCBFeHBsb3JlciAxMVxuLy8gLSBpUGFkIFNhZmFyaSA2LTcuMVxuLy8gLSBpUGhvbmUgU2FmYXJpIDctNy4xXG4vLyAtIFNhZmFyaSA2LTdcbmlmICh0eXBlb2YgQnJvd3Nlck11dGF0aW9uT2JzZXJ2ZXIgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHJlcXVlc3RGbHVzaCA9IG1ha2VSZXF1ZXN0Q2FsbEZyb21NdXRhdGlvbk9ic2VydmVyKGZsdXNoKTtcblxuLy8gTWVzc2FnZUNoYW5uZWxzIGFyZSBkZXNpcmFibGUgYmVjYXVzZSB0aGV5IGdpdmUgZGlyZWN0IGFjY2VzcyB0byB0aGUgSFRNTFxuLy8gdGFzayBxdWV1ZSwgYXJlIGltcGxlbWVudGVkIGluIEludGVybmV0IEV4cGxvcmVyIDEwLCBTYWZhcmkgNS4wLTEsIGFuZCBPcGVyYVxuLy8gMTEtMTIsIGFuZCBpbiB3ZWIgd29ya2VycyBpbiBtYW55IGVuZ2luZXMuXG4vLyBBbHRob3VnaCBtZXNzYWdlIGNoYW5uZWxzIHlpZWxkIHRvIGFueSBxdWV1ZWQgcmVuZGVyaW5nIGFuZCBJTyB0YXNrcywgdGhleVxuLy8gd291bGQgYmUgYmV0dGVyIHRoYW4gaW1wb3NpbmcgdGhlIDRtcyBkZWxheSBvZiB0aW1lcnMuXG4vLyBIb3dldmVyLCB0aGV5IGRvIG5vdCB3b3JrIHJlbGlhYmx5IGluIEludGVybmV0IEV4cGxvcmVyIG9yIFNhZmFyaS5cblxuLy8gSW50ZXJuZXQgRXhwbG9yZXIgMTAgaXMgdGhlIG9ubHkgYnJvd3NlciB0aGF0IGhhcyBzZXRJbW1lZGlhdGUgYnV0IGRvZXNcbi8vIG5vdCBoYXZlIE11dGF0aW9uT2JzZXJ2ZXJzLlxuLy8gQWx0aG91Z2ggc2V0SW1tZWRpYXRlIHlpZWxkcyB0byB0aGUgYnJvd3NlcidzIHJlbmRlcmVyLCBpdCB3b3VsZCBiZVxuLy8gcHJlZmVycmFibGUgdG8gZmFsbGluZyBiYWNrIHRvIHNldFRpbWVvdXQgc2luY2UgaXQgZG9lcyBub3QgaGF2ZVxuLy8gdGhlIG1pbmltdW0gNG1zIHBlbmFsdHkuXG4vLyBVbmZvcnR1bmF0ZWx5IHRoZXJlIGFwcGVhcnMgdG8gYmUgYSBidWcgaW4gSW50ZXJuZXQgRXhwbG9yZXIgMTAgTW9iaWxlIChhbmRcbi8vIERlc2t0b3AgdG8gYSBsZXNzZXIgZXh0ZW50KSB0aGF0IHJlbmRlcnMgYm90aCBzZXRJbW1lZGlhdGUgYW5kXG4vLyBNZXNzYWdlQ2hhbm5lbCB1c2VsZXNzIGZvciB0aGUgcHVycG9zZXMgb2YgQVNBUC5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9rcmlza293YWwvcS9pc3N1ZXMvMzk2XG5cbi8vIFRpbWVycyBhcmUgaW1wbGVtZW50ZWQgdW5pdmVyc2FsbHkuXG4vLyBXZSBmYWxsIGJhY2sgdG8gdGltZXJzIGluIHdvcmtlcnMgaW4gbW9zdCBlbmdpbmVzLCBhbmQgaW4gZm9yZWdyb3VuZFxuLy8gY29udGV4dHMgaW4gdGhlIGZvbGxvd2luZyBicm93c2Vycy5cbi8vIEhvd2V2ZXIsIG5vdGUgdGhhdCBldmVuIHRoaXMgc2ltcGxlIGNhc2UgcmVxdWlyZXMgbnVhbmNlcyB0byBvcGVyYXRlIGluIGFcbi8vIGJyb2FkIHNwZWN0cnVtIG9mIGJyb3dzZXJzLlxuLy9cbi8vIC0gRmlyZWZveCAzLTEzXG4vLyAtIEludGVybmV0IEV4cGxvcmVyIDYtOVxuLy8gLSBpUGFkIFNhZmFyaSA0LjNcbi8vIC0gTHlueCAyLjguN1xufSBlbHNlIHtcbiAgICByZXF1ZXN0Rmx1c2ggPSBtYWtlUmVxdWVzdENhbGxGcm9tVGltZXIoZmx1c2gpO1xufVxuXG4vLyBgcmVxdWVzdEZsdXNoYCByZXF1ZXN0cyB0aGF0IHRoZSBoaWdoIHByaW9yaXR5IGV2ZW50IHF1ZXVlIGJlIGZsdXNoZWQgYXNcbi8vIHNvb24gYXMgcG9zc2libGUuXG4vLyBUaGlzIGlzIHVzZWZ1bCB0byBwcmV2ZW50IGFuIGVycm9yIHRocm93biBpbiBhIHRhc2sgZnJvbSBzdGFsbGluZyB0aGUgZXZlbnRcbi8vIHF1ZXVlIGlmIHRoZSBleGNlcHRpb24gaGFuZGxlZCBieSBOb2RlLmpz4oCZc1xuLy8gYHByb2Nlc3Mub24oXCJ1bmNhdWdodEV4Y2VwdGlvblwiKWAgb3IgYnkgYSBkb21haW4uXG5yYXdBc2FwLnJlcXVlc3RGbHVzaCA9IHJlcXVlc3RGbHVzaDtcblxuLy8gVG8gcmVxdWVzdCBhIGhpZ2ggcHJpb3JpdHkgZXZlbnQsIHdlIGluZHVjZSBhIG11dGF0aW9uIG9ic2VydmVyIGJ5IHRvZ2dsaW5nXG4vLyB0aGUgdGV4dCBvZiBhIHRleHQgbm9kZSBiZXR3ZWVuIFwiMVwiIGFuZCBcIi0xXCIuXG5mdW5jdGlvbiBtYWtlUmVxdWVzdENhbGxGcm9tTXV0YXRpb25PYnNlcnZlcihjYWxsYmFjaykge1xuICAgIHZhciB0b2dnbGUgPSAxO1xuICAgIHZhciBvYnNlcnZlciA9IG5ldyBCcm93c2VyTXV0YXRpb25PYnNlcnZlcihjYWxsYmFjayk7XG4gICAgdmFyIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIlwiKTtcbiAgICBvYnNlcnZlci5vYnNlcnZlKG5vZGUsIHtjaGFyYWN0ZXJEYXRhOiB0cnVlfSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHJlcXVlc3RDYWxsKCkge1xuICAgICAgICB0b2dnbGUgPSAtdG9nZ2xlO1xuICAgICAgICBub2RlLmRhdGEgPSB0b2dnbGU7XG4gICAgfTtcbn1cblxuLy8gVGhlIG1lc3NhZ2UgY2hhbm5lbCB0ZWNobmlxdWUgd2FzIGRpc2NvdmVyZWQgYnkgTWFsdGUgVWJsIGFuZCB3YXMgdGhlXG4vLyBvcmlnaW5hbCBmb3VuZGF0aW9uIGZvciB0aGlzIGxpYnJhcnkuXG4vLyBodHRwOi8vd3d3Lm5vbmJsb2NraW5nLmlvLzIwMTEvMDYvd2luZG93bmV4dHRpY2suaHRtbFxuXG4vLyBTYWZhcmkgNi4wLjUgKGF0IGxlYXN0KSBpbnRlcm1pdHRlbnRseSBmYWlscyB0byBjcmVhdGUgbWVzc2FnZSBwb3J0cyBvbiBhXG4vLyBwYWdlJ3MgZmlyc3QgbG9hZC4gVGhhbmtmdWxseSwgdGhpcyB2ZXJzaW9uIG9mIFNhZmFyaSBzdXBwb3J0c1xuLy8gTXV0YXRpb25PYnNlcnZlcnMsIHNvIHdlIGRvbid0IG5lZWQgdG8gZmFsbCBiYWNrIGluIHRoYXQgY2FzZS5cblxuLy8gZnVuY3Rpb24gbWFrZVJlcXVlc3RDYWxsRnJvbU1lc3NhZ2VDaGFubmVsKGNhbGxiYWNrKSB7XG4vLyAgICAgdmFyIGNoYW5uZWwgPSBuZXcgTWVzc2FnZUNoYW5uZWwoKTtcbi8vICAgICBjaGFubmVsLnBvcnQxLm9ubWVzc2FnZSA9IGNhbGxiYWNrO1xuLy8gICAgIHJldHVybiBmdW5jdGlvbiByZXF1ZXN0Q2FsbCgpIHtcbi8vICAgICAgICAgY2hhbm5lbC5wb3J0Mi5wb3N0TWVzc2FnZSgwKTtcbi8vICAgICB9O1xuLy8gfVxuXG4vLyBGb3IgcmVhc29ucyBleHBsYWluZWQgYWJvdmUsIHdlIGFyZSBhbHNvIHVuYWJsZSB0byB1c2UgYHNldEltbWVkaWF0ZWBcbi8vIHVuZGVyIGFueSBjaXJjdW1zdGFuY2VzLlxuLy8gRXZlbiBpZiB3ZSB3ZXJlLCB0aGVyZSBpcyBhbm90aGVyIGJ1ZyBpbiBJbnRlcm5ldCBFeHBsb3JlciAxMC5cbi8vIEl0IGlzIG5vdCBzdWZmaWNpZW50IHRvIGFzc2lnbiBgc2V0SW1tZWRpYXRlYCB0byBgcmVxdWVzdEZsdXNoYCBiZWNhdXNlXG4vLyBgc2V0SW1tZWRpYXRlYCBtdXN0IGJlIGNhbGxlZCAqYnkgbmFtZSogYW5kIHRoZXJlZm9yZSBtdXN0IGJlIHdyYXBwZWQgaW4gYVxuLy8gY2xvc3VyZS5cbi8vIE5ldmVyIGZvcmdldC5cblxuLy8gZnVuY3Rpb24gbWFrZVJlcXVlc3RDYWxsRnJvbVNldEltbWVkaWF0ZShjYWxsYmFjaykge1xuLy8gICAgIHJldHVybiBmdW5jdGlvbiByZXF1ZXN0Q2FsbCgpIHtcbi8vICAgICAgICAgc2V0SW1tZWRpYXRlKGNhbGxiYWNrKTtcbi8vICAgICB9O1xuLy8gfVxuXG4vLyBTYWZhcmkgNi4wIGhhcyBhIHByb2JsZW0gd2hlcmUgdGltZXJzIHdpbGwgZ2V0IGxvc3Qgd2hpbGUgdGhlIHVzZXIgaXNcbi8vIHNjcm9sbGluZy4gVGhpcyBwcm9ibGVtIGRvZXMgbm90IGltcGFjdCBBU0FQIGJlY2F1c2UgU2FmYXJpIDYuMCBzdXBwb3J0c1xuLy8gbXV0YXRpb24gb2JzZXJ2ZXJzLCBzbyB0aGF0IGltcGxlbWVudGF0aW9uIGlzIHVzZWQgaW5zdGVhZC5cbi8vIEhvd2V2ZXIsIGlmIHdlIGV2ZXIgZWxlY3QgdG8gdXNlIHRpbWVycyBpbiBTYWZhcmksIHRoZSBwcmV2YWxlbnQgd29yay1hcm91bmRcbi8vIGlzIHRvIGFkZCBhIHNjcm9sbCBldmVudCBsaXN0ZW5lciB0aGF0IGNhbGxzIGZvciBhIGZsdXNoLlxuXG4vLyBgc2V0VGltZW91dGAgZG9lcyBub3QgY2FsbCB0aGUgcGFzc2VkIGNhbGxiYWNrIGlmIHRoZSBkZWxheSBpcyBsZXNzIHRoYW5cbi8vIGFwcHJveGltYXRlbHkgNyBpbiB3ZWIgd29ya2VycyBpbiBGaXJlZm94IDggdGhyb3VnaCAxOCwgYW5kIHNvbWV0aW1lcyBub3Rcbi8vIGV2ZW4gdGhlbi5cblxuZnVuY3Rpb24gbWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyKGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHJlcXVlc3RDYWxsKCkge1xuICAgICAgICAvLyBXZSBkaXNwYXRjaCBhIHRpbWVvdXQgd2l0aCBhIHNwZWNpZmllZCBkZWxheSBvZiAwIGZvciBlbmdpbmVzIHRoYXRcbiAgICAgICAgLy8gY2FuIHJlbGlhYmx5IGFjY29tbW9kYXRlIHRoYXQgcmVxdWVzdC4gVGhpcyB3aWxsIHVzdWFsbHkgYmUgc25hcHBlZFxuICAgICAgICAvLyB0byBhIDQgbWlsaXNlY29uZCBkZWxheSwgYnV0IG9uY2Ugd2UncmUgZmx1c2hpbmcsIHRoZXJlJ3Mgbm8gZGVsYXlcbiAgICAgICAgLy8gYmV0d2VlbiBldmVudHMuXG4gICAgICAgIHZhciB0aW1lb3V0SGFuZGxlID0gc2V0VGltZW91dChoYW5kbGVUaW1lciwgMCk7XG4gICAgICAgIC8vIEhvd2V2ZXIsIHNpbmNlIHRoaXMgdGltZXIgZ2V0cyBmcmVxdWVudGx5IGRyb3BwZWQgaW4gRmlyZWZveFxuICAgICAgICAvLyB3b3JrZXJzLCB3ZSBlbmxpc3QgYW4gaW50ZXJ2YWwgaGFuZGxlIHRoYXQgd2lsbCB0cnkgdG8gZmlyZVxuICAgICAgICAvLyBhbiBldmVudCAyMCB0aW1lcyBwZXIgc2Vjb25kIHVudGlsIGl0IHN1Y2NlZWRzLlxuICAgICAgICB2YXIgaW50ZXJ2YWxIYW5kbGUgPSBzZXRJbnRlcnZhbChoYW5kbGVUaW1lciwgNTApO1xuXG4gICAgICAgIGZ1bmN0aW9uIGhhbmRsZVRpbWVyKCkge1xuICAgICAgICAgICAgLy8gV2hpY2hldmVyIHRpbWVyIHN1Y2NlZWRzIHdpbGwgY2FuY2VsIGJvdGggdGltZXJzIGFuZFxuICAgICAgICAgICAgLy8gZXhlY3V0ZSB0aGUgY2FsbGJhY2suXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dEhhbmRsZSk7XG4gICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsSGFuZGxlKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG4vLyBUaGlzIGlzIGZvciBgYXNhcC5qc2Agb25seS5cbi8vIEl0cyBuYW1lIHdpbGwgYmUgcGVyaW9kaWNhbGx5IHJhbmRvbWl6ZWQgdG8gYnJlYWsgYW55IGNvZGUgdGhhdCBkZXBlbmRzIG9uXG4vLyBpdHMgZXhpc3RlbmNlLlxucmF3QXNhcC5tYWtlUmVxdWVzdENhbGxGcm9tVGltZXIgPSBtYWtlUmVxdWVzdENhbGxGcm9tVGltZXI7XG5cbi8vIEFTQVAgd2FzIG9yaWdpbmFsbHkgYSBuZXh0VGljayBzaGltIGluY2x1ZGVkIGluIFEuIFRoaXMgd2FzIGZhY3RvcmVkIG91dFxuLy8gaW50byB0aGlzIEFTQVAgcGFja2FnZS4gSXQgd2FzIGxhdGVyIGFkYXB0ZWQgdG8gUlNWUCB3aGljaCBtYWRlIGZ1cnRoZXJcbi8vIGFtZW5kbWVudHMuIFRoZXNlIGRlY2lzaW9ucywgcGFydGljdWxhcmx5IHRvIG1hcmdpbmFsaXplIE1lc3NhZ2VDaGFubmVsIGFuZFxuLy8gdG8gY2FwdHVyZSB0aGUgTXV0YXRpb25PYnNlcnZlciBpbXBsZW1lbnRhdGlvbiBpbiBhIGNsb3N1cmUsIHdlcmUgaW50ZWdyYXRlZFxuLy8gYmFjayBpbnRvIEFTQVAgcHJvcGVyLlxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3RpbGRlaW8vcnN2cC5qcy9ibG9iL2NkZGY3MjMyNTQ2YTljZjg1ODUyNGI3NWNkZTZmOWVkZjcyNjIwYTcvbGliL3JzdnAvYXNhcC5qc1xuIiwiJ3VzZSBzdHJpY3QnXG5cbmV4cG9ydHMuYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGhcbmV4cG9ydHMudG9CeXRlQXJyYXkgPSB0b0J5dGVBcnJheVxuZXhwb3J0cy5mcm9tQnl0ZUFycmF5ID0gZnJvbUJ5dGVBcnJheVxuXG52YXIgbG9va3VwID0gW11cbnZhciByZXZMb29rdXAgPSBbXVxudmFyIEFyciA9IHR5cGVvZiBVaW50OEFycmF5ICE9PSAndW5kZWZpbmVkJyA/IFVpbnQ4QXJyYXkgOiBBcnJheVxuXG52YXIgY29kZSA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJ1xuZm9yICh2YXIgaSA9IDAsIGxlbiA9IGNvZGUubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgbG9va3VwW2ldID0gY29kZVtpXVxuICByZXZMb29rdXBbY29kZS5jaGFyQ29kZUF0KGkpXSA9IGlcbn1cblxuLy8gU3VwcG9ydCBkZWNvZGluZyBVUkwtc2FmZSBiYXNlNjQgc3RyaW5ncywgYXMgTm9kZS5qcyBkb2VzLlxuLy8gU2VlOiBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9CYXNlNjQjVVJMX2FwcGxpY2F0aW9uc1xucmV2TG9va3VwWyctJy5jaGFyQ29kZUF0KDApXSA9IDYyXG5yZXZMb29rdXBbJ18nLmNoYXJDb2RlQXQoMCldID0gNjNcblxuZnVuY3Rpb24gZ2V0TGVucyAoYjY0KSB7XG4gIHZhciBsZW4gPSBiNjQubGVuZ3RoXG5cbiAgaWYgKGxlbiAlIDQgPiAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHN0cmluZy4gTGVuZ3RoIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA0JylcbiAgfVxuXG4gIC8vIFRyaW0gb2ZmIGV4dHJhIGJ5dGVzIGFmdGVyIHBsYWNlaG9sZGVyIGJ5dGVzIGFyZSBmb3VuZFxuICAvLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9iZWF0Z2FtbWl0L2Jhc2U2NC1qcy9pc3N1ZXMvNDJcbiAgdmFyIHZhbGlkTGVuID0gYjY0LmluZGV4T2YoJz0nKVxuICBpZiAodmFsaWRMZW4gPT09IC0xKSB2YWxpZExlbiA9IGxlblxuXG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSB2YWxpZExlbiA9PT0gbGVuXG4gICAgPyAwXG4gICAgOiA0IC0gKHZhbGlkTGVuICUgNClcblxuICByZXR1cm4gW3ZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW5dXG59XG5cbi8vIGJhc2U2NCBpcyA0LzMgKyB1cCB0byB0d28gY2hhcmFjdGVycyBvZiB0aGUgb3JpZ2luYWwgZGF0YVxuZnVuY3Rpb24gYnl0ZUxlbmd0aCAoYjY0KSB7XG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV1cbiAgcmV0dXJuICgodmFsaWRMZW4gKyBwbGFjZUhvbGRlcnNMZW4pICogMyAvIDQpIC0gcGxhY2VIb2xkZXJzTGVuXG59XG5cbmZ1bmN0aW9uIF9ieXRlTGVuZ3RoIChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pIHtcbiAgcmV0dXJuICgodmFsaWRMZW4gKyBwbGFjZUhvbGRlcnNMZW4pICogMyAvIDQpIC0gcGxhY2VIb2xkZXJzTGVuXG59XG5cbmZ1bmN0aW9uIHRvQnl0ZUFycmF5IChiNjQpIHtcbiAgdmFyIHRtcFxuICB2YXIgbGVucyA9IGdldExlbnMoYjY0KVxuICB2YXIgdmFsaWRMZW4gPSBsZW5zWzBdXG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSBsZW5zWzFdXG5cbiAgdmFyIGFyciA9IG5ldyBBcnIoX2J5dGVMZW5ndGgoYjY0LCB2YWxpZExlbiwgcGxhY2VIb2xkZXJzTGVuKSlcblxuICB2YXIgY3VyQnl0ZSA9IDBcblxuICAvLyBpZiB0aGVyZSBhcmUgcGxhY2Vob2xkZXJzLCBvbmx5IGdldCB1cCB0byB0aGUgbGFzdCBjb21wbGV0ZSA0IGNoYXJzXG4gIHZhciBsZW4gPSBwbGFjZUhvbGRlcnNMZW4gPiAwXG4gICAgPyB2YWxpZExlbiAtIDRcbiAgICA6IHZhbGlkTGVuXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkgKz0gNCkge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxOCkgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldIDw8IDEyKSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAyKV0gPDwgNikgfFxuICAgICAgcmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAzKV1cbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gMTYpICYgMHhGRlxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiA4KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIGlmIChwbGFjZUhvbGRlcnNMZW4gPT09IDIpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMikgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldID4+IDQpXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICBpZiAocGxhY2VIb2xkZXJzTGVuID09PSAxKSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDEwKSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPDwgNCkgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMildID4+IDIpXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDgpICYgMHhGRlxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgcmV0dXJuIGFyclxufVxuXG5mdW5jdGlvbiB0cmlwbGV0VG9CYXNlNjQgKG51bSkge1xuICByZXR1cm4gbG9va3VwW251bSA+PiAxOCAmIDB4M0ZdICtcbiAgICBsb29rdXBbbnVtID4+IDEyICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gPj4gNiAmIDB4M0ZdICtcbiAgICBsb29rdXBbbnVtICYgMHgzRl1cbn1cblxuZnVuY3Rpb24gZW5jb2RlQ2h1bmsgKHVpbnQ4LCBzdGFydCwgZW5kKSB7XG4gIHZhciB0bXBcbiAgdmFyIG91dHB1dCA9IFtdXG4gIGZvciAodmFyIGkgPSBzdGFydDsgaSA8IGVuZDsgaSArPSAzKSB7XG4gICAgdG1wID1cbiAgICAgICgodWludDhbaV0gPDwgMTYpICYgMHhGRjAwMDApICtcbiAgICAgICgodWludDhbaSArIDFdIDw8IDgpICYgMHhGRjAwKSArXG4gICAgICAodWludDhbaSArIDJdICYgMHhGRilcbiAgICBvdXRwdXQucHVzaCh0cmlwbGV0VG9CYXNlNjQodG1wKSlcbiAgfVxuICByZXR1cm4gb3V0cHV0LmpvaW4oJycpXG59XG5cbmZ1bmN0aW9uIGZyb21CeXRlQXJyYXkgKHVpbnQ4KSB7XG4gIHZhciB0bXBcbiAgdmFyIGxlbiA9IHVpbnQ4Lmxlbmd0aFxuICB2YXIgZXh0cmFCeXRlcyA9IGxlbiAlIDMgLy8gaWYgd2UgaGF2ZSAxIGJ5dGUgbGVmdCwgcGFkIDIgYnl0ZXNcbiAgdmFyIHBhcnRzID0gW11cbiAgdmFyIG1heENodW5rTGVuZ3RoID0gMTYzODMgLy8gbXVzdCBiZSBtdWx0aXBsZSBvZiAzXG5cbiAgLy8gZ28gdGhyb3VnaCB0aGUgYXJyYXkgZXZlcnkgdGhyZWUgYnl0ZXMsIHdlJ2xsIGRlYWwgd2l0aCB0cmFpbGluZyBzdHVmZiBsYXRlclxuICBmb3IgKHZhciBpID0gMCwgbGVuMiA9IGxlbiAtIGV4dHJhQnl0ZXM7IGkgPCBsZW4yOyBpICs9IG1heENodW5rTGVuZ3RoKSB7XG4gICAgcGFydHMucHVzaChlbmNvZGVDaHVuayhcbiAgICAgIHVpbnQ4LCBpLCAoaSArIG1heENodW5rTGVuZ3RoKSA+IGxlbjIgPyBsZW4yIDogKGkgKyBtYXhDaHVua0xlbmd0aClcbiAgICApKVxuICB9XG5cbiAgLy8gcGFkIHRoZSBlbmQgd2l0aCB6ZXJvcywgYnV0IG1ha2Ugc3VyZSB0byBub3QgZm9yZ2V0IHRoZSBleHRyYSBieXRlc1xuICBpZiAoZXh0cmFCeXRlcyA9PT0gMSkge1xuICAgIHRtcCA9IHVpbnQ4W2xlbiAtIDFdXG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMl0gK1xuICAgICAgbG9va3VwWyh0bXAgPDwgNCkgJiAweDNGXSArXG4gICAgICAnPT0nXG4gICAgKVxuICB9IGVsc2UgaWYgKGV4dHJhQnl0ZXMgPT09IDIpIHtcbiAgICB0bXAgPSAodWludDhbbGVuIC0gMl0gPDwgOCkgKyB1aW50OFtsZW4gLSAxXVxuICAgIHBhcnRzLnB1c2goXG4gICAgICBsb29rdXBbdG1wID4+IDEwXSArXG4gICAgICBsb29rdXBbKHRtcCA+PiA0KSAmIDB4M0ZdICtcbiAgICAgIGxvb2t1cFsodG1wIDw8IDIpICYgMHgzRl0gK1xuICAgICAgJz0nXG4gICAgKVxuICB9XG5cbiAgcmV0dXJuIHBhcnRzLmpvaW4oJycpXG59XG4iLCIiLCIvKiFcbiAqIFRoZSBidWZmZXIgbW9kdWxlIGZyb20gbm9kZS5qcywgZm9yIHRoZSBicm93c2VyLlxuICpcbiAqIEBhdXRob3IgICBGZXJvc3MgQWJvdWtoYWRpamVoIDxodHRwczovL2Zlcm9zcy5vcmc+XG4gKiBAbGljZW5zZSAgTUlUXG4gKi9cbi8qIGVzbGludC1kaXNhYmxlIG5vLXByb3RvICovXG5cbid1c2Ugc3RyaWN0J1xuXG52YXIgYmFzZTY0ID0gcmVxdWlyZSgnYmFzZTY0LWpzJylcbnZhciBpZWVlNzU0ID0gcmVxdWlyZSgnaWVlZTc1NCcpXG5cbmV4cG9ydHMuQnVmZmVyID0gQnVmZmVyXG5leHBvcnRzLlNsb3dCdWZmZXIgPSBTbG93QnVmZmVyXG5leHBvcnRzLklOU1BFQ1RfTUFYX0JZVEVTID0gNTBcblxudmFyIEtfTUFYX0xFTkdUSCA9IDB4N2ZmZmZmZmZcbmV4cG9ydHMua01heExlbmd0aCA9IEtfTUFYX0xFTkdUSFxuXG4vKipcbiAqIElmIGBCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVGA6XG4gKiAgID09PSB0cnVlICAgIFVzZSBVaW50OEFycmF5IGltcGxlbWVudGF0aW9uIChmYXN0ZXN0KVxuICogICA9PT0gZmFsc2UgICBQcmludCB3YXJuaW5nIGFuZCByZWNvbW1lbmQgdXNpbmcgYGJ1ZmZlcmAgdjQueCB3aGljaCBoYXMgYW4gT2JqZWN0XG4gKiAgICAgICAgICAgICAgIGltcGxlbWVudGF0aW9uIChtb3N0IGNvbXBhdGlibGUsIGV2ZW4gSUU2KVxuICpcbiAqIEJyb3dzZXJzIHRoYXQgc3VwcG9ydCB0eXBlZCBhcnJheXMgYXJlIElFIDEwKywgRmlyZWZveCA0KywgQ2hyb21lIDcrLCBTYWZhcmkgNS4xKyxcbiAqIE9wZXJhIDExLjYrLCBpT1MgNC4yKy5cbiAqXG4gKiBXZSByZXBvcnQgdGhhdCB0aGUgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IHR5cGVkIGFycmF5cyBpZiB0aGUgYXJlIG5vdCBzdWJjbGFzc2FibGVcbiAqIHVzaW5nIF9fcHJvdG9fXy4gRmlyZWZveCA0LTI5IGxhY2tzIHN1cHBvcnQgZm9yIGFkZGluZyBuZXcgcHJvcGVydGllcyB0byBgVWludDhBcnJheWBcbiAqIChTZWU6IGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTY5NTQzOCkuIElFIDEwIGxhY2tzIHN1cHBvcnRcbiAqIGZvciBfX3Byb3RvX18gYW5kIGhhcyBhIGJ1Z2d5IHR5cGVkIGFycmF5IGltcGxlbWVudGF0aW9uLlxuICovXG5CdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCA9IHR5cGVkQXJyYXlTdXBwb3J0KClcblxuaWYgKCFCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCAmJiB0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICB0eXBlb2YgY29uc29sZS5lcnJvciA9PT0gJ2Z1bmN0aW9uJykge1xuICBjb25zb2xlLmVycm9yKFxuICAgICdUaGlzIGJyb3dzZXIgbGFja3MgdHlwZWQgYXJyYXkgKFVpbnQ4QXJyYXkpIHN1cHBvcnQgd2hpY2ggaXMgcmVxdWlyZWQgYnkgJyArXG4gICAgJ2BidWZmZXJgIHY1LnguIFVzZSBgYnVmZmVyYCB2NC54IGlmIHlvdSByZXF1aXJlIG9sZCBicm93c2VyIHN1cHBvcnQuJ1xuICApXG59XG5cbmZ1bmN0aW9uIHR5cGVkQXJyYXlTdXBwb3J0ICgpIHtcbiAgLy8gQ2FuIHR5cGVkIGFycmF5IGluc3RhbmNlcyBjYW4gYmUgYXVnbWVudGVkP1xuICB0cnkge1xuICAgIHZhciBhcnIgPSBuZXcgVWludDhBcnJheSgxKVxuICAgIGFyci5fX3Byb3RvX18gPSB7X19wcm90b19fOiBVaW50OEFycmF5LnByb3RvdHlwZSwgZm9vOiBmdW5jdGlvbiAoKSB7IHJldHVybiA0MiB9fVxuICAgIHJldHVybiBhcnIuZm9vKCkgPT09IDQyXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoQnVmZmVyLnByb3RvdHlwZSwgJ3BhcmVudCcsIHtcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIEJ1ZmZlcikpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuYnVmZmVyXG4gIH1cbn0pXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShCdWZmZXIucHJvdG90eXBlLCAnb2Zmc2V0Jywge1xuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoISh0aGlzIGluc3RhbmNlb2YgQnVmZmVyKSkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgIH1cbiAgICByZXR1cm4gdGhpcy5ieXRlT2Zmc2V0XG4gIH1cbn0pXG5cbmZ1bmN0aW9uIGNyZWF0ZUJ1ZmZlciAobGVuZ3RoKSB7XG4gIGlmIChsZW5ndGggPiBLX01BWF9MRU5HVEgpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignSW52YWxpZCB0eXBlZCBhcnJheSBsZW5ndGgnKVxuICB9XG4gIC8vIFJldHVybiBhbiBhdWdtZW50ZWQgYFVpbnQ4QXJyYXlgIGluc3RhbmNlXG4gIHZhciBidWYgPSBuZXcgVWludDhBcnJheShsZW5ndGgpXG4gIGJ1Zi5fX3Byb3RvX18gPSBCdWZmZXIucHJvdG90eXBlXG4gIHJldHVybiBidWZcbn1cblxuLyoqXG4gKiBUaGUgQnVmZmVyIGNvbnN0cnVjdG9yIHJldHVybnMgaW5zdGFuY2VzIG9mIGBVaW50OEFycmF5YCB0aGF0IGhhdmUgdGhlaXJcbiAqIHByb3RvdHlwZSBjaGFuZ2VkIHRvIGBCdWZmZXIucHJvdG90eXBlYC4gRnVydGhlcm1vcmUsIGBCdWZmZXJgIGlzIGEgc3ViY2xhc3Mgb2ZcbiAqIGBVaW50OEFycmF5YCwgc28gdGhlIHJldHVybmVkIGluc3RhbmNlcyB3aWxsIGhhdmUgYWxsIHRoZSBub2RlIGBCdWZmZXJgIG1ldGhvZHNcbiAqIGFuZCB0aGUgYFVpbnQ4QXJyYXlgIG1ldGhvZHMuIFNxdWFyZSBicmFja2V0IG5vdGF0aW9uIHdvcmtzIGFzIGV4cGVjdGVkIC0tIGl0XG4gKiByZXR1cm5zIGEgc2luZ2xlIG9jdGV0LlxuICpcbiAqIFRoZSBgVWludDhBcnJheWAgcHJvdG90eXBlIHJlbWFpbnMgdW5tb2RpZmllZC5cbiAqL1xuXG5mdW5jdGlvbiBCdWZmZXIgKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKSB7XG4gIC8vIENvbW1vbiBjYXNlLlxuICBpZiAodHlwZW9mIGFyZyA9PT0gJ251bWJlcicpIHtcbiAgICBpZiAodHlwZW9mIGVuY29kaW5nT3JPZmZzZXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdJZiBlbmNvZGluZyBpcyBzcGVjaWZpZWQgdGhlbiB0aGUgZmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZydcbiAgICAgIClcbiAgICB9XG4gICAgcmV0dXJuIGFsbG9jVW5zYWZlKGFyZylcbiAgfVxuICByZXR1cm4gZnJvbShhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aClcbn1cblxuLy8gRml4IHN1YmFycmF5KCkgaW4gRVMyMDE2LiBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9mZXJvc3MvYnVmZmVyL3B1bGwvOTdcbmlmICh0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wuc3BlY2llcyAmJlxuICAgIEJ1ZmZlcltTeW1ib2wuc3BlY2llc10gPT09IEJ1ZmZlcikge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQnVmZmVyLCBTeW1ib2wuc3BlY2llcywge1xuICAgIHZhbHVlOiBudWxsLFxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICB3cml0YWJsZTogZmFsc2VcbiAgfSlcbn1cblxuQnVmZmVyLnBvb2xTaXplID0gODE5MiAvLyBub3QgdXNlZCBieSB0aGlzIGltcGxlbWVudGF0aW9uXG5cbmZ1bmN0aW9uIGZyb20gKHZhbHVlLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdcInZhbHVlXCIgYXJndW1lbnQgbXVzdCBub3QgYmUgYSBudW1iZXInKVxuICB9XG5cbiAgaWYgKGlzQXJyYXlCdWZmZXIodmFsdWUpIHx8ICh2YWx1ZSAmJiBpc0FycmF5QnVmZmVyKHZhbHVlLmJ1ZmZlcikpKSB7XG4gICAgcmV0dXJuIGZyb21BcnJheUJ1ZmZlcih2YWx1ZSwgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKVxuICB9XG5cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gZnJvbVN0cmluZyh2YWx1ZSwgZW5jb2RpbmdPck9mZnNldClcbiAgfVxuXG4gIHJldHVybiBmcm9tT2JqZWN0KHZhbHVlKVxufVxuXG4vKipcbiAqIEZ1bmN0aW9uYWxseSBlcXVpdmFsZW50IHRvIEJ1ZmZlcihhcmcsIGVuY29kaW5nKSBidXQgdGhyb3dzIGEgVHlwZUVycm9yXG4gKiBpZiB2YWx1ZSBpcyBhIG51bWJlci5cbiAqIEJ1ZmZlci5mcm9tKHN0clssIGVuY29kaW5nXSlcbiAqIEJ1ZmZlci5mcm9tKGFycmF5KVxuICogQnVmZmVyLmZyb20oYnVmZmVyKVxuICogQnVmZmVyLmZyb20oYXJyYXlCdWZmZXJbLCBieXRlT2Zmc2V0WywgbGVuZ3RoXV0pXG4gKiovXG5CdWZmZXIuZnJvbSA9IGZ1bmN0aW9uICh2YWx1ZSwgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKSB7XG4gIHJldHVybiBmcm9tKHZhbHVlLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpXG59XG5cbi8vIE5vdGU6IENoYW5nZSBwcm90b3R5cGUgKmFmdGVyKiBCdWZmZXIuZnJvbSBpcyBkZWZpbmVkIHRvIHdvcmthcm91bmQgQ2hyb21lIGJ1Zzpcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9mZXJvc3MvYnVmZmVyL3B1bGwvMTQ4XG5CdWZmZXIucHJvdG90eXBlLl9fcHJvdG9fXyA9IFVpbnQ4QXJyYXkucHJvdG90eXBlXG5CdWZmZXIuX19wcm90b19fID0gVWludDhBcnJheVxuXG5mdW5jdGlvbiBhc3NlcnRTaXplIChzaXplKSB7XG4gIGlmICh0eXBlb2Ygc2l6ZSAhPT0gJ251bWJlcicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdcInNpemVcIiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgbnVtYmVyJylcbiAgfSBlbHNlIGlmIChzaXplIDwgMCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdcInNpemVcIiBhcmd1bWVudCBtdXN0IG5vdCBiZSBuZWdhdGl2ZScpXG4gIH1cbn1cblxuZnVuY3Rpb24gYWxsb2MgKHNpemUsIGZpbGwsIGVuY29kaW5nKSB7XG4gIGFzc2VydFNpemUoc2l6ZSlcbiAgaWYgKHNpemUgPD0gMCkge1xuICAgIHJldHVybiBjcmVhdGVCdWZmZXIoc2l6ZSlcbiAgfVxuICBpZiAoZmlsbCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgLy8gT25seSBwYXkgYXR0ZW50aW9uIHRvIGVuY29kaW5nIGlmIGl0J3MgYSBzdHJpbmcuIFRoaXNcbiAgICAvLyBwcmV2ZW50cyBhY2NpZGVudGFsbHkgc2VuZGluZyBpbiBhIG51bWJlciB0aGF0IHdvdWxkXG4gICAgLy8gYmUgaW50ZXJwcmV0dGVkIGFzIGEgc3RhcnQgb2Zmc2V0LlxuICAgIHJldHVybiB0eXBlb2YgZW5jb2RpbmcgPT09ICdzdHJpbmcnXG4gICAgICA/IGNyZWF0ZUJ1ZmZlcihzaXplKS5maWxsKGZpbGwsIGVuY29kaW5nKVxuICAgICAgOiBjcmVhdGVCdWZmZXIoc2l6ZSkuZmlsbChmaWxsKVxuICB9XG4gIHJldHVybiBjcmVhdGVCdWZmZXIoc2l6ZSlcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IGZpbGxlZCBCdWZmZXIgaW5zdGFuY2UuXG4gKiBhbGxvYyhzaXplWywgZmlsbFssIGVuY29kaW5nXV0pXG4gKiovXG5CdWZmZXIuYWxsb2MgPSBmdW5jdGlvbiAoc2l6ZSwgZmlsbCwgZW5jb2RpbmcpIHtcbiAgcmV0dXJuIGFsbG9jKHNpemUsIGZpbGwsIGVuY29kaW5nKVxufVxuXG5mdW5jdGlvbiBhbGxvY1Vuc2FmZSAoc2l6ZSkge1xuICBhc3NlcnRTaXplKHNpemUpXG4gIHJldHVybiBjcmVhdGVCdWZmZXIoc2l6ZSA8IDAgPyAwIDogY2hlY2tlZChzaXplKSB8IDApXG59XG5cbi8qKlxuICogRXF1aXZhbGVudCB0byBCdWZmZXIobnVtKSwgYnkgZGVmYXVsdCBjcmVhdGVzIGEgbm9uLXplcm8tZmlsbGVkIEJ1ZmZlciBpbnN0YW5jZS5cbiAqICovXG5CdWZmZXIuYWxsb2NVbnNhZmUgPSBmdW5jdGlvbiAoc2l6ZSkge1xuICByZXR1cm4gYWxsb2NVbnNhZmUoc2l6ZSlcbn1cbi8qKlxuICogRXF1aXZhbGVudCB0byBTbG93QnVmZmVyKG51bSksIGJ5IGRlZmF1bHQgY3JlYXRlcyBhIG5vbi16ZXJvLWZpbGxlZCBCdWZmZXIgaW5zdGFuY2UuXG4gKi9cbkJ1ZmZlci5hbGxvY1Vuc2FmZVNsb3cgPSBmdW5jdGlvbiAoc2l6ZSkge1xuICByZXR1cm4gYWxsb2NVbnNhZmUoc2l6ZSlcbn1cblxuZnVuY3Rpb24gZnJvbVN0cmluZyAoc3RyaW5nLCBlbmNvZGluZykge1xuICBpZiAodHlwZW9mIGVuY29kaW5nICE9PSAnc3RyaW5nJyB8fCBlbmNvZGluZyA9PT0gJycpIHtcbiAgICBlbmNvZGluZyA9ICd1dGY4J1xuICB9XG5cbiAgaWYgKCFCdWZmZXIuaXNFbmNvZGluZyhlbmNvZGluZykpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdVbmtub3duIGVuY29kaW5nOiAnICsgZW5jb2RpbmcpXG4gIH1cblxuICB2YXIgbGVuZ3RoID0gYnl0ZUxlbmd0aChzdHJpbmcsIGVuY29kaW5nKSB8IDBcbiAgdmFyIGJ1ZiA9IGNyZWF0ZUJ1ZmZlcihsZW5ndGgpXG5cbiAgdmFyIGFjdHVhbCA9IGJ1Zi53cml0ZShzdHJpbmcsIGVuY29kaW5nKVxuXG4gIGlmIChhY3R1YWwgIT09IGxlbmd0aCkge1xuICAgIC8vIFdyaXRpbmcgYSBoZXggc3RyaW5nLCBmb3IgZXhhbXBsZSwgdGhhdCBjb250YWlucyBpbnZhbGlkIGNoYXJhY3RlcnMgd2lsbFxuICAgIC8vIGNhdXNlIGV2ZXJ5dGhpbmcgYWZ0ZXIgdGhlIGZpcnN0IGludmFsaWQgY2hhcmFjdGVyIHRvIGJlIGlnbm9yZWQuIChlLmcuXG4gICAgLy8gJ2FieHhjZCcgd2lsbCBiZSB0cmVhdGVkIGFzICdhYicpXG4gICAgYnVmID0gYnVmLnNsaWNlKDAsIGFjdHVhbClcbiAgfVxuXG4gIHJldHVybiBidWZcbn1cblxuZnVuY3Rpb24gZnJvbUFycmF5TGlrZSAoYXJyYXkpIHtcbiAgdmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aCA8IDAgPyAwIDogY2hlY2tlZChhcnJheS5sZW5ndGgpIHwgMFxuICB2YXIgYnVmID0gY3JlYXRlQnVmZmVyKGxlbmd0aClcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkgKz0gMSkge1xuICAgIGJ1ZltpXSA9IGFycmF5W2ldICYgMjU1XG4gIH1cbiAgcmV0dXJuIGJ1ZlxufVxuXG5mdW5jdGlvbiBmcm9tQXJyYXlCdWZmZXIgKGFycmF5LCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgaWYgKGJ5dGVPZmZzZXQgPCAwIHx8IGFycmF5LmJ5dGVMZW5ndGggPCBieXRlT2Zmc2V0KSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1wib2Zmc2V0XCIgaXMgb3V0c2lkZSBvZiBidWZmZXIgYm91bmRzJylcbiAgfVxuXG4gIGlmIChhcnJheS5ieXRlTGVuZ3RoIDwgYnl0ZU9mZnNldCArIChsZW5ndGggfHwgMCkpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignXCJsZW5ndGhcIiBpcyBvdXRzaWRlIG9mIGJ1ZmZlciBib3VuZHMnKVxuICB9XG5cbiAgdmFyIGJ1ZlxuICBpZiAoYnl0ZU9mZnNldCA9PT0gdW5kZWZpbmVkICYmIGxlbmd0aCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgYnVmID0gbmV3IFVpbnQ4QXJyYXkoYXJyYXkpXG4gIH0gZWxzZSBpZiAobGVuZ3RoID09PSB1bmRlZmluZWQpIHtcbiAgICBidWYgPSBuZXcgVWludDhBcnJheShhcnJheSwgYnl0ZU9mZnNldClcbiAgfSBlbHNlIHtcbiAgICBidWYgPSBuZXcgVWludDhBcnJheShhcnJheSwgYnl0ZU9mZnNldCwgbGVuZ3RoKVxuICB9XG5cbiAgLy8gUmV0dXJuIGFuIGF1Z21lbnRlZCBgVWludDhBcnJheWAgaW5zdGFuY2VcbiAgYnVmLl9fcHJvdG9fXyA9IEJ1ZmZlci5wcm90b3R5cGVcbiAgcmV0dXJuIGJ1ZlxufVxuXG5mdW5jdGlvbiBmcm9tT2JqZWN0IChvYmopIHtcbiAgaWYgKEJ1ZmZlci5pc0J1ZmZlcihvYmopKSB7XG4gICAgdmFyIGxlbiA9IGNoZWNrZWQob2JqLmxlbmd0aCkgfCAwXG4gICAgdmFyIGJ1ZiA9IGNyZWF0ZUJ1ZmZlcihsZW4pXG5cbiAgICBpZiAoYnVmLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIGJ1ZlxuICAgIH1cblxuICAgIG9iai5jb3B5KGJ1ZiwgMCwgMCwgbGVuKVxuICAgIHJldHVybiBidWZcbiAgfVxuXG4gIGlmIChvYmopIHtcbiAgICBpZiAoQXJyYXlCdWZmZXIuaXNWaWV3KG9iaikgfHwgJ2xlbmd0aCcgaW4gb2JqKSB7XG4gICAgICBpZiAodHlwZW9mIG9iai5sZW5ndGggIT09ICdudW1iZXInIHx8IG51bWJlcklzTmFOKG9iai5sZW5ndGgpKSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVCdWZmZXIoMClcbiAgICAgIH1cbiAgICAgIHJldHVybiBmcm9tQXJyYXlMaWtlKG9iailcbiAgICB9XG5cbiAgICBpZiAob2JqLnR5cGUgPT09ICdCdWZmZXInICYmIEFycmF5LmlzQXJyYXkob2JqLmRhdGEpKSB7XG4gICAgICByZXR1cm4gZnJvbUFycmF5TGlrZShvYmouZGF0YSlcbiAgICB9XG4gIH1cblxuICB0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgZmlyc3QgYXJndW1lbnQgbXVzdCBiZSBvbmUgb2YgdHlwZSBzdHJpbmcsIEJ1ZmZlciwgQXJyYXlCdWZmZXIsIEFycmF5LCBvciBBcnJheS1saWtlIE9iamVjdC4nKVxufVxuXG5mdW5jdGlvbiBjaGVja2VkIChsZW5ndGgpIHtcbiAgLy8gTm90ZTogY2Fubm90IHVzZSBgbGVuZ3RoIDwgS19NQVhfTEVOR1RIYCBoZXJlIGJlY2F1c2UgdGhhdCBmYWlscyB3aGVuXG4gIC8vIGxlbmd0aCBpcyBOYU4gKHdoaWNoIGlzIG90aGVyd2lzZSBjb2VyY2VkIHRvIHplcm8uKVxuICBpZiAobGVuZ3RoID49IEtfTUFYX0xFTkdUSCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdBdHRlbXB0IHRvIGFsbG9jYXRlIEJ1ZmZlciBsYXJnZXIgdGhhbiBtYXhpbXVtICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICdzaXplOiAweCcgKyBLX01BWF9MRU5HVEgudG9TdHJpbmcoMTYpICsgJyBieXRlcycpXG4gIH1cbiAgcmV0dXJuIGxlbmd0aCB8IDBcbn1cblxuZnVuY3Rpb24gU2xvd0J1ZmZlciAobGVuZ3RoKSB7XG4gIGlmICgrbGVuZ3RoICE9IGxlbmd0aCkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGVxZXFlcVxuICAgIGxlbmd0aCA9IDBcbiAgfVxuICByZXR1cm4gQnVmZmVyLmFsbG9jKCtsZW5ndGgpXG59XG5cbkJ1ZmZlci5pc0J1ZmZlciA9IGZ1bmN0aW9uIGlzQnVmZmVyIChiKSB7XG4gIHJldHVybiBiICE9IG51bGwgJiYgYi5faXNCdWZmZXIgPT09IHRydWVcbn1cblxuQnVmZmVyLmNvbXBhcmUgPSBmdW5jdGlvbiBjb21wYXJlIChhLCBiKSB7XG4gIGlmICghQnVmZmVyLmlzQnVmZmVyKGEpIHx8ICFCdWZmZXIuaXNCdWZmZXIoYikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudHMgbXVzdCBiZSBCdWZmZXJzJylcbiAgfVxuXG4gIGlmIChhID09PSBiKSByZXR1cm4gMFxuXG4gIHZhciB4ID0gYS5sZW5ndGhcbiAgdmFyIHkgPSBiLmxlbmd0aFxuXG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBNYXRoLm1pbih4LCB5KTsgaSA8IGxlbjsgKytpKSB7XG4gICAgaWYgKGFbaV0gIT09IGJbaV0pIHtcbiAgICAgIHggPSBhW2ldXG4gICAgICB5ID0gYltpXVxuICAgICAgYnJlYWtcbiAgICB9XG4gIH1cblxuICBpZiAoeCA8IHkpIHJldHVybiAtMVxuICBpZiAoeSA8IHgpIHJldHVybiAxXG4gIHJldHVybiAwXG59XG5cbkJ1ZmZlci5pc0VuY29kaW5nID0gZnVuY3Rpb24gaXNFbmNvZGluZyAoZW5jb2RpbmcpIHtcbiAgc3dpdGNoIChTdHJpbmcoZW5jb2RpbmcpLnRvTG93ZXJDYXNlKCkpIHtcbiAgICBjYXNlICdoZXgnOlxuICAgIGNhc2UgJ3V0ZjgnOlxuICAgIGNhc2UgJ3V0Zi04JzpcbiAgICBjYXNlICdhc2NpaSc6XG4gICAgY2FzZSAnbGF0aW4xJzpcbiAgICBjYXNlICdiaW5hcnknOlxuICAgIGNhc2UgJ2Jhc2U2NCc6XG4gICAgY2FzZSAndWNzMic6XG4gICAgY2FzZSAndWNzLTInOlxuICAgIGNhc2UgJ3V0ZjE2bGUnOlxuICAgIGNhc2UgJ3V0Zi0xNmxlJzpcbiAgICAgIHJldHVybiB0cnVlXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBmYWxzZVxuICB9XG59XG5cbkJ1ZmZlci5jb25jYXQgPSBmdW5jdGlvbiBjb25jYXQgKGxpc3QsIGxlbmd0aCkge1xuICBpZiAoIUFycmF5LmlzQXJyYXkobGlzdCkpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdcImxpc3RcIiBhcmd1bWVudCBtdXN0IGJlIGFuIEFycmF5IG9mIEJ1ZmZlcnMnKVxuICB9XG5cbiAgaWYgKGxpc3QubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIEJ1ZmZlci5hbGxvYygwKVxuICB9XG5cbiAgdmFyIGlcbiAgaWYgKGxlbmd0aCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgbGVuZ3RoID0gMFxuICAgIGZvciAoaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgKytpKSB7XG4gICAgICBsZW5ndGggKz0gbGlzdFtpXS5sZW5ndGhcbiAgICB9XG4gIH1cblxuICB2YXIgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aClcbiAgdmFyIHBvcyA9IDBcbiAgZm9yIChpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyArK2kpIHtcbiAgICB2YXIgYnVmID0gbGlzdFtpXVxuICAgIGlmIChBcnJheUJ1ZmZlci5pc1ZpZXcoYnVmKSkge1xuICAgICAgYnVmID0gQnVmZmVyLmZyb20oYnVmKVxuICAgIH1cbiAgICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihidWYpKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdcImxpc3RcIiBhcmd1bWVudCBtdXN0IGJlIGFuIEFycmF5IG9mIEJ1ZmZlcnMnKVxuICAgIH1cbiAgICBidWYuY29weShidWZmZXIsIHBvcylcbiAgICBwb3MgKz0gYnVmLmxlbmd0aFxuICB9XG4gIHJldHVybiBidWZmZXJcbn1cblxuZnVuY3Rpb24gYnl0ZUxlbmd0aCAoc3RyaW5nLCBlbmNvZGluZykge1xuICBpZiAoQnVmZmVyLmlzQnVmZmVyKHN0cmluZykpIHtcbiAgICByZXR1cm4gc3RyaW5nLmxlbmd0aFxuICB9XG4gIGlmIChBcnJheUJ1ZmZlci5pc1ZpZXcoc3RyaW5nKSB8fCBpc0FycmF5QnVmZmVyKHN0cmluZykpIHtcbiAgICByZXR1cm4gc3RyaW5nLmJ5dGVMZW5ndGhcbiAgfVxuICBpZiAodHlwZW9mIHN0cmluZyAhPT0gJ3N0cmluZycpIHtcbiAgICBzdHJpbmcgPSAnJyArIHN0cmluZ1xuICB9XG5cbiAgdmFyIGxlbiA9IHN0cmluZy5sZW5ndGhcbiAgaWYgKGxlbiA9PT0gMCkgcmV0dXJuIDBcblxuICAvLyBVc2UgYSBmb3IgbG9vcCB0byBhdm9pZCByZWN1cnNpb25cbiAgdmFyIGxvd2VyZWRDYXNlID0gZmFsc2VcbiAgZm9yICg7Oykge1xuICAgIHN3aXRjaCAoZW5jb2RpbmcpIHtcbiAgICAgIGNhc2UgJ2FzY2lpJzpcbiAgICAgIGNhc2UgJ2xhdGluMSc6XG4gICAgICBjYXNlICdiaW5hcnknOlxuICAgICAgICByZXR1cm4gbGVuXG4gICAgICBjYXNlICd1dGY4JzpcbiAgICAgIGNhc2UgJ3V0Zi04JzpcbiAgICAgIGNhc2UgdW5kZWZpbmVkOlxuICAgICAgICByZXR1cm4gdXRmOFRvQnl0ZXMoc3RyaW5nKS5sZW5ndGhcbiAgICAgIGNhc2UgJ3VjczInOlxuICAgICAgY2FzZSAndWNzLTInOlxuICAgICAgY2FzZSAndXRmMTZsZSc6XG4gICAgICBjYXNlICd1dGYtMTZsZSc6XG4gICAgICAgIHJldHVybiBsZW4gKiAyXG4gICAgICBjYXNlICdoZXgnOlxuICAgICAgICByZXR1cm4gbGVuID4+PiAxXG4gICAgICBjYXNlICdiYXNlNjQnOlxuICAgICAgICByZXR1cm4gYmFzZTY0VG9CeXRlcyhzdHJpbmcpLmxlbmd0aFxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgaWYgKGxvd2VyZWRDYXNlKSByZXR1cm4gdXRmOFRvQnl0ZXMoc3RyaW5nKS5sZW5ndGggLy8gYXNzdW1lIHV0ZjhcbiAgICAgICAgZW5jb2RpbmcgPSAoJycgKyBlbmNvZGluZykudG9Mb3dlckNhc2UoKVxuICAgICAgICBsb3dlcmVkQ2FzZSA9IHRydWVcbiAgICB9XG4gIH1cbn1cbkJ1ZmZlci5ieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aFxuXG5mdW5jdGlvbiBzbG93VG9TdHJpbmcgKGVuY29kaW5nLCBzdGFydCwgZW5kKSB7XG4gIHZhciBsb3dlcmVkQ2FzZSA9IGZhbHNlXG5cbiAgLy8gTm8gbmVlZCB0byB2ZXJpZnkgdGhhdCBcInRoaXMubGVuZ3RoIDw9IE1BWF9VSU5UMzJcIiBzaW5jZSBpdCdzIGEgcmVhZC1vbmx5XG4gIC8vIHByb3BlcnR5IG9mIGEgdHlwZWQgYXJyYXkuXG5cbiAgLy8gVGhpcyBiZWhhdmVzIG5laXRoZXIgbGlrZSBTdHJpbmcgbm9yIFVpbnQ4QXJyYXkgaW4gdGhhdCB3ZSBzZXQgc3RhcnQvZW5kXG4gIC8vIHRvIHRoZWlyIHVwcGVyL2xvd2VyIGJvdW5kcyBpZiB0aGUgdmFsdWUgcGFzc2VkIGlzIG91dCBvZiByYW5nZS5cbiAgLy8gdW5kZWZpbmVkIGlzIGhhbmRsZWQgc3BlY2lhbGx5IGFzIHBlciBFQ01BLTI2MiA2dGggRWRpdGlvbixcbiAgLy8gU2VjdGlvbiAxMy4zLjMuNyBSdW50aW1lIFNlbWFudGljczogS2V5ZWRCaW5kaW5nSW5pdGlhbGl6YXRpb24uXG4gIGlmIChzdGFydCA9PT0gdW5kZWZpbmVkIHx8IHN0YXJ0IDwgMCkge1xuICAgIHN0YXJ0ID0gMFxuICB9XG4gIC8vIFJldHVybiBlYXJseSBpZiBzdGFydCA+IHRoaXMubGVuZ3RoLiBEb25lIGhlcmUgdG8gcHJldmVudCBwb3RlbnRpYWwgdWludDMyXG4gIC8vIGNvZXJjaW9uIGZhaWwgYmVsb3cuXG4gIGlmIChzdGFydCA+IHRoaXMubGVuZ3RoKSB7XG4gICAgcmV0dXJuICcnXG4gIH1cblxuICBpZiAoZW5kID09PSB1bmRlZmluZWQgfHwgZW5kID4gdGhpcy5sZW5ndGgpIHtcbiAgICBlbmQgPSB0aGlzLmxlbmd0aFxuICB9XG5cbiAgaWYgKGVuZCA8PSAwKSB7XG4gICAgcmV0dXJuICcnXG4gIH1cblxuICAvLyBGb3JjZSBjb2Vyc2lvbiB0byB1aW50MzIuIFRoaXMgd2lsbCBhbHNvIGNvZXJjZSBmYWxzZXkvTmFOIHZhbHVlcyB0byAwLlxuICBlbmQgPj4+PSAwXG4gIHN0YXJ0ID4+Pj0gMFxuXG4gIGlmIChlbmQgPD0gc3RhcnQpIHtcbiAgICByZXR1cm4gJydcbiAgfVxuXG4gIGlmICghZW5jb2RpbmcpIGVuY29kaW5nID0gJ3V0ZjgnXG5cbiAgd2hpbGUgKHRydWUpIHtcbiAgICBzd2l0Y2ggKGVuY29kaW5nKSB7XG4gICAgICBjYXNlICdoZXgnOlxuICAgICAgICByZXR1cm4gaGV4U2xpY2UodGhpcywgc3RhcnQsIGVuZClcblxuICAgICAgY2FzZSAndXRmOCc6XG4gICAgICBjYXNlICd1dGYtOCc6XG4gICAgICAgIHJldHVybiB1dGY4U2xpY2UodGhpcywgc3RhcnQsIGVuZClcblxuICAgICAgY2FzZSAnYXNjaWknOlxuICAgICAgICByZXR1cm4gYXNjaWlTbGljZSh0aGlzLCBzdGFydCwgZW5kKVxuXG4gICAgICBjYXNlICdsYXRpbjEnOlxuICAgICAgY2FzZSAnYmluYXJ5JzpcbiAgICAgICAgcmV0dXJuIGxhdGluMVNsaWNlKHRoaXMsIHN0YXJ0LCBlbmQpXG5cbiAgICAgIGNhc2UgJ2Jhc2U2NCc6XG4gICAgICAgIHJldHVybiBiYXNlNjRTbGljZSh0aGlzLCBzdGFydCwgZW5kKVxuXG4gICAgICBjYXNlICd1Y3MyJzpcbiAgICAgIGNhc2UgJ3Vjcy0yJzpcbiAgICAgIGNhc2UgJ3V0ZjE2bGUnOlxuICAgICAgY2FzZSAndXRmLTE2bGUnOlxuICAgICAgICByZXR1cm4gdXRmMTZsZVNsaWNlKHRoaXMsIHN0YXJ0LCBlbmQpXG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGlmIChsb3dlcmVkQ2FzZSkgdGhyb3cgbmV3IFR5cGVFcnJvcignVW5rbm93biBlbmNvZGluZzogJyArIGVuY29kaW5nKVxuICAgICAgICBlbmNvZGluZyA9IChlbmNvZGluZyArICcnKS50b0xvd2VyQ2FzZSgpXG4gICAgICAgIGxvd2VyZWRDYXNlID0gdHJ1ZVxuICAgIH1cbiAgfVxufVxuXG4vLyBUaGlzIHByb3BlcnR5IGlzIHVzZWQgYnkgYEJ1ZmZlci5pc0J1ZmZlcmAgKGFuZCB0aGUgYGlzLWJ1ZmZlcmAgbnBtIHBhY2thZ2UpXG4vLyB0byBkZXRlY3QgYSBCdWZmZXIgaW5zdGFuY2UuIEl0J3Mgbm90IHBvc3NpYmxlIHRvIHVzZSBgaW5zdGFuY2VvZiBCdWZmZXJgXG4vLyByZWxpYWJseSBpbiBhIGJyb3dzZXJpZnkgY29udGV4dCBiZWNhdXNlIHRoZXJlIGNvdWxkIGJlIG11bHRpcGxlIGRpZmZlcmVudFxuLy8gY29waWVzIG9mIHRoZSAnYnVmZmVyJyBwYWNrYWdlIGluIHVzZS4gVGhpcyBtZXRob2Qgd29ya3MgZXZlbiBmb3IgQnVmZmVyXG4vLyBpbnN0YW5jZXMgdGhhdCB3ZXJlIGNyZWF0ZWQgZnJvbSBhbm90aGVyIGNvcHkgb2YgdGhlIGBidWZmZXJgIHBhY2thZ2UuXG4vLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9mZXJvc3MvYnVmZmVyL2lzc3Vlcy8xNTRcbkJ1ZmZlci5wcm90b3R5cGUuX2lzQnVmZmVyID0gdHJ1ZVxuXG5mdW5jdGlvbiBzd2FwIChiLCBuLCBtKSB7XG4gIHZhciBpID0gYltuXVxuICBiW25dID0gYlttXVxuICBiW21dID0gaVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnN3YXAxNiA9IGZ1bmN0aW9uIHN3YXAxNiAoKSB7XG4gIHZhciBsZW4gPSB0aGlzLmxlbmd0aFxuICBpZiAobGVuICUgMiAhPT0gMCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdCdWZmZXIgc2l6ZSBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgMTYtYml0cycpXG4gIH1cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkgKz0gMikge1xuICAgIHN3YXAodGhpcywgaSwgaSArIDEpXG4gIH1cbiAgcmV0dXJuIHRoaXNcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5zd2FwMzIgPSBmdW5jdGlvbiBzd2FwMzIgKCkge1xuICB2YXIgbGVuID0gdGhpcy5sZW5ndGhcbiAgaWYgKGxlbiAlIDQgIT09IDApIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignQnVmZmVyIHNpemUgbXVzdCBiZSBhIG11bHRpcGxlIG9mIDMyLWJpdHMnKVxuICB9XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpICs9IDQpIHtcbiAgICBzd2FwKHRoaXMsIGksIGkgKyAzKVxuICAgIHN3YXAodGhpcywgaSArIDEsIGkgKyAyKVxuICB9XG4gIHJldHVybiB0aGlzXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUuc3dhcDY0ID0gZnVuY3Rpb24gc3dhcDY0ICgpIHtcbiAgdmFyIGxlbiA9IHRoaXMubGVuZ3RoXG4gIGlmIChsZW4gJSA4ICE9PSAwKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0J1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA2NC1iaXRzJylcbiAgfVxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSArPSA4KSB7XG4gICAgc3dhcCh0aGlzLCBpLCBpICsgNylcbiAgICBzd2FwKHRoaXMsIGkgKyAxLCBpICsgNilcbiAgICBzd2FwKHRoaXMsIGkgKyAyLCBpICsgNSlcbiAgICBzd2FwKHRoaXMsIGkgKyAzLCBpICsgNClcbiAgfVxuICByZXR1cm4gdGhpc1xufVxuXG5CdWZmZXIucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcgKCkge1xuICB2YXIgbGVuZ3RoID0gdGhpcy5sZW5ndGhcbiAgaWYgKGxlbmd0aCA9PT0gMCkgcmV0dXJuICcnXG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAwKSByZXR1cm4gdXRmOFNsaWNlKHRoaXMsIDAsIGxlbmd0aClcbiAgcmV0dXJuIHNsb3dUb1N0cmluZy5hcHBseSh0aGlzLCBhcmd1bWVudHMpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUudG9Mb2NhbGVTdHJpbmcgPSBCdWZmZXIucHJvdG90eXBlLnRvU3RyaW5nXG5cbkJ1ZmZlci5wcm90b3R5cGUuZXF1YWxzID0gZnVuY3Rpb24gZXF1YWxzIChiKSB7XG4gIGlmICghQnVmZmVyLmlzQnVmZmVyKGIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudCBtdXN0IGJlIGEgQnVmZmVyJylcbiAgaWYgKHRoaXMgPT09IGIpIHJldHVybiB0cnVlXG4gIHJldHVybiBCdWZmZXIuY29tcGFyZSh0aGlzLCBiKSA9PT0gMFxufVxuXG5CdWZmZXIucHJvdG90eXBlLmluc3BlY3QgPSBmdW5jdGlvbiBpbnNwZWN0ICgpIHtcbiAgdmFyIHN0ciA9ICcnXG4gIHZhciBtYXggPSBleHBvcnRzLklOU1BFQ1RfTUFYX0JZVEVTXG4gIGlmICh0aGlzLmxlbmd0aCA+IDApIHtcbiAgICBzdHIgPSB0aGlzLnRvU3RyaW5nKCdoZXgnLCAwLCBtYXgpLm1hdGNoKC8uezJ9L2cpLmpvaW4oJyAnKVxuICAgIGlmICh0aGlzLmxlbmd0aCA+IG1heCkgc3RyICs9ICcgLi4uICdcbiAgfVxuICByZXR1cm4gJzxCdWZmZXIgJyArIHN0ciArICc+J1xufVxuXG5CdWZmZXIucHJvdG90eXBlLmNvbXBhcmUgPSBmdW5jdGlvbiBjb21wYXJlICh0YXJnZXQsIHN0YXJ0LCBlbmQsIHRoaXNTdGFydCwgdGhpc0VuZCkge1xuICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcih0YXJnZXQpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlcicpXG4gIH1cblxuICBpZiAoc3RhcnQgPT09IHVuZGVmaW5lZCkge1xuICAgIHN0YXJ0ID0gMFxuICB9XG4gIGlmIChlbmQgPT09IHVuZGVmaW5lZCkge1xuICAgIGVuZCA9IHRhcmdldCA/IHRhcmdldC5sZW5ndGggOiAwXG4gIH1cbiAgaWYgKHRoaXNTdGFydCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhpc1N0YXJ0ID0gMFxuICB9XG4gIGlmICh0aGlzRW5kID09PSB1bmRlZmluZWQpIHtcbiAgICB0aGlzRW5kID0gdGhpcy5sZW5ndGhcbiAgfVxuXG4gIGlmIChzdGFydCA8IDAgfHwgZW5kID4gdGFyZ2V0Lmxlbmd0aCB8fCB0aGlzU3RhcnQgPCAwIHx8IHRoaXNFbmQgPiB0aGlzLmxlbmd0aCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdvdXQgb2YgcmFuZ2UgaW5kZXgnKVxuICB9XG5cbiAgaWYgKHRoaXNTdGFydCA+PSB0aGlzRW5kICYmIHN0YXJ0ID49IGVuZCkge1xuICAgIHJldHVybiAwXG4gIH1cbiAgaWYgKHRoaXNTdGFydCA+PSB0aGlzRW5kKSB7XG4gICAgcmV0dXJuIC0xXG4gIH1cbiAgaWYgKHN0YXJ0ID49IGVuZCkge1xuICAgIHJldHVybiAxXG4gIH1cblxuICBzdGFydCA+Pj49IDBcbiAgZW5kID4+Pj0gMFxuICB0aGlzU3RhcnQgPj4+PSAwXG4gIHRoaXNFbmQgPj4+PSAwXG5cbiAgaWYgKHRoaXMgPT09IHRhcmdldCkgcmV0dXJuIDBcblxuICB2YXIgeCA9IHRoaXNFbmQgLSB0aGlzU3RhcnRcbiAgdmFyIHkgPSBlbmQgLSBzdGFydFxuICB2YXIgbGVuID0gTWF0aC5taW4oeCwgeSlcblxuICB2YXIgdGhpc0NvcHkgPSB0aGlzLnNsaWNlKHRoaXNTdGFydCwgdGhpc0VuZClcbiAgdmFyIHRhcmdldENvcHkgPSB0YXJnZXQuc2xpY2Uoc3RhcnQsIGVuZClcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgKytpKSB7XG4gICAgaWYgKHRoaXNDb3B5W2ldICE9PSB0YXJnZXRDb3B5W2ldKSB7XG4gICAgICB4ID0gdGhpc0NvcHlbaV1cbiAgICAgIHkgPSB0YXJnZXRDb3B5W2ldXG4gICAgICBicmVha1xuICAgIH1cbiAgfVxuXG4gIGlmICh4IDwgeSkgcmV0dXJuIC0xXG4gIGlmICh5IDwgeCkgcmV0dXJuIDFcbiAgcmV0dXJuIDBcbn1cblxuLy8gRmluZHMgZWl0aGVyIHRoZSBmaXJzdCBpbmRleCBvZiBgdmFsYCBpbiBgYnVmZmVyYCBhdCBvZmZzZXQgPj0gYGJ5dGVPZmZzZXRgLFxuLy8gT1IgdGhlIGxhc3QgaW5kZXggb2YgYHZhbGAgaW4gYGJ1ZmZlcmAgYXQgb2Zmc2V0IDw9IGBieXRlT2Zmc2V0YC5cbi8vXG4vLyBBcmd1bWVudHM6XG4vLyAtIGJ1ZmZlciAtIGEgQnVmZmVyIHRvIHNlYXJjaFxuLy8gLSB2YWwgLSBhIHN0cmluZywgQnVmZmVyLCBvciBudW1iZXJcbi8vIC0gYnl0ZU9mZnNldCAtIGFuIGluZGV4IGludG8gYGJ1ZmZlcmA7IHdpbGwgYmUgY2xhbXBlZCB0byBhbiBpbnQzMlxuLy8gLSBlbmNvZGluZyAtIGFuIG9wdGlvbmFsIGVuY29kaW5nLCByZWxldmFudCBpcyB2YWwgaXMgYSBzdHJpbmdcbi8vIC0gZGlyIC0gdHJ1ZSBmb3IgaW5kZXhPZiwgZmFsc2UgZm9yIGxhc3RJbmRleE9mXG5mdW5jdGlvbiBiaWRpcmVjdGlvbmFsSW5kZXhPZiAoYnVmZmVyLCB2YWwsIGJ5dGVPZmZzZXQsIGVuY29kaW5nLCBkaXIpIHtcbiAgLy8gRW1wdHkgYnVmZmVyIG1lYW5zIG5vIG1hdGNoXG4gIGlmIChidWZmZXIubGVuZ3RoID09PSAwKSByZXR1cm4gLTFcblxuICAvLyBOb3JtYWxpemUgYnl0ZU9mZnNldFxuICBpZiAodHlwZW9mIGJ5dGVPZmZzZXQgPT09ICdzdHJpbmcnKSB7XG4gICAgZW5jb2RpbmcgPSBieXRlT2Zmc2V0XG4gICAgYnl0ZU9mZnNldCA9IDBcbiAgfSBlbHNlIGlmIChieXRlT2Zmc2V0ID4gMHg3ZmZmZmZmZikge1xuICAgIGJ5dGVPZmZzZXQgPSAweDdmZmZmZmZmXG4gIH0gZWxzZSBpZiAoYnl0ZU9mZnNldCA8IC0weDgwMDAwMDAwKSB7XG4gICAgYnl0ZU9mZnNldCA9IC0weDgwMDAwMDAwXG4gIH1cbiAgYnl0ZU9mZnNldCA9ICtieXRlT2Zmc2V0ICAvLyBDb2VyY2UgdG8gTnVtYmVyLlxuICBpZiAobnVtYmVySXNOYU4oYnl0ZU9mZnNldCkpIHtcbiAgICAvLyBieXRlT2Zmc2V0OiBpdCBpdCdzIHVuZGVmaW5lZCwgbnVsbCwgTmFOLCBcImZvb1wiLCBldGMsIHNlYXJjaCB3aG9sZSBidWZmZXJcbiAgICBieXRlT2Zmc2V0ID0gZGlyID8gMCA6IChidWZmZXIubGVuZ3RoIC0gMSlcbiAgfVxuXG4gIC8vIE5vcm1hbGl6ZSBieXRlT2Zmc2V0OiBuZWdhdGl2ZSBvZmZzZXRzIHN0YXJ0IGZyb20gdGhlIGVuZCBvZiB0aGUgYnVmZmVyXG4gIGlmIChieXRlT2Zmc2V0IDwgMCkgYnl0ZU9mZnNldCA9IGJ1ZmZlci5sZW5ndGggKyBieXRlT2Zmc2V0XG4gIGlmIChieXRlT2Zmc2V0ID49IGJ1ZmZlci5sZW5ndGgpIHtcbiAgICBpZiAoZGlyKSByZXR1cm4gLTFcbiAgICBlbHNlIGJ5dGVPZmZzZXQgPSBidWZmZXIubGVuZ3RoIC0gMVxuICB9IGVsc2UgaWYgKGJ5dGVPZmZzZXQgPCAwKSB7XG4gICAgaWYgKGRpcikgYnl0ZU9mZnNldCA9IDBcbiAgICBlbHNlIHJldHVybiAtMVxuICB9XG5cbiAgLy8gTm9ybWFsaXplIHZhbFxuICBpZiAodHlwZW9mIHZhbCA9PT0gJ3N0cmluZycpIHtcbiAgICB2YWwgPSBCdWZmZXIuZnJvbSh2YWwsIGVuY29kaW5nKVxuICB9XG5cbiAgLy8gRmluYWxseSwgc2VhcmNoIGVpdGhlciBpbmRleE9mIChpZiBkaXIgaXMgdHJ1ZSkgb3IgbGFzdEluZGV4T2ZcbiAgaWYgKEJ1ZmZlci5pc0J1ZmZlcih2YWwpKSB7XG4gICAgLy8gU3BlY2lhbCBjYXNlOiBsb29raW5nIGZvciBlbXB0eSBzdHJpbmcvYnVmZmVyIGFsd2F5cyBmYWlsc1xuICAgIGlmICh2YWwubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gLTFcbiAgICB9XG4gICAgcmV0dXJuIGFycmF5SW5kZXhPZihidWZmZXIsIHZhbCwgYnl0ZU9mZnNldCwgZW5jb2RpbmcsIGRpcilcbiAgfSBlbHNlIGlmICh0eXBlb2YgdmFsID09PSAnbnVtYmVyJykge1xuICAgIHZhbCA9IHZhbCAmIDB4RkYgLy8gU2VhcmNoIGZvciBhIGJ5dGUgdmFsdWUgWzAtMjU1XVxuICAgIGlmICh0eXBlb2YgVWludDhBcnJheS5wcm90b3R5cGUuaW5kZXhPZiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgaWYgKGRpcikge1xuICAgICAgICByZXR1cm4gVWludDhBcnJheS5wcm90b3R5cGUuaW5kZXhPZi5jYWxsKGJ1ZmZlciwgdmFsLCBieXRlT2Zmc2V0KVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFVpbnQ4QXJyYXkucHJvdG90eXBlLmxhc3RJbmRleE9mLmNhbGwoYnVmZmVyLCB2YWwsIGJ5dGVPZmZzZXQpXG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBhcnJheUluZGV4T2YoYnVmZmVyLCBbIHZhbCBdLCBieXRlT2Zmc2V0LCBlbmNvZGluZywgZGlyKVxuICB9XG5cbiAgdGhyb3cgbmV3IFR5cGVFcnJvcigndmFsIG11c3QgYmUgc3RyaW5nLCBudW1iZXIgb3IgQnVmZmVyJylcbn1cblxuZnVuY3Rpb24gYXJyYXlJbmRleE9mIChhcnIsIHZhbCwgYnl0ZU9mZnNldCwgZW5jb2RpbmcsIGRpcikge1xuICB2YXIgaW5kZXhTaXplID0gMVxuICB2YXIgYXJyTGVuZ3RoID0gYXJyLmxlbmd0aFxuICB2YXIgdmFsTGVuZ3RoID0gdmFsLmxlbmd0aFxuXG4gIGlmIChlbmNvZGluZyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgZW5jb2RpbmcgPSBTdHJpbmcoZW5jb2RpbmcpLnRvTG93ZXJDYXNlKClcbiAgICBpZiAoZW5jb2RpbmcgPT09ICd1Y3MyJyB8fCBlbmNvZGluZyA9PT0gJ3Vjcy0yJyB8fFxuICAgICAgICBlbmNvZGluZyA9PT0gJ3V0ZjE2bGUnIHx8IGVuY29kaW5nID09PSAndXRmLTE2bGUnKSB7XG4gICAgICBpZiAoYXJyLmxlbmd0aCA8IDIgfHwgdmFsLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgcmV0dXJuIC0xXG4gICAgICB9XG4gICAgICBpbmRleFNpemUgPSAyXG4gICAgICBhcnJMZW5ndGggLz0gMlxuICAgICAgdmFsTGVuZ3RoIC89IDJcbiAgICAgIGJ5dGVPZmZzZXQgLz0gMlxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJlYWQgKGJ1ZiwgaSkge1xuICAgIGlmIChpbmRleFNpemUgPT09IDEpIHtcbiAgICAgIHJldHVybiBidWZbaV1cbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGJ1Zi5yZWFkVUludDE2QkUoaSAqIGluZGV4U2l6ZSlcbiAgICB9XG4gIH1cblxuICB2YXIgaVxuICBpZiAoZGlyKSB7XG4gICAgdmFyIGZvdW5kSW5kZXggPSAtMVxuICAgIGZvciAoaSA9IGJ5dGVPZmZzZXQ7IGkgPCBhcnJMZW5ndGg7IGkrKykge1xuICAgICAgaWYgKHJlYWQoYXJyLCBpKSA9PT0gcmVhZCh2YWwsIGZvdW5kSW5kZXggPT09IC0xID8gMCA6IGkgLSBmb3VuZEluZGV4KSkge1xuICAgICAgICBpZiAoZm91bmRJbmRleCA9PT0gLTEpIGZvdW5kSW5kZXggPSBpXG4gICAgICAgIGlmIChpIC0gZm91bmRJbmRleCArIDEgPT09IHZhbExlbmd0aCkgcmV0dXJuIGZvdW5kSW5kZXggKiBpbmRleFNpemVcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChmb3VuZEluZGV4ICE9PSAtMSkgaSAtPSBpIC0gZm91bmRJbmRleFxuICAgICAgICBmb3VuZEluZGV4ID0gLTFcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaWYgKGJ5dGVPZmZzZXQgKyB2YWxMZW5ndGggPiBhcnJMZW5ndGgpIGJ5dGVPZmZzZXQgPSBhcnJMZW5ndGggLSB2YWxMZW5ndGhcbiAgICBmb3IgKGkgPSBieXRlT2Zmc2V0OyBpID49IDA7IGktLSkge1xuICAgICAgdmFyIGZvdW5kID0gdHJ1ZVxuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWxMZW5ndGg7IGorKykge1xuICAgICAgICBpZiAocmVhZChhcnIsIGkgKyBqKSAhPT0gcmVhZCh2YWwsIGopKSB7XG4gICAgICAgICAgZm91bmQgPSBmYWxzZVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChmb3VuZCkgcmV0dXJuIGlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gLTFcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5pbmNsdWRlcyA9IGZ1bmN0aW9uIGluY2x1ZGVzICh2YWwsIGJ5dGVPZmZzZXQsIGVuY29kaW5nKSB7XG4gIHJldHVybiB0aGlzLmluZGV4T2YodmFsLCBieXRlT2Zmc2V0LCBlbmNvZGluZykgIT09IC0xXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUuaW5kZXhPZiA9IGZ1bmN0aW9uIGluZGV4T2YgKHZhbCwgYnl0ZU9mZnNldCwgZW5jb2RpbmcpIHtcbiAgcmV0dXJuIGJpZGlyZWN0aW9uYWxJbmRleE9mKHRoaXMsIHZhbCwgYnl0ZU9mZnNldCwgZW5jb2RpbmcsIHRydWUpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUubGFzdEluZGV4T2YgPSBmdW5jdGlvbiBsYXN0SW5kZXhPZiAodmFsLCBieXRlT2Zmc2V0LCBlbmNvZGluZykge1xuICByZXR1cm4gYmlkaXJlY3Rpb25hbEluZGV4T2YodGhpcywgdmFsLCBieXRlT2Zmc2V0LCBlbmNvZGluZywgZmFsc2UpXG59XG5cbmZ1bmN0aW9uIGhleFdyaXRlIChidWYsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpIHtcbiAgb2Zmc2V0ID0gTnVtYmVyKG9mZnNldCkgfHwgMFxuICB2YXIgcmVtYWluaW5nID0gYnVmLmxlbmd0aCAtIG9mZnNldFxuICBpZiAoIWxlbmd0aCkge1xuICAgIGxlbmd0aCA9IHJlbWFpbmluZ1xuICB9IGVsc2Uge1xuICAgIGxlbmd0aCA9IE51bWJlcihsZW5ndGgpXG4gICAgaWYgKGxlbmd0aCA+IHJlbWFpbmluZykge1xuICAgICAgbGVuZ3RoID0gcmVtYWluaW5nXG4gICAgfVxuICB9XG5cbiAgdmFyIHN0ckxlbiA9IHN0cmluZy5sZW5ndGhcblxuICBpZiAobGVuZ3RoID4gc3RyTGVuIC8gMikge1xuICAgIGxlbmd0aCA9IHN0ckxlbiAvIDJcbiAgfVxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgKytpKSB7XG4gICAgdmFyIHBhcnNlZCA9IHBhcnNlSW50KHN0cmluZy5zdWJzdHIoaSAqIDIsIDIpLCAxNilcbiAgICBpZiAobnVtYmVySXNOYU4ocGFyc2VkKSkgcmV0dXJuIGlcbiAgICBidWZbb2Zmc2V0ICsgaV0gPSBwYXJzZWRcbiAgfVxuICByZXR1cm4gaVxufVxuXG5mdW5jdGlvbiB1dGY4V3JpdGUgKGJ1Ziwgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCkge1xuICByZXR1cm4gYmxpdEJ1ZmZlcih1dGY4VG9CeXRlcyhzdHJpbmcsIGJ1Zi5sZW5ndGggLSBvZmZzZXQpLCBidWYsIG9mZnNldCwgbGVuZ3RoKVxufVxuXG5mdW5jdGlvbiBhc2NpaVdyaXRlIChidWYsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpIHtcbiAgcmV0dXJuIGJsaXRCdWZmZXIoYXNjaWlUb0J5dGVzKHN0cmluZyksIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpXG59XG5cbmZ1bmN0aW9uIGxhdGluMVdyaXRlIChidWYsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpIHtcbiAgcmV0dXJuIGFzY2lpV3JpdGUoYnVmLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKVxufVxuXG5mdW5jdGlvbiBiYXNlNjRXcml0ZSAoYnVmLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKSB7XG4gIHJldHVybiBibGl0QnVmZmVyKGJhc2U2NFRvQnl0ZXMoc3RyaW5nKSwgYnVmLCBvZmZzZXQsIGxlbmd0aClcbn1cblxuZnVuY3Rpb24gdWNzMldyaXRlIChidWYsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpIHtcbiAgcmV0dXJuIGJsaXRCdWZmZXIodXRmMTZsZVRvQnl0ZXMoc3RyaW5nLCBidWYubGVuZ3RoIC0gb2Zmc2V0KSwgYnVmLCBvZmZzZXQsIGxlbmd0aClcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZSA9IGZ1bmN0aW9uIHdyaXRlIChzdHJpbmcsIG9mZnNldCwgbGVuZ3RoLCBlbmNvZGluZykge1xuICAvLyBCdWZmZXIjd3JpdGUoc3RyaW5nKVxuICBpZiAob2Zmc2V0ID09PSB1bmRlZmluZWQpIHtcbiAgICBlbmNvZGluZyA9ICd1dGY4J1xuICAgIGxlbmd0aCA9IHRoaXMubGVuZ3RoXG4gICAgb2Zmc2V0ID0gMFxuICAvLyBCdWZmZXIjd3JpdGUoc3RyaW5nLCBlbmNvZGluZylcbiAgfSBlbHNlIGlmIChsZW5ndGggPT09IHVuZGVmaW5lZCAmJiB0eXBlb2Ygb2Zmc2V0ID09PSAnc3RyaW5nJykge1xuICAgIGVuY29kaW5nID0gb2Zmc2V0XG4gICAgbGVuZ3RoID0gdGhpcy5sZW5ndGhcbiAgICBvZmZzZXQgPSAwXG4gIC8vIEJ1ZmZlciN3cml0ZShzdHJpbmcsIG9mZnNldFssIGxlbmd0aF1bLCBlbmNvZGluZ10pXG4gIH0gZWxzZSBpZiAoaXNGaW5pdGUob2Zmc2V0KSkge1xuICAgIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICAgIGlmIChpc0Zpbml0ZShsZW5ndGgpKSB7XG4gICAgICBsZW5ndGggPSBsZW5ndGggPj4+IDBcbiAgICAgIGlmIChlbmNvZGluZyA9PT0gdW5kZWZpbmVkKSBlbmNvZGluZyA9ICd1dGY4J1xuICAgIH0gZWxzZSB7XG4gICAgICBlbmNvZGluZyA9IGxlbmd0aFxuICAgICAgbGVuZ3RoID0gdW5kZWZpbmVkXG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICdCdWZmZXIud3JpdGUoc3RyaW5nLCBlbmNvZGluZywgb2Zmc2V0WywgbGVuZ3RoXSkgaXMgbm8gbG9uZ2VyIHN1cHBvcnRlZCdcbiAgICApXG4gIH1cblxuICB2YXIgcmVtYWluaW5nID0gdGhpcy5sZW5ndGggLSBvZmZzZXRcbiAgaWYgKGxlbmd0aCA9PT0gdW5kZWZpbmVkIHx8IGxlbmd0aCA+IHJlbWFpbmluZykgbGVuZ3RoID0gcmVtYWluaW5nXG5cbiAgaWYgKChzdHJpbmcubGVuZ3RoID4gMCAmJiAobGVuZ3RoIDwgMCB8fCBvZmZzZXQgPCAwKSkgfHwgb2Zmc2V0ID4gdGhpcy5sZW5ndGgpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignQXR0ZW1wdCB0byB3cml0ZSBvdXRzaWRlIGJ1ZmZlciBib3VuZHMnKVxuICB9XG5cbiAgaWYgKCFlbmNvZGluZykgZW5jb2RpbmcgPSAndXRmOCdcblxuICB2YXIgbG93ZXJlZENhc2UgPSBmYWxzZVxuICBmb3IgKDs7KSB7XG4gICAgc3dpdGNoIChlbmNvZGluZykge1xuICAgICAgY2FzZSAnaGV4JzpcbiAgICAgICAgcmV0dXJuIGhleFdyaXRlKHRoaXMsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpXG5cbiAgICAgIGNhc2UgJ3V0ZjgnOlxuICAgICAgY2FzZSAndXRmLTgnOlxuICAgICAgICByZXR1cm4gdXRmOFdyaXRlKHRoaXMsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpXG5cbiAgICAgIGNhc2UgJ2FzY2lpJzpcbiAgICAgICAgcmV0dXJuIGFzY2lpV3JpdGUodGhpcywgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aClcblxuICAgICAgY2FzZSAnbGF0aW4xJzpcbiAgICAgIGNhc2UgJ2JpbmFyeSc6XG4gICAgICAgIHJldHVybiBsYXRpbjFXcml0ZSh0aGlzLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKVxuXG4gICAgICBjYXNlICdiYXNlNjQnOlxuICAgICAgICAvLyBXYXJuaW5nOiBtYXhMZW5ndGggbm90IHRha2VuIGludG8gYWNjb3VudCBpbiBiYXNlNjRXcml0ZVxuICAgICAgICByZXR1cm4gYmFzZTY0V3JpdGUodGhpcywgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aClcblxuICAgICAgY2FzZSAndWNzMic6XG4gICAgICBjYXNlICd1Y3MtMic6XG4gICAgICBjYXNlICd1dGYxNmxlJzpcbiAgICAgIGNhc2UgJ3V0Zi0xNmxlJzpcbiAgICAgICAgcmV0dXJuIHVjczJXcml0ZSh0aGlzLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKVxuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBpZiAobG93ZXJlZENhc2UpIHRocm93IG5ldyBUeXBlRXJyb3IoJ1Vua25vd24gZW5jb2Rpbmc6ICcgKyBlbmNvZGluZylcbiAgICAgICAgZW5jb2RpbmcgPSAoJycgKyBlbmNvZGluZykudG9Mb3dlckNhc2UoKVxuICAgICAgICBsb3dlcmVkQ2FzZSA9IHRydWVcbiAgICB9XG4gIH1cbn1cblxuQnVmZmVyLnByb3RvdHlwZS50b0pTT04gPSBmdW5jdGlvbiB0b0pTT04gKCkge1xuICByZXR1cm4ge1xuICAgIHR5cGU6ICdCdWZmZXInLFxuICAgIGRhdGE6IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHRoaXMuX2FyciB8fCB0aGlzLCAwKVxuICB9XG59XG5cbmZ1bmN0aW9uIGJhc2U2NFNsaWNlIChidWYsIHN0YXJ0LCBlbmQpIHtcbiAgaWYgKHN0YXJ0ID09PSAwICYmIGVuZCA9PT0gYnVmLmxlbmd0aCkge1xuICAgIHJldHVybiBiYXNlNjQuZnJvbUJ5dGVBcnJheShidWYpXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGJhc2U2NC5mcm9tQnl0ZUFycmF5KGJ1Zi5zbGljZShzdGFydCwgZW5kKSlcbiAgfVxufVxuXG5mdW5jdGlvbiB1dGY4U2xpY2UgKGJ1Ziwgc3RhcnQsIGVuZCkge1xuICBlbmQgPSBNYXRoLm1pbihidWYubGVuZ3RoLCBlbmQpXG4gIHZhciByZXMgPSBbXVxuXG4gIHZhciBpID0gc3RhcnRcbiAgd2hpbGUgKGkgPCBlbmQpIHtcbiAgICB2YXIgZmlyc3RCeXRlID0gYnVmW2ldXG4gICAgdmFyIGNvZGVQb2ludCA9IG51bGxcbiAgICB2YXIgYnl0ZXNQZXJTZXF1ZW5jZSA9IChmaXJzdEJ5dGUgPiAweEVGKSA/IDRcbiAgICAgIDogKGZpcnN0Qnl0ZSA+IDB4REYpID8gM1xuICAgICAgOiAoZmlyc3RCeXRlID4gMHhCRikgPyAyXG4gICAgICA6IDFcblxuICAgIGlmIChpICsgYnl0ZXNQZXJTZXF1ZW5jZSA8PSBlbmQpIHtcbiAgICAgIHZhciBzZWNvbmRCeXRlLCB0aGlyZEJ5dGUsIGZvdXJ0aEJ5dGUsIHRlbXBDb2RlUG9pbnRcblxuICAgICAgc3dpdGNoIChieXRlc1BlclNlcXVlbmNlKSB7XG4gICAgICAgIGNhc2UgMTpcbiAgICAgICAgICBpZiAoZmlyc3RCeXRlIDwgMHg4MCkge1xuICAgICAgICAgICAgY29kZVBvaW50ID0gZmlyc3RCeXRlXG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGNhc2UgMjpcbiAgICAgICAgICBzZWNvbmRCeXRlID0gYnVmW2kgKyAxXVxuICAgICAgICAgIGlmICgoc2Vjb25kQnl0ZSAmIDB4QzApID09PSAweDgwKSB7XG4gICAgICAgICAgICB0ZW1wQ29kZVBvaW50ID0gKGZpcnN0Qnl0ZSAmIDB4MUYpIDw8IDB4NiB8IChzZWNvbmRCeXRlICYgMHgzRilcbiAgICAgICAgICAgIGlmICh0ZW1wQ29kZVBvaW50ID4gMHg3Rikge1xuICAgICAgICAgICAgICBjb2RlUG9pbnQgPSB0ZW1wQ29kZVBvaW50XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGNhc2UgMzpcbiAgICAgICAgICBzZWNvbmRCeXRlID0gYnVmW2kgKyAxXVxuICAgICAgICAgIHRoaXJkQnl0ZSA9IGJ1ZltpICsgMl1cbiAgICAgICAgICBpZiAoKHNlY29uZEJ5dGUgJiAweEMwKSA9PT0gMHg4MCAmJiAodGhpcmRCeXRlICYgMHhDMCkgPT09IDB4ODApIHtcbiAgICAgICAgICAgIHRlbXBDb2RlUG9pbnQgPSAoZmlyc3RCeXRlICYgMHhGKSA8PCAweEMgfCAoc2Vjb25kQnl0ZSAmIDB4M0YpIDw8IDB4NiB8ICh0aGlyZEJ5dGUgJiAweDNGKVxuICAgICAgICAgICAgaWYgKHRlbXBDb2RlUG9pbnQgPiAweDdGRiAmJiAodGVtcENvZGVQb2ludCA8IDB4RDgwMCB8fCB0ZW1wQ29kZVBvaW50ID4gMHhERkZGKSkge1xuICAgICAgICAgICAgICBjb2RlUG9pbnQgPSB0ZW1wQ29kZVBvaW50XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGNhc2UgNDpcbiAgICAgICAgICBzZWNvbmRCeXRlID0gYnVmW2kgKyAxXVxuICAgICAgICAgIHRoaXJkQnl0ZSA9IGJ1ZltpICsgMl1cbiAgICAgICAgICBmb3VydGhCeXRlID0gYnVmW2kgKyAzXVxuICAgICAgICAgIGlmICgoc2Vjb25kQnl0ZSAmIDB4QzApID09PSAweDgwICYmICh0aGlyZEJ5dGUgJiAweEMwKSA9PT0gMHg4MCAmJiAoZm91cnRoQnl0ZSAmIDB4QzApID09PSAweDgwKSB7XG4gICAgICAgICAgICB0ZW1wQ29kZVBvaW50ID0gKGZpcnN0Qnl0ZSAmIDB4RikgPDwgMHgxMiB8IChzZWNvbmRCeXRlICYgMHgzRikgPDwgMHhDIHwgKHRoaXJkQnl0ZSAmIDB4M0YpIDw8IDB4NiB8IChmb3VydGhCeXRlICYgMHgzRilcbiAgICAgICAgICAgIGlmICh0ZW1wQ29kZVBvaW50ID4gMHhGRkZGICYmIHRlbXBDb2RlUG9pbnQgPCAweDExMDAwMCkge1xuICAgICAgICAgICAgICBjb2RlUG9pbnQgPSB0ZW1wQ29kZVBvaW50XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChjb2RlUG9pbnQgPT09IG51bGwpIHtcbiAgICAgIC8vIHdlIGRpZCBub3QgZ2VuZXJhdGUgYSB2YWxpZCBjb2RlUG9pbnQgc28gaW5zZXJ0IGFcbiAgICAgIC8vIHJlcGxhY2VtZW50IGNoYXIgKFUrRkZGRCkgYW5kIGFkdmFuY2Ugb25seSAxIGJ5dGVcbiAgICAgIGNvZGVQb2ludCA9IDB4RkZGRFxuICAgICAgYnl0ZXNQZXJTZXF1ZW5jZSA9IDFcbiAgICB9IGVsc2UgaWYgKGNvZGVQb2ludCA+IDB4RkZGRikge1xuICAgICAgLy8gZW5jb2RlIHRvIHV0ZjE2IChzdXJyb2dhdGUgcGFpciBkYW5jZSlcbiAgICAgIGNvZGVQb2ludCAtPSAweDEwMDAwXG4gICAgICByZXMucHVzaChjb2RlUG9pbnQgPj4+IDEwICYgMHgzRkYgfCAweEQ4MDApXG4gICAgICBjb2RlUG9pbnQgPSAweERDMDAgfCBjb2RlUG9pbnQgJiAweDNGRlxuICAgIH1cblxuICAgIHJlcy5wdXNoKGNvZGVQb2ludClcbiAgICBpICs9IGJ5dGVzUGVyU2VxdWVuY2VcbiAgfVxuXG4gIHJldHVybiBkZWNvZGVDb2RlUG9pbnRzQXJyYXkocmVzKVxufVxuXG4vLyBCYXNlZCBvbiBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8yMjc0NzI3Mi82ODA3NDIsIHRoZSBicm93c2VyIHdpdGhcbi8vIHRoZSBsb3dlc3QgbGltaXQgaXMgQ2hyb21lLCB3aXRoIDB4MTAwMDAgYXJncy5cbi8vIFdlIGdvIDEgbWFnbml0dWRlIGxlc3MsIGZvciBzYWZldHlcbnZhciBNQVhfQVJHVU1FTlRTX0xFTkdUSCA9IDB4MTAwMFxuXG5mdW5jdGlvbiBkZWNvZGVDb2RlUG9pbnRzQXJyYXkgKGNvZGVQb2ludHMpIHtcbiAgdmFyIGxlbiA9IGNvZGVQb2ludHMubGVuZ3RoXG4gIGlmIChsZW4gPD0gTUFYX0FSR1VNRU5UU19MRU5HVEgpIHtcbiAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsIGNvZGVQb2ludHMpIC8vIGF2b2lkIGV4dHJhIHNsaWNlKClcbiAgfVxuXG4gIC8vIERlY29kZSBpbiBjaHVua3MgdG8gYXZvaWQgXCJjYWxsIHN0YWNrIHNpemUgZXhjZWVkZWRcIi5cbiAgdmFyIHJlcyA9ICcnXG4gIHZhciBpID0gMFxuICB3aGlsZSAoaSA8IGxlbikge1xuICAgIHJlcyArPSBTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFxuICAgICAgU3RyaW5nLFxuICAgICAgY29kZVBvaW50cy5zbGljZShpLCBpICs9IE1BWF9BUkdVTUVOVFNfTEVOR1RIKVxuICAgIClcbiAgfVxuICByZXR1cm4gcmVzXG59XG5cbmZ1bmN0aW9uIGFzY2lpU2xpY2UgKGJ1Ziwgc3RhcnQsIGVuZCkge1xuICB2YXIgcmV0ID0gJydcbiAgZW5kID0gTWF0aC5taW4oYnVmLmxlbmd0aCwgZW5kKVxuXG4gIGZvciAodmFyIGkgPSBzdGFydDsgaSA8IGVuZDsgKytpKSB7XG4gICAgcmV0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoYnVmW2ldICYgMHg3RilcbiAgfVxuICByZXR1cm4gcmV0XG59XG5cbmZ1bmN0aW9uIGxhdGluMVNsaWNlIChidWYsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIHJldCA9ICcnXG4gIGVuZCA9IE1hdGgubWluKGJ1Zi5sZW5ndGgsIGVuZClcblxuICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7ICsraSkge1xuICAgIHJldCArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGJ1ZltpXSlcbiAgfVxuICByZXR1cm4gcmV0XG59XG5cbmZ1bmN0aW9uIGhleFNsaWNlIChidWYsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIGxlbiA9IGJ1Zi5sZW5ndGhcblxuICBpZiAoIXN0YXJ0IHx8IHN0YXJ0IDwgMCkgc3RhcnQgPSAwXG4gIGlmICghZW5kIHx8IGVuZCA8IDAgfHwgZW5kID4gbGVuKSBlbmQgPSBsZW5cblxuICB2YXIgb3V0ID0gJydcbiAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgZW5kOyArK2kpIHtcbiAgICBvdXQgKz0gdG9IZXgoYnVmW2ldKVxuICB9XG4gIHJldHVybiBvdXRcbn1cblxuZnVuY3Rpb24gdXRmMTZsZVNsaWNlIChidWYsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIGJ5dGVzID0gYnVmLnNsaWNlKHN0YXJ0LCBlbmQpXG4gIHZhciByZXMgPSAnJ1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGJ5dGVzLmxlbmd0aDsgaSArPSAyKSB7XG4gICAgcmVzICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoYnl0ZXNbaV0gKyAoYnl0ZXNbaSArIDFdICogMjU2KSlcbiAgfVxuICByZXR1cm4gcmVzXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUuc2xpY2UgPSBmdW5jdGlvbiBzbGljZSAoc3RhcnQsIGVuZCkge1xuICB2YXIgbGVuID0gdGhpcy5sZW5ndGhcbiAgc3RhcnQgPSB+fnN0YXJ0XG4gIGVuZCA9IGVuZCA9PT0gdW5kZWZpbmVkID8gbGVuIDogfn5lbmRcblxuICBpZiAoc3RhcnQgPCAwKSB7XG4gICAgc3RhcnQgKz0gbGVuXG4gICAgaWYgKHN0YXJ0IDwgMCkgc3RhcnQgPSAwXG4gIH0gZWxzZSBpZiAoc3RhcnQgPiBsZW4pIHtcbiAgICBzdGFydCA9IGxlblxuICB9XG5cbiAgaWYgKGVuZCA8IDApIHtcbiAgICBlbmQgKz0gbGVuXG4gICAgaWYgKGVuZCA8IDApIGVuZCA9IDBcbiAgfSBlbHNlIGlmIChlbmQgPiBsZW4pIHtcbiAgICBlbmQgPSBsZW5cbiAgfVxuXG4gIGlmIChlbmQgPCBzdGFydCkgZW5kID0gc3RhcnRcblxuICB2YXIgbmV3QnVmID0gdGhpcy5zdWJhcnJheShzdGFydCwgZW5kKVxuICAvLyBSZXR1cm4gYW4gYXVnbWVudGVkIGBVaW50OEFycmF5YCBpbnN0YW5jZVxuICBuZXdCdWYuX19wcm90b19fID0gQnVmZmVyLnByb3RvdHlwZVxuICByZXR1cm4gbmV3QnVmXG59XG5cbi8qXG4gKiBOZWVkIHRvIG1ha2Ugc3VyZSB0aGF0IGJ1ZmZlciBpc24ndCB0cnlpbmcgdG8gd3JpdGUgb3V0IG9mIGJvdW5kcy5cbiAqL1xuZnVuY3Rpb24gY2hlY2tPZmZzZXQgKG9mZnNldCwgZXh0LCBsZW5ndGgpIHtcbiAgaWYgKChvZmZzZXQgJSAxKSAhPT0gMCB8fCBvZmZzZXQgPCAwKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcignb2Zmc2V0IGlzIG5vdCB1aW50JylcbiAgaWYgKG9mZnNldCArIGV4dCA+IGxlbmd0aCkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1RyeWluZyB0byBhY2Nlc3MgYmV5b25kIGJ1ZmZlciBsZW5ndGgnKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRVSW50TEUgPSBmdW5jdGlvbiByZWFkVUludExFIChvZmZzZXQsIGJ5dGVMZW5ndGgsIG5vQXNzZXJ0KSB7XG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIGJ5dGVMZW5ndGgsIHRoaXMubGVuZ3RoKVxuXG4gIHZhciB2YWwgPSB0aGlzW29mZnNldF1cbiAgdmFyIG11bCA9IDFcbiAgdmFyIGkgPSAwXG4gIHdoaWxlICgrK2kgPCBieXRlTGVuZ3RoICYmIChtdWwgKj0gMHgxMDApKSB7XG4gICAgdmFsICs9IHRoaXNbb2Zmc2V0ICsgaV0gKiBtdWxcbiAgfVxuXG4gIHJldHVybiB2YWxcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkVUludEJFID0gZnVuY3Rpb24gcmVhZFVJbnRCRSAob2Zmc2V0LCBieXRlTGVuZ3RoLCBub0Fzc2VydCkge1xuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGggPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkge1xuICAgIGNoZWNrT2Zmc2V0KG9mZnNldCwgYnl0ZUxlbmd0aCwgdGhpcy5sZW5ndGgpXG4gIH1cblxuICB2YXIgdmFsID0gdGhpc1tvZmZzZXQgKyAtLWJ5dGVMZW5ndGhdXG4gIHZhciBtdWwgPSAxXG4gIHdoaWxlIChieXRlTGVuZ3RoID4gMCAmJiAobXVsICo9IDB4MTAwKSkge1xuICAgIHZhbCArPSB0aGlzW29mZnNldCArIC0tYnl0ZUxlbmd0aF0gKiBtdWxcbiAgfVxuXG4gIHJldHVybiB2YWxcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkVUludDggPSBmdW5jdGlvbiByZWFkVUludDggKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgMSwgdGhpcy5sZW5ndGgpXG4gIHJldHVybiB0aGlzW29mZnNldF1cbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkVUludDE2TEUgPSBmdW5jdGlvbiByZWFkVUludDE2TEUgKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgMiwgdGhpcy5sZW5ndGgpXG4gIHJldHVybiB0aGlzW29mZnNldF0gfCAodGhpc1tvZmZzZXQgKyAxXSA8PCA4KVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRVSW50MTZCRSA9IGZ1bmN0aW9uIHJlYWRVSW50MTZCRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCAyLCB0aGlzLmxlbmd0aClcbiAgcmV0dXJuICh0aGlzW29mZnNldF0gPDwgOCkgfCB0aGlzW29mZnNldCArIDFdXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZFVJbnQzMkxFID0gZnVuY3Rpb24gcmVhZFVJbnQzMkxFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDQsIHRoaXMubGVuZ3RoKVxuXG4gIHJldHVybiAoKHRoaXNbb2Zmc2V0XSkgfFxuICAgICAgKHRoaXNbb2Zmc2V0ICsgMV0gPDwgOCkgfFxuICAgICAgKHRoaXNbb2Zmc2V0ICsgMl0gPDwgMTYpKSArXG4gICAgICAodGhpc1tvZmZzZXQgKyAzXSAqIDB4MTAwMDAwMClcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkVUludDMyQkUgPSBmdW5jdGlvbiByZWFkVUludDMyQkUgKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgNCwgdGhpcy5sZW5ndGgpXG5cbiAgcmV0dXJuICh0aGlzW29mZnNldF0gKiAweDEwMDAwMDApICtcbiAgICAoKHRoaXNbb2Zmc2V0ICsgMV0gPDwgMTYpIHxcbiAgICAodGhpc1tvZmZzZXQgKyAyXSA8PCA4KSB8XG4gICAgdGhpc1tvZmZzZXQgKyAzXSlcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50TEUgPSBmdW5jdGlvbiByZWFkSW50TEUgKG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgYnl0ZUxlbmd0aCwgdGhpcy5sZW5ndGgpXG5cbiAgdmFyIHZhbCA9IHRoaXNbb2Zmc2V0XVxuICB2YXIgbXVsID0gMVxuICB2YXIgaSA9IDBcbiAgd2hpbGUgKCsraSA8IGJ5dGVMZW5ndGggJiYgKG11bCAqPSAweDEwMCkpIHtcbiAgICB2YWwgKz0gdGhpc1tvZmZzZXQgKyBpXSAqIG11bFxuICB9XG4gIG11bCAqPSAweDgwXG5cbiAgaWYgKHZhbCA+PSBtdWwpIHZhbCAtPSBNYXRoLnBvdygyLCA4ICogYnl0ZUxlbmd0aClcblxuICByZXR1cm4gdmFsXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEludEJFID0gZnVuY3Rpb24gcmVhZEludEJFIChvZmZzZXQsIGJ5dGVMZW5ndGgsIG5vQXNzZXJ0KSB7XG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIGJ5dGVMZW5ndGgsIHRoaXMubGVuZ3RoKVxuXG4gIHZhciBpID0gYnl0ZUxlbmd0aFxuICB2YXIgbXVsID0gMVxuICB2YXIgdmFsID0gdGhpc1tvZmZzZXQgKyAtLWldXG4gIHdoaWxlIChpID4gMCAmJiAobXVsICo9IDB4MTAwKSkge1xuICAgIHZhbCArPSB0aGlzW29mZnNldCArIC0taV0gKiBtdWxcbiAgfVxuICBtdWwgKj0gMHg4MFxuXG4gIGlmICh2YWwgPj0gbXVsKSB2YWwgLT0gTWF0aC5wb3coMiwgOCAqIGJ5dGVMZW5ndGgpXG5cbiAgcmV0dXJuIHZhbFxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRJbnQ4ID0gZnVuY3Rpb24gcmVhZEludDggKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgMSwgdGhpcy5sZW5ndGgpXG4gIGlmICghKHRoaXNbb2Zmc2V0XSAmIDB4ODApKSByZXR1cm4gKHRoaXNbb2Zmc2V0XSlcbiAgcmV0dXJuICgoMHhmZiAtIHRoaXNbb2Zmc2V0XSArIDEpICogLTEpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEludDE2TEUgPSBmdW5jdGlvbiByZWFkSW50MTZMRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCAyLCB0aGlzLmxlbmd0aClcbiAgdmFyIHZhbCA9IHRoaXNbb2Zmc2V0XSB8ICh0aGlzW29mZnNldCArIDFdIDw8IDgpXG4gIHJldHVybiAodmFsICYgMHg4MDAwKSA/IHZhbCB8IDB4RkZGRjAwMDAgOiB2YWxcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50MTZCRSA9IGZ1bmN0aW9uIHJlYWRJbnQxNkJFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDIsIHRoaXMubGVuZ3RoKVxuICB2YXIgdmFsID0gdGhpc1tvZmZzZXQgKyAxXSB8ICh0aGlzW29mZnNldF0gPDwgOClcbiAgcmV0dXJuICh2YWwgJiAweDgwMDApID8gdmFsIHwgMHhGRkZGMDAwMCA6IHZhbFxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRJbnQzMkxFID0gZnVuY3Rpb24gcmVhZEludDMyTEUgKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgNCwgdGhpcy5sZW5ndGgpXG5cbiAgcmV0dXJuICh0aGlzW29mZnNldF0pIHxcbiAgICAodGhpc1tvZmZzZXQgKyAxXSA8PCA4KSB8XG4gICAgKHRoaXNbb2Zmc2V0ICsgMl0gPDwgMTYpIHxcbiAgICAodGhpc1tvZmZzZXQgKyAzXSA8PCAyNClcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50MzJCRSA9IGZ1bmN0aW9uIHJlYWRJbnQzMkJFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDQsIHRoaXMubGVuZ3RoKVxuXG4gIHJldHVybiAodGhpc1tvZmZzZXRdIDw8IDI0KSB8XG4gICAgKHRoaXNbb2Zmc2V0ICsgMV0gPDwgMTYpIHxcbiAgICAodGhpc1tvZmZzZXQgKyAyXSA8PCA4KSB8XG4gICAgKHRoaXNbb2Zmc2V0ICsgM10pXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEZsb2F0TEUgPSBmdW5jdGlvbiByZWFkRmxvYXRMRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCA0LCB0aGlzLmxlbmd0aClcbiAgcmV0dXJuIGllZWU3NTQucmVhZCh0aGlzLCBvZmZzZXQsIHRydWUsIDIzLCA0KVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRGbG9hdEJFID0gZnVuY3Rpb24gcmVhZEZsb2F0QkUgKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgNCwgdGhpcy5sZW5ndGgpXG4gIHJldHVybiBpZWVlNzU0LnJlYWQodGhpcywgb2Zmc2V0LCBmYWxzZSwgMjMsIDQpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZERvdWJsZUxFID0gZnVuY3Rpb24gcmVhZERvdWJsZUxFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDgsIHRoaXMubGVuZ3RoKVxuICByZXR1cm4gaWVlZTc1NC5yZWFkKHRoaXMsIG9mZnNldCwgdHJ1ZSwgNTIsIDgpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZERvdWJsZUJFID0gZnVuY3Rpb24gcmVhZERvdWJsZUJFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDgsIHRoaXMubGVuZ3RoKVxuICByZXR1cm4gaWVlZTc1NC5yZWFkKHRoaXMsIG9mZnNldCwgZmFsc2UsIDUyLCA4KVxufVxuXG5mdW5jdGlvbiBjaGVja0ludCAoYnVmLCB2YWx1ZSwgb2Zmc2V0LCBleHQsIG1heCwgbWluKSB7XG4gIGlmICghQnVmZmVyLmlzQnVmZmVyKGJ1ZikpIHRocm93IG5ldyBUeXBlRXJyb3IoJ1wiYnVmZmVyXCIgYXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlciBpbnN0YW5jZScpXG4gIGlmICh2YWx1ZSA+IG1heCB8fCB2YWx1ZSA8IG1pbikgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1widmFsdWVcIiBhcmd1bWVudCBpcyBvdXQgb2YgYm91bmRzJylcbiAgaWYgKG9mZnNldCArIGV4dCA+IGJ1Zi5sZW5ndGgpIHRocm93IG5ldyBSYW5nZUVycm9yKCdJbmRleCBvdXQgb2YgcmFuZ2UnKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlVUludExFID0gZnVuY3Rpb24gd3JpdGVVSW50TEUgKHZhbHVlLCBvZmZzZXQsIGJ5dGVMZW5ndGgsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSB7XG4gICAgdmFyIG1heEJ5dGVzID0gTWF0aC5wb3coMiwgOCAqIGJ5dGVMZW5ndGgpIC0gMVxuICAgIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIGJ5dGVMZW5ndGgsIG1heEJ5dGVzLCAwKVxuICB9XG5cbiAgdmFyIG11bCA9IDFcbiAgdmFyIGkgPSAwXG4gIHRoaXNbb2Zmc2V0XSA9IHZhbHVlICYgMHhGRlxuICB3aGlsZSAoKytpIDwgYnl0ZUxlbmd0aCAmJiAobXVsICo9IDB4MTAwKSkge1xuICAgIHRoaXNbb2Zmc2V0ICsgaV0gPSAodmFsdWUgLyBtdWwpICYgMHhGRlxuICB9XG5cbiAgcmV0dXJuIG9mZnNldCArIGJ5dGVMZW5ndGhcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnRCRSA9IGZ1bmN0aW9uIHdyaXRlVUludEJFICh2YWx1ZSwgb2Zmc2V0LCBieXRlTGVuZ3RoLCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGggPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkge1xuICAgIHZhciBtYXhCeXRlcyA9IE1hdGgucG93KDIsIDggKiBieXRlTGVuZ3RoKSAtIDFcbiAgICBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBieXRlTGVuZ3RoLCBtYXhCeXRlcywgMClcbiAgfVxuXG4gIHZhciBpID0gYnl0ZUxlbmd0aCAtIDFcbiAgdmFyIG11bCA9IDFcbiAgdGhpc1tvZmZzZXQgKyBpXSA9IHZhbHVlICYgMHhGRlxuICB3aGlsZSAoLS1pID49IDAgJiYgKG11bCAqPSAweDEwMCkpIHtcbiAgICB0aGlzW29mZnNldCArIGldID0gKHZhbHVlIC8gbXVsKSAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBvZmZzZXQgKyBieXRlTGVuZ3RoXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50OCA9IGZ1bmN0aW9uIHdyaXRlVUludDggKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCAxLCAweGZmLCAwKVxuICB0aGlzW29mZnNldF0gPSAodmFsdWUgJiAweGZmKVxuICByZXR1cm4gb2Zmc2V0ICsgMVxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlVUludDE2TEUgPSBmdW5jdGlvbiB3cml0ZVVJbnQxNkxFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgMiwgMHhmZmZmLCAwKVxuICB0aGlzW29mZnNldF0gPSAodmFsdWUgJiAweGZmKVxuICB0aGlzW29mZnNldCArIDFdID0gKHZhbHVlID4+PiA4KVxuICByZXR1cm4gb2Zmc2V0ICsgMlxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlVUludDE2QkUgPSBmdW5jdGlvbiB3cml0ZVVJbnQxNkJFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgMiwgMHhmZmZmLCAwKVxuICB0aGlzW29mZnNldF0gPSAodmFsdWUgPj4+IDgpXG4gIHRoaXNbb2Zmc2V0ICsgMV0gPSAodmFsdWUgJiAweGZmKVxuICByZXR1cm4gb2Zmc2V0ICsgMlxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlVUludDMyTEUgPSBmdW5jdGlvbiB3cml0ZVVJbnQzMkxFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgNCwgMHhmZmZmZmZmZiwgMClcbiAgdGhpc1tvZmZzZXQgKyAzXSA9ICh2YWx1ZSA+Pj4gMjQpXG4gIHRoaXNbb2Zmc2V0ICsgMl0gPSAodmFsdWUgPj4+IDE2KVxuICB0aGlzW29mZnNldCArIDFdID0gKHZhbHVlID4+PiA4KVxuICB0aGlzW29mZnNldF0gPSAodmFsdWUgJiAweGZmKVxuICByZXR1cm4gb2Zmc2V0ICsgNFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlVUludDMyQkUgPSBmdW5jdGlvbiB3cml0ZVVJbnQzMkJFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgNCwgMHhmZmZmZmZmZiwgMClcbiAgdGhpc1tvZmZzZXRdID0gKHZhbHVlID4+PiAyNClcbiAgdGhpc1tvZmZzZXQgKyAxXSA9ICh2YWx1ZSA+Pj4gMTYpXG4gIHRoaXNbb2Zmc2V0ICsgMl0gPSAodmFsdWUgPj4+IDgpXG4gIHRoaXNbb2Zmc2V0ICsgM10gPSAodmFsdWUgJiAweGZmKVxuICByZXR1cm4gb2Zmc2V0ICsgNFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlSW50TEUgPSBmdW5jdGlvbiB3cml0ZUludExFICh2YWx1ZSwgb2Zmc2V0LCBieXRlTGVuZ3RoLCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkge1xuICAgIHZhciBsaW1pdCA9IE1hdGgucG93KDIsICg4ICogYnl0ZUxlbmd0aCkgLSAxKVxuXG4gICAgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgYnl0ZUxlbmd0aCwgbGltaXQgLSAxLCAtbGltaXQpXG4gIH1cblxuICB2YXIgaSA9IDBcbiAgdmFyIG11bCA9IDFcbiAgdmFyIHN1YiA9IDBcbiAgdGhpc1tvZmZzZXRdID0gdmFsdWUgJiAweEZGXG4gIHdoaWxlICgrK2kgPCBieXRlTGVuZ3RoICYmIChtdWwgKj0gMHgxMDApKSB7XG4gICAgaWYgKHZhbHVlIDwgMCAmJiBzdWIgPT09IDAgJiYgdGhpc1tvZmZzZXQgKyBpIC0gMV0gIT09IDApIHtcbiAgICAgIHN1YiA9IDFcbiAgICB9XG4gICAgdGhpc1tvZmZzZXQgKyBpXSA9ICgodmFsdWUgLyBtdWwpID4+IDApIC0gc3ViICYgMHhGRlxuICB9XG5cbiAgcmV0dXJuIG9mZnNldCArIGJ5dGVMZW5ndGhcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZUludEJFID0gZnVuY3Rpb24gd3JpdGVJbnRCRSAodmFsdWUsIG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIHtcbiAgICB2YXIgbGltaXQgPSBNYXRoLnBvdygyLCAoOCAqIGJ5dGVMZW5ndGgpIC0gMSlcblxuICAgIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIGJ5dGVMZW5ndGgsIGxpbWl0IC0gMSwgLWxpbWl0KVxuICB9XG5cbiAgdmFyIGkgPSBieXRlTGVuZ3RoIC0gMVxuICB2YXIgbXVsID0gMVxuICB2YXIgc3ViID0gMFxuICB0aGlzW29mZnNldCArIGldID0gdmFsdWUgJiAweEZGXG4gIHdoaWxlICgtLWkgPj0gMCAmJiAobXVsICo9IDB4MTAwKSkge1xuICAgIGlmICh2YWx1ZSA8IDAgJiYgc3ViID09PSAwICYmIHRoaXNbb2Zmc2V0ICsgaSArIDFdICE9PSAwKSB7XG4gICAgICBzdWIgPSAxXG4gICAgfVxuICAgIHRoaXNbb2Zmc2V0ICsgaV0gPSAoKHZhbHVlIC8gbXVsKSA+PiAwKSAtIHN1YiAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBvZmZzZXQgKyBieXRlTGVuZ3RoXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVJbnQ4ID0gZnVuY3Rpb24gd3JpdGVJbnQ4ICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgMSwgMHg3ZiwgLTB4ODApXG4gIGlmICh2YWx1ZSA8IDApIHZhbHVlID0gMHhmZiArIHZhbHVlICsgMVxuICB0aGlzW29mZnNldF0gPSAodmFsdWUgJiAweGZmKVxuICByZXR1cm4gb2Zmc2V0ICsgMVxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlSW50MTZMRSA9IGZ1bmN0aW9uIHdyaXRlSW50MTZMRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIDIsIDB4N2ZmZiwgLTB4ODAwMClcbiAgdGhpc1tvZmZzZXRdID0gKHZhbHVlICYgMHhmZilcbiAgdGhpc1tvZmZzZXQgKyAxXSA9ICh2YWx1ZSA+Pj4gOClcbiAgcmV0dXJuIG9mZnNldCArIDJcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZUludDE2QkUgPSBmdW5jdGlvbiB3cml0ZUludDE2QkUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCAyLCAweDdmZmYsIC0weDgwMDApXG4gIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSA+Pj4gOClcbiAgdGhpc1tvZmZzZXQgKyAxXSA9ICh2YWx1ZSAmIDB4ZmYpXG4gIHJldHVybiBvZmZzZXQgKyAyXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVJbnQzMkxFID0gZnVuY3Rpb24gd3JpdGVJbnQzMkxFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgNCwgMHg3ZmZmZmZmZiwgLTB4ODAwMDAwMDApXG4gIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSAmIDB4ZmYpXG4gIHRoaXNbb2Zmc2V0ICsgMV0gPSAodmFsdWUgPj4+IDgpXG4gIHRoaXNbb2Zmc2V0ICsgMl0gPSAodmFsdWUgPj4+IDE2KVxuICB0aGlzW29mZnNldCArIDNdID0gKHZhbHVlID4+PiAyNClcbiAgcmV0dXJuIG9mZnNldCArIDRcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZUludDMyQkUgPSBmdW5jdGlvbiB3cml0ZUludDMyQkUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCA0LCAweDdmZmZmZmZmLCAtMHg4MDAwMDAwMClcbiAgaWYgKHZhbHVlIDwgMCkgdmFsdWUgPSAweGZmZmZmZmZmICsgdmFsdWUgKyAxXG4gIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSA+Pj4gMjQpXG4gIHRoaXNbb2Zmc2V0ICsgMV0gPSAodmFsdWUgPj4+IDE2KVxuICB0aGlzW29mZnNldCArIDJdID0gKHZhbHVlID4+PiA4KVxuICB0aGlzW29mZnNldCArIDNdID0gKHZhbHVlICYgMHhmZilcbiAgcmV0dXJuIG9mZnNldCArIDRcbn1cblxuZnVuY3Rpb24gY2hlY2tJRUVFNzU0IChidWYsIHZhbHVlLCBvZmZzZXQsIGV4dCwgbWF4LCBtaW4pIHtcbiAgaWYgKG9mZnNldCArIGV4dCA+IGJ1Zi5sZW5ndGgpIHRocm93IG5ldyBSYW5nZUVycm9yKCdJbmRleCBvdXQgb2YgcmFuZ2UnKVxuICBpZiAob2Zmc2V0IDwgMCkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0luZGV4IG91dCBvZiByYW5nZScpXG59XG5cbmZ1bmN0aW9uIHdyaXRlRmxvYXQgKGJ1ZiwgdmFsdWUsIG9mZnNldCwgbGl0dGxlRW5kaWFuLCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkge1xuICAgIGNoZWNrSUVFRTc1NChidWYsIHZhbHVlLCBvZmZzZXQsIDQsIDMuNDAyODIzNDY2Mzg1Mjg4NmUrMzgsIC0zLjQwMjgyMzQ2NjM4NTI4ODZlKzM4KVxuICB9XG4gIGllZWU3NTQud3JpdGUoYnVmLCB2YWx1ZSwgb2Zmc2V0LCBsaXR0bGVFbmRpYW4sIDIzLCA0KVxuICByZXR1cm4gb2Zmc2V0ICsgNFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlRmxvYXRMRSA9IGZ1bmN0aW9uIHdyaXRlRmxvYXRMRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgcmV0dXJuIHdyaXRlRmxvYXQodGhpcywgdmFsdWUsIG9mZnNldCwgdHJ1ZSwgbm9Bc3NlcnQpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVGbG9hdEJFID0gZnVuY3Rpb24gd3JpdGVGbG9hdEJFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICByZXR1cm4gd3JpdGVGbG9hdCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBmYWxzZSwgbm9Bc3NlcnQpXG59XG5cbmZ1bmN0aW9uIHdyaXRlRG91YmxlIChidWYsIHZhbHVlLCBvZmZzZXQsIGxpdHRsZUVuZGlhbiwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIHtcbiAgICBjaGVja0lFRUU3NTQoYnVmLCB2YWx1ZSwgb2Zmc2V0LCA4LCAxLjc5NzY5MzEzNDg2MjMxNTdFKzMwOCwgLTEuNzk3NjkzMTM0ODYyMzE1N0UrMzA4KVxuICB9XG4gIGllZWU3NTQud3JpdGUoYnVmLCB2YWx1ZSwgb2Zmc2V0LCBsaXR0bGVFbmRpYW4sIDUyLCA4KVxuICByZXR1cm4gb2Zmc2V0ICsgOFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlRG91YmxlTEUgPSBmdW5jdGlvbiB3cml0ZURvdWJsZUxFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICByZXR1cm4gd3JpdGVEb3VibGUodGhpcywgdmFsdWUsIG9mZnNldCwgdHJ1ZSwgbm9Bc3NlcnQpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVEb3VibGVCRSA9IGZ1bmN0aW9uIHdyaXRlRG91YmxlQkUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHJldHVybiB3cml0ZURvdWJsZSh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBmYWxzZSwgbm9Bc3NlcnQpXG59XG5cbi8vIGNvcHkodGFyZ2V0QnVmZmVyLCB0YXJnZXRTdGFydD0wLCBzb3VyY2VTdGFydD0wLCBzb3VyY2VFbmQ9YnVmZmVyLmxlbmd0aClcbkJ1ZmZlci5wcm90b3R5cGUuY29weSA9IGZ1bmN0aW9uIGNvcHkgKHRhcmdldCwgdGFyZ2V0U3RhcnQsIHN0YXJ0LCBlbmQpIHtcbiAgaWYgKCFCdWZmZXIuaXNCdWZmZXIodGFyZ2V0KSkgdGhyb3cgbmV3IFR5cGVFcnJvcignYXJndW1lbnQgc2hvdWxkIGJlIGEgQnVmZmVyJylcbiAgaWYgKCFzdGFydCkgc3RhcnQgPSAwXG4gIGlmICghZW5kICYmIGVuZCAhPT0gMCkgZW5kID0gdGhpcy5sZW5ndGhcbiAgaWYgKHRhcmdldFN0YXJ0ID49IHRhcmdldC5sZW5ndGgpIHRhcmdldFN0YXJ0ID0gdGFyZ2V0Lmxlbmd0aFxuICBpZiAoIXRhcmdldFN0YXJ0KSB0YXJnZXRTdGFydCA9IDBcbiAgaWYgKGVuZCA+IDAgJiYgZW5kIDwgc3RhcnQpIGVuZCA9IHN0YXJ0XG5cbiAgLy8gQ29weSAwIGJ5dGVzOyB3ZSdyZSBkb25lXG4gIGlmIChlbmQgPT09IHN0YXJ0KSByZXR1cm4gMFxuICBpZiAodGFyZ2V0Lmxlbmd0aCA9PT0gMCB8fCB0aGlzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIDBcblxuICAvLyBGYXRhbCBlcnJvciBjb25kaXRpb25zXG4gIGlmICh0YXJnZXRTdGFydCA8IDApIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcigndGFyZ2V0U3RhcnQgb3V0IG9mIGJvdW5kcycpXG4gIH1cbiAgaWYgKHN0YXJ0IDwgMCB8fCBzdGFydCA+PSB0aGlzLmxlbmd0aCkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0luZGV4IG91dCBvZiByYW5nZScpXG4gIGlmIChlbmQgPCAwKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcignc291cmNlRW5kIG91dCBvZiBib3VuZHMnKVxuXG4gIC8vIEFyZSB3ZSBvb2I/XG4gIGlmIChlbmQgPiB0aGlzLmxlbmd0aCkgZW5kID0gdGhpcy5sZW5ndGhcbiAgaWYgKHRhcmdldC5sZW5ndGggLSB0YXJnZXRTdGFydCA8IGVuZCAtIHN0YXJ0KSB7XG4gICAgZW5kID0gdGFyZ2V0Lmxlbmd0aCAtIHRhcmdldFN0YXJ0ICsgc3RhcnRcbiAgfVxuXG4gIHZhciBsZW4gPSBlbmQgLSBzdGFydFxuXG4gIGlmICh0aGlzID09PSB0YXJnZXQgJiYgdHlwZW9mIFVpbnQ4QXJyYXkucHJvdG90eXBlLmNvcHlXaXRoaW4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAvLyBVc2UgYnVpbHQtaW4gd2hlbiBhdmFpbGFibGUsIG1pc3NpbmcgZnJvbSBJRTExXG4gICAgdGhpcy5jb3B5V2l0aGluKHRhcmdldFN0YXJ0LCBzdGFydCwgZW5kKVxuICB9IGVsc2UgaWYgKHRoaXMgPT09IHRhcmdldCAmJiBzdGFydCA8IHRhcmdldFN0YXJ0ICYmIHRhcmdldFN0YXJ0IDwgZW5kKSB7XG4gICAgLy8gZGVzY2VuZGluZyBjb3B5IGZyb20gZW5kXG4gICAgZm9yICh2YXIgaSA9IGxlbiAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICB0YXJnZXRbaSArIHRhcmdldFN0YXJ0XSA9IHRoaXNbaSArIHN0YXJ0XVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBVaW50OEFycmF5LnByb3RvdHlwZS5zZXQuY2FsbChcbiAgICAgIHRhcmdldCxcbiAgICAgIHRoaXMuc3ViYXJyYXkoc3RhcnQsIGVuZCksXG4gICAgICB0YXJnZXRTdGFydFxuICAgIClcbiAgfVxuXG4gIHJldHVybiBsZW5cbn1cblxuLy8gVXNhZ2U6XG4vLyAgICBidWZmZXIuZmlsbChudW1iZXJbLCBvZmZzZXRbLCBlbmRdXSlcbi8vICAgIGJ1ZmZlci5maWxsKGJ1ZmZlclssIG9mZnNldFssIGVuZF1dKVxuLy8gICAgYnVmZmVyLmZpbGwoc3RyaW5nWywgb2Zmc2V0WywgZW5kXV1bLCBlbmNvZGluZ10pXG5CdWZmZXIucHJvdG90eXBlLmZpbGwgPSBmdW5jdGlvbiBmaWxsICh2YWwsIHN0YXJ0LCBlbmQsIGVuY29kaW5nKSB7XG4gIC8vIEhhbmRsZSBzdHJpbmcgY2FzZXM6XG4gIGlmICh0eXBlb2YgdmFsID09PSAnc3RyaW5nJykge1xuICAgIGlmICh0eXBlb2Ygc3RhcnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICBlbmNvZGluZyA9IHN0YXJ0XG4gICAgICBzdGFydCA9IDBcbiAgICAgIGVuZCA9IHRoaXMubGVuZ3RoXG4gICAgfSBlbHNlIGlmICh0eXBlb2YgZW5kID09PSAnc3RyaW5nJykge1xuICAgICAgZW5jb2RpbmcgPSBlbmRcbiAgICAgIGVuZCA9IHRoaXMubGVuZ3RoXG4gICAgfVxuICAgIGlmIChlbmNvZGluZyAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiBlbmNvZGluZyAhPT0gJ3N0cmluZycpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2VuY29kaW5nIG11c3QgYmUgYSBzdHJpbmcnKVxuICAgIH1cbiAgICBpZiAodHlwZW9mIGVuY29kaW5nID09PSAnc3RyaW5nJyAmJiAhQnVmZmVyLmlzRW5jb2RpbmcoZW5jb2RpbmcpKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdVbmtub3duIGVuY29kaW5nOiAnICsgZW5jb2RpbmcpXG4gICAgfVxuICAgIGlmICh2YWwubGVuZ3RoID09PSAxKSB7XG4gICAgICB2YXIgY29kZSA9IHZhbC5jaGFyQ29kZUF0KDApXG4gICAgICBpZiAoKGVuY29kaW5nID09PSAndXRmOCcgJiYgY29kZSA8IDEyOCkgfHxcbiAgICAgICAgICBlbmNvZGluZyA9PT0gJ2xhdGluMScpIHtcbiAgICAgICAgLy8gRmFzdCBwYXRoOiBJZiBgdmFsYCBmaXRzIGludG8gYSBzaW5nbGUgYnl0ZSwgdXNlIHRoYXQgbnVtZXJpYyB2YWx1ZS5cbiAgICAgICAgdmFsID0gY29kZVxuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIGlmICh0eXBlb2YgdmFsID09PSAnbnVtYmVyJykge1xuICAgIHZhbCA9IHZhbCAmIDI1NVxuICB9XG5cbiAgLy8gSW52YWxpZCByYW5nZXMgYXJlIG5vdCBzZXQgdG8gYSBkZWZhdWx0LCBzbyBjYW4gcmFuZ2UgY2hlY2sgZWFybHkuXG4gIGlmIChzdGFydCA8IDAgfHwgdGhpcy5sZW5ndGggPCBzdGFydCB8fCB0aGlzLmxlbmd0aCA8IGVuZCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdPdXQgb2YgcmFuZ2UgaW5kZXgnKVxuICB9XG5cbiAgaWYgKGVuZCA8PSBzdGFydCkge1xuICAgIHJldHVybiB0aGlzXG4gIH1cblxuICBzdGFydCA9IHN0YXJ0ID4+PiAwXG4gIGVuZCA9IGVuZCA9PT0gdW5kZWZpbmVkID8gdGhpcy5sZW5ndGggOiBlbmQgPj4+IDBcblxuICBpZiAoIXZhbCkgdmFsID0gMFxuXG4gIHZhciBpXG4gIGlmICh0eXBlb2YgdmFsID09PSAnbnVtYmVyJykge1xuICAgIGZvciAoaSA9IHN0YXJ0OyBpIDwgZW5kOyArK2kpIHtcbiAgICAgIHRoaXNbaV0gPSB2YWxcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdmFyIGJ5dGVzID0gQnVmZmVyLmlzQnVmZmVyKHZhbClcbiAgICAgID8gdmFsXG4gICAgICA6IG5ldyBCdWZmZXIodmFsLCBlbmNvZGluZylcbiAgICB2YXIgbGVuID0gYnl0ZXMubGVuZ3RoXG4gICAgaWYgKGxlbiA9PT0gMCkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIHZhbHVlIFwiJyArIHZhbCArXG4gICAgICAgICdcIiBpcyBpbnZhbGlkIGZvciBhcmd1bWVudCBcInZhbHVlXCInKVxuICAgIH1cbiAgICBmb3IgKGkgPSAwOyBpIDwgZW5kIC0gc3RhcnQ7ICsraSkge1xuICAgICAgdGhpc1tpICsgc3RhcnRdID0gYnl0ZXNbaSAlIGxlbl1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGhpc1xufVxuXG4vLyBIRUxQRVIgRlVOQ1RJT05TXG4vLyA9PT09PT09PT09PT09PT09XG5cbnZhciBJTlZBTElEX0JBU0U2NF9SRSA9IC9bXisvMC05QS1aYS16LV9dL2dcblxuZnVuY3Rpb24gYmFzZTY0Y2xlYW4gKHN0cikge1xuICAvLyBOb2RlIHRha2VzIGVxdWFsIHNpZ25zIGFzIGVuZCBvZiB0aGUgQmFzZTY0IGVuY29kaW5nXG4gIHN0ciA9IHN0ci5zcGxpdCgnPScpWzBdXG4gIC8vIE5vZGUgc3RyaXBzIG91dCBpbnZhbGlkIGNoYXJhY3RlcnMgbGlrZSBcXG4gYW5kIFxcdCBmcm9tIHRoZSBzdHJpbmcsIGJhc2U2NC1qcyBkb2VzIG5vdFxuICBzdHIgPSBzdHIudHJpbSgpLnJlcGxhY2UoSU5WQUxJRF9CQVNFNjRfUkUsICcnKVxuICAvLyBOb2RlIGNvbnZlcnRzIHN0cmluZ3Mgd2l0aCBsZW5ndGggPCAyIHRvICcnXG4gIGlmIChzdHIubGVuZ3RoIDwgMikgcmV0dXJuICcnXG4gIC8vIE5vZGUgYWxsb3dzIGZvciBub24tcGFkZGVkIGJhc2U2NCBzdHJpbmdzIChtaXNzaW5nIHRyYWlsaW5nID09PSksIGJhc2U2NC1qcyBkb2VzIG5vdFxuICB3aGlsZSAoc3RyLmxlbmd0aCAlIDQgIT09IDApIHtcbiAgICBzdHIgPSBzdHIgKyAnPSdcbiAgfVxuICByZXR1cm4gc3RyXG59XG5cbmZ1bmN0aW9uIHRvSGV4IChuKSB7XG4gIGlmIChuIDwgMTYpIHJldHVybiAnMCcgKyBuLnRvU3RyaW5nKDE2KVxuICByZXR1cm4gbi50b1N0cmluZygxNilcbn1cblxuZnVuY3Rpb24gdXRmOFRvQnl0ZXMgKHN0cmluZywgdW5pdHMpIHtcbiAgdW5pdHMgPSB1bml0cyB8fCBJbmZpbml0eVxuICB2YXIgY29kZVBvaW50XG4gIHZhciBsZW5ndGggPSBzdHJpbmcubGVuZ3RoXG4gIHZhciBsZWFkU3Vycm9nYXRlID0gbnVsbFxuICB2YXIgYnl0ZXMgPSBbXVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyArK2kpIHtcbiAgICBjb2RlUG9pbnQgPSBzdHJpbmcuY2hhckNvZGVBdChpKVxuXG4gICAgLy8gaXMgc3Vycm9nYXRlIGNvbXBvbmVudFxuICAgIGlmIChjb2RlUG9pbnQgPiAweEQ3RkYgJiYgY29kZVBvaW50IDwgMHhFMDAwKSB7XG4gICAgICAvLyBsYXN0IGNoYXIgd2FzIGEgbGVhZFxuICAgICAgaWYgKCFsZWFkU3Vycm9nYXRlKSB7XG4gICAgICAgIC8vIG5vIGxlYWQgeWV0XG4gICAgICAgIGlmIChjb2RlUG9pbnQgPiAweERCRkYpIHtcbiAgICAgICAgICAvLyB1bmV4cGVjdGVkIHRyYWlsXG4gICAgICAgICAgaWYgKCh1bml0cyAtPSAzKSA+IC0xKSBieXRlcy5wdXNoKDB4RUYsIDB4QkYsIDB4QkQpXG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfSBlbHNlIGlmIChpICsgMSA9PT0gbGVuZ3RoKSB7XG4gICAgICAgICAgLy8gdW5wYWlyZWQgbGVhZFxuICAgICAgICAgIGlmICgodW5pdHMgLT0gMykgPiAtMSkgYnl0ZXMucHVzaCgweEVGLCAweEJGLCAweEJEKVxuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH1cblxuICAgICAgICAvLyB2YWxpZCBsZWFkXG4gICAgICAgIGxlYWRTdXJyb2dhdGUgPSBjb2RlUG9pbnRcblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICAvLyAyIGxlYWRzIGluIGEgcm93XG4gICAgICBpZiAoY29kZVBvaW50IDwgMHhEQzAwKSB7XG4gICAgICAgIGlmICgodW5pdHMgLT0gMykgPiAtMSkgYnl0ZXMucHVzaCgweEVGLCAweEJGLCAweEJEKVxuICAgICAgICBsZWFkU3Vycm9nYXRlID0gY29kZVBvaW50XG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIC8vIHZhbGlkIHN1cnJvZ2F0ZSBwYWlyXG4gICAgICBjb2RlUG9pbnQgPSAobGVhZFN1cnJvZ2F0ZSAtIDB4RDgwMCA8PCAxMCB8IGNvZGVQb2ludCAtIDB4REMwMCkgKyAweDEwMDAwXG4gICAgfSBlbHNlIGlmIChsZWFkU3Vycm9nYXRlKSB7XG4gICAgICAvLyB2YWxpZCBibXAgY2hhciwgYnV0IGxhc3QgY2hhciB3YXMgYSBsZWFkXG4gICAgICBpZiAoKHVuaXRzIC09IDMpID4gLTEpIGJ5dGVzLnB1c2goMHhFRiwgMHhCRiwgMHhCRClcbiAgICB9XG5cbiAgICBsZWFkU3Vycm9nYXRlID0gbnVsbFxuXG4gICAgLy8gZW5jb2RlIHV0ZjhcbiAgICBpZiAoY29kZVBvaW50IDwgMHg4MCkge1xuICAgICAgaWYgKCh1bml0cyAtPSAxKSA8IDApIGJyZWFrXG4gICAgICBieXRlcy5wdXNoKGNvZGVQb2ludClcbiAgICB9IGVsc2UgaWYgKGNvZGVQb2ludCA8IDB4ODAwKSB7XG4gICAgICBpZiAoKHVuaXRzIC09IDIpIDwgMCkgYnJlYWtcbiAgICAgIGJ5dGVzLnB1c2goXG4gICAgICAgIGNvZGVQb2ludCA+PiAweDYgfCAweEMwLFxuICAgICAgICBjb2RlUG9pbnQgJiAweDNGIHwgMHg4MFxuICAgICAgKVxuICAgIH0gZWxzZSBpZiAoY29kZVBvaW50IDwgMHgxMDAwMCkge1xuICAgICAgaWYgKCh1bml0cyAtPSAzKSA8IDApIGJyZWFrXG4gICAgICBieXRlcy5wdXNoKFxuICAgICAgICBjb2RlUG9pbnQgPj4gMHhDIHwgMHhFMCxcbiAgICAgICAgY29kZVBvaW50ID4+IDB4NiAmIDB4M0YgfCAweDgwLFxuICAgICAgICBjb2RlUG9pbnQgJiAweDNGIHwgMHg4MFxuICAgICAgKVxuICAgIH0gZWxzZSBpZiAoY29kZVBvaW50IDwgMHgxMTAwMDApIHtcbiAgICAgIGlmICgodW5pdHMgLT0gNCkgPCAwKSBicmVha1xuICAgICAgYnl0ZXMucHVzaChcbiAgICAgICAgY29kZVBvaW50ID4+IDB4MTIgfCAweEYwLFxuICAgICAgICBjb2RlUG9pbnQgPj4gMHhDICYgMHgzRiB8IDB4ODAsXG4gICAgICAgIGNvZGVQb2ludCA+PiAweDYgJiAweDNGIHwgMHg4MCxcbiAgICAgICAgY29kZVBvaW50ICYgMHgzRiB8IDB4ODBcbiAgICAgIClcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGNvZGUgcG9pbnQnKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBieXRlc1xufVxuXG5mdW5jdGlvbiBhc2NpaVRvQnl0ZXMgKHN0cikge1xuICB2YXIgYnl0ZUFycmF5ID0gW11cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyArK2kpIHtcbiAgICAvLyBOb2RlJ3MgY29kZSBzZWVtcyB0byBiZSBkb2luZyB0aGlzIGFuZCBub3QgJiAweDdGLi5cbiAgICBieXRlQXJyYXkucHVzaChzdHIuY2hhckNvZGVBdChpKSAmIDB4RkYpXG4gIH1cbiAgcmV0dXJuIGJ5dGVBcnJheVxufVxuXG5mdW5jdGlvbiB1dGYxNmxlVG9CeXRlcyAoc3RyLCB1bml0cykge1xuICB2YXIgYywgaGksIGxvXG4gIHZhciBieXRlQXJyYXkgPSBbXVxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ci5sZW5ndGg7ICsraSkge1xuICAgIGlmICgodW5pdHMgLT0gMikgPCAwKSBicmVha1xuXG4gICAgYyA9IHN0ci5jaGFyQ29kZUF0KGkpXG4gICAgaGkgPSBjID4+IDhcbiAgICBsbyA9IGMgJSAyNTZcbiAgICBieXRlQXJyYXkucHVzaChsbylcbiAgICBieXRlQXJyYXkucHVzaChoaSlcbiAgfVxuXG4gIHJldHVybiBieXRlQXJyYXlcbn1cblxuZnVuY3Rpb24gYmFzZTY0VG9CeXRlcyAoc3RyKSB7XG4gIHJldHVybiBiYXNlNjQudG9CeXRlQXJyYXkoYmFzZTY0Y2xlYW4oc3RyKSlcbn1cblxuZnVuY3Rpb24gYmxpdEJ1ZmZlciAoc3JjLCBkc3QsIG9mZnNldCwgbGVuZ3RoKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyArK2kpIHtcbiAgICBpZiAoKGkgKyBvZmZzZXQgPj0gZHN0Lmxlbmd0aCkgfHwgKGkgPj0gc3JjLmxlbmd0aCkpIGJyZWFrXG4gICAgZHN0W2kgKyBvZmZzZXRdID0gc3JjW2ldXG4gIH1cbiAgcmV0dXJuIGlcbn1cblxuLy8gQXJyYXlCdWZmZXJzIGZyb20gYW5vdGhlciBjb250ZXh0IChpLmUuIGFuIGlmcmFtZSkgZG8gbm90IHBhc3MgdGhlIGBpbnN0YW5jZW9mYCBjaGVja1xuLy8gYnV0IHRoZXkgc2hvdWxkIGJlIHRyZWF0ZWQgYXMgdmFsaWQuIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2Zlcm9zcy9idWZmZXIvaXNzdWVzLzE2NlxuZnVuY3Rpb24gaXNBcnJheUJ1ZmZlciAob2JqKSB7XG4gIHJldHVybiBvYmogaW5zdGFuY2VvZiBBcnJheUJ1ZmZlciB8fFxuICAgIChvYmogIT0gbnVsbCAmJiBvYmouY29uc3RydWN0b3IgIT0gbnVsbCAmJiBvYmouY29uc3RydWN0b3IubmFtZSA9PT0gJ0FycmF5QnVmZmVyJyAmJlxuICAgICAgdHlwZW9mIG9iai5ieXRlTGVuZ3RoID09PSAnbnVtYmVyJylcbn1cblxuZnVuY3Rpb24gbnVtYmVySXNOYU4gKG9iaikge1xuICByZXR1cm4gb2JqICE9PSBvYmogLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1zZWxmLWNvbXBhcmVcbn1cbiIsIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG4vLyBOT1RFOiBUaGVzZSB0eXBlIGNoZWNraW5nIGZ1bmN0aW9ucyBpbnRlbnRpb25hbGx5IGRvbid0IHVzZSBgaW5zdGFuY2VvZmBcbi8vIGJlY2F1c2UgaXQgaXMgZnJhZ2lsZSBhbmQgY2FuIGJlIGVhc2lseSBmYWtlZCB3aXRoIGBPYmplY3QuY3JlYXRlKClgLlxuXG5mdW5jdGlvbiBpc0FycmF5KGFyZykge1xuICBpZiAoQXJyYXkuaXNBcnJheSkge1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KGFyZyk7XG4gIH1cbiAgcmV0dXJuIG9iamVjdFRvU3RyaW5nKGFyZykgPT09ICdbb2JqZWN0IEFycmF5XSc7XG59XG5leHBvcnRzLmlzQXJyYXkgPSBpc0FycmF5O1xuXG5mdW5jdGlvbiBpc0Jvb2xlYW4oYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnYm9vbGVhbic7XG59XG5leHBvcnRzLmlzQm9vbGVhbiA9IGlzQm9vbGVhbjtcblxuZnVuY3Rpb24gaXNOdWxsKGFyZykge1xuICByZXR1cm4gYXJnID09PSBudWxsO1xufVxuZXhwb3J0cy5pc051bGwgPSBpc051bGw7XG5cbmZ1bmN0aW9uIGlzTnVsbE9yVW5kZWZpbmVkKGFyZykge1xuICByZXR1cm4gYXJnID09IG51bGw7XG59XG5leHBvcnRzLmlzTnVsbE9yVW5kZWZpbmVkID0gaXNOdWxsT3JVbmRlZmluZWQ7XG5cbmZ1bmN0aW9uIGlzTnVtYmVyKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ251bWJlcic7XG59XG5leHBvcnRzLmlzTnVtYmVyID0gaXNOdW1iZXI7XG5cbmZ1bmN0aW9uIGlzU3RyaW5nKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ3N0cmluZyc7XG59XG5leHBvcnRzLmlzU3RyaW5nID0gaXNTdHJpbmc7XG5cbmZ1bmN0aW9uIGlzU3ltYm9sKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ3N5bWJvbCc7XG59XG5leHBvcnRzLmlzU3ltYm9sID0gaXNTeW1ib2w7XG5cbmZ1bmN0aW9uIGlzVW5kZWZpbmVkKGFyZykge1xuICByZXR1cm4gYXJnID09PSB2b2lkIDA7XG59XG5leHBvcnRzLmlzVW5kZWZpbmVkID0gaXNVbmRlZmluZWQ7XG5cbmZ1bmN0aW9uIGlzUmVnRXhwKHJlKSB7XG4gIHJldHVybiBvYmplY3RUb1N0cmluZyhyZSkgPT09ICdbb2JqZWN0IFJlZ0V4cF0nO1xufVxuZXhwb3J0cy5pc1JlZ0V4cCA9IGlzUmVnRXhwO1xuXG5mdW5jdGlvbiBpc09iamVjdChhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdvYmplY3QnICYmIGFyZyAhPT0gbnVsbDtcbn1cbmV4cG9ydHMuaXNPYmplY3QgPSBpc09iamVjdDtcblxuZnVuY3Rpb24gaXNEYXRlKGQpIHtcbiAgcmV0dXJuIG9iamVjdFRvU3RyaW5nKGQpID09PSAnW29iamVjdCBEYXRlXSc7XG59XG5leHBvcnRzLmlzRGF0ZSA9IGlzRGF0ZTtcblxuZnVuY3Rpb24gaXNFcnJvcihlKSB7XG4gIHJldHVybiAob2JqZWN0VG9TdHJpbmcoZSkgPT09ICdbb2JqZWN0IEVycm9yXScgfHwgZSBpbnN0YW5jZW9mIEVycm9yKTtcbn1cbmV4cG9ydHMuaXNFcnJvciA9IGlzRXJyb3I7XG5cbmZ1bmN0aW9uIGlzRnVuY3Rpb24oYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnZnVuY3Rpb24nO1xufVxuZXhwb3J0cy5pc0Z1bmN0aW9uID0gaXNGdW5jdGlvbjtcblxuZnVuY3Rpb24gaXNQcmltaXRpdmUoYXJnKSB7XG4gIHJldHVybiBhcmcgPT09IG51bGwgfHxcbiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICdib29sZWFuJyB8fFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ251bWJlcicgfHxcbiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICdzdHJpbmcnIHx8XG4gICAgICAgICB0eXBlb2YgYXJnID09PSAnc3ltYm9sJyB8fCAgLy8gRVM2IHN5bWJvbFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ3VuZGVmaW5lZCc7XG59XG5leHBvcnRzLmlzUHJpbWl0aXZlID0gaXNQcmltaXRpdmU7XG5cbmV4cG9ydHMuaXNCdWZmZXIgPSBCdWZmZXIuaXNCdWZmZXI7XG5cbmZ1bmN0aW9uIG9iamVjdFRvU3RyaW5nKG8pIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKTtcbn1cbiIsIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG52YXIgUGFyc2VyLCBTdHJpbmdEZWNvZGVyLCBpc09iakxpdGVyYWwsIHN0cmVhbSwgdXRpbDtcblxuc3RyZWFtID0gcmVxdWlyZSgnc3RyZWFtJyk7XG5cbnV0aWwgPSByZXF1aXJlKCd1dGlsJyk7XG5cblN0cmluZ0RlY29kZXIgPSByZXF1aXJlKCdzdHJpbmdfZGVjb2RlcicpLlN0cmluZ0RlY29kZXI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIHZhciBjYWxsYmFjaywgY2FsbGVkLCBjaHVua3MsIGRhdGEsIGVyciwgb3B0aW9ucywgcGFyc2VyO1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMykge1xuICAgIGRhdGEgPSBhcmd1bWVudHNbMF07XG4gICAgb3B0aW9ucyA9IGFyZ3VtZW50c1sxXTtcbiAgICBjYWxsYmFjayA9IGFyZ3VtZW50c1syXTtcbiAgICBpZiAodHlwZW9mIGNhbGxiYWNrICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBFcnJvcihcIkludmFsaWQgY2FsbGJhY2sgYXJndW1lbnQ6IFwiICsgKEpTT04uc3RyaW5naWZ5KGNhbGxiYWNrKSkpO1xuICAgIH1cbiAgICBpZiAoISh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycgfHwgQnVmZmVyLmlzQnVmZmVyKGFyZ3VtZW50c1swXSkpKSB7XG4gICAgICByZXR1cm4gY2FsbGJhY2soRXJyb3IoXCJJbnZhbGlkIGRhdGEgYXJndW1lbnQ6IFwiICsgKEpTT04uc3RyaW5naWZ5KGRhdGEpKSkpO1xuICAgIH1cbiAgfSBlbHNlIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyKSB7XG4gICAgaWYgKHR5cGVvZiBhcmd1bWVudHNbMF0gPT09ICdzdHJpbmcnIHx8IEJ1ZmZlci5pc0J1ZmZlcihhcmd1bWVudHNbMF0pKSB7XG4gICAgICBkYXRhID0gYXJndW1lbnRzWzBdO1xuICAgIH0gZWxzZSBpZiAoaXNPYmpMaXRlcmFsKGFyZ3VtZW50c1swXSkpIHtcbiAgICAgIG9wdGlvbnMgPSBhcmd1bWVudHNbMF07XG4gICAgfSBlbHNlIHtcbiAgICAgIGVyciA9IFwiSW52YWxpZCBmaXJzdCBhcmd1bWVudDogXCIgKyAoSlNPTi5zdHJpbmdpZnkoYXJndW1lbnRzWzBdKSk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgYXJndW1lbnRzWzFdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBjYWxsYmFjayA9IGFyZ3VtZW50c1sxXTtcbiAgICB9IGVsc2UgaWYgKGlzT2JqTGl0ZXJhbChhcmd1bWVudHNbMV0pKSB7XG4gICAgICBpZiAob3B0aW9ucykge1xuICAgICAgICBlcnIgPSAnSW52YWxpZCBhcmd1bWVudHM6IGdvdCBvcHRpb25zIHR3aWNlIGFzIGZpcnN0IGFuZCBzZWNvbmQgYXJndW1lbnRzJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG9wdGlvbnMgPSBhcmd1bWVudHNbMV07XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGVyciA9IFwiSW52YWxpZCBmaXJzdCBhcmd1bWVudDogXCIgKyAoSlNPTi5zdHJpbmdpZnkoYXJndW1lbnRzWzFdKSk7XG4gICAgfVxuICAgIGlmIChlcnIpIHtcbiAgICAgIGlmICghY2FsbGJhY2spIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoZXJyKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBjYWxsYmFjayhFcnJvcihlcnIpKTtcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgIGlmICh0eXBlb2YgYXJndW1lbnRzWzBdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBjYWxsYmFjayA9IGFyZ3VtZW50c1swXTtcbiAgICB9IGVsc2Uge1xuICAgICAgb3B0aW9ucyA9IGFyZ3VtZW50c1swXTtcbiAgICB9XG4gIH1cbiAgaWYgKG9wdGlvbnMgPT0gbnVsbCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICBwYXJzZXIgPSBuZXcgUGFyc2VyKG9wdGlvbnMpO1xuICBpZiAoZGF0YSAhPSBudWxsKSB7XG4gICAgcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbigpIHtcbiAgICAgIHBhcnNlci53cml0ZShkYXRhKTtcbiAgICAgIHJldHVybiBwYXJzZXIuZW5kKCk7XG4gICAgfSk7XG4gIH1cbiAgaWYgKGNhbGxiYWNrKSB7XG4gICAgY2FsbGVkID0gZmFsc2U7XG4gICAgY2h1bmtzID0gb3B0aW9ucy5vYmpuYW1lID8ge30gOiBbXTtcbiAgICBwYXJzZXIub24oJ3JlYWRhYmxlJywgZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgY2h1bmssIHJlc3VsdHM7XG4gICAgICByZXN1bHRzID0gW107XG4gICAgICB3aGlsZSAoY2h1bmsgPSBwYXJzZXIucmVhZCgpKSB7XG4gICAgICAgIGlmIChvcHRpb25zLm9iam5hbWUpIHtcbiAgICAgICAgICByZXN1bHRzLnB1c2goY2h1bmtzW2NodW5rWzBdXSA9IGNodW5rWzFdKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXN1bHRzLnB1c2goY2h1bmtzLnB1c2goY2h1bmspKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdHM7XG4gICAgfSk7XG4gICAgcGFyc2VyLm9uKCdlcnJvcicsIGZ1bmN0aW9uKGVycikge1xuICAgICAgY2FsbGVkID0gdHJ1ZTtcbiAgICAgIHJldHVybiBjYWxsYmFjayhlcnIpO1xuICAgIH0pO1xuICAgIHBhcnNlci5vbignZW5kJywgZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoIWNhbGxlZCkge1xuICAgICAgICByZXR1cm4gY2FsbGJhY2sobnVsbCwgY2h1bmtzKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICByZXR1cm4gcGFyc2VyO1xufTtcblxuUGFyc2VyID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICB2YXIgYmFzZSwgYmFzZTEsIGJhc2UxMCwgYmFzZTExLCBiYXNlMTIsIGJhc2UxMywgYmFzZTE0LCBiYXNlMTUsIGJhc2UxNiwgYmFzZTIsIGJhc2UzLCBiYXNlNCwgYmFzZTUsIGJhc2U2LCBiYXNlNywgYmFzZTgsIGJhc2U5LCBrLCB2O1xuICBpZiAob3B0aW9ucyA9PSBudWxsKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIHRoaXMub3B0aW9ucyA9IHt9O1xuICBmb3IgKGsgaW4gb3B0aW9ucykge1xuICAgIHYgPSBvcHRpb25zW2tdO1xuICAgIHRoaXMub3B0aW9uc1trXSA9IHY7XG4gIH1cbiAgdGhpcy5vcHRpb25zLm9iamVjdE1vZGUgPSB0cnVlO1xuICBzdHJlYW0uVHJhbnNmb3JtLmNhbGwodGhpcywgdGhpcy5vcHRpb25zKTtcbiAgaWYgKChiYXNlID0gdGhpcy5vcHRpb25zKS5yb3dEZWxpbWl0ZXIgPT0gbnVsbCkge1xuICAgIGJhc2Uucm93RGVsaW1pdGVyID0gbnVsbDtcbiAgfVxuICBpZiAodHlwZW9mIHRoaXMub3B0aW9ucy5yb3dEZWxpbWl0ZXIgPT09ICdzdHJpbmcnKSB7XG4gICAgdGhpcy5vcHRpb25zLnJvd0RlbGltaXRlciA9IFt0aGlzLm9wdGlvbnMucm93RGVsaW1pdGVyXTtcbiAgfVxuICBpZiAoKGJhc2UxID0gdGhpcy5vcHRpb25zKS5kZWxpbWl0ZXIgPT0gbnVsbCkge1xuICAgIGJhc2UxLmRlbGltaXRlciA9ICcsJztcbiAgfVxuICBpZiAodGhpcy5vcHRpb25zLnF1b3RlICE9PSB2b2lkIDAgJiYgIXRoaXMub3B0aW9ucy5xdW90ZSkge1xuICAgIHRoaXMub3B0aW9ucy5xdW90ZSA9ICcnO1xuICB9XG4gIGlmICgoYmFzZTIgPSB0aGlzLm9wdGlvbnMpLnF1b3RlID09IG51bGwpIHtcbiAgICBiYXNlMi5xdW90ZSA9ICdcIic7XG4gIH1cbiAgaWYgKChiYXNlMyA9IHRoaXMub3B0aW9ucykuZXNjYXBlID09IG51bGwpIHtcbiAgICBiYXNlMy5lc2NhcGUgPSAnXCInO1xuICB9XG4gIGlmICgoYmFzZTQgPSB0aGlzLm9wdGlvbnMpLmNvbHVtbnMgPT0gbnVsbCkge1xuICAgIGJhc2U0LmNvbHVtbnMgPSBudWxsO1xuICB9XG4gIGlmICgoYmFzZTUgPSB0aGlzLm9wdGlvbnMpLmNvbW1lbnQgPT0gbnVsbCkge1xuICAgIGJhc2U1LmNvbW1lbnQgPSAnJztcbiAgfVxuICBpZiAoKGJhc2U2ID0gdGhpcy5vcHRpb25zKS5vYmpuYW1lID09IG51bGwpIHtcbiAgICBiYXNlNi5vYmpuYW1lID0gZmFsc2U7XG4gIH1cbiAgaWYgKChiYXNlNyA9IHRoaXMub3B0aW9ucykudHJpbSA9PSBudWxsKSB7XG4gICAgYmFzZTcudHJpbSA9IGZhbHNlO1xuICB9XG4gIGlmICgoYmFzZTggPSB0aGlzLm9wdGlvbnMpLmx0cmltID09IG51bGwpIHtcbiAgICBiYXNlOC5sdHJpbSA9IGZhbHNlO1xuICB9XG4gIGlmICgoYmFzZTkgPSB0aGlzLm9wdGlvbnMpLnJ0cmltID09IG51bGwpIHtcbiAgICBiYXNlOS5ydHJpbSA9IGZhbHNlO1xuICB9XG4gIGlmICgoYmFzZTEwID0gdGhpcy5vcHRpb25zKS5hdXRvX3BhcnNlID09IG51bGwpIHtcbiAgICBiYXNlMTAuYXV0b19wYXJzZSA9IGZhbHNlO1xuICB9XG4gIGlmICgoYmFzZTExID0gdGhpcy5vcHRpb25zKS5hdXRvX3BhcnNlX2RhdGUgPT0gbnVsbCkge1xuICAgIGJhc2UxMS5hdXRvX3BhcnNlX2RhdGUgPSBmYWxzZTtcbiAgfVxuICBpZiAodGhpcy5vcHRpb25zLmF1dG9fcGFyc2VfZGF0ZSA9PT0gdHJ1ZSkge1xuICAgIHRoaXMub3B0aW9ucy5hdXRvX3BhcnNlX2RhdGUgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgdmFyIG07XG4gICAgICBtID0gRGF0ZS5wYXJzZSh2YWx1ZSk7XG4gICAgICBpZiAoIWlzTmFOKG0pKSB7XG4gICAgICAgIHZhbHVlID0gbmV3IERhdGUobSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfTtcbiAgfVxuICBpZiAoKGJhc2UxMiA9IHRoaXMub3B0aW9ucykucmVsYXggPT0gbnVsbCkge1xuICAgIGJhc2UxMi5yZWxheCA9IGZhbHNlO1xuICB9XG4gIGlmICgoYmFzZTEzID0gdGhpcy5vcHRpb25zKS5yZWxheF9jb2x1bW5fY291bnQgPT0gbnVsbCkge1xuICAgIGJhc2UxMy5yZWxheF9jb2x1bW5fY291bnQgPSBmYWxzZTtcbiAgfVxuICBpZiAoKGJhc2UxNCA9IHRoaXMub3B0aW9ucykuc2tpcF9lbXB0eV9saW5lcyA9PSBudWxsKSB7XG4gICAgYmFzZTE0LnNraXBfZW1wdHlfbGluZXMgPSBmYWxzZTtcbiAgfVxuICBpZiAoKGJhc2UxNSA9IHRoaXMub3B0aW9ucykubWF4X2xpbWl0X29uX2RhdGFfcmVhZCA9PSBudWxsKSB7XG4gICAgYmFzZTE1Lm1heF9saW1pdF9vbl9kYXRhX3JlYWQgPSAxMjgwMDA7XG4gIH1cbiAgaWYgKChiYXNlMTYgPSB0aGlzLm9wdGlvbnMpLnNraXBfbGluZXNfd2l0aF9lbXB0eV92YWx1ZXMgPT0gbnVsbCkge1xuICAgIGJhc2UxNi5za2lwX2xpbmVzX3dpdGhfZW1wdHlfdmFsdWVzID0gZmFsc2U7XG4gIH1cbiAgdGhpcy5saW5lcyA9IDA7XG4gIHRoaXMuY291bnQgPSAwO1xuICB0aGlzLnNraXBwZWRfbGluZV9jb3VudCA9IDA7XG4gIHRoaXMuZW1wdHlfbGluZV9jb3VudCA9IDA7XG4gIHRoaXMuaXNfaW50ID0gL14oXFwtfFxcKyk/KFsxLTldK1swLTldKikkLztcbiAgdGhpcy5pc19mbG9hdCA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuICh2YWx1ZSAtIHBhcnNlRmxvYXQodmFsdWUpICsgMSkgPj0gMDtcbiAgfTtcbiAgdGhpcy5fID0ge1xuICAgIGRlY29kZXI6IG5ldyBTdHJpbmdEZWNvZGVyKCksXG4gICAgcXVvdGluZzogZmFsc2UsXG4gICAgY29tbWVudGluZzogZmFsc2UsXG4gICAgZmllbGQ6IG51bGwsXG4gICAgbmV4dENoYXI6IG51bGwsXG4gICAgY2xvc2luZ1F1b3RlOiAwLFxuICAgIGxpbmU6IFtdLFxuICAgIGNodW5rczogW10sXG4gICAgcmF3QnVmOiAnJyxcbiAgICBidWY6ICcnLFxuICAgIHJvd0RlbGltaXRlckxlbmd0aDogdGhpcy5vcHRpb25zLnJvd0RlbGltaXRlciA/IE1hdGgubWF4LmFwcGx5KE1hdGgsIHRoaXMub3B0aW9ucy5yb3dEZWxpbWl0ZXIubWFwKGZ1bmN0aW9uKHYpIHtcbiAgICAgIHJldHVybiB2Lmxlbmd0aDtcbiAgICB9KSkgOiB2b2lkIDBcbiAgfTtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG51dGlsLmluaGVyaXRzKFBhcnNlciwgc3RyZWFtLlRyYW5zZm9ybSk7XG5cbm1vZHVsZS5leHBvcnRzLlBhcnNlciA9IFBhcnNlcjtcblxuUGFyc2VyLnByb3RvdHlwZS5fdHJhbnNmb3JtID0gZnVuY3Rpb24oY2h1bmssIGVuY29kaW5nLCBjYWxsYmFjaykge1xuICB2YXIgZXJyO1xuICBpZiAoY2h1bmsgaW5zdGFuY2VvZiBCdWZmZXIpIHtcbiAgICBjaHVuayA9IHRoaXMuXy5kZWNvZGVyLndyaXRlKGNodW5rKTtcbiAgfVxuICBlcnIgPSB0aGlzLl9fd3JpdGUoY2h1bmssIGZhbHNlKTtcbiAgaWYgKGVycikge1xuICAgIHJldHVybiB0aGlzLmVtaXQoJ2Vycm9yJywgZXJyKTtcbiAgfVxuICByZXR1cm4gY2FsbGJhY2soKTtcbn07XG5cblBhcnNlci5wcm90b3R5cGUuX2ZsdXNoID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIGVycjtcbiAgZXJyID0gdGhpcy5fX3dyaXRlKHRoaXMuXy5kZWNvZGVyLmVuZCgpLCB0cnVlKTtcbiAgaWYgKGVycikge1xuICAgIHJldHVybiB0aGlzLmVtaXQoJ2Vycm9yJywgZXJyKTtcbiAgfVxuICBpZiAodGhpcy5fLnF1b3RpbmcpIHtcbiAgICB0aGlzLmVtaXQoJ2Vycm9yJywgbmV3IEVycm9yKFwiUXVvdGVkIGZpZWxkIG5vdCB0ZXJtaW5hdGVkIGF0IGxpbmUgXCIgKyAodGhpcy5saW5lcyArIDEpKSk7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmICh0aGlzLl8ubGluZS5sZW5ndGggPiAwKSB7XG4gICAgZXJyID0gdGhpcy5fX3B1c2godGhpcy5fLmxpbmUpO1xuICAgIGlmIChlcnIpIHtcbiAgICAgIHJldHVybiBjYWxsYmFjayhlcnIpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gY2FsbGJhY2soKTtcbn07XG5cblBhcnNlci5wcm90b3R5cGUuX19wdXNoID0gZnVuY3Rpb24obGluZSkge1xuICB2YXIgY2FsbF9jb2x1bW5fdWRmLCBjb2x1bW5zLCBlcnIsIGZpZWxkLCBpLCBqLCBsZW4sIGxpbmVBc0NvbHVtbnMsIHJhd0J1ZiwgcmVmLCByb3c7XG4gIGlmICh0aGlzLm9wdGlvbnMuc2tpcF9saW5lc193aXRoX2VtcHR5X3ZhbHVlcyAmJiBsaW5lLmpvaW4oJycpLnRyaW0oKSA9PT0gJycpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgcm93ID0gbnVsbDtcbiAgaWYgKHRoaXMub3B0aW9ucy5jb2x1bW5zID09PSB0cnVlKSB7XG4gICAgdGhpcy5vcHRpb25zLmNvbHVtbnMgPSBsaW5lO1xuICAgIHJhd0J1ZiA9ICcnO1xuICAgIHJldHVybjtcbiAgfSBlbHNlIGlmICh0eXBlb2YgdGhpcy5vcHRpb25zLmNvbHVtbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYWxsX2NvbHVtbl91ZGYgPSBmdW5jdGlvbihmbiwgbGluZSkge1xuICAgICAgdmFyIGNvbHVtbnMsIGVycjtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbHVtbnMgPSBmbi5jYWxsKG51bGwsIGxpbmUpO1xuICAgICAgICByZXR1cm4gW251bGwsIGNvbHVtbnNdO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgZXJyID0gZXJyb3I7XG4gICAgICAgIHJldHVybiBbZXJyXTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHJlZiA9IGNhbGxfY29sdW1uX3VkZih0aGlzLm9wdGlvbnMuY29sdW1ucywgbGluZSksIGVyciA9IHJlZlswXSwgY29sdW1ucyA9IHJlZlsxXTtcbiAgICBpZiAoZXJyKSB7XG4gICAgICByZXR1cm4gZXJyO1xuICAgIH1cbiAgICB0aGlzLm9wdGlvbnMuY29sdW1ucyA9IGNvbHVtbnM7XG4gICAgcmF3QnVmID0gJyc7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmICghdGhpcy5fLmxpbmVfbGVuZ3RoICYmIGxpbmUubGVuZ3RoID4gMCkge1xuICAgIHRoaXMuXy5saW5lX2xlbmd0aCA9IHRoaXMub3B0aW9ucy5jb2x1bW5zID8gdGhpcy5vcHRpb25zLmNvbHVtbnMubGVuZ3RoIDogbGluZS5sZW5ndGg7XG4gIH1cbiAgaWYgKGxpbmUubGVuZ3RoID09PSAxICYmIGxpbmVbMF0gPT09ICcnKSB7XG4gICAgdGhpcy5lbXB0eV9saW5lX2NvdW50Kys7XG4gIH0gZWxzZSBpZiAobGluZS5sZW5ndGggIT09IHRoaXMuXy5saW5lX2xlbmd0aCkge1xuICAgIGlmICh0aGlzLm9wdGlvbnMucmVsYXhfY29sdW1uX2NvdW50KSB7XG4gICAgICB0aGlzLmNvdW50Kys7XG4gICAgICB0aGlzLnNraXBwZWRfbGluZV9jb3VudCsrO1xuICAgIH0gZWxzZSBpZiAodGhpcy5vcHRpb25zLmNvbHVtbnMgIT0gbnVsbCkge1xuICAgICAgcmV0dXJuIEVycm9yKFwiTnVtYmVyIG9mIGNvbHVtbnMgb24gbGluZSBcIiArIHRoaXMubGluZXMgKyBcIiBkb2VzIG5vdCBtYXRjaCBoZWFkZXJcIik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBFcnJvcihcIk51bWJlciBvZiBjb2x1bW5zIGlzIGluY29uc2lzdGVudCBvbiBsaW5lIFwiICsgdGhpcy5saW5lcyk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHRoaXMuY291bnQrKztcbiAgfVxuICBpZiAodGhpcy5vcHRpb25zLmNvbHVtbnMgIT0gbnVsbCkge1xuICAgIGxpbmVBc0NvbHVtbnMgPSB7fTtcbiAgICBmb3IgKGkgPSBqID0gMCwgbGVuID0gbGluZS5sZW5ndGg7IGogPCBsZW47IGkgPSArK2opIHtcbiAgICAgIGZpZWxkID0gbGluZVtpXTtcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuY29sdW1uc1tpXSA9PT0gZmFsc2UpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBsaW5lQXNDb2x1bW5zW3RoaXMub3B0aW9ucy5jb2x1bW5zW2ldXSA9IGZpZWxkO1xuICAgIH1cbiAgICBpZiAodGhpcy5vcHRpb25zLm9iam5hbWUpIHtcbiAgICAgIHJvdyA9IFtsaW5lQXNDb2x1bW5zW3RoaXMub3B0aW9ucy5vYmpuYW1lXSwgbGluZUFzQ29sdW1uc107XG4gICAgfSBlbHNlIHtcbiAgICAgIHJvdyA9IGxpbmVBc0NvbHVtbnM7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHJvdyA9IGxpbmU7XG4gIH1cbiAgaWYgKHRoaXMuY291bnQgPCB0aGlzLm9wdGlvbnMuZnJvbSkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAodGhpcy5jb3VudCA+IHRoaXMub3B0aW9ucy50bykge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAodGhpcy5vcHRpb25zLnJhdykge1xuICAgIHRoaXMucHVzaCh7XG4gICAgICByYXc6IHRoaXMuXy5yYXdCdWYsXG4gICAgICByb3c6IHJvd1xuICAgIH0pO1xuICAgIHRoaXMuXy5yYXdCdWYgPSAnJztcbiAgfSBlbHNlIHtcbiAgICB0aGlzLnB1c2gocm93KTtcbiAgfVxuICByZXR1cm4gbnVsbDtcbn07XG5cblBhcnNlci5wcm90b3R5cGUuX193cml0ZSA9IGZ1bmN0aW9uKGNoYXJzLCBlbmQpIHtcbiAgdmFyIGFyZU5leHRDaGFyc0RlbGltaXRlciwgYXJlTmV4dENoYXJzUm93RGVsaW1pdGVycywgYXV0b19wYXJzZSwgY2hhciwgZXJyLCBlc2NhcGVJc1F1b3RlLCBpLCBpc0RlbGltaXRlciwgaXNFc2NhcGUsIGlzTmV4dENoYXJBQ29tbWVudCwgaXNRdW90ZSwgaXNSb3dEZWxpbWl0ZXIsIGlzUm93RGVsaW1pdGVyTGVuZ3RoLCBpc19mbG9hdCwgaXNfaW50LCBsLCBsdHJpbSwgbmV4dENoYXJQb3MsIHJlZiwgcmVmMSwgcmVmMiwgcmVmMywgcmVmNCwgcmVmNSwgcmVtYWluaW5nQnVmZmVyLCByb3dEZWxpbWl0ZXIsIHJ0cmltLCB3YXNDb21tZW50aW5nO1xuICBpc19pbnQgPSAoZnVuY3Rpb24oX3RoaXMpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgIGlmICh0eXBlb2YgX3RoaXMuaXNfaW50ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBfdGhpcy5pc19pbnQodmFsdWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIF90aGlzLmlzX2ludC50ZXN0KHZhbHVlKTtcbiAgICAgIH1cbiAgICB9O1xuICB9KSh0aGlzKTtcbiAgaXNfZmxvYXQgPSAoZnVuY3Rpb24oX3RoaXMpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgIGlmICh0eXBlb2YgX3RoaXMuaXNfZmxvYXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzLmlzX2Zsb2F0KHZhbHVlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBfdGhpcy5pc19mbG9hdC50ZXN0KHZhbHVlKTtcbiAgICAgIH1cbiAgICB9O1xuICB9KSh0aGlzKTtcbiAgYXV0b19wYXJzZSA9IChmdW5jdGlvbihfdGhpcykge1xuICAgIHJldHVybiBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgaWYgKCFfdGhpcy5vcHRpb25zLmF1dG9fcGFyc2UpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBfdGhpcy5vcHRpb25zLmF1dG9fcGFyc2UgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzLm9wdGlvbnMuYXV0b19wYXJzZSh2YWx1ZSk7XG4gICAgICB9XG4gICAgICBpZiAoaXNfaW50KHZhbHVlKSkge1xuICAgICAgICB2YWx1ZSA9IHBhcnNlSW50KHZhbHVlKTtcbiAgICAgIH0gZWxzZSBpZiAoaXNfZmxvYXQodmFsdWUpKSB7XG4gICAgICAgIHZhbHVlID0gcGFyc2VGbG9hdCh2YWx1ZSk7XG4gICAgICB9IGVsc2UgaWYgKF90aGlzLm9wdGlvbnMuYXV0b19wYXJzZV9kYXRlKSB7XG4gICAgICAgIHZhbHVlID0gX3RoaXMub3B0aW9ucy5hdXRvX3BhcnNlX2RhdGUodmFsdWUpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH07XG4gIH0pKHRoaXMpO1xuICBsdHJpbSA9IHRoaXMub3B0aW9ucy50cmltIHx8IHRoaXMub3B0aW9ucy5sdHJpbTtcbiAgcnRyaW0gPSB0aGlzLm9wdGlvbnMudHJpbSB8fCB0aGlzLm9wdGlvbnMucnRyaW07XG4gIGNoYXJzID0gdGhpcy5fLmJ1ZiArIGNoYXJzO1xuICBsID0gY2hhcnMubGVuZ3RoO1xuICBpID0gMDtcbiAgaWYgKHRoaXMubGluZXMgPT09IDAgJiYgMHhGRUZGID09PSBjaGFycy5jaGFyQ29kZUF0KDApKSB7XG4gICAgaSsrO1xuICB9XG4gIHdoaWxlIChpIDwgbCkge1xuICAgIGlmICghZW5kKSB7XG4gICAgICByZW1haW5pbmdCdWZmZXIgPSBjaGFycy5zdWJzdHIoaSwgbCAtIGkpO1xuICAgICAgaWYgKCghdGhpcy5vcHRpb25zLnJvd0RlbGltaXRlciAmJiBpICsgMyA+IGwpIHx8ICghdGhpcy5fLmNvbW1lbnRpbmcgJiYgbCAtIGkgPCB0aGlzLm9wdGlvbnMuY29tbWVudC5sZW5ndGggJiYgdGhpcy5vcHRpb25zLmNvbW1lbnQuc3Vic3RyKDAsIGwgLSBpKSA9PT0gcmVtYWluaW5nQnVmZmVyKSB8fCAodGhpcy5vcHRpb25zLnJvd0RlbGltaXRlciAmJiBsIC0gaSA8IHRoaXMuXy5yb3dEZWxpbWl0ZXJMZW5ndGggJiYgdGhpcy5vcHRpb25zLnJvd0RlbGltaXRlci5zb21lKGZ1bmN0aW9uKHJkKSB7XG4gICAgICAgIHJldHVybiByZC5zdWJzdHIoMCwgbCAtIGkpID09PSByZW1haW5pbmdCdWZmZXI7XG4gICAgICB9KSkgfHwgKHRoaXMub3B0aW9ucy5yb3dEZWxpbWl0ZXIgJiYgdGhpcy5fLnF1b3RpbmcgJiYgbCAtIGkgPCAodGhpcy5vcHRpb25zLnF1b3RlLmxlbmd0aCArIHRoaXMuXy5yb3dEZWxpbWl0ZXJMZW5ndGgpICYmIHRoaXMub3B0aW9ucy5yb3dEZWxpbWl0ZXIuc29tZSgoZnVuY3Rpb24oX3RoaXMpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHJkKSB7XG4gICAgICAgICAgcmV0dXJuIChfdGhpcy5vcHRpb25zLnF1b3RlICsgcmQpLnN1YnN0cigwLCBsIC0gaSkgPT09IHJlbWFpbmluZ0J1ZmZlcjtcbiAgICAgICAgfTtcbiAgICAgIH0pKHRoaXMpKSkgfHwgKGwgLSBpIDw9IHRoaXMub3B0aW9ucy5kZWxpbWl0ZXIubGVuZ3RoICYmIHRoaXMub3B0aW9ucy5kZWxpbWl0ZXIuc3Vic3RyKDAsIGwgLSBpKSA9PT0gcmVtYWluaW5nQnVmZmVyKSB8fCAobCAtIGkgPD0gdGhpcy5vcHRpb25zLmVzY2FwZS5sZW5ndGggJiYgdGhpcy5vcHRpb25zLmVzY2FwZS5zdWJzdHIoMCwgbCAtIGkpID09PSByZW1haW5pbmdCdWZmZXIpKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgICBjaGFyID0gdGhpcy5fLm5leHRDaGFyID8gdGhpcy5fLm5leHRDaGFyIDogY2hhcnMuY2hhckF0KGkpO1xuICAgIHRoaXMuXy5uZXh0Q2hhciA9IGwgPiBpICsgMSA/IGNoYXJzLmNoYXJBdChpICsgMSkgOiAnJztcbiAgICBpZiAodGhpcy5vcHRpb25zLnJhdykge1xuICAgICAgdGhpcy5fLnJhd0J1ZiArPSBjaGFyO1xuICAgIH1cbiAgICBpZiAodGhpcy5vcHRpb25zLnJvd0RlbGltaXRlciA9PSBudWxsKSB7XG4gICAgICBuZXh0Q2hhclBvcyA9IGk7XG4gICAgICByb3dEZWxpbWl0ZXIgPSBudWxsO1xuICAgICAgaWYgKCF0aGlzLl8ucXVvdGluZyAmJiAoY2hhciA9PT0gJ1xcbicgfHwgY2hhciA9PT0gJ1xccicpKSB7XG4gICAgICAgIHJvd0RlbGltaXRlciA9IGNoYXI7XG4gICAgICAgIG5leHRDaGFyUG9zICs9IDE7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuXy5xdW90aW5nICYmIGNoYXIgPT09IHRoaXMub3B0aW9ucy5xdW90ZSAmJiAoKHJlZiA9IHRoaXMuXy5uZXh0Q2hhcikgPT09ICdcXG4nIHx8IHJlZiA9PT0gJ1xccicpKSB7XG4gICAgICAgIHJvd0RlbGltaXRlciA9IHRoaXMuXy5uZXh0Q2hhcjtcbiAgICAgICAgbmV4dENoYXJQb3MgKz0gMjtcbiAgICAgICAgaWYgKHRoaXMucmF3KSB7XG4gICAgICAgICAgcmF3QnVmICs9IHRoaXMuXy5uZXh0Q2hhcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHJvd0RlbGltaXRlcikge1xuICAgICAgICBpZiAocm93RGVsaW1pdGVyID09PSAnXFxyJyAmJiBjaGFycy5jaGFyQXQobmV4dENoYXJQb3MpID09PSAnXFxuJykge1xuICAgICAgICAgIHJvd0RlbGltaXRlciArPSAnXFxuJztcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm9wdGlvbnMucm93RGVsaW1pdGVyID0gW3Jvd0RlbGltaXRlcl07XG4gICAgICAgIHRoaXMuXy5yb3dEZWxpbWl0ZXJMZW5ndGggPSByb3dEZWxpbWl0ZXIubGVuZ3RoO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoIXRoaXMuXy5jb21tZW50aW5nICYmIGNoYXIgPT09IHRoaXMub3B0aW9ucy5lc2NhcGUpIHtcbiAgICAgIGVzY2FwZUlzUXVvdGUgPSB0aGlzLm9wdGlvbnMuZXNjYXBlID09PSB0aGlzLm9wdGlvbnMucXVvdGU7XG4gICAgICBpc0VzY2FwZSA9IHRoaXMuXy5uZXh0Q2hhciA9PT0gdGhpcy5vcHRpb25zLmVzY2FwZTtcbiAgICAgIGlzUXVvdGUgPSB0aGlzLl8ubmV4dENoYXIgPT09IHRoaXMub3B0aW9ucy5xdW90ZTtcbiAgICAgIGlmICghKGVzY2FwZUlzUXVvdGUgJiYgKHRoaXMuXy5maWVsZCA9PSBudWxsKSAmJiAhdGhpcy5fLnF1b3RpbmcpICYmIChpc0VzY2FwZSB8fCBpc1F1b3RlKSkge1xuICAgICAgICBpKys7XG4gICAgICAgIGNoYXIgPSB0aGlzLl8ubmV4dENoYXI7XG4gICAgICAgIHRoaXMuXy5uZXh0Q2hhciA9IGNoYXJzLmNoYXJBdChpICsgMSk7XG4gICAgICAgIGlmICh0aGlzLl8uZmllbGQgPT0gbnVsbCkge1xuICAgICAgICAgIHRoaXMuXy5maWVsZCA9ICcnO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuXy5maWVsZCArPSBjaGFyO1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLnJhdykge1xuICAgICAgICAgIHRoaXMuXy5yYXdCdWYgKz0gY2hhcjtcbiAgICAgICAgfVxuICAgICAgICBpKys7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoIXRoaXMuXy5jb21tZW50aW5nICYmIGNoYXIgPT09IHRoaXMub3B0aW9ucy5xdW90ZSkge1xuICAgICAgaWYgKHRoaXMuXy5xdW90aW5nKSB7XG4gICAgICAgIGFyZU5leHRDaGFyc1Jvd0RlbGltaXRlcnMgPSB0aGlzLm9wdGlvbnMucm93RGVsaW1pdGVyICYmIHRoaXMub3B0aW9ucy5yb3dEZWxpbWl0ZXIuc29tZShmdW5jdGlvbihyZCkge1xuICAgICAgICAgIHJldHVybiBjaGFycy5zdWJzdHIoaSArIDEsIHJkLmxlbmd0aCkgPT09IHJkO1xuICAgICAgICB9KTtcbiAgICAgICAgYXJlTmV4dENoYXJzRGVsaW1pdGVyID0gY2hhcnMuc3Vic3RyKGkgKyAxLCB0aGlzLm9wdGlvbnMuZGVsaW1pdGVyLmxlbmd0aCkgPT09IHRoaXMub3B0aW9ucy5kZWxpbWl0ZXI7XG4gICAgICAgIGlzTmV4dENoYXJBQ29tbWVudCA9IHRoaXMuXy5uZXh0Q2hhciA9PT0gdGhpcy5vcHRpb25zLmNvbW1lbnQ7XG4gICAgICAgIGlmICh0aGlzLl8ubmV4dENoYXIgJiYgIWFyZU5leHRDaGFyc1Jvd0RlbGltaXRlcnMgJiYgIWFyZU5leHRDaGFyc0RlbGltaXRlciAmJiAhaXNOZXh0Q2hhckFDb21tZW50KSB7XG4gICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5yZWxheCkge1xuICAgICAgICAgICAgdGhpcy5fLnF1b3RpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIGlmICh0aGlzLl8uZmllbGQpIHtcbiAgICAgICAgICAgICAgdGhpcy5fLmZpZWxkID0gXCJcIiArIHRoaXMub3B0aW9ucy5xdW90ZSArIHRoaXMuXy5maWVsZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIEVycm9yKFwiSW52YWxpZCBjbG9zaW5nIHF1b3RlIGF0IGxpbmUgXCIgKyAodGhpcy5saW5lcyArIDEpICsgXCI7IGZvdW5kIFwiICsgKEpTT04uc3RyaW5naWZ5KHRoaXMuXy5uZXh0Q2hhcikpICsgXCIgaW5zdGVhZCBvZiBkZWxpbWl0ZXIgXCIgKyAoSlNPTi5zdHJpbmdpZnkodGhpcy5vcHRpb25zLmRlbGltaXRlcikpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5fLnF1b3RpbmcgPSBmYWxzZTtcbiAgICAgICAgICB0aGlzLl8uY2xvc2luZ1F1b3RlID0gdGhpcy5vcHRpb25zLnF1b3RlLmxlbmd0aDtcbiAgICAgICAgICBpKys7XG4gICAgICAgICAgaWYgKGVuZCAmJiBpID09PSBsKSB7XG4gICAgICAgICAgICB0aGlzLl8ubGluZS5wdXNoKGF1dG9fcGFyc2UodGhpcy5fLmZpZWxkIHx8ICcnKSk7XG4gICAgICAgICAgICB0aGlzLl8uZmllbGQgPSBudWxsO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICghdGhpcy5fLmZpZWxkKSB7XG4gICAgICAgIHRoaXMuXy5xdW90aW5nID0gdHJ1ZTtcbiAgICAgICAgaSsrO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH0gZWxzZSBpZiAoKHRoaXMuXy5maWVsZCAhPSBudWxsKSAmJiAhdGhpcy5vcHRpb25zLnJlbGF4KSB7XG4gICAgICAgIHJldHVybiBFcnJvcihcIkludmFsaWQgb3BlbmluZyBxdW90ZSBhdCBsaW5lIFwiICsgKHRoaXMubGluZXMgKyAxKSk7XG4gICAgICB9XG4gICAgfVxuICAgIGlzUm93RGVsaW1pdGVyID0gdGhpcy5vcHRpb25zLnJvd0RlbGltaXRlciAmJiB0aGlzLm9wdGlvbnMucm93RGVsaW1pdGVyLnNvbWUoZnVuY3Rpb24ocmQpIHtcbiAgICAgIHJldHVybiBjaGFycy5zdWJzdHIoaSwgcmQubGVuZ3RoKSA9PT0gcmQ7XG4gICAgfSk7XG4gICAgaWYgKGlzUm93RGVsaW1pdGVyIHx8IChlbmQgJiYgaSA9PT0gbCAtIDEpKSB7XG4gICAgICB0aGlzLmxpbmVzKys7XG4gICAgfVxuICAgIHdhc0NvbW1lbnRpbmcgPSBmYWxzZTtcbiAgICBpZiAoIXRoaXMuXy5jb21tZW50aW5nICYmICF0aGlzLl8ucXVvdGluZyAmJiB0aGlzLm9wdGlvbnMuY29tbWVudCAmJiBjaGFycy5zdWJzdHIoaSwgdGhpcy5vcHRpb25zLmNvbW1lbnQubGVuZ3RoKSA9PT0gdGhpcy5vcHRpb25zLmNvbW1lbnQpIHtcbiAgICAgIHRoaXMuXy5jb21tZW50aW5nID0gdHJ1ZTtcbiAgICB9IGVsc2UgaWYgKHRoaXMuXy5jb21tZW50aW5nICYmIGlzUm93RGVsaW1pdGVyKSB7XG4gICAgICB3YXNDb21tZW50aW5nID0gdHJ1ZTtcbiAgICAgIHRoaXMuXy5jb21tZW50aW5nID0gZmFsc2U7XG4gICAgfVxuICAgIGlzRGVsaW1pdGVyID0gY2hhcnMuc3Vic3RyKGksIHRoaXMub3B0aW9ucy5kZWxpbWl0ZXIubGVuZ3RoKSA9PT0gdGhpcy5vcHRpb25zLmRlbGltaXRlcjtcbiAgICBpZiAoIXRoaXMuXy5jb21tZW50aW5nICYmICF0aGlzLl8ucXVvdGluZyAmJiAoaXNEZWxpbWl0ZXIgfHwgaXNSb3dEZWxpbWl0ZXIpKSB7XG4gICAgICBpZiAoaXNSb3dEZWxpbWl0ZXIpIHtcbiAgICAgICAgaXNSb3dEZWxpbWl0ZXJMZW5ndGggPSB0aGlzLm9wdGlvbnMucm93RGVsaW1pdGVyLmZpbHRlcihmdW5jdGlvbihyZCkge1xuICAgICAgICAgIHJldHVybiBjaGFycy5zdWJzdHIoaSwgcmQubGVuZ3RoKSA9PT0gcmQ7XG4gICAgICAgIH0pWzBdLmxlbmd0aDtcbiAgICAgIH1cbiAgICAgIGlmIChpc1Jvd0RlbGltaXRlciAmJiB0aGlzLl8ubGluZS5sZW5ndGggPT09IDAgJiYgKHRoaXMuXy5maWVsZCA9PSBudWxsKSkge1xuICAgICAgICBpZiAod2FzQ29tbWVudGluZyB8fCB0aGlzLm9wdGlvbnMuc2tpcF9lbXB0eV9saW5lcykge1xuICAgICAgICAgIGkgKz0gaXNSb3dEZWxpbWl0ZXJMZW5ndGg7XG4gICAgICAgICAgdGhpcy5fLm5leHRDaGFyID0gY2hhcnMuY2hhckF0KGkpO1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAocnRyaW0pIHtcbiAgICAgICAgaWYgKCF0aGlzLl8uY2xvc2luZ1F1b3RlKSB7XG4gICAgICAgICAgdGhpcy5fLmZpZWxkID0gKHJlZjEgPSB0aGlzLl8uZmllbGQpICE9IG51bGwgPyByZWYxLnRyaW1SaWdodCgpIDogdm9pZCAwO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB0aGlzLl8ubGluZS5wdXNoKGF1dG9fcGFyc2UodGhpcy5fLmZpZWxkIHx8ICcnKSk7XG4gICAgICB0aGlzLl8uY2xvc2luZ1F1b3RlID0gMDtcbiAgICAgIHRoaXMuXy5maWVsZCA9IG51bGw7XG4gICAgICBpZiAoaXNEZWxpbWl0ZXIpIHtcbiAgICAgICAgaSArPSB0aGlzLm9wdGlvbnMuZGVsaW1pdGVyLmxlbmd0aDtcbiAgICAgICAgdGhpcy5fLm5leHRDaGFyID0gY2hhcnMuY2hhckF0KGkpO1xuICAgICAgICBpZiAoZW5kICYmICF0aGlzLl8ubmV4dENoYXIpIHtcbiAgICAgICAgICBpc1Jvd0RlbGltaXRlciA9IHRydWU7XG4gICAgICAgICAgdGhpcy5fLmxpbmUucHVzaCgnJyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChpc1Jvd0RlbGltaXRlcikge1xuICAgICAgICBlcnIgPSB0aGlzLl9fcHVzaCh0aGlzLl8ubGluZSk7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICByZXR1cm4gZXJyO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuXy5saW5lID0gW107XG4gICAgICAgIGkgKz0gaXNSb3dEZWxpbWl0ZXJMZW5ndGg7XG4gICAgICAgIHRoaXMuXy5uZXh0Q2hhciA9IGNoYXJzLmNoYXJBdChpKTtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICghdGhpcy5fLmNvbW1lbnRpbmcgJiYgIXRoaXMuXy5xdW90aW5nICYmIChjaGFyID09PSAnICcgfHwgY2hhciA9PT0gJ1xcdCcpKSB7XG4gICAgICBpZiAodGhpcy5fLmZpZWxkID09IG51bGwpIHtcbiAgICAgICAgdGhpcy5fLmZpZWxkID0gJyc7XG4gICAgICB9XG4gICAgICBpZiAoIShsdHJpbSAmJiAhdGhpcy5fLmZpZWxkKSkge1xuICAgICAgICB0aGlzLl8uZmllbGQgKz0gY2hhcjtcbiAgICAgIH1cbiAgICAgIGkrKztcbiAgICB9IGVsc2UgaWYgKCF0aGlzLl8uY29tbWVudGluZykge1xuICAgICAgaWYgKHRoaXMuXy5maWVsZCA9PSBudWxsKSB7XG4gICAgICAgIHRoaXMuXy5maWVsZCA9ICcnO1xuICAgICAgfVxuICAgICAgdGhpcy5fLmZpZWxkICs9IGNoYXI7XG4gICAgICBpKys7XG4gICAgfSBlbHNlIHtcbiAgICAgIGkrKztcbiAgICB9XG4gICAgaWYgKCF0aGlzLl8uY29tbWVudGluZyAmJiAoKHJlZjIgPSB0aGlzLl8uZmllbGQpICE9IG51bGwgPyByZWYyLmxlbmd0aCA6IHZvaWQgMCkgPiB0aGlzLm9wdGlvbnMubWF4X2xpbWl0X29uX2RhdGFfcmVhZCkge1xuICAgICAgcmV0dXJuIEVycm9yKFwiRmllbGQgZXhjZWVkcyBtYXhfbGltaXRfb25fZGF0YV9yZWFkIHNldHRpbmcgKFwiICsgdGhpcy5vcHRpb25zLm1heF9saW1pdF9vbl9kYXRhX3JlYWQgKyBcIikgXCIgKyAoSlNPTi5zdHJpbmdpZnkodGhpcy5vcHRpb25zLmRlbGltaXRlcikpKTtcbiAgICB9XG4gICAgaWYgKCF0aGlzLl8uY29tbWVudGluZyAmJiAoKHJlZjMgPSB0aGlzLl8ubGluZSkgIT0gbnVsbCA/IHJlZjMubGVuZ3RoIDogdm9pZCAwKSA+IHRoaXMub3B0aW9ucy5tYXhfbGltaXRfb25fZGF0YV9yZWFkKSB7XG4gICAgICByZXR1cm4gRXJyb3IoXCJSb3cgZGVsaW1pdGVyIG5vdCBmb3VuZCBpbiB0aGUgZmlsZSBcIiArIChKU09OLnN0cmluZ2lmeSh0aGlzLm9wdGlvbnMucm93RGVsaW1pdGVyKSkpO1xuICAgIH1cbiAgfVxuICBpZiAoZW5kKSB7XG4gICAgaWYgKHRoaXMuXy5maWVsZCAhPSBudWxsKSB7XG4gICAgICBpZiAocnRyaW0pIHtcbiAgICAgICAgaWYgKCF0aGlzLl8uY2xvc2luZ1F1b3RlKSB7XG4gICAgICAgICAgdGhpcy5fLmZpZWxkID0gKHJlZjQgPSB0aGlzLl8uZmllbGQpICE9IG51bGwgPyByZWY0LnRyaW1SaWdodCgpIDogdm9pZCAwO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB0aGlzLl8ubGluZS5wdXNoKGF1dG9fcGFyc2UodGhpcy5fLmZpZWxkIHx8ICcnKSk7XG4gICAgICB0aGlzLl8uZmllbGQgPSBudWxsO1xuICAgIH1cbiAgICBpZiAoKChyZWY1ID0gdGhpcy5fLmZpZWxkKSAhPSBudWxsID8gcmVmNS5sZW5ndGggOiB2b2lkIDApID4gdGhpcy5vcHRpb25zLm1heF9saW1pdF9vbl9kYXRhX3JlYWQpIHtcbiAgICAgIHJldHVybiBFcnJvcihcIkRlbGltaXRlciBub3QgZm91bmQgaW4gdGhlIGZpbGUgXCIgKyAoSlNPTi5zdHJpbmdpZnkodGhpcy5vcHRpb25zLmRlbGltaXRlcikpKTtcbiAgICB9XG4gICAgaWYgKGwgPT09IDApIHtcbiAgICAgIHRoaXMubGluZXMrKztcbiAgICB9XG4gICAgaWYgKHRoaXMuXy5saW5lLmxlbmd0aCA+IHRoaXMub3B0aW9ucy5tYXhfbGltaXRfb25fZGF0YV9yZWFkKSB7XG4gICAgICByZXR1cm4gRXJyb3IoXCJSb3cgZGVsaW1pdGVyIG5vdCBmb3VuZCBpbiB0aGUgZmlsZSBcIiArIChKU09OLnN0cmluZ2lmeSh0aGlzLm9wdGlvbnMucm93RGVsaW1pdGVyKSkpO1xuICAgIH1cbiAgfVxuICB0aGlzLl8uYnVmID0gY2hhcnMuc3Vic3RyKGkpO1xuICByZXR1cm4gbnVsbDtcbn07XG5cbmlzT2JqTGl0ZXJhbCA9IGZ1bmN0aW9uKF9vYmopIHtcbiAgdmFyIF90ZXN0O1xuICBfdGVzdCA9IF9vYmo7XG4gIGlmICh0eXBlb2YgX29iaiAhPT0gJ29iamVjdCcgfHwgX29iaiA9PT0gbnVsbCB8fCBBcnJheS5pc0FycmF5KF9vYmopKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiAoZnVuY3Rpb24oKSB7XG4gICAgICB3aGlsZSAoIWZhbHNlKSB7XG4gICAgICAgIGlmIChPYmplY3QuZ2V0UHJvdG90eXBlT2YoX3Rlc3QgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoX3Rlc3QpKSA9PT0gbnVsbCkge1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gT2JqZWN0LmdldFByb3RvdHlwZU9mKF9vYmogPT09IF90ZXN0KTtcbiAgICB9KSgpO1xuICB9XG59O1xuIiwiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbnZhciBTdHJpbmdEZWNvZGVyLCBwYXJzZTtcblxuU3RyaW5nRGVjb2RlciA9IHJlcXVpcmUoJ3N0cmluZ19kZWNvZGVyJykuU3RyaW5nRGVjb2RlcjtcblxucGFyc2UgPSByZXF1aXJlKCcuL2luZGV4Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oZGF0YSwgb3B0aW9ucykge1xuICB2YXIgZGVjb2RlciwgZXJyLCBwYXJzZXIsIHJlY29yZHM7XG4gIGlmIChvcHRpb25zID09IG51bGwpIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cbiAgcmVjb3JkcyA9IG9wdGlvbnMub2JqbmFtZSA/IHt9IDogW107XG4gIGlmIChkYXRhIGluc3RhbmNlb2YgQnVmZmVyKSB7XG4gICAgZGVjb2RlciA9IG5ldyBTdHJpbmdEZWNvZGVyKCk7XG4gICAgZGF0YSA9IGRlY29kZXIud3JpdGUoZGF0YSk7XG4gIH1cbiAgcGFyc2VyID0gbmV3IHBhcnNlLlBhcnNlcihvcHRpb25zKTtcbiAgcGFyc2VyLnB1c2ggPSBmdW5jdGlvbihyZWNvcmQpIHtcbiAgICBpZiAob3B0aW9ucy5vYmpuYW1lKSB7XG4gICAgICByZXR1cm4gcmVjb3Jkc1tyZWNvcmRbMF1dID0gcmVjb3JkWzFdO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gcmVjb3Jkcy5wdXNoKHJlY29yZCk7XG4gICAgfVxuICB9O1xuICBlcnIgPSBwYXJzZXIuX193cml0ZShkYXRhLCBmYWxzZSk7XG4gIGlmIChlcnIpIHtcbiAgICB0aHJvdyBlcnI7XG4gIH1cbiAgaWYgKGRhdGEgaW5zdGFuY2VvZiBCdWZmZXIpIHtcbiAgICBlcnIgPSBwYXJzZXIuX193cml0ZShkYXRhLmVuZCgpLCB0cnVlKTtcbiAgICBpZiAoZXJyKSB7XG4gICAgICB0aHJvdyBlcnI7XG4gICAgfVxuICB9XG4gIHBhcnNlci5fZmx1c2goKGZ1bmN0aW9uKCkge30pKTtcbiAgcmV0dXJuIHJlY29yZHM7XG59O1xuIiwiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbnZhciBTdHJpbmdpZmllciwgZ2V0LCBzdHJlYW0sIHV0aWw7XG5cbnN0cmVhbSA9IHJlcXVpcmUoJ3N0cmVhbScpO1xuXG51dGlsID0gcmVxdWlyZSgndXRpbCcpO1xuXG5nZXQgPSByZXF1aXJlKCdsb2Rhc2guZ2V0Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIHZhciBjYWxsYmFjaywgY2h1bmtzLCBkYXRhLCBvcHRpb25zLCBzdHJpbmdpZmllcjtcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDMpIHtcbiAgICBkYXRhID0gYXJndW1lbnRzWzBdO1xuICAgIG9wdGlvbnMgPSBhcmd1bWVudHNbMV07XG4gICAgY2FsbGJhY2sgPSBhcmd1bWVudHNbMl07XG4gIH0gZWxzZSBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMikge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGFyZ3VtZW50c1swXSkpIHtcbiAgICAgIGRhdGEgPSBhcmd1bWVudHNbMF07XG4gICAgfSBlbHNlIHtcbiAgICAgIG9wdGlvbnMgPSBhcmd1bWVudHNbMF07XG4gICAgfVxuICAgIGlmICh0eXBlb2YgYXJndW1lbnRzWzFdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBjYWxsYmFjayA9IGFyZ3VtZW50c1sxXTtcbiAgICB9IGVsc2Uge1xuICAgICAgb3B0aW9ucyA9IGFyZ3VtZW50c1sxXTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgIGlmICh0eXBlb2YgYXJndW1lbnRzWzBdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBjYWxsYmFjayA9IGFyZ3VtZW50c1swXTtcbiAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoYXJndW1lbnRzWzBdKSkge1xuICAgICAgZGF0YSA9IGFyZ3VtZW50c1swXTtcbiAgICB9IGVsc2Uge1xuICAgICAgb3B0aW9ucyA9IGFyZ3VtZW50c1swXTtcbiAgICB9XG4gIH1cbiAgaWYgKG9wdGlvbnMgPT0gbnVsbCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICBzdHJpbmdpZmllciA9IG5ldyBTdHJpbmdpZmllcihvcHRpb25zKTtcbiAgaWYgKGRhdGEpIHtcbiAgICBwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGQsIGosIGxlbjtcbiAgICAgIGZvciAoaiA9IDAsIGxlbiA9IGRhdGEubGVuZ3RoOyBqIDwgbGVuOyBqKyspIHtcbiAgICAgICAgZCA9IGRhdGFbal07XG4gICAgICAgIHN0cmluZ2lmaWVyLndyaXRlKGQpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHN0cmluZ2lmaWVyLmVuZCgpO1xuICAgIH0pO1xuICB9XG4gIGlmIChjYWxsYmFjaykge1xuICAgIGNodW5rcyA9IFtdO1xuICAgIHN0cmluZ2lmaWVyLm9uKCdyZWFkYWJsZScsIGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGNodW5rLCByZXN1bHRzO1xuICAgICAgcmVzdWx0cyA9IFtdO1xuICAgICAgd2hpbGUgKGNodW5rID0gc3RyaW5naWZpZXIucmVhZCgpKSB7XG4gICAgICAgIHJlc3VsdHMucHVzaChjaHVua3MucHVzaChjaHVuaykpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdHM7XG4gICAgfSk7XG4gICAgc3RyaW5naWZpZXIub24oJ2Vycm9yJywgZnVuY3Rpb24oZXJyKSB7XG4gICAgICByZXR1cm4gY2FsbGJhY2soZXJyKTtcbiAgICB9KTtcbiAgICBzdHJpbmdpZmllci5vbignZW5kJywgZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gY2FsbGJhY2sobnVsbCwgY2h1bmtzLmpvaW4oJycpKTtcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gc3RyaW5naWZpZXI7XG59O1xuXG5TdHJpbmdpZmllciA9IGZ1bmN0aW9uKG9wdHMpIHtcbiAgdmFyIGJhc2UsIGJhc2UxLCBiYXNlMTAsIGJhc2UxMSwgYmFzZTEyLCBiYXNlMTMsIGJhc2UyLCBiYXNlMywgYmFzZTQsIGJhc2U1LCBiYXNlNiwgYmFzZTcsIGJhc2U4LCBiYXNlOSwgaywgb3B0aW9ucywgdjtcbiAgaWYgKG9wdHMgPT0gbnVsbCkge1xuICAgIG9wdHMgPSB7fTtcbiAgfVxuICBvcHRpb25zID0ge307XG4gIGZvciAoayBpbiBvcHRzKSB7XG4gICAgdiA9IG9wdHNba107XG4gICAgb3B0aW9uc1trXSA9IHY7XG4gIH1cbiAgc3RyZWFtLlRyYW5zZm9ybS5jYWxsKHRoaXMsIG9wdGlvbnMpO1xuICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICBpZiAoKGJhc2UgPSB0aGlzLm9wdGlvbnMpLmRlbGltaXRlciA9PSBudWxsKSB7XG4gICAgYmFzZS5kZWxpbWl0ZXIgPSAnLCc7XG4gIH1cbiAgaWYgKChiYXNlMSA9IHRoaXMub3B0aW9ucykucXVvdGUgPT0gbnVsbCkge1xuICAgIGJhc2UxLnF1b3RlID0gJ1wiJztcbiAgfVxuICBpZiAoKGJhc2UyID0gdGhpcy5vcHRpb25zKS5xdW90ZWQgPT0gbnVsbCkge1xuICAgIGJhc2UyLnF1b3RlZCA9IGZhbHNlO1xuICB9XG4gIGlmICgoYmFzZTMgPSB0aGlzLm9wdGlvbnMpLnF1b3RlZEVtcHR5ID09IG51bGwpIHtcbiAgICBiYXNlMy5xdW90ZWRFbXB0eSA9IHZvaWQgMDtcbiAgfVxuICBpZiAoKGJhc2U0ID0gdGhpcy5vcHRpb25zKS5xdW90ZWRTdHJpbmcgPT0gbnVsbCkge1xuICAgIGJhc2U0LnF1b3RlZFN0cmluZyA9IGZhbHNlO1xuICB9XG4gIGlmICgoYmFzZTUgPSB0aGlzLm9wdGlvbnMpLmVvZiA9PSBudWxsKSB7XG4gICAgYmFzZTUuZW9mID0gdHJ1ZTtcbiAgfVxuICBpZiAoKGJhc2U2ID0gdGhpcy5vcHRpb25zKS5lc2NhcGUgPT0gbnVsbCkge1xuICAgIGJhc2U2LmVzY2FwZSA9ICdcIic7XG4gIH1cbiAgaWYgKChiYXNlNyA9IHRoaXMub3B0aW9ucykuY29sdW1ucyA9PSBudWxsKSB7XG4gICAgYmFzZTcuY29sdW1ucyA9IG51bGw7XG4gIH1cbiAgaWYgKChiYXNlOCA9IHRoaXMub3B0aW9ucykuaGVhZGVyID09IG51bGwpIHtcbiAgICBiYXNlOC5oZWFkZXIgPSBmYWxzZTtcbiAgfVxuICBpZiAoKGJhc2U5ID0gdGhpcy5vcHRpb25zKS5mb3JtYXR0ZXJzID09IG51bGwpIHtcbiAgICBiYXNlOS5mb3JtYXR0ZXJzID0ge307XG4gIH1cbiAgaWYgKChiYXNlMTAgPSB0aGlzLm9wdGlvbnMuZm9ybWF0dGVycykuZGF0ZSA9PSBudWxsKSB7XG4gICAgYmFzZTEwLmRhdGUgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgcmV0dXJuICcnICsgdmFsdWUuZ2V0VGltZSgpO1xuICAgIH07XG4gIH1cbiAgaWYgKChiYXNlMTEgPSB0aGlzLm9wdGlvbnMuZm9ybWF0dGVycykuYm9vbCA9PSBudWxsKSB7XG4gICAgYmFzZTExLmJvb2wgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiAnMSc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICBpZiAoKGJhc2UxMiA9IHRoaXMub3B0aW9ucy5mb3JtYXR0ZXJzKS5vYmplY3QgPT0gbnVsbCkge1xuICAgIGJhc2UxMi5vYmplY3QgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHZhbHVlKTtcbiAgICB9O1xuICB9XG4gIGlmICgoYmFzZTEzID0gdGhpcy5vcHRpb25zKS5yb3dEZWxpbWl0ZXIgPT0gbnVsbCkge1xuICAgIGJhc2UxMy5yb3dEZWxpbWl0ZXIgPSAnXFxuJztcbiAgfVxuICBpZiAodGhpcy5jb3VudFdyaXRlbiA9PSBudWxsKSB7XG4gICAgdGhpcy5jb3VudFdyaXRlbiA9IDA7XG4gIH1cbiAgc3dpdGNoICh0aGlzLm9wdGlvbnMucm93RGVsaW1pdGVyKSB7XG4gICAgY2FzZSAnYXV0byc6XG4gICAgICB0aGlzLm9wdGlvbnMucm93RGVsaW1pdGVyID0gbnVsbDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3VuaXgnOlxuICAgICAgdGhpcy5vcHRpb25zLnJvd0RlbGltaXRlciA9IFwiXFxuXCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdtYWMnOlxuICAgICAgdGhpcy5vcHRpb25zLnJvd0RlbGltaXRlciA9IFwiXFxyXCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlICd3aW5kb3dzJzpcbiAgICAgIHRoaXMub3B0aW9ucy5yb3dEZWxpbWl0ZXIgPSBcIlxcclxcblwiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAndW5pY29kZSc6XG4gICAgICB0aGlzLm9wdGlvbnMucm93RGVsaW1pdGVyID0gXCJcXHUyMDI4XCI7XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG51dGlsLmluaGVyaXRzKFN0cmluZ2lmaWVyLCBzdHJlYW0uVHJhbnNmb3JtKTtcblxubW9kdWxlLmV4cG9ydHMuU3RyaW5naWZpZXIgPSBTdHJpbmdpZmllcjtcblxuU3RyaW5naWZpZXIucHJvdG90eXBlLmhlYWRlcnMgPSBmdW5jdGlvbigpIHtcbiAgdmFyIGssIGxhYmVsLCBsYWJlbHM7XG4gIGlmICghdGhpcy5vcHRpb25zLmhlYWRlcikge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoIXRoaXMub3B0aW9ucy5jb2x1bW5zKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGxhYmVscyA9IHRoaXMub3B0aW9ucy5jb2x1bW5zO1xuICBpZiAodHlwZW9mIGxhYmVscyA9PT0gJ29iamVjdCcpIHtcbiAgICBsYWJlbHMgPSAoZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgcmVzdWx0cztcbiAgICAgIHJlc3VsdHMgPSBbXTtcbiAgICAgIGZvciAoayBpbiBsYWJlbHMpIHtcbiAgICAgICAgbGFiZWwgPSBsYWJlbHNba107XG4gICAgICAgIHJlc3VsdHMucHVzaChsYWJlbCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0cztcbiAgICB9KSgpO1xuICB9XG4gIGlmICh0aGlzLm9wdGlvbnMuZW9mKSB7XG4gICAgbGFiZWxzID0gdGhpcy5zdHJpbmdpZnkobGFiZWxzKSArIHRoaXMub3B0aW9ucy5yb3dEZWxpbWl0ZXI7XG4gIH0gZWxzZSB7XG4gICAgbGFiZWxzID0gdGhpcy5zdHJpbmdpZnkobGFiZWxzKTtcbiAgfVxuICByZXR1cm4gc3RyZWFtLlRyYW5zZm9ybS5wcm90b3R5cGUud3JpdGUuY2FsbCh0aGlzLCBsYWJlbHMpO1xufTtcblxuU3RyaW5naWZpZXIucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uKGNodW5rLCBlbmNvZGluZywgY2FsbGJhY2spIHtcbiAgaWYgKHRoaXMuY291bnRXcml0ZW4gPT09IDApIHtcbiAgICB0aGlzLmhlYWRlcnMoKTtcbiAgfVxuICByZXR1cm4gc3RyZWFtLlRyYW5zZm9ybS5wcm90b3R5cGUuZW5kLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuXG5TdHJpbmdpZmllci5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbihjaHVuaywgZW5jb2RpbmcsIGNhbGxiYWNrKSB7XG4gIHZhciBiYXNlLCBlLCBwcmVzZXJ2ZTtcbiAgaWYgKGNodW5rID09IG51bGwpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgcHJlc2VydmUgPSB0eXBlb2YgY2h1bmsgIT09ICdvYmplY3QnO1xuICBpZiAoIXByZXNlcnZlKSB7XG4gICAgaWYgKHRoaXMuY291bnRXcml0ZW4gPT09IDAgJiYgIUFycmF5LmlzQXJyYXkoY2h1bmspKSB7XG4gICAgICBpZiAoKGJhc2UgPSB0aGlzLm9wdGlvbnMpLmNvbHVtbnMgPT0gbnVsbCkge1xuICAgICAgICBiYXNlLmNvbHVtbnMgPSBPYmplY3Qua2V5cyhjaHVuayk7XG4gICAgICB9XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICB0aGlzLmVtaXQoJ3JlY29yZCcsIGNodW5rLCB0aGlzLmNvdW50V3JpdGVuKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgZSA9IGVycm9yO1xuICAgICAgcmV0dXJuIHRoaXMuZW1pdCgnZXJyb3InLCBlKTtcbiAgICB9XG4gICAgaWYgKHRoaXMub3B0aW9ucy5lb2YpIHtcbiAgICAgIGNodW5rID0gdGhpcy5zdHJpbmdpZnkoY2h1bmspICsgdGhpcy5vcHRpb25zLnJvd0RlbGltaXRlcjtcbiAgICB9IGVsc2Uge1xuICAgICAgY2h1bmsgPSB0aGlzLnN0cmluZ2lmeShjaHVuayk7XG4gICAgICBpZiAodGhpcy5vcHRpb25zLmhlYWRlciB8fCB0aGlzLmNvdW50V3JpdGVuKSB7XG4gICAgICAgIGNodW5rID0gdGhpcy5vcHRpb25zLnJvd0RlbGltaXRlciArIGNodW5rO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBpZiAodHlwZW9mIGNodW5rID09PSAnbnVtYmVyJykge1xuICAgIGNodW5rID0gXCJcIiArIGNodW5rO1xuICB9XG4gIGlmICh0aGlzLmNvdW50V3JpdGVuID09PSAwKSB7XG4gICAgdGhpcy5oZWFkZXJzKCk7XG4gIH1cbiAgaWYgKCFwcmVzZXJ2ZSkge1xuICAgIHRoaXMuY291bnRXcml0ZW4rKztcbiAgfVxuICByZXR1cm4gc3RyZWFtLlRyYW5zZm9ybS5wcm90b3R5cGUud3JpdGUuY2FsbCh0aGlzLCBjaHVuaywgZW5jb2RpbmcsIGNhbGxiYWNrKTtcbn07XG5cblN0cmluZ2lmaWVyLnByb3RvdHlwZS5fdHJhbnNmb3JtID0gZnVuY3Rpb24oY2h1bmssIGVuY29kaW5nLCBjYWxsYmFjaykge1xuICB0aGlzLnB1c2goY2h1bmspO1xuICByZXR1cm4gY2FsbGJhY2soKTtcbn07XG5cblN0cmluZ2lmaWVyLnByb3RvdHlwZS5zdHJpbmdpZnkgPSBmdW5jdGlvbihsaW5lKSB7XG4gIHZhciBfbGluZSwgY29sdW1uLCBjb2x1bW5zLCBjb250YWluc0VzY2FwZSwgY29udGFpbnNMaW5lYnJlYWssIGNvbnRhaW5zUXVvdGUsIGNvbnRhaW5zZGVsaW1pdGVyLCBkZWxpbWl0ZXIsIGVzY2FwZSwgZmllbGQsIGksIGosIGwsIG5ld0xpbmUsIHF1b3RlLCByZWYsIHJlZjEsIHJlZ2V4cCwgc2hvdWxkUXVvdGUsIHZhbHVlO1xuICBpZiAodHlwZW9mIGxpbmUgIT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIGxpbmU7XG4gIH1cbiAgY29sdW1ucyA9IHRoaXMub3B0aW9ucy5jb2x1bW5zO1xuICBpZiAodHlwZW9mIGNvbHVtbnMgPT09ICdvYmplY3QnICYmIGNvbHVtbnMgIT09IG51bGwgJiYgIUFycmF5LmlzQXJyYXkoY29sdW1ucykpIHtcbiAgICBjb2x1bW5zID0gT2JqZWN0LmtleXMoY29sdW1ucyk7XG4gIH1cbiAgZGVsaW1pdGVyID0gdGhpcy5vcHRpb25zLmRlbGltaXRlcjtcbiAgcXVvdGUgPSB0aGlzLm9wdGlvbnMucXVvdGU7XG4gIGVzY2FwZSA9IHRoaXMub3B0aW9ucy5lc2NhcGU7XG4gIGlmICghQXJyYXkuaXNBcnJheShsaW5lKSkge1xuICAgIF9saW5lID0gW107XG4gICAgaWYgKGNvbHVtbnMpIHtcbiAgICAgIGZvciAoaSA9IGogPSAwLCByZWYgPSBjb2x1bW5zLmxlbmd0aDsgMCA8PSByZWYgPyBqIDwgcmVmIDogaiA+IHJlZjsgaSA9IDAgPD0gcmVmID8gKytqIDogLS1qKSB7XG4gICAgICAgIGNvbHVtbiA9IGNvbHVtbnNbaV07XG4gICAgICAgIHZhbHVlID0gZ2V0KGxpbmUsIGNvbHVtbik7XG4gICAgICAgIF9saW5lW2ldID0gKHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcgfHwgdmFsdWUgPT09IG51bGwpID8gJycgOiB2YWx1ZTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgZm9yIChjb2x1bW4gaW4gbGluZSkge1xuICAgICAgICBfbGluZS5wdXNoKGxpbmVbY29sdW1uXSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxpbmUgPSBfbGluZTtcbiAgICBfbGluZSA9IG51bGw7XG4gIH0gZWxzZSBpZiAoY29sdW1ucykge1xuICAgIGxpbmUuc3BsaWNlKGNvbHVtbnMubGVuZ3RoKTtcbiAgfVxuICBpZiAoQXJyYXkuaXNBcnJheShsaW5lKSkge1xuICAgIG5ld0xpbmUgPSAnJztcbiAgICBmb3IgKGkgPSBsID0gMCwgcmVmMSA9IGxpbmUubGVuZ3RoOyAwIDw9IHJlZjEgPyBsIDwgcmVmMSA6IGwgPiByZWYxOyBpID0gMCA8PSByZWYxID8gKytsIDogLS1sKSB7XG4gICAgICBmaWVsZCA9IGxpbmVbaV07XG4gICAgICBpZiAodHlwZW9mIGZpZWxkID09PSAnc3RyaW5nJykge1xuXG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiBmaWVsZCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgZmllbGQgPSAnJyArIGZpZWxkO1xuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgZmllbGQgPT09ICdib29sZWFuJykge1xuICAgICAgICBmaWVsZCA9IHRoaXMub3B0aW9ucy5mb3JtYXR0ZXJzLmJvb2woZmllbGQpO1xuICAgICAgfSBlbHNlIGlmIChmaWVsZCBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICAgICAgZmllbGQgPSB0aGlzLm9wdGlvbnMuZm9ybWF0dGVycy5kYXRlKGZpZWxkKTtcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGZpZWxkID09PSAnb2JqZWN0JyAmJiBmaWVsZCAhPT0gbnVsbCkge1xuICAgICAgICBmaWVsZCA9IHRoaXMub3B0aW9ucy5mb3JtYXR0ZXJzLm9iamVjdChmaWVsZCk7XG4gICAgICB9XG4gICAgICBpZiAoZmllbGQpIHtcbiAgICAgICAgY29udGFpbnNkZWxpbWl0ZXIgPSBmaWVsZC5pbmRleE9mKGRlbGltaXRlcikgPj0gMDtcbiAgICAgICAgY29udGFpbnNRdW90ZSA9IGZpZWxkLmluZGV4T2YocXVvdGUpID49IDA7XG4gICAgICAgIGNvbnRhaW5zRXNjYXBlID0gZmllbGQuaW5kZXhPZihlc2NhcGUpID49IDAgJiYgKGVzY2FwZSAhPT0gcXVvdGUpO1xuICAgICAgICBjb250YWluc0xpbmVicmVhayA9IGZpZWxkLmluZGV4T2YoJ1xccicpID49IDAgfHwgZmllbGQuaW5kZXhPZignXFxuJykgPj0gMDtcbiAgICAgICAgc2hvdWxkUXVvdGUgPSBjb250YWluc1F1b3RlIHx8IGNvbnRhaW5zZGVsaW1pdGVyIHx8IGNvbnRhaW5zTGluZWJyZWFrIHx8IHRoaXMub3B0aW9ucy5xdW90ZWQgfHwgKHRoaXMub3B0aW9ucy5xdW90ZWRTdHJpbmcgJiYgdHlwZW9mIGxpbmVbaV0gPT09ICdzdHJpbmcnKTtcbiAgICAgICAgaWYgKHNob3VsZFF1b3RlICYmIGNvbnRhaW5zRXNjYXBlKSB7XG4gICAgICAgICAgcmVnZXhwID0gZXNjYXBlID09PSAnXFxcXCcgPyBuZXcgUmVnRXhwKGVzY2FwZSArIGVzY2FwZSwgJ2cnKSA6IG5ldyBSZWdFeHAoZXNjYXBlLCAnZycpO1xuICAgICAgICAgIGZpZWxkID0gZmllbGQucmVwbGFjZShyZWdleHAsIGVzY2FwZSArIGVzY2FwZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvbnRhaW5zUXVvdGUpIHtcbiAgICAgICAgICByZWdleHAgPSBuZXcgUmVnRXhwKHF1b3RlLCAnZycpO1xuICAgICAgICAgIGZpZWxkID0gZmllbGQucmVwbGFjZShyZWdleHAsIGVzY2FwZSArIHF1b3RlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2hvdWxkUXVvdGUpIHtcbiAgICAgICAgICBmaWVsZCA9IHF1b3RlICsgZmllbGQgKyBxdW90ZTtcbiAgICAgICAgfVxuICAgICAgICBuZXdMaW5lICs9IGZpZWxkO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLm9wdGlvbnMucXVvdGVkRW1wdHkgfHwgKCh0aGlzLm9wdGlvbnMucXVvdGVkRW1wdHkgPT0gbnVsbCkgJiYgbGluZVtpXSA9PT0gJycgJiYgdGhpcy5vcHRpb25zLnF1b3RlZFN0cmluZykpIHtcbiAgICAgICAgbmV3TGluZSArPSBxdW90ZSArIHF1b3RlO1xuICAgICAgfVxuICAgICAgaWYgKGkgIT09IGxpbmUubGVuZ3RoIC0gMSkge1xuICAgICAgICBuZXdMaW5lICs9IGRlbGltaXRlcjtcbiAgICAgIH1cbiAgICB9XG4gICAgbGluZSA9IG5ld0xpbmU7XG4gIH1cbiAgcmV0dXJuIGxpbmU7XG59O1xuIiwiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbnZhciBTdHJpbmdEZWNvZGVyLCBzdHJpbmdpZnk7XG5cblN0cmluZ0RlY29kZXIgPSByZXF1aXJlKCdzdHJpbmdfZGVjb2RlcicpLlN0cmluZ0RlY29kZXI7XG5cbnN0cmluZ2lmeSA9IHJlcXVpcmUoJy4vaW5kZXgnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihyZWNvcmRzLCBvcHRpb25zKSB7XG4gIHZhciBkYXRhLCBkZWNvZGVyLCBpLCBsZW4sIHJlY29yZCwgc3RyaW5naWZpZXI7XG4gIGlmIChvcHRpb25zID09IG51bGwpIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cbiAgZGF0YSA9IFtdO1xuICBpZiAocmVjb3JkcyBpbnN0YW5jZW9mIEJ1ZmZlcikge1xuICAgIGRlY29kZXIgPSBuZXcgU3RyaW5nRGVjb2RlcigpO1xuICAgIHJlY29yZHMgPSBkZWNvZGVyLndyaXRlKHJlY29yZHMpO1xuICB9XG4gIHN0cmluZ2lmaWVyID0gbmV3IHN0cmluZ2lmeS5TdHJpbmdpZmllcihvcHRpb25zKTtcbiAgc3RyaW5naWZpZXIucHVzaCA9IGZ1bmN0aW9uKHJlY29yZCkge1xuICAgIGlmIChyZWNvcmQpIHtcbiAgICAgIHJldHVybiBkYXRhLnB1c2gocmVjb3JkLnRvU3RyaW5nKCkpO1xuICAgIH1cbiAgfTtcbiAgZm9yIChpID0gMCwgbGVuID0gcmVjb3Jkcy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgIHJlY29yZCA9IHJlY29yZHNbaV07XG4gICAgc3RyaW5naWZpZXIud3JpdGUocmVjb3JkKTtcbiAgfVxuICBzdHJpbmdpZmllci5lbmQoKTtcbiAgcmV0dXJuIGRhdGEuam9pbignJyk7XG59O1xuIiwiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbnZhciBvYmplY3RDcmVhdGUgPSBPYmplY3QuY3JlYXRlIHx8IG9iamVjdENyZWF0ZVBvbHlmaWxsXG52YXIgb2JqZWN0S2V5cyA9IE9iamVjdC5rZXlzIHx8IG9iamVjdEtleXNQb2x5ZmlsbFxudmFyIGJpbmQgPSBGdW5jdGlvbi5wcm90b3R5cGUuYmluZCB8fCBmdW5jdGlvbkJpbmRQb2x5ZmlsbFxuXG5mdW5jdGlvbiBFdmVudEVtaXR0ZXIoKSB7XG4gIGlmICghdGhpcy5fZXZlbnRzIHx8ICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGhpcywgJ19ldmVudHMnKSkge1xuICAgIHRoaXMuX2V2ZW50cyA9IG9iamVjdENyZWF0ZShudWxsKTtcbiAgICB0aGlzLl9ldmVudHNDb3VudCA9IDA7XG4gIH1cblxuICB0aGlzLl9tYXhMaXN0ZW5lcnMgPSB0aGlzLl9tYXhMaXN0ZW5lcnMgfHwgdW5kZWZpbmVkO1xufVxubW9kdWxlLmV4cG9ydHMgPSBFdmVudEVtaXR0ZXI7XG5cbi8vIEJhY2t3YXJkcy1jb21wYXQgd2l0aCBub2RlIDAuMTAueFxuRXZlbnRFbWl0dGVyLkV2ZW50RW1pdHRlciA9IEV2ZW50RW1pdHRlcjtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5fZXZlbnRzID0gdW5kZWZpbmVkO1xuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5fbWF4TGlzdGVuZXJzID0gdW5kZWZpbmVkO1xuXG4vLyBCeSBkZWZhdWx0IEV2ZW50RW1pdHRlcnMgd2lsbCBwcmludCBhIHdhcm5pbmcgaWYgbW9yZSB0aGFuIDEwIGxpc3RlbmVycyBhcmVcbi8vIGFkZGVkIHRvIGl0LiBUaGlzIGlzIGEgdXNlZnVsIGRlZmF1bHQgd2hpY2ggaGVscHMgZmluZGluZyBtZW1vcnkgbGVha3MuXG52YXIgZGVmYXVsdE1heExpc3RlbmVycyA9IDEwO1xuXG52YXIgaGFzRGVmaW5lUHJvcGVydHk7XG50cnkge1xuICB2YXIgbyA9IHt9O1xuICBpZiAoT2JqZWN0LmRlZmluZVByb3BlcnR5KSBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgJ3gnLCB7IHZhbHVlOiAwIH0pO1xuICBoYXNEZWZpbmVQcm9wZXJ0eSA9IG8ueCA9PT0gMDtcbn0gY2F0Y2ggKGVycikgeyBoYXNEZWZpbmVQcm9wZXJ0eSA9IGZhbHNlIH1cbmlmIChoYXNEZWZpbmVQcm9wZXJ0eSkge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRXZlbnRFbWl0dGVyLCAnZGVmYXVsdE1heExpc3RlbmVycycsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZGVmYXVsdE1heExpc3RlbmVycztcbiAgICB9LFxuICAgIHNldDogZnVuY3Rpb24oYXJnKSB7XG4gICAgICAvLyBjaGVjayB3aGV0aGVyIHRoZSBpbnB1dCBpcyBhIHBvc2l0aXZlIG51bWJlciAod2hvc2UgdmFsdWUgaXMgemVybyBvclxuICAgICAgLy8gZ3JlYXRlciBhbmQgbm90IGEgTmFOKS5cbiAgICAgIGlmICh0eXBlb2YgYXJnICE9PSAnbnVtYmVyJyB8fCBhcmcgPCAwIHx8IGFyZyAhPT0gYXJnKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdcImRlZmF1bHRNYXhMaXN0ZW5lcnNcIiBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyJyk7XG4gICAgICBkZWZhdWx0TWF4TGlzdGVuZXJzID0gYXJnO1xuICAgIH1cbiAgfSk7XG59IGVsc2Uge1xuICBFdmVudEVtaXR0ZXIuZGVmYXVsdE1heExpc3RlbmVycyA9IGRlZmF1bHRNYXhMaXN0ZW5lcnM7XG59XG5cbi8vIE9idmlvdXNseSBub3QgYWxsIEVtaXR0ZXJzIHNob3VsZCBiZSBsaW1pdGVkIHRvIDEwLiBUaGlzIGZ1bmN0aW9uIGFsbG93c1xuLy8gdGhhdCB0byBiZSBpbmNyZWFzZWQuIFNldCB0byB6ZXJvIGZvciB1bmxpbWl0ZWQuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnNldE1heExpc3RlbmVycyA9IGZ1bmN0aW9uIHNldE1heExpc3RlbmVycyhuKSB7XG4gIGlmICh0eXBlb2YgbiAhPT0gJ251bWJlcicgfHwgbiA8IDAgfHwgaXNOYU4obikpXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJuXCIgYXJndW1lbnQgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlcicpO1xuICB0aGlzLl9tYXhMaXN0ZW5lcnMgPSBuO1xuICByZXR1cm4gdGhpcztcbn07XG5cbmZ1bmN0aW9uICRnZXRNYXhMaXN0ZW5lcnModGhhdCkge1xuICBpZiAodGhhdC5fbWF4TGlzdGVuZXJzID09PSB1bmRlZmluZWQpXG4gICAgcmV0dXJuIEV2ZW50RW1pdHRlci5kZWZhdWx0TWF4TGlzdGVuZXJzO1xuICByZXR1cm4gdGhhdC5fbWF4TGlzdGVuZXJzO1xufVxuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmdldE1heExpc3RlbmVycyA9IGZ1bmN0aW9uIGdldE1heExpc3RlbmVycygpIHtcbiAgcmV0dXJuICRnZXRNYXhMaXN0ZW5lcnModGhpcyk7XG59O1xuXG4vLyBUaGVzZSBzdGFuZGFsb25lIGVtaXQqIGZ1bmN0aW9ucyBhcmUgdXNlZCB0byBvcHRpbWl6ZSBjYWxsaW5nIG9mIGV2ZW50XG4vLyBoYW5kbGVycyBmb3IgZmFzdCBjYXNlcyBiZWNhdXNlIGVtaXQoKSBpdHNlbGYgb2Z0ZW4gaGFzIGEgdmFyaWFibGUgbnVtYmVyIG9mXG4vLyBhcmd1bWVudHMgYW5kIGNhbiBiZSBkZW9wdGltaXplZCBiZWNhdXNlIG9mIHRoYXQuIFRoZXNlIGZ1bmN0aW9ucyBhbHdheXMgaGF2ZVxuLy8gdGhlIHNhbWUgbnVtYmVyIG9mIGFyZ3VtZW50cyBhbmQgdGh1cyBkbyBub3QgZ2V0IGRlb3B0aW1pemVkLCBzbyB0aGUgY29kZVxuLy8gaW5zaWRlIHRoZW0gY2FuIGV4ZWN1dGUgZmFzdGVyLlxuZnVuY3Rpb24gZW1pdE5vbmUoaGFuZGxlciwgaXNGbiwgc2VsZikge1xuICBpZiAoaXNGbilcbiAgICBoYW5kbGVyLmNhbGwoc2VsZik7XG4gIGVsc2Uge1xuICAgIHZhciBsZW4gPSBoYW5kbGVyLmxlbmd0aDtcbiAgICB2YXIgbGlzdGVuZXJzID0gYXJyYXlDbG9uZShoYW5kbGVyLCBsZW4pO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyArK2kpXG4gICAgICBsaXN0ZW5lcnNbaV0uY2FsbChzZWxmKTtcbiAgfVxufVxuZnVuY3Rpb24gZW1pdE9uZShoYW5kbGVyLCBpc0ZuLCBzZWxmLCBhcmcxKSB7XG4gIGlmIChpc0ZuKVxuICAgIGhhbmRsZXIuY2FsbChzZWxmLCBhcmcxKTtcbiAgZWxzZSB7XG4gICAgdmFyIGxlbiA9IGhhbmRsZXIubGVuZ3RoO1xuICAgIHZhciBsaXN0ZW5lcnMgPSBhcnJheUNsb25lKGhhbmRsZXIsIGxlbik7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47ICsraSlcbiAgICAgIGxpc3RlbmVyc1tpXS5jYWxsKHNlbGYsIGFyZzEpO1xuICB9XG59XG5mdW5jdGlvbiBlbWl0VHdvKGhhbmRsZXIsIGlzRm4sIHNlbGYsIGFyZzEsIGFyZzIpIHtcbiAgaWYgKGlzRm4pXG4gICAgaGFuZGxlci5jYWxsKHNlbGYsIGFyZzEsIGFyZzIpO1xuICBlbHNlIHtcbiAgICB2YXIgbGVuID0gaGFuZGxlci5sZW5ndGg7XG4gICAgdmFyIGxpc3RlbmVycyA9IGFycmF5Q2xvbmUoaGFuZGxlciwgbGVuKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgKytpKVxuICAgICAgbGlzdGVuZXJzW2ldLmNhbGwoc2VsZiwgYXJnMSwgYXJnMik7XG4gIH1cbn1cbmZ1bmN0aW9uIGVtaXRUaHJlZShoYW5kbGVyLCBpc0ZuLCBzZWxmLCBhcmcxLCBhcmcyLCBhcmczKSB7XG4gIGlmIChpc0ZuKVxuICAgIGhhbmRsZXIuY2FsbChzZWxmLCBhcmcxLCBhcmcyLCBhcmczKTtcbiAgZWxzZSB7XG4gICAgdmFyIGxlbiA9IGhhbmRsZXIubGVuZ3RoO1xuICAgIHZhciBsaXN0ZW5lcnMgPSBhcnJheUNsb25lKGhhbmRsZXIsIGxlbik7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47ICsraSlcbiAgICAgIGxpc3RlbmVyc1tpXS5jYWxsKHNlbGYsIGFyZzEsIGFyZzIsIGFyZzMpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGVtaXRNYW55KGhhbmRsZXIsIGlzRm4sIHNlbGYsIGFyZ3MpIHtcbiAgaWYgKGlzRm4pXG4gICAgaGFuZGxlci5hcHBseShzZWxmLCBhcmdzKTtcbiAgZWxzZSB7XG4gICAgdmFyIGxlbiA9IGhhbmRsZXIubGVuZ3RoO1xuICAgIHZhciBsaXN0ZW5lcnMgPSBhcnJheUNsb25lKGhhbmRsZXIsIGxlbik7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47ICsraSlcbiAgICAgIGxpc3RlbmVyc1tpXS5hcHBseShzZWxmLCBhcmdzKTtcbiAgfVxufVxuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmVtaXQgPSBmdW5jdGlvbiBlbWl0KHR5cGUpIHtcbiAgdmFyIGVyLCBoYW5kbGVyLCBsZW4sIGFyZ3MsIGksIGV2ZW50cztcbiAgdmFyIGRvRXJyb3IgPSAodHlwZSA9PT0gJ2Vycm9yJyk7XG5cbiAgZXZlbnRzID0gdGhpcy5fZXZlbnRzO1xuICBpZiAoZXZlbnRzKVxuICAgIGRvRXJyb3IgPSAoZG9FcnJvciAmJiBldmVudHMuZXJyb3IgPT0gbnVsbCk7XG4gIGVsc2UgaWYgKCFkb0Vycm9yKVxuICAgIHJldHVybiBmYWxzZTtcblxuICAvLyBJZiB0aGVyZSBpcyBubyAnZXJyb3InIGV2ZW50IGxpc3RlbmVyIHRoZW4gdGhyb3cuXG4gIGlmIChkb0Vycm9yKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKVxuICAgICAgZXIgPSBhcmd1bWVudHNbMV07XG4gICAgaWYgKGVyIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgIHRocm93IGVyOyAvLyBVbmhhbmRsZWQgJ2Vycm9yJyBldmVudFxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBBdCBsZWFzdCBnaXZlIHNvbWUga2luZCBvZiBjb250ZXh0IHRvIHRoZSB1c2VyXG4gICAgICB2YXIgZXJyID0gbmV3IEVycm9yKCdVbmhhbmRsZWQgXCJlcnJvclwiIGV2ZW50LiAoJyArIGVyICsgJyknKTtcbiAgICAgIGVyci5jb250ZXh0ID0gZXI7XG4gICAgICB0aHJvdyBlcnI7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGhhbmRsZXIgPSBldmVudHNbdHlwZV07XG5cbiAgaWYgKCFoYW5kbGVyKVxuICAgIHJldHVybiBmYWxzZTtcblxuICB2YXIgaXNGbiA9IHR5cGVvZiBoYW5kbGVyID09PSAnZnVuY3Rpb24nO1xuICBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICBzd2l0Y2ggKGxlbikge1xuICAgICAgLy8gZmFzdCBjYXNlc1xuICAgIGNhc2UgMTpcbiAgICAgIGVtaXROb25lKGhhbmRsZXIsIGlzRm4sIHRoaXMpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAyOlxuICAgICAgZW1pdE9uZShoYW5kbGVyLCBpc0ZuLCB0aGlzLCBhcmd1bWVudHNbMV0pO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAzOlxuICAgICAgZW1pdFR3byhoYW5kbGVyLCBpc0ZuLCB0aGlzLCBhcmd1bWVudHNbMV0sIGFyZ3VtZW50c1syXSk7XG4gICAgICBicmVhaztcbiAgICBjYXNlIDQ6XG4gICAgICBlbWl0VGhyZWUoaGFuZGxlciwgaXNGbiwgdGhpcywgYXJndW1lbnRzWzFdLCBhcmd1bWVudHNbMl0sIGFyZ3VtZW50c1szXSk7XG4gICAgICBicmVhaztcbiAgICAgIC8vIHNsb3dlclxuICAgIGRlZmF1bHQ6XG4gICAgICBhcmdzID0gbmV3IEFycmF5KGxlbiAtIDEpO1xuICAgICAgZm9yIChpID0gMTsgaSA8IGxlbjsgaSsrKVxuICAgICAgICBhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgIGVtaXRNYW55KGhhbmRsZXIsIGlzRm4sIHRoaXMsIGFyZ3MpO1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59O1xuXG5mdW5jdGlvbiBfYWRkTGlzdGVuZXIodGFyZ2V0LCB0eXBlLCBsaXN0ZW5lciwgcHJlcGVuZCkge1xuICB2YXIgbTtcbiAgdmFyIGV2ZW50cztcbiAgdmFyIGV4aXN0aW5nO1xuXG4gIGlmICh0eXBlb2YgbGlzdGVuZXIgIT09ICdmdW5jdGlvbicpXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJsaXN0ZW5lclwiIGFyZ3VtZW50IG11c3QgYmUgYSBmdW5jdGlvbicpO1xuXG4gIGV2ZW50cyA9IHRhcmdldC5fZXZlbnRzO1xuICBpZiAoIWV2ZW50cykge1xuICAgIGV2ZW50cyA9IHRhcmdldC5fZXZlbnRzID0gb2JqZWN0Q3JlYXRlKG51bGwpO1xuICAgIHRhcmdldC5fZXZlbnRzQ291bnQgPSAwO1xuICB9IGVsc2Uge1xuICAgIC8vIFRvIGF2b2lkIHJlY3Vyc2lvbiBpbiB0aGUgY2FzZSB0aGF0IHR5cGUgPT09IFwibmV3TGlzdGVuZXJcIiEgQmVmb3JlXG4gICAgLy8gYWRkaW5nIGl0IHRvIHRoZSBsaXN0ZW5lcnMsIGZpcnN0IGVtaXQgXCJuZXdMaXN0ZW5lclwiLlxuICAgIGlmIChldmVudHMubmV3TGlzdGVuZXIpIHtcbiAgICAgIHRhcmdldC5lbWl0KCduZXdMaXN0ZW5lcicsIHR5cGUsXG4gICAgICAgICAgbGlzdGVuZXIubGlzdGVuZXIgPyBsaXN0ZW5lci5saXN0ZW5lciA6IGxpc3RlbmVyKTtcblxuICAgICAgLy8gUmUtYXNzaWduIGBldmVudHNgIGJlY2F1c2UgYSBuZXdMaXN0ZW5lciBoYW5kbGVyIGNvdWxkIGhhdmUgY2F1c2VkIHRoZVxuICAgICAgLy8gdGhpcy5fZXZlbnRzIHRvIGJlIGFzc2lnbmVkIHRvIGEgbmV3IG9iamVjdFxuICAgICAgZXZlbnRzID0gdGFyZ2V0Ll9ldmVudHM7XG4gICAgfVxuICAgIGV4aXN0aW5nID0gZXZlbnRzW3R5cGVdO1xuICB9XG5cbiAgaWYgKCFleGlzdGluZykge1xuICAgIC8vIE9wdGltaXplIHRoZSBjYXNlIG9mIG9uZSBsaXN0ZW5lci4gRG9uJ3QgbmVlZCB0aGUgZXh0cmEgYXJyYXkgb2JqZWN0LlxuICAgIGV4aXN0aW5nID0gZXZlbnRzW3R5cGVdID0gbGlzdGVuZXI7XG4gICAgKyt0YXJnZXQuX2V2ZW50c0NvdW50O1xuICB9IGVsc2Uge1xuICAgIGlmICh0eXBlb2YgZXhpc3RpbmcgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIC8vIEFkZGluZyB0aGUgc2Vjb25kIGVsZW1lbnQsIG5lZWQgdG8gY2hhbmdlIHRvIGFycmF5LlxuICAgICAgZXhpc3RpbmcgPSBldmVudHNbdHlwZV0gPVxuICAgICAgICAgIHByZXBlbmQgPyBbbGlzdGVuZXIsIGV4aXN0aW5nXSA6IFtleGlzdGluZywgbGlzdGVuZXJdO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBJZiB3ZSd2ZSBhbHJlYWR5IGdvdCBhbiBhcnJheSwganVzdCBhcHBlbmQuXG4gICAgICBpZiAocHJlcGVuZCkge1xuICAgICAgICBleGlzdGluZy51bnNoaWZ0KGxpc3RlbmVyKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGV4aXN0aW5nLnB1c2gobGlzdGVuZXIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIENoZWNrIGZvciBsaXN0ZW5lciBsZWFrXG4gICAgaWYgKCFleGlzdGluZy53YXJuZWQpIHtcbiAgICAgIG0gPSAkZ2V0TWF4TGlzdGVuZXJzKHRhcmdldCk7XG4gICAgICBpZiAobSAmJiBtID4gMCAmJiBleGlzdGluZy5sZW5ndGggPiBtKSB7XG4gICAgICAgIGV4aXN0aW5nLndhcm5lZCA9IHRydWU7XG4gICAgICAgIHZhciB3ID0gbmV3IEVycm9yKCdQb3NzaWJsZSBFdmVudEVtaXR0ZXIgbWVtb3J5IGxlYWsgZGV0ZWN0ZWQuICcgK1xuICAgICAgICAgICAgZXhpc3RpbmcubGVuZ3RoICsgJyBcIicgKyBTdHJpbmcodHlwZSkgKyAnXCIgbGlzdGVuZXJzICcgK1xuICAgICAgICAgICAgJ2FkZGVkLiBVc2UgZW1pdHRlci5zZXRNYXhMaXN0ZW5lcnMoKSB0byAnICtcbiAgICAgICAgICAgICdpbmNyZWFzZSBsaW1pdC4nKTtcbiAgICAgICAgdy5uYW1lID0gJ01heExpc3RlbmVyc0V4Y2VlZGVkV2FybmluZyc7XG4gICAgICAgIHcuZW1pdHRlciA9IHRhcmdldDtcbiAgICAgICAgdy50eXBlID0gdHlwZTtcbiAgICAgICAgdy5jb3VudCA9IGV4aXN0aW5nLmxlbmd0aDtcbiAgICAgICAgaWYgKHR5cGVvZiBjb25zb2xlID09PSAnb2JqZWN0JyAmJiBjb25zb2xlLndhcm4pIHtcbiAgICAgICAgICBjb25zb2xlLndhcm4oJyVzOiAlcycsIHcubmFtZSwgdy5tZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuYWRkTGlzdGVuZXIgPSBmdW5jdGlvbiBhZGRMaXN0ZW5lcih0eXBlLCBsaXN0ZW5lcikge1xuICByZXR1cm4gX2FkZExpc3RlbmVyKHRoaXMsIHR5cGUsIGxpc3RlbmVyLCBmYWxzZSk7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLm9uID0gRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5hZGRMaXN0ZW5lcjtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5wcmVwZW5kTGlzdGVuZXIgPVxuICAgIGZ1bmN0aW9uIHByZXBlbmRMaXN0ZW5lcih0eXBlLCBsaXN0ZW5lcikge1xuICAgICAgcmV0dXJuIF9hZGRMaXN0ZW5lcih0aGlzLCB0eXBlLCBsaXN0ZW5lciwgdHJ1ZSk7XG4gICAgfTtcblxuZnVuY3Rpb24gb25jZVdyYXBwZXIoKSB7XG4gIGlmICghdGhpcy5maXJlZCkge1xuICAgIHRoaXMudGFyZ2V0LnJlbW92ZUxpc3RlbmVyKHRoaXMudHlwZSwgdGhpcy53cmFwRm4pO1xuICAgIHRoaXMuZmlyZWQgPSB0cnVlO1xuICAgIHN3aXRjaCAoYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgY2FzZSAwOlxuICAgICAgICByZXR1cm4gdGhpcy5saXN0ZW5lci5jYWxsKHRoaXMudGFyZ2V0KTtcbiAgICAgIGNhc2UgMTpcbiAgICAgICAgcmV0dXJuIHRoaXMubGlzdGVuZXIuY2FsbCh0aGlzLnRhcmdldCwgYXJndW1lbnRzWzBdKTtcbiAgICAgIGNhc2UgMjpcbiAgICAgICAgcmV0dXJuIHRoaXMubGlzdGVuZXIuY2FsbCh0aGlzLnRhcmdldCwgYXJndW1lbnRzWzBdLCBhcmd1bWVudHNbMV0pO1xuICAgICAgY2FzZSAzOlxuICAgICAgICByZXR1cm4gdGhpcy5saXN0ZW5lci5jYWxsKHRoaXMudGFyZ2V0LCBhcmd1bWVudHNbMF0sIGFyZ3VtZW50c1sxXSxcbiAgICAgICAgICAgIGFyZ3VtZW50c1syXSk7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgKytpKVxuICAgICAgICAgIGFyZ3NbaV0gPSBhcmd1bWVudHNbaV07XG4gICAgICAgIHRoaXMubGlzdGVuZXIuYXBwbHkodGhpcy50YXJnZXQsIGFyZ3MpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBfb25jZVdyYXAodGFyZ2V0LCB0eXBlLCBsaXN0ZW5lcikge1xuICB2YXIgc3RhdGUgPSB7IGZpcmVkOiBmYWxzZSwgd3JhcEZuOiB1bmRlZmluZWQsIHRhcmdldDogdGFyZ2V0LCB0eXBlOiB0eXBlLCBsaXN0ZW5lcjogbGlzdGVuZXIgfTtcbiAgdmFyIHdyYXBwZWQgPSBiaW5kLmNhbGwob25jZVdyYXBwZXIsIHN0YXRlKTtcbiAgd3JhcHBlZC5saXN0ZW5lciA9IGxpc3RlbmVyO1xuICBzdGF0ZS53cmFwRm4gPSB3cmFwcGVkO1xuICByZXR1cm4gd3JhcHBlZDtcbn1cblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vbmNlID0gZnVuY3Rpb24gb25jZSh0eXBlLCBsaXN0ZW5lcikge1xuICBpZiAodHlwZW9mIGxpc3RlbmVyICE9PSAnZnVuY3Rpb24nKVxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1wibGlzdGVuZXJcIiBhcmd1bWVudCBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcbiAgdGhpcy5vbih0eXBlLCBfb25jZVdyYXAodGhpcywgdHlwZSwgbGlzdGVuZXIpKTtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnByZXBlbmRPbmNlTGlzdGVuZXIgPVxuICAgIGZ1bmN0aW9uIHByZXBlbmRPbmNlTGlzdGVuZXIodHlwZSwgbGlzdGVuZXIpIHtcbiAgICAgIGlmICh0eXBlb2YgbGlzdGVuZXIgIT09ICdmdW5jdGlvbicpXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1wibGlzdGVuZXJcIiBhcmd1bWVudCBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcbiAgICAgIHRoaXMucHJlcGVuZExpc3RlbmVyKHR5cGUsIF9vbmNlV3JhcCh0aGlzLCB0eXBlLCBsaXN0ZW5lcikpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcblxuLy8gRW1pdHMgYSAncmVtb3ZlTGlzdGVuZXInIGV2ZW50IGlmIGFuZCBvbmx5IGlmIHRoZSBsaXN0ZW5lciB3YXMgcmVtb3ZlZC5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUucmVtb3ZlTGlzdGVuZXIgPVxuICAgIGZ1bmN0aW9uIHJlbW92ZUxpc3RlbmVyKHR5cGUsIGxpc3RlbmVyKSB7XG4gICAgICB2YXIgbGlzdCwgZXZlbnRzLCBwb3NpdGlvbiwgaSwgb3JpZ2luYWxMaXN0ZW5lcjtcblxuICAgICAgaWYgKHR5cGVvZiBsaXN0ZW5lciAhPT0gJ2Z1bmN0aW9uJylcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJsaXN0ZW5lclwiIGFyZ3VtZW50IG11c3QgYmUgYSBmdW5jdGlvbicpO1xuXG4gICAgICBldmVudHMgPSB0aGlzLl9ldmVudHM7XG4gICAgICBpZiAoIWV2ZW50cylcbiAgICAgICAgcmV0dXJuIHRoaXM7XG5cbiAgICAgIGxpc3QgPSBldmVudHNbdHlwZV07XG4gICAgICBpZiAoIWxpc3QpXG4gICAgICAgIHJldHVybiB0aGlzO1xuXG4gICAgICBpZiAobGlzdCA9PT0gbGlzdGVuZXIgfHwgbGlzdC5saXN0ZW5lciA9PT0gbGlzdGVuZXIpIHtcbiAgICAgICAgaWYgKC0tdGhpcy5fZXZlbnRzQ291bnQgPT09IDApXG4gICAgICAgICAgdGhpcy5fZXZlbnRzID0gb2JqZWN0Q3JlYXRlKG51bGwpO1xuICAgICAgICBlbHNlIHtcbiAgICAgICAgICBkZWxldGUgZXZlbnRzW3R5cGVdO1xuICAgICAgICAgIGlmIChldmVudHMucmVtb3ZlTGlzdGVuZXIpXG4gICAgICAgICAgICB0aGlzLmVtaXQoJ3JlbW92ZUxpc3RlbmVyJywgdHlwZSwgbGlzdC5saXN0ZW5lciB8fCBsaXN0ZW5lcik7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGxpc3QgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcG9zaXRpb24gPSAtMTtcblxuICAgICAgICBmb3IgKGkgPSBsaXN0Lmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgICAgaWYgKGxpc3RbaV0gPT09IGxpc3RlbmVyIHx8IGxpc3RbaV0ubGlzdGVuZXIgPT09IGxpc3RlbmVyKSB7XG4gICAgICAgICAgICBvcmlnaW5hbExpc3RlbmVyID0gbGlzdFtpXS5saXN0ZW5lcjtcbiAgICAgICAgICAgIHBvc2l0aW9uID0gaTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChwb3NpdGlvbiA8IDApXG4gICAgICAgICAgcmV0dXJuIHRoaXM7XG5cbiAgICAgICAgaWYgKHBvc2l0aW9uID09PSAwKVxuICAgICAgICAgIGxpc3Quc2hpZnQoKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgIHNwbGljZU9uZShsaXN0LCBwb3NpdGlvbik7XG5cbiAgICAgICAgaWYgKGxpc3QubGVuZ3RoID09PSAxKVxuICAgICAgICAgIGV2ZW50c1t0eXBlXSA9IGxpc3RbMF07XG5cbiAgICAgICAgaWYgKGV2ZW50cy5yZW1vdmVMaXN0ZW5lcilcbiAgICAgICAgICB0aGlzLmVtaXQoJ3JlbW92ZUxpc3RlbmVyJywgdHlwZSwgb3JpZ2luYWxMaXN0ZW5lciB8fCBsaXN0ZW5lcik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUucmVtb3ZlQWxsTGlzdGVuZXJzID1cbiAgICBmdW5jdGlvbiByZW1vdmVBbGxMaXN0ZW5lcnModHlwZSkge1xuICAgICAgdmFyIGxpc3RlbmVycywgZXZlbnRzLCBpO1xuXG4gICAgICBldmVudHMgPSB0aGlzLl9ldmVudHM7XG4gICAgICBpZiAoIWV2ZW50cylcbiAgICAgICAgcmV0dXJuIHRoaXM7XG5cbiAgICAgIC8vIG5vdCBsaXN0ZW5pbmcgZm9yIHJlbW92ZUxpc3RlbmVyLCBubyBuZWVkIHRvIGVtaXRcbiAgICAgIGlmICghZXZlbnRzLnJlbW92ZUxpc3RlbmVyKSB7XG4gICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgdGhpcy5fZXZlbnRzID0gb2JqZWN0Q3JlYXRlKG51bGwpO1xuICAgICAgICAgIHRoaXMuX2V2ZW50c0NvdW50ID0gMDtcbiAgICAgICAgfSBlbHNlIGlmIChldmVudHNbdHlwZV0pIHtcbiAgICAgICAgICBpZiAoLS10aGlzLl9ldmVudHNDb3VudCA9PT0gMClcbiAgICAgICAgICAgIHRoaXMuX2V2ZW50cyA9IG9iamVjdENyZWF0ZShudWxsKTtcbiAgICAgICAgICBlbHNlXG4gICAgICAgICAgICBkZWxldGUgZXZlbnRzW3R5cGVdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuXG4gICAgICAvLyBlbWl0IHJlbW92ZUxpc3RlbmVyIGZvciBhbGwgbGlzdGVuZXJzIG9uIGFsbCBldmVudHNcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHZhciBrZXlzID0gb2JqZWN0S2V5cyhldmVudHMpO1xuICAgICAgICB2YXIga2V5O1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgICAgIGtleSA9IGtleXNbaV07XG4gICAgICAgICAgaWYgKGtleSA9PT0gJ3JlbW92ZUxpc3RlbmVyJykgY29udGludWU7XG4gICAgICAgICAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoa2V5KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygncmVtb3ZlTGlzdGVuZXInKTtcbiAgICAgICAgdGhpcy5fZXZlbnRzID0gb2JqZWN0Q3JlYXRlKG51bGwpO1xuICAgICAgICB0aGlzLl9ldmVudHNDb3VudCA9IDA7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuXG4gICAgICBsaXN0ZW5lcnMgPSBldmVudHNbdHlwZV07XG5cbiAgICAgIGlmICh0eXBlb2YgbGlzdGVuZXJzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlTGlzdGVuZXIodHlwZSwgbGlzdGVuZXJzKTtcbiAgICAgIH0gZWxzZSBpZiAobGlzdGVuZXJzKSB7XG4gICAgICAgIC8vIExJRk8gb3JkZXJcbiAgICAgICAgZm9yIChpID0gbGlzdGVuZXJzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgICAgdGhpcy5yZW1vdmVMaXN0ZW5lcih0eXBlLCBsaXN0ZW5lcnNbaV0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG5cbmZ1bmN0aW9uIF9saXN0ZW5lcnModGFyZ2V0LCB0eXBlLCB1bndyYXApIHtcbiAgdmFyIGV2ZW50cyA9IHRhcmdldC5fZXZlbnRzO1xuXG4gIGlmICghZXZlbnRzKVxuICAgIHJldHVybiBbXTtcblxuICB2YXIgZXZsaXN0ZW5lciA9IGV2ZW50c1t0eXBlXTtcbiAgaWYgKCFldmxpc3RlbmVyKVxuICAgIHJldHVybiBbXTtcblxuICBpZiAodHlwZW9mIGV2bGlzdGVuZXIgPT09ICdmdW5jdGlvbicpXG4gICAgcmV0dXJuIHVud3JhcCA/IFtldmxpc3RlbmVyLmxpc3RlbmVyIHx8IGV2bGlzdGVuZXJdIDogW2V2bGlzdGVuZXJdO1xuXG4gIHJldHVybiB1bndyYXAgPyB1bndyYXBMaXN0ZW5lcnMoZXZsaXN0ZW5lcikgOiBhcnJheUNsb25lKGV2bGlzdGVuZXIsIGV2bGlzdGVuZXIubGVuZ3RoKTtcbn1cblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5saXN0ZW5lcnMgPSBmdW5jdGlvbiBsaXN0ZW5lcnModHlwZSkge1xuICByZXR1cm4gX2xpc3RlbmVycyh0aGlzLCB0eXBlLCB0cnVlKTtcbn07XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUucmF3TGlzdGVuZXJzID0gZnVuY3Rpb24gcmF3TGlzdGVuZXJzKHR5cGUpIHtcbiAgcmV0dXJuIF9saXN0ZW5lcnModGhpcywgdHlwZSwgZmFsc2UpO1xufTtcblxuRXZlbnRFbWl0dGVyLmxpc3RlbmVyQ291bnQgPSBmdW5jdGlvbihlbWl0dGVyLCB0eXBlKSB7XG4gIGlmICh0eXBlb2YgZW1pdHRlci5saXN0ZW5lckNvdW50ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGVtaXR0ZXIubGlzdGVuZXJDb3VudCh0eXBlKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbGlzdGVuZXJDb3VudC5jYWxsKGVtaXR0ZXIsIHR5cGUpO1xuICB9XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmxpc3RlbmVyQ291bnQgPSBsaXN0ZW5lckNvdW50O1xuZnVuY3Rpb24gbGlzdGVuZXJDb3VudCh0eXBlKSB7XG4gIHZhciBldmVudHMgPSB0aGlzLl9ldmVudHM7XG5cbiAgaWYgKGV2ZW50cykge1xuICAgIHZhciBldmxpc3RlbmVyID0gZXZlbnRzW3R5cGVdO1xuXG4gICAgaWYgKHR5cGVvZiBldmxpc3RlbmVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXR1cm4gMTtcbiAgICB9IGVsc2UgaWYgKGV2bGlzdGVuZXIpIHtcbiAgICAgIHJldHVybiBldmxpc3RlbmVyLmxlbmd0aDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gMDtcbn1cblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5ldmVudE5hbWVzID0gZnVuY3Rpb24gZXZlbnROYW1lcygpIHtcbiAgcmV0dXJuIHRoaXMuX2V2ZW50c0NvdW50ID4gMCA/IFJlZmxlY3Qub3duS2V5cyh0aGlzLl9ldmVudHMpIDogW107XG59O1xuXG4vLyBBYm91dCAxLjV4IGZhc3RlciB0aGFuIHRoZSB0d28tYXJnIHZlcnNpb24gb2YgQXJyYXkjc3BsaWNlKCkuXG5mdW5jdGlvbiBzcGxpY2VPbmUobGlzdCwgaW5kZXgpIHtcbiAgZm9yICh2YXIgaSA9IGluZGV4LCBrID0gaSArIDEsIG4gPSBsaXN0Lmxlbmd0aDsgayA8IG47IGkgKz0gMSwgayArPSAxKVxuICAgIGxpc3RbaV0gPSBsaXN0W2tdO1xuICBsaXN0LnBvcCgpO1xufVxuXG5mdW5jdGlvbiBhcnJheUNsb25lKGFyciwgbikge1xuICB2YXIgY29weSA9IG5ldyBBcnJheShuKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBuOyArK2kpXG4gICAgY29weVtpXSA9IGFycltpXTtcbiAgcmV0dXJuIGNvcHk7XG59XG5cbmZ1bmN0aW9uIHVud3JhcExpc3RlbmVycyhhcnIpIHtcbiAgdmFyIHJldCA9IG5ldyBBcnJheShhcnIubGVuZ3RoKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXQubGVuZ3RoOyArK2kpIHtcbiAgICByZXRbaV0gPSBhcnJbaV0ubGlzdGVuZXIgfHwgYXJyW2ldO1xuICB9XG4gIHJldHVybiByZXQ7XG59XG5cbmZ1bmN0aW9uIG9iamVjdENyZWF0ZVBvbHlmaWxsKHByb3RvKSB7XG4gIHZhciBGID0gZnVuY3Rpb24oKSB7fTtcbiAgRi5wcm90b3R5cGUgPSBwcm90bztcbiAgcmV0dXJuIG5ldyBGO1xufVxuZnVuY3Rpb24gb2JqZWN0S2V5c1BvbHlmaWxsKG9iaikge1xuICB2YXIga2V5cyA9IFtdO1xuICBmb3IgKHZhciBrIGluIG9iaikgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGspKSB7XG4gICAga2V5cy5wdXNoKGspO1xuICB9XG4gIHJldHVybiBrO1xufVxuZnVuY3Rpb24gZnVuY3Rpb25CaW5kUG9seWZpbGwoY29udGV4dCkge1xuICB2YXIgZm4gPSB0aGlzO1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBmbi5hcHBseShjb250ZXh0LCBhcmd1bWVudHMpO1xuICB9O1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgY29uc3RhbnRzID0gcmVxdWlyZSgnLi91dGlsL2NvbnN0YW50cycpLFxuICAgIExvZ2dpbmcgICA9IHJlcXVpcmUoJy4vbWl4aW5zL2xvZ2dpbmcnKTtcblxudmFyIEZheWUgPSB7XG4gIFZFUlNJT046ICAgIGNvbnN0YW50cy5WRVJTSU9OLFxuXG4gIENsaWVudDogICAgIHJlcXVpcmUoJy4vcHJvdG9jb2wvY2xpZW50JyksXG4gIFNjaGVkdWxlcjogIHJlcXVpcmUoJy4vcHJvdG9jb2wvc2NoZWR1bGVyJylcbn07XG5cbkxvZ2dpbmcud3JhcHBlciA9IEZheWU7XG5cbm1vZHVsZS5leHBvcnRzID0gRmF5ZTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIFByb21pc2UgICA9IHJlcXVpcmUoJy4uL3V0aWwvcHJvbWlzZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgdGhlbjogZnVuY3Rpb24oY2FsbGJhY2ssIGVycmJhY2spIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgaWYgKCF0aGlzLl9wcm9taXNlKVxuICAgICAgdGhpcy5fcHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBzZWxmLl9yZXNvbHZlID0gcmVzb2x2ZTtcbiAgICAgICAgc2VsZi5fcmVqZWN0ICA9IHJlamVjdDtcbiAgICAgIH0pO1xuXG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApXG4gICAgICByZXR1cm4gdGhpcy5fcHJvbWlzZTtcbiAgICBlbHNlXG4gICAgICByZXR1cm4gdGhpcy5fcHJvbWlzZS50aGVuKGNhbGxiYWNrLCBlcnJiYWNrKTtcbiAgfSxcblxuICBjYWxsYmFjazogZnVuY3Rpb24oY2FsbGJhY2ssIGNvbnRleHQpIHtcbiAgICByZXR1cm4gdGhpcy50aGVuKGZ1bmN0aW9uKHZhbHVlKSB7IGNhbGxiYWNrLmNhbGwoY29udGV4dCwgdmFsdWUpIH0pO1xuICB9LFxuXG4gIGVycmJhY2s6IGZ1bmN0aW9uKGNhbGxiYWNrLCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIHRoaXMudGhlbihudWxsLCBmdW5jdGlvbihyZWFzb24pIHsgY2FsbGJhY2suY2FsbChjb250ZXh0LCByZWFzb24pIH0pO1xuICB9LFxuXG4gIHRpbWVvdXQ6IGZ1bmN0aW9uKHNlY29uZHMsIG1lc3NhZ2UpIHtcbiAgICB0aGlzLnRoZW4oKTtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgdGhpcy5fdGltZXIgPSBnbG9iYWwuc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgIHNlbGYuX3JlamVjdChtZXNzYWdlKTtcbiAgICB9LCBzZWNvbmRzICogMTAwMCk7XG4gIH0sXG5cbiAgc2V0RGVmZXJyZWRTdGF0dXM6IGZ1bmN0aW9uKHN0YXR1cywgdmFsdWUpIHtcbiAgICBpZiAodGhpcy5fdGltZXIpIGdsb2JhbC5jbGVhclRpbWVvdXQodGhpcy5fdGltZXIpO1xuXG4gICAgdGhpcy50aGVuKCk7XG5cbiAgICBpZiAoc3RhdHVzID09PSAnc3VjY2VlZGVkJylcbiAgICAgIHRoaXMuX3Jlc29sdmUodmFsdWUpO1xuICAgIGVsc2UgaWYgKHN0YXR1cyA9PT0gJ2ZhaWxlZCcpXG4gICAgICB0aGlzLl9yZWplY3QodmFsdWUpO1xuICAgIGVsc2VcbiAgICAgIGRlbGV0ZSB0aGlzLl9wcm9taXNlO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdG9KU09OID0gcmVxdWlyZSgnLi4vdXRpbC90b19qc29uJyk7XG5cbnZhciBMb2dnaW5nID0ge1xuICBMT0dfTEVWRUxTOiB7XG4gICAgZmF0YWw6ICA0LFxuICAgIGVycm9yOiAgMyxcbiAgICB3YXJuOiAgIDIsXG4gICAgaW5mbzogICAxLFxuICAgIGRlYnVnOiAgMFxuICB9LFxuXG4gIHdyaXRlTG9nOiBmdW5jdGlvbihtZXNzYWdlQXJncywgbGV2ZWwpIHtcbiAgICB2YXIgbG9nZ2VyID0gTG9nZ2luZy5sb2dnZXIgfHwgKExvZ2dpbmcud3JhcHBlciB8fCBMb2dnaW5nKS5sb2dnZXI7XG4gICAgaWYgKCFsb2dnZXIpIHJldHVybjtcblxuICAgIHZhciBhcmdzICAgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuYXBwbHkobWVzc2FnZUFyZ3MpLFxuICAgICAgICBiYW5uZXIgPSAnW0ZheWUnLFxuICAgICAgICBrbGFzcyAgPSB0aGlzLmNsYXNzTmFtZSxcblxuICAgICAgICBtZXNzYWdlID0gYXJncy5zaGlmdCgpLnJlcGxhY2UoL1xcPy9nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIHRvSlNPTihhcmdzLnNoaWZ0KCkpO1xuICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gJ1tPYmplY3RdJztcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgaWYgKGtsYXNzKSBiYW5uZXIgKz0gJy4nICsga2xhc3M7XG4gICAgYmFubmVyICs9ICddICc7XG5cbiAgICBpZiAodHlwZW9mIGxvZ2dlcltsZXZlbF0gPT09ICdmdW5jdGlvbicpXG4gICAgICBsb2dnZXJbbGV2ZWxdKGJhbm5lciArIG1lc3NhZ2UpO1xuICAgIGVsc2UgaWYgKHR5cGVvZiBsb2dnZXIgPT09ICdmdW5jdGlvbicpXG4gICAgICBsb2dnZXIoYmFubmVyICsgbWVzc2FnZSk7XG4gIH1cbn07XG5cbmZvciAodmFyIGtleSBpbiBMb2dnaW5nLkxPR19MRVZFTFMpXG4gIChmdW5jdGlvbihsZXZlbCkge1xuICAgIExvZ2dpbmdbbGV2ZWxdID0gZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLndyaXRlTG9nKGFyZ3VtZW50cywgbGV2ZWwpO1xuICAgIH07XG4gIH0pKGtleSk7XG5cbm1vZHVsZS5leHBvcnRzID0gTG9nZ2luZztcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGV4dGVuZCAgICAgICA9IHJlcXVpcmUoJy4uL3V0aWwvZXh0ZW5kJyksXG4gICAgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnLi4vdXRpbC9ldmVudF9lbWl0dGVyJyk7XG5cbnZhciBQdWJsaXNoZXIgPSB7XG4gIGNvdW50TGlzdGVuZXJzOiBmdW5jdGlvbihldmVudFR5cGUpIHtcbiAgICByZXR1cm4gdGhpcy5saXN0ZW5lcnMoZXZlbnRUeXBlKS5sZW5ndGg7XG4gIH0sXG5cbiAgYmluZDogZnVuY3Rpb24oZXZlbnRUeXBlLCBsaXN0ZW5lciwgY29udGV4dCkge1xuICAgIHZhciBzbGljZSAgID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLFxuICAgICAgICBoYW5kbGVyID0gZnVuY3Rpb24oKSB7IGxpc3RlbmVyLmFwcGx5KGNvbnRleHQsIHNsaWNlLmNhbGwoYXJndW1lbnRzKSkgfTtcblxuICAgIHRoaXMuX2xpc3RlbmVycyA9IHRoaXMuX2xpc3RlbmVycyB8fCBbXTtcbiAgICB0aGlzLl9saXN0ZW5lcnMucHVzaChbZXZlbnRUeXBlLCBsaXN0ZW5lciwgY29udGV4dCwgaGFuZGxlcl0pO1xuICAgIHJldHVybiB0aGlzLm9uKGV2ZW50VHlwZSwgaGFuZGxlcik7XG4gIH0sXG5cbiAgdW5iaW5kOiBmdW5jdGlvbihldmVudFR5cGUsIGxpc3RlbmVyLCBjb250ZXh0KSB7XG4gICAgdGhpcy5fbGlzdGVuZXJzID0gdGhpcy5fbGlzdGVuZXJzIHx8IFtdO1xuICAgIHZhciBuID0gdGhpcy5fbGlzdGVuZXJzLmxlbmd0aCwgdHVwbGU7XG5cbiAgICB3aGlsZSAobi0tKSB7XG4gICAgICB0dXBsZSA9IHRoaXMuX2xpc3RlbmVyc1tuXTtcbiAgICAgIGlmICh0dXBsZVswXSAhPT0gZXZlbnRUeXBlKSBjb250aW51ZTtcbiAgICAgIGlmIChsaXN0ZW5lciAmJiAodHVwbGVbMV0gIT09IGxpc3RlbmVyIHx8IHR1cGxlWzJdICE9PSBjb250ZXh0KSkgY29udGludWU7XG4gICAgICB0aGlzLl9saXN0ZW5lcnMuc3BsaWNlKG4sIDEpO1xuICAgICAgdGhpcy5yZW1vdmVMaXN0ZW5lcihldmVudFR5cGUsIHR1cGxlWzNdKTtcbiAgICB9XG4gIH1cbn07XG5cbmV4dGVuZChQdWJsaXNoZXIsIEV2ZW50RW1pdHRlci5wcm90b3R5cGUpO1xuUHVibGlzaGVyLnRyaWdnZXIgPSBQdWJsaXNoZXIuZW1pdDtcblxubW9kdWxlLmV4cG9ydHMgPSBQdWJsaXNoZXI7XG4iLCIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBhZGRUaW1lb3V0OiBmdW5jdGlvbihuYW1lLCBkZWxheSwgY2FsbGJhY2ssIGNvbnRleHQpIHtcbiAgICB0aGlzLl90aW1lb3V0cyA9IHRoaXMuX3RpbWVvdXRzIHx8IHt9O1xuICAgIGlmICh0aGlzLl90aW1lb3V0cy5oYXNPd25Qcm9wZXJ0eShuYW1lKSkgcmV0dXJuO1xuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICB0aGlzLl90aW1lb3V0c1tuYW1lXSA9IGdsb2JhbC5zZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgZGVsZXRlIHNlbGYuX3RpbWVvdXRzW25hbWVdO1xuICAgICAgY2FsbGJhY2suY2FsbChjb250ZXh0KTtcbiAgICB9LCAxMDAwICogZGVsYXkpO1xuICB9LFxuXG4gIHJlbW92ZVRpbWVvdXQ6IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICB0aGlzLl90aW1lb3V0cyA9IHRoaXMuX3RpbWVvdXRzIHx8IHt9O1xuICAgIHZhciB0aW1lb3V0ID0gdGhpcy5fdGltZW91dHNbbmFtZV07XG4gICAgaWYgKCF0aW1lb3V0KSByZXR1cm47XG4gICAgZ2xvYmFsLmNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICBkZWxldGUgdGhpcy5fdGltZW91dHNbbmFtZV07XG4gIH0sXG5cbiAgcmVtb3ZlQWxsVGltZW91dHM6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3RpbWVvdXRzID0gdGhpcy5fdGltZW91dHMgfHwge307XG4gICAgZm9yICh2YXIgbmFtZSBpbiB0aGlzLl90aW1lb3V0cykgdGhpcy5yZW1vdmVUaW1lb3V0KG5hbWUpO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgQ2xhc3MgICAgID0gcmVxdWlyZSgnLi4vdXRpbC9jbGFzcycpLFxuICAgIGV4dGVuZCAgICA9IHJlcXVpcmUoJy4uL3V0aWwvZXh0ZW5kJyksXG4gICAgUHVibGlzaGVyID0gcmVxdWlyZSgnLi4vbWl4aW5zL3B1Ymxpc2hlcicpLFxuICAgIEdyYW1tYXIgICA9IHJlcXVpcmUoJy4vZ3JhbW1hcicpO1xuXG52YXIgQ2hhbm5lbCA9IENsYXNzKHtcbiAgaW5pdGlhbGl6ZTogZnVuY3Rpb24obmFtZSkge1xuICAgIHRoaXMuaWQgPSB0aGlzLm5hbWUgPSBuYW1lO1xuICB9LFxuXG4gIHB1c2g6IGZ1bmN0aW9uKG1lc3NhZ2UpIHtcbiAgICB0aGlzLnRyaWdnZXIoJ21lc3NhZ2UnLCBtZXNzYWdlKTtcbiAgfSxcblxuICBpc1VudXNlZDogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuY291bnRMaXN0ZW5lcnMoJ21lc3NhZ2UnKSA9PT0gMDtcbiAgfVxufSk7XG5cbmV4dGVuZChDaGFubmVsLnByb3RvdHlwZSwgUHVibGlzaGVyKTtcblxuZXh0ZW5kKENoYW5uZWwsIHtcbiAgSEFORFNIQUtFOiAgICAnL21ldGEvaGFuZHNoYWtlJyxcbiAgQ09OTkVDVDogICAgICAnL21ldGEvY29ubmVjdCcsXG4gIFNVQlNDUklCRTogICAgJy9tZXRhL3N1YnNjcmliZScsXG4gIFVOU1VCU0NSSUJFOiAgJy9tZXRhL3Vuc3Vic2NyaWJlJyxcbiAgRElTQ09OTkVDVDogICAnL21ldGEvZGlzY29ubmVjdCcsXG5cbiAgTUVUQTogICAgICAgICAnbWV0YScsXG4gIFNFUlZJQ0U6ICAgICAgJ3NlcnZpY2UnLFxuXG4gIGV4cGFuZDogZnVuY3Rpb24obmFtZSkge1xuICAgIHZhciBzZWdtZW50cyA9IHRoaXMucGFyc2UobmFtZSksXG4gICAgICAgIGNoYW5uZWxzID0gWycvKionLCBuYW1lXTtcblxuICAgIHZhciBjb3B5ID0gc2VnbWVudHMuc2xpY2UoKTtcbiAgICBjb3B5W2NvcHkubGVuZ3RoIC0gMV0gPSAnKic7XG4gICAgY2hhbm5lbHMucHVzaCh0aGlzLnVucGFyc2UoY29weSkpO1xuXG4gICAgZm9yICh2YXIgaSA9IDEsIG4gPSBzZWdtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgIGNvcHkgPSBzZWdtZW50cy5zbGljZSgwLCBpKTtcbiAgICAgIGNvcHkucHVzaCgnKionKTtcbiAgICAgIGNoYW5uZWxzLnB1c2godGhpcy51bnBhcnNlKGNvcHkpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY2hhbm5lbHM7XG4gIH0sXG5cbiAgaXNWYWxpZDogZnVuY3Rpb24obmFtZSkge1xuICAgIHJldHVybiBHcmFtbWFyLkNIQU5ORUxfTkFNRS50ZXN0KG5hbWUpIHx8XG4gICAgICAgICAgIEdyYW1tYXIuQ0hBTk5FTF9QQVRURVJOLnRlc3QobmFtZSk7XG4gIH0sXG5cbiAgcGFyc2U6IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICBpZiAoIXRoaXMuaXNWYWxpZChuYW1lKSkgcmV0dXJuIG51bGw7XG4gICAgcmV0dXJuIG5hbWUuc3BsaXQoJy8nKS5zbGljZSgxKTtcbiAgfSxcblxuICB1bnBhcnNlOiBmdW5jdGlvbihzZWdtZW50cykge1xuICAgIHJldHVybiAnLycgKyBzZWdtZW50cy5qb2luKCcvJyk7XG4gIH0sXG5cbiAgaXNNZXRhOiBmdW5jdGlvbihuYW1lKSB7XG4gICAgdmFyIHNlZ21lbnRzID0gdGhpcy5wYXJzZShuYW1lKTtcbiAgICByZXR1cm4gc2VnbWVudHMgPyAoc2VnbWVudHNbMF0gPT09IHRoaXMuTUVUQSkgOiBudWxsO1xuICB9LFxuXG4gIGlzU2VydmljZTogZnVuY3Rpb24obmFtZSkge1xuICAgIHZhciBzZWdtZW50cyA9IHRoaXMucGFyc2UobmFtZSk7XG4gICAgcmV0dXJuIHNlZ21lbnRzID8gKHNlZ21lbnRzWzBdID09PSB0aGlzLlNFUlZJQ0UpIDogbnVsbDtcbiAgfSxcblxuICBpc1N1YnNjcmliYWJsZTogZnVuY3Rpb24obmFtZSkge1xuICAgIGlmICghdGhpcy5pc1ZhbGlkKG5hbWUpKSByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4gIXRoaXMuaXNNZXRhKG5hbWUpICYmICF0aGlzLmlzU2VydmljZShuYW1lKTtcbiAgfSxcblxuICBTZXQ6IENsYXNzKHtcbiAgICBpbml0aWFsaXplOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuX2NoYW5uZWxzID0ge307XG4gICAgfSxcblxuICAgIGdldEtleXM6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGtleXMgPSBbXTtcbiAgICAgIGZvciAodmFyIGtleSBpbiB0aGlzLl9jaGFubmVscykga2V5cy5wdXNoKGtleSk7XG4gICAgICByZXR1cm4ga2V5cztcbiAgICB9LFxuXG4gICAgcmVtb3ZlOiBmdW5jdGlvbihuYW1lKSB7XG4gICAgICBkZWxldGUgdGhpcy5fY2hhbm5lbHNbbmFtZV07XG4gICAgfSxcblxuICAgIGhhc1N1YnNjcmlwdGlvbjogZnVuY3Rpb24obmFtZSkge1xuICAgICAgcmV0dXJuIHRoaXMuX2NoYW5uZWxzLmhhc093blByb3BlcnR5KG5hbWUpO1xuICAgIH0sXG5cbiAgICBzdWJzY3JpYmU6IGZ1bmN0aW9uKG5hbWVzLCBzdWJzY3JpcHRpb24pIHtcbiAgICAgIHZhciBuYW1lO1xuICAgICAgZm9yICh2YXIgaSA9IDAsIG4gPSBuYW1lcy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgbmFtZSA9IG5hbWVzW2ldO1xuICAgICAgICB2YXIgY2hhbm5lbCA9IHRoaXMuX2NoYW5uZWxzW25hbWVdID0gdGhpcy5fY2hhbm5lbHNbbmFtZV0gfHwgbmV3IENoYW5uZWwobmFtZSk7XG4gICAgICAgIGNoYW5uZWwuYmluZCgnbWVzc2FnZScsIHN1YnNjcmlwdGlvbik7XG4gICAgICB9XG4gICAgfSxcblxuICAgIHVuc3Vic2NyaWJlOiBmdW5jdGlvbihuYW1lLCBzdWJzY3JpcHRpb24pIHtcbiAgICAgIHZhciBjaGFubmVsID0gdGhpcy5fY2hhbm5lbHNbbmFtZV07XG4gICAgICBpZiAoIWNoYW5uZWwpIHJldHVybiBmYWxzZTtcbiAgICAgIGNoYW5uZWwudW5iaW5kKCdtZXNzYWdlJywgc3Vic2NyaXB0aW9uKTtcblxuICAgICAgaWYgKGNoYW5uZWwuaXNVbnVzZWQoKSkge1xuICAgICAgICB0aGlzLnJlbW92ZShuYW1lKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfSxcblxuICAgIGRpc3RyaWJ1dGVNZXNzYWdlOiBmdW5jdGlvbihtZXNzYWdlKSB7XG4gICAgICB2YXIgY2hhbm5lbHMgPSBDaGFubmVsLmV4cGFuZChtZXNzYWdlLmNoYW5uZWwpO1xuXG4gICAgICBmb3IgKHZhciBpID0gMCwgbiA9IGNoYW5uZWxzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICB2YXIgY2hhbm5lbCA9IHRoaXMuX2NoYW5uZWxzW2NoYW5uZWxzW2ldXTtcbiAgICAgICAgaWYgKGNoYW5uZWwpIGNoYW5uZWwudHJpZ2dlcignbWVzc2FnZScsIG1lc3NhZ2UpO1xuICAgICAgfVxuICAgIH1cbiAgfSlcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENoYW5uZWw7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBhc2FwICAgICAgICAgICAgPSByZXF1aXJlKCdhc2FwJyksXG4gICAgQ2xhc3MgICAgICAgICAgID0gcmVxdWlyZSgnLi4vdXRpbC9jbGFzcycpLFxuICAgIFByb21pc2UgICAgICAgICA9IHJlcXVpcmUoJy4uL3V0aWwvcHJvbWlzZScpLFxuICAgIFVSSSAgICAgICAgICAgICA9IHJlcXVpcmUoJy4uL3V0aWwvdXJpJyksXG4gICAgYXJyYXkgICAgICAgICAgID0gcmVxdWlyZSgnLi4vdXRpbC9hcnJheScpLFxuICAgIGJyb3dzZXIgICAgICAgICA9IHJlcXVpcmUoJy4uL3V0aWwvYnJvd3NlcicpLFxuICAgIGNvbnN0YW50cyAgICAgICA9IHJlcXVpcmUoJy4uL3V0aWwvY29uc3RhbnRzJyksXG4gICAgZXh0ZW5kICAgICAgICAgID0gcmVxdWlyZSgnLi4vdXRpbC9leHRlbmQnKSxcbiAgICB2YWxpZGF0ZU9wdGlvbnMgPSByZXF1aXJlKCcuLi91dGlsL3ZhbGlkYXRlX29wdGlvbnMnKSxcbiAgICBEZWZlcnJhYmxlICAgICAgPSByZXF1aXJlKCcuLi9taXhpbnMvZGVmZXJyYWJsZScpLFxuICAgIExvZ2dpbmcgICAgICAgICA9IHJlcXVpcmUoJy4uL21peGlucy9sb2dnaW5nJyksXG4gICAgUHVibGlzaGVyICAgICAgID0gcmVxdWlyZSgnLi4vbWl4aW5zL3B1Ymxpc2hlcicpLFxuICAgIENoYW5uZWwgICAgICAgICA9IHJlcXVpcmUoJy4vY2hhbm5lbCcpLFxuICAgIERpc3BhdGNoZXIgICAgICA9IHJlcXVpcmUoJy4vZGlzcGF0Y2hlcicpLFxuICAgIEVycm9yICAgICAgICAgICA9IHJlcXVpcmUoJy4vZXJyb3InKSxcbiAgICBFeHRlbnNpYmxlICAgICAgPSByZXF1aXJlKCcuL2V4dGVuc2libGUnKSxcbiAgICBQdWJsaWNhdGlvbiAgICAgPSByZXF1aXJlKCcuL3B1YmxpY2F0aW9uJyksXG4gICAgU3Vic2NyaXB0aW9uICAgID0gcmVxdWlyZSgnLi9zdWJzY3JpcHRpb24nKTtcblxudmFyIENsaWVudCA9IENsYXNzKHsgY2xhc3NOYW1lOiAnQ2xpZW50JyxcbiAgVU5DT05ORUNURUQ6ICAgICAgICAxLFxuICBDT05ORUNUSU5HOiAgICAgICAgIDIsXG4gIENPTk5FQ1RFRDogICAgICAgICAgMyxcbiAgRElTQ09OTkVDVEVEOiAgICAgICA0LFxuXG4gIEhBTkRTSEFLRTogICAgICAgICAgJ2hhbmRzaGFrZScsXG4gIFJFVFJZOiAgICAgICAgICAgICAgJ3JldHJ5JyxcbiAgTk9ORTogICAgICAgICAgICAgICAnbm9uZScsXG5cbiAgQ09OTkVDVElPTl9USU1FT1VUOiA2MCxcblxuICBERUZBVUxUX0VORFBPSU5UOiAgICcvYmF5ZXV4JyxcbiAgSU5URVJWQUw6ICAgICAgICAgICAwLFxuXG4gIGluaXRpYWxpemU6IGZ1bmN0aW9uKGVuZHBvaW50LCBvcHRpb25zKSB7XG4gICAgdGhpcy5pbmZvKCdOZXcgY2xpZW50IGNyZWF0ZWQgZm9yID8nLCBlbmRwb2ludCk7XG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiAgICB2YWxpZGF0ZU9wdGlvbnMob3B0aW9ucywgWydpbnRlcnZhbCcsICd0aW1lb3V0JywgJ2VuZHBvaW50cycsICdwcm94eScsICdyZXRyeScsICdzY2hlZHVsZXInLCAnd2Vic29ja2V0RXh0ZW5zaW9ucycsICd0bHMnLCAnY2EnXSk7XG5cbiAgICB0aGlzLl9jaGFubmVscyAgID0gbmV3IENoYW5uZWwuU2V0KCk7XG4gICAgdGhpcy5fZGlzcGF0Y2hlciA9IERpc3BhdGNoZXIuY3JlYXRlKHRoaXMsIGVuZHBvaW50IHx8IHRoaXMuREVGQVVMVF9FTkRQT0lOVCwgb3B0aW9ucyk7XG5cbiAgICB0aGlzLl9tZXNzYWdlSWQgPSAwO1xuICAgIHRoaXMuX3N0YXRlICAgICA9IHRoaXMuVU5DT05ORUNURUQ7XG5cbiAgICB0aGlzLl9yZXNwb25zZUNhbGxiYWNrcyA9IHt9O1xuXG4gICAgdGhpcy5fYWR2aWNlID0ge1xuICAgICAgcmVjb25uZWN0OiB0aGlzLlJFVFJZLFxuICAgICAgaW50ZXJ2YWw6ICAxMDAwICogKG9wdGlvbnMuaW50ZXJ2YWwgfHwgdGhpcy5JTlRFUlZBTCksXG4gICAgICB0aW1lb3V0OiAgIDEwMDAgKiAob3B0aW9ucy50aW1lb3V0ICB8fCB0aGlzLkNPTk5FQ1RJT05fVElNRU9VVClcbiAgICB9O1xuICAgIHRoaXMuX2Rpc3BhdGNoZXIudGltZW91dCA9IHRoaXMuX2FkdmljZS50aW1lb3V0IC8gMTAwMDtcblxuICAgIHRoaXMuX2Rpc3BhdGNoZXIuYmluZCgnbWVzc2FnZScsIHRoaXMuX3JlY2VpdmVNZXNzYWdlLCB0aGlzKTtcblxuICAgIGlmIChicm93c2VyLkV2ZW50ICYmIGdsb2JhbC5vbmJlZm9yZXVubG9hZCAhPT0gdW5kZWZpbmVkKVxuICAgICAgYnJvd3Nlci5FdmVudC5vbihnbG9iYWwsICdiZWZvcmV1bmxvYWQnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKGFycmF5LmluZGV4T2YodGhpcy5fZGlzcGF0Y2hlci5fZGlzYWJsZWQsICdhdXRvZGlzY29ubmVjdCcpIDwgMClcbiAgICAgICAgICB0aGlzLmRpc2Nvbm5lY3QoKTtcbiAgICAgIH0sIHRoaXMpO1xuICB9LFxuXG4gIGFkZFdlYnNvY2tldEV4dGVuc2lvbjogZnVuY3Rpb24oZXh0ZW5zaW9uKSB7XG4gICAgcmV0dXJuIHRoaXMuX2Rpc3BhdGNoZXIuYWRkV2Vic29ja2V0RXh0ZW5zaW9uKGV4dGVuc2lvbik7XG4gIH0sXG5cbiAgZGlzYWJsZTogZnVuY3Rpb24oZmVhdHVyZSkge1xuICAgIHJldHVybiB0aGlzLl9kaXNwYXRjaGVyLmRpc2FibGUoZmVhdHVyZSk7XG4gIH0sXG5cbiAgc2V0SGVhZGVyOiBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgIHJldHVybiB0aGlzLl9kaXNwYXRjaGVyLnNldEhlYWRlcihuYW1lLCB2YWx1ZSk7XG4gIH0sXG5cbiAgLy8gUmVxdWVzdFxuICAvLyBNVVNUIGluY2x1ZGU6ICAqIGNoYW5uZWxcbiAgLy8gICAgICAgICAgICAgICAgKiB2ZXJzaW9uXG4gIC8vICAgICAgICAgICAgICAgICogc3VwcG9ydGVkQ29ubmVjdGlvblR5cGVzXG4gIC8vIE1BWSBpbmNsdWRlOiAgICogbWluaW11bVZlcnNpb25cbiAgLy8gICAgICAgICAgICAgICAgKiBleHRcbiAgLy8gICAgICAgICAgICAgICAgKiBpZFxuICAvL1xuICAvLyBTdWNjZXNzIFJlc3BvbnNlICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGYWlsZWQgUmVzcG9uc2VcbiAgLy8gTVVTVCBpbmNsdWRlOiAgKiBjaGFubmVsICAgICAgICAgICAgICAgICAgICAgTVVTVCBpbmNsdWRlOiAgKiBjaGFubmVsXG4gIC8vICAgICAgICAgICAgICAgICogdmVyc2lvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICogc3VjY2Vzc2Z1bFxuICAvLyAgICAgICAgICAgICAgICAqIHN1cHBvcnRlZENvbm5lY3Rpb25UeXBlcyAgICAgICAgICAgICAgICAgICAqIGVycm9yXG4gIC8vICAgICAgICAgICAgICAgICogY2xpZW50SWQgICAgICAgICAgICAgICAgICAgIE1BWSBpbmNsdWRlOiAgICogc3VwcG9ydGVkQ29ubmVjdGlvblR5cGVzXG4gIC8vICAgICAgICAgICAgICAgICogc3VjY2Vzc2Z1bCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICogYWR2aWNlXG4gIC8vIE1BWSBpbmNsdWRlOiAgICogbWluaW11bVZlcnNpb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICogdmVyc2lvblxuICAvLyAgICAgICAgICAgICAgICAqIGFkdmljZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqIG1pbmltdW1WZXJzaW9uXG4gIC8vICAgICAgICAgICAgICAgICogZXh0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICogZXh0XG4gIC8vICAgICAgICAgICAgICAgICogaWQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICogaWRcbiAgLy8gICAgICAgICAgICAgICAgKiBhdXRoU3VjY2Vzc2Z1bFxuICBoYW5kc2hha2U6IGZ1bmN0aW9uKGNhbGxiYWNrLCBjb250ZXh0KSB7XG4gICAgaWYgKHRoaXMuX2FkdmljZS5yZWNvbm5lY3QgPT09IHRoaXMuTk9ORSkgcmV0dXJuO1xuICAgIGlmICh0aGlzLl9zdGF0ZSAhPT0gdGhpcy5VTkNPTk5FQ1RFRCkgcmV0dXJuO1xuXG4gICAgdGhpcy5fc3RhdGUgPSB0aGlzLkNPTk5FQ1RJTkc7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gICAgdGhpcy5pbmZvKCdJbml0aWF0aW5nIGhhbmRzaGFrZSB3aXRoID8nLCBVUkkuc3RyaW5naWZ5KHRoaXMuX2Rpc3BhdGNoZXIuZW5kcG9pbnQpKTtcbiAgICB0aGlzLl9kaXNwYXRjaGVyLnNlbGVjdFRyYW5zcG9ydChjb25zdGFudHMuTUFOREFUT1JZX0NPTk5FQ1RJT05fVFlQRVMpO1xuXG4gICAgdGhpcy5fc2VuZE1lc3NhZ2Uoe1xuICAgICAgY2hhbm5lbDogICAgICAgICAgICAgICAgICBDaGFubmVsLkhBTkRTSEFLRSxcbiAgICAgIHZlcnNpb246ICAgICAgICAgICAgICAgICAgY29uc3RhbnRzLkJBWUVVWF9WRVJTSU9OLFxuICAgICAgc3VwcG9ydGVkQ29ubmVjdGlvblR5cGVzOiB0aGlzLl9kaXNwYXRjaGVyLmdldENvbm5lY3Rpb25UeXBlcygpXG5cbiAgICB9LCB7fSwgZnVuY3Rpb24ocmVzcG9uc2UpIHtcblxuICAgICAgaWYgKHJlc3BvbnNlLnN1Y2Nlc3NmdWwpIHtcbiAgICAgICAgdGhpcy5fc3RhdGUgPSB0aGlzLkNPTk5FQ1RFRDtcbiAgICAgICAgdGhpcy5fZGlzcGF0Y2hlci5jbGllbnRJZCAgPSByZXNwb25zZS5jbGllbnRJZDtcblxuICAgICAgICB0aGlzLl9kaXNwYXRjaGVyLnNlbGVjdFRyYW5zcG9ydChyZXNwb25zZS5zdXBwb3J0ZWRDb25uZWN0aW9uVHlwZXMpO1xuXG4gICAgICAgIHRoaXMuaW5mbygnSGFuZHNoYWtlIHN1Y2Nlc3NmdWw6ID8nLCB0aGlzLl9kaXNwYXRjaGVyLmNsaWVudElkKTtcblxuICAgICAgICB0aGlzLnN1YnNjcmliZSh0aGlzLl9jaGFubmVscy5nZXRLZXlzKCksIHRydWUpO1xuICAgICAgICBpZiAoY2FsbGJhY2spIGFzYXAoZnVuY3Rpb24oKSB7IGNhbGxiYWNrLmNhbGwoY29udGV4dCkgfSk7XG5cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuaW5mbygnSGFuZHNoYWtlIHVuc3VjY2Vzc2Z1bCcpO1xuICAgICAgICBnbG9iYWwuc2V0VGltZW91dChmdW5jdGlvbigpIHsgc2VsZi5oYW5kc2hha2UoY2FsbGJhY2ssIGNvbnRleHQpIH0sIHRoaXMuX2Rpc3BhdGNoZXIucmV0cnkgKiAxMDAwKTtcbiAgICAgICAgdGhpcy5fc3RhdGUgPSB0aGlzLlVOQ09OTkVDVEVEO1xuICAgICAgfVxuICAgIH0sIHRoaXMpO1xuICB9LFxuXG4gIC8vIFJlcXVlc3QgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZXNwb25zZVxuICAvLyBNVVNUIGluY2x1ZGU6ICAqIGNoYW5uZWwgICAgICAgICAgICAgTVVTVCBpbmNsdWRlOiAgKiBjaGFubmVsXG4gIC8vICAgICAgICAgICAgICAgICogY2xpZW50SWQgICAgICAgICAgICAgICAgICAgICAgICAgICAqIHN1Y2Nlc3NmdWxcbiAgLy8gICAgICAgICAgICAgICAgKiBjb25uZWN0aW9uVHlwZSAgICAgICAgICAgICAgICAgICAgICogY2xpZW50SWRcbiAgLy8gTUFZIGluY2x1ZGU6ICAgKiBleHQgICAgICAgICAgICAgICAgIE1BWSBpbmNsdWRlOiAgICogZXJyb3JcbiAgLy8gICAgICAgICAgICAgICAgKiBpZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICogYWR2aWNlXG4gIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqIGV4dFxuICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKiBpZFxuICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKiB0aW1lc3RhbXBcbiAgY29ubmVjdDogZnVuY3Rpb24oY2FsbGJhY2ssIGNvbnRleHQpIHtcbiAgICBpZiAodGhpcy5fYWR2aWNlLnJlY29ubmVjdCA9PT0gdGhpcy5OT05FKSByZXR1cm47XG4gICAgaWYgKHRoaXMuX3N0YXRlID09PSB0aGlzLkRJU0NPTk5FQ1RFRCkgcmV0dXJuO1xuXG4gICAgaWYgKHRoaXMuX3N0YXRlID09PSB0aGlzLlVOQ09OTkVDVEVEKVxuICAgICAgcmV0dXJuIHRoaXMuaGFuZHNoYWtlKGZ1bmN0aW9uKCkgeyB0aGlzLmNvbm5lY3QoY2FsbGJhY2ssIGNvbnRleHQpIH0sIHRoaXMpO1xuXG4gICAgdGhpcy5jYWxsYmFjayhjYWxsYmFjaywgY29udGV4dCk7XG4gICAgaWYgKHRoaXMuX3N0YXRlICE9PSB0aGlzLkNPTk5FQ1RFRCkgcmV0dXJuO1xuXG4gICAgdGhpcy5pbmZvKCdDYWxsaW5nIGRlZmVycmVkIGFjdGlvbnMgZm9yID8nLCB0aGlzLl9kaXNwYXRjaGVyLmNsaWVudElkKTtcbiAgICB0aGlzLnNldERlZmVycmVkU3RhdHVzKCdzdWNjZWVkZWQnKTtcbiAgICB0aGlzLnNldERlZmVycmVkU3RhdHVzKCd1bmtub3duJyk7XG5cbiAgICBpZiAodGhpcy5fY29ubmVjdFJlcXVlc3QpIHJldHVybjtcbiAgICB0aGlzLl9jb25uZWN0UmVxdWVzdCA9IHRydWU7XG5cbiAgICB0aGlzLmluZm8oJ0luaXRpYXRpbmcgY29ubmVjdGlvbiBmb3IgPycsIHRoaXMuX2Rpc3BhdGNoZXIuY2xpZW50SWQpO1xuXG4gICAgdGhpcy5fc2VuZE1lc3NhZ2Uoe1xuICAgICAgY2hhbm5lbDogICAgICAgIENoYW5uZWwuQ09OTkVDVCxcbiAgICAgIGNsaWVudElkOiAgICAgICB0aGlzLl9kaXNwYXRjaGVyLmNsaWVudElkLFxuICAgICAgY29ubmVjdGlvblR5cGU6IHRoaXMuX2Rpc3BhdGNoZXIuY29ubmVjdGlvblR5cGVcblxuICAgIH0sIHt9LCB0aGlzLl9jeWNsZUNvbm5lY3Rpb24sIHRoaXMpO1xuICB9LFxuXG4gIC8vIFJlcXVlc3QgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZXNwb25zZVxuICAvLyBNVVNUIGluY2x1ZGU6ICAqIGNoYW5uZWwgICAgICAgICAgICAgTVVTVCBpbmNsdWRlOiAgKiBjaGFubmVsXG4gIC8vICAgICAgICAgICAgICAgICogY2xpZW50SWQgICAgICAgICAgICAgICAgICAgICAgICAgICAqIHN1Y2Nlc3NmdWxcbiAgLy8gTUFZIGluY2x1ZGU6ICAgKiBleHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICogY2xpZW50SWRcbiAgLy8gICAgICAgICAgICAgICAgKiBpZCAgICAgICAgICAgICAgICAgIE1BWSBpbmNsdWRlOiAgICogZXJyb3JcbiAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICogZXh0XG4gIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqIGlkXG4gIGRpc2Nvbm5lY3Q6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLl9zdGF0ZSAhPT0gdGhpcy5DT05ORUNURUQpIHJldHVybjtcbiAgICB0aGlzLl9zdGF0ZSA9IHRoaXMuRElTQ09OTkVDVEVEO1xuXG4gICAgdGhpcy5pbmZvKCdEaXNjb25uZWN0aW5nID8nLCB0aGlzLl9kaXNwYXRjaGVyLmNsaWVudElkKTtcbiAgICB2YXIgcHJvbWlzZSA9IG5ldyBQdWJsaWNhdGlvbigpO1xuXG4gICAgdGhpcy5fc2VuZE1lc3NhZ2Uoe1xuICAgICAgY2hhbm5lbDogIENoYW5uZWwuRElTQ09OTkVDVCxcbiAgICAgIGNsaWVudElkOiB0aGlzLl9kaXNwYXRjaGVyLmNsaWVudElkXG5cbiAgICB9LCB7fSwgZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAgIGlmIChyZXNwb25zZS5zdWNjZXNzZnVsKSB7XG4gICAgICAgIHRoaXMuX2Rpc3BhdGNoZXIuY2xvc2UoKTtcbiAgICAgICAgcHJvbWlzZS5zZXREZWZlcnJlZFN0YXR1cygnc3VjY2VlZGVkJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9taXNlLnNldERlZmVycmVkU3RhdHVzKCdmYWlsZWQnLCBFcnJvci5wYXJzZShyZXNwb25zZS5lcnJvcikpO1xuICAgICAgfVxuICAgIH0sIHRoaXMpO1xuXG4gICAgdGhpcy5pbmZvKCdDbGVhcmluZyBjaGFubmVsIGxpc3RlbmVycyBmb3IgPycsIHRoaXMuX2Rpc3BhdGNoZXIuY2xpZW50SWQpO1xuICAgIHRoaXMuX2NoYW5uZWxzID0gbmV3IENoYW5uZWwuU2V0KCk7XG5cbiAgICByZXR1cm4gcHJvbWlzZTtcbiAgfSxcblxuICAvLyBSZXF1ZXN0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVzcG9uc2VcbiAgLy8gTVVTVCBpbmNsdWRlOiAgKiBjaGFubmVsICAgICAgICAgICAgIE1VU1QgaW5jbHVkZTogICogY2hhbm5lbFxuICAvLyAgICAgICAgICAgICAgICAqIGNsaWVudElkICAgICAgICAgICAgICAgICAgICAgICAgICAgKiBzdWNjZXNzZnVsXG4gIC8vICAgICAgICAgICAgICAgICogc3Vic2NyaXB0aW9uICAgICAgICAgICAgICAgICAgICAgICAqIGNsaWVudElkXG4gIC8vIE1BWSBpbmNsdWRlOiAgICogZXh0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqIHN1YnNjcmlwdGlvblxuICAvLyAgICAgICAgICAgICAgICAqIGlkICAgICAgICAgICAgICAgICAgTUFZIGluY2x1ZGU6ICAgKiBlcnJvclxuICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKiBhZHZpY2VcbiAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICogZXh0XG4gIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqIGlkXG4gIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqIHRpbWVzdGFtcFxuICBzdWJzY3JpYmU6IGZ1bmN0aW9uKGNoYW5uZWwsIGNhbGxiYWNrLCBjb250ZXh0KSB7XG4gICAgaWYgKGNoYW5uZWwgaW5zdGFuY2VvZiBBcnJheSlcbiAgICAgIHJldHVybiBhcnJheS5tYXAoY2hhbm5lbCwgZnVuY3Rpb24oYykge1xuICAgICAgICByZXR1cm4gdGhpcy5zdWJzY3JpYmUoYywgY2FsbGJhY2ssIGNvbnRleHQpO1xuICAgICAgfSwgdGhpcyk7XG5cbiAgICB2YXIgc3Vic2NyaXB0aW9uID0gbmV3IFN1YnNjcmlwdGlvbih0aGlzLCBjaGFubmVsLCBjYWxsYmFjaywgY29udGV4dCksXG4gICAgICAgIGZvcmNlICAgICAgICA9IChjYWxsYmFjayA9PT0gdHJ1ZSksXG4gICAgICAgIGhhc1N1YnNjcmliZSA9IHRoaXMuX2NoYW5uZWxzLmhhc1N1YnNjcmlwdGlvbihjaGFubmVsKTtcblxuICAgIGlmIChoYXNTdWJzY3JpYmUgJiYgIWZvcmNlKSB7XG4gICAgICB0aGlzLl9jaGFubmVscy5zdWJzY3JpYmUoW2NoYW5uZWxdLCBzdWJzY3JpcHRpb24pO1xuICAgICAgc3Vic2NyaXB0aW9uLnNldERlZmVycmVkU3RhdHVzKCdzdWNjZWVkZWQnKTtcbiAgICAgIHJldHVybiBzdWJzY3JpcHRpb247XG4gICAgfVxuXG4gICAgdGhpcy5jb25uZWN0KGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5pbmZvKCdDbGllbnQgPyBhdHRlbXB0aW5nIHRvIHN1YnNjcmliZSB0byA/JywgdGhpcy5fZGlzcGF0Y2hlci5jbGllbnRJZCwgY2hhbm5lbCk7XG4gICAgICBpZiAoIWZvcmNlKSB0aGlzLl9jaGFubmVscy5zdWJzY3JpYmUoW2NoYW5uZWxdLCBzdWJzY3JpcHRpb24pO1xuXG4gICAgICB0aGlzLl9zZW5kTWVzc2FnZSh7XG4gICAgICAgIGNoYW5uZWw6ICAgICAgQ2hhbm5lbC5TVUJTQ1JJQkUsXG4gICAgICAgIGNsaWVudElkOiAgICAgdGhpcy5fZGlzcGF0Y2hlci5jbGllbnRJZCxcbiAgICAgICAgc3Vic2NyaXB0aW9uOiBjaGFubmVsXG5cbiAgICAgIH0sIHt9LCBmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICBpZiAoIXJlc3BvbnNlLnN1Y2Nlc3NmdWwpIHtcbiAgICAgICAgICBzdWJzY3JpcHRpb24uc2V0RGVmZXJyZWRTdGF0dXMoJ2ZhaWxlZCcsIEVycm9yLnBhcnNlKHJlc3BvbnNlLmVycm9yKSk7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuX2NoYW5uZWxzLnVuc3Vic2NyaWJlKGNoYW5uZWwsIHN1YnNjcmlwdGlvbik7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgY2hhbm5lbHMgPSBbXS5jb25jYXQocmVzcG9uc2Uuc3Vic2NyaXB0aW9uKTtcbiAgICAgICAgdGhpcy5pbmZvKCdTdWJzY3JpcHRpb24gYWNrbm93bGVkZ2VkIGZvciA/IHRvID8nLCB0aGlzLl9kaXNwYXRjaGVyLmNsaWVudElkLCBjaGFubmVscyk7XG4gICAgICAgIHN1YnNjcmlwdGlvbi5zZXREZWZlcnJlZFN0YXR1cygnc3VjY2VlZGVkJyk7XG4gICAgICB9LCB0aGlzKTtcbiAgICB9LCB0aGlzKTtcblxuICAgIHJldHVybiBzdWJzY3JpcHRpb247XG4gIH0sXG5cbiAgLy8gUmVxdWVzdCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlc3BvbnNlXG4gIC8vIE1VU1QgaW5jbHVkZTogICogY2hhbm5lbCAgICAgICAgICAgICBNVVNUIGluY2x1ZGU6ICAqIGNoYW5uZWxcbiAgLy8gICAgICAgICAgICAgICAgKiBjbGllbnRJZCAgICAgICAgICAgICAgICAgICAgICAgICAgICogc3VjY2Vzc2Z1bFxuICAvLyAgICAgICAgICAgICAgICAqIHN1YnNjcmlwdGlvbiAgICAgICAgICAgICAgICAgICAgICAgKiBjbGllbnRJZFxuICAvLyBNQVkgaW5jbHVkZTogICAqIGV4dCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKiBzdWJzY3JpcHRpb25cbiAgLy8gICAgICAgICAgICAgICAgKiBpZCAgICAgICAgICAgICAgICAgIE1BWSBpbmNsdWRlOiAgICogZXJyb3JcbiAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICogYWR2aWNlXG4gIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqIGV4dFxuICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKiBpZFxuICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKiB0aW1lc3RhbXBcbiAgdW5zdWJzY3JpYmU6IGZ1bmN0aW9uKGNoYW5uZWwsIHN1YnNjcmlwdGlvbikge1xuICAgIGlmIChjaGFubmVsIGluc3RhbmNlb2YgQXJyYXkpXG4gICAgICByZXR1cm4gYXJyYXkubWFwKGNoYW5uZWwsIGZ1bmN0aW9uKGMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudW5zdWJzY3JpYmUoYywgc3Vic2NyaXB0aW9uKTtcbiAgICAgIH0sIHRoaXMpO1xuXG4gICAgdmFyIGRlYWQgPSB0aGlzLl9jaGFubmVscy51bnN1YnNjcmliZShjaGFubmVsLCBzdWJzY3JpcHRpb24pO1xuICAgIGlmICghZGVhZCkgcmV0dXJuO1xuXG4gICAgdGhpcy5jb25uZWN0KGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5pbmZvKCdDbGllbnQgPyBhdHRlbXB0aW5nIHRvIHVuc3Vic2NyaWJlIGZyb20gPycsIHRoaXMuX2Rpc3BhdGNoZXIuY2xpZW50SWQsIGNoYW5uZWwpO1xuXG4gICAgICB0aGlzLl9zZW5kTWVzc2FnZSh7XG4gICAgICAgIGNoYW5uZWw6ICAgICAgQ2hhbm5lbC5VTlNVQlNDUklCRSxcbiAgICAgICAgY2xpZW50SWQ6ICAgICB0aGlzLl9kaXNwYXRjaGVyLmNsaWVudElkLFxuICAgICAgICBzdWJzY3JpcHRpb246IGNoYW5uZWxcblxuICAgICAgfSwge30sIGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICAgIGlmICghcmVzcG9uc2Uuc3VjY2Vzc2Z1bCkgcmV0dXJuO1xuXG4gICAgICAgIHZhciBjaGFubmVscyA9IFtdLmNvbmNhdChyZXNwb25zZS5zdWJzY3JpcHRpb24pO1xuICAgICAgICB0aGlzLmluZm8oJ1Vuc3Vic2NyaXB0aW9uIGFja25vd2xlZGdlZCBmb3IgPyBmcm9tID8nLCB0aGlzLl9kaXNwYXRjaGVyLmNsaWVudElkLCBjaGFubmVscyk7XG4gICAgICB9LCB0aGlzKTtcbiAgICB9LCB0aGlzKTtcbiAgfSxcblxuICAvLyBSZXF1ZXN0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVzcG9uc2VcbiAgLy8gTVVTVCBpbmNsdWRlOiAgKiBjaGFubmVsICAgICAgICAgICAgIE1VU1QgaW5jbHVkZTogICogY2hhbm5lbFxuICAvLyAgICAgICAgICAgICAgICAqIGRhdGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKiBzdWNjZXNzZnVsXG4gIC8vIE1BWSBpbmNsdWRlOiAgICogY2xpZW50SWQgICAgICAgICAgICBNQVkgaW5jbHVkZTogICAqIGlkXG4gIC8vICAgICAgICAgICAgICAgICogaWQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqIGVycm9yXG4gIC8vICAgICAgICAgICAgICAgICogZXh0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqIGV4dFxuICBwdWJsaXNoOiBmdW5jdGlvbihjaGFubmVsLCBkYXRhLCBvcHRpb25zKSB7XG4gICAgdmFsaWRhdGVPcHRpb25zKG9wdGlvbnMgfHwge30sIFsnYXR0ZW1wdHMnLCAnZGVhZGxpbmUnXSk7XG4gICAgdmFyIHB1YmxpY2F0aW9uID0gbmV3IFB1YmxpY2F0aW9uKCk7XG5cbiAgICB0aGlzLmNvbm5lY3QoZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLmluZm8oJ0NsaWVudCA/IHF1ZXVlaW5nIHB1Ymxpc2hlZCBtZXNzYWdlIHRvID86ID8nLCB0aGlzLl9kaXNwYXRjaGVyLmNsaWVudElkLCBjaGFubmVsLCBkYXRhKTtcblxuICAgICAgdGhpcy5fc2VuZE1lc3NhZ2Uoe1xuICAgICAgICBjaGFubmVsOiAgY2hhbm5lbCxcbiAgICAgICAgZGF0YTogICAgIGRhdGEsXG4gICAgICAgIGNsaWVudElkOiB0aGlzLl9kaXNwYXRjaGVyLmNsaWVudElkXG5cbiAgICAgIH0sIG9wdGlvbnMsIGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICAgIGlmIChyZXNwb25zZS5zdWNjZXNzZnVsKVxuICAgICAgICAgIHB1YmxpY2F0aW9uLnNldERlZmVycmVkU3RhdHVzKCdzdWNjZWVkZWQnKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgIHB1YmxpY2F0aW9uLnNldERlZmVycmVkU3RhdHVzKCdmYWlsZWQnLCBFcnJvci5wYXJzZShyZXNwb25zZS5lcnJvcikpO1xuICAgICAgfSwgdGhpcyk7XG4gICAgfSwgdGhpcyk7XG5cbiAgICByZXR1cm4gcHVibGljYXRpb247XG4gIH0sXG5cbiAgX3NlbmRNZXNzYWdlOiBmdW5jdGlvbihtZXNzYWdlLCBvcHRpb25zLCBjYWxsYmFjaywgY29udGV4dCkge1xuICAgIG1lc3NhZ2UuaWQgPSB0aGlzLl9nZW5lcmF0ZU1lc3NhZ2VJZCgpO1xuXG4gICAgdmFyIHRpbWVvdXQgPSB0aGlzLl9hZHZpY2UudGltZW91dFxuICAgICAgICAgICAgICAgID8gMS4yICogdGhpcy5fYWR2aWNlLnRpbWVvdXQgLyAxMDAwXG4gICAgICAgICAgICAgICAgOiAxLjIgKiB0aGlzLl9kaXNwYXRjaGVyLnJldHJ5O1xuXG4gICAgdGhpcy5waXBlVGhyb3VnaEV4dGVuc2lvbnMoJ291dGdvaW5nJywgbWVzc2FnZSwgbnVsbCwgZnVuY3Rpb24obWVzc2FnZSkge1xuICAgICAgaWYgKCFtZXNzYWdlKSByZXR1cm47XG4gICAgICBpZiAoY2FsbGJhY2spIHRoaXMuX3Jlc3BvbnNlQ2FsbGJhY2tzW21lc3NhZ2UuaWRdID0gW2NhbGxiYWNrLCBjb250ZXh0XTtcbiAgICAgIHRoaXMuX2Rpc3BhdGNoZXIuc2VuZE1lc3NhZ2UobWVzc2FnZSwgdGltZW91dCwgb3B0aW9ucyB8fCB7fSk7XG4gICAgfSwgdGhpcyk7XG4gIH0sXG5cbiAgX2dlbmVyYXRlTWVzc2FnZUlkOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9tZXNzYWdlSWQgKz0gMTtcbiAgICBpZiAodGhpcy5fbWVzc2FnZUlkID49IE1hdGgucG93KDIsMzIpKSB0aGlzLl9tZXNzYWdlSWQgPSAwO1xuICAgIHJldHVybiB0aGlzLl9tZXNzYWdlSWQudG9TdHJpbmcoMzYpO1xuICB9LFxuXG4gIF9yZWNlaXZlTWVzc2FnZTogZnVuY3Rpb24obWVzc2FnZSkge1xuICAgIHZhciBpZCA9IG1lc3NhZ2UuaWQsIGNhbGxiYWNrO1xuXG4gICAgaWYgKG1lc3NhZ2Uuc3VjY2Vzc2Z1bCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBjYWxsYmFjayA9IHRoaXMuX3Jlc3BvbnNlQ2FsbGJhY2tzW2lkXTtcbiAgICAgIGRlbGV0ZSB0aGlzLl9yZXNwb25zZUNhbGxiYWNrc1tpZF07XG4gICAgfVxuXG4gICAgdGhpcy5waXBlVGhyb3VnaEV4dGVuc2lvbnMoJ2luY29taW5nJywgbWVzc2FnZSwgbnVsbCwgZnVuY3Rpb24obWVzc2FnZSkge1xuICAgICAgaWYgKCFtZXNzYWdlKSByZXR1cm47XG4gICAgICBpZiAobWVzc2FnZS5hZHZpY2UpIHRoaXMuX2hhbmRsZUFkdmljZShtZXNzYWdlLmFkdmljZSk7XG4gICAgICB0aGlzLl9kZWxpdmVyTWVzc2FnZShtZXNzYWdlKTtcbiAgICAgIGlmIChjYWxsYmFjaykgY2FsbGJhY2tbMF0uY2FsbChjYWxsYmFja1sxXSwgbWVzc2FnZSk7XG4gICAgfSwgdGhpcyk7XG4gIH0sXG5cbiAgX2hhbmRsZUFkdmljZTogZnVuY3Rpb24oYWR2aWNlKSB7XG4gICAgZXh0ZW5kKHRoaXMuX2FkdmljZSwgYWR2aWNlKTtcbiAgICB0aGlzLl9kaXNwYXRjaGVyLnRpbWVvdXQgPSB0aGlzLl9hZHZpY2UudGltZW91dCAvIDEwMDA7XG5cbiAgICBpZiAodGhpcy5fYWR2aWNlLnJlY29ubmVjdCA9PT0gdGhpcy5IQU5EU0hBS0UgJiYgdGhpcy5fc3RhdGUgIT09IHRoaXMuRElTQ09OTkVDVEVEKSB7XG4gICAgICB0aGlzLl9zdGF0ZSA9IHRoaXMuVU5DT05ORUNURUQ7XG4gICAgICB0aGlzLl9kaXNwYXRjaGVyLmNsaWVudElkID0gbnVsbDtcbiAgICAgIHRoaXMuX2N5Y2xlQ29ubmVjdGlvbigpO1xuICAgIH1cbiAgfSxcblxuICBfZGVsaXZlck1lc3NhZ2U6IGZ1bmN0aW9uKG1lc3NhZ2UpIHtcbiAgICBpZiAoIW1lc3NhZ2UuY2hhbm5lbCB8fCBtZXNzYWdlLmRhdGEgPT09IHVuZGVmaW5lZCkgcmV0dXJuO1xuICAgIHRoaXMuaW5mbygnQ2xpZW50ID8gY2FsbGluZyBsaXN0ZW5lcnMgZm9yID8gd2l0aCA/JywgdGhpcy5fZGlzcGF0Y2hlci5jbGllbnRJZCwgbWVzc2FnZS5jaGFubmVsLCBtZXNzYWdlLmRhdGEpO1xuICAgIHRoaXMuX2NoYW5uZWxzLmRpc3RyaWJ1dGVNZXNzYWdlKG1lc3NhZ2UpO1xuICB9LFxuXG4gIF9jeWNsZUNvbm5lY3Rpb246IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLl9jb25uZWN0UmVxdWVzdCkge1xuICAgICAgdGhpcy5fY29ubmVjdFJlcXVlc3QgPSBudWxsO1xuICAgICAgdGhpcy5pbmZvKCdDbG9zZWQgY29ubmVjdGlvbiBmb3IgPycsIHRoaXMuX2Rpc3BhdGNoZXIuY2xpZW50SWQpO1xuICAgIH1cbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgZ2xvYmFsLnNldFRpbWVvdXQoZnVuY3Rpb24oKSB7IHNlbGYuY29ubmVjdCgpIH0sIHRoaXMuX2FkdmljZS5pbnRlcnZhbCk7XG4gIH1cbn0pO1xuXG5leHRlbmQoQ2xpZW50LnByb3RvdHlwZSwgRGVmZXJyYWJsZSk7XG5leHRlbmQoQ2xpZW50LnByb3RvdHlwZSwgUHVibGlzaGVyKTtcbmV4dGVuZChDbGllbnQucHJvdG90eXBlLCBMb2dnaW5nKTtcbmV4dGVuZChDbGllbnQucHJvdG90eXBlLCBFeHRlbnNpYmxlKTtcblxubW9kdWxlLmV4cG9ydHMgPSBDbGllbnQ7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBDbGFzcyAgICAgPSByZXF1aXJlKCcuLi91dGlsL2NsYXNzJyksXG4gICAgVVJJICAgICAgID0gcmVxdWlyZSgnLi4vdXRpbC91cmknKSxcbiAgICBjb29raWVzICAgPSByZXF1aXJlKCcuLi91dGlsL2Nvb2tpZXMnKSxcbiAgICBleHRlbmQgICAgPSByZXF1aXJlKCcuLi91dGlsL2V4dGVuZCcpLFxuICAgIExvZ2dpbmcgICA9IHJlcXVpcmUoJy4uL21peGlucy9sb2dnaW5nJyksXG4gICAgUHVibGlzaGVyID0gcmVxdWlyZSgnLi4vbWl4aW5zL3B1Ymxpc2hlcicpLFxuICAgIFRyYW5zcG9ydCA9IHJlcXVpcmUoJy4uL3RyYW5zcG9ydCcpLFxuICAgIFNjaGVkdWxlciA9IHJlcXVpcmUoJy4vc2NoZWR1bGVyJyk7XG5cbnZhciBEaXNwYXRjaGVyID0gQ2xhc3MoeyBjbGFzc05hbWU6ICdEaXNwYXRjaGVyJyxcbiAgTUFYX1JFUVVFU1RfU0laRTogMjA0OCxcbiAgREVGQVVMVF9SRVRSWTogICAgNSxcblxuICBVUDogICAxLFxuICBET1dOOiAyLFxuXG4gIGluaXRpYWxpemU6IGZ1bmN0aW9uKGNsaWVudCwgZW5kcG9pbnQsIG9wdGlvbnMpIHtcbiAgICB0aGlzLl9jbGllbnQgICAgID0gY2xpZW50O1xuICAgIHRoaXMuZW5kcG9pbnQgICAgPSBVUkkucGFyc2UoZW5kcG9pbnQpO1xuICAgIHRoaXMuX2FsdGVybmF0ZXMgPSBvcHRpb25zLmVuZHBvaW50cyB8fCB7fTtcblxuICAgIHRoaXMuY29va2llcyAgICAgID0gY29va2llcy5Db29raWVKYXIgJiYgbmV3IGNvb2tpZXMuQ29va2llSmFyKCk7XG4gICAgdGhpcy5fZGlzYWJsZWQgICAgPSBbXTtcbiAgICB0aGlzLl9lbnZlbG9wZXMgICA9IHt9O1xuICAgIHRoaXMuaGVhZGVycyAgICAgID0ge307XG4gICAgdGhpcy5yZXRyeSAgICAgICAgPSBvcHRpb25zLnJldHJ5IHx8IHRoaXMuREVGQVVMVF9SRVRSWTtcbiAgICB0aGlzLl9zY2hlZHVsZXIgICA9IG9wdGlvbnMuc2NoZWR1bGVyIHx8IFNjaGVkdWxlcjtcbiAgICB0aGlzLl9zdGF0ZSAgICAgICA9IDA7XG4gICAgdGhpcy50cmFuc3BvcnRzICAgPSB7fTtcbiAgICB0aGlzLndzRXh0ZW5zaW9ucyA9IFtdO1xuXG4gICAgdGhpcy5wcm94eSA9IG9wdGlvbnMucHJveHkgfHwge307XG4gICAgaWYgKHR5cGVvZiB0aGlzLl9wcm94eSA9PT0gJ3N0cmluZycpIHRoaXMuX3Byb3h5ID0ge29yaWdpbjogdGhpcy5fcHJveHl9O1xuXG4gICAgdmFyIGV4dHMgPSBvcHRpb25zLndlYnNvY2tldEV4dGVuc2lvbnM7XG4gICAgaWYgKGV4dHMpIHtcbiAgICAgIGV4dHMgPSBbXS5jb25jYXQoZXh0cyk7XG4gICAgICBmb3IgKHZhciBpID0gMCwgbiA9IGV4dHMubGVuZ3RoOyBpIDwgbjsgaSsrKVxuICAgICAgICB0aGlzLmFkZFdlYnNvY2tldEV4dGVuc2lvbihleHRzW2ldKTtcbiAgICB9XG5cbiAgICB0aGlzLnRscyA9IG9wdGlvbnMudGxzIHx8IHt9O1xuICAgIHRoaXMudGxzLmNhID0gdGhpcy50bHMuY2EgfHwgb3B0aW9ucy5jYTtcblxuICAgIGZvciAodmFyIHR5cGUgaW4gdGhpcy5fYWx0ZXJuYXRlcylcbiAgICAgIHRoaXMuX2FsdGVybmF0ZXNbdHlwZV0gPSBVUkkucGFyc2UodGhpcy5fYWx0ZXJuYXRlc1t0eXBlXSk7XG5cbiAgICB0aGlzLm1heFJlcXVlc3RTaXplID0gdGhpcy5NQVhfUkVRVUVTVF9TSVpFO1xuICB9LFxuXG4gIGVuZHBvaW50Rm9yOiBmdW5jdGlvbihjb25uZWN0aW9uVHlwZSkge1xuICAgIHJldHVybiB0aGlzLl9hbHRlcm5hdGVzW2Nvbm5lY3Rpb25UeXBlXSB8fCB0aGlzLmVuZHBvaW50O1xuICB9LFxuXG4gIGFkZFdlYnNvY2tldEV4dGVuc2lvbjogZnVuY3Rpb24oZXh0ZW5zaW9uKSB7XG4gICAgdGhpcy53c0V4dGVuc2lvbnMucHVzaChleHRlbnNpb24pO1xuICB9LFxuXG4gIGRpc2FibGU6IGZ1bmN0aW9uKGZlYXR1cmUpIHtcbiAgICB0aGlzLl9kaXNhYmxlZC5wdXNoKGZlYXR1cmUpO1xuICB9LFxuXG4gIHNldEhlYWRlcjogZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgICB0aGlzLmhlYWRlcnNbbmFtZV0gPSB2YWx1ZTtcbiAgfSxcblxuICBjbG9zZTogZnVuY3Rpb24oKSB7XG4gICAgdmFyIHRyYW5zcG9ydCA9IHRoaXMuX3RyYW5zcG9ydDtcbiAgICBkZWxldGUgdGhpcy5fdHJhbnNwb3J0O1xuICAgIGlmICh0cmFuc3BvcnQpIHRyYW5zcG9ydC5jbG9zZSgpO1xuICB9LFxuXG4gIGdldENvbm5lY3Rpb25UeXBlczogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIFRyYW5zcG9ydC5nZXRDb25uZWN0aW9uVHlwZXMoKTtcbiAgfSxcblxuICBzZWxlY3RUcmFuc3BvcnQ6IGZ1bmN0aW9uKHRyYW5zcG9ydFR5cGVzKSB7XG4gICAgVHJhbnNwb3J0LmdldCh0aGlzLCB0cmFuc3BvcnRUeXBlcywgdGhpcy5fZGlzYWJsZWQsIGZ1bmN0aW9uKHRyYW5zcG9ydCkge1xuICAgICAgdGhpcy5kZWJ1ZygnU2VsZWN0ZWQgPyB0cmFuc3BvcnQgZm9yID8nLCB0cmFuc3BvcnQuY29ubmVjdGlvblR5cGUsIFVSSS5zdHJpbmdpZnkodHJhbnNwb3J0LmVuZHBvaW50KSk7XG5cbiAgICAgIGlmICh0cmFuc3BvcnQgPT09IHRoaXMuX3RyYW5zcG9ydCkgcmV0dXJuO1xuICAgICAgaWYgKHRoaXMuX3RyYW5zcG9ydCkgdGhpcy5fdHJhbnNwb3J0LmNsb3NlKCk7XG5cbiAgICAgIHRoaXMuX3RyYW5zcG9ydCA9IHRyYW5zcG9ydDtcbiAgICAgIHRoaXMuY29ubmVjdGlvblR5cGUgPSB0cmFuc3BvcnQuY29ubmVjdGlvblR5cGU7XG4gICAgfSwgdGhpcyk7XG4gIH0sXG5cbiAgc2VuZE1lc3NhZ2U6IGZ1bmN0aW9uKG1lc3NhZ2UsIHRpbWVvdXQsIG9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICAgIHZhciBpZCAgICAgICA9IG1lc3NhZ2UuaWQsXG4gICAgICAgIGF0dGVtcHRzID0gb3B0aW9ucy5hdHRlbXB0cyxcbiAgICAgICAgZGVhZGxpbmUgPSBvcHRpb25zLmRlYWRsaW5lICYmIG5ldyBEYXRlKCkuZ2V0VGltZSgpICsgKG9wdGlvbnMuZGVhZGxpbmUgKiAxMDAwKSxcbiAgICAgICAgZW52ZWxvcGUgPSB0aGlzLl9lbnZlbG9wZXNbaWRdLFxuICAgICAgICBzY2hlZHVsZXI7XG5cbiAgICBpZiAoIWVudmVsb3BlKSB7XG4gICAgICBzY2hlZHVsZXIgPSBuZXcgdGhpcy5fc2NoZWR1bGVyKG1lc3NhZ2UsIHt0aW1lb3V0OiB0aW1lb3V0LCBpbnRlcnZhbDogdGhpcy5yZXRyeSwgYXR0ZW1wdHM6IGF0dGVtcHRzLCBkZWFkbGluZTogZGVhZGxpbmV9KTtcbiAgICAgIGVudmVsb3BlICA9IHRoaXMuX2VudmVsb3Blc1tpZF0gPSB7bWVzc2FnZTogbWVzc2FnZSwgc2NoZWR1bGVyOiBzY2hlZHVsZXJ9O1xuICAgIH1cblxuICAgIHRoaXMuX3NlbmRFbnZlbG9wZShlbnZlbG9wZSk7XG4gIH0sXG5cbiAgX3NlbmRFbnZlbG9wZTogZnVuY3Rpb24oZW52ZWxvcGUpIHtcbiAgICBpZiAoIXRoaXMuX3RyYW5zcG9ydCkgcmV0dXJuO1xuICAgIGlmIChlbnZlbG9wZS5yZXF1ZXN0IHx8IGVudmVsb3BlLnRpbWVyKSByZXR1cm47XG5cbiAgICB2YXIgbWVzc2FnZSAgID0gZW52ZWxvcGUubWVzc2FnZSxcbiAgICAgICAgc2NoZWR1bGVyID0gZW52ZWxvcGUuc2NoZWR1bGVyLFxuICAgICAgICBzZWxmICAgICAgPSB0aGlzO1xuXG4gICAgaWYgKCFzY2hlZHVsZXIuaXNEZWxpdmVyYWJsZSgpKSB7XG4gICAgICBzY2hlZHVsZXIuYWJvcnQoKTtcbiAgICAgIGRlbGV0ZSB0aGlzLl9lbnZlbG9wZXNbbWVzc2FnZS5pZF07XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZW52ZWxvcGUudGltZXIgPSBnbG9iYWwuc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgIHNlbGYuaGFuZGxlRXJyb3IobWVzc2FnZSk7XG4gICAgfSwgc2NoZWR1bGVyLmdldFRpbWVvdXQoKSAqIDEwMDApO1xuXG4gICAgc2NoZWR1bGVyLnNlbmQoKTtcbiAgICBlbnZlbG9wZS5yZXF1ZXN0ID0gdGhpcy5fdHJhbnNwb3J0LnNlbmRNZXNzYWdlKG1lc3NhZ2UpO1xuICB9LFxuXG4gIGhhbmRsZVJlc3BvbnNlOiBmdW5jdGlvbihyZXBseSkge1xuICAgIHZhciBlbnZlbG9wZSA9IHRoaXMuX2VudmVsb3Blc1tyZXBseS5pZF07XG5cbiAgICBpZiAocmVwbHkuc3VjY2Vzc2Z1bCAhPT0gdW5kZWZpbmVkICYmIGVudmVsb3BlKSB7XG4gICAgICBlbnZlbG9wZS5zY2hlZHVsZXIuc3VjY2VlZCgpO1xuICAgICAgZGVsZXRlIHRoaXMuX2VudmVsb3Blc1tyZXBseS5pZF07XG4gICAgICBnbG9iYWwuY2xlYXJUaW1lb3V0KGVudmVsb3BlLnRpbWVyKTtcbiAgICB9XG5cbiAgICB0aGlzLnRyaWdnZXIoJ21lc3NhZ2UnLCByZXBseSk7XG5cbiAgICBpZiAodGhpcy5fc3RhdGUgPT09IHRoaXMuVVApIHJldHVybjtcbiAgICB0aGlzLl9zdGF0ZSA9IHRoaXMuVVA7XG4gICAgdGhpcy5fY2xpZW50LnRyaWdnZXIoJ3RyYW5zcG9ydDp1cCcpO1xuICB9LFxuXG4gIGhhbmRsZUVycm9yOiBmdW5jdGlvbihtZXNzYWdlLCBpbW1lZGlhdGUpIHtcbiAgICB2YXIgZW52ZWxvcGUgPSB0aGlzLl9lbnZlbG9wZXNbbWVzc2FnZS5pZF0sXG4gICAgICAgIHJlcXVlc3QgID0gZW52ZWxvcGUgJiYgZW52ZWxvcGUucmVxdWVzdCxcbiAgICAgICAgc2VsZiAgICAgPSB0aGlzO1xuXG4gICAgaWYgKCFyZXF1ZXN0KSByZXR1cm47XG5cbiAgICByZXF1ZXN0LnRoZW4oZnVuY3Rpb24ocmVxKSB7XG4gICAgICBpZiAocmVxICYmIHJlcS5hYm9ydCkgcmVxLmFib3J0KCk7XG4gICAgfSk7XG5cbiAgICB2YXIgc2NoZWR1bGVyID0gZW52ZWxvcGUuc2NoZWR1bGVyO1xuICAgIHNjaGVkdWxlci5mYWlsKCk7XG5cbiAgICBnbG9iYWwuY2xlYXJUaW1lb3V0KGVudmVsb3BlLnRpbWVyKTtcbiAgICBlbnZlbG9wZS5yZXF1ZXN0ID0gZW52ZWxvcGUudGltZXIgPSBudWxsO1xuXG4gICAgaWYgKGltbWVkaWF0ZSkge1xuICAgICAgdGhpcy5fc2VuZEVudmVsb3BlKGVudmVsb3BlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZW52ZWxvcGUudGltZXIgPSBnbG9iYWwuc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgZW52ZWxvcGUudGltZXIgPSBudWxsO1xuICAgICAgICBzZWxmLl9zZW5kRW52ZWxvcGUoZW52ZWxvcGUpO1xuICAgICAgfSwgc2NoZWR1bGVyLmdldEludGVydmFsKCkgKiAxMDAwKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fc3RhdGUgPT09IHRoaXMuRE9XTikgcmV0dXJuO1xuICAgIHRoaXMuX3N0YXRlID0gdGhpcy5ET1dOO1xuICAgIHRoaXMuX2NsaWVudC50cmlnZ2VyKCd0cmFuc3BvcnQ6ZG93bicpO1xuICB9XG59KTtcblxuRGlzcGF0Y2hlci5jcmVhdGUgPSBmdW5jdGlvbihjbGllbnQsIGVuZHBvaW50LCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgRGlzcGF0Y2hlcihjbGllbnQsIGVuZHBvaW50LCBvcHRpb25zKTtcbn07XG5cbmV4dGVuZChEaXNwYXRjaGVyLnByb3RvdHlwZSwgUHVibGlzaGVyKTtcbmV4dGVuZChEaXNwYXRjaGVyLnByb3RvdHlwZSwgTG9nZ2luZyk7XG5cbm1vZHVsZS5leHBvcnRzID0gRGlzcGF0Y2hlcjtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIENsYXNzICAgPSByZXF1aXJlKCcuLi91dGlsL2NsYXNzJyksXG4gICAgR3JhbW1hciA9IHJlcXVpcmUoJy4vZ3JhbW1hcicpO1xuXG52YXIgRXJyb3IgPSBDbGFzcyh7XG4gIGluaXRpYWxpemU6IGZ1bmN0aW9uKGNvZGUsIHBhcmFtcywgbWVzc2FnZSkge1xuICAgIHRoaXMuY29kZSAgICA9IGNvZGU7XG4gICAgdGhpcy5wYXJhbXMgID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwocGFyYW1zKTtcbiAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICB9LFxuXG4gIHRvU3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5jb2RlICsgJzonICtcbiAgICAgICAgICAgdGhpcy5wYXJhbXMuam9pbignLCcpICsgJzonICtcbiAgICAgICAgICAgdGhpcy5tZXNzYWdlO1xuICB9XG59KTtcblxuRXJyb3IucGFyc2UgPSBmdW5jdGlvbihtZXNzYWdlKSB7XG4gIG1lc3NhZ2UgPSBtZXNzYWdlIHx8ICcnO1xuICBpZiAoIUdyYW1tYXIuRVJST1IudGVzdChtZXNzYWdlKSkgcmV0dXJuIG5ldyBFcnJvcihudWxsLCBbXSwgbWVzc2FnZSk7XG5cbiAgdmFyIHBhcnRzICAgPSBtZXNzYWdlLnNwbGl0KCc6JyksXG4gICAgICBjb2RlICAgID0gcGFyc2VJbnQocGFydHNbMF0pLFxuICAgICAgcGFyYW1zICA9IHBhcnRzWzFdLnNwbGl0KCcsJyksXG4gICAgICBtZXNzYWdlID0gcGFydHNbMl07XG5cbiAgcmV0dXJuIG5ldyBFcnJvcihjb2RlLCBwYXJhbXMsIG1lc3NhZ2UpO1xufTtcblxuLy8gaHR0cDovL2NvZGUuZ29vZ2xlLmNvbS9wL2NvbWV0ZC93aWtpL0JheWV1eENvZGVzXG52YXIgZXJyb3JzID0ge1xuICB2ZXJzaW9uTWlzbWF0Y2g6ICBbMzAwLCAnVmVyc2lvbiBtaXNtYXRjaCddLFxuICBjb25udHlwZU1pc21hdGNoOiBbMzAxLCAnQ29ubmVjdGlvbiB0eXBlcyBub3Qgc3VwcG9ydGVkJ10sXG4gIGV4dE1pc21hdGNoOiAgICAgIFszMDIsICdFeHRlbnNpb24gbWlzbWF0Y2gnXSxcbiAgYmFkUmVxdWVzdDogICAgICAgWzQwMCwgJ0JhZCByZXF1ZXN0J10sXG4gIGNsaWVudFVua25vd246ICAgIFs0MDEsICdVbmtub3duIGNsaWVudCddLFxuICBwYXJhbWV0ZXJNaXNzaW5nOiBbNDAyLCAnTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXInXSxcbiAgY2hhbm5lbEZvcmJpZGRlbjogWzQwMywgJ0ZvcmJpZGRlbiBjaGFubmVsJ10sXG4gIGNoYW5uZWxVbmtub3duOiAgIFs0MDQsICdVbmtub3duIGNoYW5uZWwnXSxcbiAgY2hhbm5lbEludmFsaWQ6ICAgWzQwNSwgJ0ludmFsaWQgY2hhbm5lbCddLFxuICBleHRVbmtub3duOiAgICAgICBbNDA2LCAnVW5rbm93biBleHRlbnNpb24nXSxcbiAgcHVibGlzaEZhaWxlZDogICAgWzQwNywgJ0ZhaWxlZCB0byBwdWJsaXNoJ10sXG4gIHNlcnZlckVycm9yOiAgICAgIFs1MDAsICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InXVxufTtcblxuZm9yICh2YXIgbmFtZSBpbiBlcnJvcnMpXG4gIChmdW5jdGlvbihuYW1lKSB7XG4gICAgRXJyb3JbbmFtZV0gPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBuZXcgRXJyb3IoZXJyb3JzW25hbWVdWzBdLCBhcmd1bWVudHMsIGVycm9yc1tuYW1lXVsxXSkudG9TdHJpbmcoKTtcbiAgICB9O1xuICB9KShuYW1lKTtcblxubW9kdWxlLmV4cG9ydHMgPSBFcnJvcjtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGV4dGVuZCAgPSByZXF1aXJlKCcuLi91dGlsL2V4dGVuZCcpLFxuICAgIExvZ2dpbmcgPSByZXF1aXJlKCcuLi9taXhpbnMvbG9nZ2luZycpO1xuXG52YXIgRXh0ZW5zaWJsZSA9IHtcbiAgYWRkRXh0ZW5zaW9uOiBmdW5jdGlvbihleHRlbnNpb24pIHtcbiAgICB0aGlzLl9leHRlbnNpb25zID0gdGhpcy5fZXh0ZW5zaW9ucyB8fCBbXTtcbiAgICB0aGlzLl9leHRlbnNpb25zLnB1c2goZXh0ZW5zaW9uKTtcbiAgICBpZiAoZXh0ZW5zaW9uLmFkZGVkKSBleHRlbnNpb24uYWRkZWQodGhpcyk7XG4gIH0sXG5cbiAgcmVtb3ZlRXh0ZW5zaW9uOiBmdW5jdGlvbihleHRlbnNpb24pIHtcbiAgICBpZiAoIXRoaXMuX2V4dGVuc2lvbnMpIHJldHVybjtcbiAgICB2YXIgaSA9IHRoaXMuX2V4dGVuc2lvbnMubGVuZ3RoO1xuICAgIHdoaWxlIChpLS0pIHtcbiAgICAgIGlmICh0aGlzLl9leHRlbnNpb25zW2ldICE9PSBleHRlbnNpb24pIGNvbnRpbnVlO1xuICAgICAgdGhpcy5fZXh0ZW5zaW9ucy5zcGxpY2UoaSwxKTtcbiAgICAgIGlmIChleHRlbnNpb24ucmVtb3ZlZCkgZXh0ZW5zaW9uLnJlbW92ZWQodGhpcyk7XG4gICAgfVxuICB9LFxuXG4gIHBpcGVUaHJvdWdoRXh0ZW5zaW9uczogZnVuY3Rpb24oc3RhZ2UsIG1lc3NhZ2UsIHJlcXVlc3QsIGNhbGxiYWNrLCBjb250ZXh0KSB7XG4gICAgdGhpcy5kZWJ1ZygnUGFzc2luZyB0aHJvdWdoID8gZXh0ZW5zaW9uczogPycsIHN0YWdlLCBtZXNzYWdlKTtcblxuICAgIGlmICghdGhpcy5fZXh0ZW5zaW9ucykgcmV0dXJuIGNhbGxiYWNrLmNhbGwoY29udGV4dCwgbWVzc2FnZSk7XG4gICAgdmFyIGV4dGVuc2lvbnMgPSB0aGlzLl9leHRlbnNpb25zLnNsaWNlKCk7XG5cbiAgICB2YXIgcGlwZSA9IGZ1bmN0aW9uKG1lc3NhZ2UpIHtcbiAgICAgIGlmICghbWVzc2FnZSkgcmV0dXJuIGNhbGxiYWNrLmNhbGwoY29udGV4dCwgbWVzc2FnZSk7XG5cbiAgICAgIHZhciBleHRlbnNpb24gPSBleHRlbnNpb25zLnNoaWZ0KCk7XG4gICAgICBpZiAoIWV4dGVuc2lvbikgcmV0dXJuIGNhbGxiYWNrLmNhbGwoY29udGV4dCwgbWVzc2FnZSk7XG5cbiAgICAgIHZhciBmbiA9IGV4dGVuc2lvbltzdGFnZV07XG4gICAgICBpZiAoIWZuKSByZXR1cm4gcGlwZShtZXNzYWdlKTtcblxuICAgICAgaWYgKGZuLmxlbmd0aCA+PSAzKSBleHRlbnNpb25bc3RhZ2VdKG1lc3NhZ2UsIHJlcXVlc3QsIHBpcGUpO1xuICAgICAgZWxzZSAgICAgICAgICAgICAgICBleHRlbnNpb25bc3RhZ2VdKG1lc3NhZ2UsIHBpcGUpO1xuICAgIH07XG4gICAgcGlwZShtZXNzYWdlKTtcbiAgfVxufTtcblxuZXh0ZW5kKEV4dGVuc2libGUsIExvZ2dpbmcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEV4dGVuc2libGU7XG4iLCIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBDSEFOTkVMX05BTUU6ICAgICAvXlxcLygoKChbYS16XXxbQS1aXSl8WzAtOV0pfChcXC18XFxffFxcIXxcXH58XFwofFxcKXxcXCR8XFxAKSkpKyhcXC8oKCgoW2Etel18W0EtWl0pfFswLTldKXwoXFwtfFxcX3xcXCF8XFx+fFxcKHxcXCl8XFwkfFxcQCkpKSspKiQvLFxuICBDSEFOTkVMX1BBVFRFUk46ICAvXihcXC8oKCgoW2Etel18W0EtWl0pfFswLTldKXwoXFwtfFxcX3xcXCF8XFx+fFxcKHxcXCl8XFwkfFxcQCkpKSspKlxcL1xcKnsxLDJ9JC8sXG4gIEVSUk9SOiAgICAgICAgICAgIC9eKFswLTldWzAtOV1bMC05XTooKCgoW2Etel18W0EtWl0pfFswLTldKXwoXFwtfFxcX3xcXCF8XFx+fFxcKHxcXCl8XFwkfFxcQCl8IHxcXC98XFwqfFxcLikpKigsKCgoKFthLXpdfFtBLVpdKXxbMC05XSl8KFxcLXxcXF98XFwhfFxcfnxcXCh8XFwpfFxcJHxcXEApfCB8XFwvfFxcKnxcXC4pKSopKjooKCgoW2Etel18W0EtWl0pfFswLTldKXwoXFwtfFxcX3xcXCF8XFx+fFxcKHxcXCl8XFwkfFxcQCl8IHxcXC98XFwqfFxcLikpKnxbMC05XVswLTldWzAtOV06OigoKChbYS16XXxbQS1aXSl8WzAtOV0pfChcXC18XFxffFxcIXxcXH58XFwofFxcKXxcXCR8XFxAKXwgfFxcL3xcXCp8XFwuKSkqKSQvLFxuICBWRVJTSU9OOiAgICAgICAgICAvXihbMC05XSkrKFxcLigoW2Etel18W0EtWl0pfFswLTldKSgoKChbYS16XXxbQS1aXSl8WzAtOV0pfFxcLXxcXF8pKSopKiQvXG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgQ2xhc3MgICAgICA9IHJlcXVpcmUoJy4uL3V0aWwvY2xhc3MnKSxcbiAgICBEZWZlcnJhYmxlID0gcmVxdWlyZSgnLi4vbWl4aW5zL2RlZmVycmFibGUnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBDbGFzcyhEZWZlcnJhYmxlKTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGV4dGVuZCA9IHJlcXVpcmUoJy4uL3V0aWwvZXh0ZW5kJyk7XG5cbnZhciBTY2hlZHVsZXIgPSBmdW5jdGlvbihtZXNzYWdlLCBvcHRpb25zKSB7XG4gIHRoaXMubWVzc2FnZSAgPSBtZXNzYWdlO1xuICB0aGlzLm9wdGlvbnMgID0gb3B0aW9ucztcbiAgdGhpcy5hdHRlbXB0cyA9IDA7XG59O1xuXG5leHRlbmQoU2NoZWR1bGVyLnByb3RvdHlwZSwge1xuICBnZXRUaW1lb3V0OiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5vcHRpb25zLnRpbWVvdXQ7XG4gIH0sXG5cbiAgZ2V0SW50ZXJ2YWw6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLm9wdGlvbnMuaW50ZXJ2YWw7XG4gIH0sXG5cbiAgaXNEZWxpdmVyYWJsZTogZnVuY3Rpb24oKSB7XG4gICAgdmFyIGF0dGVtcHRzID0gdGhpcy5vcHRpb25zLmF0dGVtcHRzLFxuICAgICAgICBtYWRlICAgICA9IHRoaXMuYXR0ZW1wdHMsXG4gICAgICAgIGRlYWRsaW5lID0gdGhpcy5vcHRpb25zLmRlYWRsaW5lLFxuICAgICAgICBub3cgICAgICA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuXG4gICAgaWYgKGF0dGVtcHRzICE9PSB1bmRlZmluZWQgJiYgbWFkZSA+PSBhdHRlbXB0cylcbiAgICAgIHJldHVybiBmYWxzZTtcblxuICAgIGlmIChkZWFkbGluZSAhPT0gdW5kZWZpbmVkICYmIG5vdyA+IGRlYWRsaW5lKVxuICAgICAgcmV0dXJuIGZhbHNlO1xuXG4gICAgcmV0dXJuIHRydWU7XG4gIH0sXG5cbiAgc2VuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5hdHRlbXB0cyArPSAxO1xuICB9LFxuXG4gIHN1Y2NlZWQ6IGZ1bmN0aW9uKCkge30sXG5cbiAgZmFpbDogZnVuY3Rpb24oKSB7fSxcblxuICBhYm9ydDogZnVuY3Rpb24oKSB7fVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gU2NoZWR1bGVyO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgQ2xhc3MgICAgICA9IHJlcXVpcmUoJy4uL3V0aWwvY2xhc3MnKSxcbiAgICBleHRlbmQgICAgID0gcmVxdWlyZSgnLi4vdXRpbC9leHRlbmQnKSxcbiAgICBEZWZlcnJhYmxlID0gcmVxdWlyZSgnLi4vbWl4aW5zL2RlZmVycmFibGUnKTtcblxudmFyIFN1YnNjcmlwdGlvbiA9IENsYXNzKHtcbiAgaW5pdGlhbGl6ZTogZnVuY3Rpb24oY2xpZW50LCBjaGFubmVscywgY2FsbGJhY2ssIGNvbnRleHQpIHtcbiAgICB0aGlzLl9jbGllbnQgICAgPSBjbGllbnQ7XG4gICAgdGhpcy5fY2hhbm5lbHMgID0gY2hhbm5lbHM7XG4gICAgdGhpcy5fY2FsbGJhY2sgID0gY2FsbGJhY2s7XG4gICAgdGhpcy5fY29udGV4dCAgID0gY29udGV4dDtcbiAgICB0aGlzLl9jYW5jZWxsZWQgPSBmYWxzZTtcbiAgfSxcblxuICB3aXRoQ2hhbm5lbDogZnVuY3Rpb24oY2FsbGJhY2ssIGNvbnRleHQpIHtcbiAgICB0aGlzLl93aXRoQ2hhbm5lbCA9IFtjYWxsYmFjaywgY29udGV4dF07XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG5cbiAgYXBwbHk6IGZ1bmN0aW9uKGNvbnRleHQsIGFyZ3MpIHtcbiAgICB2YXIgbWVzc2FnZSA9IGFyZ3NbMF07XG5cbiAgICBpZiAodGhpcy5fY2FsbGJhY2spXG4gICAgICB0aGlzLl9jYWxsYmFjay5jYWxsKHRoaXMuX2NvbnRleHQsIG1lc3NhZ2UuZGF0YSk7XG5cbiAgICBpZiAodGhpcy5fd2l0aENoYW5uZWwpXG4gICAgICB0aGlzLl93aXRoQ2hhbm5lbFswXS5jYWxsKHRoaXMuX3dpdGhDaGFubmVsWzFdLCBtZXNzYWdlLmNoYW5uZWwsIG1lc3NhZ2UuZGF0YSk7XG4gIH0sXG5cbiAgY2FuY2VsOiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5fY2FuY2VsbGVkKSByZXR1cm47XG4gICAgdGhpcy5fY2xpZW50LnVuc3Vic2NyaWJlKHRoaXMuX2NoYW5uZWxzLCB0aGlzKTtcbiAgICB0aGlzLl9jYW5jZWxsZWQgPSB0cnVlO1xuICB9LFxuXG4gIHVuc3Vic2NyaWJlOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLmNhbmNlbCgpO1xuICB9XG59KTtcblxuZXh0ZW5kKFN1YnNjcmlwdGlvbi5wcm90b3R5cGUsIERlZmVycmFibGUpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFN1YnNjcmlwdGlvbjtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIFRyYW5zcG9ydCA9IHJlcXVpcmUoJy4vdHJhbnNwb3J0Jyk7XG5cblRyYW5zcG9ydC5yZWdpc3Rlcignd2Vic29ja2V0JywgcmVxdWlyZSgnLi93ZWJfc29ja2V0JykpO1xuVHJhbnNwb3J0LnJlZ2lzdGVyKCdldmVudHNvdXJjZScsIHJlcXVpcmUoJy4vZXZlbnRfc291cmNlJykpO1xuVHJhbnNwb3J0LnJlZ2lzdGVyKCdsb25nLXBvbGxpbmcnLCByZXF1aXJlKCcuL3hocicpKTtcblRyYW5zcG9ydC5yZWdpc3RlcignY3Jvc3Mtb3JpZ2luLWxvbmctcG9sbGluZycsIHJlcXVpcmUoJy4vY29ycycpKTtcblRyYW5zcG9ydC5yZWdpc3RlcignY2FsbGJhY2stcG9sbGluZycsIHJlcXVpcmUoJy4vanNvbnAnKSk7XG5cbm1vZHVsZS5leHBvcnRzID0gVHJhbnNwb3J0O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgQ2xhc3MgICAgID0gcmVxdWlyZSgnLi4vdXRpbC9jbGFzcycpLFxuICAgIFNldCAgICAgICA9IHJlcXVpcmUoJy4uL3V0aWwvc2V0JyksXG4gICAgVVJJICAgICAgID0gcmVxdWlyZSgnLi4vdXRpbC91cmknKSxcbiAgICBleHRlbmQgICAgPSByZXF1aXJlKCcuLi91dGlsL2V4dGVuZCcpLFxuICAgIHRvSlNPTiAgICA9IHJlcXVpcmUoJy4uL3V0aWwvdG9fanNvbicpLFxuICAgIFRyYW5zcG9ydCA9IHJlcXVpcmUoJy4vdHJhbnNwb3J0Jyk7XG5cbnZhciBDT1JTID0gZXh0ZW5kKENsYXNzKFRyYW5zcG9ydCwge1xuICBlbmNvZGU6IGZ1bmN0aW9uKG1lc3NhZ2VzKSB7XG4gICAgcmV0dXJuICdtZXNzYWdlPScgKyBlbmNvZGVVUklDb21wb25lbnQodG9KU09OKG1lc3NhZ2VzKSk7XG4gIH0sXG5cbiAgcmVxdWVzdDogZnVuY3Rpb24obWVzc2FnZXMpIHtcbiAgICB2YXIgeGhyQ2xhc3MgPSBnbG9iYWwuWERvbWFpblJlcXVlc3QgPyBYRG9tYWluUmVxdWVzdCA6IFhNTEh0dHBSZXF1ZXN0LFxuICAgICAgICB4aHIgICAgICA9IG5ldyB4aHJDbGFzcygpLFxuICAgICAgICBpZCAgICAgICA9ICsrQ09SUy5faWQsXG4gICAgICAgIGhlYWRlcnMgID0gdGhpcy5fZGlzcGF0Y2hlci5oZWFkZXJzLFxuICAgICAgICBzZWxmICAgICA9IHRoaXMsXG4gICAgICAgIGtleTtcblxuICAgIHhoci5vcGVuKCdQT1NUJywgVVJJLnN0cmluZ2lmeSh0aGlzLmVuZHBvaW50KSwgdHJ1ZSk7XG5cbiAgICBpZiAoeGhyLnNldFJlcXVlc3RIZWFkZXIpIHtcbiAgICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKCdQcmFnbWEnLCAnbm8tY2FjaGUnKTtcbiAgICAgIGZvciAoa2V5IGluIGhlYWRlcnMpIHtcbiAgICAgICAgaWYgKCFoZWFkZXJzLmhhc093blByb3BlcnR5KGtleSkpIGNvbnRpbnVlO1xuICAgICAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcihrZXksIGhlYWRlcnNba2V5XSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGNsZWFuVXAgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmICgheGhyKSByZXR1cm4gZmFsc2U7XG4gICAgICBDT1JTLl9wZW5kaW5nLnJlbW92ZShpZCk7XG4gICAgICB4aHIub25sb2FkID0geGhyLm9uZXJyb3IgPSB4aHIub250aW1lb3V0ID0geGhyLm9ucHJvZ3Jlc3MgPSBudWxsO1xuICAgICAgeGhyID0gbnVsbDtcbiAgICB9O1xuXG4gICAgeGhyLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHJlcGxpZXM7XG4gICAgICB0cnkgeyByZXBsaWVzID0gSlNPTi5wYXJzZSh4aHIucmVzcG9uc2VUZXh0KSB9IGNhdGNoIChlcnJvcikge31cblxuICAgICAgY2xlYW5VcCgpO1xuXG4gICAgICBpZiAocmVwbGllcylcbiAgICAgICAgc2VsZi5fcmVjZWl2ZShyZXBsaWVzKTtcbiAgICAgIGVsc2VcbiAgICAgICAgc2VsZi5faGFuZGxlRXJyb3IobWVzc2FnZXMpO1xuICAgIH07XG5cbiAgICB4aHIub25lcnJvciA9IHhoci5vbnRpbWVvdXQgPSBmdW5jdGlvbigpIHtcbiAgICAgIGNsZWFuVXAoKTtcbiAgICAgIHNlbGYuX2hhbmRsZUVycm9yKG1lc3NhZ2VzKTtcbiAgICB9O1xuXG4gICAgeGhyLm9ucHJvZ3Jlc3MgPSBmdW5jdGlvbigpIHt9O1xuXG4gICAgaWYgKHhockNsYXNzID09PSBnbG9iYWwuWERvbWFpblJlcXVlc3QpXG4gICAgICBDT1JTLl9wZW5kaW5nLmFkZCh7aWQ6IGlkLCB4aHI6IHhocn0pO1xuXG4gICAgeGhyLnNlbmQodGhpcy5lbmNvZGUobWVzc2FnZXMpKTtcbiAgICByZXR1cm4geGhyO1xuICB9XG59KSwge1xuICBfaWQ6ICAgICAgMCxcbiAgX3BlbmRpbmc6IG5ldyBTZXQoKSxcblxuICBpc1VzYWJsZTogZnVuY3Rpb24oZGlzcGF0Y2hlciwgZW5kcG9pbnQsIGNhbGxiYWNrLCBjb250ZXh0KSB7XG4gICAgaWYgKFVSSS5pc1NhbWVPcmlnaW4oZW5kcG9pbnQpKVxuICAgICAgcmV0dXJuIGNhbGxiYWNrLmNhbGwoY29udGV4dCwgZmFsc2UpO1xuXG4gICAgaWYgKGdsb2JhbC5YRG9tYWluUmVxdWVzdClcbiAgICAgIHJldHVybiBjYWxsYmFjay5jYWxsKGNvbnRleHQsIGVuZHBvaW50LnByb3RvY29sID09PSBsb2NhdGlvbi5wcm90b2NvbCk7XG5cbiAgICBpZiAoZ2xvYmFsLlhNTEh0dHBSZXF1ZXN0KSB7XG4gICAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgICByZXR1cm4gY2FsbGJhY2suY2FsbChjb250ZXh0LCB4aHIud2l0aENyZWRlbnRpYWxzICE9PSB1bmRlZmluZWQpO1xuICAgIH1cbiAgICByZXR1cm4gY2FsbGJhY2suY2FsbChjb250ZXh0LCBmYWxzZSk7XG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENPUlM7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBDbGFzcyAgICAgID0gcmVxdWlyZSgnLi4vdXRpbC9jbGFzcycpLFxuICAgIFVSSSAgICAgICAgPSByZXF1aXJlKCcuLi91dGlsL3VyaScpLFxuICAgIGNvcHlPYmplY3QgPSByZXF1aXJlKCcuLi91dGlsL2NvcHlfb2JqZWN0JyksXG4gICAgZXh0ZW5kICAgICA9IHJlcXVpcmUoJy4uL3V0aWwvZXh0ZW5kJyksXG4gICAgRGVmZXJyYWJsZSA9IHJlcXVpcmUoJy4uL21peGlucy9kZWZlcnJhYmxlJyksXG4gICAgVHJhbnNwb3J0ICA9IHJlcXVpcmUoJy4vdHJhbnNwb3J0JyksXG4gICAgWEhSICAgICAgICA9IHJlcXVpcmUoJy4veGhyJyk7XG5cbnZhciBFdmVudFNvdXJjZSA9IGV4dGVuZChDbGFzcyhUcmFuc3BvcnQsIHtcbiAgaW5pdGlhbGl6ZTogZnVuY3Rpb24oZGlzcGF0Y2hlciwgZW5kcG9pbnQpIHtcbiAgICBUcmFuc3BvcnQucHJvdG90eXBlLmluaXRpYWxpemUuY2FsbCh0aGlzLCBkaXNwYXRjaGVyLCBlbmRwb2ludCk7XG4gICAgaWYgKCFnbG9iYWwuRXZlbnRTb3VyY2UpIHJldHVybiB0aGlzLnNldERlZmVycmVkU3RhdHVzKCdmYWlsZWQnKTtcblxuICAgIHRoaXMuX3hociA9IG5ldyBYSFIoZGlzcGF0Y2hlciwgZW5kcG9pbnQpO1xuXG4gICAgZW5kcG9pbnQgPSBjb3B5T2JqZWN0KGVuZHBvaW50KTtcbiAgICBlbmRwb2ludC5wYXRobmFtZSArPSAnLycgKyBkaXNwYXRjaGVyLmNsaWVudElkO1xuXG4gICAgdmFyIHNvY2tldCA9IG5ldyBnbG9iYWwuRXZlbnRTb3VyY2UoVVJJLnN0cmluZ2lmeShlbmRwb2ludCkpLFxuICAgICAgICBzZWxmICAgPSB0aGlzO1xuXG4gICAgc29ja2V0Lm9ub3BlbiA9IGZ1bmN0aW9uKCkge1xuICAgICAgc2VsZi5fZXZlckNvbm5lY3RlZCA9IHRydWU7XG4gICAgICBzZWxmLnNldERlZmVycmVkU3RhdHVzKCdzdWNjZWVkZWQnKTtcbiAgICB9O1xuXG4gICAgc29ja2V0Lm9uZXJyb3IgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmIChzZWxmLl9ldmVyQ29ubmVjdGVkKSB7XG4gICAgICAgIHNlbGYuX2hhbmRsZUVycm9yKFtdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNlbGYuc2V0RGVmZXJyZWRTdGF0dXMoJ2ZhaWxlZCcpO1xuICAgICAgICBzb2NrZXQuY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgc29ja2V0Lm9ubWVzc2FnZSA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICB2YXIgcmVwbGllcztcbiAgICAgIHRyeSB7IHJlcGxpZXMgPSBKU09OLnBhcnNlKGV2ZW50LmRhdGEpIH0gY2F0Y2ggKGVycm9yKSB7fVxuXG4gICAgICBpZiAocmVwbGllcylcbiAgICAgICAgc2VsZi5fcmVjZWl2ZShyZXBsaWVzKTtcbiAgICAgIGVsc2VcbiAgICAgICAgc2VsZi5faGFuZGxlRXJyb3IoW10pO1xuICAgIH07XG5cbiAgICB0aGlzLl9zb2NrZXQgPSBzb2NrZXQ7XG4gIH0sXG5cbiAgY2xvc2U6IGZ1bmN0aW9uKCkge1xuICAgIGlmICghdGhpcy5fc29ja2V0KSByZXR1cm47XG4gICAgdGhpcy5fc29ja2V0Lm9ub3BlbiA9IHRoaXMuX3NvY2tldC5vbmVycm9yID0gdGhpcy5fc29ja2V0Lm9ubWVzc2FnZSA9IG51bGw7XG4gICAgdGhpcy5fc29ja2V0LmNsb3NlKCk7XG4gICAgZGVsZXRlIHRoaXMuX3NvY2tldDtcbiAgfSxcblxuICBpc1VzYWJsZTogZnVuY3Rpb24oY2FsbGJhY2ssIGNvbnRleHQpIHtcbiAgICB0aGlzLmNhbGxiYWNrKGZ1bmN0aW9uKCkgeyBjYWxsYmFjay5jYWxsKGNvbnRleHQsIHRydWUpIH0pO1xuICAgIHRoaXMuZXJyYmFjayhmdW5jdGlvbigpIHsgY2FsbGJhY2suY2FsbChjb250ZXh0LCBmYWxzZSkgfSk7XG4gIH0sXG5cbiAgZW5jb2RlOiBmdW5jdGlvbihtZXNzYWdlcykge1xuICAgIHJldHVybiB0aGlzLl94aHIuZW5jb2RlKG1lc3NhZ2VzKTtcbiAgfSxcblxuICByZXF1ZXN0OiBmdW5jdGlvbihtZXNzYWdlcykge1xuICAgIHJldHVybiB0aGlzLl94aHIucmVxdWVzdChtZXNzYWdlcyk7XG4gIH1cblxufSksIHtcbiAgaXNVc2FibGU6IGZ1bmN0aW9uKGRpc3BhdGNoZXIsIGVuZHBvaW50LCBjYWxsYmFjaywgY29udGV4dCkge1xuICAgIHZhciBpZCA9IGRpc3BhdGNoZXIuY2xpZW50SWQ7XG4gICAgaWYgKCFpZCkgcmV0dXJuIGNhbGxiYWNrLmNhbGwoY29udGV4dCwgZmFsc2UpO1xuXG4gICAgWEhSLmlzVXNhYmxlKGRpc3BhdGNoZXIsIGVuZHBvaW50LCBmdW5jdGlvbih1c2FibGUpIHtcbiAgICAgIGlmICghdXNhYmxlKSByZXR1cm4gY2FsbGJhY2suY2FsbChjb250ZXh0LCBmYWxzZSk7XG4gICAgICB0aGlzLmNyZWF0ZShkaXNwYXRjaGVyLCBlbmRwb2ludCkuaXNVc2FibGUoY2FsbGJhY2ssIGNvbnRleHQpO1xuICAgIH0sIHRoaXMpO1xuICB9LFxuXG4gIGNyZWF0ZTogZnVuY3Rpb24oZGlzcGF0Y2hlciwgZW5kcG9pbnQpIHtcbiAgICB2YXIgc29ja2V0cyA9IGRpc3BhdGNoZXIudHJhbnNwb3J0cy5ldmVudHNvdXJjZSA9IGRpc3BhdGNoZXIudHJhbnNwb3J0cy5ldmVudHNvdXJjZSB8fCB7fSxcbiAgICAgICAgaWQgICAgICA9IGRpc3BhdGNoZXIuY2xpZW50SWQ7XG5cbiAgICB2YXIgdXJsID0gY29weU9iamVjdChlbmRwb2ludCk7XG4gICAgdXJsLnBhdGhuYW1lICs9ICcvJyArIChpZCB8fCAnJyk7XG4gICAgdXJsID0gVVJJLnN0cmluZ2lmeSh1cmwpO1xuXG4gICAgc29ja2V0c1t1cmxdID0gc29ja2V0c1t1cmxdIHx8IG5ldyB0aGlzKGRpc3BhdGNoZXIsIGVuZHBvaW50KTtcbiAgICByZXR1cm4gc29ja2V0c1t1cmxdO1xuICB9XG59KTtcblxuZXh0ZW5kKEV2ZW50U291cmNlLnByb3RvdHlwZSwgRGVmZXJyYWJsZSk7XG5cbm1vZHVsZS5leHBvcnRzID0gRXZlbnRTb3VyY2U7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBDbGFzcyAgICAgID0gcmVxdWlyZSgnLi4vdXRpbC9jbGFzcycpLFxuICAgIFVSSSAgICAgICAgPSByZXF1aXJlKCcuLi91dGlsL3VyaScpLFxuICAgIGNvcHlPYmplY3QgPSByZXF1aXJlKCcuLi91dGlsL2NvcHlfb2JqZWN0JyksXG4gICAgZXh0ZW5kICAgICA9IHJlcXVpcmUoJy4uL3V0aWwvZXh0ZW5kJyksXG4gICAgdG9KU09OICAgICA9IHJlcXVpcmUoJy4uL3V0aWwvdG9fanNvbicpLFxuICAgIFRyYW5zcG9ydCAgPSByZXF1aXJlKCcuL3RyYW5zcG9ydCcpO1xuXG52YXIgSlNPTlAgPSBleHRlbmQoQ2xhc3MoVHJhbnNwb3J0LCB7XG4gZW5jb2RlOiBmdW5jdGlvbihtZXNzYWdlcykge1xuICAgIHZhciB1cmwgPSBjb3B5T2JqZWN0KHRoaXMuZW5kcG9pbnQpO1xuICAgIHVybC5xdWVyeS5tZXNzYWdlID0gdG9KU09OKG1lc3NhZ2VzKTtcbiAgICB1cmwucXVlcnkuanNvbnAgICA9ICdfX2pzb25wJyArIEpTT05QLl9jYkNvdW50ICsgJ19fJztcbiAgICByZXR1cm4gVVJJLnN0cmluZ2lmeSh1cmwpO1xuICB9LFxuXG4gIHJlcXVlc3Q6IGZ1bmN0aW9uKG1lc3NhZ2VzKSB7XG4gICAgdmFyIGhlYWQgICAgICAgICA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF0sXG4gICAgICAgIHNjcmlwdCAgICAgICA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpLFxuICAgICAgICBjYWxsYmFja05hbWUgPSBKU09OUC5nZXRDYWxsYmFja05hbWUoKSxcbiAgICAgICAgZW5kcG9pbnQgICAgID0gY29weU9iamVjdCh0aGlzLmVuZHBvaW50KSxcbiAgICAgICAgc2VsZiAgICAgICAgID0gdGhpcztcblxuICAgIGVuZHBvaW50LnF1ZXJ5Lm1lc3NhZ2UgPSB0b0pTT04obWVzc2FnZXMpO1xuICAgIGVuZHBvaW50LnF1ZXJ5Lmpzb25wICAgPSBjYWxsYmFja05hbWU7XG5cbiAgICB2YXIgY2xlYW51cCA9IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKCFnbG9iYWxbY2FsbGJhY2tOYW1lXSkgcmV0dXJuIGZhbHNlO1xuICAgICAgZ2xvYmFsW2NhbGxiYWNrTmFtZV0gPSB1bmRlZmluZWQ7XG4gICAgICB0cnkgeyBkZWxldGUgZ2xvYmFsW2NhbGxiYWNrTmFtZV0gfSBjYXRjaCAoZXJyb3IpIHt9XG4gICAgICBzY3JpcHQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzY3JpcHQpO1xuICAgIH07XG5cbiAgICBnbG9iYWxbY2FsbGJhY2tOYW1lXSA9IGZ1bmN0aW9uKHJlcGxpZXMpIHtcbiAgICAgIGNsZWFudXAoKTtcbiAgICAgIHNlbGYuX3JlY2VpdmUocmVwbGllcyk7XG4gICAgfTtcblxuICAgIHNjcmlwdC50eXBlID0gJ3RleHQvamF2YXNjcmlwdCc7XG4gICAgc2NyaXB0LnNyYyAgPSBVUkkuc3RyaW5naWZ5KGVuZHBvaW50KTtcbiAgICBoZWFkLmFwcGVuZENoaWxkKHNjcmlwdCk7XG5cbiAgICBzY3JpcHQub25lcnJvciA9IGZ1bmN0aW9uKCkge1xuICAgICAgY2xlYW51cCgpO1xuICAgICAgc2VsZi5faGFuZGxlRXJyb3IobWVzc2FnZXMpO1xuICAgIH07XG5cbiAgICByZXR1cm4ge2Fib3J0OiBjbGVhbnVwfTtcbiAgfVxufSksIHtcbiAgX2NiQ291bnQ6IDAsXG5cbiAgZ2V0Q2FsbGJhY2tOYW1lOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9jYkNvdW50ICs9IDE7XG4gICAgcmV0dXJuICdfX2pzb25wJyArIHRoaXMuX2NiQ291bnQgKyAnX18nO1xuICB9LFxuXG4gIGlzVXNhYmxlOiBmdW5jdGlvbihkaXNwYXRjaGVyLCBlbmRwb2ludCwgY2FsbGJhY2ssIGNvbnRleHQpIHtcbiAgICBjYWxsYmFjay5jYWxsKGNvbnRleHQsIHRydWUpO1xuICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBKU09OUDtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIENsYXNzICAgID0gcmVxdWlyZSgnLi4vdXRpbC9jbGFzcycpLFxuICAgIENvb2tpZSAgID0gcmVxdWlyZSgnLi4vdXRpbC9jb29raWVzJykuQ29va2llLFxuICAgIFByb21pc2UgID0gcmVxdWlyZSgnLi4vdXRpbC9wcm9taXNlJyksXG4gICAgVVJJICAgICAgPSByZXF1aXJlKCcuLi91dGlsL3VyaScpLFxuICAgIGFycmF5ICAgID0gcmVxdWlyZSgnLi4vdXRpbC9hcnJheScpLFxuICAgIGV4dGVuZCAgID0gcmVxdWlyZSgnLi4vdXRpbC9leHRlbmQnKSxcbiAgICBMb2dnaW5nICA9IHJlcXVpcmUoJy4uL21peGlucy9sb2dnaW5nJyksXG4gICAgVGltZW91dHMgPSByZXF1aXJlKCcuLi9taXhpbnMvdGltZW91dHMnKSxcbiAgICBDaGFubmVsICA9IHJlcXVpcmUoJy4uL3Byb3RvY29sL2NoYW5uZWwnKTtcblxudmFyIFRyYW5zcG9ydCA9IGV4dGVuZChDbGFzcyh7IGNsYXNzTmFtZTogJ1RyYW5zcG9ydCcsXG4gIERFRkFVTFRfUE9SVFM6IHsnaHR0cDonOiA4MCwgJ2h0dHBzOic6IDQ0MywgJ3dzOic6IDgwLCAnd3NzOic6IDQ0M30sXG4gIE1BWF9ERUxBWTogICAgIDAsXG5cbiAgYmF0Y2hpbmc6ICB0cnVlLFxuXG4gIGluaXRpYWxpemU6IGZ1bmN0aW9uKGRpc3BhdGNoZXIsIGVuZHBvaW50KSB7XG4gICAgdGhpcy5fZGlzcGF0Y2hlciA9IGRpc3BhdGNoZXI7XG4gICAgdGhpcy5lbmRwb2ludCAgICA9IGVuZHBvaW50O1xuICAgIHRoaXMuX291dGJveCAgICAgPSBbXTtcbiAgICB0aGlzLl9wcm94eSAgICAgID0gZXh0ZW5kKHt9LCB0aGlzLl9kaXNwYXRjaGVyLnByb3h5KTtcblxuICAgIGlmICghdGhpcy5fcHJveHkub3JpZ2luKVxuICAgICAgdGhpcy5fcHJveHkub3JpZ2luID0gdGhpcy5fZmluZFByb3h5KCk7XG4gIH0sXG5cbiAgY2xvc2U6IGZ1bmN0aW9uKCkge30sXG5cbiAgZW5jb2RlOiBmdW5jdGlvbihtZXNzYWdlcykge1xuICAgIHJldHVybiAnJztcbiAgfSxcblxuICBzZW5kTWVzc2FnZTogZnVuY3Rpb24obWVzc2FnZSkge1xuICAgIHRoaXMuZGVidWcoJ0NsaWVudCA/IHNlbmRpbmcgbWVzc2FnZSB0byA/OiA/JyxcbiAgICAgICAgICAgICAgIHRoaXMuX2Rpc3BhdGNoZXIuY2xpZW50SWQsIFVSSS5zdHJpbmdpZnkodGhpcy5lbmRwb2ludCksIG1lc3NhZ2UpO1xuXG4gICAgaWYgKCF0aGlzLmJhdGNoaW5nKSByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMucmVxdWVzdChbbWVzc2FnZV0pKTtcblxuICAgIHRoaXMuX291dGJveC5wdXNoKG1lc3NhZ2UpO1xuICAgIHRoaXMuX2ZsdXNoTGFyZ2VCYXRjaCgpO1xuXG4gICAgaWYgKG1lc3NhZ2UuY2hhbm5lbCA9PT0gQ2hhbm5lbC5IQU5EU0hBS0UpXG4gICAgICByZXR1cm4gdGhpcy5fcHVibGlzaCgwLjAxKTtcblxuICAgIGlmIChtZXNzYWdlLmNoYW5uZWwgPT09IENoYW5uZWwuQ09OTkVDVClcbiAgICAgIHRoaXMuX2Nvbm5lY3RNZXNzYWdlID0gbWVzc2FnZTtcblxuICAgIHJldHVybiB0aGlzLl9wdWJsaXNoKHRoaXMuTUFYX0RFTEFZKTtcbiAgfSxcblxuICBfbWFrZVByb21pc2U6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBzZWxmID0gdGhpcztcblxuICAgIHRoaXMuX3JlcXVlc3RQcm9taXNlID0gdGhpcy5fcmVxdWVzdFByb21pc2UgfHwgbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSkge1xuICAgICAgc2VsZi5fcmVzb2x2ZVByb21pc2UgPSByZXNvbHZlO1xuICAgIH0pO1xuICB9LFxuXG4gIF9wdWJsaXNoOiBmdW5jdGlvbihkZWxheSkge1xuICAgIHRoaXMuX21ha2VQcm9taXNlKCk7XG5cbiAgICB0aGlzLmFkZFRpbWVvdXQoJ3B1Ymxpc2gnLCBkZWxheSwgZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLl9mbHVzaCgpO1xuICAgICAgZGVsZXRlIHRoaXMuX3JlcXVlc3RQcm9taXNlO1xuICAgIH0sIHRoaXMpO1xuXG4gICAgcmV0dXJuIHRoaXMuX3JlcXVlc3RQcm9taXNlO1xuICB9LFxuXG4gIF9mbHVzaDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5yZW1vdmVUaW1lb3V0KCdwdWJsaXNoJyk7XG5cbiAgICBpZiAodGhpcy5fb3V0Ym94Lmxlbmd0aCA+IDEgJiYgdGhpcy5fY29ubmVjdE1lc3NhZ2UpXG4gICAgICB0aGlzLl9jb25uZWN0TWVzc2FnZS5hZHZpY2UgPSB7dGltZW91dDogMH07XG5cbiAgICB0aGlzLl9yZXNvbHZlUHJvbWlzZSh0aGlzLnJlcXVlc3QodGhpcy5fb3V0Ym94KSk7XG5cbiAgICB0aGlzLl9jb25uZWN0TWVzc2FnZSA9IG51bGw7XG4gICAgdGhpcy5fb3V0Ym94ID0gW107XG4gIH0sXG5cbiAgX2ZsdXNoTGFyZ2VCYXRjaDogZnVuY3Rpb24oKSB7XG4gICAgdmFyIHN0cmluZyA9IHRoaXMuZW5jb2RlKHRoaXMuX291dGJveCk7XG4gICAgaWYgKHN0cmluZy5sZW5ndGggPCB0aGlzLl9kaXNwYXRjaGVyLm1heFJlcXVlc3RTaXplKSByZXR1cm47XG4gICAgdmFyIGxhc3QgPSB0aGlzLl9vdXRib3gucG9wKCk7XG5cbiAgICB0aGlzLl9tYWtlUHJvbWlzZSgpO1xuICAgIHRoaXMuX2ZsdXNoKCk7XG5cbiAgICBpZiAobGFzdCkgdGhpcy5fb3V0Ym94LnB1c2gobGFzdCk7XG4gIH0sXG5cbiAgX3JlY2VpdmU6IGZ1bmN0aW9uKHJlcGxpZXMpIHtcbiAgICBpZiAoIXJlcGxpZXMpIHJldHVybjtcbiAgICByZXBsaWVzID0gW10uY29uY2F0KHJlcGxpZXMpO1xuXG4gICAgdGhpcy5kZWJ1ZygnQ2xpZW50ID8gcmVjZWl2ZWQgZnJvbSA/IHZpYSA/OiA/JyxcbiAgICAgICAgICAgICAgIHRoaXMuX2Rpc3BhdGNoZXIuY2xpZW50SWQsIFVSSS5zdHJpbmdpZnkodGhpcy5lbmRwb2ludCksIHRoaXMuY29ubmVjdGlvblR5cGUsIHJlcGxpZXMpO1xuXG4gICAgZm9yICh2YXIgaSA9IDAsIG4gPSByZXBsaWVzLmxlbmd0aDsgaSA8IG47IGkrKylcbiAgICAgIHRoaXMuX2Rpc3BhdGNoZXIuaGFuZGxlUmVzcG9uc2UocmVwbGllc1tpXSk7XG4gIH0sXG5cbiAgX2hhbmRsZUVycm9yOiBmdW5jdGlvbihtZXNzYWdlcywgaW1tZWRpYXRlKSB7XG4gICAgbWVzc2FnZXMgPSBbXS5jb25jYXQobWVzc2FnZXMpO1xuXG4gICAgdGhpcy5kZWJ1ZygnQ2xpZW50ID8gZmFpbGVkIHRvIHNlbmQgdG8gPyB2aWEgPzogPycsXG4gICAgICAgICAgICAgICB0aGlzLl9kaXNwYXRjaGVyLmNsaWVudElkLCBVUkkuc3RyaW5naWZ5KHRoaXMuZW5kcG9pbnQpLCB0aGlzLmNvbm5lY3Rpb25UeXBlLCBtZXNzYWdlcyk7XG5cbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IG1lc3NhZ2VzLmxlbmd0aDsgaSA8IG47IGkrKylcbiAgICAgIHRoaXMuX2Rpc3BhdGNoZXIuaGFuZGxlRXJyb3IobWVzc2FnZXNbaV0pO1xuICB9LFxuXG4gIF9nZXRDb29raWVzOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgY29va2llcyA9IHRoaXMuX2Rpc3BhdGNoZXIuY29va2llcyxcbiAgICAgICAgdXJsICAgICA9IFVSSS5zdHJpbmdpZnkodGhpcy5lbmRwb2ludCk7XG5cbiAgICBpZiAoIWNvb2tpZXMpIHJldHVybiAnJztcblxuICAgIHJldHVybiBhcnJheS5tYXAoY29va2llcy5nZXRDb29raWVzU3luYyh1cmwpLCBmdW5jdGlvbihjb29raWUpIHtcbiAgICAgIHJldHVybiBjb29raWUuY29va2llU3RyaW5nKCk7XG4gICAgfSkuam9pbignOyAnKTtcbiAgfSxcblxuICBfc3RvcmVDb29raWVzOiBmdW5jdGlvbihzZXRDb29raWUpIHtcbiAgICB2YXIgY29va2llcyA9IHRoaXMuX2Rpc3BhdGNoZXIuY29va2llcyxcbiAgICAgICAgdXJsICAgICA9IFVSSS5zdHJpbmdpZnkodGhpcy5lbmRwb2ludCksXG4gICAgICAgIGNvb2tpZTtcblxuICAgIGlmICghc2V0Q29va2llIHx8ICFjb29raWVzKSByZXR1cm47XG4gICAgc2V0Q29va2llID0gW10uY29uY2F0KHNldENvb2tpZSk7XG5cbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IHNldENvb2tpZS5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgIGNvb2tpZSA9IENvb2tpZS5wYXJzZShzZXRDb29raWVbaV0pO1xuICAgICAgY29va2llcy5zZXRDb29raWVTeW5jKGNvb2tpZSwgdXJsKTtcbiAgICB9XG4gIH0sXG5cbiAgX2ZpbmRQcm94eTogZnVuY3Rpb24oKSB7XG4gICAgaWYgKHR5cGVvZiBwcm9jZXNzID09PSAndW5kZWZpbmVkJykgcmV0dXJuIHVuZGVmaW5lZDtcblxuICAgIHZhciBwcm90b2NvbCA9IHRoaXMuZW5kcG9pbnQucHJvdG9jb2w7XG4gICAgaWYgKCFwcm90b2NvbCkgcmV0dXJuIHVuZGVmaW5lZDtcblxuICAgIHZhciBuYW1lICAgPSBwcm90b2NvbC5yZXBsYWNlKC86JC8sICcnKS50b0xvd2VyQ2FzZSgpICsgJ19wcm94eScsXG4gICAgICAgIHVwY2FzZSA9IG5hbWUudG9VcHBlckNhc2UoKSxcbiAgICAgICAgZW52ICAgID0gcHJvY2Vzcy5lbnYsXG4gICAgICAgIGtleXMsIHByb3h5O1xuXG4gICAgaWYgKG5hbWUgPT09ICdodHRwX3Byb3h5JyAmJiBlbnYuUkVRVUVTVF9NRVRIT0QpIHtcbiAgICAgIGtleXMgPSBPYmplY3Qua2V5cyhlbnYpLmZpbHRlcihmdW5jdGlvbihrKSB7IHJldHVybiAvXmh0dHBfcHJveHkkL2kudGVzdChrKSB9KTtcbiAgICAgIGlmIChrZXlzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICBpZiAoa2V5c1swXSA9PT0gbmFtZSAmJiBlbnZbdXBjYXNlXSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgIHByb3h5ID0gZW52W25hbWVdO1xuICAgICAgfSBlbHNlIGlmIChrZXlzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgcHJveHkgPSBlbnZbbmFtZV07XG4gICAgICB9XG4gICAgICBwcm94eSA9IHByb3h5IHx8IGVudlsnQ0dJXycgKyB1cGNhc2VdO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm94eSA9IGVudltuYW1lXSB8fCBlbnZbdXBjYXNlXTtcbiAgICAgIGlmIChwcm94eSAmJiAhZW52W25hbWVdKVxuICAgICAgICBjb25zb2xlLndhcm4oJ1RoZSBlbnZpcm9ubWVudCB2YXJpYWJsZSAnICsgdXBjYXNlICtcbiAgICAgICAgICAgICAgICAgICAgICcgaXMgZGlzY291cmFnZWQuIFVzZSAnICsgbmFtZSArICcuJyk7XG4gICAgfVxuICAgIHJldHVybiBwcm94eTtcbiAgfVxuXG59KSwge1xuICBnZXQ6IGZ1bmN0aW9uKGRpc3BhdGNoZXIsIGFsbG93ZWQsIGRpc2FibGVkLCBjYWxsYmFjaywgY29udGV4dCkge1xuICAgIHZhciBlbmRwb2ludCA9IGRpc3BhdGNoZXIuZW5kcG9pbnQ7XG5cbiAgICBhcnJheS5hc3luY0VhY2godGhpcy5fdHJhbnNwb3J0cywgZnVuY3Rpb24ocGFpciwgcmVzdW1lKSB7XG4gICAgICB2YXIgY29ublR5cGUgICAgID0gcGFpclswXSwga2xhc3MgPSBwYWlyWzFdLFxuICAgICAgICAgIGNvbm5FbmRwb2ludCA9IGRpc3BhdGNoZXIuZW5kcG9pbnRGb3IoY29ublR5cGUpO1xuXG4gICAgICBpZiAoYXJyYXkuaW5kZXhPZihkaXNhYmxlZCwgY29ublR5cGUpID49IDApXG4gICAgICAgIHJldHVybiByZXN1bWUoKTtcblxuICAgICAgaWYgKGFycmF5LmluZGV4T2YoYWxsb3dlZCwgY29ublR5cGUpIDwgMCkge1xuICAgICAgICBrbGFzcy5pc1VzYWJsZShkaXNwYXRjaGVyLCBjb25uRW5kcG9pbnQsIGZ1bmN0aW9uKCkge30pO1xuICAgICAgICByZXR1cm4gcmVzdW1lKCk7XG4gICAgICB9XG5cbiAgICAgIGtsYXNzLmlzVXNhYmxlKGRpc3BhdGNoZXIsIGNvbm5FbmRwb2ludCwgZnVuY3Rpb24oaXNVc2FibGUpIHtcbiAgICAgICAgaWYgKCFpc1VzYWJsZSkgcmV0dXJuIHJlc3VtZSgpO1xuICAgICAgICB2YXIgdHJhbnNwb3J0ID0ga2xhc3MuaGFzT3duUHJvcGVydHkoJ2NyZWF0ZScpID8ga2xhc3MuY3JlYXRlKGRpc3BhdGNoZXIsIGNvbm5FbmRwb2ludCkgOiBuZXcga2xhc3MoZGlzcGF0Y2hlciwgY29ubkVuZHBvaW50KTtcbiAgICAgICAgY2FsbGJhY2suY2FsbChjb250ZXh0LCB0cmFuc3BvcnQpO1xuICAgICAgfSk7XG4gICAgfSwgZnVuY3Rpb24oKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvdWxkIG5vdCBmaW5kIGEgdXNhYmxlIGNvbm5lY3Rpb24gdHlwZSBmb3IgJyArIFVSSS5zdHJpbmdpZnkoZW5kcG9pbnQpKTtcbiAgICB9KTtcbiAgfSxcblxuICByZWdpc3RlcjogZnVuY3Rpb24odHlwZSwga2xhc3MpIHtcbiAgICB0aGlzLl90cmFuc3BvcnRzLnB1c2goW3R5cGUsIGtsYXNzXSk7XG4gICAga2xhc3MucHJvdG90eXBlLmNvbm5lY3Rpb25UeXBlID0gdHlwZTtcbiAgfSxcblxuICBnZXRDb25uZWN0aW9uVHlwZXM6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBhcnJheS5tYXAodGhpcy5fdHJhbnNwb3J0cywgZnVuY3Rpb24odCkgeyByZXR1cm4gdFswXSB9KTtcbiAgfSxcblxuICBfdHJhbnNwb3J0czogW11cbn0pO1xuXG5leHRlbmQoVHJhbnNwb3J0LnByb3RvdHlwZSwgTG9nZ2luZyk7XG5leHRlbmQoVHJhbnNwb3J0LnByb3RvdHlwZSwgVGltZW91dHMpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFRyYW5zcG9ydDtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIENsYXNzICAgICAgPSByZXF1aXJlKCcuLi91dGlsL2NsYXNzJyksXG4gICAgUHJvbWlzZSAgICA9IHJlcXVpcmUoJy4uL3V0aWwvcHJvbWlzZScpLFxuICAgIFNldCAgICAgICAgPSByZXF1aXJlKCcuLi91dGlsL3NldCcpLFxuICAgIFVSSSAgICAgICAgPSByZXF1aXJlKCcuLi91dGlsL3VyaScpLFxuICAgIGJyb3dzZXIgICAgPSByZXF1aXJlKCcuLi91dGlsL2Jyb3dzZXInKSxcbiAgICBjb3B5T2JqZWN0ID0gcmVxdWlyZSgnLi4vdXRpbC9jb3B5X29iamVjdCcpLFxuICAgIGV4dGVuZCAgICAgPSByZXF1aXJlKCcuLi91dGlsL2V4dGVuZCcpLFxuICAgIHRvSlNPTiAgICAgPSByZXF1aXJlKCcuLi91dGlsL3RvX2pzb24nKSxcbiAgICB3cyAgICAgICAgID0gcmVxdWlyZSgnLi4vdXRpbC93ZWJzb2NrZXQnKSxcbiAgICBEZWZlcnJhYmxlID0gcmVxdWlyZSgnLi4vbWl4aW5zL2RlZmVycmFibGUnKSxcbiAgICBUcmFuc3BvcnQgID0gcmVxdWlyZSgnLi90cmFuc3BvcnQnKTtcblxudmFyIFdlYlNvY2tldCA9IGV4dGVuZChDbGFzcyhUcmFuc3BvcnQsIHtcbiAgVU5DT05ORUNURUQ6ICAxLFxuICBDT05ORUNUSU5HOiAgIDIsXG4gIENPTk5FQ1RFRDogICAgMyxcblxuICBiYXRjaGluZzogICAgIGZhbHNlLFxuXG4gIGlzVXNhYmxlOiBmdW5jdGlvbihjYWxsYmFjaywgY29udGV4dCkge1xuICAgIHRoaXMuY2FsbGJhY2soZnVuY3Rpb24oKSB7IGNhbGxiYWNrLmNhbGwoY29udGV4dCwgdHJ1ZSkgfSk7XG4gICAgdGhpcy5lcnJiYWNrKGZ1bmN0aW9uKCkgeyBjYWxsYmFjay5jYWxsKGNvbnRleHQsIGZhbHNlKSB9KTtcbiAgICB0aGlzLmNvbm5lY3QoKTtcbiAgfSxcblxuICByZXF1ZXN0OiBmdW5jdGlvbihtZXNzYWdlcykge1xuICAgIHRoaXMuX3BlbmRpbmcgPSB0aGlzLl9wZW5kaW5nIHx8IG5ldyBTZXQoKTtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IG1lc3NhZ2VzLmxlbmd0aDsgaSA8IG47IGkrKykgdGhpcy5fcGVuZGluZy5hZGQobWVzc2FnZXNbaV0pO1xuXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gICAgdmFyIHByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHNlbGYuY2FsbGJhY2soZnVuY3Rpb24oc29ja2V0KSB7XG4gICAgICAgIGlmICghc29ja2V0IHx8IHNvY2tldC5yZWFkeVN0YXRlICE9PSAxKSByZXR1cm47XG4gICAgICAgIHNvY2tldC5zZW5kKHRvSlNPTihtZXNzYWdlcykpO1xuICAgICAgICByZXNvbHZlKHNvY2tldCk7XG4gICAgICB9KTtcblxuICAgICAgc2VsZi5jb25uZWN0KCk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgYWJvcnQ6IGZ1bmN0aW9uKCkgeyBwcm9taXNlLnRoZW4oZnVuY3Rpb24od3MpIHsgd3MuY2xvc2UoKSB9KSB9XG4gICAgfTtcbiAgfSxcblxuICBjb25uZWN0OiBmdW5jdGlvbigpIHtcbiAgICBpZiAoV2ViU29ja2V0Ll91bmxvYWRlZCkgcmV0dXJuO1xuXG4gICAgdGhpcy5fc3RhdGUgPSB0aGlzLl9zdGF0ZSB8fCB0aGlzLlVOQ09OTkVDVEVEO1xuICAgIGlmICh0aGlzLl9zdGF0ZSAhPT0gdGhpcy5VTkNPTk5FQ1RFRCkgcmV0dXJuO1xuICAgIHRoaXMuX3N0YXRlID0gdGhpcy5DT05ORUNUSU5HO1xuXG4gICAgdmFyIHNvY2tldCA9IHRoaXMuX2NyZWF0ZVNvY2tldCgpO1xuICAgIGlmICghc29ja2V0KSByZXR1cm4gdGhpcy5zZXREZWZlcnJlZFN0YXR1cygnZmFpbGVkJyk7XG5cbiAgICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgICBzb2NrZXQub25vcGVuID0gZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoc29ja2V0LmhlYWRlcnMpIHNlbGYuX3N0b3JlQ29va2llcyhzb2NrZXQuaGVhZGVyc1snc2V0LWNvb2tpZSddKTtcbiAgICAgIHNlbGYuX3NvY2tldCA9IHNvY2tldDtcbiAgICAgIHNlbGYuX3N0YXRlID0gc2VsZi5DT05ORUNURUQ7XG4gICAgICBzZWxmLl9ldmVyQ29ubmVjdGVkID0gdHJ1ZTtcbiAgICAgIHNlbGYuX3BpbmcoKTtcbiAgICAgIHNlbGYuc2V0RGVmZXJyZWRTdGF0dXMoJ3N1Y2NlZWRlZCcsIHNvY2tldCk7XG4gICAgfTtcblxuICAgIHZhciBjbG9zZWQgPSBmYWxzZTtcbiAgICBzb2NrZXQub25jbG9zZSA9IHNvY2tldC5vbmVycm9yID0gZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoY2xvc2VkKSByZXR1cm47XG4gICAgICBjbG9zZWQgPSB0cnVlO1xuXG4gICAgICB2YXIgd2FzQ29ubmVjdGVkID0gKHNlbGYuX3N0YXRlID09PSBzZWxmLkNPTk5FQ1RFRCk7XG4gICAgICBzb2NrZXQub25vcGVuID0gc29ja2V0Lm9uY2xvc2UgPSBzb2NrZXQub25lcnJvciA9IHNvY2tldC5vbm1lc3NhZ2UgPSBudWxsO1xuXG4gICAgICBkZWxldGUgc2VsZi5fc29ja2V0O1xuICAgICAgc2VsZi5fc3RhdGUgPSBzZWxmLlVOQ09OTkVDVEVEO1xuICAgICAgc2VsZi5yZW1vdmVUaW1lb3V0KCdwaW5nJyk7XG5cbiAgICAgIHZhciBwZW5kaW5nID0gc2VsZi5fcGVuZGluZyA/IHNlbGYuX3BlbmRpbmcudG9BcnJheSgpIDogW107XG4gICAgICBkZWxldGUgc2VsZi5fcGVuZGluZztcblxuICAgICAgaWYgKHdhc0Nvbm5lY3RlZCB8fCBzZWxmLl9ldmVyQ29ubmVjdGVkKSB7XG4gICAgICAgIHNlbGYuc2V0RGVmZXJyZWRTdGF0dXMoJ3Vua25vd24nKTtcbiAgICAgICAgc2VsZi5faGFuZGxlRXJyb3IocGVuZGluZywgd2FzQ29ubmVjdGVkKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNlbGYuc2V0RGVmZXJyZWRTdGF0dXMoJ2ZhaWxlZCcpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBzb2NrZXQub25tZXNzYWdlID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgIHZhciByZXBsaWVzO1xuICAgICAgdHJ5IHsgcmVwbGllcyA9IEpTT04ucGFyc2UoZXZlbnQuZGF0YSkgfSBjYXRjaCAoZXJyb3IpIHt9XG5cbiAgICAgIGlmICghcmVwbGllcykgcmV0dXJuO1xuXG4gICAgICByZXBsaWVzID0gW10uY29uY2F0KHJlcGxpZXMpO1xuXG4gICAgICBmb3IgKHZhciBpID0gMCwgbiA9IHJlcGxpZXMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIGlmIChyZXBsaWVzW2ldLnN1Y2Nlc3NmdWwgPT09IHVuZGVmaW5lZCkgY29udGludWU7XG4gICAgICAgIHNlbGYuX3BlbmRpbmcucmVtb3ZlKHJlcGxpZXNbaV0pO1xuICAgICAgfVxuICAgICAgc2VsZi5fcmVjZWl2ZShyZXBsaWVzKTtcbiAgICB9O1xuICB9LFxuXG4gIGNsb3NlOiBmdW5jdGlvbigpIHtcbiAgICBpZiAoIXRoaXMuX3NvY2tldCkgcmV0dXJuO1xuICAgIHRoaXMuX3NvY2tldC5jbG9zZSgpO1xuICB9LFxuXG4gIF9jcmVhdGVTb2NrZXQ6IGZ1bmN0aW9uKCkge1xuICAgIHZhciB1cmwgICAgICAgID0gV2ViU29ja2V0LmdldFNvY2tldFVybCh0aGlzLmVuZHBvaW50KSxcbiAgICAgICAgaGVhZGVycyAgICA9IHRoaXMuX2Rpc3BhdGNoZXIuaGVhZGVycyxcbiAgICAgICAgZXh0ZW5zaW9ucyA9IHRoaXMuX2Rpc3BhdGNoZXIud3NFeHRlbnNpb25zLFxuICAgICAgICBjb29raWUgICAgID0gdGhpcy5fZ2V0Q29va2llcygpLFxuICAgICAgICB0bHMgICAgICAgID0gdGhpcy5fZGlzcGF0Y2hlci50bHMsXG4gICAgICAgIG9wdGlvbnMgICAgPSB7ZXh0ZW5zaW9uczogZXh0ZW5zaW9ucywgaGVhZGVyczogaGVhZGVycywgcHJveHk6IHRoaXMuX3Byb3h5LCB0bHM6IHRsc307XG5cbiAgICBpZiAoY29va2llICE9PSAnJykgb3B0aW9ucy5oZWFkZXJzWydDb29raWUnXSA9IGNvb2tpZTtcblxuICAgIHJldHVybiB3cy5jcmVhdGUodXJsLCBbXSwgb3B0aW9ucyk7XG4gIH0sXG5cbiAgX3Bpbmc6IGZ1bmN0aW9uKCkge1xuICAgIGlmICghdGhpcy5fc29ja2V0IHx8IHRoaXMuX3NvY2tldC5yZWFkeVN0YXRlICE9PSAxKSByZXR1cm47XG4gICAgdGhpcy5fc29ja2V0LnNlbmQoJ1tdJyk7XG4gICAgdGhpcy5hZGRUaW1lb3V0KCdwaW5nJywgdGhpcy5fZGlzcGF0Y2hlci50aW1lb3V0IC8gMiwgdGhpcy5fcGluZywgdGhpcyk7XG4gIH1cblxufSksIHtcbiAgUFJPVE9DT0xTOiB7XG4gICAgJ2h0dHA6JzogICd3czonLFxuICAgICdodHRwczonOiAnd3NzOidcbiAgfSxcblxuICBjcmVhdGU6IGZ1bmN0aW9uKGRpc3BhdGNoZXIsIGVuZHBvaW50KSB7XG4gICAgdmFyIHNvY2tldHMgPSBkaXNwYXRjaGVyLnRyYW5zcG9ydHMud2Vic29ja2V0ID0gZGlzcGF0Y2hlci50cmFuc3BvcnRzLndlYnNvY2tldCB8fCB7fTtcbiAgICBzb2NrZXRzW2VuZHBvaW50LmhyZWZdID0gc29ja2V0c1tlbmRwb2ludC5ocmVmXSB8fCBuZXcgdGhpcyhkaXNwYXRjaGVyLCBlbmRwb2ludCk7XG4gICAgcmV0dXJuIHNvY2tldHNbZW5kcG9pbnQuaHJlZl07XG4gIH0sXG5cbiAgZ2V0U29ja2V0VXJsOiBmdW5jdGlvbihlbmRwb2ludCkge1xuICAgIGVuZHBvaW50ID0gY29weU9iamVjdChlbmRwb2ludCk7XG4gICAgZW5kcG9pbnQucHJvdG9jb2wgPSB0aGlzLlBST1RPQ09MU1tlbmRwb2ludC5wcm90b2NvbF07XG4gICAgcmV0dXJuIFVSSS5zdHJpbmdpZnkoZW5kcG9pbnQpO1xuICB9LFxuXG4gIGlzVXNhYmxlOiBmdW5jdGlvbihkaXNwYXRjaGVyLCBlbmRwb2ludCwgY2FsbGJhY2ssIGNvbnRleHQpIHtcbiAgICB0aGlzLmNyZWF0ZShkaXNwYXRjaGVyLCBlbmRwb2ludCkuaXNVc2FibGUoY2FsbGJhY2ssIGNvbnRleHQpO1xuICB9XG59KTtcblxuZXh0ZW5kKFdlYlNvY2tldC5wcm90b3R5cGUsIERlZmVycmFibGUpO1xuXG5pZiAoYnJvd3Nlci5FdmVudCAmJiBnbG9iYWwub25iZWZvcmV1bmxvYWQgIT09IHVuZGVmaW5lZClcbiAgYnJvd3Nlci5FdmVudC5vbihnbG9iYWwsICdiZWZvcmV1bmxvYWQnLCBmdW5jdGlvbigpIHsgV2ViU29ja2V0Ll91bmxvYWRlZCA9IHRydWUgfSk7XG5cbm1vZHVsZS5leHBvcnRzID0gV2ViU29ja2V0O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgQ2xhc3MgICAgID0gcmVxdWlyZSgnLi4vdXRpbC9jbGFzcycpLFxuICAgIFVSSSAgICAgICA9IHJlcXVpcmUoJy4uL3V0aWwvdXJpJyksXG4gICAgYnJvd3NlciAgID0gcmVxdWlyZSgnLi4vdXRpbC9icm93c2VyJyksXG4gICAgZXh0ZW5kICAgID0gcmVxdWlyZSgnLi4vdXRpbC9leHRlbmQnKSxcbiAgICB0b0pTT04gICAgPSByZXF1aXJlKCcuLi91dGlsL3RvX2pzb24nKSxcbiAgICBUcmFuc3BvcnQgPSByZXF1aXJlKCcuL3RyYW5zcG9ydCcpO1xuXG52YXIgWEhSID0gZXh0ZW5kKENsYXNzKFRyYW5zcG9ydCwge1xuICBlbmNvZGU6IGZ1bmN0aW9uKG1lc3NhZ2VzKSB7XG4gICAgcmV0dXJuIHRvSlNPTihtZXNzYWdlcyk7XG4gIH0sXG5cbiAgcmVxdWVzdDogZnVuY3Rpb24obWVzc2FnZXMpIHtcbiAgICB2YXIgaHJlZiA9IHRoaXMuZW5kcG9pbnQuaHJlZixcbiAgICAgICAgc2VsZiA9IHRoaXMsXG4gICAgICAgIHhocjtcblxuICAgIC8vIFByZWZlciBYTUxIdHRwUmVxdWVzdCBvdmVyIEFjdGl2ZVhPYmplY3QgaWYgdGhleSBib3RoIGV4aXN0XG4gICAgaWYgKGdsb2JhbC5YTUxIdHRwUmVxdWVzdCkge1xuICAgICAgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgfSBlbHNlIGlmIChnbG9iYWwuQWN0aXZlWE9iamVjdCkge1xuICAgICAgeGhyID0gbmV3IEFjdGl2ZVhPYmplY3QoJ01pY3Jvc29mdC5YTUxIVFRQJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB0aGlzLl9oYW5kbGVFcnJvcihtZXNzYWdlcyk7XG4gICAgfVxuXG4gICAgeGhyLm9wZW4oJ1BPU1QnLCBocmVmLCB0cnVlKTtcbiAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcignQ29udGVudC1UeXBlJywgJ2FwcGxpY2F0aW9uL2pzb24nKTtcbiAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcignUHJhZ21hJywgJ25vLWNhY2hlJyk7XG4gICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoJ1gtUmVxdWVzdGVkLVdpdGgnLCAnWE1MSHR0cFJlcXVlc3QnKTtcblxuICAgIHZhciBoZWFkZXJzID0gdGhpcy5fZGlzcGF0Y2hlci5oZWFkZXJzO1xuICAgIGZvciAodmFyIGtleSBpbiBoZWFkZXJzKSB7XG4gICAgICBpZiAoIWhlYWRlcnMuaGFzT3duUHJvcGVydHkoa2V5KSkgY29udGludWU7XG4gICAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcihrZXksIGhlYWRlcnNba2V5XSk7XG4gICAgfVxuXG4gICAgdmFyIGFib3J0ID0gZnVuY3Rpb24oKSB7IHhoci5hYm9ydCgpIH07XG4gICAgaWYgKGdsb2JhbC5vbmJlZm9yZXVubG9hZCAhPT0gdW5kZWZpbmVkKVxuICAgICAgYnJvd3Nlci5FdmVudC5vbihnbG9iYWwsICdiZWZvcmV1bmxvYWQnLCBhYm9ydCk7XG5cbiAgICB4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoIXhociB8fCB4aHIucmVhZHlTdGF0ZSAhPT0gNCkgcmV0dXJuO1xuXG4gICAgICB2YXIgcmVwbGllcyAgICA9IG51bGwsXG4gICAgICAgICAgc3RhdHVzICAgICA9IHhoci5zdGF0dXMsXG4gICAgICAgICAgdGV4dCAgICAgICA9IHhoci5yZXNwb25zZVRleHQsXG4gICAgICAgICAgc3VjY2Vzc2Z1bCA9IChzdGF0dXMgPj0gMjAwICYmIHN0YXR1cyA8IDMwMCkgfHwgc3RhdHVzID09PSAzMDQgfHwgc3RhdHVzID09PSAxMjIzO1xuXG4gICAgICBpZiAoZ2xvYmFsLm9uYmVmb3JldW5sb2FkICE9PSB1bmRlZmluZWQpXG4gICAgICAgIGJyb3dzZXIuRXZlbnQuZGV0YWNoKGdsb2JhbCwgJ2JlZm9yZXVubG9hZCcsIGFib3J0KTtcblxuICAgICAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge307XG4gICAgICB4aHIgPSBudWxsO1xuXG4gICAgICBpZiAoIXN1Y2Nlc3NmdWwpIHJldHVybiBzZWxmLl9oYW5kbGVFcnJvcihtZXNzYWdlcyk7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIHJlcGxpZXMgPSBKU09OLnBhcnNlKHRleHQpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHt9XG5cbiAgICAgIGlmIChyZXBsaWVzKVxuICAgICAgICBzZWxmLl9yZWNlaXZlKHJlcGxpZXMpO1xuICAgICAgZWxzZVxuICAgICAgICBzZWxmLl9oYW5kbGVFcnJvcihtZXNzYWdlcyk7XG4gICAgfTtcblxuICAgIHhoci5zZW5kKHRoaXMuZW5jb2RlKG1lc3NhZ2VzKSk7XG4gICAgcmV0dXJuIHhocjtcbiAgfVxufSksIHtcbiAgaXNVc2FibGU6IGZ1bmN0aW9uKGRpc3BhdGNoZXIsIGVuZHBvaW50LCBjYWxsYmFjaywgY29udGV4dCkge1xuICAgIHZhciB1c2FibGUgPSAobmF2aWdhdG9yLnByb2R1Y3QgPT09ICdSZWFjdE5hdGl2ZScpXG4gICAgICAgICAgICAgIHx8IFVSSS5pc1NhbWVPcmlnaW4oZW5kcG9pbnQpO1xuXG4gICAgY2FsbGJhY2suY2FsbChjb250ZXh0LCB1c2FibGUpO1xuICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBYSFI7XG4iLCIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBjb21tb25FbGVtZW50OiBmdW5jdGlvbihsaXN0YSwgbGlzdGIpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IGxpc3RhLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgaWYgKHRoaXMuaW5kZXhPZihsaXN0YiwgbGlzdGFbaV0pICE9PSAtMSlcbiAgICAgICAgcmV0dXJuIGxpc3RhW2ldO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfSxcblxuICBpbmRleE9mOiBmdW5jdGlvbihsaXN0LCBuZWVkbGUpIHtcbiAgICBpZiAobGlzdC5pbmRleE9mKSByZXR1cm4gbGlzdC5pbmRleE9mKG5lZWRsZSk7XG5cbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IGxpc3QubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICBpZiAobGlzdFtpXSA9PT0gbmVlZGxlKSByZXR1cm4gaTtcbiAgICB9XG4gICAgcmV0dXJuIC0xO1xuICB9LFxuXG4gIG1hcDogZnVuY3Rpb24ob2JqZWN0LCBjYWxsYmFjaywgY29udGV4dCkge1xuICAgIGlmIChvYmplY3QubWFwKSByZXR1cm4gb2JqZWN0Lm1hcChjYWxsYmFjaywgY29udGV4dCk7XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuXG4gICAgaWYgKG9iamVjdCBpbnN0YW5jZW9mIEFycmF5KSB7XG4gICAgICBmb3IgKHZhciBpID0gMCwgbiA9IG9iamVjdC5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgcmVzdWx0LnB1c2goY2FsbGJhY2suY2FsbChjb250ZXh0IHx8IG51bGwsIG9iamVjdFtpXSwgaSkpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBmb3IgKHZhciBrZXkgaW4gb2JqZWN0KSB7XG4gICAgICAgIGlmICghb2JqZWN0Lmhhc093blByb3BlcnR5KGtleSkpIGNvbnRpbnVlO1xuICAgICAgICByZXN1bHQucHVzaChjYWxsYmFjay5jYWxsKGNvbnRleHQgfHwgbnVsbCwga2V5LCBvYmplY3Rba2V5XSkpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9LFxuXG4gIGZpbHRlcjogZnVuY3Rpb24oYXJyYXksIGNhbGxiYWNrLCBjb250ZXh0KSB7XG4gICAgaWYgKGFycmF5LmZpbHRlcikgcmV0dXJuIGFycmF5LmZpbHRlcihjYWxsYmFjaywgY29udGV4dCk7XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwLCBuID0gYXJyYXkubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICBpZiAoY2FsbGJhY2suY2FsbChjb250ZXh0IHx8IG51bGwsIGFycmF5W2ldLCBpKSlcbiAgICAgICAgcmVzdWx0LnB1c2goYXJyYXlbaV0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9LFxuXG4gIGFzeW5jRWFjaDogZnVuY3Rpb24obGlzdCwgaXRlcmF0b3IsIGNhbGxiYWNrLCBjb250ZXh0KSB7XG4gICAgdmFyIG4gICAgICAgPSBsaXN0Lmxlbmd0aCxcbiAgICAgICAgaSAgICAgICA9IC0xLFxuICAgICAgICBjYWxscyAgID0gMCxcbiAgICAgICAgbG9vcGluZyA9IGZhbHNlO1xuXG4gICAgdmFyIGl0ZXJhdGUgPSBmdW5jdGlvbigpIHtcbiAgICAgIGNhbGxzIC09IDE7XG4gICAgICBpICs9IDE7XG4gICAgICBpZiAoaSA9PT0gbikgcmV0dXJuIGNhbGxiYWNrICYmIGNhbGxiYWNrLmNhbGwoY29udGV4dCk7XG4gICAgICBpdGVyYXRvcihsaXN0W2ldLCByZXN1bWUpO1xuICAgIH07XG5cbiAgICB2YXIgbG9vcCA9IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKGxvb3BpbmcpIHJldHVybjtcbiAgICAgIGxvb3BpbmcgPSB0cnVlO1xuICAgICAgd2hpbGUgKGNhbGxzID4gMCkgaXRlcmF0ZSgpO1xuICAgICAgbG9vcGluZyA9IGZhbHNlO1xuICAgIH07XG5cbiAgICB2YXIgcmVzdW1lID0gZnVuY3Rpb24oKSB7XG4gICAgICBjYWxscyArPSAxO1xuICAgICAgbG9vcCgpO1xuICAgIH07XG4gICAgcmVzdW1lKCk7XG4gIH1cbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBFdmVudCA9IHtcbiAgX3JlZ2lzdHJ5OiBbXSxcblxuICBvbjogZnVuY3Rpb24oZWxlbWVudCwgZXZlbnROYW1lLCBjYWxsYmFjaywgY29udGV4dCkge1xuICAgIHZhciB3cmFwcGVkID0gZnVuY3Rpb24oKSB7IGNhbGxiYWNrLmNhbGwoY29udGV4dCkgfTtcblxuICAgIGlmIChlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIpXG4gICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCB3cmFwcGVkLCBmYWxzZSk7XG4gICAgZWxzZVxuICAgICAgZWxlbWVudC5hdHRhY2hFdmVudCgnb24nICsgZXZlbnROYW1lLCB3cmFwcGVkKTtcblxuICAgIHRoaXMuX3JlZ2lzdHJ5LnB1c2goe1xuICAgICAgX2VsZW1lbnQ6ICAgZWxlbWVudCxcbiAgICAgIF90eXBlOiAgICAgIGV2ZW50TmFtZSxcbiAgICAgIF9jYWxsYmFjazogIGNhbGxiYWNrLFxuICAgICAgX2NvbnRleHQ6ICAgICBjb250ZXh0LFxuICAgICAgX2hhbmRsZXI6ICAgd3JhcHBlZFxuICAgIH0pO1xuICB9LFxuXG4gIGRldGFjaDogZnVuY3Rpb24oZWxlbWVudCwgZXZlbnROYW1lLCBjYWxsYmFjaywgY29udGV4dCkge1xuICAgIHZhciBpID0gdGhpcy5fcmVnaXN0cnkubGVuZ3RoLCByZWdpc3RlcjtcbiAgICB3aGlsZSAoaS0tKSB7XG4gICAgICByZWdpc3RlciA9IHRoaXMuX3JlZ2lzdHJ5W2ldO1xuXG4gICAgICBpZiAoKGVsZW1lbnQgICAgJiYgZWxlbWVudCAgICAhPT0gcmVnaXN0ZXIuX2VsZW1lbnQpICB8fFxuICAgICAgICAgIChldmVudE5hbWUgICYmIGV2ZW50TmFtZSAgIT09IHJlZ2lzdGVyLl90eXBlKSAgICAgfHxcbiAgICAgICAgICAoY2FsbGJhY2sgICAmJiBjYWxsYmFjayAgICE9PSByZWdpc3Rlci5fY2FsbGJhY2spIHx8XG4gICAgICAgICAgKGNvbnRleHQgICAgJiYgY29udGV4dCAgICAhPT0gcmVnaXN0ZXIuX2NvbnRleHQpKVxuICAgICAgICBjb250aW51ZTtcblxuICAgICAgaWYgKHJlZ2lzdGVyLl9lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIpXG4gICAgICAgIHJlZ2lzdGVyLl9lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIocmVnaXN0ZXIuX3R5cGUsIHJlZ2lzdGVyLl9oYW5kbGVyLCBmYWxzZSk7XG4gICAgICBlbHNlXG4gICAgICAgIHJlZ2lzdGVyLl9lbGVtZW50LmRldGFjaEV2ZW50KCdvbicgKyByZWdpc3Rlci5fdHlwZSwgcmVnaXN0ZXIuX2hhbmRsZXIpO1xuXG4gICAgICB0aGlzLl9yZWdpc3RyeS5zcGxpY2UoaSwxKTtcbiAgICAgIHJlZ2lzdGVyID0gbnVsbDtcbiAgICB9XG4gIH1cbn07XG5cbmlmIChnbG9iYWwub251bmxvYWQgIT09IHVuZGVmaW5lZClcbiAgRXZlbnQub24oZ2xvYmFsLCAndW5sb2FkJywgRXZlbnQuZGV0YWNoLCBFdmVudCk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBFdmVudDogRXZlbnRcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBleHRlbmQgPSByZXF1aXJlKCcuL2V4dGVuZCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHBhcmVudCwgbWV0aG9kcykge1xuICBpZiAodHlwZW9mIHBhcmVudCAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIG1ldGhvZHMgPSBwYXJlbnQ7XG4gICAgcGFyZW50ICA9IE9iamVjdDtcbiAgfVxuXG4gIHZhciBrbGFzcyA9IGZ1bmN0aW9uKCkge1xuICAgIGlmICghdGhpcy5pbml0aWFsaXplKSByZXR1cm4gdGhpcztcbiAgICByZXR1cm4gdGhpcy5pbml0aWFsaXplLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfTtcblxuICB2YXIgYnJpZGdlID0gZnVuY3Rpb24oKSB7fTtcbiAgYnJpZGdlLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7XG5cbiAga2xhc3MucHJvdG90eXBlID0gbmV3IGJyaWRnZSgpO1xuICBleHRlbmQoa2xhc3MucHJvdG90eXBlLCBtZXRob2RzKTtcblxuICByZXR1cm4ga2xhc3M7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSB7XG4gIFZFUlNJT046ICAgICAgICAgICcxLjIuNCcsXG5cbiAgQkFZRVVYX1ZFUlNJT046ICAgJzEuMCcsXG4gIElEX0xFTkdUSDogICAgICAgIDE2MCxcbiAgSlNPTlBfQ0FMTEJBQ0s6ICAgJ2pzb25wY2FsbGJhY2snLFxuICBDT05ORUNUSU9OX1RZUEVTOiBbJ2xvbmctcG9sbGluZycsICdjcm9zcy1vcmlnaW4tbG9uZy1wb2xsaW5nJywgJ2NhbGxiYWNrLXBvbGxpbmcnLCAnd2Vic29ja2V0JywgJ2V2ZW50c291cmNlJywgJ2luLXByb2Nlc3MnXSxcblxuICBNQU5EQVRPUllfQ09OTkVDVElPTl9UWVBFUzogWydsb25nLXBvbGxpbmcnLCAnY2FsbGJhY2stcG9sbGluZycsICdpbi1wcm9jZXNzJ11cbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0ge307XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBjb3B5T2JqZWN0ID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gIHZhciBjbG9uZSwgaSwga2V5O1xuICBpZiAob2JqZWN0IGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICBjbG9uZSA9IFtdO1xuICAgIGkgPSBvYmplY3QubGVuZ3RoO1xuICAgIHdoaWxlIChpLS0pIGNsb25lW2ldID0gY29weU9iamVjdChvYmplY3RbaV0pO1xuICAgIHJldHVybiBjbG9uZTtcbiAgfSBlbHNlIGlmICh0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0Jykge1xuICAgIGNsb25lID0gKG9iamVjdCA9PT0gbnVsbCkgPyBudWxsIDoge307XG4gICAgZm9yIChrZXkgaW4gb2JqZWN0KSBjbG9uZVtrZXldID0gY29weU9iamVjdChvYmplY3Rba2V5XSk7XG4gICAgcmV0dXJuIGNsb25lO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBvYmplY3Q7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gY29weU9iamVjdDtcbiIsIi8qXG5Db3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cblBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkgb2ZcbnRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW5cbnRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG9cbnVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzXG5vZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG9cbnNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcblxuVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsXG5jb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuXG5USEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG5JTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbkZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbk9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFXG5TT0ZUV0FSRS5cbiovXG5cbnZhciBpc0FycmF5ID0gdHlwZW9mIEFycmF5LmlzQXJyYXkgPT09ICdmdW5jdGlvbidcbiAgICA/IEFycmF5LmlzQXJyYXlcbiAgICA6IGZ1bmN0aW9uICh4cykge1xuICAgICAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHhzKSA9PT0gJ1tvYmplY3QgQXJyYXldJ1xuICAgIH1cbjtcbmZ1bmN0aW9uIGluZGV4T2YgKHhzLCB4KSB7XG4gICAgaWYgKHhzLmluZGV4T2YpIHJldHVybiB4cy5pbmRleE9mKHgpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgeHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKHggPT09IHhzW2ldKSByZXR1cm4gaTtcbiAgICB9XG4gICAgcmV0dXJuIC0xO1xufVxuXG5mdW5jdGlvbiBFdmVudEVtaXR0ZXIoKSB7fVxubW9kdWxlLmV4cG9ydHMgPSBFdmVudEVtaXR0ZXI7XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuZW1pdCA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgLy8gSWYgdGhlcmUgaXMgbm8gJ2Vycm9yJyBldmVudCBsaXN0ZW5lciB0aGVuIHRocm93LlxuICBpZiAodHlwZSA9PT0gJ2Vycm9yJykge1xuICAgIGlmICghdGhpcy5fZXZlbnRzIHx8ICF0aGlzLl9ldmVudHMuZXJyb3IgfHxcbiAgICAgICAgKGlzQXJyYXkodGhpcy5fZXZlbnRzLmVycm9yKSAmJiAhdGhpcy5fZXZlbnRzLmVycm9yLmxlbmd0aCkpXG4gICAge1xuICAgICAgaWYgKGFyZ3VtZW50c1sxXSBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgIHRocm93IGFyZ3VtZW50c1sxXTsgLy8gVW5oYW5kbGVkICdlcnJvcicgZXZlbnRcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVuY2F1Z2h0LCB1bnNwZWNpZmllZCAnZXJyb3InIGV2ZW50LlwiKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBpZiAoIXRoaXMuX2V2ZW50cykgcmV0dXJuIGZhbHNlO1xuICB2YXIgaGFuZGxlciA9IHRoaXMuX2V2ZW50c1t0eXBlXTtcbiAgaWYgKCFoYW5kbGVyKSByZXR1cm4gZmFsc2U7XG5cbiAgaWYgKHR5cGVvZiBoYW5kbGVyID09ICdmdW5jdGlvbicpIHtcbiAgICBzd2l0Y2ggKGFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgIC8vIGZhc3QgY2FzZXNcbiAgICAgIGNhc2UgMTpcbiAgICAgICAgaGFuZGxlci5jYWxsKHRoaXMpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgMjpcbiAgICAgICAgaGFuZGxlci5jYWxsKHRoaXMsIGFyZ3VtZW50c1sxXSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAzOlxuICAgICAgICBoYW5kbGVyLmNhbGwodGhpcywgYXJndW1lbnRzWzFdLCBhcmd1bWVudHNbMl0pO1xuICAgICAgICBicmVhaztcbiAgICAgIC8vIHNsb3dlclxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdmFyIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpO1xuICAgICAgICBoYW5kbGVyLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcblxuICB9IGVsc2UgaWYgKGlzQXJyYXkoaGFuZGxlcikpIHtcbiAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7XG5cbiAgICB2YXIgbGlzdGVuZXJzID0gaGFuZGxlci5zbGljZSgpO1xuICAgIGZvciAodmFyIGkgPSAwLCBsID0gbGlzdGVuZXJzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgbGlzdGVuZXJzW2ldLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcblxuICB9IGVsc2Uge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufTtcblxuLy8gRXZlbnRFbWl0dGVyIGlzIGRlZmluZWQgaW4gc3JjL25vZGVfZXZlbnRzLmNjXG4vLyBFdmVudEVtaXR0ZXIucHJvdG90eXBlLmVtaXQoKSBpcyBhbHNvIGRlZmluZWQgdGhlcmUuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmFkZExpc3RlbmVyID0gZnVuY3Rpb24odHlwZSwgbGlzdGVuZXIpIHtcbiAgaWYgKCdmdW5jdGlvbicgIT09IHR5cGVvZiBsaXN0ZW5lcikge1xuICAgIHRocm93IG5ldyBFcnJvcignYWRkTGlzdGVuZXIgb25seSB0YWtlcyBpbnN0YW5jZXMgb2YgRnVuY3Rpb24nKTtcbiAgfVxuXG4gIGlmICghdGhpcy5fZXZlbnRzKSB0aGlzLl9ldmVudHMgPSB7fTtcblxuICAvLyBUbyBhdm9pZCByZWN1cnNpb24gaW4gdGhlIGNhc2UgdGhhdCB0eXBlID09IFwibmV3TGlzdGVuZXJzXCIhIEJlZm9yZVxuICAvLyBhZGRpbmcgaXQgdG8gdGhlIGxpc3RlbmVycywgZmlyc3QgZW1pdCBcIm5ld0xpc3RlbmVyc1wiLlxuICB0aGlzLmVtaXQoJ25ld0xpc3RlbmVyJywgdHlwZSwgbGlzdGVuZXIpO1xuXG4gIGlmICghdGhpcy5fZXZlbnRzW3R5cGVdKSB7XG4gICAgLy8gT3B0aW1pemUgdGhlIGNhc2Ugb2Ygb25lIGxpc3RlbmVyLiBEb24ndCBuZWVkIHRoZSBleHRyYSBhcnJheSBvYmplY3QuXG4gICAgdGhpcy5fZXZlbnRzW3R5cGVdID0gbGlzdGVuZXI7XG4gIH0gZWxzZSBpZiAoaXNBcnJheSh0aGlzLl9ldmVudHNbdHlwZV0pKSB7XG4gICAgLy8gSWYgd2UndmUgYWxyZWFkeSBnb3QgYW4gYXJyYXksIGp1c3QgYXBwZW5kLlxuICAgIHRoaXMuX2V2ZW50c1t0eXBlXS5wdXNoKGxpc3RlbmVyKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBBZGRpbmcgdGhlIHNlY29uZCBlbGVtZW50LCBuZWVkIHRvIGNoYW5nZSB0byBhcnJheS5cbiAgICB0aGlzLl9ldmVudHNbdHlwZV0gPSBbdGhpcy5fZXZlbnRzW3R5cGVdLCBsaXN0ZW5lcl07XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn07XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUub24gPSBFdmVudEVtaXR0ZXIucHJvdG90eXBlLmFkZExpc3RlbmVyO1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLm9uY2UgPSBmdW5jdGlvbih0eXBlLCBsaXN0ZW5lcikge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHNlbGYub24odHlwZSwgZnVuY3Rpb24gZygpIHtcbiAgICBzZWxmLnJlbW92ZUxpc3RlbmVyKHR5cGUsIGcpO1xuICAgIGxpc3RlbmVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH0pO1xuXG4gIHJldHVybiB0aGlzO1xufTtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lciA9IGZ1bmN0aW9uKHR5cGUsIGxpc3RlbmVyKSB7XG4gIGlmICgnZnVuY3Rpb24nICE9PSB0eXBlb2YgbGlzdGVuZXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3JlbW92ZUxpc3RlbmVyIG9ubHkgdGFrZXMgaW5zdGFuY2VzIG9mIEZ1bmN0aW9uJyk7XG4gIH1cblxuICAvLyBkb2VzIG5vdCB1c2UgbGlzdGVuZXJzKCksIHNvIG5vIHNpZGUgZWZmZWN0IG9mIGNyZWF0aW5nIF9ldmVudHNbdHlwZV1cbiAgaWYgKCF0aGlzLl9ldmVudHMgfHwgIXRoaXMuX2V2ZW50c1t0eXBlXSkgcmV0dXJuIHRoaXM7XG5cbiAgdmFyIGxpc3QgPSB0aGlzLl9ldmVudHNbdHlwZV07XG5cbiAgaWYgKGlzQXJyYXkobGlzdCkpIHtcbiAgICB2YXIgaSA9IGluZGV4T2YobGlzdCwgbGlzdGVuZXIpO1xuICAgIGlmIChpIDwgMCkgcmV0dXJuIHRoaXM7XG4gICAgbGlzdC5zcGxpY2UoaSwgMSk7XG4gICAgaWYgKGxpc3QubGVuZ3RoID09IDApXG4gICAgICBkZWxldGUgdGhpcy5fZXZlbnRzW3R5cGVdO1xuICB9IGVsc2UgaWYgKHRoaXMuX2V2ZW50c1t0eXBlXSA9PT0gbGlzdGVuZXIpIHtcbiAgICBkZWxldGUgdGhpcy5fZXZlbnRzW3R5cGVdO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUFsbExpc3RlbmVycyA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApIHtcbiAgICB0aGlzLl9ldmVudHMgPSB7fTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8vIGRvZXMgbm90IHVzZSBsaXN0ZW5lcnMoKSwgc28gbm8gc2lkZSBlZmZlY3Qgb2YgY3JlYXRpbmcgX2V2ZW50c1t0eXBlXVxuICBpZiAodHlwZSAmJiB0aGlzLl9ldmVudHMgJiYgdGhpcy5fZXZlbnRzW3R5cGVdKSB0aGlzLl9ldmVudHNbdHlwZV0gPSBudWxsO1xuICByZXR1cm4gdGhpcztcbn07XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUubGlzdGVuZXJzID0gZnVuY3Rpb24odHlwZSkge1xuICBpZiAoIXRoaXMuX2V2ZW50cykgdGhpcy5fZXZlbnRzID0ge307XG4gIGlmICghdGhpcy5fZXZlbnRzW3R5cGVdKSB0aGlzLl9ldmVudHNbdHlwZV0gPSBbXTtcbiAgaWYgKCFpc0FycmF5KHRoaXMuX2V2ZW50c1t0eXBlXSkpIHtcbiAgICB0aGlzLl9ldmVudHNbdHlwZV0gPSBbdGhpcy5fZXZlbnRzW3R5cGVdXTtcbiAgfVxuICByZXR1cm4gdGhpcy5fZXZlbnRzW3R5cGVdO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihkZXN0LCBzb3VyY2UsIG92ZXJ3cml0ZSkge1xuICBpZiAoIXNvdXJjZSkgcmV0dXJuIGRlc3Q7XG4gIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICBpZiAoIXNvdXJjZS5oYXNPd25Qcm9wZXJ0eShrZXkpKSBjb250aW51ZTtcbiAgICBpZiAoZGVzdC5oYXNPd25Qcm9wZXJ0eShrZXkpICYmIG92ZXJ3cml0ZSA9PT0gZmFsc2UpIGNvbnRpbnVlO1xuICAgIGlmIChkZXN0W2tleV0gIT09IHNvdXJjZVtrZXldKVxuICAgICAgZGVzdFtrZXldID0gc291cmNlW2tleV07XG4gIH1cbiAgcmV0dXJuIGRlc3Q7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYXNhcCA9IHJlcXVpcmUoJ2FzYXAnKTtcblxudmFyIFBFTkRJTkcgICA9IDAsXG4gICAgRlVMRklMTEVEID0gMSxcbiAgICBSRUpFQ1RFRCAgPSAyO1xuXG52YXIgUkVUVVJOID0gZnVuY3Rpb24oeCkgeyByZXR1cm4geCB9LFxuICAgIFRIUk9XICA9IGZ1bmN0aW9uKHgpIHsgdGhyb3cgIHggfTtcblxudmFyIFByb21pc2UgPSBmdW5jdGlvbih0YXNrKSB7XG4gIHRoaXMuX3N0YXRlICAgICAgID0gUEVORElORztcbiAgdGhpcy5fb25GdWxmaWxsZWQgPSBbXTtcbiAgdGhpcy5fb25SZWplY3RlZCAgPSBbXTtcblxuICBpZiAodHlwZW9mIHRhc2sgIT09ICdmdW5jdGlvbicpIHJldHVybjtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gIHRhc2soZnVuY3Rpb24odmFsdWUpICB7IHJlc29sdmUoc2VsZiwgdmFsdWUpIH0sXG4gICAgICAgZnVuY3Rpb24ocmVhc29uKSB7IHJlamVjdChzZWxmLCByZWFzb24pIH0pO1xufTtcblxuUHJvbWlzZS5wcm90b3R5cGUudGhlbiA9IGZ1bmN0aW9uKG9uRnVsZmlsbGVkLCBvblJlamVjdGVkKSB7XG4gIHZhciBuZXh0ID0gbmV3IFByb21pc2UoKTtcbiAgcmVnaXN0ZXJPbkZ1bGZpbGxlZCh0aGlzLCBvbkZ1bGZpbGxlZCwgbmV4dCk7XG4gIHJlZ2lzdGVyT25SZWplY3RlZCh0aGlzLCBvblJlamVjdGVkLCBuZXh0KTtcbiAgcmV0dXJuIG5leHQ7XG59O1xuXG5Qcm9taXNlLnByb3RvdHlwZVsnY2F0Y2gnXSA9IGZ1bmN0aW9uKG9uUmVqZWN0ZWQpIHtcbiAgcmV0dXJuIHRoaXMudGhlbihudWxsLCBvblJlamVjdGVkKTtcbn07XG5cbnZhciByZWdpc3Rlck9uRnVsZmlsbGVkID0gZnVuY3Rpb24ocHJvbWlzZSwgb25GdWxmaWxsZWQsIG5leHQpIHtcbiAgaWYgKHR5cGVvZiBvbkZ1bGZpbGxlZCAhPT0gJ2Z1bmN0aW9uJykgb25GdWxmaWxsZWQgPSBSRVRVUk47XG4gIHZhciBoYW5kbGVyID0gZnVuY3Rpb24odmFsdWUpIHsgaW52b2tlKG9uRnVsZmlsbGVkLCB2YWx1ZSwgbmV4dCkgfTtcblxuICBpZiAocHJvbWlzZS5fc3RhdGUgPT09IFBFTkRJTkcpIHtcbiAgICBwcm9taXNlLl9vbkZ1bGZpbGxlZC5wdXNoKGhhbmRsZXIpO1xuICB9IGVsc2UgaWYgKHByb21pc2UuX3N0YXRlID09PSBGVUxGSUxMRUQpIHtcbiAgICBoYW5kbGVyKHByb21pc2UuX3ZhbHVlKTtcbiAgfVxufTtcblxudmFyIHJlZ2lzdGVyT25SZWplY3RlZCA9IGZ1bmN0aW9uKHByb21pc2UsIG9uUmVqZWN0ZWQsIG5leHQpIHtcbiAgaWYgKHR5cGVvZiBvblJlamVjdGVkICE9PSAnZnVuY3Rpb24nKSBvblJlamVjdGVkID0gVEhST1c7XG4gIHZhciBoYW5kbGVyID0gZnVuY3Rpb24ocmVhc29uKSB7IGludm9rZShvblJlamVjdGVkLCByZWFzb24sIG5leHQpIH07XG5cbiAgaWYgKHByb21pc2UuX3N0YXRlID09PSBQRU5ESU5HKSB7XG4gICAgcHJvbWlzZS5fb25SZWplY3RlZC5wdXNoKGhhbmRsZXIpO1xuICB9IGVsc2UgaWYgKHByb21pc2UuX3N0YXRlID09PSBSRUpFQ1RFRCkge1xuICAgIGhhbmRsZXIocHJvbWlzZS5fcmVhc29uKTtcbiAgfVxufTtcblxudmFyIGludm9rZSA9IGZ1bmN0aW9uKGZuLCB2YWx1ZSwgbmV4dCkge1xuICBhc2FwKGZ1bmN0aW9uKCkgeyBfaW52b2tlKGZuLCB2YWx1ZSwgbmV4dCkgfSk7XG59O1xuXG52YXIgX2ludm9rZSA9IGZ1bmN0aW9uKGZuLCB2YWx1ZSwgbmV4dCkge1xuICB2YXIgb3V0Y29tZTtcblxuICB0cnkge1xuICAgIG91dGNvbWUgPSBmbih2YWx1ZSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHJlamVjdChuZXh0LCBlcnJvcik7XG4gIH1cblxuICBpZiAob3V0Y29tZSA9PT0gbmV4dCkge1xuICAgIHJlamVjdChuZXh0LCBuZXcgVHlwZUVycm9yKCdSZWN1cnNpdmUgcHJvbWlzZSBjaGFpbiBkZXRlY3RlZCcpKTtcbiAgfSBlbHNlIHtcbiAgICByZXNvbHZlKG5leHQsIG91dGNvbWUpO1xuICB9XG59O1xuXG52YXIgcmVzb2x2ZSA9IGZ1bmN0aW9uKHByb21pc2UsIHZhbHVlKSB7XG4gIHZhciBjYWxsZWQgPSBmYWxzZSwgdHlwZSwgdGhlbjtcblxuICB0cnkge1xuICAgIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gICAgdGhlbiA9IHZhbHVlICE9PSBudWxsICYmICh0eXBlID09PSAnZnVuY3Rpb24nIHx8IHR5cGUgPT09ICdvYmplY3QnKSAmJiB2YWx1ZS50aGVuO1xuXG4gICAgaWYgKHR5cGVvZiB0aGVuICE9PSAnZnVuY3Rpb24nKSByZXR1cm4gZnVsZmlsbChwcm9taXNlLCB2YWx1ZSk7XG5cbiAgICB0aGVuLmNhbGwodmFsdWUsIGZ1bmN0aW9uKHYpIHtcbiAgICAgIGlmICghKGNhbGxlZCBeIChjYWxsZWQgPSB0cnVlKSkpIHJldHVybjtcbiAgICAgIHJlc29sdmUocHJvbWlzZSwgdik7XG4gICAgfSwgZnVuY3Rpb24ocikge1xuICAgICAgaWYgKCEoY2FsbGVkIF4gKGNhbGxlZCA9IHRydWUpKSkgcmV0dXJuO1xuICAgICAgcmVqZWN0KHByb21pc2UsIHIpO1xuICAgIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGlmICghKGNhbGxlZCBeIChjYWxsZWQgPSB0cnVlKSkpIHJldHVybjtcbiAgICByZWplY3QocHJvbWlzZSwgZXJyb3IpO1xuICB9XG59O1xuXG52YXIgZnVsZmlsbCA9IGZ1bmN0aW9uKHByb21pc2UsIHZhbHVlKSB7XG4gIGlmIChwcm9taXNlLl9zdGF0ZSAhPT0gUEVORElORykgcmV0dXJuO1xuXG4gIHByb21pc2UuX3N0YXRlICAgICAgPSBGVUxGSUxMRUQ7XG4gIHByb21pc2UuX3ZhbHVlICAgICAgPSB2YWx1ZTtcbiAgcHJvbWlzZS5fb25SZWplY3RlZCA9IFtdO1xuXG4gIHZhciBvbkZ1bGZpbGxlZCA9IHByb21pc2UuX29uRnVsZmlsbGVkLCBmbjtcbiAgd2hpbGUgKGZuID0gb25GdWxmaWxsZWQuc2hpZnQoKSkgZm4odmFsdWUpO1xufTtcblxudmFyIHJlamVjdCA9IGZ1bmN0aW9uKHByb21pc2UsIHJlYXNvbikge1xuICBpZiAocHJvbWlzZS5fc3RhdGUgIT09IFBFTkRJTkcpIHJldHVybjtcblxuICBwcm9taXNlLl9zdGF0ZSAgICAgICA9IFJFSkVDVEVEO1xuICBwcm9taXNlLl9yZWFzb24gICAgICA9IHJlYXNvbjtcbiAgcHJvbWlzZS5fb25GdWxmaWxsZWQgPSBbXTtcblxuICB2YXIgb25SZWplY3RlZCA9IHByb21pc2UuX29uUmVqZWN0ZWQsIGZuO1xuICB3aGlsZSAoZm4gPSBvblJlamVjdGVkLnNoaWZ0KCkpIGZuKHJlYXNvbik7XG59O1xuXG5Qcm9taXNlLnJlc29sdmUgPSBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7IHJlc29sdmUodmFsdWUpIH0pO1xufTtcblxuUHJvbWlzZS5yZWplY3QgPSBmdW5jdGlvbihyZWFzb24pIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkgeyByZWplY3QocmVhc29uKSB9KTtcbn07XG5cblByb21pc2UuYWxsID0gZnVuY3Rpb24ocHJvbWlzZXMpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgIHZhciBsaXN0ID0gW10sIG4gPSBwcm9taXNlcy5sZW5ndGgsIGk7XG5cbiAgICBpZiAobiA9PT0gMCkgcmV0dXJuIHJlc29sdmUobGlzdCk7XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgaSsrKSAoZnVuY3Rpb24ocHJvbWlzZSwgaSkge1xuICAgICAgUHJvbWlzZS5yZXNvbHZlKHByb21pc2UpLnRoZW4oZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgbGlzdFtpXSA9IHZhbHVlO1xuICAgICAgICBpZiAoLS1uID09PSAwKSByZXNvbHZlKGxpc3QpO1xuICAgICAgfSwgcmVqZWN0KTtcbiAgICB9KShwcm9taXNlc1tpXSwgaSk7XG4gIH0pO1xufTtcblxuUHJvbWlzZS5yYWNlID0gZnVuY3Rpb24ocHJvbWlzZXMpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgIGZvciAodmFyIGkgPSAwLCBuID0gcHJvbWlzZXMubGVuZ3RoOyBpIDwgbjsgaSsrKVxuICAgICAgUHJvbWlzZS5yZXNvbHZlKHByb21pc2VzW2ldKS50aGVuKHJlc29sdmUsIHJlamVjdCk7XG4gIH0pO1xufTtcblxuUHJvbWlzZS5kZWZlcnJlZCA9IFByb21pc2UucGVuZGluZyA9IGZ1bmN0aW9uKCkge1xuICB2YXIgdHVwbGUgPSB7fTtcblxuICB0dXBsZS5wcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgdHVwbGUucmVzb2x2ZSA9IHJlc29sdmU7XG4gICAgdHVwbGUucmVqZWN0ICA9IHJlamVjdDtcbiAgfSk7XG4gIHJldHVybiB0dXBsZTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gUHJvbWlzZTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIENsYXNzID0gcmVxdWlyZSgnLi9jbGFzcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENsYXNzKHtcbiAgaW5pdGlhbGl6ZTogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5faW5kZXggPSB7fTtcbiAgfSxcblxuICBhZGQ6IGZ1bmN0aW9uKGl0ZW0pIHtcbiAgICB2YXIga2V5ID0gKGl0ZW0uaWQgIT09IHVuZGVmaW5lZCkgPyBpdGVtLmlkIDogaXRlbTtcbiAgICBpZiAodGhpcy5faW5kZXguaGFzT3duUHJvcGVydHkoa2V5KSkgcmV0dXJuIGZhbHNlO1xuICAgIHRoaXMuX2luZGV4W2tleV0gPSBpdGVtO1xuICAgIHJldHVybiB0cnVlO1xuICB9LFxuXG4gIGZvckVhY2g6IGZ1bmN0aW9uKGJsb2NrLCBjb250ZXh0KSB7XG4gICAgZm9yICh2YXIga2V5IGluIHRoaXMuX2luZGV4KSB7XG4gICAgICBpZiAodGhpcy5faW5kZXguaGFzT3duUHJvcGVydHkoa2V5KSlcbiAgICAgICAgYmxvY2suY2FsbChjb250ZXh0LCB0aGlzLl9pbmRleFtrZXldKTtcbiAgICB9XG4gIH0sXG5cbiAgaXNFbXB0eTogZnVuY3Rpb24oKSB7XG4gICAgZm9yICh2YXIga2V5IGluIHRoaXMuX2luZGV4KSB7XG4gICAgICBpZiAodGhpcy5faW5kZXguaGFzT3duUHJvcGVydHkoa2V5KSkgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSxcblxuICBtZW1iZXI6IGZ1bmN0aW9uKGl0ZW0pIHtcbiAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy5faW5kZXgpIHtcbiAgICAgIGlmICh0aGlzLl9pbmRleFtrZXldID09PSBpdGVtKSByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9LFxuXG4gIHJlbW92ZTogZnVuY3Rpb24oaXRlbSkge1xuICAgIHZhciBrZXkgPSAoaXRlbS5pZCAhPT0gdW5kZWZpbmVkKSA/IGl0ZW0uaWQgOiBpdGVtO1xuICAgIHZhciByZW1vdmVkID0gdGhpcy5faW5kZXhba2V5XTtcbiAgICBkZWxldGUgdGhpcy5faW5kZXhba2V5XTtcbiAgICByZXR1cm4gcmVtb3ZlZDtcbiAgfSxcblxuICB0b0FycmF5OiBmdW5jdGlvbigpIHtcbiAgICB2YXIgYXJyYXkgPSBbXTtcbiAgICB0aGlzLmZvckVhY2goZnVuY3Rpb24oaXRlbSkgeyBhcnJheS5wdXNoKGl0ZW0pIH0pO1xuICAgIHJldHVybiBhcnJheTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbi8vIGh0dHA6Ly9hc3NhbmthLm5ldC9jb250ZW50L3RlY2gvMjAwOS8wOS8wMi9qc29uMi1qcy12cy1wcm90b3R5cGUvXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gIHJldHVybiBKU09OLnN0cmluZ2lmeShvYmplY3QsIGZ1bmN0aW9uKGtleSwgdmFsdWUpIHtcbiAgICByZXR1cm4gKHRoaXNba2V5XSBpbnN0YW5jZW9mIEFycmF5KSA/IHRoaXNba2V5XSA6IHZhbHVlO1xuICB9KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpc1VSSTogZnVuY3Rpb24odXJpKSB7XG4gICAgcmV0dXJuIHVyaSAmJiB1cmkucHJvdG9jb2wgJiYgdXJpLmhvc3QgJiYgdXJpLnBhdGg7XG4gIH0sXG5cbiAgaXNTYW1lT3JpZ2luOiBmdW5jdGlvbih1cmkpIHtcbiAgICByZXR1cm4gdXJpLnByb3RvY29sID09PSBsb2NhdGlvbi5wcm90b2NvbCAmJlxuICAgICAgICAgICB1cmkuaG9zdG5hbWUgPT09IGxvY2F0aW9uLmhvc3RuYW1lICYmXG4gICAgICAgICAgIHVyaS5wb3J0ICAgICA9PT0gbG9jYXRpb24ucG9ydDtcbiAgfSxcblxuICBwYXJzZTogZnVuY3Rpb24odXJsKSB7XG4gICAgaWYgKHR5cGVvZiB1cmwgIT09ICdzdHJpbmcnKSByZXR1cm4gdXJsO1xuICAgIHZhciB1cmkgPSB7fSwgcGFydHMsIHF1ZXJ5LCBwYWlycywgaSwgbiwgZGF0YTtcblxuICAgIHZhciBjb25zdW1lID0gZnVuY3Rpb24obmFtZSwgcGF0dGVybikge1xuICAgICAgdXJsID0gdXJsLnJlcGxhY2UocGF0dGVybiwgZnVuY3Rpb24obWF0Y2gpIHtcbiAgICAgICAgdXJpW25hbWVdID0gbWF0Y2g7XG4gICAgICAgIHJldHVybiAnJztcbiAgICAgIH0pO1xuICAgICAgdXJpW25hbWVdID0gdXJpW25hbWVdIHx8ICcnO1xuICAgIH07XG5cbiAgICBjb25zdW1lKCdwcm90b2NvbCcsIC9eW2Etel0rXFw6L2kpO1xuICAgIGNvbnN1bWUoJ2hvc3QnLCAgICAgL15cXC9cXC9bXlxcL1xcPyNdKy8pO1xuXG4gICAgaWYgKCEvXlxcLy8udGVzdCh1cmwpICYmICF1cmkuaG9zdClcbiAgICAgIHVybCA9IGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoL1teXFwvXSokLywgJycpICsgdXJsO1xuXG4gICAgY29uc3VtZSgncGF0aG5hbWUnLCAvXlteXFw/I10qLyk7XG4gICAgY29uc3VtZSgnc2VhcmNoJywgICAvXlxcP1teI10qLyk7XG4gICAgY29uc3VtZSgnaGFzaCcsICAgICAvXiMuKi8pO1xuXG4gICAgdXJpLnByb3RvY29sID0gdXJpLnByb3RvY29sIHx8IGxvY2F0aW9uLnByb3RvY29sO1xuXG4gICAgaWYgKHVyaS5ob3N0KSB7XG4gICAgICB1cmkuaG9zdCAgICAgPSB1cmkuaG9zdC5zdWJzdHIoMik7XG4gICAgICBwYXJ0cyAgICAgICAgPSB1cmkuaG9zdC5zcGxpdCgnOicpO1xuICAgICAgdXJpLmhvc3RuYW1lID0gcGFydHNbMF07XG4gICAgICB1cmkucG9ydCAgICAgPSBwYXJ0c1sxXSB8fCAnJztcbiAgICB9IGVsc2Uge1xuICAgICAgdXJpLmhvc3QgICAgID0gbG9jYXRpb24uaG9zdDtcbiAgICAgIHVyaS5ob3N0bmFtZSA9IGxvY2F0aW9uLmhvc3RuYW1lO1xuICAgICAgdXJpLnBvcnQgICAgID0gbG9jYXRpb24ucG9ydDtcbiAgICB9XG5cbiAgICB1cmkucGF0aG5hbWUgPSB1cmkucGF0aG5hbWUgfHwgJy8nO1xuICAgIHVyaS5wYXRoID0gdXJpLnBhdGhuYW1lICsgdXJpLnNlYXJjaDtcblxuICAgIHF1ZXJ5ID0gdXJpLnNlYXJjaC5yZXBsYWNlKC9eXFw/LywgJycpO1xuICAgIHBhaXJzID0gcXVlcnkgPyBxdWVyeS5zcGxpdCgnJicpIDogW107XG4gICAgZGF0YSAgPSB7fTtcblxuICAgIGZvciAoaSA9IDAsIG4gPSBwYWlycy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgIHBhcnRzID0gcGFpcnNbaV0uc3BsaXQoJz0nKTtcbiAgICAgIGRhdGFbZGVjb2RlVVJJQ29tcG9uZW50KHBhcnRzWzBdIHx8ICcnKV0gPSBkZWNvZGVVUklDb21wb25lbnQocGFydHNbMV0gfHwgJycpO1xuICAgIH1cblxuICAgIHVyaS5xdWVyeSA9IGRhdGE7XG5cbiAgICB1cmkuaHJlZiA9IHRoaXMuc3RyaW5naWZ5KHVyaSk7XG4gICAgcmV0dXJuIHVyaTtcbiAgfSxcblxuICBzdHJpbmdpZnk6IGZ1bmN0aW9uKHVyaSkge1xuICAgIHZhciBzdHJpbmcgPSB1cmkucHJvdG9jb2wgKyAnLy8nICsgdXJpLmhvc3RuYW1lO1xuICAgIGlmICh1cmkucG9ydCkgc3RyaW5nICs9ICc6JyArIHVyaS5wb3J0O1xuICAgIHN0cmluZyArPSB1cmkucGF0aG5hbWUgKyB0aGlzLnF1ZXJ5U3RyaW5nKHVyaS5xdWVyeSkgKyAodXJpLmhhc2ggfHwgJycpO1xuICAgIHJldHVybiBzdHJpbmc7XG4gIH0sXG5cbiAgcXVlcnlTdHJpbmc6IGZ1bmN0aW9uKHF1ZXJ5KSB7XG4gICAgdmFyIHBhaXJzID0gW107XG4gICAgZm9yICh2YXIga2V5IGluIHF1ZXJ5KSB7XG4gICAgICBpZiAoIXF1ZXJ5Lmhhc093blByb3BlcnR5KGtleSkpIGNvbnRpbnVlO1xuICAgICAgcGFpcnMucHVzaChlbmNvZGVVUklDb21wb25lbnQoa2V5KSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudChxdWVyeVtrZXldKSk7XG4gICAgfVxuICAgIGlmIChwYWlycy5sZW5ndGggPT09IDApIHJldHVybiAnJztcbiAgICByZXR1cm4gJz8nICsgcGFpcnMuam9pbignJicpO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYXJyYXkgPSByZXF1aXJlKCcuL2FycmF5Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob3B0aW9ucywgdmFsaWRLZXlzKSB7XG4gIGZvciAodmFyIGtleSBpbiBvcHRpb25zKSB7XG4gICAgaWYgKGFycmF5LmluZGV4T2YodmFsaWRLZXlzLCBrZXkpIDwgMClcbiAgICAgIHRocm93IG5ldyBFcnJvcignVW5yZWNvZ25pemVkIG9wdGlvbjogJyArIGtleSk7XG4gIH1cbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBXUyA9IGdsb2JhbC5Nb3pXZWJTb2NrZXQgfHwgZ2xvYmFsLldlYlNvY2tldDtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNyZWF0ZTogZnVuY3Rpb24odXJsLCBwcm90b2NvbHMsIG9wdGlvbnMpIHtcbiAgICBpZiAodHlwZW9mIFdTICE9PSAnZnVuY3Rpb24nKSByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4gbmV3IFdTKHVybCk7XG4gIH1cbn07XG4iLCJleHBvcnRzLnJlYWQgPSBmdW5jdGlvbiAoYnVmZmVyLCBvZmZzZXQsIGlzTEUsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgZSwgbVxuICB2YXIgZUxlbiA9IChuQnl0ZXMgKiA4KSAtIG1MZW4gLSAxXG4gIHZhciBlTWF4ID0gKDEgPDwgZUxlbikgLSAxXG4gIHZhciBlQmlhcyA9IGVNYXggPj4gMVxuICB2YXIgbkJpdHMgPSAtN1xuICB2YXIgaSA9IGlzTEUgPyAobkJ5dGVzIC0gMSkgOiAwXG4gIHZhciBkID0gaXNMRSA/IC0xIDogMVxuICB2YXIgcyA9IGJ1ZmZlcltvZmZzZXQgKyBpXVxuXG4gIGkgKz0gZFxuXG4gIGUgPSBzICYgKCgxIDw8ICgtbkJpdHMpKSAtIDEpXG4gIHMgPj49ICgtbkJpdHMpXG4gIG5CaXRzICs9IGVMZW5cbiAgZm9yICg7IG5CaXRzID4gMDsgZSA9IChlICogMjU2KSArIGJ1ZmZlcltvZmZzZXQgKyBpXSwgaSArPSBkLCBuQml0cyAtPSA4KSB7fVxuXG4gIG0gPSBlICYgKCgxIDw8ICgtbkJpdHMpKSAtIDEpXG4gIGUgPj49ICgtbkJpdHMpXG4gIG5CaXRzICs9IG1MZW5cbiAgZm9yICg7IG5CaXRzID4gMDsgbSA9IChtICogMjU2KSArIGJ1ZmZlcltvZmZzZXQgKyBpXSwgaSArPSBkLCBuQml0cyAtPSA4KSB7fVxuXG4gIGlmIChlID09PSAwKSB7XG4gICAgZSA9IDEgLSBlQmlhc1xuICB9IGVsc2UgaWYgKGUgPT09IGVNYXgpIHtcbiAgICByZXR1cm4gbSA/IE5hTiA6ICgocyA/IC0xIDogMSkgKiBJbmZpbml0eSlcbiAgfSBlbHNlIHtcbiAgICBtID0gbSArIE1hdGgucG93KDIsIG1MZW4pXG4gICAgZSA9IGUgLSBlQmlhc1xuICB9XG4gIHJldHVybiAocyA/IC0xIDogMSkgKiBtICogTWF0aC5wb3coMiwgZSAtIG1MZW4pXG59XG5cbmV4cG9ydHMud3JpdGUgPSBmdW5jdGlvbiAoYnVmZmVyLCB2YWx1ZSwgb2Zmc2V0LCBpc0xFLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGUsIG0sIGNcbiAgdmFyIGVMZW4gPSAobkJ5dGVzICogOCkgLSBtTGVuIC0gMVxuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMVxuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDFcbiAgdmFyIHJ0ID0gKG1MZW4gPT09IDIzID8gTWF0aC5wb3coMiwgLTI0KSAtIE1hdGgucG93KDIsIC03NykgOiAwKVxuICB2YXIgaSA9IGlzTEUgPyAwIDogKG5CeXRlcyAtIDEpXG4gIHZhciBkID0gaXNMRSA/IDEgOiAtMVxuICB2YXIgcyA9IHZhbHVlIDwgMCB8fCAodmFsdWUgPT09IDAgJiYgMSAvIHZhbHVlIDwgMCkgPyAxIDogMFxuXG4gIHZhbHVlID0gTWF0aC5hYnModmFsdWUpXG5cbiAgaWYgKGlzTmFOKHZhbHVlKSB8fCB2YWx1ZSA9PT0gSW5maW5pdHkpIHtcbiAgICBtID0gaXNOYU4odmFsdWUpID8gMSA6IDBcbiAgICBlID0gZU1heFxuICB9IGVsc2Uge1xuICAgIGUgPSBNYXRoLmZsb29yKE1hdGgubG9nKHZhbHVlKSAvIE1hdGguTE4yKVxuICAgIGlmICh2YWx1ZSAqIChjID0gTWF0aC5wb3coMiwgLWUpKSA8IDEpIHtcbiAgICAgIGUtLVxuICAgICAgYyAqPSAyXG4gICAgfVxuICAgIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgdmFsdWUgKz0gcnQgLyBjXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhbHVlICs9IHJ0ICogTWF0aC5wb3coMiwgMSAtIGVCaWFzKVxuICAgIH1cbiAgICBpZiAodmFsdWUgKiBjID49IDIpIHtcbiAgICAgIGUrK1xuICAgICAgYyAvPSAyXG4gICAgfVxuXG4gICAgaWYgKGUgKyBlQmlhcyA+PSBlTWF4KSB7XG4gICAgICBtID0gMFxuICAgICAgZSA9IGVNYXhcbiAgICB9IGVsc2UgaWYgKGUgKyBlQmlhcyA+PSAxKSB7XG4gICAgICBtID0gKCh2YWx1ZSAqIGMpIC0gMSkgKiBNYXRoLnBvdygyLCBtTGVuKVxuICAgICAgZSA9IGUgKyBlQmlhc1xuICAgIH0gZWxzZSB7XG4gICAgICBtID0gdmFsdWUgKiBNYXRoLnBvdygyLCBlQmlhcyAtIDEpICogTWF0aC5wb3coMiwgbUxlbilcbiAgICAgIGUgPSAwXG4gICAgfVxuICB9XG5cbiAgZm9yICg7IG1MZW4gPj0gODsgYnVmZmVyW29mZnNldCArIGldID0gbSAmIDB4ZmYsIGkgKz0gZCwgbSAvPSAyNTYsIG1MZW4gLT0gOCkge31cblxuICBlID0gKGUgPDwgbUxlbikgfCBtXG4gIGVMZW4gKz0gbUxlblxuICBmb3IgKDsgZUxlbiA+IDA7IGJ1ZmZlcltvZmZzZXQgKyBpXSA9IGUgJiAweGZmLCBpICs9IGQsIGUgLz0gMjU2LCBlTGVuIC09IDgpIHt9XG5cbiAgYnVmZmVyW29mZnNldCArIGkgLSBkXSB8PSBzICogMTI4XG59XG4iLCJpZiAodHlwZW9mIE9iamVjdC5jcmVhdGUgPT09ICdmdW5jdGlvbicpIHtcbiAgLy8gaW1wbGVtZW50YXRpb24gZnJvbSBzdGFuZGFyZCBub2RlLmpzICd1dGlsJyBtb2R1bGVcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpIHtcbiAgICBjdG9yLnN1cGVyXyA9IHN1cGVyQ3RvclxuICAgIGN0b3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckN0b3IucHJvdG90eXBlLCB7XG4gICAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgICB2YWx1ZTogY3RvcixcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcbn0gZWxzZSB7XG4gIC8vIG9sZCBzY2hvb2wgc2hpbSBmb3Igb2xkIGJyb3dzZXJzXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5oZXJpdHMoY3Rvciwgc3VwZXJDdG9yKSB7XG4gICAgY3Rvci5zdXBlcl8gPSBzdXBlckN0b3JcbiAgICB2YXIgVGVtcEN0b3IgPSBmdW5jdGlvbiAoKSB7fVxuICAgIFRlbXBDdG9yLnByb3RvdHlwZSA9IHN1cGVyQ3Rvci5wcm90b3R5cGVcbiAgICBjdG9yLnByb3RvdHlwZSA9IG5ldyBUZW1wQ3RvcigpXG4gICAgY3Rvci5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBjdG9yXG4gIH1cbn1cbiIsIi8qIVxuICogRGV0ZXJtaW5lIGlmIGFuIG9iamVjdCBpcyBhIEJ1ZmZlclxuICpcbiAqIEBhdXRob3IgICBGZXJvc3MgQWJvdWtoYWRpamVoIDxodHRwczovL2Zlcm9zcy5vcmc+XG4gKiBAbGljZW5zZSAgTUlUXG4gKi9cblxuLy8gVGhlIF9pc0J1ZmZlciBjaGVjayBpcyBmb3IgU2FmYXJpIDUtNyBzdXBwb3J0LCBiZWNhdXNlIGl0J3MgbWlzc2luZ1xuLy8gT2JqZWN0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvci4gUmVtb3ZlIHRoaXMgZXZlbnR1YWxseVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiBvYmogIT0gbnVsbCAmJiAoaXNCdWZmZXIob2JqKSB8fCBpc1Nsb3dCdWZmZXIob2JqKSB8fCAhIW9iai5faXNCdWZmZXIpXG59XG5cbmZ1bmN0aW9uIGlzQnVmZmVyIChvYmopIHtcbiAgcmV0dXJuICEhb2JqLmNvbnN0cnVjdG9yICYmIHR5cGVvZiBvYmouY29uc3RydWN0b3IuaXNCdWZmZXIgPT09ICdmdW5jdGlvbicgJiYgb2JqLmNvbnN0cnVjdG9yLmlzQnVmZmVyKG9iailcbn1cblxuLy8gRm9yIE5vZGUgdjAuMTAgc3VwcG9ydC4gUmVtb3ZlIHRoaXMgZXZlbnR1YWxseS5cbmZ1bmN0aW9uIGlzU2xvd0J1ZmZlciAob2JqKSB7XG4gIHJldHVybiB0eXBlb2Ygb2JqLnJlYWRGbG9hdExFID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBvYmouc2xpY2UgPT09ICdmdW5jdGlvbicgJiYgaXNCdWZmZXIob2JqLnNsaWNlKDAsIDApKVxufVxuIiwidmFyIHRvU3RyaW5nID0ge30udG9TdHJpbmc7XG5cbm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoYXJyKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iLCIvKipcbiAqIGxvZGFzaCAoQ3VzdG9tIEJ1aWxkKSA8aHR0cHM6Ly9sb2Rhc2guY29tLz5cbiAqIEJ1aWxkOiBgbG9kYXNoIG1vZHVsYXJpemUgZXhwb3J0cz1cIm5wbVwiIC1vIC4vYFxuICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMgPGh0dHBzOi8vanF1ZXJ5Lm9yZy8+XG4gKiBSZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZSA8aHR0cHM6Ly9sb2Rhc2guY29tL2xpY2Vuc2U+XG4gKiBCYXNlZCBvbiBVbmRlcnNjb3JlLmpzIDEuOC4zIDxodHRwOi8vdW5kZXJzY29yZWpzLm9yZy9MSUNFTlNFPlxuICogQ29weXJpZ2h0IEplcmVteSBBc2hrZW5hcywgRG9jdW1lbnRDbG91ZCBhbmQgSW52ZXN0aWdhdGl2ZSBSZXBvcnRlcnMgJiBFZGl0b3JzXG4gKi9cblxuLyoqIFVzZWQgYXMgdGhlIGBUeXBlRXJyb3JgIG1lc3NhZ2UgZm9yIFwiRnVuY3Rpb25zXCIgbWV0aG9kcy4gKi9cbnZhciBGVU5DX0VSUk9SX1RFWFQgPSAnRXhwZWN0ZWQgYSBmdW5jdGlvbic7XG5cbi8qKiBVc2VkIHRvIHN0YW5kLWluIGZvciBgdW5kZWZpbmVkYCBoYXNoIHZhbHVlcy4gKi9cbnZhciBIQVNIX1VOREVGSU5FRCA9ICdfX2xvZGFzaF9oYXNoX3VuZGVmaW5lZF9fJztcblxuLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmb3IgdmFyaW91cyBgTnVtYmVyYCBjb25zdGFudHMuICovXG52YXIgSU5GSU5JVFkgPSAxIC8gMDtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGZ1bmNUYWcgPSAnW29iamVjdCBGdW5jdGlvbl0nLFxuICAgIGdlblRhZyA9ICdbb2JqZWN0IEdlbmVyYXRvckZ1bmN0aW9uXScsXG4gICAgc3ltYm9sVGFnID0gJ1tvYmplY3QgU3ltYm9sXSc7XG5cbi8qKiBVc2VkIHRvIG1hdGNoIHByb3BlcnR5IG5hbWVzIHdpdGhpbiBwcm9wZXJ0eSBwYXRocy4gKi9cbnZhciByZUlzRGVlcFByb3AgPSAvXFwufFxcWyg/OlteW1xcXV0qfChbXCInXSkoPzooPyFcXDEpW15cXFxcXXxcXFxcLikqP1xcMSlcXF0vLFxuICAgIHJlSXNQbGFpblByb3AgPSAvXlxcdyokLyxcbiAgICByZUxlYWRpbmdEb3QgPSAvXlxcLi8sXG4gICAgcmVQcm9wTmFtZSA9IC9bXi5bXFxdXSt8XFxbKD86KC0/XFxkKyg/OlxcLlxcZCspPyl8KFtcIiddKSgoPzooPyFcXDIpW15cXFxcXXxcXFxcLikqPylcXDIpXFxdfCg/PSg/OlxcLnxcXFtcXF0pKD86XFwufFxcW1xcXXwkKSkvZztcblxuLyoqXG4gKiBVc2VkIHRvIG1hdGNoIGBSZWdFeHBgXG4gKiBbc3ludGF4IGNoYXJhY3RlcnNdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXBhdHRlcm5zKS5cbiAqL1xudmFyIHJlUmVnRXhwQ2hhciA9IC9bXFxcXF4kLiorPygpW1xcXXt9fF0vZztcblxuLyoqIFVzZWQgdG8gbWF0Y2ggYmFja3NsYXNoZXMgaW4gcHJvcGVydHkgcGF0aHMuICovXG52YXIgcmVFc2NhcGVDaGFyID0gL1xcXFwoXFxcXCk/L2c7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBob3N0IGNvbnN0cnVjdG9ycyAoU2FmYXJpKS4gKi9cbnZhciByZUlzSG9zdEN0b3IgPSAvXlxcW29iamVjdCAuKz9Db25zdHJ1Y3RvclxcXSQvO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYGdsb2JhbGAgZnJvbSBOb2RlLmpzLiAqL1xudmFyIGZyZWVHbG9iYWwgPSB0eXBlb2YgZ2xvYmFsID09ICdvYmplY3QnICYmIGdsb2JhbCAmJiBnbG9iYWwuT2JqZWN0ID09PSBPYmplY3QgJiYgZ2xvYmFsO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYHNlbGZgLiAqL1xudmFyIGZyZWVTZWxmID0gdHlwZW9mIHNlbGYgPT0gJ29iamVjdCcgJiYgc2VsZiAmJiBzZWxmLk9iamVjdCA9PT0gT2JqZWN0ICYmIHNlbGY7XG5cbi8qKiBVc2VkIGFzIGEgcmVmZXJlbmNlIHRvIHRoZSBnbG9iYWwgb2JqZWN0LiAqL1xudmFyIHJvb3QgPSBmcmVlR2xvYmFsIHx8IGZyZWVTZWxmIHx8IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cbi8qKlxuICogR2V0cyB0aGUgdmFsdWUgYXQgYGtleWAgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0XSBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgcHJvcGVydHkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGdldFZhbHVlKG9iamVjdCwga2V5KSB7XG4gIHJldHVybiBvYmplY3QgPT0gbnVsbCA/IHVuZGVmaW5lZCA6IG9iamVjdFtrZXldO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGEgaG9zdCBvYmplY3QgaW4gSUUgPCA5LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgaG9zdCBvYmplY3QsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaXNIb3N0T2JqZWN0KHZhbHVlKSB7XG4gIC8vIE1hbnkgaG9zdCBvYmplY3RzIGFyZSBgT2JqZWN0YCBvYmplY3RzIHRoYXQgY2FuIGNvZXJjZSB0byBzdHJpbmdzXG4gIC8vIGRlc3BpdGUgaGF2aW5nIGltcHJvcGVybHkgZGVmaW5lZCBgdG9TdHJpbmdgIG1ldGhvZHMuXG4gIHZhciByZXN1bHQgPSBmYWxzZTtcbiAgaWYgKHZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlLnRvU3RyaW5nICE9ICdmdW5jdGlvbicpIHtcbiAgICB0cnkge1xuICAgICAgcmVzdWx0ID0gISEodmFsdWUgKyAnJyk7XG4gICAgfSBjYXRjaCAoZSkge31cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgYXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZSxcbiAgICBmdW5jUHJvdG8gPSBGdW5jdGlvbi5wcm90b3R5cGUsXG4gICAgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byBkZXRlY3Qgb3ZlcnJlYWNoaW5nIGNvcmUtanMgc2hpbXMuICovXG52YXIgY29yZUpzRGF0YSA9IHJvb3RbJ19fY29yZS1qc19zaGFyZWRfXyddO1xuXG4vKiogVXNlZCB0byBkZXRlY3QgbWV0aG9kcyBtYXNxdWVyYWRpbmcgYXMgbmF0aXZlLiAqL1xudmFyIG1hc2tTcmNLZXkgPSAoZnVuY3Rpb24oKSB7XG4gIHZhciB1aWQgPSAvW14uXSskLy5leGVjKGNvcmVKc0RhdGEgJiYgY29yZUpzRGF0YS5rZXlzICYmIGNvcmVKc0RhdGEua2V5cy5JRV9QUk9UTyB8fCAnJyk7XG4gIHJldHVybiB1aWQgPyAoJ1N5bWJvbChzcmMpXzEuJyArIHVpZCkgOiAnJztcbn0oKSk7XG5cbi8qKiBVc2VkIHRvIHJlc29sdmUgdGhlIGRlY29tcGlsZWQgc291cmNlIG9mIGZ1bmN0aW9ucy4gKi9cbnZhciBmdW5jVG9TdHJpbmcgPSBmdW5jUHJvdG8udG9TdHJpbmc7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogVXNlZCB0byByZXNvbHZlIHRoZVxuICogW2B0b1N0cmluZ1RhZ2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5wcm90b3R5cGUudG9zdHJpbmcpXG4gKiBvZiB2YWx1ZXMuXG4gKi9cbnZhciBvYmplY3RUb1N0cmluZyA9IG9iamVjdFByb3RvLnRvU3RyaW5nO1xuXG4vKiogVXNlZCB0byBkZXRlY3QgaWYgYSBtZXRob2QgaXMgbmF0aXZlLiAqL1xudmFyIHJlSXNOYXRpdmUgPSBSZWdFeHAoJ14nICtcbiAgZnVuY1RvU3RyaW5nLmNhbGwoaGFzT3duUHJvcGVydHkpLnJlcGxhY2UocmVSZWdFeHBDaGFyLCAnXFxcXCQmJylcbiAgLnJlcGxhY2UoL2hhc093blByb3BlcnR5fChmdW5jdGlvbikuKj8oPz1cXFxcXFwoKXwgZm9yIC4rPyg/PVxcXFxcXF0pL2csICckMS4qPycpICsgJyQnXG4pO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBTeW1ib2wgPSByb290LlN5bWJvbCxcbiAgICBzcGxpY2UgPSBhcnJheVByb3RvLnNwbGljZTtcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgdGhhdCBhcmUgdmVyaWZpZWQgdG8gYmUgbmF0aXZlLiAqL1xudmFyIE1hcCA9IGdldE5hdGl2ZShyb290LCAnTWFwJyksXG4gICAgbmF0aXZlQ3JlYXRlID0gZ2V0TmF0aXZlKE9iamVjdCwgJ2NyZWF0ZScpO1xuXG4vKiogVXNlZCB0byBjb252ZXJ0IHN5bWJvbHMgdG8gcHJpbWl0aXZlcyBhbmQgc3RyaW5ncy4gKi9cbnZhciBzeW1ib2xQcm90byA9IFN5bWJvbCA/IFN5bWJvbC5wcm90b3R5cGUgOiB1bmRlZmluZWQsXG4gICAgc3ltYm9sVG9TdHJpbmcgPSBzeW1ib2xQcm90byA/IHN5bWJvbFByb3RvLnRvU3RyaW5nIDogdW5kZWZpbmVkO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBoYXNoIG9iamVjdC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge0FycmF5fSBbZW50cmllc10gVGhlIGtleS12YWx1ZSBwYWlycyB0byBjYWNoZS5cbiAqL1xuZnVuY3Rpb24gSGFzaChlbnRyaWVzKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gZW50cmllcyA/IGVudHJpZXMubGVuZ3RoIDogMDtcblxuICB0aGlzLmNsZWFyKCk7XG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdmFyIGVudHJ5ID0gZW50cmllc1tpbmRleF07XG4gICAgdGhpcy5zZXQoZW50cnlbMF0sIGVudHJ5WzFdKTtcbiAgfVxufVxuXG4vKipcbiAqIFJlbW92ZXMgYWxsIGtleS12YWx1ZSBlbnRyaWVzIGZyb20gdGhlIGhhc2guXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGNsZWFyXG4gKiBAbWVtYmVyT2YgSGFzaFxuICovXG5mdW5jdGlvbiBoYXNoQ2xlYXIoKSB7XG4gIHRoaXMuX19kYXRhX18gPSBuYXRpdmVDcmVhdGUgPyBuYXRpdmVDcmVhdGUobnVsbCkgOiB7fTtcbn1cblxuLyoqXG4gKiBSZW1vdmVzIGBrZXlgIGFuZCBpdHMgdmFsdWUgZnJvbSB0aGUgaGFzaC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZGVsZXRlXG4gKiBAbWVtYmVyT2YgSGFzaFxuICogQHBhcmFtIHtPYmplY3R9IGhhc2ggVGhlIGhhc2ggdG8gbW9kaWZ5LlxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byByZW1vdmUuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGVudHJ5IHdhcyByZW1vdmVkLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGhhc2hEZWxldGUoa2V5KSB7XG4gIHJldHVybiB0aGlzLmhhcyhrZXkpICYmIGRlbGV0ZSB0aGlzLl9fZGF0YV9fW2tleV07XG59XG5cbi8qKlxuICogR2V0cyB0aGUgaGFzaCB2YWx1ZSBmb3IgYGtleWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGdldFxuICogQG1lbWJlck9mIEhhc2hcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGVudHJ5IHZhbHVlLlxuICovXG5mdW5jdGlvbiBoYXNoR2V0KGtleSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX187XG4gIGlmIChuYXRpdmVDcmVhdGUpIHtcbiAgICB2YXIgcmVzdWx0ID0gZGF0YVtrZXldO1xuICAgIHJldHVybiByZXN1bHQgPT09IEhBU0hfVU5ERUZJTkVEID8gdW5kZWZpbmVkIDogcmVzdWx0O1xuICB9XG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGRhdGEsIGtleSkgPyBkYXRhW2tleV0gOiB1bmRlZmluZWQ7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgaGFzaCB2YWx1ZSBmb3IgYGtleWAgZXhpc3RzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBoYXNcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFuIGVudHJ5IGZvciBga2V5YCBleGlzdHMsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaGFzaEhhcyhrZXkpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fO1xuICByZXR1cm4gbmF0aXZlQ3JlYXRlID8gZGF0YVtrZXldICE9PSB1bmRlZmluZWQgOiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGRhdGEsIGtleSk7XG59XG5cbi8qKlxuICogU2V0cyB0aGUgaGFzaCBga2V5YCB0byBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBzZXRcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHNldC5cbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNldC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGhhc2ggaW5zdGFuY2UuXG4gKi9cbmZ1bmN0aW9uIGhhc2hTZXQoa2V5LCB2YWx1ZSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX187XG4gIGRhdGFba2V5XSA9IChuYXRpdmVDcmVhdGUgJiYgdmFsdWUgPT09IHVuZGVmaW5lZCkgPyBIQVNIX1VOREVGSU5FRCA6IHZhbHVlO1xuICByZXR1cm4gdGhpcztcbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYEhhc2hgLlxuSGFzaC5wcm90b3R5cGUuY2xlYXIgPSBoYXNoQ2xlYXI7XG5IYXNoLnByb3RvdHlwZVsnZGVsZXRlJ10gPSBoYXNoRGVsZXRlO1xuSGFzaC5wcm90b3R5cGUuZ2V0ID0gaGFzaEdldDtcbkhhc2gucHJvdG90eXBlLmhhcyA9IGhhc2hIYXM7XG5IYXNoLnByb3RvdHlwZS5zZXQgPSBoYXNoU2V0O1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gbGlzdCBjYWNoZSBvYmplY3QuXG4gKlxuICogQHByaXZhdGVcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtBcnJheX0gW2VudHJpZXNdIFRoZSBrZXktdmFsdWUgcGFpcnMgdG8gY2FjaGUuXG4gKi9cbmZ1bmN0aW9uIExpc3RDYWNoZShlbnRyaWVzKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gZW50cmllcyA/IGVudHJpZXMubGVuZ3RoIDogMDtcblxuICB0aGlzLmNsZWFyKCk7XG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdmFyIGVudHJ5ID0gZW50cmllc1tpbmRleF07XG4gICAgdGhpcy5zZXQoZW50cnlbMF0sIGVudHJ5WzFdKTtcbiAgfVxufVxuXG4vKipcbiAqIFJlbW92ZXMgYWxsIGtleS12YWx1ZSBlbnRyaWVzIGZyb20gdGhlIGxpc3QgY2FjaGUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGNsZWFyXG4gKiBAbWVtYmVyT2YgTGlzdENhY2hlXG4gKi9cbmZ1bmN0aW9uIGxpc3RDYWNoZUNsZWFyKCkge1xuICB0aGlzLl9fZGF0YV9fID0gW107XG59XG5cbi8qKlxuICogUmVtb3ZlcyBga2V5YCBhbmQgaXRzIHZhbHVlIGZyb20gdGhlIGxpc3QgY2FjaGUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGRlbGV0ZVxuICogQG1lbWJlck9mIExpc3RDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byByZW1vdmUuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGVudHJ5IHdhcyByZW1vdmVkLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGxpc3RDYWNoZURlbGV0ZShrZXkpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fLFxuICAgICAgaW5kZXggPSBhc3NvY0luZGV4T2YoZGF0YSwga2V5KTtcblxuICBpZiAoaW5kZXggPCAwKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciBsYXN0SW5kZXggPSBkYXRhLmxlbmd0aCAtIDE7XG4gIGlmIChpbmRleCA9PSBsYXN0SW5kZXgpIHtcbiAgICBkYXRhLnBvcCgpO1xuICB9IGVsc2Uge1xuICAgIHNwbGljZS5jYWxsKGRhdGEsIGluZGV4LCAxKTtcbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cblxuLyoqXG4gKiBHZXRzIHRoZSBsaXN0IGNhY2hlIHZhbHVlIGZvciBga2V5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZ2V0XG4gKiBAbWVtYmVyT2YgTGlzdENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBlbnRyeSB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlR2V0KGtleSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX18sXG4gICAgICBpbmRleCA9IGFzc29jSW5kZXhPZihkYXRhLCBrZXkpO1xuXG4gIHJldHVybiBpbmRleCA8IDAgPyB1bmRlZmluZWQgOiBkYXRhW2luZGV4XVsxXTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYSBsaXN0IGNhY2hlIHZhbHVlIGZvciBga2V5YCBleGlzdHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGhhc1xuICogQG1lbWJlck9mIExpc3RDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBlbnRyeSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBhbiBlbnRyeSBmb3IgYGtleWAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGxpc3RDYWNoZUhhcyhrZXkpIHtcbiAgcmV0dXJuIGFzc29jSW5kZXhPZih0aGlzLl9fZGF0YV9fLCBrZXkpID4gLTE7XG59XG5cbi8qKlxuICogU2V0cyB0aGUgbGlzdCBjYWNoZSBga2V5YCB0byBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBzZXRcbiAqIEBtZW1iZXJPZiBMaXN0Q2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gc2V0LlxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2V0LlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgbGlzdCBjYWNoZSBpbnN0YW5jZS5cbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlU2V0KGtleSwgdmFsdWUpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fLFxuICAgICAgaW5kZXggPSBhc3NvY0luZGV4T2YoZGF0YSwga2V5KTtcblxuICBpZiAoaW5kZXggPCAwKSB7XG4gICAgZGF0YS5wdXNoKFtrZXksIHZhbHVlXSk7XG4gIH0gZWxzZSB7XG4gICAgZGF0YVtpbmRleF1bMV0gPSB2YWx1ZTtcbiAgfVxuICByZXR1cm4gdGhpcztcbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYExpc3RDYWNoZWAuXG5MaXN0Q2FjaGUucHJvdG90eXBlLmNsZWFyID0gbGlzdENhY2hlQ2xlYXI7XG5MaXN0Q2FjaGUucHJvdG90eXBlWydkZWxldGUnXSA9IGxpc3RDYWNoZURlbGV0ZTtcbkxpc3RDYWNoZS5wcm90b3R5cGUuZ2V0ID0gbGlzdENhY2hlR2V0O1xuTGlzdENhY2hlLnByb3RvdHlwZS5oYXMgPSBsaXN0Q2FjaGVIYXM7XG5MaXN0Q2FjaGUucHJvdG90eXBlLnNldCA9IGxpc3RDYWNoZVNldDtcblxuLyoqXG4gKiBDcmVhdGVzIGEgbWFwIGNhY2hlIG9iamVjdCB0byBzdG9yZSBrZXktdmFsdWUgcGFpcnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtBcnJheX0gW2VudHJpZXNdIFRoZSBrZXktdmFsdWUgcGFpcnMgdG8gY2FjaGUuXG4gKi9cbmZ1bmN0aW9uIE1hcENhY2hlKGVudHJpZXMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBlbnRyaWVzID8gZW50cmllcy5sZW5ndGggOiAwO1xuXG4gIHRoaXMuY2xlYXIoKTtcbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIgZW50cnkgPSBlbnRyaWVzW2luZGV4XTtcbiAgICB0aGlzLnNldChlbnRyeVswXSwgZW50cnlbMV0pO1xuICB9XG59XG5cbi8qKlxuICogUmVtb3ZlcyBhbGwga2V5LXZhbHVlIGVudHJpZXMgZnJvbSB0aGUgbWFwLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBjbGVhclxuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKi9cbmZ1bmN0aW9uIG1hcENhY2hlQ2xlYXIoKSB7XG4gIHRoaXMuX19kYXRhX18gPSB7XG4gICAgJ2hhc2gnOiBuZXcgSGFzaCxcbiAgICAnbWFwJzogbmV3IChNYXAgfHwgTGlzdENhY2hlKSxcbiAgICAnc3RyaW5nJzogbmV3IEhhc2hcbiAgfTtcbn1cblxuLyoqXG4gKiBSZW1vdmVzIGBrZXlgIGFuZCBpdHMgdmFsdWUgZnJvbSB0aGUgbWFwLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBkZWxldGVcbiAqIEBtZW1iZXJPZiBNYXBDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byByZW1vdmUuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGVudHJ5IHdhcyByZW1vdmVkLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIG1hcENhY2hlRGVsZXRlKGtleSkge1xuICByZXR1cm4gZ2V0TWFwRGF0YSh0aGlzLCBrZXkpWydkZWxldGUnXShrZXkpO1xufVxuXG4vKipcbiAqIEdldHMgdGhlIG1hcCB2YWx1ZSBmb3IgYGtleWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGdldFxuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBlbnRyeSB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVHZXQoa2V5KSB7XG4gIHJldHVybiBnZXRNYXBEYXRhKHRoaXMsIGtleSkuZ2V0KGtleSk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgbWFwIHZhbHVlIGZvciBga2V5YCBleGlzdHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGhhc1xuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFuIGVudHJ5IGZvciBga2V5YCBleGlzdHMsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVIYXMoa2V5KSB7XG4gIHJldHVybiBnZXRNYXBEYXRhKHRoaXMsIGtleSkuaGFzKGtleSk7XG59XG5cbi8qKlxuICogU2V0cyB0aGUgbWFwIGBrZXlgIHRvIGB2YWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIHNldFxuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHNldC5cbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNldC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIG1hcCBjYWNoZSBpbnN0YW5jZS5cbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVTZXQoa2V5LCB2YWx1ZSkge1xuICBnZXRNYXBEYXRhKHRoaXMsIGtleSkuc2V0KGtleSwgdmFsdWUpO1xuICByZXR1cm4gdGhpcztcbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYE1hcENhY2hlYC5cbk1hcENhY2hlLnByb3RvdHlwZS5jbGVhciA9IG1hcENhY2hlQ2xlYXI7XG5NYXBDYWNoZS5wcm90b3R5cGVbJ2RlbGV0ZSddID0gbWFwQ2FjaGVEZWxldGU7XG5NYXBDYWNoZS5wcm90b3R5cGUuZ2V0ID0gbWFwQ2FjaGVHZXQ7XG5NYXBDYWNoZS5wcm90b3R5cGUuaGFzID0gbWFwQ2FjaGVIYXM7XG5NYXBDYWNoZS5wcm90b3R5cGUuc2V0ID0gbWFwQ2FjaGVTZXQ7XG5cbi8qKlxuICogR2V0cyB0aGUgaW5kZXggYXQgd2hpY2ggdGhlIGBrZXlgIGlzIGZvdW5kIGluIGBhcnJheWAgb2Yga2V5LXZhbHVlIHBhaXJzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gaW5zcGVjdC5cbiAqIEBwYXJhbSB7Kn0ga2V5IFRoZSBrZXkgdG8gc2VhcmNoIGZvci5cbiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIGluZGV4IG9mIHRoZSBtYXRjaGVkIHZhbHVlLCBlbHNlIGAtMWAuXG4gKi9cbmZ1bmN0aW9uIGFzc29jSW5kZXhPZihhcnJheSwga2V5KSB7XG4gIHZhciBsZW5ndGggPSBhcnJheS5sZW5ndGg7XG4gIHdoaWxlIChsZW5ndGgtLSkge1xuICAgIGlmIChlcShhcnJheVtsZW5ndGhdWzBdLCBrZXkpKSB7XG4gICAgICByZXR1cm4gbGVuZ3RoO1xuICAgIH1cbiAgfVxuICByZXR1cm4gLTE7XG59XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uZ2V0YCB3aXRob3V0IHN1cHBvcnQgZm9yIGRlZmF1bHQgdmFsdWVzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge0FycmF5fHN0cmluZ30gcGF0aCBUaGUgcGF0aCBvZiB0aGUgcHJvcGVydHkgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIHJlc29sdmVkIHZhbHVlLlxuICovXG5mdW5jdGlvbiBiYXNlR2V0KG9iamVjdCwgcGF0aCkge1xuICBwYXRoID0gaXNLZXkocGF0aCwgb2JqZWN0KSA/IFtwYXRoXSA6IGNhc3RQYXRoKHBhdGgpO1xuXG4gIHZhciBpbmRleCA9IDAsXG4gICAgICBsZW5ndGggPSBwYXRoLmxlbmd0aDtcblxuICB3aGlsZSAob2JqZWN0ICE9IG51bGwgJiYgaW5kZXggPCBsZW5ndGgpIHtcbiAgICBvYmplY3QgPSBvYmplY3RbdG9LZXkocGF0aFtpbmRleCsrXSldO1xuICB9XG4gIHJldHVybiAoaW5kZXggJiYgaW5kZXggPT0gbGVuZ3RoKSA/IG9iamVjdCA6IHVuZGVmaW5lZDtcbn1cblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pc05hdGl2ZWAgd2l0aG91dCBiYWQgc2hpbSBjaGVja3MuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBuYXRpdmUgZnVuY3Rpb24sXG4gKiAgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBiYXNlSXNOYXRpdmUodmFsdWUpIHtcbiAgaWYgKCFpc09iamVjdCh2YWx1ZSkgfHwgaXNNYXNrZWQodmFsdWUpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciBwYXR0ZXJuID0gKGlzRnVuY3Rpb24odmFsdWUpIHx8IGlzSG9zdE9iamVjdCh2YWx1ZSkpID8gcmVJc05hdGl2ZSA6IHJlSXNIb3N0Q3RvcjtcbiAgcmV0dXJuIHBhdHRlcm4udGVzdCh0b1NvdXJjZSh2YWx1ZSkpO1xufVxuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnRvU3RyaW5nYCB3aGljaCBkb2Vzbid0IGNvbnZlcnQgbnVsbGlzaFxuICogdmFsdWVzIHRvIGVtcHR5IHN0cmluZ3MuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHByb2Nlc3MuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBzdHJpbmcuXG4gKi9cbmZ1bmN0aW9uIGJhc2VUb1N0cmluZyh2YWx1ZSkge1xuICAvLyBFeGl0IGVhcmx5IGZvciBzdHJpbmdzIHRvIGF2b2lkIGEgcGVyZm9ybWFuY2UgaGl0IGluIHNvbWUgZW52aXJvbm1lbnRzLlxuICBpZiAodHlwZW9mIHZhbHVlID09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIGlmIChpc1N5bWJvbCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gc3ltYm9sVG9TdHJpbmcgPyBzeW1ib2xUb1N0cmluZy5jYWxsKHZhbHVlKSA6ICcnO1xuICB9XG4gIHZhciByZXN1bHQgPSAodmFsdWUgKyAnJyk7XG4gIHJldHVybiAocmVzdWx0ID09ICcwJyAmJiAoMSAvIHZhbHVlKSA9PSAtSU5GSU5JVFkpID8gJy0wJyA6IHJlc3VsdDtcbn1cblxuLyoqXG4gKiBDYXN0cyBgdmFsdWVgIHRvIGEgcGF0aCBhcnJheSBpZiBpdCdzIG5vdCBvbmUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGluc3BlY3QuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGNhc3QgcHJvcGVydHkgcGF0aCBhcnJheS5cbiAqL1xuZnVuY3Rpb24gY2FzdFBhdGgodmFsdWUpIHtcbiAgcmV0dXJuIGlzQXJyYXkodmFsdWUpID8gdmFsdWUgOiBzdHJpbmdUb1BhdGgodmFsdWUpO1xufVxuXG4vKipcbiAqIEdldHMgdGhlIGRhdGEgZm9yIGBtYXBgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gbWFwIFRoZSBtYXAgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSByZWZlcmVuY2Uga2V5LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIG1hcCBkYXRhLlxuICovXG5mdW5jdGlvbiBnZXRNYXBEYXRhKG1hcCwga2V5KSB7XG4gIHZhciBkYXRhID0gbWFwLl9fZGF0YV9fO1xuICByZXR1cm4gaXNLZXlhYmxlKGtleSlcbiAgICA/IGRhdGFbdHlwZW9mIGtleSA9PSAnc3RyaW5nJyA/ICdzdHJpbmcnIDogJ2hhc2gnXVxuICAgIDogZGF0YS5tYXA7XG59XG5cbi8qKlxuICogR2V0cyB0aGUgbmF0aXZlIGZ1bmN0aW9uIGF0IGBrZXlgIG9mIGBvYmplY3RgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIG1ldGhvZCB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZnVuY3Rpb24gaWYgaXQncyBuYXRpdmUsIGVsc2UgYHVuZGVmaW5lZGAuXG4gKi9cbmZ1bmN0aW9uIGdldE5hdGl2ZShvYmplY3QsIGtleSkge1xuICB2YXIgdmFsdWUgPSBnZXRWYWx1ZShvYmplY3QsIGtleSk7XG4gIHJldHVybiBiYXNlSXNOYXRpdmUodmFsdWUpID8gdmFsdWUgOiB1bmRlZmluZWQ7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSBwcm9wZXJ0eSBuYW1lIGFuZCBub3QgYSBwcm9wZXJ0eSBwYXRoLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0XSBUaGUgb2JqZWN0IHRvIHF1ZXJ5IGtleXMgb24uXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHByb3BlcnR5IG5hbWUsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaXNLZXkodmFsdWUsIG9iamVjdCkge1xuICBpZiAoaXNBcnJheSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gIGlmICh0eXBlID09ICdudW1iZXInIHx8IHR5cGUgPT0gJ3N5bWJvbCcgfHwgdHlwZSA9PSAnYm9vbGVhbicgfHxcbiAgICAgIHZhbHVlID09IG51bGwgfHwgaXNTeW1ib2wodmFsdWUpKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgcmV0dXJuIHJlSXNQbGFpblByb3AudGVzdCh2YWx1ZSkgfHwgIXJlSXNEZWVwUHJvcC50ZXN0KHZhbHVlKSB8fFxuICAgIChvYmplY3QgIT0gbnVsbCAmJiB2YWx1ZSBpbiBPYmplY3Qob2JqZWN0KSk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgc3VpdGFibGUgZm9yIHVzZSBhcyB1bmlxdWUgb2JqZWN0IGtleS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBzdWl0YWJsZSwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc0tleWFibGUodmFsdWUpIHtcbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gIHJldHVybiAodHlwZSA9PSAnc3RyaW5nJyB8fCB0eXBlID09ICdudW1iZXInIHx8IHR5cGUgPT0gJ3N5bWJvbCcgfHwgdHlwZSA9PSAnYm9vbGVhbicpXG4gICAgPyAodmFsdWUgIT09ICdfX3Byb3RvX18nKVxuICAgIDogKHZhbHVlID09PSBudWxsKTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYGZ1bmNgIGhhcyBpdHMgc291cmNlIG1hc2tlZC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYGZ1bmNgIGlzIG1hc2tlZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc01hc2tlZChmdW5jKSB7XG4gIHJldHVybiAhIW1hc2tTcmNLZXkgJiYgKG1hc2tTcmNLZXkgaW4gZnVuYyk7XG59XG5cbi8qKlxuICogQ29udmVydHMgYHN0cmluZ2AgdG8gYSBwcm9wZXJ0eSBwYXRoIGFycmF5LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nIFRoZSBzdHJpbmcgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgcHJvcGVydHkgcGF0aCBhcnJheS5cbiAqL1xudmFyIHN0cmluZ1RvUGF0aCA9IG1lbW9pemUoZnVuY3Rpb24oc3RyaW5nKSB7XG4gIHN0cmluZyA9IHRvU3RyaW5nKHN0cmluZyk7XG5cbiAgdmFyIHJlc3VsdCA9IFtdO1xuICBpZiAocmVMZWFkaW5nRG90LnRlc3Qoc3RyaW5nKSkge1xuICAgIHJlc3VsdC5wdXNoKCcnKTtcbiAgfVxuICBzdHJpbmcucmVwbGFjZShyZVByb3BOYW1lLCBmdW5jdGlvbihtYXRjaCwgbnVtYmVyLCBxdW90ZSwgc3RyaW5nKSB7XG4gICAgcmVzdWx0LnB1c2gocXVvdGUgPyBzdHJpbmcucmVwbGFjZShyZUVzY2FwZUNoYXIsICckMScpIDogKG51bWJlciB8fCBtYXRjaCkpO1xuICB9KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn0pO1xuXG4vKipcbiAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYSBzdHJpbmcga2V5IGlmIGl0J3Mgbm90IGEgc3RyaW5nIG9yIHN5bWJvbC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gaW5zcGVjdC5cbiAqIEByZXR1cm5zIHtzdHJpbmd8c3ltYm9sfSBSZXR1cm5zIHRoZSBrZXkuXG4gKi9cbmZ1bmN0aW9uIHRvS2V5KHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT0gJ3N0cmluZycgfHwgaXNTeW1ib2wodmFsdWUpKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIHZhciByZXN1bHQgPSAodmFsdWUgKyAnJyk7XG4gIHJldHVybiAocmVzdWx0ID09ICcwJyAmJiAoMSAvIHZhbHVlKSA9PSAtSU5GSU5JVFkpID8gJy0wJyA6IHJlc3VsdDtcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBgZnVuY2AgdG8gaXRzIHNvdXJjZSBjb2RlLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBwcm9jZXNzLlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgc291cmNlIGNvZGUuXG4gKi9cbmZ1bmN0aW9uIHRvU291cmNlKGZ1bmMpIHtcbiAgaWYgKGZ1bmMgIT0gbnVsbCkge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gZnVuY1RvU3RyaW5nLmNhbGwoZnVuYyk7XG4gICAgfSBjYXRjaCAoZSkge31cbiAgICB0cnkge1xuICAgICAgcmV0dXJuIChmdW5jICsgJycpO1xuICAgIH0gY2F0Y2ggKGUpIHt9XG4gIH1cbiAgcmV0dXJuICcnO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IG1lbW9pemVzIHRoZSByZXN1bHQgb2YgYGZ1bmNgLiBJZiBgcmVzb2x2ZXJgIGlzXG4gKiBwcm92aWRlZCwgaXQgZGV0ZXJtaW5lcyB0aGUgY2FjaGUga2V5IGZvciBzdG9yaW5nIHRoZSByZXN1bHQgYmFzZWQgb24gdGhlXG4gKiBhcmd1bWVudHMgcHJvdmlkZWQgdG8gdGhlIG1lbW9pemVkIGZ1bmN0aW9uLiBCeSBkZWZhdWx0LCB0aGUgZmlyc3QgYXJndW1lbnRcbiAqIHByb3ZpZGVkIHRvIHRoZSBtZW1vaXplZCBmdW5jdGlvbiBpcyB1c2VkIGFzIHRoZSBtYXAgY2FjaGUga2V5LiBUaGUgYGZ1bmNgXG4gKiBpcyBpbnZva2VkIHdpdGggdGhlIGB0aGlzYCBiaW5kaW5nIG9mIHRoZSBtZW1vaXplZCBmdW5jdGlvbi5cbiAqXG4gKiAqKk5vdGU6KiogVGhlIGNhY2hlIGlzIGV4cG9zZWQgYXMgdGhlIGBjYWNoZWAgcHJvcGVydHkgb24gdGhlIG1lbW9pemVkXG4gKiBmdW5jdGlvbi4gSXRzIGNyZWF0aW9uIG1heSBiZSBjdXN0b21pemVkIGJ5IHJlcGxhY2luZyB0aGUgYF8ubWVtb2l6ZS5DYWNoZWBcbiAqIGNvbnN0cnVjdG9yIHdpdGggb25lIHdob3NlIGluc3RhbmNlcyBpbXBsZW1lbnQgdGhlXG4gKiBbYE1hcGBdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXByb3BlcnRpZXMtb2YtdGhlLW1hcC1wcm90b3R5cGUtb2JqZWN0KVxuICogbWV0aG9kIGludGVyZmFjZSBvZiBgZGVsZXRlYCwgYGdldGAsIGBoYXNgLCBhbmQgYHNldGAuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IEZ1bmN0aW9uXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBoYXZlIGl0cyBvdXRwdXQgbWVtb2l6ZWQuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbcmVzb2x2ZXJdIFRoZSBmdW5jdGlvbiB0byByZXNvbHZlIHRoZSBjYWNoZSBrZXkuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBtZW1vaXplZCBmdW5jdGlvbi5cbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIG9iamVjdCA9IHsgJ2EnOiAxLCAnYic6IDIgfTtcbiAqIHZhciBvdGhlciA9IHsgJ2MnOiAzLCAnZCc6IDQgfTtcbiAqXG4gKiB2YXIgdmFsdWVzID0gXy5tZW1vaXplKF8udmFsdWVzKTtcbiAqIHZhbHVlcyhvYmplY3QpO1xuICogLy8gPT4gWzEsIDJdXG4gKlxuICogdmFsdWVzKG90aGVyKTtcbiAqIC8vID0+IFszLCA0XVxuICpcbiAqIG9iamVjdC5hID0gMjtcbiAqIHZhbHVlcyhvYmplY3QpO1xuICogLy8gPT4gWzEsIDJdXG4gKlxuICogLy8gTW9kaWZ5IHRoZSByZXN1bHQgY2FjaGUuXG4gKiB2YWx1ZXMuY2FjaGUuc2V0KG9iamVjdCwgWydhJywgJ2InXSk7XG4gKiB2YWx1ZXMob2JqZWN0KTtcbiAqIC8vID0+IFsnYScsICdiJ11cbiAqXG4gKiAvLyBSZXBsYWNlIGBfLm1lbW9pemUuQ2FjaGVgLlxuICogXy5tZW1vaXplLkNhY2hlID0gV2Vha01hcDtcbiAqL1xuZnVuY3Rpb24gbWVtb2l6ZShmdW5jLCByZXNvbHZlcikge1xuICBpZiAodHlwZW9mIGZ1bmMgIT0gJ2Z1bmN0aW9uJyB8fCAocmVzb2x2ZXIgJiYgdHlwZW9mIHJlc29sdmVyICE9ICdmdW5jdGlvbicpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihGVU5DX0VSUk9SX1RFWFQpO1xuICB9XG4gIHZhciBtZW1vaXplZCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBhcmdzID0gYXJndW1lbnRzLFxuICAgICAgICBrZXkgPSByZXNvbHZlciA/IHJlc29sdmVyLmFwcGx5KHRoaXMsIGFyZ3MpIDogYXJnc1swXSxcbiAgICAgICAgY2FjaGUgPSBtZW1vaXplZC5jYWNoZTtcblxuICAgIGlmIChjYWNoZS5oYXMoa2V5KSkge1xuICAgICAgcmV0dXJuIGNhY2hlLmdldChrZXkpO1xuICAgIH1cbiAgICB2YXIgcmVzdWx0ID0gZnVuYy5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICBtZW1vaXplZC5jYWNoZSA9IGNhY2hlLnNldChrZXksIHJlc3VsdCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcbiAgbWVtb2l6ZWQuY2FjaGUgPSBuZXcgKG1lbW9pemUuQ2FjaGUgfHwgTWFwQ2FjaGUpO1xuICByZXR1cm4gbWVtb2l6ZWQ7XG59XG5cbi8vIEFzc2lnbiBjYWNoZSB0byBgXy5tZW1vaXplYC5cbm1lbW9pemUuQ2FjaGUgPSBNYXBDYWNoZTtcblxuLyoqXG4gKiBQZXJmb3JtcyBhXG4gKiBbYFNhbWVWYWx1ZVplcm9gXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1zYW1ldmFsdWV6ZXJvKVxuICogY29tcGFyaXNvbiBiZXR3ZWVuIHR3byB2YWx1ZXMgdG8gZGV0ZXJtaW5lIGlmIHRoZXkgYXJlIGVxdWl2YWxlbnQuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0geyp9IG90aGVyIFRoZSBvdGhlciB2YWx1ZSB0byBjb21wYXJlLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSB2YWx1ZXMgYXJlIGVxdWl2YWxlbnQsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIG9iamVjdCA9IHsgJ2EnOiAxIH07XG4gKiB2YXIgb3RoZXIgPSB7ICdhJzogMSB9O1xuICpcbiAqIF8uZXEob2JqZWN0LCBvYmplY3QpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uZXEob2JqZWN0LCBvdGhlcik7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uZXEoJ2EnLCAnYScpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uZXEoJ2EnLCBPYmplY3QoJ2EnKSk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uZXEoTmFOLCBOYU4pO1xuICogLy8gPT4gdHJ1ZVxuICovXG5mdW5jdGlvbiBlcSh2YWx1ZSwgb3RoZXIpIHtcbiAgcmV0dXJuIHZhbHVlID09PSBvdGhlciB8fCAodmFsdWUgIT09IHZhbHVlICYmIG90aGVyICE9PSBvdGhlcik7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhbiBgQXJyYXlgIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhbiBhcnJheSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzQXJyYXkoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJyYXkoZG9jdW1lbnQuYm9keS5jaGlsZHJlbik7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNBcnJheSgnYWJjJyk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNBcnJheShfLm5vb3ApO1xuICogLy8gPT4gZmFsc2VcbiAqL1xudmFyIGlzQXJyYXkgPSBBcnJheS5pc0FycmF5O1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGNsYXNzaWZpZWQgYXMgYSBgRnVuY3Rpb25gIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIGZ1bmN0aW9uLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNGdW5jdGlvbihfKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzRnVuY3Rpb24oL2FiYy8pO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGdW5jdGlvbih2YWx1ZSkge1xuICAvLyBUaGUgdXNlIG9mIGBPYmplY3QjdG9TdHJpbmdgIGF2b2lkcyBpc3N1ZXMgd2l0aCB0aGUgYHR5cGVvZmAgb3BlcmF0b3JcbiAgLy8gaW4gU2FmYXJpIDgtOSB3aGljaCByZXR1cm5zICdvYmplY3QnIGZvciB0eXBlZCBhcnJheSBhbmQgb3RoZXIgY29uc3RydWN0b3JzLlxuICB2YXIgdGFnID0gaXNPYmplY3QodmFsdWUpID8gb2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSkgOiAnJztcbiAgcmV0dXJuIHRhZyA9PSBmdW5jVGFnIHx8IHRhZyA9PSBnZW5UYWc7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgdGhlXG4gKiBbbGFuZ3VhZ2UgdHlwZV0oaHR0cDovL3d3dy5lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLWVjbWFzY3JpcHQtbGFuZ3VhZ2UtdHlwZXMpXG4gKiBvZiBgT2JqZWN0YC4gKGUuZy4gYXJyYXlzLCBmdW5jdGlvbnMsIG9iamVjdHMsIHJlZ2V4ZXMsIGBuZXcgTnVtYmVyKDApYCwgYW5kIGBuZXcgU3RyaW5nKCcnKWApXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gb2JqZWN0LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNPYmplY3Qoe30pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3QoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0KF8ubm9vcCk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdChudWxsKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7XG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICByZXR1cm4gISF2YWx1ZSAmJiAodHlwZSA9PSAnb2JqZWN0JyB8fCB0eXBlID09ICdmdW5jdGlvbicpO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIG9iamVjdC1saWtlLiBBIHZhbHVlIGlzIG9iamVjdC1saWtlIGlmIGl0J3Mgbm90IGBudWxsYFxuICogYW5kIGhhcyBhIGB0eXBlb2ZgIHJlc3VsdCBvZiBcIm9iamVjdFwiLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIG9iamVjdC1saWtlLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKHt9KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShbMSwgMiwgM10pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKF8ubm9vcCk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKG51bGwpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNPYmplY3RMaWtlKHZhbHVlKSB7XG4gIHJldHVybiAhIXZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PSAnb2JqZWN0Jztcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGEgYFN5bWJvbGAgcHJpbWl0aXZlIG9yIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHN5bWJvbCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzU3ltYm9sKFN5bWJvbC5pdGVyYXRvcik7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc1N5bWJvbCgnYWJjJyk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1N5bWJvbCh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09ICdzeW1ib2wnIHx8XG4gICAgKGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgb2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT0gc3ltYm9sVGFnKTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBgdmFsdWVgIHRvIGEgc3RyaW5nLiBBbiBlbXB0eSBzdHJpbmcgaXMgcmV0dXJuZWQgZm9yIGBudWxsYFxuICogYW5kIGB1bmRlZmluZWRgIHZhbHVlcy4gVGhlIHNpZ24gb2YgYC0wYCBpcyBwcmVzZXJ2ZWQuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHByb2Nlc3MuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBzdHJpbmcuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8udG9TdHJpbmcobnVsbCk7XG4gKiAvLyA9PiAnJ1xuICpcbiAqIF8udG9TdHJpbmcoLTApO1xuICogLy8gPT4gJy0wJ1xuICpcbiAqIF8udG9TdHJpbmcoWzEsIDIsIDNdKTtcbiAqIC8vID0+ICcxLDIsMydcbiAqL1xuZnVuY3Rpb24gdG9TdHJpbmcodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlID09IG51bGwgPyAnJyA6IGJhc2VUb1N0cmluZyh2YWx1ZSk7XG59XG5cbi8qKlxuICogR2V0cyB0aGUgdmFsdWUgYXQgYHBhdGhgIG9mIGBvYmplY3RgLiBJZiB0aGUgcmVzb2x2ZWQgdmFsdWUgaXNcbiAqIGB1bmRlZmluZWRgLCB0aGUgYGRlZmF1bHRWYWx1ZWAgaXMgcmV0dXJuZWQgaW4gaXRzIHBsYWNlLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMy43LjBcbiAqIEBjYXRlZ29yeSBPYmplY3RcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEBwYXJhbSB7QXJyYXl8c3RyaW5nfSBwYXRoIFRoZSBwYXRoIG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKiBAcGFyYW0geyp9IFtkZWZhdWx0VmFsdWVdIFRoZSB2YWx1ZSByZXR1cm5lZCBmb3IgYHVuZGVmaW5lZGAgcmVzb2x2ZWQgdmFsdWVzLlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIHJlc29sdmVkIHZhbHVlLlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgb2JqZWN0ID0geyAnYSc6IFt7ICdiJzogeyAnYyc6IDMgfSB9XSB9O1xuICpcbiAqIF8uZ2V0KG9iamVjdCwgJ2FbMF0uYi5jJyk7XG4gKiAvLyA9PiAzXG4gKlxuICogXy5nZXQob2JqZWN0LCBbJ2EnLCAnMCcsICdiJywgJ2MnXSk7XG4gKiAvLyA9PiAzXG4gKlxuICogXy5nZXQob2JqZWN0LCAnYS5iLmMnLCAnZGVmYXVsdCcpO1xuICogLy8gPT4gJ2RlZmF1bHQnXG4gKi9cbmZ1bmN0aW9uIGdldChvYmplY3QsIHBhdGgsIGRlZmF1bHRWYWx1ZSkge1xuICB2YXIgcmVzdWx0ID0gb2JqZWN0ID09IG51bGwgPyB1bmRlZmluZWQgOiBiYXNlR2V0KG9iamVjdCwgcGF0aCk7XG4gIHJldHVybiByZXN1bHQgPT09IHVuZGVmaW5lZCA/IGRlZmF1bHRWYWx1ZSA6IHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXQ7XG4iLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBMb2Rhc2ggKEN1c3RvbSBCdWlsZCkgPGh0dHBzOi8vbG9kYXNoLmNvbS8+XG4gKiBCdWlsZDogYGxvZGFzaCBjb3JlIC1vIC4vZGlzdC9sb2Rhc2guY29yZS5qc2BcbiAqIENvcHlyaWdodCBKUyBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMgPGh0dHBzOi8vanMuZm91bmRhdGlvbi8+XG4gKiBSZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZSA8aHR0cHM6Ly9sb2Rhc2guY29tL2xpY2Vuc2U+XG4gKiBCYXNlZCBvbiBVbmRlcnNjb3JlLmpzIDEuOC4zIDxodHRwOi8vdW5kZXJzY29yZWpzLm9yZy9MSUNFTlNFPlxuICogQ29weXJpZ2h0IEplcmVteSBBc2hrZW5hcywgRG9jdW1lbnRDbG91ZCBhbmQgSW52ZXN0aWdhdGl2ZSBSZXBvcnRlcnMgJiBFZGl0b3JzXG4gKi9cbjsoZnVuY3Rpb24oKSB7XG5cbiAgLyoqIFVzZWQgYXMgYSBzYWZlIHJlZmVyZW5jZSBmb3IgYHVuZGVmaW5lZGAgaW4gcHJlLUVTNSBlbnZpcm9ubWVudHMuICovXG4gIHZhciB1bmRlZmluZWQ7XG5cbiAgLyoqIFVzZWQgYXMgdGhlIHNlbWFudGljIHZlcnNpb24gbnVtYmVyLiAqL1xuICB2YXIgVkVSU0lPTiA9ICc0LjE3LjEwJztcblxuICAvKiogRXJyb3IgbWVzc2FnZSBjb25zdGFudHMuICovXG4gIHZhciBGVU5DX0VSUk9SX1RFWFQgPSAnRXhwZWN0ZWQgYSBmdW5jdGlvbic7XG5cbiAgLyoqIFVzZWQgdG8gY29tcG9zZSBiaXRtYXNrcyBmb3IgdmFsdWUgY29tcGFyaXNvbnMuICovXG4gIHZhciBDT01QQVJFX1BBUlRJQUxfRkxBRyA9IDEsXG4gICAgICBDT01QQVJFX1VOT1JERVJFRF9GTEFHID0gMjtcblxuICAvKiogVXNlZCB0byBjb21wb3NlIGJpdG1hc2tzIGZvciBmdW5jdGlvbiBtZXRhZGF0YS4gKi9cbiAgdmFyIFdSQVBfQklORF9GTEFHID0gMSxcbiAgICAgIFdSQVBfUEFSVElBTF9GTEFHID0gMzI7XG5cbiAgLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmb3IgdmFyaW91cyBgTnVtYmVyYCBjb25zdGFudHMuICovXG4gIHZhciBJTkZJTklUWSA9IDEgLyAwLFxuICAgICAgTUFYX1NBRkVfSU5URUdFUiA9IDkwMDcxOTkyNTQ3NDA5OTE7XG5cbiAgLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xuICB2YXIgYXJnc1RhZyA9ICdbb2JqZWN0IEFyZ3VtZW50c10nLFxuICAgICAgYXJyYXlUYWcgPSAnW29iamVjdCBBcnJheV0nLFxuICAgICAgYXN5bmNUYWcgPSAnW29iamVjdCBBc3luY0Z1bmN0aW9uXScsXG4gICAgICBib29sVGFnID0gJ1tvYmplY3QgQm9vbGVhbl0nLFxuICAgICAgZGF0ZVRhZyA9ICdbb2JqZWN0IERhdGVdJyxcbiAgICAgIGVycm9yVGFnID0gJ1tvYmplY3QgRXJyb3JdJyxcbiAgICAgIGZ1bmNUYWcgPSAnW29iamVjdCBGdW5jdGlvbl0nLFxuICAgICAgZ2VuVGFnID0gJ1tvYmplY3QgR2VuZXJhdG9yRnVuY3Rpb25dJyxcbiAgICAgIG51bWJlclRhZyA9ICdbb2JqZWN0IE51bWJlcl0nLFxuICAgICAgb2JqZWN0VGFnID0gJ1tvYmplY3QgT2JqZWN0XScsXG4gICAgICBwcm94eVRhZyA9ICdbb2JqZWN0IFByb3h5XScsXG4gICAgICByZWdleHBUYWcgPSAnW29iamVjdCBSZWdFeHBdJyxcbiAgICAgIHN0cmluZ1RhZyA9ICdbb2JqZWN0IFN0cmluZ10nO1xuXG4gIC8qKiBVc2VkIHRvIG1hdGNoIEhUTUwgZW50aXRpZXMgYW5kIEhUTUwgY2hhcmFjdGVycy4gKi9cbiAgdmFyIHJlVW5lc2NhcGVkSHRtbCA9IC9bJjw+XCInXS9nLFxuICAgICAgcmVIYXNVbmVzY2FwZWRIdG1sID0gUmVnRXhwKHJlVW5lc2NhcGVkSHRtbC5zb3VyY2UpO1xuXG4gIC8qKiBVc2VkIHRvIGRldGVjdCB1bnNpZ25lZCBpbnRlZ2VyIHZhbHVlcy4gKi9cbiAgdmFyIHJlSXNVaW50ID0gL14oPzowfFsxLTldXFxkKikkLztcblxuICAvKiogVXNlZCB0byBtYXAgY2hhcmFjdGVycyB0byBIVE1MIGVudGl0aWVzLiAqL1xuICB2YXIgaHRtbEVzY2FwZXMgPSB7XG4gICAgJyYnOiAnJmFtcDsnLFxuICAgICc8JzogJyZsdDsnLFxuICAgICc+JzogJyZndDsnLFxuICAgICdcIic6ICcmcXVvdDsnLFxuICAgIFwiJ1wiOiAnJiMzOTsnXG4gIH07XG5cbiAgLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBnbG9iYWxgIGZyb20gTm9kZS5qcy4gKi9cbiAgdmFyIGZyZWVHbG9iYWwgPSB0eXBlb2YgZ2xvYmFsID09ICdvYmplY3QnICYmIGdsb2JhbCAmJiBnbG9iYWwuT2JqZWN0ID09PSBPYmplY3QgJiYgZ2xvYmFsO1xuXG4gIC8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgc2VsZmAuICovXG4gIHZhciBmcmVlU2VsZiA9IHR5cGVvZiBzZWxmID09ICdvYmplY3QnICYmIHNlbGYgJiYgc2VsZi5PYmplY3QgPT09IE9iamVjdCAmJiBzZWxmO1xuXG4gIC8qKiBVc2VkIGFzIGEgcmVmZXJlbmNlIHRvIHRoZSBnbG9iYWwgb2JqZWN0LiAqL1xuICB2YXIgcm9vdCA9IGZyZWVHbG9iYWwgfHwgZnJlZVNlbGYgfHwgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblxuICAvKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYGV4cG9ydHNgLiAqL1xuICB2YXIgZnJlZUV4cG9ydHMgPSB0eXBlb2YgZXhwb3J0cyA9PSAnb2JqZWN0JyAmJiBleHBvcnRzICYmICFleHBvcnRzLm5vZGVUeXBlICYmIGV4cG9ydHM7XG5cbiAgLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBtb2R1bGVgLiAqL1xuICB2YXIgZnJlZU1vZHVsZSA9IGZyZWVFeHBvcnRzICYmIHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlICYmICFtb2R1bGUubm9kZVR5cGUgJiYgbW9kdWxlO1xuXG4gIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4gIC8qKlxuICAgKiBBcHBlbmRzIHRoZSBlbGVtZW50cyBvZiBgdmFsdWVzYCB0byBgYXJyYXlgLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gbW9kaWZ5LlxuICAgKiBAcGFyYW0ge0FycmF5fSB2YWx1ZXMgVGhlIHZhbHVlcyB0byBhcHBlbmQuXG4gICAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyBgYXJyYXlgLlxuICAgKi9cbiAgZnVuY3Rpb24gYXJyYXlQdXNoKGFycmF5LCB2YWx1ZXMpIHtcbiAgICBhcnJheS5wdXNoLmFwcGx5KGFycmF5LCB2YWx1ZXMpO1xuICAgIHJldHVybiBhcnJheTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5maW5kSW5kZXhgIGFuZCBgXy5maW5kTGFzdEluZGV4YCB3aXRob3V0XG4gICAqIHN1cHBvcnQgZm9yIGl0ZXJhdGVlIHNob3J0aGFuZHMuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBpbnNwZWN0LlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBwcmVkaWNhdGUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAgICogQHBhcmFtIHtudW1iZXJ9IGZyb21JbmRleCBUaGUgaW5kZXggdG8gc2VhcmNoIGZyb20uXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW2Zyb21SaWdodF0gU3BlY2lmeSBpdGVyYXRpbmcgZnJvbSByaWdodCB0byBsZWZ0LlxuICAgKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBpbmRleCBvZiB0aGUgbWF0Y2hlZCB2YWx1ZSwgZWxzZSBgLTFgLlxuICAgKi9cbiAgZnVuY3Rpb24gYmFzZUZpbmRJbmRleChhcnJheSwgcHJlZGljYXRlLCBmcm9tSW5kZXgsIGZyb21SaWdodCkge1xuICAgIHZhciBsZW5ndGggPSBhcnJheS5sZW5ndGgsXG4gICAgICAgIGluZGV4ID0gZnJvbUluZGV4ICsgKGZyb21SaWdodCA/IDEgOiAtMSk7XG5cbiAgICB3aGlsZSAoKGZyb21SaWdodCA/IGluZGV4LS0gOiArK2luZGV4IDwgbGVuZ3RoKSkge1xuICAgICAgaWYgKHByZWRpY2F0ZShhcnJheVtpbmRleF0sIGluZGV4LCBhcnJheSkpIHtcbiAgICAgICAgcmV0dXJuIGluZGV4O1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gLTE7XG4gIH1cblxuICAvKipcbiAgICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8ucHJvcGVydHlgIHdpdGhvdXQgc3VwcG9ydCBmb3IgZGVlcCBwYXRocy5cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gICAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGFjY2Vzc29yIGZ1bmN0aW9uLlxuICAgKi9cbiAgZnVuY3Rpb24gYmFzZVByb3BlcnR5KGtleSkge1xuICAgIHJldHVybiBmdW5jdGlvbihvYmplY3QpIHtcbiAgICAgIHJldHVybiBvYmplY3QgPT0gbnVsbCA/IHVuZGVmaW5lZCA6IG9iamVjdFtrZXldO1xuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8ucHJvcGVydHlPZmAgd2l0aG91dCBzdXBwb3J0IGZvciBkZWVwIHBhdGhzLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gICAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGFjY2Vzc29yIGZ1bmN0aW9uLlxuICAgKi9cbiAgZnVuY3Rpb24gYmFzZVByb3BlcnR5T2Yob2JqZWN0KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGtleSkge1xuICAgICAgcmV0dXJuIG9iamVjdCA9PSBudWxsID8gdW5kZWZpbmVkIDogb2JqZWN0W2tleV07XG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5yZWR1Y2VgIGFuZCBgXy5yZWR1Y2VSaWdodGAsIHdpdGhvdXQgc3VwcG9ydFxuICAgKiBmb3IgaXRlcmF0ZWUgc2hvcnRoYW5kcywgd2hpY2ggaXRlcmF0ZXMgb3ZlciBgY29sbGVjdGlvbmAgdXNpbmcgYGVhY2hGdW5jYC5cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtBcnJheXxPYmplY3R9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICAgKiBAcGFyYW0geyp9IGFjY3VtdWxhdG9yIFRoZSBpbml0aWFsIHZhbHVlLlxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IGluaXRBY2N1bSBTcGVjaWZ5IHVzaW5nIHRoZSBmaXJzdCBvciBsYXN0IGVsZW1lbnQgb2ZcbiAgICogIGBjb2xsZWN0aW9uYCBhcyB0aGUgaW5pdGlhbCB2YWx1ZS5cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZWFjaEZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGl0ZXJhdGUgb3ZlciBgY29sbGVjdGlvbmAuXG4gICAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBhY2N1bXVsYXRlZCB2YWx1ZS5cbiAgICovXG4gIGZ1bmN0aW9uIGJhc2VSZWR1Y2UoY29sbGVjdGlvbiwgaXRlcmF0ZWUsIGFjY3VtdWxhdG9yLCBpbml0QWNjdW0sIGVhY2hGdW5jKSB7XG4gICAgZWFjaEZ1bmMoY29sbGVjdGlvbiwgZnVuY3Rpb24odmFsdWUsIGluZGV4LCBjb2xsZWN0aW9uKSB7XG4gICAgICBhY2N1bXVsYXRvciA9IGluaXRBY2N1bVxuICAgICAgICA/IChpbml0QWNjdW0gPSBmYWxzZSwgdmFsdWUpXG4gICAgICAgIDogaXRlcmF0ZWUoYWNjdW11bGF0b3IsIHZhbHVlLCBpbmRleCwgY29sbGVjdGlvbik7XG4gICAgfSk7XG4gICAgcmV0dXJuIGFjY3VtdWxhdG9yO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnZhbHVlc2AgYW5kIGBfLnZhbHVlc0luYCB3aGljaCBjcmVhdGVzIGFuXG4gICAqIGFycmF5IG9mIGBvYmplY3RgIHByb3BlcnR5IHZhbHVlcyBjb3JyZXNwb25kaW5nIHRvIHRoZSBwcm9wZXJ0eSBuYW1lc1xuICAgKiBvZiBgcHJvcHNgLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gICAqIEBwYXJhbSB7QXJyYXl9IHByb3BzIFRoZSBwcm9wZXJ0eSBuYW1lcyB0byBnZXQgdmFsdWVzIGZvci5cbiAgICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcHJvcGVydHkgdmFsdWVzLlxuICAgKi9cbiAgZnVuY3Rpb24gYmFzZVZhbHVlcyhvYmplY3QsIHByb3BzKSB7XG4gICAgcmV0dXJuIGJhc2VNYXAocHJvcHMsIGZ1bmN0aW9uKGtleSkge1xuICAgICAgcmV0dXJuIG9iamVjdFtrZXldO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIFVzZWQgYnkgYF8uZXNjYXBlYCB0byBjb252ZXJ0IGNoYXJhY3RlcnMgdG8gSFRNTCBlbnRpdGllcy5cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNociBUaGUgbWF0Y2hlZCBjaGFyYWN0ZXIgdG8gZXNjYXBlLlxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBlc2NhcGVkIGNoYXJhY3Rlci5cbiAgICovXG4gIHZhciBlc2NhcGVIdG1sQ2hhciA9IGJhc2VQcm9wZXJ0eU9mKGh0bWxFc2NhcGVzKTtcblxuICAvKipcbiAgICogQ3JlYXRlcyBhIHVuYXJ5IGZ1bmN0aW9uIHRoYXQgaW52b2tlcyBgZnVuY2Agd2l0aCBpdHMgYXJndW1lbnQgdHJhbnNmb3JtZWQuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIHdyYXAuXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IHRyYW5zZm9ybSBUaGUgYXJndW1lbnQgdHJhbnNmb3JtLlxuICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBmdW5jdGlvbi5cbiAgICovXG4gIGZ1bmN0aW9uIG92ZXJBcmcoZnVuYywgdHJhbnNmb3JtKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGFyZykge1xuICAgICAgcmV0dXJuIGZ1bmModHJhbnNmb3JtKGFyZykpO1xuICAgIH07XG4gIH1cblxuICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuICAvKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG4gIHZhciBhcnJheVByb3RvID0gQXJyYXkucHJvdG90eXBlLFxuICAgICAgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4gIC8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xuICB2YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuICAvKiogVXNlZCB0byBnZW5lcmF0ZSB1bmlxdWUgSURzLiAqL1xuICB2YXIgaWRDb3VudGVyID0gMDtcblxuICAvKipcbiAgICogVXNlZCB0byByZXNvbHZlIHRoZVxuICAgKiBbYHRvU3RyaW5nVGFnYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtb2JqZWN0LnByb3RvdHlwZS50b3N0cmluZylcbiAgICogb2YgdmFsdWVzLlxuICAgKi9cbiAgdmFyIG5hdGl2ZU9iamVjdFRvU3RyaW5nID0gb2JqZWN0UHJvdG8udG9TdHJpbmc7XG5cbiAgLyoqIFVzZWQgdG8gcmVzdG9yZSB0aGUgb3JpZ2luYWwgYF9gIHJlZmVyZW5jZSBpbiBgXy5ub0NvbmZsaWN0YC4gKi9cbiAgdmFyIG9sZERhc2ggPSByb290Ll87XG5cbiAgLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG4gIHZhciBvYmplY3RDcmVhdGUgPSBPYmplY3QuY3JlYXRlLFxuICAgICAgcHJvcGVydHlJc0VudW1lcmFibGUgPSBvYmplY3RQcm90by5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuICAvKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyBmb3IgdGhvc2Ugd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMuICovXG4gIHZhciBuYXRpdmVJc0Zpbml0ZSA9IHJvb3QuaXNGaW5pdGUsXG4gICAgICBuYXRpdmVLZXlzID0gb3ZlckFyZyhPYmplY3Qua2V5cywgT2JqZWN0KSxcbiAgICAgIG5hdGl2ZU1heCA9IE1hdGgubWF4O1xuXG4gIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuICAvKipcbiAgICogQ3JlYXRlcyBhIGBsb2Rhc2hgIG9iamVjdCB3aGljaCB3cmFwcyBgdmFsdWVgIHRvIGVuYWJsZSBpbXBsaWNpdCBtZXRob2RcbiAgICogY2hhaW4gc2VxdWVuY2VzLiBNZXRob2RzIHRoYXQgb3BlcmF0ZSBvbiBhbmQgcmV0dXJuIGFycmF5cywgY29sbGVjdGlvbnMsXG4gICAqIGFuZCBmdW5jdGlvbnMgY2FuIGJlIGNoYWluZWQgdG9nZXRoZXIuIE1ldGhvZHMgdGhhdCByZXRyaWV2ZSBhIHNpbmdsZSB2YWx1ZVxuICAgKiBvciBtYXkgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlIHdpbGwgYXV0b21hdGljYWxseSBlbmQgdGhlIGNoYWluIHNlcXVlbmNlXG4gICAqIGFuZCByZXR1cm4gdGhlIHVud3JhcHBlZCB2YWx1ZS4gT3RoZXJ3aXNlLCB0aGUgdmFsdWUgbXVzdCBiZSB1bndyYXBwZWRcbiAgICogd2l0aCBgXyN2YWx1ZWAuXG4gICAqXG4gICAqIEV4cGxpY2l0IGNoYWluIHNlcXVlbmNlcywgd2hpY2ggbXVzdCBiZSB1bndyYXBwZWQgd2l0aCBgXyN2YWx1ZWAsIG1heSBiZVxuICAgKiBlbmFibGVkIHVzaW5nIGBfLmNoYWluYC5cbiAgICpcbiAgICogVGhlIGV4ZWN1dGlvbiBvZiBjaGFpbmVkIG1ldGhvZHMgaXMgbGF6eSwgdGhhdCBpcywgaXQncyBkZWZlcnJlZCB1bnRpbFxuICAgKiBgXyN2YWx1ZWAgaXMgaW1wbGljaXRseSBvciBleHBsaWNpdGx5IGNhbGxlZC5cbiAgICpcbiAgICogTGF6eSBldmFsdWF0aW9uIGFsbG93cyBzZXZlcmFsIG1ldGhvZHMgdG8gc3VwcG9ydCBzaG9ydGN1dCBmdXNpb24uXG4gICAqIFNob3J0Y3V0IGZ1c2lvbiBpcyBhbiBvcHRpbWl6YXRpb24gdG8gbWVyZ2UgaXRlcmF0ZWUgY2FsbHM7IHRoaXMgYXZvaWRzXG4gICAqIHRoZSBjcmVhdGlvbiBvZiBpbnRlcm1lZGlhdGUgYXJyYXlzIGFuZCBjYW4gZ3JlYXRseSByZWR1Y2UgdGhlIG51bWJlciBvZlxuICAgKiBpdGVyYXRlZSBleGVjdXRpb25zLiBTZWN0aW9ucyBvZiBhIGNoYWluIHNlcXVlbmNlIHF1YWxpZnkgZm9yIHNob3J0Y3V0XG4gICAqIGZ1c2lvbiBpZiB0aGUgc2VjdGlvbiBpcyBhcHBsaWVkIHRvIGFuIGFycmF5IGFuZCBpdGVyYXRlZXMgYWNjZXB0IG9ubHlcbiAgICogb25lIGFyZ3VtZW50LiBUaGUgaGV1cmlzdGljIGZvciB3aGV0aGVyIGEgc2VjdGlvbiBxdWFsaWZpZXMgZm9yIHNob3J0Y3V0XG4gICAqIGZ1c2lvbiBpcyBzdWJqZWN0IHRvIGNoYW5nZS5cbiAgICpcbiAgICogQ2hhaW5pbmcgaXMgc3VwcG9ydGVkIGluIGN1c3RvbSBidWlsZHMgYXMgbG9uZyBhcyB0aGUgYF8jdmFsdWVgIG1ldGhvZCBpc1xuICAgKiBkaXJlY3RseSBvciBpbmRpcmVjdGx5IGluY2x1ZGVkIGluIHRoZSBidWlsZC5cbiAgICpcbiAgICogSW4gYWRkaXRpb24gdG8gbG9kYXNoIG1ldGhvZHMsIHdyYXBwZXJzIGhhdmUgYEFycmF5YCBhbmQgYFN0cmluZ2AgbWV0aG9kcy5cbiAgICpcbiAgICogVGhlIHdyYXBwZXIgYEFycmF5YCBtZXRob2RzIGFyZTpcbiAgICogYGNvbmNhdGAsIGBqb2luYCwgYHBvcGAsIGBwdXNoYCwgYHNoaWZ0YCwgYHNvcnRgLCBgc3BsaWNlYCwgYW5kIGB1bnNoaWZ0YFxuICAgKlxuICAgKiBUaGUgd3JhcHBlciBgU3RyaW5nYCBtZXRob2RzIGFyZTpcbiAgICogYHJlcGxhY2VgIGFuZCBgc3BsaXRgXG4gICAqXG4gICAqIFRoZSB3cmFwcGVyIG1ldGhvZHMgdGhhdCBzdXBwb3J0IHNob3J0Y3V0IGZ1c2lvbiBhcmU6XG4gICAqIGBhdGAsIGBjb21wYWN0YCwgYGRyb3BgLCBgZHJvcFJpZ2h0YCwgYGRyb3BXaGlsZWAsIGBmaWx0ZXJgLCBgZmluZGAsXG4gICAqIGBmaW5kTGFzdGAsIGBoZWFkYCwgYGluaXRpYWxgLCBgbGFzdGAsIGBtYXBgLCBgcmVqZWN0YCwgYHJldmVyc2VgLCBgc2xpY2VgLFxuICAgKiBgdGFpbGAsIGB0YWtlYCwgYHRha2VSaWdodGAsIGB0YWtlUmlnaHRXaGlsZWAsIGB0YWtlV2hpbGVgLCBhbmQgYHRvQXJyYXlgXG4gICAqXG4gICAqIFRoZSBjaGFpbmFibGUgd3JhcHBlciBtZXRob2RzIGFyZTpcbiAgICogYGFmdGVyYCwgYGFyeWAsIGBhc3NpZ25gLCBgYXNzaWduSW5gLCBgYXNzaWduSW5XaXRoYCwgYGFzc2lnbldpdGhgLCBgYXRgLFxuICAgKiBgYmVmb3JlYCwgYGJpbmRgLCBgYmluZEFsbGAsIGBiaW5kS2V5YCwgYGNhc3RBcnJheWAsIGBjaGFpbmAsIGBjaHVua2AsXG4gICAqIGBjb21taXRgLCBgY29tcGFjdGAsIGBjb25jYXRgLCBgY29uZm9ybXNgLCBgY29uc3RhbnRgLCBgY291bnRCeWAsIGBjcmVhdGVgLFxuICAgKiBgY3VycnlgLCBgZGVib3VuY2VgLCBgZGVmYXVsdHNgLCBgZGVmYXVsdHNEZWVwYCwgYGRlZmVyYCwgYGRlbGF5YCxcbiAgICogYGRpZmZlcmVuY2VgLCBgZGlmZmVyZW5jZUJ5YCwgYGRpZmZlcmVuY2VXaXRoYCwgYGRyb3BgLCBgZHJvcFJpZ2h0YCxcbiAgICogYGRyb3BSaWdodFdoaWxlYCwgYGRyb3BXaGlsZWAsIGBleHRlbmRgLCBgZXh0ZW5kV2l0aGAsIGBmaWxsYCwgYGZpbHRlcmAsXG4gICAqIGBmbGF0TWFwYCwgYGZsYXRNYXBEZWVwYCwgYGZsYXRNYXBEZXB0aGAsIGBmbGF0dGVuYCwgYGZsYXR0ZW5EZWVwYCxcbiAgICogYGZsYXR0ZW5EZXB0aGAsIGBmbGlwYCwgYGZsb3dgLCBgZmxvd1JpZ2h0YCwgYGZyb21QYWlyc2AsIGBmdW5jdGlvbnNgLFxuICAgKiBgZnVuY3Rpb25zSW5gLCBgZ3JvdXBCeWAsIGBpbml0aWFsYCwgYGludGVyc2VjdGlvbmAsIGBpbnRlcnNlY3Rpb25CeWAsXG4gICAqIGBpbnRlcnNlY3Rpb25XaXRoYCwgYGludmVydGAsIGBpbnZlcnRCeWAsIGBpbnZva2VNYXBgLCBgaXRlcmF0ZWVgLCBga2V5QnlgLFxuICAgKiBga2V5c2AsIGBrZXlzSW5gLCBgbWFwYCwgYG1hcEtleXNgLCBgbWFwVmFsdWVzYCwgYG1hdGNoZXNgLCBgbWF0Y2hlc1Byb3BlcnR5YCxcbiAgICogYG1lbW9pemVgLCBgbWVyZ2VgLCBgbWVyZ2VXaXRoYCwgYG1ldGhvZGAsIGBtZXRob2RPZmAsIGBtaXhpbmAsIGBuZWdhdGVgLFxuICAgKiBgbnRoQXJnYCwgYG9taXRgLCBgb21pdEJ5YCwgYG9uY2VgLCBgb3JkZXJCeWAsIGBvdmVyYCwgYG92ZXJBcmdzYCxcbiAgICogYG92ZXJFdmVyeWAsIGBvdmVyU29tZWAsIGBwYXJ0aWFsYCwgYHBhcnRpYWxSaWdodGAsIGBwYXJ0aXRpb25gLCBgcGlja2AsXG4gICAqIGBwaWNrQnlgLCBgcGxhbnRgLCBgcHJvcGVydHlgLCBgcHJvcGVydHlPZmAsIGBwdWxsYCwgYHB1bGxBbGxgLCBgcHVsbEFsbEJ5YCxcbiAgICogYHB1bGxBbGxXaXRoYCwgYHB1bGxBdGAsIGBwdXNoYCwgYHJhbmdlYCwgYHJhbmdlUmlnaHRgLCBgcmVhcmdgLCBgcmVqZWN0YCxcbiAgICogYHJlbW92ZWAsIGByZXN0YCwgYHJldmVyc2VgLCBgc2FtcGxlU2l6ZWAsIGBzZXRgLCBgc2V0V2l0aGAsIGBzaHVmZmxlYCxcbiAgICogYHNsaWNlYCwgYHNvcnRgLCBgc29ydEJ5YCwgYHNwbGljZWAsIGBzcHJlYWRgLCBgdGFpbGAsIGB0YWtlYCwgYHRha2VSaWdodGAsXG4gICAqIGB0YWtlUmlnaHRXaGlsZWAsIGB0YWtlV2hpbGVgLCBgdGFwYCwgYHRocm90dGxlYCwgYHRocnVgLCBgdG9BcnJheWAsXG4gICAqIGB0b1BhaXJzYCwgYHRvUGFpcnNJbmAsIGB0b1BhdGhgLCBgdG9QbGFpbk9iamVjdGAsIGB0cmFuc2Zvcm1gLCBgdW5hcnlgLFxuICAgKiBgdW5pb25gLCBgdW5pb25CeWAsIGB1bmlvbldpdGhgLCBgdW5pcWAsIGB1bmlxQnlgLCBgdW5pcVdpdGhgLCBgdW5zZXRgLFxuICAgKiBgdW5zaGlmdGAsIGB1bnppcGAsIGB1bnppcFdpdGhgLCBgdXBkYXRlYCwgYHVwZGF0ZVdpdGhgLCBgdmFsdWVzYCxcbiAgICogYHZhbHVlc0luYCwgYHdpdGhvdXRgLCBgd3JhcGAsIGB4b3JgLCBgeG9yQnlgLCBgeG9yV2l0aGAsIGB6aXBgLFxuICAgKiBgemlwT2JqZWN0YCwgYHppcE9iamVjdERlZXBgLCBhbmQgYHppcFdpdGhgXG4gICAqXG4gICAqIFRoZSB3cmFwcGVyIG1ldGhvZHMgdGhhdCBhcmUgKipub3QqKiBjaGFpbmFibGUgYnkgZGVmYXVsdCBhcmU6XG4gICAqIGBhZGRgLCBgYXR0ZW1wdGAsIGBjYW1lbENhc2VgLCBgY2FwaXRhbGl6ZWAsIGBjZWlsYCwgYGNsYW1wYCwgYGNsb25lYCxcbiAgICogYGNsb25lRGVlcGAsIGBjbG9uZURlZXBXaXRoYCwgYGNsb25lV2l0aGAsIGBjb25mb3Jtc1RvYCwgYGRlYnVycmAsXG4gICAqIGBkZWZhdWx0VG9gLCBgZGl2aWRlYCwgYGVhY2hgLCBgZWFjaFJpZ2h0YCwgYGVuZHNXaXRoYCwgYGVxYCwgYGVzY2FwZWAsXG4gICAqIGBlc2NhcGVSZWdFeHBgLCBgZXZlcnlgLCBgZmluZGAsIGBmaW5kSW5kZXhgLCBgZmluZEtleWAsIGBmaW5kTGFzdGAsXG4gICAqIGBmaW5kTGFzdEluZGV4YCwgYGZpbmRMYXN0S2V5YCwgYGZpcnN0YCwgYGZsb29yYCwgYGZvckVhY2hgLCBgZm9yRWFjaFJpZ2h0YCxcbiAgICogYGZvckluYCwgYGZvckluUmlnaHRgLCBgZm9yT3duYCwgYGZvck93blJpZ2h0YCwgYGdldGAsIGBndGAsIGBndGVgLCBgaGFzYCxcbiAgICogYGhhc0luYCwgYGhlYWRgLCBgaWRlbnRpdHlgLCBgaW5jbHVkZXNgLCBgaW5kZXhPZmAsIGBpblJhbmdlYCwgYGludm9rZWAsXG4gICAqIGBpc0FyZ3VtZW50c2AsIGBpc0FycmF5YCwgYGlzQXJyYXlCdWZmZXJgLCBgaXNBcnJheUxpa2VgLCBgaXNBcnJheUxpa2VPYmplY3RgLFxuICAgKiBgaXNCb29sZWFuYCwgYGlzQnVmZmVyYCwgYGlzRGF0ZWAsIGBpc0VsZW1lbnRgLCBgaXNFbXB0eWAsIGBpc0VxdWFsYCxcbiAgICogYGlzRXF1YWxXaXRoYCwgYGlzRXJyb3JgLCBgaXNGaW5pdGVgLCBgaXNGdW5jdGlvbmAsIGBpc0ludGVnZXJgLCBgaXNMZW5ndGhgLFxuICAgKiBgaXNNYXBgLCBgaXNNYXRjaGAsIGBpc01hdGNoV2l0aGAsIGBpc05hTmAsIGBpc05hdGl2ZWAsIGBpc05pbGAsIGBpc051bGxgLFxuICAgKiBgaXNOdW1iZXJgLCBgaXNPYmplY3RgLCBgaXNPYmplY3RMaWtlYCwgYGlzUGxhaW5PYmplY3RgLCBgaXNSZWdFeHBgLFxuICAgKiBgaXNTYWZlSW50ZWdlcmAsIGBpc1NldGAsIGBpc1N0cmluZ2AsIGBpc1VuZGVmaW5lZGAsIGBpc1R5cGVkQXJyYXlgLFxuICAgKiBgaXNXZWFrTWFwYCwgYGlzV2Vha1NldGAsIGBqb2luYCwgYGtlYmFiQ2FzZWAsIGBsYXN0YCwgYGxhc3RJbmRleE9mYCxcbiAgICogYGxvd2VyQ2FzZWAsIGBsb3dlckZpcnN0YCwgYGx0YCwgYGx0ZWAsIGBtYXhgLCBgbWF4QnlgLCBgbWVhbmAsIGBtZWFuQnlgLFxuICAgKiBgbWluYCwgYG1pbkJ5YCwgYG11bHRpcGx5YCwgYG5vQ29uZmxpY3RgLCBgbm9vcGAsIGBub3dgLCBgbnRoYCwgYHBhZGAsXG4gICAqIGBwYWRFbmRgLCBgcGFkU3RhcnRgLCBgcGFyc2VJbnRgLCBgcG9wYCwgYHJhbmRvbWAsIGByZWR1Y2VgLCBgcmVkdWNlUmlnaHRgLFxuICAgKiBgcmVwZWF0YCwgYHJlc3VsdGAsIGByb3VuZGAsIGBydW5JbkNvbnRleHRgLCBgc2FtcGxlYCwgYHNoaWZ0YCwgYHNpemVgLFxuICAgKiBgc25ha2VDYXNlYCwgYHNvbWVgLCBgc29ydGVkSW5kZXhgLCBgc29ydGVkSW5kZXhCeWAsIGBzb3J0ZWRMYXN0SW5kZXhgLFxuICAgKiBgc29ydGVkTGFzdEluZGV4QnlgLCBgc3RhcnRDYXNlYCwgYHN0YXJ0c1dpdGhgLCBgc3R1YkFycmF5YCwgYHN0dWJGYWxzZWAsXG4gICAqIGBzdHViT2JqZWN0YCwgYHN0dWJTdHJpbmdgLCBgc3R1YlRydWVgLCBgc3VidHJhY3RgLCBgc3VtYCwgYHN1bUJ5YCxcbiAgICogYHRlbXBsYXRlYCwgYHRpbWVzYCwgYHRvRmluaXRlYCwgYHRvSW50ZWdlcmAsIGB0b0pTT05gLCBgdG9MZW5ndGhgLFxuICAgKiBgdG9Mb3dlcmAsIGB0b051bWJlcmAsIGB0b1NhZmVJbnRlZ2VyYCwgYHRvU3RyaW5nYCwgYHRvVXBwZXJgLCBgdHJpbWAsXG4gICAqIGB0cmltRW5kYCwgYHRyaW1TdGFydGAsIGB0cnVuY2F0ZWAsIGB1bmVzY2FwZWAsIGB1bmlxdWVJZGAsIGB1cHBlckNhc2VgLFxuICAgKiBgdXBwZXJGaXJzdGAsIGB2YWx1ZWAsIGFuZCBgd29yZHNgXG4gICAqXG4gICAqIEBuYW1lIF9cbiAgICogQGNvbnN0cnVjdG9yXG4gICAqIEBjYXRlZ29yeSBTZXFcbiAgICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gd3JhcCBpbiBhIGBsb2Rhc2hgIGluc3RhbmNlLlxuICAgKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBuZXcgYGxvZGFzaGAgd3JhcHBlciBpbnN0YW5jZS5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogZnVuY3Rpb24gc3F1YXJlKG4pIHtcbiAgICogICByZXR1cm4gbiAqIG47XG4gICAqIH1cbiAgICpcbiAgICogdmFyIHdyYXBwZWQgPSBfKFsxLCAyLCAzXSk7XG4gICAqXG4gICAqIC8vIFJldHVybnMgYW4gdW53cmFwcGVkIHZhbHVlLlxuICAgKiB3cmFwcGVkLnJlZHVjZShfLmFkZCk7XG4gICAqIC8vID0+IDZcbiAgICpcbiAgICogLy8gUmV0dXJucyBhIHdyYXBwZWQgdmFsdWUuXG4gICAqIHZhciBzcXVhcmVzID0gd3JhcHBlZC5tYXAoc3F1YXJlKTtcbiAgICpcbiAgICogXy5pc0FycmF5KHNxdWFyZXMpO1xuICAgKiAvLyA9PiBmYWxzZVxuICAgKlxuICAgKiBfLmlzQXJyYXkoc3F1YXJlcy52YWx1ZSgpKTtcbiAgICogLy8gPT4gdHJ1ZVxuICAgKi9cbiAgZnVuY3Rpb24gbG9kYXNoKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgTG9kYXNoV3JhcHBlclxuICAgICAgPyB2YWx1ZVxuICAgICAgOiBuZXcgTG9kYXNoV3JhcHBlcih2YWx1ZSk7XG4gIH1cblxuICAvKipcbiAgICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uY3JlYXRlYCB3aXRob3V0IHN1cHBvcnQgZm9yIGFzc2lnbmluZ1xuICAgKiBwcm9wZXJ0aWVzIHRvIHRoZSBjcmVhdGVkIG9iamVjdC5cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtPYmplY3R9IHByb3RvIFRoZSBvYmplY3QgdG8gaW5oZXJpdCBmcm9tLlxuICAgKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBuZXcgb2JqZWN0LlxuICAgKi9cbiAgdmFyIGJhc2VDcmVhdGUgPSAoZnVuY3Rpb24oKSB7XG4gICAgZnVuY3Rpb24gb2JqZWN0KCkge31cbiAgICByZXR1cm4gZnVuY3Rpb24ocHJvdG8pIHtcbiAgICAgIGlmICghaXNPYmplY3QocHJvdG8pKSB7XG4gICAgICAgIHJldHVybiB7fTtcbiAgICAgIH1cbiAgICAgIGlmIChvYmplY3RDcmVhdGUpIHtcbiAgICAgICAgcmV0dXJuIG9iamVjdENyZWF0ZShwcm90byk7XG4gICAgICB9XG4gICAgICBvYmplY3QucHJvdG90eXBlID0gcHJvdG87XG4gICAgICB2YXIgcmVzdWx0ID0gbmV3IG9iamVjdDtcbiAgICAgIG9iamVjdC5wcm90b3R5cGUgPSB1bmRlZmluZWQ7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH07XG4gIH0oKSk7XG5cbiAgLyoqXG4gICAqIFRoZSBiYXNlIGNvbnN0cnVjdG9yIGZvciBjcmVhdGluZyBgbG9kYXNoYCB3cmFwcGVyIG9iamVjdHMuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHdyYXAuXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW2NoYWluQWxsXSBFbmFibGUgZXhwbGljaXQgbWV0aG9kIGNoYWluIHNlcXVlbmNlcy5cbiAgICovXG4gIGZ1bmN0aW9uIExvZGFzaFdyYXBwZXIodmFsdWUsIGNoYWluQWxsKSB7XG4gICAgdGhpcy5fX3dyYXBwZWRfXyA9IHZhbHVlO1xuICAgIHRoaXMuX19hY3Rpb25zX18gPSBbXTtcbiAgICB0aGlzLl9fY2hhaW5fXyA9ICEhY2hhaW5BbGw7XG4gIH1cblxuICBMb2Rhc2hXcmFwcGVyLnByb3RvdHlwZSA9IGJhc2VDcmVhdGUobG9kYXNoLnByb3RvdHlwZSk7XG4gIExvZGFzaFdyYXBwZXIucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gTG9kYXNoV3JhcHBlcjtcblxuICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbiAgLyoqXG4gICAqIEFzc2lnbnMgYHZhbHVlYCB0byBga2V5YCBvZiBgb2JqZWN0YCBpZiB0aGUgZXhpc3RpbmcgdmFsdWUgaXMgbm90IGVxdWl2YWxlbnRcbiAgICogdXNpbmcgW2BTYW1lVmFsdWVaZXJvYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtc2FtZXZhbHVlemVybylcbiAgICogZm9yIGVxdWFsaXR5IGNvbXBhcmlzb25zLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gbW9kaWZ5LlxuICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHByb3BlcnR5IHRvIGFzc2lnbi5cbiAgICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gYXNzaWduLlxuICAgKi9cbiAgZnVuY3Rpb24gYXNzaWduVmFsdWUob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gICAgdmFyIG9ialZhbHVlID0gb2JqZWN0W2tleV07XG4gICAgaWYgKCEoaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIGtleSkgJiYgZXEob2JqVmFsdWUsIHZhbHVlKSkgfHxcbiAgICAgICAgKHZhbHVlID09PSB1bmRlZmluZWQgJiYgIShrZXkgaW4gb2JqZWN0KSkpIHtcbiAgICAgIGJhc2VBc3NpZ25WYWx1ZShvYmplY3QsIGtleSwgdmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgYXNzaWduVmFsdWVgIGFuZCBgYXNzaWduTWVyZ2VWYWx1ZWAgd2l0aG91dFxuICAgKiB2YWx1ZSBjaGVja3MuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBtb2RpZnkuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgcHJvcGVydHkgdG8gYXNzaWduLlxuICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBhc3NpZ24uXG4gICAqL1xuICBmdW5jdGlvbiBiYXNlQXNzaWduVmFsdWUob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gICAgb2JqZWN0W2tleV0gPSB2YWx1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5kZWxheWAgYW5kIGBfLmRlZmVyYCB3aGljaCBhY2NlcHRzIGBhcmdzYFxuICAgKiB0byBwcm92aWRlIHRvIGBmdW5jYC5cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gZGVsYXkuXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB3YWl0IFRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIHRvIGRlbGF5IGludm9jYXRpb24uXG4gICAqIEBwYXJhbSB7QXJyYXl9IGFyZ3MgVGhlIGFyZ3VtZW50cyB0byBwcm92aWRlIHRvIGBmdW5jYC5cbiAgICogQHJldHVybnMge251bWJlcnxPYmplY3R9IFJldHVybnMgdGhlIHRpbWVyIGlkIG9yIHRpbWVvdXQgb2JqZWN0LlxuICAgKi9cbiAgZnVuY3Rpb24gYmFzZURlbGF5KGZ1bmMsIHdhaXQsIGFyZ3MpIHtcbiAgICBpZiAodHlwZW9mIGZ1bmMgIT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihGVU5DX0VSUk9SX1RFWFQpO1xuICAgIH1cbiAgICByZXR1cm4gc2V0VGltZW91dChmdW5jdGlvbigpIHsgZnVuYy5hcHBseSh1bmRlZmluZWQsIGFyZ3MpOyB9LCB3YWl0KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5mb3JFYWNoYCB3aXRob3V0IHN1cHBvcnQgZm9yIGl0ZXJhdGVlIHNob3J0aGFuZHMuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gaXRlcmF0ZWUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAgICogQHJldHVybnMge0FycmF5fE9iamVjdH0gUmV0dXJucyBgY29sbGVjdGlvbmAuXG4gICAqL1xuICB2YXIgYmFzZUVhY2ggPSBjcmVhdGVCYXNlRWFjaChiYXNlRm9yT3duKTtcblxuICAvKipcbiAgICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uZXZlcnlgIHdpdGhvdXQgc3VwcG9ydCBmb3IgaXRlcmF0ZWUgc2hvcnRoYW5kcy5cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtBcnJheXxPYmplY3R9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBwcmVkaWNhdGUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFsbCBlbGVtZW50cyBwYXNzIHRoZSBwcmVkaWNhdGUgY2hlY2ssXG4gICAqICBlbHNlIGBmYWxzZWBcbiAgICovXG4gIGZ1bmN0aW9uIGJhc2VFdmVyeShjb2xsZWN0aW9uLCBwcmVkaWNhdGUpIHtcbiAgICB2YXIgcmVzdWx0ID0gdHJ1ZTtcbiAgICBiYXNlRWFjaChjb2xsZWN0aW9uLCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIGNvbGxlY3Rpb24pIHtcbiAgICAgIHJlc3VsdCA9ICEhcHJlZGljYXRlKHZhbHVlLCBpbmRleCwgY29sbGVjdGlvbik7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0pO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICAvKipcbiAgICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgbWV0aG9kcyBsaWtlIGBfLm1heGAgYW5kIGBfLm1pbmAgd2hpY2ggYWNjZXB0cyBhXG4gICAqIGBjb21wYXJhdG9yYCB0byBkZXRlcm1pbmUgdGhlIGV4dHJlbXVtIHZhbHVlLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgaXRlcmF0ZWUgaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjb21wYXJhdG9yIFRoZSBjb21wYXJhdG9yIHVzZWQgdG8gY29tcGFyZSB2YWx1ZXMuXG4gICAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBleHRyZW11bSB2YWx1ZS5cbiAgICovXG4gIGZ1bmN0aW9uIGJhc2VFeHRyZW11bShhcnJheSwgaXRlcmF0ZWUsIGNvbXBhcmF0b3IpIHtcbiAgICB2YXIgaW5kZXggPSAtMSxcbiAgICAgICAgbGVuZ3RoID0gYXJyYXkubGVuZ3RoO1xuXG4gICAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICAgIHZhciB2YWx1ZSA9IGFycmF5W2luZGV4XSxcbiAgICAgICAgICBjdXJyZW50ID0gaXRlcmF0ZWUodmFsdWUpO1xuXG4gICAgICBpZiAoY3VycmVudCAhPSBudWxsICYmIChjb21wdXRlZCA9PT0gdW5kZWZpbmVkXG4gICAgICAgICAgICA/IChjdXJyZW50ID09PSBjdXJyZW50ICYmICFmYWxzZSlcbiAgICAgICAgICAgIDogY29tcGFyYXRvcihjdXJyZW50LCBjb21wdXRlZClcbiAgICAgICAgICApKSB7XG4gICAgICAgIHZhciBjb21wdXRlZCA9IGN1cnJlbnQsXG4gICAgICAgICAgICByZXN1bHQgPSB2YWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5maWx0ZXJgIHdpdGhvdXQgc3VwcG9ydCBmb3IgaXRlcmF0ZWUgc2hvcnRoYW5kcy5cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtBcnJheXxPYmplY3R9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBwcmVkaWNhdGUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAgICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgZmlsdGVyZWQgYXJyYXkuXG4gICAqL1xuICBmdW5jdGlvbiBiYXNlRmlsdGVyKGNvbGxlY3Rpb24sIHByZWRpY2F0ZSkge1xuICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICBiYXNlRWFjaChjb2xsZWN0aW9uLCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIGNvbGxlY3Rpb24pIHtcbiAgICAgIGlmIChwcmVkaWNhdGUodmFsdWUsIGluZGV4LCBjb2xsZWN0aW9uKSkge1xuICAgICAgICByZXN1bHQucHVzaCh2YWx1ZSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5mbGF0dGVuYCB3aXRoIHN1cHBvcnQgZm9yIHJlc3RyaWN0aW5nIGZsYXR0ZW5pbmcuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBmbGF0dGVuLlxuICAgKiBAcGFyYW0ge251bWJlcn0gZGVwdGggVGhlIG1heGltdW0gcmVjdXJzaW9uIGRlcHRoLlxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtwcmVkaWNhdGU9aXNGbGF0dGVuYWJsZV0gVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAgICogQHBhcmFtIHtib29sZWFufSBbaXNTdHJpY3RdIFJlc3RyaWN0IHRvIHZhbHVlcyB0aGF0IHBhc3MgYHByZWRpY2F0ZWAgY2hlY2tzLlxuICAgKiBAcGFyYW0ge0FycmF5fSBbcmVzdWx0PVtdXSBUaGUgaW5pdGlhbCByZXN1bHQgdmFsdWUuXG4gICAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IGZsYXR0ZW5lZCBhcnJheS5cbiAgICovXG4gIGZ1bmN0aW9uIGJhc2VGbGF0dGVuKGFycmF5LCBkZXB0aCwgcHJlZGljYXRlLCBpc1N0cmljdCwgcmVzdWx0KSB7XG4gICAgdmFyIGluZGV4ID0gLTEsXG4gICAgICAgIGxlbmd0aCA9IGFycmF5Lmxlbmd0aDtcblxuICAgIHByZWRpY2F0ZSB8fCAocHJlZGljYXRlID0gaXNGbGF0dGVuYWJsZSk7XG4gICAgcmVzdWx0IHx8IChyZXN1bHQgPSBbXSk7XG5cbiAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgdmFyIHZhbHVlID0gYXJyYXlbaW5kZXhdO1xuICAgICAgaWYgKGRlcHRoID4gMCAmJiBwcmVkaWNhdGUodmFsdWUpKSB7XG4gICAgICAgIGlmIChkZXB0aCA+IDEpIHtcbiAgICAgICAgICAvLyBSZWN1cnNpdmVseSBmbGF0dGVuIGFycmF5cyAoc3VzY2VwdGlibGUgdG8gY2FsbCBzdGFjayBsaW1pdHMpLlxuICAgICAgICAgIGJhc2VGbGF0dGVuKHZhbHVlLCBkZXB0aCAtIDEsIHByZWRpY2F0ZSwgaXNTdHJpY3QsIHJlc3VsdCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYXJyYXlQdXNoKHJlc3VsdCwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKCFpc1N0cmljdCkge1xuICAgICAgICByZXN1bHRbcmVzdWx0Lmxlbmd0aF0gPSB2YWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgYmFzZUZvck93bmAgd2hpY2ggaXRlcmF0ZXMgb3ZlciBgb2JqZWN0YFxuICAgKiBwcm9wZXJ0aWVzIHJldHVybmVkIGJ5IGBrZXlzRnVuY2AgYW5kIGludm9rZXMgYGl0ZXJhdGVlYCBmb3IgZWFjaCBwcm9wZXJ0eS5cbiAgICogSXRlcmF0ZWUgZnVuY3Rpb25zIG1heSBleGl0IGl0ZXJhdGlvbiBlYXJseSBieSBleHBsaWNpdGx5IHJldHVybmluZyBgZmFsc2VgLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gaXRlcmF0ZSBvdmVyLlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBrZXlzRnVuYyBUaGUgZnVuY3Rpb24gdG8gZ2V0IHRoZSBrZXlzIG9mIGBvYmplY3RgLlxuICAgKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIGBvYmplY3RgLlxuICAgKi9cbiAgdmFyIGJhc2VGb3IgPSBjcmVhdGVCYXNlRm9yKCk7XG5cbiAgLyoqXG4gICAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmZvck93bmAgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZSBzaG9ydGhhbmRzLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gaXRlcmF0ZSBvdmVyLlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICAgKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIGBvYmplY3RgLlxuICAgKi9cbiAgZnVuY3Rpb24gYmFzZUZvck93bihvYmplY3QsIGl0ZXJhdGVlKSB7XG4gICAgcmV0dXJuIG9iamVjdCAmJiBiYXNlRm9yKG9iamVjdCwgaXRlcmF0ZWUsIGtleXMpO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmZ1bmN0aW9uc2Agd2hpY2ggY3JlYXRlcyBhbiBhcnJheSBvZlxuICAgKiBgb2JqZWN0YCBmdW5jdGlvbiBwcm9wZXJ0eSBuYW1lcyBmaWx0ZXJlZCBmcm9tIGBwcm9wc2AuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBpbnNwZWN0LlxuICAgKiBAcGFyYW0ge0FycmF5fSBwcm9wcyBUaGUgcHJvcGVydHkgbmFtZXMgdG8gZmlsdGVyLlxuICAgKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGZ1bmN0aW9uIG5hbWVzLlxuICAgKi9cbiAgZnVuY3Rpb24gYmFzZUZ1bmN0aW9ucyhvYmplY3QsIHByb3BzKSB7XG4gICAgcmV0dXJuIGJhc2VGaWx0ZXIocHJvcHMsIGZ1bmN0aW9uKGtleSkge1xuICAgICAgcmV0dXJuIGlzRnVuY3Rpb24ob2JqZWN0W2tleV0pO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBnZXRUYWdgIHdpdGhvdXQgZmFsbGJhY2tzIGZvciBidWdneSBlbnZpcm9ubWVudHMuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHF1ZXJ5LlxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBgdG9TdHJpbmdUYWdgLlxuICAgKi9cbiAgZnVuY3Rpb24gYmFzZUdldFRhZyh2YWx1ZSkge1xuICAgIHJldHVybiBvYmplY3RUb1N0cmluZyh2YWx1ZSk7XG4gIH1cblxuICAvKipcbiAgICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uZ3RgIHdoaWNoIGRvZXNuJ3QgY29lcmNlIGFyZ3VtZW50cy5cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29tcGFyZS5cbiAgICogQHBhcmFtIHsqfSBvdGhlciBUaGUgb3RoZXIgdmFsdWUgdG8gY29tcGFyZS5cbiAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgZ3JlYXRlciB0aGFuIGBvdGhlcmAsXG4gICAqICBlbHNlIGBmYWxzZWAuXG4gICAqL1xuICBmdW5jdGlvbiBiYXNlR3QodmFsdWUsIG90aGVyKSB7XG4gICAgcmV0dXJuIHZhbHVlID4gb3RoZXI7XG4gIH1cblxuICAvKipcbiAgICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uaXNBcmd1bWVudHNgLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gYGFyZ3VtZW50c2Agb2JqZWN0LFxuICAgKi9cbiAgdmFyIGJhc2VJc0FyZ3VtZW50cyA9IG5vb3A7XG5cbiAgLyoqXG4gICAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmlzRGF0ZWAgd2l0aG91dCBOb2RlLmpzIG9wdGltaXphdGlvbnMuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIGRhdGUgb2JqZWN0LCBlbHNlIGBmYWxzZWAuXG4gICAqL1xuICBmdW5jdGlvbiBiYXNlSXNEYXRlKHZhbHVlKSB7XG4gICAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgYmFzZUdldFRhZyh2YWx1ZSkgPT0gZGF0ZVRhZztcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pc0VxdWFsYCB3aGljaCBzdXBwb3J0cyBwYXJ0aWFsIGNvbXBhcmlzb25zXG4gICAqIGFuZCB0cmFja3MgdHJhdmVyc2VkIG9iamVjdHMuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbXBhcmUuXG4gICAqIEBwYXJhbSB7Kn0gb3RoZXIgVGhlIG90aGVyIHZhbHVlIHRvIGNvbXBhcmUuXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gYml0bWFzayBUaGUgYml0bWFzayBmbGFncy5cbiAgICogIDEgLSBVbm9yZGVyZWQgY29tcGFyaXNvblxuICAgKiAgMiAtIFBhcnRpYWwgY29tcGFyaXNvblxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY3VzdG9taXplcl0gVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjb21wYXJpc29ucy5cbiAgICogQHBhcmFtIHtPYmplY3R9IFtzdGFja10gVHJhY2tzIHRyYXZlcnNlZCBgdmFsdWVgIGFuZCBgb3RoZXJgIG9iamVjdHMuXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgdmFsdWVzIGFyZSBlcXVpdmFsZW50LCBlbHNlIGBmYWxzZWAuXG4gICAqL1xuICBmdW5jdGlvbiBiYXNlSXNFcXVhbCh2YWx1ZSwgb3RoZXIsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIHN0YWNrKSB7XG4gICAgaWYgKHZhbHVlID09PSBvdGhlcikge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PSBudWxsIHx8IG90aGVyID09IG51bGwgfHwgKCFpc09iamVjdExpa2UodmFsdWUpICYmICFpc09iamVjdExpa2Uob3RoZXIpKSkge1xuICAgICAgcmV0dXJuIHZhbHVlICE9PSB2YWx1ZSAmJiBvdGhlciAhPT0gb3RoZXI7XG4gICAgfVxuICAgIHJldHVybiBiYXNlSXNFcXVhbERlZXAodmFsdWUsIG90aGVyLCBiaXRtYXNrLCBjdXN0b21pemVyLCBiYXNlSXNFcXVhbCwgc3RhY2spO1xuICB9XG5cbiAgLyoqXG4gICAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgYmFzZUlzRXF1YWxgIGZvciBhcnJheXMgYW5kIG9iamVjdHMgd2hpY2ggcGVyZm9ybXNcbiAgICogZGVlcCBjb21wYXJpc29ucyBhbmQgdHJhY2tzIHRyYXZlcnNlZCBvYmplY3RzIGVuYWJsaW5nIG9iamVjdHMgd2l0aCBjaXJjdWxhclxuICAgKiByZWZlcmVuY2VzIHRvIGJlIGNvbXBhcmVkLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY29tcGFyZS5cbiAgICogQHBhcmFtIHtPYmplY3R9IG90aGVyIFRoZSBvdGhlciBvYmplY3QgdG8gY29tcGFyZS5cbiAgICogQHBhcmFtIHtudW1iZXJ9IGJpdG1hc2sgVGhlIGJpdG1hc2sgZmxhZ3MuIFNlZSBgYmFzZUlzRXF1YWxgIGZvciBtb3JlIGRldGFpbHMuXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGN1c3RvbWl6ZXIgVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjb21wYXJpc29ucy5cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZXF1YWxGdW5jIFRoZSBmdW5jdGlvbiB0byBkZXRlcm1pbmUgZXF1aXZhbGVudHMgb2YgdmFsdWVzLlxuICAgKiBAcGFyYW0ge09iamVjdH0gW3N0YWNrXSBUcmFja3MgdHJhdmVyc2VkIGBvYmplY3RgIGFuZCBgb3RoZXJgIG9iamVjdHMuXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgb2JqZWN0cyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLlxuICAgKi9cbiAgZnVuY3Rpb24gYmFzZUlzRXF1YWxEZWVwKG9iamVjdCwgb3RoZXIsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spIHtcbiAgICB2YXIgb2JqSXNBcnIgPSBpc0FycmF5KG9iamVjdCksXG4gICAgICAgIG90aElzQXJyID0gaXNBcnJheShvdGhlciksXG4gICAgICAgIG9ialRhZyA9IG9iaklzQXJyID8gYXJyYXlUYWcgOiBiYXNlR2V0VGFnKG9iamVjdCksXG4gICAgICAgIG90aFRhZyA9IG90aElzQXJyID8gYXJyYXlUYWcgOiBiYXNlR2V0VGFnKG90aGVyKTtcblxuICAgIG9ialRhZyA9IG9ialRhZyA9PSBhcmdzVGFnID8gb2JqZWN0VGFnIDogb2JqVGFnO1xuICAgIG90aFRhZyA9IG90aFRhZyA9PSBhcmdzVGFnID8gb2JqZWN0VGFnIDogb3RoVGFnO1xuXG4gICAgdmFyIG9iaklzT2JqID0gb2JqVGFnID09IG9iamVjdFRhZyxcbiAgICAgICAgb3RoSXNPYmogPSBvdGhUYWcgPT0gb2JqZWN0VGFnLFxuICAgICAgICBpc1NhbWVUYWcgPSBvYmpUYWcgPT0gb3RoVGFnO1xuXG4gICAgc3RhY2sgfHwgKHN0YWNrID0gW10pO1xuICAgIHZhciBvYmpTdGFjayA9IGZpbmQoc3RhY2ssIGZ1bmN0aW9uKGVudHJ5KSB7XG4gICAgICByZXR1cm4gZW50cnlbMF0gPT0gb2JqZWN0O1xuICAgIH0pO1xuICAgIHZhciBvdGhTdGFjayA9IGZpbmQoc3RhY2ssIGZ1bmN0aW9uKGVudHJ5KSB7XG4gICAgICByZXR1cm4gZW50cnlbMF0gPT0gb3RoZXI7XG4gICAgfSk7XG4gICAgaWYgKG9ialN0YWNrICYmIG90aFN0YWNrKSB7XG4gICAgICByZXR1cm4gb2JqU3RhY2tbMV0gPT0gb3RoZXI7XG4gICAgfVxuICAgIHN0YWNrLnB1c2goW29iamVjdCwgb3RoZXJdKTtcbiAgICBzdGFjay5wdXNoKFtvdGhlciwgb2JqZWN0XSk7XG4gICAgaWYgKGlzU2FtZVRhZyAmJiAhb2JqSXNPYmopIHtcbiAgICAgIHZhciByZXN1bHQgPSAob2JqSXNBcnIpXG4gICAgICAgID8gZXF1YWxBcnJheXMob2JqZWN0LCBvdGhlciwgYml0bWFzaywgY3VzdG9taXplciwgZXF1YWxGdW5jLCBzdGFjaylcbiAgICAgICAgOiBlcXVhbEJ5VGFnKG9iamVjdCwgb3RoZXIsIG9ialRhZywgYml0bWFzaywgY3VzdG9taXplciwgZXF1YWxGdW5jLCBzdGFjayk7XG4gICAgICBzdGFjay5wb3AoKTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIGlmICghKGJpdG1hc2sgJiBDT01QQVJFX1BBUlRJQUxfRkxBRykpIHtcbiAgICAgIHZhciBvYmpJc1dyYXBwZWQgPSBvYmpJc09iaiAmJiBoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgJ19fd3JhcHBlZF9fJyksXG4gICAgICAgICAgb3RoSXNXcmFwcGVkID0gb3RoSXNPYmogJiYgaGFzT3duUHJvcGVydHkuY2FsbChvdGhlciwgJ19fd3JhcHBlZF9fJyk7XG5cbiAgICAgIGlmIChvYmpJc1dyYXBwZWQgfHwgb3RoSXNXcmFwcGVkKSB7XG4gICAgICAgIHZhciBvYmpVbndyYXBwZWQgPSBvYmpJc1dyYXBwZWQgPyBvYmplY3QudmFsdWUoKSA6IG9iamVjdCxcbiAgICAgICAgICAgIG90aFVud3JhcHBlZCA9IG90aElzV3JhcHBlZCA/IG90aGVyLnZhbHVlKCkgOiBvdGhlcjtcblxuICAgICAgICB2YXIgcmVzdWx0ID0gZXF1YWxGdW5jKG9ialVud3JhcHBlZCwgb3RoVW53cmFwcGVkLCBiaXRtYXNrLCBjdXN0b21pemVyLCBzdGFjayk7XG4gICAgICAgIHN0YWNrLnBvcCgpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoIWlzU2FtZVRhZykge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICB2YXIgcmVzdWx0ID0gZXF1YWxPYmplY3RzKG9iamVjdCwgb3RoZXIsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spO1xuICAgIHN0YWNrLnBvcCgpO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICAvKipcbiAgICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uaXNSZWdFeHBgIHdpdGhvdXQgTm9kZS5qcyBvcHRpbWl6YXRpb25zLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSByZWdleHAsIGVsc2UgYGZhbHNlYC5cbiAgICovXG4gIGZ1bmN0aW9uIGJhc2VJc1JlZ0V4cCh2YWx1ZSkge1xuICAgIHJldHVybiBpc09iamVjdExpa2UodmFsdWUpICYmIGJhc2VHZXRUYWcodmFsdWUpID09IHJlZ2V4cFRhZztcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pdGVyYXRlZWAuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7Kn0gW3ZhbHVlPV8uaWRlbnRpdHldIFRoZSB2YWx1ZSB0byBjb252ZXJ0IHRvIGFuIGl0ZXJhdGVlLlxuICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIGl0ZXJhdGVlLlxuICAgKi9cbiAgZnVuY3Rpb24gYmFzZUl0ZXJhdGVlKGZ1bmMpIHtcbiAgICBpZiAodHlwZW9mIGZ1bmMgPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmV0dXJuIGZ1bmM7XG4gICAgfVxuICAgIGlmIChmdW5jID09IG51bGwpIHtcbiAgICAgIHJldHVybiBpZGVudGl0eTtcbiAgICB9XG4gICAgcmV0dXJuICh0eXBlb2YgZnVuYyA9PSAnb2JqZWN0JyA/IGJhc2VNYXRjaGVzIDogYmFzZVByb3BlcnR5KShmdW5jKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5sdGAgd2hpY2ggZG9lc24ndCBjb2VyY2UgYXJndW1lbnRzLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb21wYXJlLlxuICAgKiBAcGFyYW0geyp9IG90aGVyIFRoZSBvdGhlciB2YWx1ZSB0byBjb21wYXJlLlxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBsZXNzIHRoYW4gYG90aGVyYCxcbiAgICogIGVsc2UgYGZhbHNlYC5cbiAgICovXG4gIGZ1bmN0aW9uIGJhc2VMdCh2YWx1ZSwgb3RoZXIpIHtcbiAgICByZXR1cm4gdmFsdWUgPCBvdGhlcjtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5tYXBgIHdpdGhvdXQgc3VwcG9ydCBmb3IgaXRlcmF0ZWUgc2hvcnRoYW5kcy5cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtBcnJheXxPYmplY3R9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICAgKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBtYXBwZWQgYXJyYXkuXG4gICAqL1xuICBmdW5jdGlvbiBiYXNlTWFwKGNvbGxlY3Rpb24sIGl0ZXJhdGVlKSB7XG4gICAgdmFyIGluZGV4ID0gLTEsXG4gICAgICAgIHJlc3VsdCA9IGlzQXJyYXlMaWtlKGNvbGxlY3Rpb24pID8gQXJyYXkoY29sbGVjdGlvbi5sZW5ndGgpIDogW107XG5cbiAgICBiYXNlRWFjaChjb2xsZWN0aW9uLCBmdW5jdGlvbih2YWx1ZSwga2V5LCBjb2xsZWN0aW9uKSB7XG4gICAgICByZXN1bHRbKytpbmRleF0gPSBpdGVyYXRlZSh2YWx1ZSwga2V5LCBjb2xsZWN0aW9uKTtcbiAgICB9KTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLm1hdGNoZXNgIHdoaWNoIGRvZXNuJ3QgY2xvbmUgYHNvdXJjZWAuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBzb3VyY2UgVGhlIG9iamVjdCBvZiBwcm9wZXJ0eSB2YWx1ZXMgdG8gbWF0Y2guXG4gICAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IHNwZWMgZnVuY3Rpb24uXG4gICAqL1xuICBmdW5jdGlvbiBiYXNlTWF0Y2hlcyhzb3VyY2UpIHtcbiAgICB2YXIgcHJvcHMgPSBuYXRpdmVLZXlzKHNvdXJjZSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKG9iamVjdCkge1xuICAgICAgdmFyIGxlbmd0aCA9IHByb3BzLmxlbmd0aDtcbiAgICAgIGlmIChvYmplY3QgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gIWxlbmd0aDtcbiAgICAgIH1cbiAgICAgIG9iamVjdCA9IE9iamVjdChvYmplY3QpO1xuICAgICAgd2hpbGUgKGxlbmd0aC0tKSB7XG4gICAgICAgIHZhciBrZXkgPSBwcm9wc1tsZW5ndGhdO1xuICAgICAgICBpZiAoIShrZXkgaW4gb2JqZWN0ICYmXG4gICAgICAgICAgICAgIGJhc2VJc0VxdWFsKHNvdXJjZVtrZXldLCBvYmplY3Rba2V5XSwgQ09NUEFSRV9QQVJUSUFMX0ZMQUcgfCBDT01QQVJFX1VOT1JERVJFRF9GTEFHKVxuICAgICAgICAgICAgKSkge1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5waWNrYCB3aXRob3V0IHN1cHBvcnQgZm9yIGluZGl2aWR1YWxcbiAgICogcHJvcGVydHkgaWRlbnRpZmllcnMuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIHNvdXJjZSBvYmplY3QuXG4gICAqIEBwYXJhbSB7c3RyaW5nW119IHBhdGhzIFRoZSBwcm9wZXJ0eSBwYXRocyB0byBwaWNrLlxuICAgKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBuZXcgb2JqZWN0LlxuICAgKi9cbiAgZnVuY3Rpb24gYmFzZVBpY2sob2JqZWN0LCBwcm9wcykge1xuICAgIG9iamVjdCA9IE9iamVjdChvYmplY3QpO1xuICAgIHJldHVybiByZWR1Y2UocHJvcHMsIGZ1bmN0aW9uKHJlc3VsdCwga2V5KSB7XG4gICAgICBpZiAoa2V5IGluIG9iamVjdCkge1xuICAgICAgICByZXN1bHRba2V5XSA9IG9iamVjdFtrZXldO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9LCB7fSk7XG4gIH1cblxuICAvKipcbiAgICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8ucmVzdGAgd2hpY2ggZG9lc24ndCB2YWxpZGF0ZSBvciBjb2VyY2UgYXJndW1lbnRzLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBhcHBseSBhIHJlc3QgcGFyYW1ldGVyIHRvLlxuICAgKiBAcGFyYW0ge251bWJlcn0gW3N0YXJ0PWZ1bmMubGVuZ3RoLTFdIFRoZSBzdGFydCBwb3NpdGlvbiBvZiB0aGUgcmVzdCBwYXJhbWV0ZXIuXG4gICAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGZ1bmN0aW9uLlxuICAgKi9cbiAgZnVuY3Rpb24gYmFzZVJlc3QoZnVuYywgc3RhcnQpIHtcbiAgICByZXR1cm4gc2V0VG9TdHJpbmcob3ZlclJlc3QoZnVuYywgc3RhcnQsIGlkZW50aXR5KSwgZnVuYyArICcnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5zbGljZWAgd2l0aG91dCBhbiBpdGVyYXRlZSBjYWxsIGd1YXJkLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gc2xpY2UuXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBbc3RhcnQ9MF0gVGhlIHN0YXJ0IHBvc2l0aW9uLlxuICAgKiBAcGFyYW0ge251bWJlcn0gW2VuZD1hcnJheS5sZW5ndGhdIFRoZSBlbmQgcG9zaXRpb24uXG4gICAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgc2xpY2Ugb2YgYGFycmF5YC5cbiAgICovXG4gIGZ1bmN0aW9uIGJhc2VTbGljZShhcnJheSwgc3RhcnQsIGVuZCkge1xuICAgIHZhciBpbmRleCA9IC0xLFxuICAgICAgICBsZW5ndGggPSBhcnJheS5sZW5ndGg7XG5cbiAgICBpZiAoc3RhcnQgPCAwKSB7XG4gICAgICBzdGFydCA9IC1zdGFydCA+IGxlbmd0aCA/IDAgOiAobGVuZ3RoICsgc3RhcnQpO1xuICAgIH1cbiAgICBlbmQgPSBlbmQgPiBsZW5ndGggPyBsZW5ndGggOiBlbmQ7XG4gICAgaWYgKGVuZCA8IDApIHtcbiAgICAgIGVuZCArPSBsZW5ndGg7XG4gICAgfVxuICAgIGxlbmd0aCA9IHN0YXJ0ID4gZW5kID8gMCA6ICgoZW5kIC0gc3RhcnQpID4+PiAwKTtcbiAgICBzdGFydCA+Pj49IDA7XG5cbiAgICB2YXIgcmVzdWx0ID0gQXJyYXkobGVuZ3RoKTtcbiAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgcmVzdWx0W2luZGV4XSA9IGFycmF5W2luZGV4ICsgc3RhcnRdO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgLyoqXG4gICAqIENvcGllcyB0aGUgdmFsdWVzIG9mIGBzb3VyY2VgIHRvIGBhcnJheWAuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7QXJyYXl9IHNvdXJjZSBUaGUgYXJyYXkgdG8gY29weSB2YWx1ZXMgZnJvbS5cbiAgICogQHBhcmFtIHtBcnJheX0gW2FycmF5PVtdXSBUaGUgYXJyYXkgdG8gY29weSB2YWx1ZXMgdG8uXG4gICAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyBgYXJyYXlgLlxuICAgKi9cbiAgZnVuY3Rpb24gY29weUFycmF5KHNvdXJjZSkge1xuICAgIHJldHVybiBiYXNlU2xpY2Uoc291cmNlLCAwLCBzb3VyY2UubGVuZ3RoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5zb21lYCB3aXRob3V0IHN1cHBvcnQgZm9yIGl0ZXJhdGVlIHNob3J0aGFuZHMuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gcHJlZGljYXRlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBhbnkgZWxlbWVudCBwYXNzZXMgdGhlIHByZWRpY2F0ZSBjaGVjayxcbiAgICogIGVsc2UgYGZhbHNlYC5cbiAgICovXG4gIGZ1bmN0aW9uIGJhc2VTb21lKGNvbGxlY3Rpb24sIHByZWRpY2F0ZSkge1xuICAgIHZhciByZXN1bHQ7XG5cbiAgICBiYXNlRWFjaChjb2xsZWN0aW9uLCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIGNvbGxlY3Rpb24pIHtcbiAgICAgIHJlc3VsdCA9IHByZWRpY2F0ZSh2YWx1ZSwgaW5kZXgsIGNvbGxlY3Rpb24pO1xuICAgICAgcmV0dXJuICFyZXN1bHQ7XG4gICAgfSk7XG4gICAgcmV0dXJuICEhcmVzdWx0O1xuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGB3cmFwcGVyVmFsdWVgIHdoaWNoIHJldHVybnMgdGhlIHJlc3VsdCBvZlxuICAgKiBwZXJmb3JtaW5nIGEgc2VxdWVuY2Ugb2YgYWN0aW9ucyBvbiB0aGUgdW53cmFwcGVkIGB2YWx1ZWAsIHdoZXJlIGVhY2hcbiAgICogc3VjY2Vzc2l2ZSBhY3Rpb24gaXMgc3VwcGxpZWQgdGhlIHJldHVybiB2YWx1ZSBvZiB0aGUgcHJldmlvdXMuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHVud3JhcHBlZCB2YWx1ZS5cbiAgICogQHBhcmFtIHtBcnJheX0gYWN0aW9ucyBBY3Rpb25zIHRvIHBlcmZvcm0gdG8gcmVzb2x2ZSB0aGUgdW53cmFwcGVkIHZhbHVlLlxuICAgKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgcmVzb2x2ZWQgdmFsdWUuXG4gICAqL1xuICBmdW5jdGlvbiBiYXNlV3JhcHBlclZhbHVlKHZhbHVlLCBhY3Rpb25zKSB7XG4gICAgdmFyIHJlc3VsdCA9IHZhbHVlO1xuICAgIHJldHVybiByZWR1Y2UoYWN0aW9ucywgZnVuY3Rpb24ocmVzdWx0LCBhY3Rpb24pIHtcbiAgICAgIHJldHVybiBhY3Rpb24uZnVuYy5hcHBseShhY3Rpb24udGhpc0FyZywgYXJyYXlQdXNoKFtyZXN1bHRdLCBhY3Rpb24uYXJncykpO1xuICAgIH0sIHJlc3VsdCk7XG4gIH1cblxuICAvKipcbiAgICogQ29tcGFyZXMgdmFsdWVzIHRvIHNvcnQgdGhlbSBpbiBhc2NlbmRpbmcgb3JkZXIuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbXBhcmUuXG4gICAqIEBwYXJhbSB7Kn0gb3RoZXIgVGhlIG90aGVyIHZhbHVlIHRvIGNvbXBhcmUuXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIHNvcnQgb3JkZXIgaW5kaWNhdG9yIGZvciBgdmFsdWVgLlxuICAgKi9cbiAgZnVuY3Rpb24gY29tcGFyZUFzY2VuZGluZyh2YWx1ZSwgb3RoZXIpIHtcbiAgICBpZiAodmFsdWUgIT09IG90aGVyKSB7XG4gICAgICB2YXIgdmFsSXNEZWZpbmVkID0gdmFsdWUgIT09IHVuZGVmaW5lZCxcbiAgICAgICAgICB2YWxJc051bGwgPSB2YWx1ZSA9PT0gbnVsbCxcbiAgICAgICAgICB2YWxJc1JlZmxleGl2ZSA9IHZhbHVlID09PSB2YWx1ZSxcbiAgICAgICAgICB2YWxJc1N5bWJvbCA9IGZhbHNlO1xuXG4gICAgICB2YXIgb3RoSXNEZWZpbmVkID0gb3RoZXIgIT09IHVuZGVmaW5lZCxcbiAgICAgICAgICBvdGhJc051bGwgPSBvdGhlciA9PT0gbnVsbCxcbiAgICAgICAgICBvdGhJc1JlZmxleGl2ZSA9IG90aGVyID09PSBvdGhlcixcbiAgICAgICAgICBvdGhJc1N5bWJvbCA9IGZhbHNlO1xuXG4gICAgICBpZiAoKCFvdGhJc051bGwgJiYgIW90aElzU3ltYm9sICYmICF2YWxJc1N5bWJvbCAmJiB2YWx1ZSA+IG90aGVyKSB8fFxuICAgICAgICAgICh2YWxJc1N5bWJvbCAmJiBvdGhJc0RlZmluZWQgJiYgb3RoSXNSZWZsZXhpdmUgJiYgIW90aElzTnVsbCAmJiAhb3RoSXNTeW1ib2wpIHx8XG4gICAgICAgICAgKHZhbElzTnVsbCAmJiBvdGhJc0RlZmluZWQgJiYgb3RoSXNSZWZsZXhpdmUpIHx8XG4gICAgICAgICAgKCF2YWxJc0RlZmluZWQgJiYgb3RoSXNSZWZsZXhpdmUpIHx8XG4gICAgICAgICAgIXZhbElzUmVmbGV4aXZlKSB7XG4gICAgICAgIHJldHVybiAxO1xuICAgICAgfVxuICAgICAgaWYgKCghdmFsSXNOdWxsICYmICF2YWxJc1N5bWJvbCAmJiAhb3RoSXNTeW1ib2wgJiYgdmFsdWUgPCBvdGhlcikgfHxcbiAgICAgICAgICAob3RoSXNTeW1ib2wgJiYgdmFsSXNEZWZpbmVkICYmIHZhbElzUmVmbGV4aXZlICYmICF2YWxJc051bGwgJiYgIXZhbElzU3ltYm9sKSB8fFxuICAgICAgICAgIChvdGhJc051bGwgJiYgdmFsSXNEZWZpbmVkICYmIHZhbElzUmVmbGV4aXZlKSB8fFxuICAgICAgICAgICghb3RoSXNEZWZpbmVkICYmIHZhbElzUmVmbGV4aXZlKSB8fFxuICAgICAgICAgICFvdGhJc1JlZmxleGl2ZSkge1xuICAgICAgICByZXR1cm4gLTE7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiAwO1xuICB9XG5cbiAgLyoqXG4gICAqIENvcGllcyBwcm9wZXJ0aWVzIG9mIGBzb3VyY2VgIHRvIGBvYmplY3RgLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge09iamVjdH0gc291cmNlIFRoZSBvYmplY3QgdG8gY29weSBwcm9wZXJ0aWVzIGZyb20uXG4gICAqIEBwYXJhbSB7QXJyYXl9IHByb3BzIFRoZSBwcm9wZXJ0eSBpZGVudGlmaWVycyB0byBjb3B5LlxuICAgKiBAcGFyYW0ge09iamVjdH0gW29iamVjdD17fV0gVGhlIG9iamVjdCB0byBjb3B5IHByb3BlcnRpZXMgdG8uXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjdXN0b21pemVyXSBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNvcGllZCB2YWx1ZXMuXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgYG9iamVjdGAuXG4gICAqL1xuICBmdW5jdGlvbiBjb3B5T2JqZWN0KHNvdXJjZSwgcHJvcHMsIG9iamVjdCwgY3VzdG9taXplcikge1xuICAgIHZhciBpc05ldyA9ICFvYmplY3Q7XG4gICAgb2JqZWN0IHx8IChvYmplY3QgPSB7fSk7XG5cbiAgICB2YXIgaW5kZXggPSAtMSxcbiAgICAgICAgbGVuZ3RoID0gcHJvcHMubGVuZ3RoO1xuXG4gICAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICAgIHZhciBrZXkgPSBwcm9wc1tpbmRleF07XG5cbiAgICAgIHZhciBuZXdWYWx1ZSA9IGN1c3RvbWl6ZXJcbiAgICAgICAgPyBjdXN0b21pemVyKG9iamVjdFtrZXldLCBzb3VyY2Vba2V5XSwga2V5LCBvYmplY3QsIHNvdXJjZSlcbiAgICAgICAgOiB1bmRlZmluZWQ7XG5cbiAgICAgIGlmIChuZXdWYWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIG5ld1ZhbHVlID0gc291cmNlW2tleV07XG4gICAgICB9XG4gICAgICBpZiAoaXNOZXcpIHtcbiAgICAgICAgYmFzZUFzc2lnblZhbHVlKG9iamVjdCwga2V5LCBuZXdWYWx1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhc3NpZ25WYWx1ZShvYmplY3QsIGtleSwgbmV3VmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gb2JqZWN0O1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYSBmdW5jdGlvbiBsaWtlIGBfLmFzc2lnbmAuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGFzc2lnbmVyIFRoZSBmdW5jdGlvbiB0byBhc3NpZ24gdmFsdWVzLlxuICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBhc3NpZ25lciBmdW5jdGlvbi5cbiAgICovXG4gIGZ1bmN0aW9uIGNyZWF0ZUFzc2lnbmVyKGFzc2lnbmVyKSB7XG4gICAgcmV0dXJuIGJhc2VSZXN0KGZ1bmN0aW9uKG9iamVjdCwgc291cmNlcykge1xuICAgICAgdmFyIGluZGV4ID0gLTEsXG4gICAgICAgICAgbGVuZ3RoID0gc291cmNlcy5sZW5ndGgsXG4gICAgICAgICAgY3VzdG9taXplciA9IGxlbmd0aCA+IDEgPyBzb3VyY2VzW2xlbmd0aCAtIDFdIDogdW5kZWZpbmVkO1xuXG4gICAgICBjdXN0b21pemVyID0gKGFzc2lnbmVyLmxlbmd0aCA+IDMgJiYgdHlwZW9mIGN1c3RvbWl6ZXIgPT0gJ2Z1bmN0aW9uJylcbiAgICAgICAgPyAobGVuZ3RoLS0sIGN1c3RvbWl6ZXIpXG4gICAgICAgIDogdW5kZWZpbmVkO1xuXG4gICAgICBvYmplY3QgPSBPYmplY3Qob2JqZWN0KTtcbiAgICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgIHZhciBzb3VyY2UgPSBzb3VyY2VzW2luZGV4XTtcbiAgICAgICAgaWYgKHNvdXJjZSkge1xuICAgICAgICAgIGFzc2lnbmVyKG9iamVjdCwgc291cmNlLCBpbmRleCwgY3VzdG9taXplcik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBvYmplY3Q7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlcyBhIGBiYXNlRWFjaGAgb3IgYGJhc2VFYWNoUmlnaHRgIGZ1bmN0aW9uLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBlYWNoRnVuYyBUaGUgZnVuY3Rpb24gdG8gaXRlcmF0ZSBvdmVyIGEgY29sbGVjdGlvbi5cbiAgICogQHBhcmFtIHtib29sZWFufSBbZnJvbVJpZ2h0XSBTcGVjaWZ5IGl0ZXJhdGluZyBmcm9tIHJpZ2h0IHRvIGxlZnQuXG4gICAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGJhc2UgZnVuY3Rpb24uXG4gICAqL1xuICBmdW5jdGlvbiBjcmVhdGVCYXNlRWFjaChlYWNoRnVuYywgZnJvbVJpZ2h0KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGNvbGxlY3Rpb24sIGl0ZXJhdGVlKSB7XG4gICAgICBpZiAoY29sbGVjdGlvbiA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBjb2xsZWN0aW9uO1xuICAgICAgfVxuICAgICAgaWYgKCFpc0FycmF5TGlrZShjb2xsZWN0aW9uKSkge1xuICAgICAgICByZXR1cm4gZWFjaEZ1bmMoY29sbGVjdGlvbiwgaXRlcmF0ZWUpO1xuICAgICAgfVxuICAgICAgdmFyIGxlbmd0aCA9IGNvbGxlY3Rpb24ubGVuZ3RoLFxuICAgICAgICAgIGluZGV4ID0gZnJvbVJpZ2h0ID8gbGVuZ3RoIDogLTEsXG4gICAgICAgICAgaXRlcmFibGUgPSBPYmplY3QoY29sbGVjdGlvbik7XG5cbiAgICAgIHdoaWxlICgoZnJvbVJpZ2h0ID8gaW5kZXgtLSA6ICsraW5kZXggPCBsZW5ndGgpKSB7XG4gICAgICAgIGlmIChpdGVyYXRlZShpdGVyYWJsZVtpbmRleF0sIGluZGV4LCBpdGVyYWJsZSkgPT09IGZhbHNlKSB7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBjb2xsZWN0aW9uO1xuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlcyBhIGJhc2UgZnVuY3Rpb24gZm9yIG1ldGhvZHMgbGlrZSBgXy5mb3JJbmAgYW5kIGBfLmZvck93bmAuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW2Zyb21SaWdodF0gU3BlY2lmeSBpdGVyYXRpbmcgZnJvbSByaWdodCB0byBsZWZ0LlxuICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBiYXNlIGZ1bmN0aW9uLlxuICAgKi9cbiAgZnVuY3Rpb24gY3JlYXRlQmFzZUZvcihmcm9tUmlnaHQpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24ob2JqZWN0LCBpdGVyYXRlZSwga2V5c0Z1bmMpIHtcbiAgICAgIHZhciBpbmRleCA9IC0xLFxuICAgICAgICAgIGl0ZXJhYmxlID0gT2JqZWN0KG9iamVjdCksXG4gICAgICAgICAgcHJvcHMgPSBrZXlzRnVuYyhvYmplY3QpLFxuICAgICAgICAgIGxlbmd0aCA9IHByb3BzLmxlbmd0aDtcblxuICAgICAgd2hpbGUgKGxlbmd0aC0tKSB7XG4gICAgICAgIHZhciBrZXkgPSBwcm9wc1tmcm9tUmlnaHQgPyBsZW5ndGggOiArK2luZGV4XTtcbiAgICAgICAgaWYgKGl0ZXJhdGVlKGl0ZXJhYmxlW2tleV0sIGtleSwgaXRlcmFibGUpID09PSBmYWxzZSkge1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gb2JqZWN0O1xuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlcyBhIGZ1bmN0aW9uIHRoYXQgcHJvZHVjZXMgYW4gaW5zdGFuY2Ugb2YgYEN0b3JgIHJlZ2FyZGxlc3Mgb2ZcbiAgICogd2hldGhlciBpdCB3YXMgaW52b2tlZCBhcyBwYXJ0IG9mIGEgYG5ld2AgZXhwcmVzc2lvbiBvciBieSBgY2FsbGAgb3IgYGFwcGx5YC5cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gQ3RvciBUaGUgY29uc3RydWN0b3IgdG8gd3JhcC5cbiAgICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgd3JhcHBlZCBmdW5jdGlvbi5cbiAgICovXG4gIGZ1bmN0aW9uIGNyZWF0ZUN0b3IoQ3Rvcikge1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIC8vIFVzZSBhIGBzd2l0Y2hgIHN0YXRlbWVudCB0byB3b3JrIHdpdGggY2xhc3MgY29uc3RydWN0b3JzLiBTZWVcbiAgICAgIC8vIGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLWVjbWFzY3JpcHQtZnVuY3Rpb24tb2JqZWN0cy1jYWxsLXRoaXNhcmd1bWVudC1hcmd1bWVudHNsaXN0XG4gICAgICAvLyBmb3IgbW9yZSBkZXRhaWxzLlxuICAgICAgdmFyIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgICB2YXIgdGhpc0JpbmRpbmcgPSBiYXNlQ3JlYXRlKEN0b3IucHJvdG90eXBlKSxcbiAgICAgICAgICByZXN1bHQgPSBDdG9yLmFwcGx5KHRoaXNCaW5kaW5nLCBhcmdzKTtcblxuICAgICAgLy8gTWltaWMgdGhlIGNvbnN0cnVjdG9yJ3MgYHJldHVybmAgYmVoYXZpb3IuXG4gICAgICAvLyBTZWUgaHR0cHM6Ly9lczUuZ2l0aHViLmlvLyN4MTMuMi4yIGZvciBtb3JlIGRldGFpbHMuXG4gICAgICByZXR1cm4gaXNPYmplY3QocmVzdWx0KSA/IHJlc3VsdCA6IHRoaXNCaW5kaW5nO1xuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlcyBhIGBfLmZpbmRgIG9yIGBfLmZpbmRMYXN0YCBmdW5jdGlvbi5cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZmluZEluZGV4RnVuYyBUaGUgZnVuY3Rpb24gdG8gZmluZCB0aGUgY29sbGVjdGlvbiBpbmRleC5cbiAgICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgZmluZCBmdW5jdGlvbi5cbiAgICovXG4gIGZ1bmN0aW9uIGNyZWF0ZUZpbmQoZmluZEluZGV4RnVuYykge1xuICAgIHJldHVybiBmdW5jdGlvbihjb2xsZWN0aW9uLCBwcmVkaWNhdGUsIGZyb21JbmRleCkge1xuICAgICAgdmFyIGl0ZXJhYmxlID0gT2JqZWN0KGNvbGxlY3Rpb24pO1xuICAgICAgaWYgKCFpc0FycmF5TGlrZShjb2xsZWN0aW9uKSkge1xuICAgICAgICB2YXIgaXRlcmF0ZWUgPSBiYXNlSXRlcmF0ZWUocHJlZGljYXRlLCAzKTtcbiAgICAgICAgY29sbGVjdGlvbiA9IGtleXMoY29sbGVjdGlvbik7XG4gICAgICAgIHByZWRpY2F0ZSA9IGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gaXRlcmF0ZWUoaXRlcmFibGVba2V5XSwga2V5LCBpdGVyYWJsZSk7IH07XG4gICAgICB9XG4gICAgICB2YXIgaW5kZXggPSBmaW5kSW5kZXhGdW5jKGNvbGxlY3Rpb24sIHByZWRpY2F0ZSwgZnJvbUluZGV4KTtcbiAgICAgIHJldHVybiBpbmRleCA+IC0xID8gaXRlcmFibGVbaXRlcmF0ZWUgPyBjb2xsZWN0aW9uW2luZGV4XSA6IGluZGV4XSA6IHVuZGVmaW5lZDtcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IHdyYXBzIGBmdW5jYCB0byBpbnZva2UgaXQgd2l0aCB0aGUgYHRoaXNgIGJpbmRpbmdcbiAgICogb2YgYHRoaXNBcmdgIGFuZCBgcGFydGlhbHNgIHByZXBlbmRlZCB0byB0aGUgYXJndW1lbnRzIGl0IHJlY2VpdmVzLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byB3cmFwLlxuICAgKiBAcGFyYW0ge251bWJlcn0gYml0bWFzayBUaGUgYml0bWFzayBmbGFncy4gU2VlIGBjcmVhdGVXcmFwYCBmb3IgbW9yZSBkZXRhaWxzLlxuICAgKiBAcGFyYW0geyp9IHRoaXNBcmcgVGhlIGB0aGlzYCBiaW5kaW5nIG9mIGBmdW5jYC5cbiAgICogQHBhcmFtIHtBcnJheX0gcGFydGlhbHMgVGhlIGFyZ3VtZW50cyB0byBwcmVwZW5kIHRvIHRob3NlIHByb3ZpZGVkIHRvXG4gICAqICB0aGUgbmV3IGZ1bmN0aW9uLlxuICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyB3cmFwcGVkIGZ1bmN0aW9uLlxuICAgKi9cbiAgZnVuY3Rpb24gY3JlYXRlUGFydGlhbChmdW5jLCBiaXRtYXNrLCB0aGlzQXJnLCBwYXJ0aWFscykge1xuICAgIGlmICh0eXBlb2YgZnVuYyAhPSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKEZVTkNfRVJST1JfVEVYVCk7XG4gICAgfVxuICAgIHZhciBpc0JpbmQgPSBiaXRtYXNrICYgV1JBUF9CSU5EX0ZMQUcsXG4gICAgICAgIEN0b3IgPSBjcmVhdGVDdG9yKGZ1bmMpO1xuXG4gICAgZnVuY3Rpb24gd3JhcHBlcigpIHtcbiAgICAgIHZhciBhcmdzSW5kZXggPSAtMSxcbiAgICAgICAgICBhcmdzTGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aCxcbiAgICAgICAgICBsZWZ0SW5kZXggPSAtMSxcbiAgICAgICAgICBsZWZ0TGVuZ3RoID0gcGFydGlhbHMubGVuZ3RoLFxuICAgICAgICAgIGFyZ3MgPSBBcnJheShsZWZ0TGVuZ3RoICsgYXJnc0xlbmd0aCksXG4gICAgICAgICAgZm4gPSAodGhpcyAmJiB0aGlzICE9PSByb290ICYmIHRoaXMgaW5zdGFuY2VvZiB3cmFwcGVyKSA/IEN0b3IgOiBmdW5jO1xuXG4gICAgICB3aGlsZSAoKytsZWZ0SW5kZXggPCBsZWZ0TGVuZ3RoKSB7XG4gICAgICAgIGFyZ3NbbGVmdEluZGV4XSA9IHBhcnRpYWxzW2xlZnRJbmRleF07XG4gICAgICB9XG4gICAgICB3aGlsZSAoYXJnc0xlbmd0aC0tKSB7XG4gICAgICAgIGFyZ3NbbGVmdEluZGV4KytdID0gYXJndW1lbnRzWysrYXJnc0luZGV4XTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmbi5hcHBseShpc0JpbmQgPyB0aGlzQXJnIDogdGhpcywgYXJncyk7XG4gICAgfVxuICAgIHJldHVybiB3cmFwcGVyO1xuICB9XG5cbiAgLyoqXG4gICAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgYmFzZUlzRXF1YWxEZWVwYCBmb3IgYXJyYXlzIHdpdGggc3VwcG9ydCBmb3JcbiAgICogcGFydGlhbCBkZWVwIGNvbXBhcmlzb25zLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gY29tcGFyZS5cbiAgICogQHBhcmFtIHtBcnJheX0gb3RoZXIgVGhlIG90aGVyIGFycmF5IHRvIGNvbXBhcmUuXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBiaXRtYXNrIFRoZSBiaXRtYXNrIGZsYWdzLiBTZWUgYGJhc2VJc0VxdWFsYCBmb3IgbW9yZSBkZXRhaWxzLlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjdXN0b21pemVyIFRoZSBmdW5jdGlvbiB0byBjdXN0b21pemUgY29tcGFyaXNvbnMuXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGVxdWFsRnVuYyBUaGUgZnVuY3Rpb24gdG8gZGV0ZXJtaW5lIGVxdWl2YWxlbnRzIG9mIHZhbHVlcy5cbiAgICogQHBhcmFtIHtPYmplY3R9IHN0YWNrIFRyYWNrcyB0cmF2ZXJzZWQgYGFycmF5YCBhbmQgYG90aGVyYCBvYmplY3RzLlxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGFycmF5cyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLlxuICAgKi9cbiAgZnVuY3Rpb24gZXF1YWxBcnJheXMoYXJyYXksIG90aGVyLCBiaXRtYXNrLCBjdXN0b21pemVyLCBlcXVhbEZ1bmMsIHN0YWNrKSB7XG4gICAgdmFyIGlzUGFydGlhbCA9IGJpdG1hc2sgJiBDT01QQVJFX1BBUlRJQUxfRkxBRyxcbiAgICAgICAgYXJyTGVuZ3RoID0gYXJyYXkubGVuZ3RoLFxuICAgICAgICBvdGhMZW5ndGggPSBvdGhlci5sZW5ndGg7XG5cbiAgICBpZiAoYXJyTGVuZ3RoICE9IG90aExlbmd0aCAmJiAhKGlzUGFydGlhbCAmJiBvdGhMZW5ndGggPiBhcnJMZW5ndGgpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHZhciBpbmRleCA9IC0xLFxuICAgICAgICByZXN1bHQgPSB0cnVlLFxuICAgICAgICBzZWVuID0gKGJpdG1hc2sgJiBDT01QQVJFX1VOT1JERVJFRF9GTEFHKSA/IFtdIDogdW5kZWZpbmVkO1xuXG4gICAgLy8gSWdub3JlIG5vbi1pbmRleCBwcm9wZXJ0aWVzLlxuICAgIHdoaWxlICgrK2luZGV4IDwgYXJyTGVuZ3RoKSB7XG4gICAgICB2YXIgYXJyVmFsdWUgPSBhcnJheVtpbmRleF0sXG4gICAgICAgICAgb3RoVmFsdWUgPSBvdGhlcltpbmRleF07XG5cbiAgICAgIHZhciBjb21wYXJlZDtcbiAgICAgIGlmIChjb21wYXJlZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGlmIChjb21wYXJlZCkge1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIHJlc3VsdCA9IGZhbHNlO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIC8vIFJlY3Vyc2l2ZWx5IGNvbXBhcmUgYXJyYXlzIChzdXNjZXB0aWJsZSB0byBjYWxsIHN0YWNrIGxpbWl0cykuXG4gICAgICBpZiAoc2Vlbikge1xuICAgICAgICBpZiAoIWJhc2VTb21lKG90aGVyLCBmdW5jdGlvbihvdGhWYWx1ZSwgb3RoSW5kZXgpIHtcbiAgICAgICAgICAgICAgaWYgKCFpbmRleE9mKHNlZW4sIG90aEluZGV4KSAmJlxuICAgICAgICAgICAgICAgICAgKGFyclZhbHVlID09PSBvdGhWYWx1ZSB8fCBlcXVhbEZ1bmMoYXJyVmFsdWUsIG90aFZhbHVlLCBiaXRtYXNrLCBjdXN0b21pemVyLCBzdGFjaykpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNlZW4ucHVzaChvdGhJbmRleCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pKSB7XG4gICAgICAgICAgcmVzdWx0ID0gZmFsc2U7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoIShcbiAgICAgICAgICAgIGFyclZhbHVlID09PSBvdGhWYWx1ZSB8fFxuICAgICAgICAgICAgICBlcXVhbEZ1bmMoYXJyVmFsdWUsIG90aFZhbHVlLCBiaXRtYXNrLCBjdXN0b21pemVyLCBzdGFjaylcbiAgICAgICAgICApKSB7XG4gICAgICAgIHJlc3VsdCA9IGZhbHNlO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIC8qKlxuICAgKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VJc0VxdWFsRGVlcGAgZm9yIGNvbXBhcmluZyBvYmplY3RzIG9mXG4gICAqIHRoZSBzYW1lIGB0b1N0cmluZ1RhZ2AuXG4gICAqXG4gICAqICoqTm90ZToqKiBUaGlzIGZ1bmN0aW9uIG9ubHkgc3VwcG9ydHMgY29tcGFyaW5nIHZhbHVlcyB3aXRoIHRhZ3Mgb2ZcbiAgICogYEJvb2xlYW5gLCBgRGF0ZWAsIGBFcnJvcmAsIGBOdW1iZXJgLCBgUmVnRXhwYCwgb3IgYFN0cmluZ2AuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBjb21wYXJlLlxuICAgKiBAcGFyYW0ge09iamVjdH0gb3RoZXIgVGhlIG90aGVyIG9iamVjdCB0byBjb21wYXJlLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdGFnIFRoZSBgdG9TdHJpbmdUYWdgIG9mIHRoZSBvYmplY3RzIHRvIGNvbXBhcmUuXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBiaXRtYXNrIFRoZSBiaXRtYXNrIGZsYWdzLiBTZWUgYGJhc2VJc0VxdWFsYCBmb3IgbW9yZSBkZXRhaWxzLlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjdXN0b21pemVyIFRoZSBmdW5jdGlvbiB0byBjdXN0b21pemUgY29tcGFyaXNvbnMuXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGVxdWFsRnVuYyBUaGUgZnVuY3Rpb24gdG8gZGV0ZXJtaW5lIGVxdWl2YWxlbnRzIG9mIHZhbHVlcy5cbiAgICogQHBhcmFtIHtPYmplY3R9IHN0YWNrIFRyYWNrcyB0cmF2ZXJzZWQgYG9iamVjdGAgYW5kIGBvdGhlcmAgb2JqZWN0cy5cbiAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBvYmplY3RzIGFyZSBlcXVpdmFsZW50LCBlbHNlIGBmYWxzZWAuXG4gICAqL1xuICBmdW5jdGlvbiBlcXVhbEJ5VGFnKG9iamVjdCwgb3RoZXIsIHRhZywgYml0bWFzaywgY3VzdG9taXplciwgZXF1YWxGdW5jLCBzdGFjaykge1xuICAgIHN3aXRjaCAodGFnKSB7XG5cbiAgICAgIGNhc2UgYm9vbFRhZzpcbiAgICAgIGNhc2UgZGF0ZVRhZzpcbiAgICAgIGNhc2UgbnVtYmVyVGFnOlxuICAgICAgICAvLyBDb2VyY2UgYm9vbGVhbnMgdG8gYDFgIG9yIGAwYCBhbmQgZGF0ZXMgdG8gbWlsbGlzZWNvbmRzLlxuICAgICAgICAvLyBJbnZhbGlkIGRhdGVzIGFyZSBjb2VyY2VkIHRvIGBOYU5gLlxuICAgICAgICByZXR1cm4gZXEoK29iamVjdCwgK290aGVyKTtcblxuICAgICAgY2FzZSBlcnJvclRhZzpcbiAgICAgICAgcmV0dXJuIG9iamVjdC5uYW1lID09IG90aGVyLm5hbWUgJiYgb2JqZWN0Lm1lc3NhZ2UgPT0gb3RoZXIubWVzc2FnZTtcblxuICAgICAgY2FzZSByZWdleHBUYWc6XG4gICAgICBjYXNlIHN0cmluZ1RhZzpcbiAgICAgICAgLy8gQ29lcmNlIHJlZ2V4ZXMgdG8gc3RyaW5ncyBhbmQgdHJlYXQgc3RyaW5ncywgcHJpbWl0aXZlcyBhbmQgb2JqZWN0cyxcbiAgICAgICAgLy8gYXMgZXF1YWwuIFNlZSBodHRwOi8vd3d3LmVjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtcmVnZXhwLnByb3RvdHlwZS50b3N0cmluZ1xuICAgICAgICAvLyBmb3IgbW9yZSBkZXRhaWxzLlxuICAgICAgICByZXR1cm4gb2JqZWN0ID09IChvdGhlciArICcnKTtcblxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvKipcbiAgICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBiYXNlSXNFcXVhbERlZXBgIGZvciBvYmplY3RzIHdpdGggc3VwcG9ydCBmb3JcbiAgICogcGFydGlhbCBkZWVwIGNvbXBhcmlzb25zLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY29tcGFyZS5cbiAgICogQHBhcmFtIHtPYmplY3R9IG90aGVyIFRoZSBvdGhlciBvYmplY3QgdG8gY29tcGFyZS5cbiAgICogQHBhcmFtIHtudW1iZXJ9IGJpdG1hc2sgVGhlIGJpdG1hc2sgZmxhZ3MuIFNlZSBgYmFzZUlzRXF1YWxgIGZvciBtb3JlIGRldGFpbHMuXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGN1c3RvbWl6ZXIgVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjb21wYXJpc29ucy5cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZXF1YWxGdW5jIFRoZSBmdW5jdGlvbiB0byBkZXRlcm1pbmUgZXF1aXZhbGVudHMgb2YgdmFsdWVzLlxuICAgKiBAcGFyYW0ge09iamVjdH0gc3RhY2sgVHJhY2tzIHRyYXZlcnNlZCBgb2JqZWN0YCBhbmQgYG90aGVyYCBvYmplY3RzLlxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIG9iamVjdHMgYXJlIGVxdWl2YWxlbnQsIGVsc2UgYGZhbHNlYC5cbiAgICovXG4gIGZ1bmN0aW9uIGVxdWFsT2JqZWN0cyhvYmplY3QsIG90aGVyLCBiaXRtYXNrLCBjdXN0b21pemVyLCBlcXVhbEZ1bmMsIHN0YWNrKSB7XG4gICAgdmFyIGlzUGFydGlhbCA9IGJpdG1hc2sgJiBDT01QQVJFX1BBUlRJQUxfRkxBRyxcbiAgICAgICAgb2JqUHJvcHMgPSBrZXlzKG9iamVjdCksXG4gICAgICAgIG9iakxlbmd0aCA9IG9ialByb3BzLmxlbmd0aCxcbiAgICAgICAgb3RoUHJvcHMgPSBrZXlzKG90aGVyKSxcbiAgICAgICAgb3RoTGVuZ3RoID0gb3RoUHJvcHMubGVuZ3RoO1xuXG4gICAgaWYgKG9iakxlbmd0aCAhPSBvdGhMZW5ndGggJiYgIWlzUGFydGlhbCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICB2YXIgaW5kZXggPSBvYmpMZW5ndGg7XG4gICAgd2hpbGUgKGluZGV4LS0pIHtcbiAgICAgIHZhciBrZXkgPSBvYmpQcm9wc1tpbmRleF07XG4gICAgICBpZiAoIShpc1BhcnRpYWwgPyBrZXkgaW4gb3RoZXIgOiBoYXNPd25Qcm9wZXJ0eS5jYWxsKG90aGVyLCBrZXkpKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICAgIHZhciByZXN1bHQgPSB0cnVlO1xuXG4gICAgdmFyIHNraXBDdG9yID0gaXNQYXJ0aWFsO1xuICAgIHdoaWxlICgrK2luZGV4IDwgb2JqTGVuZ3RoKSB7XG4gICAgICBrZXkgPSBvYmpQcm9wc1tpbmRleF07XG4gICAgICB2YXIgb2JqVmFsdWUgPSBvYmplY3Rba2V5XSxcbiAgICAgICAgICBvdGhWYWx1ZSA9IG90aGVyW2tleV07XG5cbiAgICAgIHZhciBjb21wYXJlZDtcbiAgICAgIC8vIFJlY3Vyc2l2ZWx5IGNvbXBhcmUgb2JqZWN0cyAoc3VzY2VwdGlibGUgdG8gY2FsbCBzdGFjayBsaW1pdHMpLlxuICAgICAgaWYgKCEoY29tcGFyZWQgPT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgPyAob2JqVmFsdWUgPT09IG90aFZhbHVlIHx8IGVxdWFsRnVuYyhvYmpWYWx1ZSwgb3RoVmFsdWUsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIHN0YWNrKSlcbiAgICAgICAgICAgIDogY29tcGFyZWRcbiAgICAgICAgICApKSB7XG4gICAgICAgIHJlc3VsdCA9IGZhbHNlO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIHNraXBDdG9yIHx8IChza2lwQ3RvciA9IGtleSA9PSAnY29uc3RydWN0b3InKTtcbiAgICB9XG4gICAgaWYgKHJlc3VsdCAmJiAhc2tpcEN0b3IpIHtcbiAgICAgIHZhciBvYmpDdG9yID0gb2JqZWN0LmNvbnN0cnVjdG9yLFxuICAgICAgICAgIG90aEN0b3IgPSBvdGhlci5jb25zdHJ1Y3RvcjtcblxuICAgICAgLy8gTm9uIGBPYmplY3RgIG9iamVjdCBpbnN0YW5jZXMgd2l0aCBkaWZmZXJlbnQgY29uc3RydWN0b3JzIGFyZSBub3QgZXF1YWwuXG4gICAgICBpZiAob2JqQ3RvciAhPSBvdGhDdG9yICYmXG4gICAgICAgICAgKCdjb25zdHJ1Y3RvcicgaW4gb2JqZWN0ICYmICdjb25zdHJ1Y3RvcicgaW4gb3RoZXIpICYmXG4gICAgICAgICAgISh0eXBlb2Ygb2JqQ3RvciA9PSAnZnVuY3Rpb24nICYmIG9iakN0b3IgaW5zdGFuY2VvZiBvYmpDdG9yICYmXG4gICAgICAgICAgICB0eXBlb2Ygb3RoQ3RvciA9PSAnZnVuY3Rpb24nICYmIG90aEN0b3IgaW5zdGFuY2VvZiBvdGhDdG9yKSkge1xuICAgICAgICByZXN1bHQgPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIC8qKlxuICAgKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VSZXN0YCB3aGljaCBmbGF0dGVucyB0aGUgcmVzdCBhcnJheS5cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gYXBwbHkgYSByZXN0IHBhcmFtZXRlciB0by5cbiAgICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgZnVuY3Rpb24uXG4gICAqL1xuICBmdW5jdGlvbiBmbGF0UmVzdChmdW5jKSB7XG4gICAgcmV0dXJuIHNldFRvU3RyaW5nKG92ZXJSZXN0KGZ1bmMsIHVuZGVmaW5lZCwgZmxhdHRlbiksIGZ1bmMgKyAnJyk7XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSBmbGF0dGVuYWJsZSBgYXJndW1lbnRzYCBvYmplY3Qgb3IgYXJyYXkuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBmbGF0dGVuYWJsZSwgZWxzZSBgZmFsc2VgLlxuICAgKi9cbiAgZnVuY3Rpb24gaXNGbGF0dGVuYWJsZSh2YWx1ZSkge1xuICAgIHJldHVybiBpc0FycmF5KHZhbHVlKSB8fCBpc0FyZ3VtZW50cyh2YWx1ZSk7XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSB2YWxpZCBhcnJheS1saWtlIGluZGV4LlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAgICogQHBhcmFtIHtudW1iZXJ9IFtsZW5ndGg9TUFYX1NBRkVfSU5URUdFUl0gVGhlIHVwcGVyIGJvdW5kcyBvZiBhIHZhbGlkIGluZGV4LlxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHZhbGlkIGluZGV4LCBlbHNlIGBmYWxzZWAuXG4gICAqL1xuICBmdW5jdGlvbiBpc0luZGV4KHZhbHVlLCBsZW5ndGgpIHtcbiAgICB2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgICBsZW5ndGggPSBsZW5ndGggPT0gbnVsbCA/IE1BWF9TQUZFX0lOVEVHRVIgOiBsZW5ndGg7XG5cbiAgICByZXR1cm4gISFsZW5ndGggJiZcbiAgICAgICh0eXBlID09ICdudW1iZXInIHx8XG4gICAgICAgICh0eXBlICE9ICdzeW1ib2wnICYmIHJlSXNVaW50LnRlc3QodmFsdWUpKSkgJiZcbiAgICAgICAgICAodmFsdWUgPiAtMSAmJiB2YWx1ZSAlIDEgPT0gMCAmJiB2YWx1ZSA8IGxlbmd0aCk7XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2tzIGlmIHRoZSBnaXZlbiBhcmd1bWVudHMgYXJlIGZyb20gYW4gaXRlcmF0ZWUgY2FsbC5cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgcG90ZW50aWFsIGl0ZXJhdGVlIHZhbHVlIGFyZ3VtZW50LlxuICAgKiBAcGFyYW0geyp9IGluZGV4IFRoZSBwb3RlbnRpYWwgaXRlcmF0ZWUgaW5kZXggb3Iga2V5IGFyZ3VtZW50LlxuICAgKiBAcGFyYW0geyp9IG9iamVjdCBUaGUgcG90ZW50aWFsIGl0ZXJhdGVlIG9iamVjdCBhcmd1bWVudC5cbiAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBhcmd1bWVudHMgYXJlIGZyb20gYW4gaXRlcmF0ZWUgY2FsbCxcbiAgICogIGVsc2UgYGZhbHNlYC5cbiAgICovXG4gIGZ1bmN0aW9uIGlzSXRlcmF0ZWVDYWxsKHZhbHVlLCBpbmRleCwgb2JqZWN0KSB7XG4gICAgaWYgKCFpc09iamVjdChvYmplY3QpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHZhciB0eXBlID0gdHlwZW9mIGluZGV4O1xuICAgIGlmICh0eXBlID09ICdudW1iZXInXG4gICAgICAgICAgPyAoaXNBcnJheUxpa2Uob2JqZWN0KSAmJiBpc0luZGV4KGluZGV4LCBvYmplY3QubGVuZ3RoKSlcbiAgICAgICAgICA6ICh0eXBlID09ICdzdHJpbmcnICYmIGluZGV4IGluIG9iamVjdClcbiAgICAgICAgKSB7XG4gICAgICByZXR1cm4gZXEob2JqZWN0W2luZGV4XSwgdmFsdWUpO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBmdW5jdGlvbiBpcyBsaWtlXG4gICAqIFtgT2JqZWN0LmtleXNgXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1vYmplY3Qua2V5cylcbiAgICogZXhjZXB0IHRoYXQgaXQgaW5jbHVkZXMgaW5oZXJpdGVkIGVudW1lcmFibGUgcHJvcGVydGllcy5cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICAgKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IG5hbWVzLlxuICAgKi9cbiAgZnVuY3Rpb24gbmF0aXZlS2V5c0luKG9iamVjdCkge1xuICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICBpZiAob2JqZWN0ICE9IG51bGwpIHtcbiAgICAgIGZvciAodmFyIGtleSBpbiBPYmplY3Qob2JqZWN0KSkge1xuICAgICAgICByZXN1bHQucHVzaChrZXkpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgLyoqXG4gICAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYSBzdHJpbmcgdXNpbmcgYE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmdgLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb252ZXJ0LlxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBjb252ZXJ0ZWQgc3RyaW5nLlxuICAgKi9cbiAgZnVuY3Rpb24gb2JqZWN0VG9TdHJpbmcodmFsdWUpIHtcbiAgICByZXR1cm4gbmF0aXZlT2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSk7XG4gIH1cblxuICAvKipcbiAgICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBiYXNlUmVzdGAgd2hpY2ggdHJhbnNmb3JtcyB0aGUgcmVzdCBhcnJheS5cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gYXBwbHkgYSByZXN0IHBhcmFtZXRlciB0by5cbiAgICogQHBhcmFtIHtudW1iZXJ9IFtzdGFydD1mdW5jLmxlbmd0aC0xXSBUaGUgc3RhcnQgcG9zaXRpb24gb2YgdGhlIHJlc3QgcGFyYW1ldGVyLlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSB0cmFuc2Zvcm0gVGhlIHJlc3QgYXJyYXkgdHJhbnNmb3JtLlxuICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBmdW5jdGlvbi5cbiAgICovXG4gIGZ1bmN0aW9uIG92ZXJSZXN0KGZ1bmMsIHN0YXJ0LCB0cmFuc2Zvcm0pIHtcbiAgICBzdGFydCA9IG5hdGl2ZU1heChzdGFydCA9PT0gdW5kZWZpbmVkID8gKGZ1bmMubGVuZ3RoIC0gMSkgOiBzdGFydCwgMCk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGFyZ3MgPSBhcmd1bWVudHMsXG4gICAgICAgICAgaW5kZXggPSAtMSxcbiAgICAgICAgICBsZW5ndGggPSBuYXRpdmVNYXgoYXJncy5sZW5ndGggLSBzdGFydCwgMCksXG4gICAgICAgICAgYXJyYXkgPSBBcnJheShsZW5ndGgpO1xuXG4gICAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgICBhcnJheVtpbmRleF0gPSBhcmdzW3N0YXJ0ICsgaW5kZXhdO1xuICAgICAgfVxuICAgICAgaW5kZXggPSAtMTtcbiAgICAgIHZhciBvdGhlckFyZ3MgPSBBcnJheShzdGFydCArIDEpO1xuICAgICAgd2hpbGUgKCsraW5kZXggPCBzdGFydCkge1xuICAgICAgICBvdGhlckFyZ3NbaW5kZXhdID0gYXJnc1tpbmRleF07XG4gICAgICB9XG4gICAgICBvdGhlckFyZ3Nbc3RhcnRdID0gdHJhbnNmb3JtKGFycmF5KTtcbiAgICAgIHJldHVybiBmdW5jLmFwcGx5KHRoaXMsIG90aGVyQXJncyk7XG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXRzIHRoZSBgdG9TdHJpbmdgIG1ldGhvZCBvZiBgZnVuY2AgdG8gcmV0dXJuIGBzdHJpbmdgLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBtb2RpZnkuXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IHN0cmluZyBUaGUgYHRvU3RyaW5nYCByZXN1bHQuXG4gICAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyBgZnVuY2AuXG4gICAqL1xuICB2YXIgc2V0VG9TdHJpbmcgPSBpZGVudGl0eTtcblxuICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYW4gYXJyYXkgd2l0aCBhbGwgZmFsc2V5IHZhbHVlcyByZW1vdmVkLiBUaGUgdmFsdWVzIGBmYWxzZWAsIGBudWxsYCxcbiAgICogYDBgLCBgXCJcImAsIGB1bmRlZmluZWRgLCBhbmQgYE5hTmAgYXJlIGZhbHNleS5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAc2luY2UgMC4xLjBcbiAgICogQGNhdGVnb3J5IEFycmF5XG4gICAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBjb21wYWN0LlxuICAgKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBhcnJheSBvZiBmaWx0ZXJlZCB2YWx1ZXMuXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqIF8uY29tcGFjdChbMCwgMSwgZmFsc2UsIDIsICcnLCAzXSk7XG4gICAqIC8vID0+IFsxLCAyLCAzXVxuICAgKi9cbiAgZnVuY3Rpb24gY29tcGFjdChhcnJheSkge1xuICAgIHJldHVybiBiYXNlRmlsdGVyKGFycmF5LCBCb29sZWFuKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgbmV3IGFycmF5IGNvbmNhdGVuYXRpbmcgYGFycmF5YCB3aXRoIGFueSBhZGRpdGlvbmFsIGFycmF5c1xuICAgKiBhbmQvb3IgdmFsdWVzLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBzaW5jZSA0LjAuMFxuICAgKiBAY2F0ZWdvcnkgQXJyYXlcbiAgICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGNvbmNhdGVuYXRlLlxuICAgKiBAcGFyYW0gey4uLip9IFt2YWx1ZXNdIFRoZSB2YWx1ZXMgdG8gY29uY2F0ZW5hdGUuXG4gICAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IGNvbmNhdGVuYXRlZCBhcnJheS5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogdmFyIGFycmF5ID0gWzFdO1xuICAgKiB2YXIgb3RoZXIgPSBfLmNvbmNhdChhcnJheSwgMiwgWzNdLCBbWzRdXSk7XG4gICAqXG4gICAqIGNvbnNvbGUubG9nKG90aGVyKTtcbiAgICogLy8gPT4gWzEsIDIsIDMsIFs0XV1cbiAgICpcbiAgICogY29uc29sZS5sb2coYXJyYXkpO1xuICAgKiAvLyA9PiBbMV1cbiAgICovXG4gIGZ1bmN0aW9uIGNvbmNhdCgpIHtcbiAgICB2YXIgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBpZiAoIWxlbmd0aCkge1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbiAgICB2YXIgYXJncyA9IEFycmF5KGxlbmd0aCAtIDEpLFxuICAgICAgICBhcnJheSA9IGFyZ3VtZW50c1swXSxcbiAgICAgICAgaW5kZXggPSBsZW5ndGg7XG5cbiAgICB3aGlsZSAoaW5kZXgtLSkge1xuICAgICAgYXJnc1tpbmRleCAtIDFdID0gYXJndW1lbnRzW2luZGV4XTtcbiAgICB9XG4gICAgcmV0dXJuIGFycmF5UHVzaChpc0FycmF5KGFycmF5KSA/IGNvcHlBcnJheShhcnJheSkgOiBbYXJyYXldLCBiYXNlRmxhdHRlbihhcmdzLCAxKSk7XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBtZXRob2QgaXMgbGlrZSBgXy5maW5kYCBleGNlcHQgdGhhdCBpdCByZXR1cm5zIHRoZSBpbmRleCBvZiB0aGUgZmlyc3RcbiAgICogZWxlbWVudCBgcHJlZGljYXRlYCByZXR1cm5zIHRydXRoeSBmb3IgaW5zdGVhZCBvZiB0aGUgZWxlbWVudCBpdHNlbGYuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQHNpbmNlIDEuMS4wXG4gICAqIEBjYXRlZ29yeSBBcnJheVxuICAgKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gaW5zcGVjdC5cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW3ByZWRpY2F0ZT1fLmlkZW50aXR5XSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICAgKiBAcGFyYW0ge251bWJlcn0gW2Zyb21JbmRleD0wXSBUaGUgaW5kZXggdG8gc2VhcmNoIGZyb20uXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIGluZGV4IG9mIHRoZSBmb3VuZCBlbGVtZW50LCBlbHNlIGAtMWAuXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqIHZhciB1c2VycyA9IFtcbiAgICogICB7ICd1c2VyJzogJ2Jhcm5leScsICAnYWN0aXZlJzogZmFsc2UgfSxcbiAgICogICB7ICd1c2VyJzogJ2ZyZWQnLCAgICAnYWN0aXZlJzogZmFsc2UgfSxcbiAgICogICB7ICd1c2VyJzogJ3BlYmJsZXMnLCAnYWN0aXZlJzogdHJ1ZSB9XG4gICAqIF07XG4gICAqXG4gICAqIF8uZmluZEluZGV4KHVzZXJzLCBmdW5jdGlvbihvKSB7IHJldHVybiBvLnVzZXIgPT0gJ2Jhcm5leSc7IH0pO1xuICAgKiAvLyA9PiAwXG4gICAqXG4gICAqIC8vIFRoZSBgXy5tYXRjaGVzYCBpdGVyYXRlZSBzaG9ydGhhbmQuXG4gICAqIF8uZmluZEluZGV4KHVzZXJzLCB7ICd1c2VyJzogJ2ZyZWQnLCAnYWN0aXZlJzogZmFsc2UgfSk7XG4gICAqIC8vID0+IDFcbiAgICpcbiAgICogLy8gVGhlIGBfLm1hdGNoZXNQcm9wZXJ0eWAgaXRlcmF0ZWUgc2hvcnRoYW5kLlxuICAgKiBfLmZpbmRJbmRleCh1c2VycywgWydhY3RpdmUnLCBmYWxzZV0pO1xuICAgKiAvLyA9PiAwXG4gICAqXG4gICAqIC8vIFRoZSBgXy5wcm9wZXJ0eWAgaXRlcmF0ZWUgc2hvcnRoYW5kLlxuICAgKiBfLmZpbmRJbmRleCh1c2VycywgJ2FjdGl2ZScpO1xuICAgKiAvLyA9PiAyXG4gICAqL1xuICBmdW5jdGlvbiBmaW5kSW5kZXgoYXJyYXksIHByZWRpY2F0ZSwgZnJvbUluZGV4KSB7XG4gICAgdmFyIGxlbmd0aCA9IGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoO1xuICAgIGlmICghbGVuZ3RoKSB7XG4gICAgICByZXR1cm4gLTE7XG4gICAgfVxuICAgIHZhciBpbmRleCA9IGZyb21JbmRleCA9PSBudWxsID8gMCA6IHRvSW50ZWdlcihmcm9tSW5kZXgpO1xuICAgIGlmIChpbmRleCA8IDApIHtcbiAgICAgIGluZGV4ID0gbmF0aXZlTWF4KGxlbmd0aCArIGluZGV4LCAwKTtcbiAgICB9XG4gICAgcmV0dXJuIGJhc2VGaW5kSW5kZXgoYXJyYXksIGJhc2VJdGVyYXRlZShwcmVkaWNhdGUsIDMpLCBpbmRleCk7XG4gIH1cblxuICAvKipcbiAgICogRmxhdHRlbnMgYGFycmF5YCBhIHNpbmdsZSBsZXZlbCBkZWVwLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBzaW5jZSAwLjEuMFxuICAgKiBAY2F0ZWdvcnkgQXJyYXlcbiAgICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGZsYXR0ZW4uXG4gICAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IGZsYXR0ZW5lZCBhcnJheS5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogXy5mbGF0dGVuKFsxLCBbMiwgWzMsIFs0XV0sIDVdXSk7XG4gICAqIC8vID0+IFsxLCAyLCBbMywgWzRdXSwgNV1cbiAgICovXG4gIGZ1bmN0aW9uIGZsYXR0ZW4oYXJyYXkpIHtcbiAgICB2YXIgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGg7XG4gICAgcmV0dXJuIGxlbmd0aCA/IGJhc2VGbGF0dGVuKGFycmF5LCAxKSA6IFtdO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlY3Vyc2l2ZWx5IGZsYXR0ZW5zIGBhcnJheWAuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQHNpbmNlIDMuMC4wXG4gICAqIEBjYXRlZ29yeSBBcnJheVxuICAgKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gZmxhdHRlbi5cbiAgICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgZmxhdHRlbmVkIGFycmF5LlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiBfLmZsYXR0ZW5EZWVwKFsxLCBbMiwgWzMsIFs0XV0sIDVdXSk7XG4gICAqIC8vID0+IFsxLCAyLCAzLCA0LCA1XVxuICAgKi9cbiAgZnVuY3Rpb24gZmxhdHRlbkRlZXAoYXJyYXkpIHtcbiAgICB2YXIgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGg7XG4gICAgcmV0dXJuIGxlbmd0aCA/IGJhc2VGbGF0dGVuKGFycmF5LCBJTkZJTklUWSkgOiBbXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXRzIHRoZSBmaXJzdCBlbGVtZW50IG9mIGBhcnJheWAuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQHNpbmNlIDAuMS4wXG4gICAqIEBhbGlhcyBmaXJzdFxuICAgKiBAY2F0ZWdvcnkgQXJyYXlcbiAgICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIHF1ZXJ5LlxuICAgKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZmlyc3QgZWxlbWVudCBvZiBgYXJyYXlgLlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiBfLmhlYWQoWzEsIDIsIDNdKTtcbiAgICogLy8gPT4gMVxuICAgKlxuICAgKiBfLmhlYWQoW10pO1xuICAgKiAvLyA9PiB1bmRlZmluZWRcbiAgICovXG4gIGZ1bmN0aW9uIGhlYWQoYXJyYXkpIHtcbiAgICByZXR1cm4gKGFycmF5ICYmIGFycmF5Lmxlbmd0aCkgPyBhcnJheVswXSA6IHVuZGVmaW5lZDtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXRzIHRoZSBpbmRleCBhdCB3aGljaCB0aGUgZmlyc3Qgb2NjdXJyZW5jZSBvZiBgdmFsdWVgIGlzIGZvdW5kIGluIGBhcnJheWBcbiAgICogdXNpbmcgW2BTYW1lVmFsdWVaZXJvYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtc2FtZXZhbHVlemVybylcbiAgICogZm9yIGVxdWFsaXR5IGNvbXBhcmlzb25zLiBJZiBgZnJvbUluZGV4YCBpcyBuZWdhdGl2ZSwgaXQncyB1c2VkIGFzIHRoZVxuICAgKiBvZmZzZXQgZnJvbSB0aGUgZW5kIG9mIGBhcnJheWAuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQHNpbmNlIDAuMS4wXG4gICAqIEBjYXRlZ29yeSBBcnJheVxuICAgKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gaW5zcGVjdC5cbiAgICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2VhcmNoIGZvci5cbiAgICogQHBhcmFtIHtudW1iZXJ9IFtmcm9tSW5kZXg9MF0gVGhlIGluZGV4IHRvIHNlYXJjaCBmcm9tLlxuICAgKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBpbmRleCBvZiB0aGUgbWF0Y2hlZCB2YWx1ZSwgZWxzZSBgLTFgLlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiBfLmluZGV4T2YoWzEsIDIsIDEsIDJdLCAyKTtcbiAgICogLy8gPT4gMVxuICAgKlxuICAgKiAvLyBTZWFyY2ggZnJvbSB0aGUgYGZyb21JbmRleGAuXG4gICAqIF8uaW5kZXhPZihbMSwgMiwgMSwgMl0sIDIsIDIpO1xuICAgKiAvLyA9PiAzXG4gICAqL1xuICBmdW5jdGlvbiBpbmRleE9mKGFycmF5LCB2YWx1ZSwgZnJvbUluZGV4KSB7XG4gICAgdmFyIGxlbmd0aCA9IGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoO1xuICAgIGlmICh0eXBlb2YgZnJvbUluZGV4ID09ICdudW1iZXInKSB7XG4gICAgICBmcm9tSW5kZXggPSBmcm9tSW5kZXggPCAwID8gbmF0aXZlTWF4KGxlbmd0aCArIGZyb21JbmRleCwgMCkgOiBmcm9tSW5kZXg7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZyb21JbmRleCA9IDA7XG4gICAgfVxuICAgIHZhciBpbmRleCA9IChmcm9tSW5kZXggfHwgMCkgLSAxLFxuICAgICAgICBpc1JlZmxleGl2ZSA9IHZhbHVlID09PSB2YWx1ZTtcblxuICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICB2YXIgb3RoZXIgPSBhcnJheVtpbmRleF07XG4gICAgICBpZiAoKGlzUmVmbGV4aXZlID8gb3RoZXIgPT09IHZhbHVlIDogb3RoZXIgIT09IG90aGVyKSkge1xuICAgICAgICByZXR1cm4gaW5kZXg7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiAtMTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXRzIHRoZSBsYXN0IGVsZW1lbnQgb2YgYGFycmF5YC5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAc2luY2UgMC4xLjBcbiAgICogQGNhdGVnb3J5IEFycmF5XG4gICAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBxdWVyeS5cbiAgICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGxhc3QgZWxlbWVudCBvZiBgYXJyYXlgLlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiBfLmxhc3QoWzEsIDIsIDNdKTtcbiAgICogLy8gPT4gM1xuICAgKi9cbiAgZnVuY3Rpb24gbGFzdChhcnJheSkge1xuICAgIHZhciBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aDtcbiAgICByZXR1cm4gbGVuZ3RoID8gYXJyYXlbbGVuZ3RoIC0gMV0gOiB1bmRlZmluZWQ7XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlcyBhIHNsaWNlIG9mIGBhcnJheWAgZnJvbSBgc3RhcnRgIHVwIHRvLCBidXQgbm90IGluY2x1ZGluZywgYGVuZGAuXG4gICAqXG4gICAqICoqTm90ZToqKiBUaGlzIG1ldGhvZCBpcyB1c2VkIGluc3RlYWQgb2ZcbiAgICogW2BBcnJheSNzbGljZWBdKGh0dHBzOi8vbWRuLmlvL0FycmF5L3NsaWNlKSB0byBlbnN1cmUgZGVuc2UgYXJyYXlzIGFyZVxuICAgKiByZXR1cm5lZC5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAc2luY2UgMy4wLjBcbiAgICogQGNhdGVnb3J5IEFycmF5XG4gICAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBzbGljZS5cbiAgICogQHBhcmFtIHtudW1iZXJ9IFtzdGFydD0wXSBUaGUgc3RhcnQgcG9zaXRpb24uXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBbZW5kPWFycmF5Lmxlbmd0aF0gVGhlIGVuZCBwb3NpdGlvbi5cbiAgICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBzbGljZSBvZiBgYXJyYXlgLlxuICAgKi9cbiAgZnVuY3Rpb24gc2xpY2UoYXJyYXksIHN0YXJ0LCBlbmQpIHtcbiAgICB2YXIgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGg7XG4gICAgc3RhcnQgPSBzdGFydCA9PSBudWxsID8gMCA6ICtzdGFydDtcbiAgICBlbmQgPSBlbmQgPT09IHVuZGVmaW5lZCA/IGxlbmd0aCA6ICtlbmQ7XG4gICAgcmV0dXJuIGxlbmd0aCA/IGJhc2VTbGljZShhcnJheSwgc3RhcnQsIGVuZCkgOiBbXTtcbiAgfVxuXG4gIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuICAvKipcbiAgICogQ3JlYXRlcyBhIGBsb2Rhc2hgIHdyYXBwZXIgaW5zdGFuY2UgdGhhdCB3cmFwcyBgdmFsdWVgIHdpdGggZXhwbGljaXQgbWV0aG9kXG4gICAqIGNoYWluIHNlcXVlbmNlcyBlbmFibGVkLiBUaGUgcmVzdWx0IG9mIHN1Y2ggc2VxdWVuY2VzIG11c3QgYmUgdW53cmFwcGVkXG4gICAqIHdpdGggYF8jdmFsdWVgLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBzaW5jZSAxLjMuMFxuICAgKiBAY2F0ZWdvcnkgU2VxXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHdyYXAuXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIG5ldyBgbG9kYXNoYCB3cmFwcGVyIGluc3RhbmNlLlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiB2YXIgdXNlcnMgPSBbXG4gICAqICAgeyAndXNlcic6ICdiYXJuZXknLCAgJ2FnZSc6IDM2IH0sXG4gICAqICAgeyAndXNlcic6ICdmcmVkJywgICAgJ2FnZSc6IDQwIH0sXG4gICAqICAgeyAndXNlcic6ICdwZWJibGVzJywgJ2FnZSc6IDEgfVxuICAgKiBdO1xuICAgKlxuICAgKiB2YXIgeW91bmdlc3QgPSBfXG4gICAqICAgLmNoYWluKHVzZXJzKVxuICAgKiAgIC5zb3J0QnkoJ2FnZScpXG4gICAqICAgLm1hcChmdW5jdGlvbihvKSB7XG4gICAqICAgICByZXR1cm4gby51c2VyICsgJyBpcyAnICsgby5hZ2U7XG4gICAqICAgfSlcbiAgICogICAuaGVhZCgpXG4gICAqICAgLnZhbHVlKCk7XG4gICAqIC8vID0+ICdwZWJibGVzIGlzIDEnXG4gICAqL1xuICBmdW5jdGlvbiBjaGFpbih2YWx1ZSkge1xuICAgIHZhciByZXN1bHQgPSBsb2Rhc2godmFsdWUpO1xuICAgIHJlc3VsdC5fX2NoYWluX18gPSB0cnVlO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBtZXRob2QgaW52b2tlcyBgaW50ZXJjZXB0b3JgIGFuZCByZXR1cm5zIGB2YWx1ZWAuIFRoZSBpbnRlcmNlcHRvclxuICAgKiBpcyBpbnZva2VkIHdpdGggb25lIGFyZ3VtZW50OyAodmFsdWUpLiBUaGUgcHVycG9zZSBvZiB0aGlzIG1ldGhvZCBpcyB0b1xuICAgKiBcInRhcCBpbnRvXCIgYSBtZXRob2QgY2hhaW4gc2VxdWVuY2UgaW4gb3JkZXIgdG8gbW9kaWZ5IGludGVybWVkaWF0ZSByZXN1bHRzLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBzaW5jZSAwLjEuMFxuICAgKiBAY2F0ZWdvcnkgU2VxXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHByb3ZpZGUgdG8gYGludGVyY2VwdG9yYC5cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gaW50ZXJjZXB0b3IgVGhlIGZ1bmN0aW9uIHRvIGludm9rZS5cbiAgICogQHJldHVybnMgeyp9IFJldHVybnMgYHZhbHVlYC5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogXyhbMSwgMiwgM10pXG4gICAqICAudGFwKGZ1bmN0aW9uKGFycmF5KSB7XG4gICAqICAgIC8vIE11dGF0ZSBpbnB1dCBhcnJheS5cbiAgICogICAgYXJyYXkucG9wKCk7XG4gICAqICB9KVxuICAgKiAgLnJldmVyc2UoKVxuICAgKiAgLnZhbHVlKCk7XG4gICAqIC8vID0+IFsyLCAxXVxuICAgKi9cbiAgZnVuY3Rpb24gdGFwKHZhbHVlLCBpbnRlcmNlcHRvcikge1xuICAgIGludGVyY2VwdG9yKHZhbHVlKTtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBtZXRob2QgaXMgbGlrZSBgXy50YXBgIGV4Y2VwdCB0aGF0IGl0IHJldHVybnMgdGhlIHJlc3VsdCBvZiBgaW50ZXJjZXB0b3JgLlxuICAgKiBUaGUgcHVycG9zZSBvZiB0aGlzIG1ldGhvZCBpcyB0byBcInBhc3MgdGhydVwiIHZhbHVlcyByZXBsYWNpbmcgaW50ZXJtZWRpYXRlXG4gICAqIHJlc3VsdHMgaW4gYSBtZXRob2QgY2hhaW4gc2VxdWVuY2UuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQHNpbmNlIDMuMC4wXG4gICAqIEBjYXRlZ29yeSBTZXFcbiAgICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcHJvdmlkZSB0byBgaW50ZXJjZXB0b3JgLlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBpbnRlcmNlcHRvciBUaGUgZnVuY3Rpb24gdG8gaW52b2tlLlxuICAgKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgcmVzdWx0IG9mIGBpbnRlcmNlcHRvcmAuXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqIF8oJyAgYWJjICAnKVxuICAgKiAgLmNoYWluKClcbiAgICogIC50cmltKClcbiAgICogIC50aHJ1KGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAqICAgIHJldHVybiBbdmFsdWVdO1xuICAgKiAgfSlcbiAgICogIC52YWx1ZSgpO1xuICAgKiAvLyA9PiBbJ2FiYyddXG4gICAqL1xuICBmdW5jdGlvbiB0aHJ1KHZhbHVlLCBpbnRlcmNlcHRvcikge1xuICAgIHJldHVybiBpbnRlcmNlcHRvcih2YWx1ZSk7XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlcyBhIGBsb2Rhc2hgIHdyYXBwZXIgaW5zdGFuY2Ugd2l0aCBleHBsaWNpdCBtZXRob2QgY2hhaW4gc2VxdWVuY2VzIGVuYWJsZWQuXG4gICAqXG4gICAqIEBuYW1lIGNoYWluXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBzaW5jZSAwLjEuMFxuICAgKiBAY2F0ZWdvcnkgU2VxXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIG5ldyBgbG9kYXNoYCB3cmFwcGVyIGluc3RhbmNlLlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiB2YXIgdXNlcnMgPSBbXG4gICAqICAgeyAndXNlcic6ICdiYXJuZXknLCAnYWdlJzogMzYgfSxcbiAgICogICB7ICd1c2VyJzogJ2ZyZWQnLCAgICdhZ2UnOiA0MCB9XG4gICAqIF07XG4gICAqXG4gICAqIC8vIEEgc2VxdWVuY2Ugd2l0aG91dCBleHBsaWNpdCBjaGFpbmluZy5cbiAgICogXyh1c2VycykuaGVhZCgpO1xuICAgKiAvLyA9PiB7ICd1c2VyJzogJ2Jhcm5leScsICdhZ2UnOiAzNiB9XG4gICAqXG4gICAqIC8vIEEgc2VxdWVuY2Ugd2l0aCBleHBsaWNpdCBjaGFpbmluZy5cbiAgICogXyh1c2VycylcbiAgICogICAuY2hhaW4oKVxuICAgKiAgIC5oZWFkKClcbiAgICogICAucGljaygndXNlcicpXG4gICAqICAgLnZhbHVlKCk7XG4gICAqIC8vID0+IHsgJ3VzZXInOiAnYmFybmV5JyB9XG4gICAqL1xuICBmdW5jdGlvbiB3cmFwcGVyQ2hhaW4oKSB7XG4gICAgcmV0dXJuIGNoYWluKHRoaXMpO1xuICB9XG5cbiAgLyoqXG4gICAqIEV4ZWN1dGVzIHRoZSBjaGFpbiBzZXF1ZW5jZSB0byByZXNvbHZlIHRoZSB1bndyYXBwZWQgdmFsdWUuXG4gICAqXG4gICAqIEBuYW1lIHZhbHVlXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBzaW5jZSAwLjEuMFxuICAgKiBAYWxpYXMgdG9KU09OLCB2YWx1ZU9mXG4gICAqIEBjYXRlZ29yeSBTZXFcbiAgICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIHJlc29sdmVkIHVud3JhcHBlZCB2YWx1ZS5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogXyhbMSwgMiwgM10pLnZhbHVlKCk7XG4gICAqIC8vID0+IFsxLCAyLCAzXVxuICAgKi9cbiAgZnVuY3Rpb24gd3JhcHBlclZhbHVlKCkge1xuICAgIHJldHVybiBiYXNlV3JhcHBlclZhbHVlKHRoaXMuX193cmFwcGVkX18sIHRoaXMuX19hY3Rpb25zX18pO1xuICB9XG5cbiAgLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4gIC8qKlxuICAgKiBDaGVja3MgaWYgYHByZWRpY2F0ZWAgcmV0dXJucyB0cnV0aHkgZm9yICoqYWxsKiogZWxlbWVudHMgb2YgYGNvbGxlY3Rpb25gLlxuICAgKiBJdGVyYXRpb24gaXMgc3RvcHBlZCBvbmNlIGBwcmVkaWNhdGVgIHJldHVybnMgZmFsc2V5LiBUaGUgcHJlZGljYXRlIGlzXG4gICAqIGludm9rZWQgd2l0aCB0aHJlZSBhcmd1bWVudHM6ICh2YWx1ZSwgaW5kZXh8a2V5LCBjb2xsZWN0aW9uKS5cbiAgICpcbiAgICogKipOb3RlOioqIFRoaXMgbWV0aG9kIHJldHVybnMgYHRydWVgIGZvclxuICAgKiBbZW1wdHkgY29sbGVjdGlvbnNdKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0VtcHR5X3NldCkgYmVjYXVzZVxuICAgKiBbZXZlcnl0aGluZyBpcyB0cnVlXShodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9WYWN1b3VzX3RydXRoKSBvZlxuICAgKiBlbGVtZW50cyBvZiBlbXB0eSBjb2xsZWN0aW9ucy5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAc2luY2UgMC4xLjBcbiAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAgICogQHBhcmFtIHtBcnJheXxPYmplY3R9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbcHJlZGljYXRlPV8uaWRlbnRpdHldIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gICAqIEBwYXJhbS0ge09iamVjdH0gW2d1YXJkXSBFbmFibGVzIHVzZSBhcyBhbiBpdGVyYXRlZSBmb3IgbWV0aG9kcyBsaWtlIGBfLm1hcGAuXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBhbGwgZWxlbWVudHMgcGFzcyB0aGUgcHJlZGljYXRlIGNoZWNrLFxuICAgKiAgZWxzZSBgZmFsc2VgLlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiBfLmV2ZXJ5KFt0cnVlLCAxLCBudWxsLCAneWVzJ10sIEJvb2xlYW4pO1xuICAgKiAvLyA9PiBmYWxzZVxuICAgKlxuICAgKiB2YXIgdXNlcnMgPSBbXG4gICAqICAgeyAndXNlcic6ICdiYXJuZXknLCAnYWdlJzogMzYsICdhY3RpdmUnOiBmYWxzZSB9LFxuICAgKiAgIHsgJ3VzZXInOiAnZnJlZCcsICAgJ2FnZSc6IDQwLCAnYWN0aXZlJzogZmFsc2UgfVxuICAgKiBdO1xuICAgKlxuICAgKiAvLyBUaGUgYF8ubWF0Y2hlc2AgaXRlcmF0ZWUgc2hvcnRoYW5kLlxuICAgKiBfLmV2ZXJ5KHVzZXJzLCB7ICd1c2VyJzogJ2Jhcm5leScsICdhY3RpdmUnOiBmYWxzZSB9KTtcbiAgICogLy8gPT4gZmFsc2VcbiAgICpcbiAgICogLy8gVGhlIGBfLm1hdGNoZXNQcm9wZXJ0eWAgaXRlcmF0ZWUgc2hvcnRoYW5kLlxuICAgKiBfLmV2ZXJ5KHVzZXJzLCBbJ2FjdGl2ZScsIGZhbHNlXSk7XG4gICAqIC8vID0+IHRydWVcbiAgICpcbiAgICogLy8gVGhlIGBfLnByb3BlcnR5YCBpdGVyYXRlZSBzaG9ydGhhbmQuXG4gICAqIF8uZXZlcnkodXNlcnMsICdhY3RpdmUnKTtcbiAgICogLy8gPT4gZmFsc2VcbiAgICovXG4gIGZ1bmN0aW9uIGV2ZXJ5KGNvbGxlY3Rpb24sIHByZWRpY2F0ZSwgZ3VhcmQpIHtcbiAgICBwcmVkaWNhdGUgPSBndWFyZCA/IHVuZGVmaW5lZCA6IHByZWRpY2F0ZTtcbiAgICByZXR1cm4gYmFzZUV2ZXJ5KGNvbGxlY3Rpb24sIGJhc2VJdGVyYXRlZShwcmVkaWNhdGUpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBJdGVyYXRlcyBvdmVyIGVsZW1lbnRzIG9mIGBjb2xsZWN0aW9uYCwgcmV0dXJuaW5nIGFuIGFycmF5IG9mIGFsbCBlbGVtZW50c1xuICAgKiBgcHJlZGljYXRlYCByZXR1cm5zIHRydXRoeSBmb3IuIFRoZSBwcmVkaWNhdGUgaXMgaW52b2tlZCB3aXRoIHRocmVlXG4gICAqIGFyZ3VtZW50czogKHZhbHVlLCBpbmRleHxrZXksIGNvbGxlY3Rpb24pLlxuICAgKlxuICAgKiAqKk5vdGU6KiogVW5saWtlIGBfLnJlbW92ZWAsIHRoaXMgbWV0aG9kIHJldHVybnMgYSBuZXcgYXJyYXkuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQHNpbmNlIDAuMS4wXG4gICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uXG4gICAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW3ByZWRpY2F0ZT1fLmlkZW50aXR5XSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICAgKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBmaWx0ZXJlZCBhcnJheS5cbiAgICogQHNlZSBfLnJlamVjdFxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiB2YXIgdXNlcnMgPSBbXG4gICAqICAgeyAndXNlcic6ICdiYXJuZXknLCAnYWdlJzogMzYsICdhY3RpdmUnOiB0cnVlIH0sXG4gICAqICAgeyAndXNlcic6ICdmcmVkJywgICAnYWdlJzogNDAsICdhY3RpdmUnOiBmYWxzZSB9XG4gICAqIF07XG4gICAqXG4gICAqIF8uZmlsdGVyKHVzZXJzLCBmdW5jdGlvbihvKSB7IHJldHVybiAhby5hY3RpdmU7IH0pO1xuICAgKiAvLyA9PiBvYmplY3RzIGZvciBbJ2ZyZWQnXVxuICAgKlxuICAgKiAvLyBUaGUgYF8ubWF0Y2hlc2AgaXRlcmF0ZWUgc2hvcnRoYW5kLlxuICAgKiBfLmZpbHRlcih1c2VycywgeyAnYWdlJzogMzYsICdhY3RpdmUnOiB0cnVlIH0pO1xuICAgKiAvLyA9PiBvYmplY3RzIGZvciBbJ2Jhcm5leSddXG4gICAqXG4gICAqIC8vIFRoZSBgXy5tYXRjaGVzUHJvcGVydHlgIGl0ZXJhdGVlIHNob3J0aGFuZC5cbiAgICogXy5maWx0ZXIodXNlcnMsIFsnYWN0aXZlJywgZmFsc2VdKTtcbiAgICogLy8gPT4gb2JqZWN0cyBmb3IgWydmcmVkJ11cbiAgICpcbiAgICogLy8gVGhlIGBfLnByb3BlcnR5YCBpdGVyYXRlZSBzaG9ydGhhbmQuXG4gICAqIF8uZmlsdGVyKHVzZXJzLCAnYWN0aXZlJyk7XG4gICAqIC8vID0+IG9iamVjdHMgZm9yIFsnYmFybmV5J11cbiAgICovXG4gIGZ1bmN0aW9uIGZpbHRlcihjb2xsZWN0aW9uLCBwcmVkaWNhdGUpIHtcbiAgICByZXR1cm4gYmFzZUZpbHRlcihjb2xsZWN0aW9uLCBiYXNlSXRlcmF0ZWUocHJlZGljYXRlKSk7XG4gIH1cblxuICAvKipcbiAgICogSXRlcmF0ZXMgb3ZlciBlbGVtZW50cyBvZiBgY29sbGVjdGlvbmAsIHJldHVybmluZyB0aGUgZmlyc3QgZWxlbWVudFxuICAgKiBgcHJlZGljYXRlYCByZXR1cm5zIHRydXRoeSBmb3IuIFRoZSBwcmVkaWNhdGUgaXMgaW52b2tlZCB3aXRoIHRocmVlXG4gICAqIGFyZ3VtZW50czogKHZhbHVlLCBpbmRleHxrZXksIGNvbGxlY3Rpb24pLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBzaW5jZSAwLjEuMFxuICAgKiBAY2F0ZWdvcnkgQ29sbGVjdGlvblxuICAgKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpbnNwZWN0LlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbcHJlZGljYXRlPV8uaWRlbnRpdHldIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBbZnJvbUluZGV4PTBdIFRoZSBpbmRleCB0byBzZWFyY2ggZnJvbS5cbiAgICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIG1hdGNoZWQgZWxlbWVudCwgZWxzZSBgdW5kZWZpbmVkYC5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogdmFyIHVzZXJzID0gW1xuICAgKiAgIHsgJ3VzZXInOiAnYmFybmV5JywgICdhZ2UnOiAzNiwgJ2FjdGl2ZSc6IHRydWUgfSxcbiAgICogICB7ICd1c2VyJzogJ2ZyZWQnLCAgICAnYWdlJzogNDAsICdhY3RpdmUnOiBmYWxzZSB9LFxuICAgKiAgIHsgJ3VzZXInOiAncGViYmxlcycsICdhZ2UnOiAxLCAgJ2FjdGl2ZSc6IHRydWUgfVxuICAgKiBdO1xuICAgKlxuICAgKiBfLmZpbmQodXNlcnMsIGZ1bmN0aW9uKG8pIHsgcmV0dXJuIG8uYWdlIDwgNDA7IH0pO1xuICAgKiAvLyA9PiBvYmplY3QgZm9yICdiYXJuZXknXG4gICAqXG4gICAqIC8vIFRoZSBgXy5tYXRjaGVzYCBpdGVyYXRlZSBzaG9ydGhhbmQuXG4gICAqIF8uZmluZCh1c2VycywgeyAnYWdlJzogMSwgJ2FjdGl2ZSc6IHRydWUgfSk7XG4gICAqIC8vID0+IG9iamVjdCBmb3IgJ3BlYmJsZXMnXG4gICAqXG4gICAqIC8vIFRoZSBgXy5tYXRjaGVzUHJvcGVydHlgIGl0ZXJhdGVlIHNob3J0aGFuZC5cbiAgICogXy5maW5kKHVzZXJzLCBbJ2FjdGl2ZScsIGZhbHNlXSk7XG4gICAqIC8vID0+IG9iamVjdCBmb3IgJ2ZyZWQnXG4gICAqXG4gICAqIC8vIFRoZSBgXy5wcm9wZXJ0eWAgaXRlcmF0ZWUgc2hvcnRoYW5kLlxuICAgKiBfLmZpbmQodXNlcnMsICdhY3RpdmUnKTtcbiAgICogLy8gPT4gb2JqZWN0IGZvciAnYmFybmV5J1xuICAgKi9cbiAgdmFyIGZpbmQgPSBjcmVhdGVGaW5kKGZpbmRJbmRleCk7XG5cbiAgLyoqXG4gICAqIEl0ZXJhdGVzIG92ZXIgZWxlbWVudHMgb2YgYGNvbGxlY3Rpb25gIGFuZCBpbnZva2VzIGBpdGVyYXRlZWAgZm9yIGVhY2ggZWxlbWVudC5cbiAgICogVGhlIGl0ZXJhdGVlIGlzIGludm9rZWQgd2l0aCB0aHJlZSBhcmd1bWVudHM6ICh2YWx1ZSwgaW5kZXh8a2V5LCBjb2xsZWN0aW9uKS5cbiAgICogSXRlcmF0ZWUgZnVuY3Rpb25zIG1heSBleGl0IGl0ZXJhdGlvbiBlYXJseSBieSBleHBsaWNpdGx5IHJldHVybmluZyBgZmFsc2VgLlxuICAgKlxuICAgKiAqKk5vdGU6KiogQXMgd2l0aCBvdGhlciBcIkNvbGxlY3Rpb25zXCIgbWV0aG9kcywgb2JqZWN0cyB3aXRoIGEgXCJsZW5ndGhcIlxuICAgKiBwcm9wZXJ0eSBhcmUgaXRlcmF0ZWQgbGlrZSBhcnJheXMuIFRvIGF2b2lkIHRoaXMgYmVoYXZpb3IgdXNlIGBfLmZvckluYFxuICAgKiBvciBgXy5mb3JPd25gIGZvciBvYmplY3QgaXRlcmF0aW9uLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBzaW5jZSAwLjEuMFxuICAgKiBAYWxpYXMgZWFjaFxuICAgKiBAY2F0ZWdvcnkgQ29sbGVjdGlvblxuICAgKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtpdGVyYXRlZT1fLmlkZW50aXR5XSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICAgKiBAcmV0dXJucyB7QXJyYXl8T2JqZWN0fSBSZXR1cm5zIGBjb2xsZWN0aW9uYC5cbiAgICogQHNlZSBfLmZvckVhY2hSaWdodFxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiBfLmZvckVhY2goWzEsIDJdLCBmdW5jdGlvbih2YWx1ZSkge1xuICAgKiAgIGNvbnNvbGUubG9nKHZhbHVlKTtcbiAgICogfSk7XG4gICAqIC8vID0+IExvZ3MgYDFgIHRoZW4gYDJgLlxuICAgKlxuICAgKiBfLmZvckVhY2goeyAnYSc6IDEsICdiJzogMiB9LCBmdW5jdGlvbih2YWx1ZSwga2V5KSB7XG4gICAqICAgY29uc29sZS5sb2coa2V5KTtcbiAgICogfSk7XG4gICAqIC8vID0+IExvZ3MgJ2EnIHRoZW4gJ2InIChpdGVyYXRpb24gb3JkZXIgaXMgbm90IGd1YXJhbnRlZWQpLlxuICAgKi9cbiAgZnVuY3Rpb24gZm9yRWFjaChjb2xsZWN0aW9uLCBpdGVyYXRlZSkge1xuICAgIHJldHVybiBiYXNlRWFjaChjb2xsZWN0aW9uLCBiYXNlSXRlcmF0ZWUoaXRlcmF0ZWUpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGFuIGFycmF5IG9mIHZhbHVlcyBieSBydW5uaW5nIGVhY2ggZWxlbWVudCBpbiBgY29sbGVjdGlvbmAgdGhydVxuICAgKiBgaXRlcmF0ZWVgLiBUaGUgaXRlcmF0ZWUgaXMgaW52b2tlZCB3aXRoIHRocmVlIGFyZ3VtZW50czpcbiAgICogKHZhbHVlLCBpbmRleHxrZXksIGNvbGxlY3Rpb24pLlxuICAgKlxuICAgKiBNYW55IGxvZGFzaCBtZXRob2RzIGFyZSBndWFyZGVkIHRvIHdvcmsgYXMgaXRlcmF0ZWVzIGZvciBtZXRob2RzIGxpa2VcbiAgICogYF8uZXZlcnlgLCBgXy5maWx0ZXJgLCBgXy5tYXBgLCBgXy5tYXBWYWx1ZXNgLCBgXy5yZWplY3RgLCBhbmQgYF8uc29tZWAuXG4gICAqXG4gICAqIFRoZSBndWFyZGVkIG1ldGhvZHMgYXJlOlxuICAgKiBgYXJ5YCwgYGNodW5rYCwgYGN1cnJ5YCwgYGN1cnJ5UmlnaHRgLCBgZHJvcGAsIGBkcm9wUmlnaHRgLCBgZXZlcnlgLFxuICAgKiBgZmlsbGAsIGBpbnZlcnRgLCBgcGFyc2VJbnRgLCBgcmFuZG9tYCwgYHJhbmdlYCwgYHJhbmdlUmlnaHRgLCBgcmVwZWF0YCxcbiAgICogYHNhbXBsZVNpemVgLCBgc2xpY2VgLCBgc29tZWAsIGBzb3J0QnlgLCBgc3BsaXRgLCBgdGFrZWAsIGB0YWtlUmlnaHRgLFxuICAgKiBgdGVtcGxhdGVgLCBgdHJpbWAsIGB0cmltRW5kYCwgYHRyaW1TdGFydGAsIGFuZCBgd29yZHNgXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQHNpbmNlIDAuMS4wXG4gICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uXG4gICAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2l0ZXJhdGVlPV8uaWRlbnRpdHldIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gICAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IG1hcHBlZCBhcnJheS5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogZnVuY3Rpb24gc3F1YXJlKG4pIHtcbiAgICogICByZXR1cm4gbiAqIG47XG4gICAqIH1cbiAgICpcbiAgICogXy5tYXAoWzQsIDhdLCBzcXVhcmUpO1xuICAgKiAvLyA9PiBbMTYsIDY0XVxuICAgKlxuICAgKiBfLm1hcCh7ICdhJzogNCwgJ2InOiA4IH0sIHNxdWFyZSk7XG4gICAqIC8vID0+IFsxNiwgNjRdIChpdGVyYXRpb24gb3JkZXIgaXMgbm90IGd1YXJhbnRlZWQpXG4gICAqXG4gICAqIHZhciB1c2VycyA9IFtcbiAgICogICB7ICd1c2VyJzogJ2Jhcm5leScgfSxcbiAgICogICB7ICd1c2VyJzogJ2ZyZWQnIH1cbiAgICogXTtcbiAgICpcbiAgICogLy8gVGhlIGBfLnByb3BlcnR5YCBpdGVyYXRlZSBzaG9ydGhhbmQuXG4gICAqIF8ubWFwKHVzZXJzLCAndXNlcicpO1xuICAgKiAvLyA9PiBbJ2Jhcm5leScsICdmcmVkJ11cbiAgICovXG4gIGZ1bmN0aW9uIG1hcChjb2xsZWN0aW9uLCBpdGVyYXRlZSkge1xuICAgIHJldHVybiBiYXNlTWFwKGNvbGxlY3Rpb24sIGJhc2VJdGVyYXRlZShpdGVyYXRlZSkpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlZHVjZXMgYGNvbGxlY3Rpb25gIHRvIGEgdmFsdWUgd2hpY2ggaXMgdGhlIGFjY3VtdWxhdGVkIHJlc3VsdCBvZiBydW5uaW5nXG4gICAqIGVhY2ggZWxlbWVudCBpbiBgY29sbGVjdGlvbmAgdGhydSBgaXRlcmF0ZWVgLCB3aGVyZSBlYWNoIHN1Y2Nlc3NpdmVcbiAgICogaW52b2NhdGlvbiBpcyBzdXBwbGllZCB0aGUgcmV0dXJuIHZhbHVlIG9mIHRoZSBwcmV2aW91cy4gSWYgYGFjY3VtdWxhdG9yYFxuICAgKiBpcyBub3QgZ2l2ZW4sIHRoZSBmaXJzdCBlbGVtZW50IG9mIGBjb2xsZWN0aW9uYCBpcyB1c2VkIGFzIHRoZSBpbml0aWFsXG4gICAqIHZhbHVlLiBUaGUgaXRlcmF0ZWUgaXMgaW52b2tlZCB3aXRoIGZvdXIgYXJndW1lbnRzOlxuICAgKiAoYWNjdW11bGF0b3IsIHZhbHVlLCBpbmRleHxrZXksIGNvbGxlY3Rpb24pLlxuICAgKlxuICAgKiBNYW55IGxvZGFzaCBtZXRob2RzIGFyZSBndWFyZGVkIHRvIHdvcmsgYXMgaXRlcmF0ZWVzIGZvciBtZXRob2RzIGxpa2VcbiAgICogYF8ucmVkdWNlYCwgYF8ucmVkdWNlUmlnaHRgLCBhbmQgYF8udHJhbnNmb3JtYC5cbiAgICpcbiAgICogVGhlIGd1YXJkZWQgbWV0aG9kcyBhcmU6XG4gICAqIGBhc3NpZ25gLCBgZGVmYXVsdHNgLCBgZGVmYXVsdHNEZWVwYCwgYGluY2x1ZGVzYCwgYG1lcmdlYCwgYG9yZGVyQnlgLFxuICAgKiBhbmQgYHNvcnRCeWBcbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAc2luY2UgMC4xLjBcbiAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAgICogQHBhcmFtIHtBcnJheXxPYmplY3R9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbaXRlcmF0ZWU9Xy5pZGVudGl0eV0gVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAgICogQHBhcmFtIHsqfSBbYWNjdW11bGF0b3JdIFRoZSBpbml0aWFsIHZhbHVlLlxuICAgKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgYWNjdW11bGF0ZWQgdmFsdWUuXG4gICAqIEBzZWUgXy5yZWR1Y2VSaWdodFxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiBfLnJlZHVjZShbMSwgMl0sIGZ1bmN0aW9uKHN1bSwgbikge1xuICAgKiAgIHJldHVybiBzdW0gKyBuO1xuICAgKiB9LCAwKTtcbiAgICogLy8gPT4gM1xuICAgKlxuICAgKiBfLnJlZHVjZSh7ICdhJzogMSwgJ2InOiAyLCAnYyc6IDEgfSwgZnVuY3Rpb24ocmVzdWx0LCB2YWx1ZSwga2V5KSB7XG4gICAqICAgKHJlc3VsdFt2YWx1ZV0gfHwgKHJlc3VsdFt2YWx1ZV0gPSBbXSkpLnB1c2goa2V5KTtcbiAgICogICByZXR1cm4gcmVzdWx0O1xuICAgKiB9LCB7fSk7XG4gICAqIC8vID0+IHsgJzEnOiBbJ2EnLCAnYyddLCAnMic6IFsnYiddIH0gKGl0ZXJhdGlvbiBvcmRlciBpcyBub3QgZ3VhcmFudGVlZClcbiAgICovXG4gIGZ1bmN0aW9uIHJlZHVjZShjb2xsZWN0aW9uLCBpdGVyYXRlZSwgYWNjdW11bGF0b3IpIHtcbiAgICByZXR1cm4gYmFzZVJlZHVjZShjb2xsZWN0aW9uLCBiYXNlSXRlcmF0ZWUoaXRlcmF0ZWUpLCBhY2N1bXVsYXRvciwgYXJndW1lbnRzLmxlbmd0aCA8IDMsIGJhc2VFYWNoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXRzIHRoZSBzaXplIG9mIGBjb2xsZWN0aW9uYCBieSByZXR1cm5pbmcgaXRzIGxlbmd0aCBmb3IgYXJyYXktbGlrZVxuICAgKiB2YWx1ZXMgb3IgdGhlIG51bWJlciBvZiBvd24gZW51bWVyYWJsZSBzdHJpbmcga2V5ZWQgcHJvcGVydGllcyBmb3Igb2JqZWN0cy5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAc2luY2UgMC4xLjBcbiAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAgICogQHBhcmFtIHtBcnJheXxPYmplY3R8c3RyaW5nfSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGluc3BlY3QuXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIGNvbGxlY3Rpb24gc2l6ZS5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogXy5zaXplKFsxLCAyLCAzXSk7XG4gICAqIC8vID0+IDNcbiAgICpcbiAgICogXy5zaXplKHsgJ2EnOiAxLCAnYic6IDIgfSk7XG4gICAqIC8vID0+IDJcbiAgICpcbiAgICogXy5zaXplKCdwZWJibGVzJyk7XG4gICAqIC8vID0+IDdcbiAgICovXG4gIGZ1bmN0aW9uIHNpemUoY29sbGVjdGlvbikge1xuICAgIGlmIChjb2xsZWN0aW9uID09IG51bGwpIHtcbiAgICAgIHJldHVybiAwO1xuICAgIH1cbiAgICBjb2xsZWN0aW9uID0gaXNBcnJheUxpa2UoY29sbGVjdGlvbikgPyBjb2xsZWN0aW9uIDogbmF0aXZlS2V5cyhjb2xsZWN0aW9uKTtcbiAgICByZXR1cm4gY29sbGVjdGlvbi5sZW5ndGg7XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2tzIGlmIGBwcmVkaWNhdGVgIHJldHVybnMgdHJ1dGh5IGZvciAqKmFueSoqIGVsZW1lbnQgb2YgYGNvbGxlY3Rpb25gLlxuICAgKiBJdGVyYXRpb24gaXMgc3RvcHBlZCBvbmNlIGBwcmVkaWNhdGVgIHJldHVybnMgdHJ1dGh5LiBUaGUgcHJlZGljYXRlIGlzXG4gICAqIGludm9rZWQgd2l0aCB0aHJlZSBhcmd1bWVudHM6ICh2YWx1ZSwgaW5kZXh8a2V5LCBjb2xsZWN0aW9uKS5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAc2luY2UgMC4xLjBcbiAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAgICogQHBhcmFtIHtBcnJheXxPYmplY3R9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbcHJlZGljYXRlPV8uaWRlbnRpdHldIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gICAqIEBwYXJhbS0ge09iamVjdH0gW2d1YXJkXSBFbmFibGVzIHVzZSBhcyBhbiBpdGVyYXRlZSBmb3IgbWV0aG9kcyBsaWtlIGBfLm1hcGAuXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBhbnkgZWxlbWVudCBwYXNzZXMgdGhlIHByZWRpY2F0ZSBjaGVjayxcbiAgICogIGVsc2UgYGZhbHNlYC5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogXy5zb21lKFtudWxsLCAwLCAneWVzJywgZmFsc2VdLCBCb29sZWFuKTtcbiAgICogLy8gPT4gdHJ1ZVxuICAgKlxuICAgKiB2YXIgdXNlcnMgPSBbXG4gICAqICAgeyAndXNlcic6ICdiYXJuZXknLCAnYWN0aXZlJzogdHJ1ZSB9LFxuICAgKiAgIHsgJ3VzZXInOiAnZnJlZCcsICAgJ2FjdGl2ZSc6IGZhbHNlIH1cbiAgICogXTtcbiAgICpcbiAgICogLy8gVGhlIGBfLm1hdGNoZXNgIGl0ZXJhdGVlIHNob3J0aGFuZC5cbiAgICogXy5zb21lKHVzZXJzLCB7ICd1c2VyJzogJ2Jhcm5leScsICdhY3RpdmUnOiBmYWxzZSB9KTtcbiAgICogLy8gPT4gZmFsc2VcbiAgICpcbiAgICogLy8gVGhlIGBfLm1hdGNoZXNQcm9wZXJ0eWAgaXRlcmF0ZWUgc2hvcnRoYW5kLlxuICAgKiBfLnNvbWUodXNlcnMsIFsnYWN0aXZlJywgZmFsc2VdKTtcbiAgICogLy8gPT4gdHJ1ZVxuICAgKlxuICAgKiAvLyBUaGUgYF8ucHJvcGVydHlgIGl0ZXJhdGVlIHNob3J0aGFuZC5cbiAgICogXy5zb21lKHVzZXJzLCAnYWN0aXZlJyk7XG4gICAqIC8vID0+IHRydWVcbiAgICovXG4gIGZ1bmN0aW9uIHNvbWUoY29sbGVjdGlvbiwgcHJlZGljYXRlLCBndWFyZCkge1xuICAgIHByZWRpY2F0ZSA9IGd1YXJkID8gdW5kZWZpbmVkIDogcHJlZGljYXRlO1xuICAgIHJldHVybiBiYXNlU29tZShjb2xsZWN0aW9uLCBiYXNlSXRlcmF0ZWUocHJlZGljYXRlKSk7XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlcyBhbiBhcnJheSBvZiBlbGVtZW50cywgc29ydGVkIGluIGFzY2VuZGluZyBvcmRlciBieSB0aGUgcmVzdWx0cyBvZlxuICAgKiBydW5uaW5nIGVhY2ggZWxlbWVudCBpbiBhIGNvbGxlY3Rpb24gdGhydSBlYWNoIGl0ZXJhdGVlLiBUaGlzIG1ldGhvZFxuICAgKiBwZXJmb3JtcyBhIHN0YWJsZSBzb3J0LCB0aGF0IGlzLCBpdCBwcmVzZXJ2ZXMgdGhlIG9yaWdpbmFsIHNvcnQgb3JkZXIgb2ZcbiAgICogZXF1YWwgZWxlbWVudHMuIFRoZSBpdGVyYXRlZXMgYXJlIGludm9rZWQgd2l0aCBvbmUgYXJndW1lbnQ6ICh2YWx1ZSkuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQHNpbmNlIDAuMS4wXG4gICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uXG4gICAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICogQHBhcmFtIHsuLi4oRnVuY3Rpb258RnVuY3Rpb25bXSl9IFtpdGVyYXRlZXM9W18uaWRlbnRpdHldXVxuICAgKiAgVGhlIGl0ZXJhdGVlcyB0byBzb3J0IGJ5LlxuICAgKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBzb3J0ZWQgYXJyYXkuXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqIHZhciB1c2VycyA9IFtcbiAgICogICB7ICd1c2VyJzogJ2ZyZWQnLCAgICdhZ2UnOiA0OCB9LFxuICAgKiAgIHsgJ3VzZXInOiAnYmFybmV5JywgJ2FnZSc6IDM2IH0sXG4gICAqICAgeyAndXNlcic6ICdmcmVkJywgICAnYWdlJzogNDAgfSxcbiAgICogICB7ICd1c2VyJzogJ2Jhcm5leScsICdhZ2UnOiAzNCB9XG4gICAqIF07XG4gICAqXG4gICAqIF8uc29ydEJ5KHVzZXJzLCBbZnVuY3Rpb24obykgeyByZXR1cm4gby51c2VyOyB9XSk7XG4gICAqIC8vID0+IG9iamVjdHMgZm9yIFtbJ2Jhcm5leScsIDM2XSwgWydiYXJuZXknLCAzNF0sIFsnZnJlZCcsIDQ4XSwgWydmcmVkJywgNDBdXVxuICAgKlxuICAgKiBfLnNvcnRCeSh1c2VycywgWyd1c2VyJywgJ2FnZSddKTtcbiAgICogLy8gPT4gb2JqZWN0cyBmb3IgW1snYmFybmV5JywgMzRdLCBbJ2Jhcm5leScsIDM2XSwgWydmcmVkJywgNDBdLCBbJ2ZyZWQnLCA0OF1dXG4gICAqL1xuICBmdW5jdGlvbiBzb3J0QnkoY29sbGVjdGlvbiwgaXRlcmF0ZWUpIHtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIGl0ZXJhdGVlID0gYmFzZUl0ZXJhdGVlKGl0ZXJhdGVlKTtcblxuICAgIHJldHVybiBiYXNlTWFwKGJhc2VNYXAoY29sbGVjdGlvbiwgZnVuY3Rpb24odmFsdWUsIGtleSwgY29sbGVjdGlvbikge1xuICAgICAgcmV0dXJuIHsgJ3ZhbHVlJzogdmFsdWUsICdpbmRleCc6IGluZGV4KyssICdjcml0ZXJpYSc6IGl0ZXJhdGVlKHZhbHVlLCBrZXksIGNvbGxlY3Rpb24pIH07XG4gICAgfSkuc29ydChmdW5jdGlvbihvYmplY3QsIG90aGVyKSB7XG4gICAgICByZXR1cm4gY29tcGFyZUFzY2VuZGluZyhvYmplY3QuY3JpdGVyaWEsIG90aGVyLmNyaXRlcmlhKSB8fCAob2JqZWN0LmluZGV4IC0gb3RoZXIuaW5kZXgpO1xuICAgIH0pLCBiYXNlUHJvcGVydHkoJ3ZhbHVlJykpO1xuICB9XG5cbiAgLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgZnVuY3Rpb24gdGhhdCBpbnZva2VzIGBmdW5jYCwgd2l0aCB0aGUgYHRoaXNgIGJpbmRpbmcgYW5kIGFyZ3VtZW50c1xuICAgKiBvZiB0aGUgY3JlYXRlZCBmdW5jdGlvbiwgd2hpbGUgaXQncyBjYWxsZWQgbGVzcyB0aGFuIGBuYCB0aW1lcy4gU3Vic2VxdWVudFxuICAgKiBjYWxscyB0byB0aGUgY3JlYXRlZCBmdW5jdGlvbiByZXR1cm4gdGhlIHJlc3VsdCBvZiB0aGUgbGFzdCBgZnVuY2AgaW52b2NhdGlvbi5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAc2luY2UgMy4wLjBcbiAgICogQGNhdGVnb3J5IEZ1bmN0aW9uXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBuIFRoZSBudW1iZXIgb2YgY2FsbHMgYXQgd2hpY2ggYGZ1bmNgIGlzIG5vIGxvbmdlciBpbnZva2VkLlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byByZXN0cmljdC5cbiAgICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgcmVzdHJpY3RlZCBmdW5jdGlvbi5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogalF1ZXJ5KGVsZW1lbnQpLm9uKCdjbGljaycsIF8uYmVmb3JlKDUsIGFkZENvbnRhY3RUb0xpc3QpKTtcbiAgICogLy8gPT4gQWxsb3dzIGFkZGluZyB1cCB0byA0IGNvbnRhY3RzIHRvIHRoZSBsaXN0LlxuICAgKi9cbiAgZnVuY3Rpb24gYmVmb3JlKG4sIGZ1bmMpIHtcbiAgICB2YXIgcmVzdWx0O1xuICAgIGlmICh0eXBlb2YgZnVuYyAhPSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKEZVTkNfRVJST1JfVEVYVCk7XG4gICAgfVxuICAgIG4gPSB0b0ludGVnZXIobik7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKC0tbiA+IDApIHtcbiAgICAgICAgcmVzdWx0ID0gZnVuYy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgfVxuICAgICAgaWYgKG4gPD0gMSkge1xuICAgICAgICBmdW5jID0gdW5kZWZpbmVkO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IGludm9rZXMgYGZ1bmNgIHdpdGggdGhlIGB0aGlzYCBiaW5kaW5nIG9mIGB0aGlzQXJnYFxuICAgKiBhbmQgYHBhcnRpYWxzYCBwcmVwZW5kZWQgdG8gdGhlIGFyZ3VtZW50cyBpdCByZWNlaXZlcy5cbiAgICpcbiAgICogVGhlIGBfLmJpbmQucGxhY2Vob2xkZXJgIHZhbHVlLCB3aGljaCBkZWZhdWx0cyB0byBgX2AgaW4gbW9ub2xpdGhpYyBidWlsZHMsXG4gICAqIG1heSBiZSB1c2VkIGFzIGEgcGxhY2Vob2xkZXIgZm9yIHBhcnRpYWxseSBhcHBsaWVkIGFyZ3VtZW50cy5cbiAgICpcbiAgICogKipOb3RlOioqIFVubGlrZSBuYXRpdmUgYEZ1bmN0aW9uI2JpbmRgLCB0aGlzIG1ldGhvZCBkb2Vzbid0IHNldCB0aGUgXCJsZW5ndGhcIlxuICAgKiBwcm9wZXJ0eSBvZiBib3VuZCBmdW5jdGlvbnMuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQHNpbmNlIDAuMS4wXG4gICAqIEBjYXRlZ29yeSBGdW5jdGlvblxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBiaW5kLlxuICAgKiBAcGFyYW0geyp9IHRoaXNBcmcgVGhlIGB0aGlzYCBiaW5kaW5nIG9mIGBmdW5jYC5cbiAgICogQHBhcmFtIHsuLi4qfSBbcGFydGlhbHNdIFRoZSBhcmd1bWVudHMgdG8gYmUgcGFydGlhbGx5IGFwcGxpZWQuXG4gICAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGJvdW5kIGZ1bmN0aW9uLlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiBmdW5jdGlvbiBncmVldChncmVldGluZywgcHVuY3R1YXRpb24pIHtcbiAgICogICByZXR1cm4gZ3JlZXRpbmcgKyAnICcgKyB0aGlzLnVzZXIgKyBwdW5jdHVhdGlvbjtcbiAgICogfVxuICAgKlxuICAgKiB2YXIgb2JqZWN0ID0geyAndXNlcic6ICdmcmVkJyB9O1xuICAgKlxuICAgKiB2YXIgYm91bmQgPSBfLmJpbmQoZ3JlZXQsIG9iamVjdCwgJ2hpJyk7XG4gICAqIGJvdW5kKCchJyk7XG4gICAqIC8vID0+ICdoaSBmcmVkISdcbiAgICpcbiAgICogLy8gQm91bmQgd2l0aCBwbGFjZWhvbGRlcnMuXG4gICAqIHZhciBib3VuZCA9IF8uYmluZChncmVldCwgb2JqZWN0LCBfLCAnIScpO1xuICAgKiBib3VuZCgnaGknKTtcbiAgICogLy8gPT4gJ2hpIGZyZWQhJ1xuICAgKi9cbiAgdmFyIGJpbmQgPSBiYXNlUmVzdChmdW5jdGlvbihmdW5jLCB0aGlzQXJnLCBwYXJ0aWFscykge1xuICAgIHJldHVybiBjcmVhdGVQYXJ0aWFsKGZ1bmMsIFdSQVBfQklORF9GTEFHIHwgV1JBUF9QQVJUSUFMX0ZMQUcsIHRoaXNBcmcsIHBhcnRpYWxzKTtcbiAgfSk7XG5cbiAgLyoqXG4gICAqIERlZmVycyBpbnZva2luZyB0aGUgYGZ1bmNgIHVudGlsIHRoZSBjdXJyZW50IGNhbGwgc3RhY2sgaGFzIGNsZWFyZWQuIEFueVxuICAgKiBhZGRpdGlvbmFsIGFyZ3VtZW50cyBhcmUgcHJvdmlkZWQgdG8gYGZ1bmNgIHdoZW4gaXQncyBpbnZva2VkLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBzaW5jZSAwLjEuMFxuICAgKiBAY2F0ZWdvcnkgRnVuY3Rpb25cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gZGVmZXIuXG4gICAqIEBwYXJhbSB7Li4uKn0gW2FyZ3NdIFRoZSBhcmd1bWVudHMgdG8gaW52b2tlIGBmdW5jYCB3aXRoLlxuICAgKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSB0aW1lciBpZC5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogXy5kZWZlcihmdW5jdGlvbih0ZXh0KSB7XG4gICAqICAgY29uc29sZS5sb2codGV4dCk7XG4gICAqIH0sICdkZWZlcnJlZCcpO1xuICAgKiAvLyA9PiBMb2dzICdkZWZlcnJlZCcgYWZ0ZXIgb25lIG1pbGxpc2Vjb25kLlxuICAgKi9cbiAgdmFyIGRlZmVyID0gYmFzZVJlc3QoZnVuY3Rpb24oZnVuYywgYXJncykge1xuICAgIHJldHVybiBiYXNlRGVsYXkoZnVuYywgMSwgYXJncyk7XG4gIH0pO1xuXG4gIC8qKlxuICAgKiBJbnZva2VzIGBmdW5jYCBhZnRlciBgd2FpdGAgbWlsbGlzZWNvbmRzLiBBbnkgYWRkaXRpb25hbCBhcmd1bWVudHMgYXJlXG4gICAqIHByb3ZpZGVkIHRvIGBmdW5jYCB3aGVuIGl0J3MgaW52b2tlZC5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAc2luY2UgMC4xLjBcbiAgICogQGNhdGVnb3J5IEZ1bmN0aW9uXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGRlbGF5LlxuICAgKiBAcGFyYW0ge251bWJlcn0gd2FpdCBUaGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0byBkZWxheSBpbnZvY2F0aW9uLlxuICAgKiBAcGFyYW0gey4uLip9IFthcmdzXSBUaGUgYXJndW1lbnRzIHRvIGludm9rZSBgZnVuY2Agd2l0aC5cbiAgICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgdGltZXIgaWQuXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqIF8uZGVsYXkoZnVuY3Rpb24odGV4dCkge1xuICAgKiAgIGNvbnNvbGUubG9nKHRleHQpO1xuICAgKiB9LCAxMDAwLCAnbGF0ZXInKTtcbiAgICogLy8gPT4gTG9ncyAnbGF0ZXInIGFmdGVyIG9uZSBzZWNvbmQuXG4gICAqL1xuICB2YXIgZGVsYXkgPSBiYXNlUmVzdChmdW5jdGlvbihmdW5jLCB3YWl0LCBhcmdzKSB7XG4gICAgcmV0dXJuIGJhc2VEZWxheShmdW5jLCB0b051bWJlcih3YWl0KSB8fCAwLCBhcmdzKTtcbiAgfSk7XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IG5lZ2F0ZXMgdGhlIHJlc3VsdCBvZiB0aGUgcHJlZGljYXRlIGBmdW5jYC4gVGhlXG4gICAqIGBmdW5jYCBwcmVkaWNhdGUgaXMgaW52b2tlZCB3aXRoIHRoZSBgdGhpc2AgYmluZGluZyBhbmQgYXJndW1lbnRzIG9mIHRoZVxuICAgKiBjcmVhdGVkIGZ1bmN0aW9uLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBzaW5jZSAzLjAuMFxuICAgKiBAY2F0ZWdvcnkgRnVuY3Rpb25cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gcHJlZGljYXRlIFRoZSBwcmVkaWNhdGUgdG8gbmVnYXRlLlxuICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBuZWdhdGVkIGZ1bmN0aW9uLlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiBmdW5jdGlvbiBpc0V2ZW4obikge1xuICAgKiAgIHJldHVybiBuICUgMiA9PSAwO1xuICAgKiB9XG4gICAqXG4gICAqIF8uZmlsdGVyKFsxLCAyLCAzLCA0LCA1LCA2XSwgXy5uZWdhdGUoaXNFdmVuKSk7XG4gICAqIC8vID0+IFsxLCAzLCA1XVxuICAgKi9cbiAgZnVuY3Rpb24gbmVnYXRlKHByZWRpY2F0ZSkge1xuICAgIGlmICh0eXBlb2YgcHJlZGljYXRlICE9ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoRlVOQ19FUlJPUl9URVhUKTtcbiAgICB9XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgICByZXR1cm4gIXByZWRpY2F0ZS5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IGlzIHJlc3RyaWN0ZWQgdG8gaW52b2tpbmcgYGZ1bmNgIG9uY2UuIFJlcGVhdCBjYWxsc1xuICAgKiB0byB0aGUgZnVuY3Rpb24gcmV0dXJuIHRoZSB2YWx1ZSBvZiB0aGUgZmlyc3QgaW52b2NhdGlvbi4gVGhlIGBmdW5jYCBpc1xuICAgKiBpbnZva2VkIHdpdGggdGhlIGB0aGlzYCBiaW5kaW5nIGFuZCBhcmd1bWVudHMgb2YgdGhlIGNyZWF0ZWQgZnVuY3Rpb24uXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQHNpbmNlIDAuMS4wXG4gICAqIEBjYXRlZ29yeSBGdW5jdGlvblxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byByZXN0cmljdC5cbiAgICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgcmVzdHJpY3RlZCBmdW5jdGlvbi5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogdmFyIGluaXRpYWxpemUgPSBfLm9uY2UoY3JlYXRlQXBwbGljYXRpb24pO1xuICAgKiBpbml0aWFsaXplKCk7XG4gICAqIGluaXRpYWxpemUoKTtcbiAgICogLy8gPT4gYGNyZWF0ZUFwcGxpY2F0aW9uYCBpcyBpbnZva2VkIG9uY2VcbiAgICovXG4gIGZ1bmN0aW9uIG9uY2UoZnVuYykge1xuICAgIHJldHVybiBiZWZvcmUoMiwgZnVuYyk7XG4gIH1cblxuICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYSBzaGFsbG93IGNsb25lIG9mIGB2YWx1ZWAuXG4gICAqXG4gICAqICoqTm90ZToqKiBUaGlzIG1ldGhvZCBpcyBsb29zZWx5IGJhc2VkIG9uIHRoZVxuICAgKiBbc3RydWN0dXJlZCBjbG9uZSBhbGdvcml0aG1dKGh0dHBzOi8vbWRuLmlvL1N0cnVjdHVyZWRfY2xvbmVfYWxnb3JpdGhtKVxuICAgKiBhbmQgc3VwcG9ydHMgY2xvbmluZyBhcnJheXMsIGFycmF5IGJ1ZmZlcnMsIGJvb2xlYW5zLCBkYXRlIG9iamVjdHMsIG1hcHMsXG4gICAqIG51bWJlcnMsIGBPYmplY3RgIG9iamVjdHMsIHJlZ2V4ZXMsIHNldHMsIHN0cmluZ3MsIHN5bWJvbHMsIGFuZCB0eXBlZFxuICAgKiBhcnJheXMuIFRoZSBvd24gZW51bWVyYWJsZSBwcm9wZXJ0aWVzIG9mIGBhcmd1bWVudHNgIG9iamVjdHMgYXJlIGNsb25lZFxuICAgKiBhcyBwbGFpbiBvYmplY3RzLiBBbiBlbXB0eSBvYmplY3QgaXMgcmV0dXJuZWQgZm9yIHVuY2xvbmVhYmxlIHZhbHVlcyBzdWNoXG4gICAqIGFzIGVycm9yIG9iamVjdHMsIGZ1bmN0aW9ucywgRE9NIG5vZGVzLCBhbmQgV2Vha01hcHMuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQHNpbmNlIDAuMS4wXG4gICAqIEBjYXRlZ29yeSBMYW5nXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNsb25lLlxuICAgKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgY2xvbmVkIHZhbHVlLlxuICAgKiBAc2VlIF8uY2xvbmVEZWVwXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqIHZhciBvYmplY3RzID0gW3sgJ2EnOiAxIH0sIHsgJ2InOiAyIH1dO1xuICAgKlxuICAgKiB2YXIgc2hhbGxvdyA9IF8uY2xvbmUob2JqZWN0cyk7XG4gICAqIGNvbnNvbGUubG9nKHNoYWxsb3dbMF0gPT09IG9iamVjdHNbMF0pO1xuICAgKiAvLyA9PiB0cnVlXG4gICAqL1xuICBmdW5jdGlvbiBjbG9uZSh2YWx1ZSkge1xuICAgIGlmICghaXNPYmplY3QodmFsdWUpKSB7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIHJldHVybiBpc0FycmF5KHZhbHVlKSA/IGNvcHlBcnJheSh2YWx1ZSkgOiBjb3B5T2JqZWN0KHZhbHVlLCBuYXRpdmVLZXlzKHZhbHVlKSk7XG4gIH1cblxuICAvKipcbiAgICogUGVyZm9ybXMgYVxuICAgKiBbYFNhbWVWYWx1ZVplcm9gXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1zYW1ldmFsdWV6ZXJvKVxuICAgKiBjb21wYXJpc29uIGJldHdlZW4gdHdvIHZhbHVlcyB0byBkZXRlcm1pbmUgaWYgdGhleSBhcmUgZXF1aXZhbGVudC5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAc2luY2UgNC4wLjBcbiAgICogQGNhdGVnb3J5IExhbmdcbiAgICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29tcGFyZS5cbiAgICogQHBhcmFtIHsqfSBvdGhlciBUaGUgb3RoZXIgdmFsdWUgdG8gY29tcGFyZS5cbiAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSB2YWx1ZXMgYXJlIGVxdWl2YWxlbnQsIGVsc2UgYGZhbHNlYC5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogdmFyIG9iamVjdCA9IHsgJ2EnOiAxIH07XG4gICAqIHZhciBvdGhlciA9IHsgJ2EnOiAxIH07XG4gICAqXG4gICAqIF8uZXEob2JqZWN0LCBvYmplY3QpO1xuICAgKiAvLyA9PiB0cnVlXG4gICAqXG4gICAqIF8uZXEob2JqZWN0LCBvdGhlcik7XG4gICAqIC8vID0+IGZhbHNlXG4gICAqXG4gICAqIF8uZXEoJ2EnLCAnYScpO1xuICAgKiAvLyA9PiB0cnVlXG4gICAqXG4gICAqIF8uZXEoJ2EnLCBPYmplY3QoJ2EnKSk7XG4gICAqIC8vID0+IGZhbHNlXG4gICAqXG4gICAqIF8uZXEoTmFOLCBOYU4pO1xuICAgKiAvLyA9PiB0cnVlXG4gICAqL1xuICBmdW5jdGlvbiBlcSh2YWx1ZSwgb3RoZXIpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09IG90aGVyIHx8ICh2YWx1ZSAhPT0gdmFsdWUgJiYgb3RoZXIgIT09IG90aGVyKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBsaWtlbHkgYW4gYGFyZ3VtZW50c2Agb2JqZWN0LlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBzaW5jZSAwLjEuMFxuICAgKiBAY2F0ZWdvcnkgTGFuZ1xuICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gYGFyZ3VtZW50c2Agb2JqZWN0LFxuICAgKiAgZWxzZSBgZmFsc2VgLlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiBfLmlzQXJndW1lbnRzKGZ1bmN0aW9uKCkgeyByZXR1cm4gYXJndW1lbnRzOyB9KCkpO1xuICAgKiAvLyA9PiB0cnVlXG4gICAqXG4gICAqIF8uaXNBcmd1bWVudHMoWzEsIDIsIDNdKTtcbiAgICogLy8gPT4gZmFsc2VcbiAgICovXG4gIHZhciBpc0FyZ3VtZW50cyA9IGJhc2VJc0FyZ3VtZW50cyhmdW5jdGlvbigpIHsgcmV0dXJuIGFyZ3VtZW50czsgfSgpKSA/IGJhc2VJc0FyZ3VtZW50cyA6IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwgJ2NhbGxlZScpICYmXG4gICAgICAhcHJvcGVydHlJc0VudW1lcmFibGUuY2FsbCh2YWx1ZSwgJ2NhbGxlZScpO1xuICB9O1xuXG4gIC8qKlxuICAgKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGFuIGBBcnJheWAgb2JqZWN0LlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBzaW5jZSAwLjEuMFxuICAgKiBAY2F0ZWdvcnkgTGFuZ1xuICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gYXJyYXksIGVsc2UgYGZhbHNlYC5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogXy5pc0FycmF5KFsxLCAyLCAzXSk7XG4gICAqIC8vID0+IHRydWVcbiAgICpcbiAgICogXy5pc0FycmF5KGRvY3VtZW50LmJvZHkuY2hpbGRyZW4pO1xuICAgKiAvLyA9PiBmYWxzZVxuICAgKlxuICAgKiBfLmlzQXJyYXkoJ2FiYycpO1xuICAgKiAvLyA9PiBmYWxzZVxuICAgKlxuICAgKiBfLmlzQXJyYXkoXy5ub29wKTtcbiAgICogLy8gPT4gZmFsc2VcbiAgICovXG4gIHZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheTtcblxuICAvKipcbiAgICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYXJyYXktbGlrZS4gQSB2YWx1ZSBpcyBjb25zaWRlcmVkIGFycmF5LWxpa2UgaWYgaXQnc1xuICAgKiBub3QgYSBmdW5jdGlvbiBhbmQgaGFzIGEgYHZhbHVlLmxlbmd0aGAgdGhhdCdzIGFuIGludGVnZXIgZ3JlYXRlciB0aGFuIG9yXG4gICAqIGVxdWFsIHRvIGAwYCBhbmQgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIGBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUmAuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQHNpbmNlIDQuMC4wXG4gICAqIEBjYXRlZ29yeSBMYW5nXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhcnJheS1saWtlLCBlbHNlIGBmYWxzZWAuXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqIF8uaXNBcnJheUxpa2UoWzEsIDIsIDNdKTtcbiAgICogLy8gPT4gdHJ1ZVxuICAgKlxuICAgKiBfLmlzQXJyYXlMaWtlKGRvY3VtZW50LmJvZHkuY2hpbGRyZW4pO1xuICAgKiAvLyA9PiB0cnVlXG4gICAqXG4gICAqIF8uaXNBcnJheUxpa2UoJ2FiYycpO1xuICAgKiAvLyA9PiB0cnVlXG4gICAqXG4gICAqIF8uaXNBcnJheUxpa2UoXy5ub29wKTtcbiAgICogLy8gPT4gZmFsc2VcbiAgICovXG4gIGZ1bmN0aW9uIGlzQXJyYXlMaWtlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgaXNMZW5ndGgodmFsdWUubGVuZ3RoKSAmJiAhaXNGdW5jdGlvbih2YWx1ZSk7XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIGJvb2xlYW4gcHJpbWl0aXZlIG9yIG9iamVjdC5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAc2luY2UgMC4xLjBcbiAgICogQGNhdGVnb3J5IExhbmdcbiAgICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgYm9vbGVhbiwgZWxzZSBgZmFsc2VgLlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiBfLmlzQm9vbGVhbihmYWxzZSk7XG4gICAqIC8vID0+IHRydWVcbiAgICpcbiAgICogXy5pc0Jvb2xlYW4obnVsbCk7XG4gICAqIC8vID0+IGZhbHNlXG4gICAqL1xuICBmdW5jdGlvbiBpc0Jvb2xlYW4odmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09IHRydWUgfHwgdmFsdWUgPT09IGZhbHNlIHx8XG4gICAgICAoaXNPYmplY3RMaWtlKHZhbHVlKSAmJiBiYXNlR2V0VGFnKHZhbHVlKSA9PSBib29sVGFnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGEgYERhdGVgIG9iamVjdC5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAc2luY2UgMC4xLjBcbiAgICogQGNhdGVnb3J5IExhbmdcbiAgICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgZGF0ZSBvYmplY3QsIGVsc2UgYGZhbHNlYC5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogXy5pc0RhdGUobmV3IERhdGUpO1xuICAgKiAvLyA9PiB0cnVlXG4gICAqXG4gICAqIF8uaXNEYXRlKCdNb24gQXByaWwgMjMgMjAxMicpO1xuICAgKiAvLyA9PiBmYWxzZVxuICAgKi9cbiAgdmFyIGlzRGF0ZSA9IGJhc2VJc0RhdGU7XG5cbiAgLyoqXG4gICAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGFuIGVtcHR5IG9iamVjdCwgY29sbGVjdGlvbiwgbWFwLCBvciBzZXQuXG4gICAqXG4gICAqIE9iamVjdHMgYXJlIGNvbnNpZGVyZWQgZW1wdHkgaWYgdGhleSBoYXZlIG5vIG93biBlbnVtZXJhYmxlIHN0cmluZyBrZXllZFxuICAgKiBwcm9wZXJ0aWVzLlxuICAgKlxuICAgKiBBcnJheS1saWtlIHZhbHVlcyBzdWNoIGFzIGBhcmd1bWVudHNgIG9iamVjdHMsIGFycmF5cywgYnVmZmVycywgc3RyaW5ncywgb3JcbiAgICogalF1ZXJ5LWxpa2UgY29sbGVjdGlvbnMgYXJlIGNvbnNpZGVyZWQgZW1wdHkgaWYgdGhleSBoYXZlIGEgYGxlbmd0aGAgb2YgYDBgLlxuICAgKiBTaW1pbGFybHksIG1hcHMgYW5kIHNldHMgYXJlIGNvbnNpZGVyZWQgZW1wdHkgaWYgdGhleSBoYXZlIGEgYHNpemVgIG9mIGAwYC5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAc2luY2UgMC4xLjBcbiAgICogQGNhdGVnb3J5IExhbmdcbiAgICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGVtcHR5LCBlbHNlIGBmYWxzZWAuXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqIF8uaXNFbXB0eShudWxsKTtcbiAgICogLy8gPT4gdHJ1ZVxuICAgKlxuICAgKiBfLmlzRW1wdHkodHJ1ZSk7XG4gICAqIC8vID0+IHRydWVcbiAgICpcbiAgICogXy5pc0VtcHR5KDEpO1xuICAgKiAvLyA9PiB0cnVlXG4gICAqXG4gICAqIF8uaXNFbXB0eShbMSwgMiwgM10pO1xuICAgKiAvLyA9PiBmYWxzZVxuICAgKlxuICAgKiBfLmlzRW1wdHkoeyAnYSc6IDEgfSk7XG4gICAqIC8vID0+IGZhbHNlXG4gICAqL1xuICBmdW5jdGlvbiBpc0VtcHR5KHZhbHVlKSB7XG4gICAgaWYgKGlzQXJyYXlMaWtlKHZhbHVlKSAmJlxuICAgICAgICAoaXNBcnJheSh2YWx1ZSkgfHwgaXNTdHJpbmcodmFsdWUpIHx8XG4gICAgICAgICAgaXNGdW5jdGlvbih2YWx1ZS5zcGxpY2UpIHx8IGlzQXJndW1lbnRzKHZhbHVlKSkpIHtcbiAgICAgIHJldHVybiAhdmFsdWUubGVuZ3RoO1xuICAgIH1cbiAgICByZXR1cm4gIW5hdGl2ZUtleXModmFsdWUpLmxlbmd0aDtcbiAgfVxuXG4gIC8qKlxuICAgKiBQZXJmb3JtcyBhIGRlZXAgY29tcGFyaXNvbiBiZXR3ZWVuIHR3byB2YWx1ZXMgdG8gZGV0ZXJtaW5lIGlmIHRoZXkgYXJlXG4gICAqIGVxdWl2YWxlbnQuXG4gICAqXG4gICAqICoqTm90ZToqKiBUaGlzIG1ldGhvZCBzdXBwb3J0cyBjb21wYXJpbmcgYXJyYXlzLCBhcnJheSBidWZmZXJzLCBib29sZWFucyxcbiAgICogZGF0ZSBvYmplY3RzLCBlcnJvciBvYmplY3RzLCBtYXBzLCBudW1iZXJzLCBgT2JqZWN0YCBvYmplY3RzLCByZWdleGVzLFxuICAgKiBzZXRzLCBzdHJpbmdzLCBzeW1ib2xzLCBhbmQgdHlwZWQgYXJyYXlzLiBgT2JqZWN0YCBvYmplY3RzIGFyZSBjb21wYXJlZFxuICAgKiBieSB0aGVpciBvd24sIG5vdCBpbmhlcml0ZWQsIGVudW1lcmFibGUgcHJvcGVydGllcy4gRnVuY3Rpb25zIGFuZCBET01cbiAgICogbm9kZXMgYXJlIGNvbXBhcmVkIGJ5IHN0cmljdCBlcXVhbGl0eSwgaS5lLiBgPT09YC5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAc2luY2UgMC4xLjBcbiAgICogQGNhdGVnb3J5IExhbmdcbiAgICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29tcGFyZS5cbiAgICogQHBhcmFtIHsqfSBvdGhlciBUaGUgb3RoZXIgdmFsdWUgdG8gY29tcGFyZS5cbiAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSB2YWx1ZXMgYXJlIGVxdWl2YWxlbnQsIGVsc2UgYGZhbHNlYC5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogdmFyIG9iamVjdCA9IHsgJ2EnOiAxIH07XG4gICAqIHZhciBvdGhlciA9IHsgJ2EnOiAxIH07XG4gICAqXG4gICAqIF8uaXNFcXVhbChvYmplY3QsIG90aGVyKTtcbiAgICogLy8gPT4gdHJ1ZVxuICAgKlxuICAgKiBvYmplY3QgPT09IG90aGVyO1xuICAgKiAvLyA9PiBmYWxzZVxuICAgKi9cbiAgZnVuY3Rpb24gaXNFcXVhbCh2YWx1ZSwgb3RoZXIpIHtcbiAgICByZXR1cm4gYmFzZUlzRXF1YWwodmFsdWUsIG90aGVyKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIGZpbml0ZSBwcmltaXRpdmUgbnVtYmVyLlxuICAgKlxuICAgKiAqKk5vdGU6KiogVGhpcyBtZXRob2QgaXMgYmFzZWQgb25cbiAgICogW2BOdW1iZXIuaXNGaW5pdGVgXShodHRwczovL21kbi5pby9OdW1iZXIvaXNGaW5pdGUpLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBzaW5jZSAwLjEuMFxuICAgKiBAY2F0ZWdvcnkgTGFuZ1xuICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBmaW5pdGUgbnVtYmVyLCBlbHNlIGBmYWxzZWAuXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqIF8uaXNGaW5pdGUoMyk7XG4gICAqIC8vID0+IHRydWVcbiAgICpcbiAgICogXy5pc0Zpbml0ZShOdW1iZXIuTUlOX1ZBTFVFKTtcbiAgICogLy8gPT4gdHJ1ZVxuICAgKlxuICAgKiBfLmlzRmluaXRlKEluZmluaXR5KTtcbiAgICogLy8gPT4gZmFsc2VcbiAgICpcbiAgICogXy5pc0Zpbml0ZSgnMycpO1xuICAgKiAvLyA9PiBmYWxzZVxuICAgKi9cbiAgZnVuY3Rpb24gaXNGaW5pdGUodmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09ICdudW1iZXInICYmIG5hdGl2ZUlzRmluaXRlKHZhbHVlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGEgYEZ1bmN0aW9uYCBvYmplY3QuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQHNpbmNlIDAuMS4wXG4gICAqIEBjYXRlZ29yeSBMYW5nXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIGZ1bmN0aW9uLCBlbHNlIGBmYWxzZWAuXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqIF8uaXNGdW5jdGlvbihfKTtcbiAgICogLy8gPT4gdHJ1ZVxuICAgKlxuICAgKiBfLmlzRnVuY3Rpb24oL2FiYy8pO1xuICAgKiAvLyA9PiBmYWxzZVxuICAgKi9cbiAgZnVuY3Rpb24gaXNGdW5jdGlvbih2YWx1ZSkge1xuICAgIGlmICghaXNPYmplY3QodmFsdWUpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIFRoZSB1c2Ugb2YgYE9iamVjdCN0b1N0cmluZ2AgYXZvaWRzIGlzc3VlcyB3aXRoIHRoZSBgdHlwZW9mYCBvcGVyYXRvclxuICAgIC8vIGluIFNhZmFyaSA5IHdoaWNoIHJldHVybnMgJ29iamVjdCcgZm9yIHR5cGVkIGFycmF5cyBhbmQgb3RoZXIgY29uc3RydWN0b3JzLlxuICAgIHZhciB0YWcgPSBiYXNlR2V0VGFnKHZhbHVlKTtcbiAgICByZXR1cm4gdGFnID09IGZ1bmNUYWcgfHwgdGFnID09IGdlblRhZyB8fCB0YWcgPT0gYXN5bmNUYWcgfHwgdGFnID09IHByb3h5VGFnO1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGEgdmFsaWQgYXJyYXktbGlrZSBsZW5ndGguXG4gICAqXG4gICAqICoqTm90ZToqKiBUaGlzIG1ldGhvZCBpcyBsb29zZWx5IGJhc2VkIG9uXG4gICAqIFtgVG9MZW5ndGhgXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy10b2xlbmd0aCkuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQHNpbmNlIDQuMC4wXG4gICAqIEBjYXRlZ29yeSBMYW5nXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHZhbGlkIGxlbmd0aCwgZWxzZSBgZmFsc2VgLlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiBfLmlzTGVuZ3RoKDMpO1xuICAgKiAvLyA9PiB0cnVlXG4gICAqXG4gICAqIF8uaXNMZW5ndGgoTnVtYmVyLk1JTl9WQUxVRSk7XG4gICAqIC8vID0+IGZhbHNlXG4gICAqXG4gICAqIF8uaXNMZW5ndGgoSW5maW5pdHkpO1xuICAgKiAvLyA9PiBmYWxzZVxuICAgKlxuICAgKiBfLmlzTGVuZ3RoKCczJyk7XG4gICAqIC8vID0+IGZhbHNlXG4gICAqL1xuICBmdW5jdGlvbiBpc0xlbmd0aCh2YWx1ZSkge1xuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT0gJ251bWJlcicgJiZcbiAgICAgIHZhbHVlID4gLTEgJiYgdmFsdWUgJSAxID09IDAgJiYgdmFsdWUgPD0gTUFYX1NBRkVfSU5URUdFUjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3MgaWYgYHZhbHVlYCBpcyB0aGVcbiAgICogW2xhbmd1YWdlIHR5cGVdKGh0dHA6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1lY21hc2NyaXB0LWxhbmd1YWdlLXR5cGVzKVxuICAgKiBvZiBgT2JqZWN0YC4gKGUuZy4gYXJyYXlzLCBmdW5jdGlvbnMsIG9iamVjdHMsIHJlZ2V4ZXMsIGBuZXcgTnVtYmVyKDApYCwgYW5kIGBuZXcgU3RyaW5nKCcnKWApXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQHNpbmNlIDAuMS4wXG4gICAqIEBjYXRlZ29yeSBMYW5nXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhbiBvYmplY3QsIGVsc2UgYGZhbHNlYC5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogXy5pc09iamVjdCh7fSk7XG4gICAqIC8vID0+IHRydWVcbiAgICpcbiAgICogXy5pc09iamVjdChbMSwgMiwgM10pO1xuICAgKiAvLyA9PiB0cnVlXG4gICAqXG4gICAqIF8uaXNPYmplY3QoXy5ub29wKTtcbiAgICogLy8gPT4gdHJ1ZVxuICAgKlxuICAgKiBfLmlzT2JqZWN0KG51bGwpO1xuICAgKiAvLyA9PiBmYWxzZVxuICAgKi9cbiAgZnVuY3Rpb24gaXNPYmplY3QodmFsdWUpIHtcbiAgICB2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiAodHlwZSA9PSAnb2JqZWN0JyB8fCB0eXBlID09ICdmdW5jdGlvbicpO1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIG9iamVjdC1saWtlLiBBIHZhbHVlIGlzIG9iamVjdC1saWtlIGlmIGl0J3Mgbm90IGBudWxsYFxuICAgKiBhbmQgaGFzIGEgYHR5cGVvZmAgcmVzdWx0IG9mIFwib2JqZWN0XCIuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQHNpbmNlIDQuMC4wXG4gICAqIEBjYXRlZ29yeSBMYW5nXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZSwgZWxzZSBgZmFsc2VgLlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiBfLmlzT2JqZWN0TGlrZSh7fSk7XG4gICAqIC8vID0+IHRydWVcbiAgICpcbiAgICogXy5pc09iamVjdExpa2UoWzEsIDIsIDNdKTtcbiAgICogLy8gPT4gdHJ1ZVxuICAgKlxuICAgKiBfLmlzT2JqZWN0TGlrZShfLm5vb3ApO1xuICAgKiAvLyA9PiBmYWxzZVxuICAgKlxuICAgKiBfLmlzT2JqZWN0TGlrZShudWxsKTtcbiAgICogLy8gPT4gZmFsc2VcbiAgICovXG4gIGZ1bmN0aW9uIGlzT2JqZWN0TGlrZSh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSAhPSBudWxsICYmIHR5cGVvZiB2YWx1ZSA9PSAnb2JqZWN0JztcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBgTmFOYC5cbiAgICpcbiAgICogKipOb3RlOioqIFRoaXMgbWV0aG9kIGlzIGJhc2VkIG9uXG4gICAqIFtgTnVtYmVyLmlzTmFOYF0oaHR0cHM6Ly9tZG4uaW8vTnVtYmVyL2lzTmFOKSBhbmQgaXMgbm90IHRoZSBzYW1lIGFzXG4gICAqIGdsb2JhbCBbYGlzTmFOYF0oaHR0cHM6Ly9tZG4uaW8vaXNOYU4pIHdoaWNoIHJldHVybnMgYHRydWVgIGZvclxuICAgKiBgdW5kZWZpbmVkYCBhbmQgb3RoZXIgbm9uLW51bWJlciB2YWx1ZXMuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQHNpbmNlIDAuMS4wXG4gICAqIEBjYXRlZ29yeSBMYW5nXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBgTmFOYCwgZWxzZSBgZmFsc2VgLlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiBfLmlzTmFOKE5hTik7XG4gICAqIC8vID0+IHRydWVcbiAgICpcbiAgICogXy5pc05hTihuZXcgTnVtYmVyKE5hTikpO1xuICAgKiAvLyA9PiB0cnVlXG4gICAqXG4gICAqIGlzTmFOKHVuZGVmaW5lZCk7XG4gICAqIC8vID0+IHRydWVcbiAgICpcbiAgICogXy5pc05hTih1bmRlZmluZWQpO1xuICAgKiAvLyA9PiBmYWxzZVxuICAgKi9cbiAgZnVuY3Rpb24gaXNOYU4odmFsdWUpIHtcbiAgICAvLyBBbiBgTmFOYCBwcmltaXRpdmUgaXMgdGhlIG9ubHkgdmFsdWUgdGhhdCBpcyBub3QgZXF1YWwgdG8gaXRzZWxmLlxuICAgIC8vIFBlcmZvcm0gdGhlIGB0b1N0cmluZ1RhZ2AgY2hlY2sgZmlyc3QgdG8gYXZvaWQgZXJyb3JzIHdpdGggc29tZVxuICAgIC8vIEFjdGl2ZVggb2JqZWN0cyBpbiBJRS5cbiAgICByZXR1cm4gaXNOdW1iZXIodmFsdWUpICYmIHZhbHVlICE9ICt2YWx1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBgbnVsbGAuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQHNpbmNlIDAuMS4wXG4gICAqIEBjYXRlZ29yeSBMYW5nXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBgbnVsbGAsIGVsc2UgYGZhbHNlYC5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogXy5pc051bGwobnVsbCk7XG4gICAqIC8vID0+IHRydWVcbiAgICpcbiAgICogXy5pc051bGwodm9pZCAwKTtcbiAgICogLy8gPT4gZmFsc2VcbiAgICovXG4gIGZ1bmN0aW9uIGlzTnVsbCh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSA9PT0gbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGEgYE51bWJlcmAgcHJpbWl0aXZlIG9yIG9iamVjdC5cbiAgICpcbiAgICogKipOb3RlOioqIFRvIGV4Y2x1ZGUgYEluZmluaXR5YCwgYC1JbmZpbml0eWAsIGFuZCBgTmFOYCwgd2hpY2ggYXJlXG4gICAqIGNsYXNzaWZpZWQgYXMgbnVtYmVycywgdXNlIHRoZSBgXy5pc0Zpbml0ZWAgbWV0aG9kLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBzaW5jZSAwLjEuMFxuICAgKiBAY2F0ZWdvcnkgTGFuZ1xuICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBudW1iZXIsIGVsc2UgYGZhbHNlYC5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogXy5pc051bWJlcigzKTtcbiAgICogLy8gPT4gdHJ1ZVxuICAgKlxuICAgKiBfLmlzTnVtYmVyKE51bWJlci5NSU5fVkFMVUUpO1xuICAgKiAvLyA9PiB0cnVlXG4gICAqXG4gICAqIF8uaXNOdW1iZXIoSW5maW5pdHkpO1xuICAgKiAvLyA9PiB0cnVlXG4gICAqXG4gICAqIF8uaXNOdW1iZXIoJzMnKTtcbiAgICogLy8gPT4gZmFsc2VcbiAgICovXG4gIGZ1bmN0aW9uIGlzTnVtYmVyKHZhbHVlKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PSAnbnVtYmVyJyB8fFxuICAgICAgKGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgYmFzZUdldFRhZyh2YWx1ZSkgPT0gbnVtYmVyVGFnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGEgYFJlZ0V4cGAgb2JqZWN0LlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBzaW5jZSAwLjEuMFxuICAgKiBAY2F0ZWdvcnkgTGFuZ1xuICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSByZWdleHAsIGVsc2UgYGZhbHNlYC5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogXy5pc1JlZ0V4cCgvYWJjLyk7XG4gICAqIC8vID0+IHRydWVcbiAgICpcbiAgICogXy5pc1JlZ0V4cCgnL2FiYy8nKTtcbiAgICogLy8gPT4gZmFsc2VcbiAgICovXG4gIHZhciBpc1JlZ0V4cCA9IGJhc2VJc1JlZ0V4cDtcblxuICAvKipcbiAgICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIGBTdHJpbmdgIHByaW1pdGl2ZSBvciBvYmplY3QuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQHNpbmNlIDAuMS4wXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBjYXRlZ29yeSBMYW5nXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHN0cmluZywgZWxzZSBgZmFsc2VgLlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiBfLmlzU3RyaW5nKCdhYmMnKTtcbiAgICogLy8gPT4gdHJ1ZVxuICAgKlxuICAgKiBfLmlzU3RyaW5nKDEpO1xuICAgKiAvLyA9PiBmYWxzZVxuICAgKi9cbiAgZnVuY3Rpb24gaXNTdHJpbmcodmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09ICdzdHJpbmcnIHx8XG4gICAgICAoIWlzQXJyYXkodmFsdWUpICYmIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgYmFzZUdldFRhZyh2YWx1ZSkgPT0gc3RyaW5nVGFnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBgdW5kZWZpbmVkYC5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAc2luY2UgMC4xLjBcbiAgICogQG1lbWJlck9mIF9cbiAgICogQGNhdGVnb3J5IExhbmdcbiAgICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGB1bmRlZmluZWRgLCBlbHNlIGBmYWxzZWAuXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqIF8uaXNVbmRlZmluZWQodm9pZCAwKTtcbiAgICogLy8gPT4gdHJ1ZVxuICAgKlxuICAgKiBfLmlzVW5kZWZpbmVkKG51bGwpO1xuICAgKiAvLyA9PiBmYWxzZVxuICAgKi9cbiAgZnVuY3Rpb24gaXNVbmRlZmluZWQodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZDtcbiAgfVxuXG4gIC8qKlxuICAgKiBDb252ZXJ0cyBgdmFsdWVgIHRvIGFuIGFycmF5LlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBzaW5jZSAwLjEuMFxuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAY2F0ZWdvcnkgTGFuZ1xuICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb252ZXJ0LlxuICAgKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGNvbnZlcnRlZCBhcnJheS5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogXy50b0FycmF5KHsgJ2EnOiAxLCAnYic6IDIgfSk7XG4gICAqIC8vID0+IFsxLCAyXVxuICAgKlxuICAgKiBfLnRvQXJyYXkoJ2FiYycpO1xuICAgKiAvLyA9PiBbJ2EnLCAnYicsICdjJ11cbiAgICpcbiAgICogXy50b0FycmF5KDEpO1xuICAgKiAvLyA9PiBbXVxuICAgKlxuICAgKiBfLnRvQXJyYXkobnVsbCk7XG4gICAqIC8vID0+IFtdXG4gICAqL1xuICBmdW5jdGlvbiB0b0FycmF5KHZhbHVlKSB7XG4gICAgaWYgKCFpc0FycmF5TGlrZSh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiB2YWx1ZXModmFsdWUpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWUubGVuZ3RoID8gY29weUFycmF5KHZhbHVlKSA6IFtdO1xuICB9XG5cbiAgLyoqXG4gICAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYW4gaW50ZWdlci5cbiAgICpcbiAgICogKipOb3RlOioqIFRoaXMgbWV0aG9kIGlzIGxvb3NlbHkgYmFzZWQgb25cbiAgICogW2BUb0ludGVnZXJgXShodHRwOi8vd3d3LmVjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtdG9pbnRlZ2VyKS5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAc2luY2UgNC4wLjBcbiAgICogQGNhdGVnb3J5IExhbmdcbiAgICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29udmVydC5cbiAgICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgY29udmVydGVkIGludGVnZXIuXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqIF8udG9JbnRlZ2VyKDMuMik7XG4gICAqIC8vID0+IDNcbiAgICpcbiAgICogXy50b0ludGVnZXIoTnVtYmVyLk1JTl9WQUxVRSk7XG4gICAqIC8vID0+IDBcbiAgICpcbiAgICogXy50b0ludGVnZXIoSW5maW5pdHkpO1xuICAgKiAvLyA9PiAxLjc5NzY5MzEzNDg2MjMxNTdlKzMwOFxuICAgKlxuICAgKiBfLnRvSW50ZWdlcignMy4yJyk7XG4gICAqIC8vID0+IDNcbiAgICovXG4gIHZhciB0b0ludGVnZXIgPSBOdW1iZXI7XG5cbiAgLyoqXG4gICAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYSBudW1iZXIuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQHNpbmNlIDQuMC4wXG4gICAqIEBjYXRlZ29yeSBMYW5nXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHByb2Nlc3MuXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIG51bWJlci5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogXy50b051bWJlcigzLjIpO1xuICAgKiAvLyA9PiAzLjJcbiAgICpcbiAgICogXy50b051bWJlcihOdW1iZXIuTUlOX1ZBTFVFKTtcbiAgICogLy8gPT4gNWUtMzI0XG4gICAqXG4gICAqIF8udG9OdW1iZXIoSW5maW5pdHkpO1xuICAgKiAvLyA9PiBJbmZpbml0eVxuICAgKlxuICAgKiBfLnRvTnVtYmVyKCczLjInKTtcbiAgICogLy8gPT4gMy4yXG4gICAqL1xuICB2YXIgdG9OdW1iZXIgPSBOdW1iZXI7XG5cbiAgLyoqXG4gICAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYSBzdHJpbmcuIEFuIGVtcHR5IHN0cmluZyBpcyByZXR1cm5lZCBmb3IgYG51bGxgXG4gICAqIGFuZCBgdW5kZWZpbmVkYCB2YWx1ZXMuIFRoZSBzaWduIG9mIGAtMGAgaXMgcHJlc2VydmVkLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBzaW5jZSA0LjAuMFxuICAgKiBAY2F0ZWdvcnkgTGFuZ1xuICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb252ZXJ0LlxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBjb252ZXJ0ZWQgc3RyaW5nLlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiBfLnRvU3RyaW5nKG51bGwpO1xuICAgKiAvLyA9PiAnJ1xuICAgKlxuICAgKiBfLnRvU3RyaW5nKC0wKTtcbiAgICogLy8gPT4gJy0wJ1xuICAgKlxuICAgKiBfLnRvU3RyaW5nKFsxLCAyLCAzXSk7XG4gICAqIC8vID0+ICcxLDIsMydcbiAgICovXG4gIGZ1bmN0aW9uIHRvU3RyaW5nKHZhbHVlKSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PSAnc3RyaW5nJykge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWUgPT0gbnVsbCA/ICcnIDogKHZhbHVlICsgJycpO1xuICB9XG5cbiAgLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4gIC8qKlxuICAgKiBBc3NpZ25zIG93biBlbnVtZXJhYmxlIHN0cmluZyBrZXllZCBwcm9wZXJ0aWVzIG9mIHNvdXJjZSBvYmplY3RzIHRvIHRoZVxuICAgKiBkZXN0aW5hdGlvbiBvYmplY3QuIFNvdXJjZSBvYmplY3RzIGFyZSBhcHBsaWVkIGZyb20gbGVmdCB0byByaWdodC5cbiAgICogU3Vic2VxdWVudCBzb3VyY2VzIG92ZXJ3cml0ZSBwcm9wZXJ0eSBhc3NpZ25tZW50cyBvZiBwcmV2aW91cyBzb3VyY2VzLlxuICAgKlxuICAgKiAqKk5vdGU6KiogVGhpcyBtZXRob2QgbXV0YXRlcyBgb2JqZWN0YCBhbmQgaXMgbG9vc2VseSBiYXNlZCBvblxuICAgKiBbYE9iamVjdC5hc3NpZ25gXShodHRwczovL21kbi5pby9PYmplY3QvYXNzaWduKS5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAc2luY2UgMC4xMC4wXG4gICAqIEBjYXRlZ29yeSBPYmplY3RcbiAgICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgZGVzdGluYXRpb24gb2JqZWN0LlxuICAgKiBAcGFyYW0gey4uLk9iamVjdH0gW3NvdXJjZXNdIFRoZSBzb3VyY2Ugb2JqZWN0cy5cbiAgICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBgb2JqZWN0YC5cbiAgICogQHNlZSBfLmFzc2lnbkluXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqIGZ1bmN0aW9uIEZvbygpIHtcbiAgICogICB0aGlzLmEgPSAxO1xuICAgKiB9XG4gICAqXG4gICAqIGZ1bmN0aW9uIEJhcigpIHtcbiAgICogICB0aGlzLmMgPSAzO1xuICAgKiB9XG4gICAqXG4gICAqIEZvby5wcm90b3R5cGUuYiA9IDI7XG4gICAqIEJhci5wcm90b3R5cGUuZCA9IDQ7XG4gICAqXG4gICAqIF8uYXNzaWduKHsgJ2EnOiAwIH0sIG5ldyBGb28sIG5ldyBCYXIpO1xuICAgKiAvLyA9PiB7ICdhJzogMSwgJ2MnOiAzIH1cbiAgICovXG4gIHZhciBhc3NpZ24gPSBjcmVhdGVBc3NpZ25lcihmdW5jdGlvbihvYmplY3QsIHNvdXJjZSkge1xuICAgIGNvcHlPYmplY3Qoc291cmNlLCBuYXRpdmVLZXlzKHNvdXJjZSksIG9iamVjdCk7XG4gIH0pO1xuXG4gIC8qKlxuICAgKiBUaGlzIG1ldGhvZCBpcyBsaWtlIGBfLmFzc2lnbmAgZXhjZXB0IHRoYXQgaXQgaXRlcmF0ZXMgb3ZlciBvd24gYW5kXG4gICAqIGluaGVyaXRlZCBzb3VyY2UgcHJvcGVydGllcy5cbiAgICpcbiAgICogKipOb3RlOioqIFRoaXMgbWV0aG9kIG11dGF0ZXMgYG9iamVjdGAuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQHNpbmNlIDQuMC4wXG4gICAqIEBhbGlhcyBleHRlbmRcbiAgICogQGNhdGVnb3J5IE9iamVjdFxuICAgKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBkZXN0aW5hdGlvbiBvYmplY3QuXG4gICAqIEBwYXJhbSB7Li4uT2JqZWN0fSBbc291cmNlc10gVGhlIHNvdXJjZSBvYmplY3RzLlxuICAgKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIGBvYmplY3RgLlxuICAgKiBAc2VlIF8uYXNzaWduXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqIGZ1bmN0aW9uIEZvbygpIHtcbiAgICogICB0aGlzLmEgPSAxO1xuICAgKiB9XG4gICAqXG4gICAqIGZ1bmN0aW9uIEJhcigpIHtcbiAgICogICB0aGlzLmMgPSAzO1xuICAgKiB9XG4gICAqXG4gICAqIEZvby5wcm90b3R5cGUuYiA9IDI7XG4gICAqIEJhci5wcm90b3R5cGUuZCA9IDQ7XG4gICAqXG4gICAqIF8uYXNzaWduSW4oeyAnYSc6IDAgfSwgbmV3IEZvbywgbmV3IEJhcik7XG4gICAqIC8vID0+IHsgJ2EnOiAxLCAnYic6IDIsICdjJzogMywgJ2QnOiA0IH1cbiAgICovXG4gIHZhciBhc3NpZ25JbiA9IGNyZWF0ZUFzc2lnbmVyKGZ1bmN0aW9uKG9iamVjdCwgc291cmNlKSB7XG4gICAgY29weU9iamVjdChzb3VyY2UsIG5hdGl2ZUtleXNJbihzb3VyY2UpLCBvYmplY3QpO1xuICB9KTtcblxuICAvKipcbiAgICogQ3JlYXRlcyBhbiBvYmplY3QgdGhhdCBpbmhlcml0cyBmcm9tIHRoZSBgcHJvdG90eXBlYCBvYmplY3QuIElmIGFcbiAgICogYHByb3BlcnRpZXNgIG9iamVjdCBpcyBnaXZlbiwgaXRzIG93biBlbnVtZXJhYmxlIHN0cmluZyBrZXllZCBwcm9wZXJ0aWVzXG4gICAqIGFyZSBhc3NpZ25lZCB0byB0aGUgY3JlYXRlZCBvYmplY3QuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQHNpbmNlIDIuMy4wXG4gICAqIEBjYXRlZ29yeSBPYmplY3RcbiAgICogQHBhcmFtIHtPYmplY3R9IHByb3RvdHlwZSBUaGUgb2JqZWN0IHRvIGluaGVyaXQgZnJvbS5cbiAgICogQHBhcmFtIHtPYmplY3R9IFtwcm9wZXJ0aWVzXSBUaGUgcHJvcGVydGllcyB0byBhc3NpZ24gdG8gdGhlIG9iamVjdC5cbiAgICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgbmV3IG9iamVjdC5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogZnVuY3Rpb24gU2hhcGUoKSB7XG4gICAqICAgdGhpcy54ID0gMDtcbiAgICogICB0aGlzLnkgPSAwO1xuICAgKiB9XG4gICAqXG4gICAqIGZ1bmN0aW9uIENpcmNsZSgpIHtcbiAgICogICBTaGFwZS5jYWxsKHRoaXMpO1xuICAgKiB9XG4gICAqXG4gICAqIENpcmNsZS5wcm90b3R5cGUgPSBfLmNyZWF0ZShTaGFwZS5wcm90b3R5cGUsIHtcbiAgICogICAnY29uc3RydWN0b3InOiBDaXJjbGVcbiAgICogfSk7XG4gICAqXG4gICAqIHZhciBjaXJjbGUgPSBuZXcgQ2lyY2xlO1xuICAgKiBjaXJjbGUgaW5zdGFuY2VvZiBDaXJjbGU7XG4gICAqIC8vID0+IHRydWVcbiAgICpcbiAgICogY2lyY2xlIGluc3RhbmNlb2YgU2hhcGU7XG4gICAqIC8vID0+IHRydWVcbiAgICovXG4gIGZ1bmN0aW9uIGNyZWF0ZShwcm90b3R5cGUsIHByb3BlcnRpZXMpIHtcbiAgICB2YXIgcmVzdWx0ID0gYmFzZUNyZWF0ZShwcm90b3R5cGUpO1xuICAgIHJldHVybiBwcm9wZXJ0aWVzID09IG51bGwgPyByZXN1bHQgOiBhc3NpZ24ocmVzdWx0LCBwcm9wZXJ0aWVzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBc3NpZ25zIG93biBhbmQgaW5oZXJpdGVkIGVudW1lcmFibGUgc3RyaW5nIGtleWVkIHByb3BlcnRpZXMgb2Ygc291cmNlXG4gICAqIG9iamVjdHMgdG8gdGhlIGRlc3RpbmF0aW9uIG9iamVjdCBmb3IgYWxsIGRlc3RpbmF0aW9uIHByb3BlcnRpZXMgdGhhdFxuICAgKiByZXNvbHZlIHRvIGB1bmRlZmluZWRgLiBTb3VyY2Ugb2JqZWN0cyBhcmUgYXBwbGllZCBmcm9tIGxlZnQgdG8gcmlnaHQuXG4gICAqIE9uY2UgYSBwcm9wZXJ0eSBpcyBzZXQsIGFkZGl0aW9uYWwgdmFsdWVzIG9mIHRoZSBzYW1lIHByb3BlcnR5IGFyZSBpZ25vcmVkLlxuICAgKlxuICAgKiAqKk5vdGU6KiogVGhpcyBtZXRob2QgbXV0YXRlcyBgb2JqZWN0YC5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAc2luY2UgMC4xLjBcbiAgICogQG1lbWJlck9mIF9cbiAgICogQGNhdGVnb3J5IE9iamVjdFxuICAgKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBkZXN0aW5hdGlvbiBvYmplY3QuXG4gICAqIEBwYXJhbSB7Li4uT2JqZWN0fSBbc291cmNlc10gVGhlIHNvdXJjZSBvYmplY3RzLlxuICAgKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIGBvYmplY3RgLlxuICAgKiBAc2VlIF8uZGVmYXVsdHNEZWVwXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqIF8uZGVmYXVsdHMoeyAnYSc6IDEgfSwgeyAnYic6IDIgfSwgeyAnYSc6IDMgfSk7XG4gICAqIC8vID0+IHsgJ2EnOiAxLCAnYic6IDIgfVxuICAgKi9cbiAgdmFyIGRlZmF1bHRzID0gYmFzZVJlc3QoZnVuY3Rpb24ob2JqZWN0LCBzb3VyY2VzKSB7XG4gICAgb2JqZWN0ID0gT2JqZWN0KG9iamVjdCk7XG5cbiAgICB2YXIgaW5kZXggPSAtMTtcbiAgICB2YXIgbGVuZ3RoID0gc291cmNlcy5sZW5ndGg7XG4gICAgdmFyIGd1YXJkID0gbGVuZ3RoID4gMiA/IHNvdXJjZXNbMl0gOiB1bmRlZmluZWQ7XG5cbiAgICBpZiAoZ3VhcmQgJiYgaXNJdGVyYXRlZUNhbGwoc291cmNlc1swXSwgc291cmNlc1sxXSwgZ3VhcmQpKSB7XG4gICAgICBsZW5ndGggPSAxO1xuICAgIH1cblxuICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICB2YXIgc291cmNlID0gc291cmNlc1tpbmRleF07XG4gICAgICB2YXIgcHJvcHMgPSBrZXlzSW4oc291cmNlKTtcbiAgICAgIHZhciBwcm9wc0luZGV4ID0gLTE7XG4gICAgICB2YXIgcHJvcHNMZW5ndGggPSBwcm9wcy5sZW5ndGg7XG5cbiAgICAgIHdoaWxlICgrK3Byb3BzSW5kZXggPCBwcm9wc0xlbmd0aCkge1xuICAgICAgICB2YXIga2V5ID0gcHJvcHNbcHJvcHNJbmRleF07XG4gICAgICAgIHZhciB2YWx1ZSA9IG9iamVjdFtrZXldO1xuXG4gICAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8XG4gICAgICAgICAgICAoZXEodmFsdWUsIG9iamVjdFByb3RvW2tleV0pICYmICFoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwga2V5KSkpIHtcbiAgICAgICAgICBvYmplY3Rba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG9iamVjdDtcbiAgfSk7XG5cbiAgLyoqXG4gICAqIENoZWNrcyBpZiBgcGF0aGAgaXMgYSBkaXJlY3QgcHJvcGVydHkgb2YgYG9iamVjdGAuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQHNpbmNlIDAuMS4wXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBjYXRlZ29yeSBPYmplY3RcbiAgICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICAgKiBAcGFyYW0ge0FycmF5fHN0cmluZ30gcGF0aCBUaGUgcGF0aCB0byBjaGVjay5cbiAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGBwYXRoYCBleGlzdHMsIGVsc2UgYGZhbHNlYC5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogdmFyIG9iamVjdCA9IHsgJ2EnOiB7ICdiJzogMiB9IH07XG4gICAqIHZhciBvdGhlciA9IF8uY3JlYXRlKHsgJ2EnOiBfLmNyZWF0ZSh7ICdiJzogMiB9KSB9KTtcbiAgICpcbiAgICogXy5oYXMob2JqZWN0LCAnYScpO1xuICAgKiAvLyA9PiB0cnVlXG4gICAqXG4gICAqIF8uaGFzKG9iamVjdCwgJ2EuYicpO1xuICAgKiAvLyA9PiB0cnVlXG4gICAqXG4gICAqIF8uaGFzKG9iamVjdCwgWydhJywgJ2InXSk7XG4gICAqIC8vID0+IHRydWVcbiAgICpcbiAgICogXy5oYXMob3RoZXIsICdhJyk7XG4gICAqIC8vID0+IGZhbHNlXG4gICAqL1xuICBmdW5jdGlvbiBoYXMob2JqZWN0LCBwYXRoKSB7XG4gICAgcmV0dXJuIG9iamVjdCAhPSBudWxsICYmIGhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwYXRoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGFuIGFycmF5IG9mIHRoZSBvd24gZW51bWVyYWJsZSBwcm9wZXJ0eSBuYW1lcyBvZiBgb2JqZWN0YC5cbiAgICpcbiAgICogKipOb3RlOioqIE5vbi1vYmplY3QgdmFsdWVzIGFyZSBjb2VyY2VkIHRvIG9iamVjdHMuIFNlZSB0aGVcbiAgICogW0VTIHNwZWNdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5rZXlzKVxuICAgKiBmb3IgbW9yZSBkZXRhaWxzLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBzaW5jZSAwLjEuMFxuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAY2F0ZWdvcnkgT2JqZWN0XG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAgICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogZnVuY3Rpb24gRm9vKCkge1xuICAgKiAgIHRoaXMuYSA9IDE7XG4gICAqICAgdGhpcy5iID0gMjtcbiAgICogfVxuICAgKlxuICAgKiBGb28ucHJvdG90eXBlLmMgPSAzO1xuICAgKlxuICAgKiBfLmtleXMobmV3IEZvbyk7XG4gICAqIC8vID0+IFsnYScsICdiJ10gKGl0ZXJhdGlvbiBvcmRlciBpcyBub3QgZ3VhcmFudGVlZClcbiAgICpcbiAgICogXy5rZXlzKCdoaScpO1xuICAgKiAvLyA9PiBbJzAnLCAnMSddXG4gICAqL1xuICB2YXIga2V5cyA9IG5hdGl2ZUtleXM7XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYW4gYXJyYXkgb2YgdGhlIG93biBhbmQgaW5oZXJpdGVkIGVudW1lcmFibGUgcHJvcGVydHkgbmFtZXMgb2YgYG9iamVjdGAuXG4gICAqXG4gICAqICoqTm90ZToqKiBOb24tb2JqZWN0IHZhbHVlcyBhcmUgY29lcmNlZCB0byBvYmplY3RzLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBzaW5jZSAzLjAuMFxuICAgKiBAY2F0ZWdvcnkgT2JqZWN0XG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAgICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogZnVuY3Rpb24gRm9vKCkge1xuICAgKiAgIHRoaXMuYSA9IDE7XG4gICAqICAgdGhpcy5iID0gMjtcbiAgICogfVxuICAgKlxuICAgKiBGb28ucHJvdG90eXBlLmMgPSAzO1xuICAgKlxuICAgKiBfLmtleXNJbihuZXcgRm9vKTtcbiAgICogLy8gPT4gWydhJywgJ2InLCAnYyddIChpdGVyYXRpb24gb3JkZXIgaXMgbm90IGd1YXJhbnRlZWQpXG4gICAqL1xuICB2YXIga2V5c0luID0gbmF0aXZlS2V5c0luO1xuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGFuIG9iamVjdCBjb21wb3NlZCBvZiB0aGUgcGlja2VkIGBvYmplY3RgIHByb3BlcnRpZXMuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQHNpbmNlIDAuMS4wXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBjYXRlZ29yeSBPYmplY3RcbiAgICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgc291cmNlIG9iamVjdC5cbiAgICogQHBhcmFtIHsuLi4oc3RyaW5nfHN0cmluZ1tdKX0gW3BhdGhzXSBUaGUgcHJvcGVydHkgcGF0aHMgdG8gcGljay5cbiAgICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgbmV3IG9iamVjdC5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogdmFyIG9iamVjdCA9IHsgJ2EnOiAxLCAnYic6ICcyJywgJ2MnOiAzIH07XG4gICAqXG4gICAqIF8ucGljayhvYmplY3QsIFsnYScsICdjJ10pO1xuICAgKiAvLyA9PiB7ICdhJzogMSwgJ2MnOiAzIH1cbiAgICovXG4gIHZhciBwaWNrID0gZmxhdFJlc3QoZnVuY3Rpb24ob2JqZWN0LCBwYXRocykge1xuICAgIHJldHVybiBvYmplY3QgPT0gbnVsbCA/IHt9IDogYmFzZVBpY2sob2JqZWN0LCBwYXRocyk7XG4gIH0pO1xuXG4gIC8qKlxuICAgKiBUaGlzIG1ldGhvZCBpcyBsaWtlIGBfLmdldGAgZXhjZXB0IHRoYXQgaWYgdGhlIHJlc29sdmVkIHZhbHVlIGlzIGFcbiAgICogZnVuY3Rpb24gaXQncyBpbnZva2VkIHdpdGggdGhlIGB0aGlzYCBiaW5kaW5nIG9mIGl0cyBwYXJlbnQgb2JqZWN0IGFuZFxuICAgKiBpdHMgcmVzdWx0IGlzIHJldHVybmVkLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBzaW5jZSAwLjEuMFxuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAY2F0ZWdvcnkgT2JqZWN0XG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAgICogQHBhcmFtIHtBcnJheXxzdHJpbmd9IHBhdGggVGhlIHBhdGggb2YgdGhlIHByb3BlcnR5IHRvIHJlc29sdmUuXG4gICAqIEBwYXJhbSB7Kn0gW2RlZmF1bHRWYWx1ZV0gVGhlIHZhbHVlIHJldHVybmVkIGZvciBgdW5kZWZpbmVkYCByZXNvbHZlZCB2YWx1ZXMuXG4gICAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSByZXNvbHZlZCB2YWx1ZS5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogdmFyIG9iamVjdCA9IHsgJ2EnOiBbeyAnYic6IHsgJ2MxJzogMywgJ2MyJzogXy5jb25zdGFudCg0KSB9IH1dIH07XG4gICAqXG4gICAqIF8ucmVzdWx0KG9iamVjdCwgJ2FbMF0uYi5jMScpO1xuICAgKiAvLyA9PiAzXG4gICAqXG4gICAqIF8ucmVzdWx0KG9iamVjdCwgJ2FbMF0uYi5jMicpO1xuICAgKiAvLyA9PiA0XG4gICAqXG4gICAqIF8ucmVzdWx0KG9iamVjdCwgJ2FbMF0uYi5jMycsICdkZWZhdWx0Jyk7XG4gICAqIC8vID0+ICdkZWZhdWx0J1xuICAgKlxuICAgKiBfLnJlc3VsdChvYmplY3QsICdhWzBdLmIuYzMnLCBfLmNvbnN0YW50KCdkZWZhdWx0JykpO1xuICAgKiAvLyA9PiAnZGVmYXVsdCdcbiAgICovXG4gIGZ1bmN0aW9uIHJlc3VsdChvYmplY3QsIHBhdGgsIGRlZmF1bHRWYWx1ZSkge1xuICAgIHZhciB2YWx1ZSA9IG9iamVjdCA9PSBudWxsID8gdW5kZWZpbmVkIDogb2JqZWN0W3BhdGhdO1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB2YWx1ZSA9IGRlZmF1bHRWYWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGlzRnVuY3Rpb24odmFsdWUpID8gdmFsdWUuY2FsbChvYmplY3QpIDogdmFsdWU7XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlcyBhbiBhcnJheSBvZiB0aGUgb3duIGVudW1lcmFibGUgc3RyaW5nIGtleWVkIHByb3BlcnR5IHZhbHVlcyBvZiBgb2JqZWN0YC5cbiAgICpcbiAgICogKipOb3RlOioqIE5vbi1vYmplY3QgdmFsdWVzIGFyZSBjb2VyY2VkIHRvIG9iamVjdHMuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQHNpbmNlIDAuMS4wXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBjYXRlZ29yeSBPYmplY3RcbiAgICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICAgKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IHZhbHVlcy5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogZnVuY3Rpb24gRm9vKCkge1xuICAgKiAgIHRoaXMuYSA9IDE7XG4gICAqICAgdGhpcy5iID0gMjtcbiAgICogfVxuICAgKlxuICAgKiBGb28ucHJvdG90eXBlLmMgPSAzO1xuICAgKlxuICAgKiBfLnZhbHVlcyhuZXcgRm9vKTtcbiAgICogLy8gPT4gWzEsIDJdIChpdGVyYXRpb24gb3JkZXIgaXMgbm90IGd1YXJhbnRlZWQpXG4gICAqXG4gICAqIF8udmFsdWVzKCdoaScpO1xuICAgKiAvLyA9PiBbJ2gnLCAnaSddXG4gICAqL1xuICBmdW5jdGlvbiB2YWx1ZXMob2JqZWN0KSB7XG4gICAgcmV0dXJuIG9iamVjdCA9PSBudWxsID8gW10gOiBiYXNlVmFsdWVzKG9iamVjdCwga2V5cyhvYmplY3QpKTtcbiAgfVxuXG4gIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuICAvKipcbiAgICogQ29udmVydHMgdGhlIGNoYXJhY3RlcnMgXCImXCIsIFwiPFwiLCBcIj5cIiwgJ1wiJywgYW5kIFwiJ1wiIGluIGBzdHJpbmdgIHRvIHRoZWlyXG4gICAqIGNvcnJlc3BvbmRpbmcgSFRNTCBlbnRpdGllcy5cbiAgICpcbiAgICogKipOb3RlOioqIE5vIG90aGVyIGNoYXJhY3RlcnMgYXJlIGVzY2FwZWQuIFRvIGVzY2FwZSBhZGRpdGlvbmFsXG4gICAqIGNoYXJhY3RlcnMgdXNlIGEgdGhpcmQtcGFydHkgbGlicmFyeSBsaWtlIFtfaGVfXShodHRwczovL210aHMuYmUvaGUpLlxuICAgKlxuICAgKiBUaG91Z2ggdGhlIFwiPlwiIGNoYXJhY3RlciBpcyBlc2NhcGVkIGZvciBzeW1tZXRyeSwgY2hhcmFjdGVycyBsaWtlXG4gICAqIFwiPlwiIGFuZCBcIi9cIiBkb24ndCBuZWVkIGVzY2FwaW5nIGluIEhUTUwgYW5kIGhhdmUgbm8gc3BlY2lhbCBtZWFuaW5nXG4gICAqIHVubGVzcyB0aGV5J3JlIHBhcnQgb2YgYSB0YWcgb3IgdW5xdW90ZWQgYXR0cmlidXRlIHZhbHVlLiBTZWVcbiAgICogW01hdGhpYXMgQnluZW5zJ3MgYXJ0aWNsZV0oaHR0cHM6Ly9tYXRoaWFzYnluZW5zLmJlL25vdGVzL2FtYmlndW91cy1hbXBlcnNhbmRzKVxuICAgKiAodW5kZXIgXCJzZW1pLXJlbGF0ZWQgZnVuIGZhY3RcIikgZm9yIG1vcmUgZGV0YWlscy5cbiAgICpcbiAgICogV2hlbiB3b3JraW5nIHdpdGggSFRNTCB5b3Ugc2hvdWxkIGFsd2F5c1xuICAgKiBbcXVvdGUgYXR0cmlidXRlIHZhbHVlc10oaHR0cDovL3dvbmtvLmNvbS9wb3N0L2h0bWwtZXNjYXBpbmcpIHRvIHJlZHVjZVxuICAgKiBYU1MgdmVjdG9ycy5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAc2luY2UgMC4xLjBcbiAgICogQG1lbWJlck9mIF9cbiAgICogQGNhdGVnb3J5IFN0cmluZ1xuICAgKiBAcGFyYW0ge3N0cmluZ30gW3N0cmluZz0nJ10gVGhlIHN0cmluZyB0byBlc2NhcGUuXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIGVzY2FwZWQgc3RyaW5nLlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiBfLmVzY2FwZSgnZnJlZCwgYmFybmV5LCAmIHBlYmJsZXMnKTtcbiAgICogLy8gPT4gJ2ZyZWQsIGJhcm5leSwgJmFtcDsgcGViYmxlcydcbiAgICovXG4gIGZ1bmN0aW9uIGVzY2FwZShzdHJpbmcpIHtcbiAgICBzdHJpbmcgPSB0b1N0cmluZyhzdHJpbmcpO1xuICAgIHJldHVybiAoc3RyaW5nICYmIHJlSGFzVW5lc2NhcGVkSHRtbC50ZXN0KHN0cmluZykpXG4gICAgICA/IHN0cmluZy5yZXBsYWNlKHJlVW5lc2NhcGVkSHRtbCwgZXNjYXBlSHRtbENoYXIpXG4gICAgICA6IHN0cmluZztcbiAgfVxuXG4gIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuICAvKipcbiAgICogVGhpcyBtZXRob2QgcmV0dXJucyB0aGUgZmlyc3QgYXJndW1lbnQgaXQgcmVjZWl2ZXMuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQHNpbmNlIDAuMS4wXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBjYXRlZ29yeSBVdGlsXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgQW55IHZhbHVlLlxuICAgKiBAcmV0dXJucyB7Kn0gUmV0dXJucyBgdmFsdWVgLlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiB2YXIgb2JqZWN0ID0geyAnYSc6IDEgfTtcbiAgICpcbiAgICogY29uc29sZS5sb2coXy5pZGVudGl0eShvYmplY3QpID09PSBvYmplY3QpO1xuICAgKiAvLyA9PiB0cnVlXG4gICAqL1xuICBmdW5jdGlvbiBpZGVudGl0eSh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgZnVuY3Rpb24gdGhhdCBpbnZva2VzIGBmdW5jYCB3aXRoIHRoZSBhcmd1bWVudHMgb2YgdGhlIGNyZWF0ZWRcbiAgICogZnVuY3Rpb24uIElmIGBmdW5jYCBpcyBhIHByb3BlcnR5IG5hbWUsIHRoZSBjcmVhdGVkIGZ1bmN0aW9uIHJldHVybnMgdGhlXG4gICAqIHByb3BlcnR5IHZhbHVlIGZvciBhIGdpdmVuIGVsZW1lbnQuIElmIGBmdW5jYCBpcyBhbiBhcnJheSBvciBvYmplY3QsIHRoZVxuICAgKiBjcmVhdGVkIGZ1bmN0aW9uIHJldHVybnMgYHRydWVgIGZvciBlbGVtZW50cyB0aGF0IGNvbnRhaW4gdGhlIGVxdWl2YWxlbnRcbiAgICogc291cmNlIHByb3BlcnRpZXMsIG90aGVyd2lzZSBpdCByZXR1cm5zIGBmYWxzZWAuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQHNpbmNlIDQuMC4wXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBjYXRlZ29yeSBVdGlsXG4gICAqIEBwYXJhbSB7Kn0gW2Z1bmM9Xy5pZGVudGl0eV0gVGhlIHZhbHVlIHRvIGNvbnZlcnQgdG8gYSBjYWxsYmFjay5cbiAgICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBjYWxsYmFjay5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogdmFyIHVzZXJzID0gW1xuICAgKiAgIHsgJ3VzZXInOiAnYmFybmV5JywgJ2FnZSc6IDM2LCAnYWN0aXZlJzogdHJ1ZSB9LFxuICAgKiAgIHsgJ3VzZXInOiAnZnJlZCcsICAgJ2FnZSc6IDQwLCAnYWN0aXZlJzogZmFsc2UgfVxuICAgKiBdO1xuICAgKlxuICAgKiAvLyBUaGUgYF8ubWF0Y2hlc2AgaXRlcmF0ZWUgc2hvcnRoYW5kLlxuICAgKiBfLmZpbHRlcih1c2VycywgXy5pdGVyYXRlZSh7ICd1c2VyJzogJ2Jhcm5leScsICdhY3RpdmUnOiB0cnVlIH0pKTtcbiAgICogLy8gPT4gW3sgJ3VzZXInOiAnYmFybmV5JywgJ2FnZSc6IDM2LCAnYWN0aXZlJzogdHJ1ZSB9XVxuICAgKlxuICAgKiAvLyBUaGUgYF8ubWF0Y2hlc1Byb3BlcnR5YCBpdGVyYXRlZSBzaG9ydGhhbmQuXG4gICAqIF8uZmlsdGVyKHVzZXJzLCBfLml0ZXJhdGVlKFsndXNlcicsICdmcmVkJ10pKTtcbiAgICogLy8gPT4gW3sgJ3VzZXInOiAnZnJlZCcsICdhZ2UnOiA0MCB9XVxuICAgKlxuICAgKiAvLyBUaGUgYF8ucHJvcGVydHlgIGl0ZXJhdGVlIHNob3J0aGFuZC5cbiAgICogXy5tYXAodXNlcnMsIF8uaXRlcmF0ZWUoJ3VzZXInKSk7XG4gICAqIC8vID0+IFsnYmFybmV5JywgJ2ZyZWQnXVxuICAgKlxuICAgKiAvLyBDcmVhdGUgY3VzdG9tIGl0ZXJhdGVlIHNob3J0aGFuZHMuXG4gICAqIF8uaXRlcmF0ZWUgPSBfLndyYXAoXy5pdGVyYXRlZSwgZnVuY3Rpb24oaXRlcmF0ZWUsIGZ1bmMpIHtcbiAgICogICByZXR1cm4gIV8uaXNSZWdFeHAoZnVuYykgPyBpdGVyYXRlZShmdW5jKSA6IGZ1bmN0aW9uKHN0cmluZykge1xuICAgKiAgICAgcmV0dXJuIGZ1bmMudGVzdChzdHJpbmcpO1xuICAgKiAgIH07XG4gICAqIH0pO1xuICAgKlxuICAgKiBfLmZpbHRlcihbJ2FiYycsICdkZWYnXSwgL2VmLyk7XG4gICAqIC8vID0+IFsnZGVmJ11cbiAgICovXG4gIHZhciBpdGVyYXRlZSA9IGJhc2VJdGVyYXRlZTtcblxuICAvKipcbiAgICogQ3JlYXRlcyBhIGZ1bmN0aW9uIHRoYXQgcGVyZm9ybXMgYSBwYXJ0aWFsIGRlZXAgY29tcGFyaXNvbiBiZXR3ZWVuIGEgZ2l2ZW5cbiAgICogb2JqZWN0IGFuZCBgc291cmNlYCwgcmV0dXJuaW5nIGB0cnVlYCBpZiB0aGUgZ2l2ZW4gb2JqZWN0IGhhcyBlcXVpdmFsZW50XG4gICAqIHByb3BlcnR5IHZhbHVlcywgZWxzZSBgZmFsc2VgLlxuICAgKlxuICAgKiAqKk5vdGU6KiogVGhlIGNyZWF0ZWQgZnVuY3Rpb24gaXMgZXF1aXZhbGVudCB0byBgXy5pc01hdGNoYCB3aXRoIGBzb3VyY2VgXG4gICAqIHBhcnRpYWxseSBhcHBsaWVkLlxuICAgKlxuICAgKiBQYXJ0aWFsIGNvbXBhcmlzb25zIHdpbGwgbWF0Y2ggZW1wdHkgYXJyYXkgYW5kIGVtcHR5IG9iamVjdCBgc291cmNlYFxuICAgKiB2YWx1ZXMgYWdhaW5zdCBhbnkgYXJyYXkgb3Igb2JqZWN0IHZhbHVlLCByZXNwZWN0aXZlbHkuIFNlZSBgXy5pc0VxdWFsYFxuICAgKiBmb3IgYSBsaXN0IG9mIHN1cHBvcnRlZCB2YWx1ZSBjb21wYXJpc29ucy5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAc2luY2UgMy4wLjBcbiAgICogQGNhdGVnb3J5IFV0aWxcbiAgICogQHBhcmFtIHtPYmplY3R9IHNvdXJjZSBUaGUgb2JqZWN0IG9mIHByb3BlcnR5IHZhbHVlcyB0byBtYXRjaC5cbiAgICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgc3BlYyBmdW5jdGlvbi5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogdmFyIG9iamVjdHMgPSBbXG4gICAqICAgeyAnYSc6IDEsICdiJzogMiwgJ2MnOiAzIH0sXG4gICAqICAgeyAnYSc6IDQsICdiJzogNSwgJ2MnOiA2IH1cbiAgICogXTtcbiAgICpcbiAgICogXy5maWx0ZXIob2JqZWN0cywgXy5tYXRjaGVzKHsgJ2EnOiA0LCAnYyc6IDYgfSkpO1xuICAgKiAvLyA9PiBbeyAnYSc6IDQsICdiJzogNSwgJ2MnOiA2IH1dXG4gICAqL1xuICBmdW5jdGlvbiBtYXRjaGVzKHNvdXJjZSkge1xuICAgIHJldHVybiBiYXNlTWF0Y2hlcyhhc3NpZ24oe30sIHNvdXJjZSkpO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHMgYWxsIG93biBlbnVtZXJhYmxlIHN0cmluZyBrZXllZCBmdW5jdGlvbiBwcm9wZXJ0aWVzIG9mIGEgc291cmNlXG4gICAqIG9iamVjdCB0byB0aGUgZGVzdGluYXRpb24gb2JqZWN0LiBJZiBgb2JqZWN0YCBpcyBhIGZ1bmN0aW9uLCB0aGVuIG1ldGhvZHNcbiAgICogYXJlIGFkZGVkIHRvIGl0cyBwcm90b3R5cGUgYXMgd2VsbC5cbiAgICpcbiAgICogKipOb3RlOioqIFVzZSBgXy5ydW5JbkNvbnRleHRgIHRvIGNyZWF0ZSBhIHByaXN0aW5lIGBsb2Rhc2hgIGZ1bmN0aW9uIHRvXG4gICAqIGF2b2lkIGNvbmZsaWN0cyBjYXVzZWQgYnkgbW9kaWZ5aW5nIHRoZSBvcmlnaW5hbC5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAc2luY2UgMC4xLjBcbiAgICogQG1lbWJlck9mIF9cbiAgICogQGNhdGVnb3J5IFV0aWxcbiAgICogQHBhcmFtIHtGdW5jdGlvbnxPYmplY3R9IFtvYmplY3Q9bG9kYXNoXSBUaGUgZGVzdGluYXRpb24gb2JqZWN0LlxuICAgKiBAcGFyYW0ge09iamVjdH0gc291cmNlIFRoZSBvYmplY3Qgb2YgZnVuY3Rpb25zIHRvIGFkZC5cbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zPXt9XSBUaGUgb3B0aW9ucyBvYmplY3QuXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMuY2hhaW49dHJ1ZV0gU3BlY2lmeSB3aGV0aGVyIG1peGlucyBhcmUgY2hhaW5hYmxlLlxuICAgKiBAcmV0dXJucyB7RnVuY3Rpb258T2JqZWN0fSBSZXR1cm5zIGBvYmplY3RgLlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiBmdW5jdGlvbiB2b3dlbHMoc3RyaW5nKSB7XG4gICAqICAgcmV0dXJuIF8uZmlsdGVyKHN0cmluZywgZnVuY3Rpb24odikge1xuICAgKiAgICAgcmV0dXJuIC9bYWVpb3VdL2kudGVzdCh2KTtcbiAgICogICB9KTtcbiAgICogfVxuICAgKlxuICAgKiBfLm1peGluKHsgJ3Zvd2Vscyc6IHZvd2VscyB9KTtcbiAgICogXy52b3dlbHMoJ2ZyZWQnKTtcbiAgICogLy8gPT4gWydlJ11cbiAgICpcbiAgICogXygnZnJlZCcpLnZvd2VscygpLnZhbHVlKCk7XG4gICAqIC8vID0+IFsnZSddXG4gICAqXG4gICAqIF8ubWl4aW4oeyAndm93ZWxzJzogdm93ZWxzIH0sIHsgJ2NoYWluJzogZmFsc2UgfSk7XG4gICAqIF8oJ2ZyZWQnKS52b3dlbHMoKTtcbiAgICogLy8gPT4gWydlJ11cbiAgICovXG4gIGZ1bmN0aW9uIG1peGluKG9iamVjdCwgc291cmNlLCBvcHRpb25zKSB7XG4gICAgdmFyIHByb3BzID0ga2V5cyhzb3VyY2UpLFxuICAgICAgICBtZXRob2ROYW1lcyA9IGJhc2VGdW5jdGlvbnMoc291cmNlLCBwcm9wcyk7XG5cbiAgICBpZiAob3B0aW9ucyA9PSBudWxsICYmXG4gICAgICAgICEoaXNPYmplY3Qoc291cmNlKSAmJiAobWV0aG9kTmFtZXMubGVuZ3RoIHx8ICFwcm9wcy5sZW5ndGgpKSkge1xuICAgICAgb3B0aW9ucyA9IHNvdXJjZTtcbiAgICAgIHNvdXJjZSA9IG9iamVjdDtcbiAgICAgIG9iamVjdCA9IHRoaXM7XG4gICAgICBtZXRob2ROYW1lcyA9IGJhc2VGdW5jdGlvbnMoc291cmNlLCBrZXlzKHNvdXJjZSkpO1xuICAgIH1cbiAgICB2YXIgY2hhaW4gPSAhKGlzT2JqZWN0KG9wdGlvbnMpICYmICdjaGFpbicgaW4gb3B0aW9ucykgfHwgISFvcHRpb25zLmNoYWluLFxuICAgICAgICBpc0Z1bmMgPSBpc0Z1bmN0aW9uKG9iamVjdCk7XG5cbiAgICBiYXNlRWFjaChtZXRob2ROYW1lcywgZnVuY3Rpb24obWV0aG9kTmFtZSkge1xuICAgICAgdmFyIGZ1bmMgPSBzb3VyY2VbbWV0aG9kTmFtZV07XG4gICAgICBvYmplY3RbbWV0aG9kTmFtZV0gPSBmdW5jO1xuICAgICAgaWYgKGlzRnVuYykge1xuICAgICAgICBvYmplY3QucHJvdG90eXBlW21ldGhvZE5hbWVdID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdmFyIGNoYWluQWxsID0gdGhpcy5fX2NoYWluX187XG4gICAgICAgICAgaWYgKGNoYWluIHx8IGNoYWluQWxsKSB7XG4gICAgICAgICAgICB2YXIgcmVzdWx0ID0gb2JqZWN0KHRoaXMuX193cmFwcGVkX18pLFxuICAgICAgICAgICAgICAgIGFjdGlvbnMgPSByZXN1bHQuX19hY3Rpb25zX18gPSBjb3B5QXJyYXkodGhpcy5fX2FjdGlvbnNfXyk7XG5cbiAgICAgICAgICAgIGFjdGlvbnMucHVzaCh7ICdmdW5jJzogZnVuYywgJ2FyZ3MnOiBhcmd1bWVudHMsICd0aGlzQXJnJzogb2JqZWN0IH0pO1xuICAgICAgICAgICAgcmVzdWx0Ll9fY2hhaW5fXyA9IGNoYWluQWxsO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIGZ1bmMuYXBwbHkob2JqZWN0LCBhcnJheVB1c2goW3RoaXMudmFsdWUoKV0sIGFyZ3VtZW50cykpO1xuICAgICAgICB9O1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIG9iamVjdDtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXZlcnRzIHRoZSBgX2AgdmFyaWFibGUgdG8gaXRzIHByZXZpb3VzIHZhbHVlIGFuZCByZXR1cm5zIGEgcmVmZXJlbmNlIHRvXG4gICAqIHRoZSBgbG9kYXNoYCBmdW5jdGlvbi5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAc2luY2UgMC4xLjBcbiAgICogQG1lbWJlck9mIF9cbiAgICogQGNhdGVnb3J5IFV0aWxcbiAgICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBgbG9kYXNoYCBmdW5jdGlvbi5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogdmFyIGxvZGFzaCA9IF8ubm9Db25mbGljdCgpO1xuICAgKi9cbiAgZnVuY3Rpb24gbm9Db25mbGljdCgpIHtcbiAgICBpZiAocm9vdC5fID09PSB0aGlzKSB7XG4gICAgICByb290Ll8gPSBvbGREYXNoO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGlzIG1ldGhvZCByZXR1cm5zIGB1bmRlZmluZWRgLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBzaW5jZSAyLjMuMFxuICAgKiBAY2F0ZWdvcnkgVXRpbFxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiBfLnRpbWVzKDIsIF8ubm9vcCk7XG4gICAqIC8vID0+IFt1bmRlZmluZWQsIHVuZGVmaW5lZF1cbiAgICovXG4gIGZ1bmN0aW9uIG5vb3AoKSB7XG4gICAgLy8gTm8gb3BlcmF0aW9uIHBlcmZvcm1lZC5cbiAgfVxuXG4gIC8qKlxuICAgKiBHZW5lcmF0ZXMgYSB1bmlxdWUgSUQuIElmIGBwcmVmaXhgIGlzIGdpdmVuLCB0aGUgSUQgaXMgYXBwZW5kZWQgdG8gaXQuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQHNpbmNlIDAuMS4wXG4gICAqIEBtZW1iZXJPZiBfXG4gICAqIEBjYXRlZ29yeSBVdGlsXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBbcHJlZml4PScnXSBUaGUgdmFsdWUgdG8gcHJlZml4IHRoZSBJRCB3aXRoLlxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSB1bmlxdWUgSUQuXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqIF8udW5pcXVlSWQoJ2NvbnRhY3RfJyk7XG4gICAqIC8vID0+ICdjb250YWN0XzEwNCdcbiAgICpcbiAgICogXy51bmlxdWVJZCgpO1xuICAgKiAvLyA9PiAnMTA1J1xuICAgKi9cbiAgZnVuY3Rpb24gdW5pcXVlSWQocHJlZml4KSB7XG4gICAgdmFyIGlkID0gKytpZENvdW50ZXI7XG4gICAgcmV0dXJuIHRvU3RyaW5nKHByZWZpeCkgKyBpZDtcbiAgfVxuXG4gIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuICAvKipcbiAgICogQ29tcHV0ZXMgdGhlIG1heGltdW0gdmFsdWUgb2YgYGFycmF5YC4gSWYgYGFycmF5YCBpcyBlbXB0eSBvciBmYWxzZXksXG4gICAqIGB1bmRlZmluZWRgIGlzIHJldHVybmVkLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBzaW5jZSAwLjEuMFxuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAY2F0ZWdvcnkgTWF0aFxuICAgKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLlxuICAgKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgbWF4aW11bSB2YWx1ZS5cbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogXy5tYXgoWzQsIDIsIDgsIDZdKTtcbiAgICogLy8gPT4gOFxuICAgKlxuICAgKiBfLm1heChbXSk7XG4gICAqIC8vID0+IHVuZGVmaW5lZFxuICAgKi9cbiAgZnVuY3Rpb24gbWF4KGFycmF5KSB7XG4gICAgcmV0dXJuIChhcnJheSAmJiBhcnJheS5sZW5ndGgpXG4gICAgICA/IGJhc2VFeHRyZW11bShhcnJheSwgaWRlbnRpdHksIGJhc2VHdClcbiAgICAgIDogdW5kZWZpbmVkO1xuICB9XG5cbiAgLyoqXG4gICAqIENvbXB1dGVzIHRoZSBtaW5pbXVtIHZhbHVlIG9mIGBhcnJheWAuIElmIGBhcnJheWAgaXMgZW1wdHkgb3IgZmFsc2V5LFxuICAgKiBgdW5kZWZpbmVkYCBpcyByZXR1cm5lZC5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAc2luY2UgMC4xLjBcbiAgICogQG1lbWJlck9mIF9cbiAgICogQGNhdGVnb3J5IE1hdGhcbiAgICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGl0ZXJhdGUgb3Zlci5cbiAgICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIG1pbmltdW0gdmFsdWUuXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqIF8ubWluKFs0LCAyLCA4LCA2XSk7XG4gICAqIC8vID0+IDJcbiAgICpcbiAgICogXy5taW4oW10pO1xuICAgKiAvLyA9PiB1bmRlZmluZWRcbiAgICovXG4gIGZ1bmN0aW9uIG1pbihhcnJheSkge1xuICAgIHJldHVybiAoYXJyYXkgJiYgYXJyYXkubGVuZ3RoKVxuICAgICAgPyBiYXNlRXh0cmVtdW0oYXJyYXksIGlkZW50aXR5LCBiYXNlTHQpXG4gICAgICA6IHVuZGVmaW5lZDtcbiAgfVxuXG4gIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuICAvLyBBZGQgbWV0aG9kcyB0aGF0IHJldHVybiB3cmFwcGVkIHZhbHVlcyBpbiBjaGFpbiBzZXF1ZW5jZXMuXG4gIGxvZGFzaC5hc3NpZ25JbiA9IGFzc2lnbkluO1xuICBsb2Rhc2guYmVmb3JlID0gYmVmb3JlO1xuICBsb2Rhc2guYmluZCA9IGJpbmQ7XG4gIGxvZGFzaC5jaGFpbiA9IGNoYWluO1xuICBsb2Rhc2guY29tcGFjdCA9IGNvbXBhY3Q7XG4gIGxvZGFzaC5jb25jYXQgPSBjb25jYXQ7XG4gIGxvZGFzaC5jcmVhdGUgPSBjcmVhdGU7XG4gIGxvZGFzaC5kZWZhdWx0cyA9IGRlZmF1bHRzO1xuICBsb2Rhc2guZGVmZXIgPSBkZWZlcjtcbiAgbG9kYXNoLmRlbGF5ID0gZGVsYXk7XG4gIGxvZGFzaC5maWx0ZXIgPSBmaWx0ZXI7XG4gIGxvZGFzaC5mbGF0dGVuID0gZmxhdHRlbjtcbiAgbG9kYXNoLmZsYXR0ZW5EZWVwID0gZmxhdHRlbkRlZXA7XG4gIGxvZGFzaC5pdGVyYXRlZSA9IGl0ZXJhdGVlO1xuICBsb2Rhc2gua2V5cyA9IGtleXM7XG4gIGxvZGFzaC5tYXAgPSBtYXA7XG4gIGxvZGFzaC5tYXRjaGVzID0gbWF0Y2hlcztcbiAgbG9kYXNoLm1peGluID0gbWl4aW47XG4gIGxvZGFzaC5uZWdhdGUgPSBuZWdhdGU7XG4gIGxvZGFzaC5vbmNlID0gb25jZTtcbiAgbG9kYXNoLnBpY2sgPSBwaWNrO1xuICBsb2Rhc2guc2xpY2UgPSBzbGljZTtcbiAgbG9kYXNoLnNvcnRCeSA9IHNvcnRCeTtcbiAgbG9kYXNoLnRhcCA9IHRhcDtcbiAgbG9kYXNoLnRocnUgPSB0aHJ1O1xuICBsb2Rhc2gudG9BcnJheSA9IHRvQXJyYXk7XG4gIGxvZGFzaC52YWx1ZXMgPSB2YWx1ZXM7XG5cbiAgLy8gQWRkIGFsaWFzZXMuXG4gIGxvZGFzaC5leHRlbmQgPSBhc3NpZ25JbjtcblxuICAvLyBBZGQgbWV0aG9kcyB0byBgbG9kYXNoLnByb3RvdHlwZWAuXG4gIG1peGluKGxvZGFzaCwgbG9kYXNoKTtcblxuICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbiAgLy8gQWRkIG1ldGhvZHMgdGhhdCByZXR1cm4gdW53cmFwcGVkIHZhbHVlcyBpbiBjaGFpbiBzZXF1ZW5jZXMuXG4gIGxvZGFzaC5jbG9uZSA9IGNsb25lO1xuICBsb2Rhc2guZXNjYXBlID0gZXNjYXBlO1xuICBsb2Rhc2guZXZlcnkgPSBldmVyeTtcbiAgbG9kYXNoLmZpbmQgPSBmaW5kO1xuICBsb2Rhc2guZm9yRWFjaCA9IGZvckVhY2g7XG4gIGxvZGFzaC5oYXMgPSBoYXM7XG4gIGxvZGFzaC5oZWFkID0gaGVhZDtcbiAgbG9kYXNoLmlkZW50aXR5ID0gaWRlbnRpdHk7XG4gIGxvZGFzaC5pbmRleE9mID0gaW5kZXhPZjtcbiAgbG9kYXNoLmlzQXJndW1lbnRzID0gaXNBcmd1bWVudHM7XG4gIGxvZGFzaC5pc0FycmF5ID0gaXNBcnJheTtcbiAgbG9kYXNoLmlzQm9vbGVhbiA9IGlzQm9vbGVhbjtcbiAgbG9kYXNoLmlzRGF0ZSA9IGlzRGF0ZTtcbiAgbG9kYXNoLmlzRW1wdHkgPSBpc0VtcHR5O1xuICBsb2Rhc2guaXNFcXVhbCA9IGlzRXF1YWw7XG4gIGxvZGFzaC5pc0Zpbml0ZSA9IGlzRmluaXRlO1xuICBsb2Rhc2guaXNGdW5jdGlvbiA9IGlzRnVuY3Rpb247XG4gIGxvZGFzaC5pc05hTiA9IGlzTmFOO1xuICBsb2Rhc2guaXNOdWxsID0gaXNOdWxsO1xuICBsb2Rhc2guaXNOdW1iZXIgPSBpc051bWJlcjtcbiAgbG9kYXNoLmlzT2JqZWN0ID0gaXNPYmplY3Q7XG4gIGxvZGFzaC5pc1JlZ0V4cCA9IGlzUmVnRXhwO1xuICBsb2Rhc2guaXNTdHJpbmcgPSBpc1N0cmluZztcbiAgbG9kYXNoLmlzVW5kZWZpbmVkID0gaXNVbmRlZmluZWQ7XG4gIGxvZGFzaC5sYXN0ID0gbGFzdDtcbiAgbG9kYXNoLm1heCA9IG1heDtcbiAgbG9kYXNoLm1pbiA9IG1pbjtcbiAgbG9kYXNoLm5vQ29uZmxpY3QgPSBub0NvbmZsaWN0O1xuICBsb2Rhc2gubm9vcCA9IG5vb3A7XG4gIGxvZGFzaC5yZWR1Y2UgPSByZWR1Y2U7XG4gIGxvZGFzaC5yZXN1bHQgPSByZXN1bHQ7XG4gIGxvZGFzaC5zaXplID0gc2l6ZTtcbiAgbG9kYXNoLnNvbWUgPSBzb21lO1xuICBsb2Rhc2gudW5pcXVlSWQgPSB1bmlxdWVJZDtcblxuICAvLyBBZGQgYWxpYXNlcy5cbiAgbG9kYXNoLmVhY2ggPSBmb3JFYWNoO1xuICBsb2Rhc2guZmlyc3QgPSBoZWFkO1xuXG4gIG1peGluKGxvZGFzaCwgKGZ1bmN0aW9uKCkge1xuICAgIHZhciBzb3VyY2UgPSB7fTtcbiAgICBiYXNlRm9yT3duKGxvZGFzaCwgZnVuY3Rpb24oZnVuYywgbWV0aG9kTmFtZSkge1xuICAgICAgaWYgKCFoYXNPd25Qcm9wZXJ0eS5jYWxsKGxvZGFzaC5wcm90b3R5cGUsIG1ldGhvZE5hbWUpKSB7XG4gICAgICAgIHNvdXJjZVttZXRob2ROYW1lXSA9IGZ1bmM7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHNvdXJjZTtcbiAgfSgpKSwgeyAnY2hhaW4nOiBmYWxzZSB9KTtcblxuICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbiAgLyoqXG4gICAqIFRoZSBzZW1hbnRpYyB2ZXJzaW9uIG51bWJlci5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyT2YgX1xuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKi9cbiAgbG9kYXNoLlZFUlNJT04gPSBWRVJTSU9OO1xuXG4gIC8vIEFkZCBgQXJyYXlgIG1ldGhvZHMgdG8gYGxvZGFzaC5wcm90b3R5cGVgLlxuICBiYXNlRWFjaChbJ3BvcCcsICdqb2luJywgJ3JlcGxhY2UnLCAncmV2ZXJzZScsICdzcGxpdCcsICdwdXNoJywgJ3NoaWZ0JywgJ3NvcnQnLCAnc3BsaWNlJywgJ3Vuc2hpZnQnXSwgZnVuY3Rpb24obWV0aG9kTmFtZSkge1xuICAgIHZhciBmdW5jID0gKC9eKD86cmVwbGFjZXxzcGxpdCkkLy50ZXN0KG1ldGhvZE5hbWUpID8gU3RyaW5nLnByb3RvdHlwZSA6IGFycmF5UHJvdG8pW21ldGhvZE5hbWVdLFxuICAgICAgICBjaGFpbk5hbWUgPSAvXig/OnB1c2h8c29ydHx1bnNoaWZ0KSQvLnRlc3QobWV0aG9kTmFtZSkgPyAndGFwJyA6ICd0aHJ1JyxcbiAgICAgICAgcmV0VW53cmFwcGVkID0gL14oPzpwb3B8am9pbnxyZXBsYWNlfHNoaWZ0KSQvLnRlc3QobWV0aG9kTmFtZSk7XG5cbiAgICBsb2Rhc2gucHJvdG90eXBlW21ldGhvZE5hbWVdID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgYXJncyA9IGFyZ3VtZW50cztcbiAgICAgIGlmIChyZXRVbndyYXBwZWQgJiYgIXRoaXMuX19jaGFpbl9fKSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IHRoaXMudmFsdWUoKTtcbiAgICAgICAgcmV0dXJuIGZ1bmMuYXBwbHkoaXNBcnJheSh2YWx1ZSkgPyB2YWx1ZSA6IFtdLCBhcmdzKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzW2NoYWluTmFtZV0oZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmMuYXBwbHkoaXNBcnJheSh2YWx1ZSkgPyB2YWx1ZSA6IFtdLCBhcmdzKTtcbiAgICAgIH0pO1xuICAgIH07XG4gIH0pO1xuXG4gIC8vIEFkZCBjaGFpbiBzZXF1ZW5jZSBtZXRob2RzIHRvIHRoZSBgbG9kYXNoYCB3cmFwcGVyLlxuICBsb2Rhc2gucHJvdG90eXBlLnRvSlNPTiA9IGxvZGFzaC5wcm90b3R5cGUudmFsdWVPZiA9IGxvZGFzaC5wcm90b3R5cGUudmFsdWUgPSB3cmFwcGVyVmFsdWU7XG5cbiAgLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbiAgLy8gU29tZSBBTUQgYnVpbGQgb3B0aW1pemVycywgbGlrZSByLmpzLCBjaGVjayBmb3IgY29uZGl0aW9uIHBhdHRlcm5zIGxpa2U6XG4gIGlmICh0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGRlZmluZS5hbWQgPT0gJ29iamVjdCcgJiYgZGVmaW5lLmFtZCkge1xuICAgIC8vIEV4cG9zZSBMb2Rhc2ggb24gdGhlIGdsb2JhbCBvYmplY3QgdG8gcHJldmVudCBlcnJvcnMgd2hlbiBMb2Rhc2ggaXNcbiAgICAvLyBsb2FkZWQgYnkgYSBzY3JpcHQgdGFnIGluIHRoZSBwcmVzZW5jZSBvZiBhbiBBTUQgbG9hZGVyLlxuICAgIC8vIFNlZSBodHRwOi8vcmVxdWlyZWpzLm9yZy9kb2NzL2Vycm9ycy5odG1sI21pc21hdGNoIGZvciBtb3JlIGRldGFpbHMuXG4gICAgLy8gVXNlIGBfLm5vQ29uZmxpY3RgIHRvIHJlbW92ZSBMb2Rhc2ggZnJvbSB0aGUgZ2xvYmFsIG9iamVjdC5cbiAgICByb290Ll8gPSBsb2Rhc2g7XG5cbiAgICAvLyBEZWZpbmUgYXMgYW4gYW5vbnltb3VzIG1vZHVsZSBzbywgdGhyb3VnaCBwYXRoIG1hcHBpbmcsIGl0IGNhbiBiZVxuICAgIC8vIHJlZmVyZW5jZWQgYXMgdGhlIFwidW5kZXJzY29yZVwiIG1vZHVsZS5cbiAgICBkZWZpbmUoZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gbG9kYXNoO1xuICAgIH0pO1xuICB9XG4gIC8vIENoZWNrIGZvciBgZXhwb3J0c2AgYWZ0ZXIgYGRlZmluZWAgaW4gY2FzZSBhIGJ1aWxkIG9wdGltaXplciBhZGRzIGl0LlxuICBlbHNlIGlmIChmcmVlTW9kdWxlKSB7XG4gICAgLy8gRXhwb3J0IGZvciBOb2RlLmpzLlxuICAgIChmcmVlTW9kdWxlLmV4cG9ydHMgPSBsb2Rhc2gpLl8gPSBsb2Rhc2g7XG4gICAgLy8gRXhwb3J0IGZvciBDb21tb25KUyBzdXBwb3J0LlxuICAgIGZyZWVFeHBvcnRzLl8gPSBsb2Rhc2g7XG4gIH1cbiAgZWxzZSB7XG4gICAgLy8gRXhwb3J0IHRvIHRoZSBnbG9iYWwgb2JqZWN0LlxuICAgIHJvb3QuXyA9IGxvZGFzaDtcbiAgfVxufS5jYWxsKHRoaXMpKTtcbiIsIm1vZHVsZS5leHBvcnRzID0gTXVsdGlTdHJlYW1cblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxudmFyIHN0cmVhbSA9IHJlcXVpcmUoJ3JlYWRhYmxlLXN0cmVhbScpXG5cbmluaGVyaXRzKE11bHRpU3RyZWFtLCBzdHJlYW0uUmVhZGFibGUpXG5cbmZ1bmN0aW9uIE11bHRpU3RyZWFtIChzdHJlYW1zLCBvcHRzKSB7XG4gIHZhciBzZWxmID0gdGhpc1xuICBpZiAoIShzZWxmIGluc3RhbmNlb2YgTXVsdGlTdHJlYW0pKSByZXR1cm4gbmV3IE11bHRpU3RyZWFtKHN0cmVhbXMsIG9wdHMpXG4gIHN0cmVhbS5SZWFkYWJsZS5jYWxsKHNlbGYsIG9wdHMpXG5cbiAgc2VsZi5kZXN0cm95ZWQgPSBmYWxzZVxuXG4gIHNlbGYuX2RyYWluZWQgPSBmYWxzZVxuICBzZWxmLl9mb3J3YXJkaW5nID0gZmFsc2VcbiAgc2VsZi5fY3VycmVudCA9IG51bGxcbiAgc2VsZi5fdG9TdHJlYW1zMiA9IChvcHRzICYmIG9wdHMub2JqZWN0TW9kZSkgPyB0b1N0cmVhbXMyT2JqIDogdG9TdHJlYW1zMkJ1ZlxuXG4gIGlmICh0eXBlb2Ygc3RyZWFtcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHNlbGYuX3F1ZXVlID0gc3RyZWFtc1xuICB9IGVsc2Uge1xuICAgIHNlbGYuX3F1ZXVlID0gc3RyZWFtcy5tYXAoc2VsZi5fdG9TdHJlYW1zMilcbiAgICBzZWxmLl9xdWV1ZS5mb3JFYWNoKGZ1bmN0aW9uIChzdHJlYW0pIHtcbiAgICAgIGlmICh0eXBlb2Ygc3RyZWFtICE9PSAnZnVuY3Rpb24nKSBzZWxmLl9hdHRhY2hFcnJvckxpc3RlbmVyKHN0cmVhbSlcbiAgICB9KVxuICB9XG5cbiAgc2VsZi5fbmV4dCgpXG59XG5cbk11bHRpU3RyZWFtLm9iaiA9IGZ1bmN0aW9uIChzdHJlYW1zKSB7XG4gIHJldHVybiBuZXcgTXVsdGlTdHJlYW0oc3RyZWFtcywgeyBvYmplY3RNb2RlOiB0cnVlLCBoaWdoV2F0ZXJNYXJrOiAxNiB9KVxufVxuXG5NdWx0aVN0cmVhbS5wcm90b3R5cGUuX3JlYWQgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuX2RyYWluZWQgPSB0cnVlXG4gIHRoaXMuX2ZvcndhcmQoKVxufVxuXG5NdWx0aVN0cmVhbS5wcm90b3R5cGUuX2ZvcndhcmQgPSBmdW5jdGlvbiAoKSB7XG4gIGlmICh0aGlzLl9mb3J3YXJkaW5nIHx8ICF0aGlzLl9kcmFpbmVkIHx8ICF0aGlzLl9jdXJyZW50KSByZXR1cm5cbiAgdGhpcy5fZm9yd2FyZGluZyA9IHRydWVcblxuICB2YXIgY2h1bmtcbiAgd2hpbGUgKChjaHVuayA9IHRoaXMuX2N1cnJlbnQucmVhZCgpKSAhPT0gbnVsbCkge1xuICAgIHRoaXMuX2RyYWluZWQgPSB0aGlzLnB1c2goY2h1bmspXG4gIH1cblxuICB0aGlzLl9mb3J3YXJkaW5nID0gZmFsc2Vcbn1cblxuTXVsdGlTdHJlYW0ucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbiAoZXJyKSB7XG4gIGlmICh0aGlzLmRlc3Ryb3llZCkgcmV0dXJuXG4gIHRoaXMuZGVzdHJveWVkID0gdHJ1ZVxuXG4gIGlmICh0aGlzLl9jdXJyZW50ICYmIHRoaXMuX2N1cnJlbnQuZGVzdHJveSkgdGhpcy5fY3VycmVudC5kZXN0cm95KClcbiAgaWYgKHR5cGVvZiB0aGlzLl9xdWV1ZSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRoaXMuX3F1ZXVlLmZvckVhY2goZnVuY3Rpb24gKHN0cmVhbSkge1xuICAgICAgaWYgKHN0cmVhbS5kZXN0cm95KSBzdHJlYW0uZGVzdHJveSgpXG4gICAgfSlcbiAgfVxuXG4gIGlmIChlcnIpIHRoaXMuZW1pdCgnZXJyb3InLCBlcnIpXG4gIHRoaXMuZW1pdCgnY2xvc2UnKVxufVxuXG5NdWx0aVN0cmVhbS5wcm90b3R5cGUuX25leHQgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBzZWxmID0gdGhpc1xuICBzZWxmLl9jdXJyZW50ID0gbnVsbFxuXG4gIGlmICh0eXBlb2Ygc2VsZi5fcXVldWUgPT09ICdmdW5jdGlvbicpIHtcbiAgICBzZWxmLl9xdWV1ZShmdW5jdGlvbiAoZXJyLCBzdHJlYW0pIHtcbiAgICAgIGlmIChlcnIpIHJldHVybiBzZWxmLmRlc3Ryb3koZXJyKVxuICAgICAgc3RyZWFtID0gc2VsZi5fdG9TdHJlYW1zMihzdHJlYW0pXG4gICAgICBzZWxmLl9hdHRhY2hFcnJvckxpc3RlbmVyKHN0cmVhbSlcbiAgICAgIHNlbGYuX2dvdE5leHRTdHJlYW0oc3RyZWFtKVxuICAgIH0pXG4gIH0gZWxzZSB7XG4gICAgdmFyIHN0cmVhbSA9IHNlbGYuX3F1ZXVlLnNoaWZ0KClcbiAgICBpZiAodHlwZW9mIHN0cmVhbSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgc3RyZWFtID0gc2VsZi5fdG9TdHJlYW1zMihzdHJlYW0oKSlcbiAgICAgIHNlbGYuX2F0dGFjaEVycm9yTGlzdGVuZXIoc3RyZWFtKVxuICAgIH1cbiAgICBzZWxmLl9nb3ROZXh0U3RyZWFtKHN0cmVhbSlcbiAgfVxufVxuXG5NdWx0aVN0cmVhbS5wcm90b3R5cGUuX2dvdE5leHRTdHJlYW0gPSBmdW5jdGlvbiAoc3RyZWFtKSB7XG4gIHZhciBzZWxmID0gdGhpc1xuXG4gIGlmICghc3RyZWFtKSB7XG4gICAgc2VsZi5wdXNoKG51bGwpXG4gICAgc2VsZi5kZXN0cm95KClcbiAgICByZXR1cm5cbiAgfVxuXG4gIHNlbGYuX2N1cnJlbnQgPSBzdHJlYW1cbiAgc2VsZi5fZm9yd2FyZCgpXG5cbiAgc3RyZWFtLm9uKCdyZWFkYWJsZScsIG9uUmVhZGFibGUpXG4gIHN0cmVhbS5vbmNlKCdlbmQnLCBvbkVuZClcbiAgc3RyZWFtLm9uY2UoJ2Nsb3NlJywgb25DbG9zZSlcblxuICBmdW5jdGlvbiBvblJlYWRhYmxlICgpIHtcbiAgICBzZWxmLl9mb3J3YXJkKClcbiAgfVxuXG4gIGZ1bmN0aW9uIG9uQ2xvc2UgKCkge1xuICAgIGlmICghc3RyZWFtLl9yZWFkYWJsZVN0YXRlLmVuZGVkKSB7XG4gICAgICBzZWxmLmRlc3Ryb3koKVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIG9uRW5kICgpIHtcbiAgICBzZWxmLl9jdXJyZW50ID0gbnVsbFxuICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcigncmVhZGFibGUnLCBvblJlYWRhYmxlKVxuICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignZW5kJywgb25FbmQpXG4gICAgc3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdjbG9zZScsIG9uQ2xvc2UpXG4gICAgc2VsZi5fbmV4dCgpXG4gIH1cbn1cblxuTXVsdGlTdHJlYW0ucHJvdG90eXBlLl9hdHRhY2hFcnJvckxpc3RlbmVyID0gZnVuY3Rpb24gKHN0cmVhbSkge1xuICB2YXIgc2VsZiA9IHRoaXNcbiAgaWYgKCFzdHJlYW0pIHJldHVyblxuXG4gIHN0cmVhbS5vbmNlKCdlcnJvcicsIG9uRXJyb3IpXG5cbiAgZnVuY3Rpb24gb25FcnJvciAoZXJyKSB7XG4gICAgc3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdlcnJvcicsIG9uRXJyb3IpXG4gICAgc2VsZi5kZXN0cm95KGVycilcbiAgfVxufVxuXG5mdW5jdGlvbiB0b1N0cmVhbXMyT2JqIChzKSB7XG4gIHJldHVybiB0b1N0cmVhbXMyKHMsIHtvYmplY3RNb2RlOiB0cnVlLCBoaWdoV2F0ZXJNYXJrOiAxNn0pXG59XG5cbmZ1bmN0aW9uIHRvU3RyZWFtczJCdWYgKHMpIHtcbiAgcmV0dXJuIHRvU3RyZWFtczIocylcbn1cblxuZnVuY3Rpb24gdG9TdHJlYW1zMiAocywgb3B0cykge1xuICBpZiAoIXMgfHwgdHlwZW9mIHMgPT09ICdmdW5jdGlvbicgfHwgcy5fcmVhZGFibGVTdGF0ZSkgcmV0dXJuIHNcblxuICB2YXIgd3JhcCA9IG5ldyBzdHJlYW0uUmVhZGFibGUob3B0cykud3JhcChzKVxuICBpZiAocy5kZXN0cm95KSB7XG4gICAgd3JhcC5kZXN0cm95ID0gcy5kZXN0cm95LmJpbmQocylcbiAgfVxuICByZXR1cm4gd3JhcFxufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAoIXByb2Nlc3MudmVyc2lvbiB8fFxuICAgIHByb2Nlc3MudmVyc2lvbi5pbmRleE9mKCd2MC4nKSA9PT0gMCB8fFxuICAgIHByb2Nlc3MudmVyc2lvbi5pbmRleE9mKCd2MS4nKSA9PT0gMCAmJiBwcm9jZXNzLnZlcnNpb24uaW5kZXhPZigndjEuOC4nKSAhPT0gMCkge1xuICBtb2R1bGUuZXhwb3J0cyA9IHsgbmV4dFRpY2s6IG5leHRUaWNrIH07XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHByb2Nlc3Ncbn1cblxuZnVuY3Rpb24gbmV4dFRpY2soZm4sIGFyZzEsIGFyZzIsIGFyZzMpIHtcbiAgaWYgKHR5cGVvZiBmbiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1wiY2FsbGJhY2tcIiBhcmd1bWVudCBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcbiAgfVxuICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgdmFyIGFyZ3MsIGk7XG4gIHN3aXRjaCAobGVuKSB7XG4gIGNhc2UgMDpcbiAgY2FzZSAxOlxuICAgIHJldHVybiBwcm9jZXNzLm5leHRUaWNrKGZuKTtcbiAgY2FzZSAyOlxuICAgIHJldHVybiBwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uIGFmdGVyVGlja09uZSgpIHtcbiAgICAgIGZuLmNhbGwobnVsbCwgYXJnMSk7XG4gICAgfSk7XG4gIGNhc2UgMzpcbiAgICByZXR1cm4gcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbiBhZnRlclRpY2tUd28oKSB7XG4gICAgICBmbi5jYWxsKG51bGwsIGFyZzEsIGFyZzIpO1xuICAgIH0pO1xuICBjYXNlIDQ6XG4gICAgcmV0dXJuIHByb2Nlc3MubmV4dFRpY2soZnVuY3Rpb24gYWZ0ZXJUaWNrVGhyZWUoKSB7XG4gICAgICBmbi5jYWxsKG51bGwsIGFyZzEsIGFyZzIsIGFyZzMpO1xuICAgIH0pO1xuICBkZWZhdWx0OlxuICAgIGFyZ3MgPSBuZXcgQXJyYXkobGVuIC0gMSk7XG4gICAgaSA9IDA7XG4gICAgd2hpbGUgKGkgPCBhcmdzLmxlbmd0aCkge1xuICAgICAgYXJnc1tpKytdID0gYXJndW1lbnRzW2ldO1xuICAgIH1cbiAgICByZXR1cm4gcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbiBhZnRlclRpY2soKSB7XG4gICAgICBmbi5hcHBseShudWxsLCBhcmdzKTtcbiAgICB9KTtcbiAgfVxufVxuXG4iLCIvLyBzaGltIGZvciB1c2luZyBwcm9jZXNzIGluIGJyb3dzZXJcbnZhciBwcm9jZXNzID0gbW9kdWxlLmV4cG9ydHMgPSB7fTtcblxuLy8gY2FjaGVkIGZyb20gd2hhdGV2ZXIgZ2xvYmFsIGlzIHByZXNlbnQgc28gdGhhdCB0ZXN0IHJ1bm5lcnMgdGhhdCBzdHViIGl0XG4vLyBkb24ndCBicmVhayB0aGluZ3MuICBCdXQgd2UgbmVlZCB0byB3cmFwIGl0IGluIGEgdHJ5IGNhdGNoIGluIGNhc2UgaXQgaXNcbi8vIHdyYXBwZWQgaW4gc3RyaWN0IG1vZGUgY29kZSB3aGljaCBkb2Vzbid0IGRlZmluZSBhbnkgZ2xvYmFscy4gIEl0J3MgaW5zaWRlIGFcbi8vIGZ1bmN0aW9uIGJlY2F1c2UgdHJ5L2NhdGNoZXMgZGVvcHRpbWl6ZSBpbiBjZXJ0YWluIGVuZ2luZXMuXG5cbnZhciBjYWNoZWRTZXRUaW1lb3V0O1xudmFyIGNhY2hlZENsZWFyVGltZW91dDtcblxuZnVuY3Rpb24gZGVmYXVsdFNldFRpbW91dCgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3NldFRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbmZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQgKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG4oZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc2V0VGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2YgY2xlYXJUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgIH1cbn0gKCkpXG5mdW5jdGlvbiBydW5UaW1lb3V0KGZ1bikge1xuICAgIGlmIChjYWNoZWRTZXRUaW1lb3V0ID09PSBzZXRUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICAvLyBpZiBzZXRUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkU2V0VGltZW91dCA9PT0gZGVmYXVsdFNldFRpbW91dCB8fCAhY2FjaGVkU2V0VGltZW91dCkgJiYgc2V0VGltZW91dCkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dChmdW4sIDApO1xuICAgIH0gY2F0Y2goZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwobnVsbCwgZnVuLCAwKTtcbiAgICAgICAgfSBjYXRjaChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yXG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKHRoaXMsIGZ1biwgMCk7XG4gICAgICAgIH1cbiAgICB9XG5cblxufVxuZnVuY3Rpb24gcnVuQ2xlYXJUaW1lb3V0KG1hcmtlcikge1xuICAgIGlmIChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGNsZWFyVGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICAvLyBpZiBjbGVhclRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGRlZmF1bHRDbGVhclRpbWVvdXQgfHwgIWNhY2hlZENsZWFyVGltZW91dCkgJiYgY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCAgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbChudWxsLCBtYXJrZXIpO1xuICAgICAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yLlxuICAgICAgICAgICAgLy8gU29tZSB2ZXJzaW9ucyBvZiBJLkUuIGhhdmUgZGlmZmVyZW50IHJ1bGVzIGZvciBjbGVhclRpbWVvdXQgdnMgc2V0VGltZW91dFxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKHRoaXMsIG1hcmtlcik7XG4gICAgICAgIH1cbiAgICB9XG5cblxuXG59XG52YXIgcXVldWUgPSBbXTtcbnZhciBkcmFpbmluZyA9IGZhbHNlO1xudmFyIGN1cnJlbnRRdWV1ZTtcbnZhciBxdWV1ZUluZGV4ID0gLTE7XG5cbmZ1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpIHtcbiAgICBpZiAoIWRyYWluaW5nIHx8ICFjdXJyZW50UXVldWUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIGlmIChjdXJyZW50UXVldWUubGVuZ3RoKSB7XG4gICAgICAgIHF1ZXVlID0gY3VycmVudFF1ZXVlLmNvbmNhdChxdWV1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgIH1cbiAgICBpZiAocXVldWUubGVuZ3RoKSB7XG4gICAgICAgIGRyYWluUXVldWUoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGRyYWluUXVldWUoKSB7XG4gICAgaWYgKGRyYWluaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIHRpbWVvdXQgPSBydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7XG4gICAgZHJhaW5pbmcgPSB0cnVlO1xuXG4gICAgdmFyIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB3aGlsZShsZW4pIHtcbiAgICAgICAgY3VycmVudFF1ZXVlID0gcXVldWU7XG4gICAgICAgIHF1ZXVlID0gW107XG4gICAgICAgIHdoaWxlICgrK3F1ZXVlSW5kZXggPCBsZW4pIHtcbiAgICAgICAgICAgIGlmIChjdXJyZW50UXVldWUpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50UXVldWVbcXVldWVJbmRleF0ucnVuKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgICAgICBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgfVxuICAgIGN1cnJlbnRRdWV1ZSA9IG51bGw7XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBydW5DbGVhclRpbWVvdXQodGltZW91dCk7XG59XG5cbnByb2Nlc3MubmV4dFRpY2sgPSBmdW5jdGlvbiAoZnVuKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYXJnc1tpIC0gMV0gPSBhcmd1bWVudHNbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcXVldWUucHVzaChuZXcgSXRlbShmdW4sIGFyZ3MpKTtcbiAgICBpZiAocXVldWUubGVuZ3RoID09PSAxICYmICFkcmFpbmluZykge1xuICAgICAgICBydW5UaW1lb3V0KGRyYWluUXVldWUpO1xuICAgIH1cbn07XG5cbi8vIHY4IGxpa2VzIHByZWRpY3RpYmxlIG9iamVjdHNcbmZ1bmN0aW9uIEl0ZW0oZnVuLCBhcnJheSkge1xuICAgIHRoaXMuZnVuID0gZnVuO1xuICAgIHRoaXMuYXJyYXkgPSBhcnJheTtcbn1cbkl0ZW0ucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmZ1bi5hcHBseShudWxsLCB0aGlzLmFycmF5KTtcbn07XG5wcm9jZXNzLnRpdGxlID0gJ2Jyb3dzZXInO1xucHJvY2Vzcy5icm93c2VyID0gdHJ1ZTtcbnByb2Nlc3MuZW52ID0ge307XG5wcm9jZXNzLmFyZ3YgPSBbXTtcbnByb2Nlc3MudmVyc2lvbiA9ICcnOyAvLyBlbXB0eSBzdHJpbmcgdG8gYXZvaWQgcmVnZXhwIGlzc3Vlc1xucHJvY2Vzcy52ZXJzaW9ucyA9IHt9O1xuXG5mdW5jdGlvbiBub29wKCkge31cblxucHJvY2Vzcy5vbiA9IG5vb3A7XG5wcm9jZXNzLmFkZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3Mub25jZSA9IG5vb3A7XG5wcm9jZXNzLm9mZiA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUxpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlQWxsTGlzdGVuZXJzID0gbm9vcDtcbnByb2Nlc3MuZW1pdCA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRPbmNlTGlzdGVuZXIgPSBub29wO1xuXG5wcm9jZXNzLmxpc3RlbmVycyA9IGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiBbXSB9XG5cbnByb2Nlc3MuYmluZGluZyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcblxucHJvY2Vzcy5jd2QgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAnLycgfTtcbnByb2Nlc3MuY2hkaXIgPSBmdW5jdGlvbiAoZGlyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5wcm9jZXNzLnVtYXNrID0gZnVuY3Rpb24oKSB7IHJldHVybiAwOyB9O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYXNhcCA9IHJlcXVpcmUoJ2FzYXAvcmF3Jyk7XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG4vLyBTdGF0ZXM6XG4vL1xuLy8gMCAtIHBlbmRpbmdcbi8vIDEgLSBmdWxmaWxsZWQgd2l0aCBfdmFsdWVcbi8vIDIgLSByZWplY3RlZCB3aXRoIF92YWx1ZVxuLy8gMyAtIGFkb3B0ZWQgdGhlIHN0YXRlIG9mIGFub3RoZXIgcHJvbWlzZSwgX3ZhbHVlXG4vL1xuLy8gb25jZSB0aGUgc3RhdGUgaXMgbm8gbG9uZ2VyIHBlbmRpbmcgKDApIGl0IGlzIGltbXV0YWJsZVxuXG4vLyBBbGwgYF9gIHByZWZpeGVkIHByb3BlcnRpZXMgd2lsbCBiZSByZWR1Y2VkIHRvIGBfe3JhbmRvbSBudW1iZXJ9YFxuLy8gYXQgYnVpbGQgdGltZSB0byBvYmZ1c2NhdGUgdGhlbSBhbmQgZGlzY291cmFnZSB0aGVpciB1c2UuXG4vLyBXZSBkb24ndCB1c2Ugc3ltYm9scyBvciBPYmplY3QuZGVmaW5lUHJvcGVydHkgdG8gZnVsbHkgaGlkZSB0aGVtXG4vLyBiZWNhdXNlIHRoZSBwZXJmb3JtYW5jZSBpc24ndCBnb29kIGVub3VnaC5cblxuXG4vLyB0byBhdm9pZCB1c2luZyB0cnkvY2F0Y2ggaW5zaWRlIGNyaXRpY2FsIGZ1bmN0aW9ucywgd2Vcbi8vIGV4dHJhY3QgdGhlbSB0byBoZXJlLlxudmFyIExBU1RfRVJST1IgPSBudWxsO1xudmFyIElTX0VSUk9SID0ge307XG5mdW5jdGlvbiBnZXRUaGVuKG9iaikge1xuICB0cnkge1xuICAgIHJldHVybiBvYmoudGhlbjtcbiAgfSBjYXRjaCAoZXgpIHtcbiAgICBMQVNUX0VSUk9SID0gZXg7XG4gICAgcmV0dXJuIElTX0VSUk9SO1xuICB9XG59XG5cbmZ1bmN0aW9uIHRyeUNhbGxPbmUoZm4sIGEpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZm4oYSk7XG4gIH0gY2F0Y2ggKGV4KSB7XG4gICAgTEFTVF9FUlJPUiA9IGV4O1xuICAgIHJldHVybiBJU19FUlJPUjtcbiAgfVxufVxuZnVuY3Rpb24gdHJ5Q2FsbFR3byhmbiwgYSwgYikge1xuICB0cnkge1xuICAgIGZuKGEsIGIpO1xuICB9IGNhdGNoIChleCkge1xuICAgIExBU1RfRVJST1IgPSBleDtcbiAgICByZXR1cm4gSVNfRVJST1I7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBQcm9taXNlO1xuXG5mdW5jdGlvbiBQcm9taXNlKGZuKSB7XG4gIGlmICh0eXBlb2YgdGhpcyAhPT0gJ29iamVjdCcpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdQcm9taXNlcyBtdXN0IGJlIGNvbnN0cnVjdGVkIHZpYSBuZXcnKTtcbiAgfVxuICBpZiAodHlwZW9mIGZuICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignUHJvbWlzZSBjb25zdHJ1Y3RvclxcJ3MgYXJndW1lbnQgaXMgbm90IGEgZnVuY3Rpb24nKTtcbiAgfVxuICB0aGlzLl80MCA9IDA7XG4gIHRoaXMuXzY1ID0gMDtcbiAgdGhpcy5fNTUgPSBudWxsO1xuICB0aGlzLl83MiA9IG51bGw7XG4gIGlmIChmbiA9PT0gbm9vcCkgcmV0dXJuO1xuICBkb1Jlc29sdmUoZm4sIHRoaXMpO1xufVxuUHJvbWlzZS5fMzcgPSBudWxsO1xuUHJvbWlzZS5fODcgPSBudWxsO1xuUHJvbWlzZS5fNjEgPSBub29wO1xuXG5Qcm9taXNlLnByb3RvdHlwZS50aGVuID0gZnVuY3Rpb24ob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpIHtcbiAgaWYgKHRoaXMuY29uc3RydWN0b3IgIT09IFByb21pc2UpIHtcbiAgICByZXR1cm4gc2FmZVRoZW4odGhpcywgb25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpO1xuICB9XG4gIHZhciByZXMgPSBuZXcgUHJvbWlzZShub29wKTtcbiAgaGFuZGxlKHRoaXMsIG5ldyBIYW5kbGVyKG9uRnVsZmlsbGVkLCBvblJlamVjdGVkLCByZXMpKTtcbiAgcmV0dXJuIHJlcztcbn07XG5cbmZ1bmN0aW9uIHNhZmVUaGVuKHNlbGYsIG9uRnVsZmlsbGVkLCBvblJlamVjdGVkKSB7XG4gIHJldHVybiBuZXcgc2VsZi5jb25zdHJ1Y3RvcihmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgdmFyIHJlcyA9IG5ldyBQcm9taXNlKG5vb3ApO1xuICAgIHJlcy50aGVuKHJlc29sdmUsIHJlamVjdCk7XG4gICAgaGFuZGxlKHNlbGYsIG5ldyBIYW5kbGVyKG9uRnVsZmlsbGVkLCBvblJlamVjdGVkLCByZXMpKTtcbiAgfSk7XG59XG5mdW5jdGlvbiBoYW5kbGUoc2VsZiwgZGVmZXJyZWQpIHtcbiAgd2hpbGUgKHNlbGYuXzY1ID09PSAzKSB7XG4gICAgc2VsZiA9IHNlbGYuXzU1O1xuICB9XG4gIGlmIChQcm9taXNlLl8zNykge1xuICAgIFByb21pc2UuXzM3KHNlbGYpO1xuICB9XG4gIGlmIChzZWxmLl82NSA9PT0gMCkge1xuICAgIGlmIChzZWxmLl80MCA9PT0gMCkge1xuICAgICAgc2VsZi5fNDAgPSAxO1xuICAgICAgc2VsZi5fNzIgPSBkZWZlcnJlZDtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKHNlbGYuXzQwID09PSAxKSB7XG4gICAgICBzZWxmLl80MCA9IDI7XG4gICAgICBzZWxmLl83MiA9IFtzZWxmLl83MiwgZGVmZXJyZWRdO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzZWxmLl83Mi5wdXNoKGRlZmVycmVkKTtcbiAgICByZXR1cm47XG4gIH1cbiAgaGFuZGxlUmVzb2x2ZWQoc2VsZiwgZGVmZXJyZWQpO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVSZXNvbHZlZChzZWxmLCBkZWZlcnJlZCkge1xuICBhc2FwKGZ1bmN0aW9uKCkge1xuICAgIHZhciBjYiA9IHNlbGYuXzY1ID09PSAxID8gZGVmZXJyZWQub25GdWxmaWxsZWQgOiBkZWZlcnJlZC5vblJlamVjdGVkO1xuICAgIGlmIChjYiA9PT0gbnVsbCkge1xuICAgICAgaWYgKHNlbGYuXzY1ID09PSAxKSB7XG4gICAgICAgIHJlc29sdmUoZGVmZXJyZWQucHJvbWlzZSwgc2VsZi5fNTUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVqZWN0KGRlZmVycmVkLnByb21pc2UsIHNlbGYuXzU1KTtcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIHJldCA9IHRyeUNhbGxPbmUoY2IsIHNlbGYuXzU1KTtcbiAgICBpZiAocmV0ID09PSBJU19FUlJPUikge1xuICAgICAgcmVqZWN0KGRlZmVycmVkLnByb21pc2UsIExBU1RfRVJST1IpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXNvbHZlKGRlZmVycmVkLnByb21pc2UsIHJldCk7XG4gICAgfVxuICB9KTtcbn1cbmZ1bmN0aW9uIHJlc29sdmUoc2VsZiwgbmV3VmFsdWUpIHtcbiAgLy8gUHJvbWlzZSBSZXNvbHV0aW9uIFByb2NlZHVyZTogaHR0cHM6Ly9naXRodWIuY29tL3Byb21pc2VzLWFwbHVzL3Byb21pc2VzLXNwZWMjdGhlLXByb21pc2UtcmVzb2x1dGlvbi1wcm9jZWR1cmVcbiAgaWYgKG5ld1ZhbHVlID09PSBzZWxmKSB7XG4gICAgcmV0dXJuIHJlamVjdChcbiAgICAgIHNlbGYsXG4gICAgICBuZXcgVHlwZUVycm9yKCdBIHByb21pc2UgY2Fubm90IGJlIHJlc29sdmVkIHdpdGggaXRzZWxmLicpXG4gICAgKTtcbiAgfVxuICBpZiAoXG4gICAgbmV3VmFsdWUgJiZcbiAgICAodHlwZW9mIG5ld1ZhbHVlID09PSAnb2JqZWN0JyB8fCB0eXBlb2YgbmV3VmFsdWUgPT09ICdmdW5jdGlvbicpXG4gICkge1xuICAgIHZhciB0aGVuID0gZ2V0VGhlbihuZXdWYWx1ZSk7XG4gICAgaWYgKHRoZW4gPT09IElTX0VSUk9SKSB7XG4gICAgICByZXR1cm4gcmVqZWN0KHNlbGYsIExBU1RfRVJST1IpO1xuICAgIH1cbiAgICBpZiAoXG4gICAgICB0aGVuID09PSBzZWxmLnRoZW4gJiZcbiAgICAgIG5ld1ZhbHVlIGluc3RhbmNlb2YgUHJvbWlzZVxuICAgICkge1xuICAgICAgc2VsZi5fNjUgPSAzO1xuICAgICAgc2VsZi5fNTUgPSBuZXdWYWx1ZTtcbiAgICAgIGZpbmFsZShzZWxmKTtcbiAgICAgIHJldHVybjtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiB0aGVuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBkb1Jlc29sdmUodGhlbi5iaW5kKG5ld1ZhbHVlKSwgc2VsZik7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9XG4gIHNlbGYuXzY1ID0gMTtcbiAgc2VsZi5fNTUgPSBuZXdWYWx1ZTtcbiAgZmluYWxlKHNlbGYpO1xufVxuXG5mdW5jdGlvbiByZWplY3Qoc2VsZiwgbmV3VmFsdWUpIHtcbiAgc2VsZi5fNjUgPSAyO1xuICBzZWxmLl81NSA9IG5ld1ZhbHVlO1xuICBpZiAoUHJvbWlzZS5fODcpIHtcbiAgICBQcm9taXNlLl84NyhzZWxmLCBuZXdWYWx1ZSk7XG4gIH1cbiAgZmluYWxlKHNlbGYpO1xufVxuZnVuY3Rpb24gZmluYWxlKHNlbGYpIHtcbiAgaWYgKHNlbGYuXzQwID09PSAxKSB7XG4gICAgaGFuZGxlKHNlbGYsIHNlbGYuXzcyKTtcbiAgICBzZWxmLl83MiA9IG51bGw7XG4gIH1cbiAgaWYgKHNlbGYuXzQwID09PSAyKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZWxmLl83Mi5sZW5ndGg7IGkrKykge1xuICAgICAgaGFuZGxlKHNlbGYsIHNlbGYuXzcyW2ldKTtcbiAgICB9XG4gICAgc2VsZi5fNzIgPSBudWxsO1xuICB9XG59XG5cbmZ1bmN0aW9uIEhhbmRsZXIob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQsIHByb21pc2Upe1xuICB0aGlzLm9uRnVsZmlsbGVkID0gdHlwZW9mIG9uRnVsZmlsbGVkID09PSAnZnVuY3Rpb24nID8gb25GdWxmaWxsZWQgOiBudWxsO1xuICB0aGlzLm9uUmVqZWN0ZWQgPSB0eXBlb2Ygb25SZWplY3RlZCA9PT0gJ2Z1bmN0aW9uJyA/IG9uUmVqZWN0ZWQgOiBudWxsO1xuICB0aGlzLnByb21pc2UgPSBwcm9taXNlO1xufVxuXG4vKipcbiAqIFRha2UgYSBwb3RlbnRpYWxseSBtaXNiZWhhdmluZyByZXNvbHZlciBmdW5jdGlvbiBhbmQgbWFrZSBzdXJlXG4gKiBvbkZ1bGZpbGxlZCBhbmQgb25SZWplY3RlZCBhcmUgb25seSBjYWxsZWQgb25jZS5cbiAqXG4gKiBNYWtlcyBubyBndWFyYW50ZWVzIGFib3V0IGFzeW5jaHJvbnkuXG4gKi9cbmZ1bmN0aW9uIGRvUmVzb2x2ZShmbiwgcHJvbWlzZSkge1xuICB2YXIgZG9uZSA9IGZhbHNlO1xuICB2YXIgcmVzID0gdHJ5Q2FsbFR3byhmbiwgZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgaWYgKGRvbmUpIHJldHVybjtcbiAgICBkb25lID0gdHJ1ZTtcbiAgICByZXNvbHZlKHByb21pc2UsIHZhbHVlKTtcbiAgfSwgZnVuY3Rpb24gKHJlYXNvbikge1xuICAgIGlmIChkb25lKSByZXR1cm47XG4gICAgZG9uZSA9IHRydWU7XG4gICAgcmVqZWN0KHByb21pc2UsIHJlYXNvbik7XG4gIH0pO1xuICBpZiAoIWRvbmUgJiYgcmVzID09PSBJU19FUlJPUikge1xuICAgIGRvbmUgPSB0cnVlO1xuICAgIHJlamVjdChwcm9taXNlLCBMQVNUX0VSUk9SKTtcbiAgfVxufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vL1RoaXMgZmlsZSBjb250YWlucyB0aGUgRVM2IGV4dGVuc2lvbnMgdG8gdGhlIGNvcmUgUHJvbWlzZXMvQSsgQVBJXG5cbnZhciBQcm9taXNlID0gcmVxdWlyZSgnLi9jb3JlLmpzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gUHJvbWlzZTtcblxuLyogU3RhdGljIEZ1bmN0aW9ucyAqL1xuXG52YXIgVFJVRSA9IHZhbHVlUHJvbWlzZSh0cnVlKTtcbnZhciBGQUxTRSA9IHZhbHVlUHJvbWlzZShmYWxzZSk7XG52YXIgTlVMTCA9IHZhbHVlUHJvbWlzZShudWxsKTtcbnZhciBVTkRFRklORUQgPSB2YWx1ZVByb21pc2UodW5kZWZpbmVkKTtcbnZhciBaRVJPID0gdmFsdWVQcm9taXNlKDApO1xudmFyIEVNUFRZU1RSSU5HID0gdmFsdWVQcm9taXNlKCcnKTtcblxuZnVuY3Rpb24gdmFsdWVQcm9taXNlKHZhbHVlKSB7XG4gIHZhciBwID0gbmV3IFByb21pc2UoUHJvbWlzZS5fNjEpO1xuICBwLl82NSA9IDE7XG4gIHAuXzU1ID0gdmFsdWU7XG4gIHJldHVybiBwO1xufVxuUHJvbWlzZS5yZXNvbHZlID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFByb21pc2UpIHJldHVybiB2YWx1ZTtcblxuICBpZiAodmFsdWUgPT09IG51bGwpIHJldHVybiBOVUxMO1xuICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkgcmV0dXJuIFVOREVGSU5FRDtcbiAgaWYgKHZhbHVlID09PSB0cnVlKSByZXR1cm4gVFJVRTtcbiAgaWYgKHZhbHVlID09PSBmYWxzZSkgcmV0dXJuIEZBTFNFO1xuICBpZiAodmFsdWUgPT09IDApIHJldHVybiBaRVJPO1xuICBpZiAodmFsdWUgPT09ICcnKSByZXR1cm4gRU1QVFlTVFJJTkc7XG5cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgfHwgdHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdHJ5IHtcbiAgICAgIHZhciB0aGVuID0gdmFsdWUudGhlbjtcbiAgICAgIGlmICh0eXBlb2YgdGhlbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UodGhlbi5iaW5kKHZhbHVlKSk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIHJlamVjdChleCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHZhbHVlUHJvbWlzZSh2YWx1ZSk7XG59O1xuXG5Qcm9taXNlLmFsbCA9IGZ1bmN0aW9uIChhcnIpIHtcbiAgdmFyIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcnIpO1xuXG4gIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgaWYgKGFyZ3MubGVuZ3RoID09PSAwKSByZXR1cm4gcmVzb2x2ZShbXSk7XG4gICAgdmFyIHJlbWFpbmluZyA9IGFyZ3MubGVuZ3RoO1xuICAgIGZ1bmN0aW9uIHJlcyhpLCB2YWwpIHtcbiAgICAgIGlmICh2YWwgJiYgKHR5cGVvZiB2YWwgPT09ICdvYmplY3QnIHx8IHR5cGVvZiB2YWwgPT09ICdmdW5jdGlvbicpKSB7XG4gICAgICAgIGlmICh2YWwgaW5zdGFuY2VvZiBQcm9taXNlICYmIHZhbC50aGVuID09PSBQcm9taXNlLnByb3RvdHlwZS50aGVuKSB7XG4gICAgICAgICAgd2hpbGUgKHZhbC5fNjUgPT09IDMpIHtcbiAgICAgICAgICAgIHZhbCA9IHZhbC5fNTU7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICh2YWwuXzY1ID09PSAxKSByZXR1cm4gcmVzKGksIHZhbC5fNTUpO1xuICAgICAgICAgIGlmICh2YWwuXzY1ID09PSAyKSByZWplY3QodmFsLl81NSk7XG4gICAgICAgICAgdmFsLnRoZW4oZnVuY3Rpb24gKHZhbCkge1xuICAgICAgICAgICAgcmVzKGksIHZhbCk7XG4gICAgICAgICAgfSwgcmVqZWN0KTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHRoZW4gPSB2YWwudGhlbjtcbiAgICAgICAgICBpZiAodHlwZW9mIHRoZW4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHZhciBwID0gbmV3IFByb21pc2UodGhlbi5iaW5kKHZhbCkpO1xuICAgICAgICAgICAgcC50aGVuKGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgICAgICAgICAgcmVzKGksIHZhbCk7XG4gICAgICAgICAgICB9LCByZWplY3QpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgYXJnc1tpXSA9IHZhbDtcbiAgICAgIGlmICgtLXJlbWFpbmluZyA9PT0gMCkge1xuICAgICAgICByZXNvbHZlKGFyZ3MpO1xuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiAgICAgIHJlcyhpLCBhcmdzW2ldKTtcbiAgICB9XG4gIH0pO1xufTtcblxuUHJvbWlzZS5yZWplY3QgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICByZWplY3QodmFsdWUpO1xuICB9KTtcbn07XG5cblByb21pc2UucmFjZSA9IGZ1bmN0aW9uICh2YWx1ZXMpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICB2YWx1ZXMuZm9yRWFjaChmdW5jdGlvbih2YWx1ZSl7XG4gICAgICBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4ocmVzb2x2ZSwgcmVqZWN0KTtcbiAgICB9KTtcbiAgfSk7XG59O1xuXG4vKiBQcm90b3R5cGUgTWV0aG9kcyAqL1xuXG5Qcm9taXNlLnByb3RvdHlwZVsnY2F0Y2gnXSA9IGZ1bmN0aW9uIChvblJlamVjdGVkKSB7XG4gIHJldHVybiB0aGlzLnRoZW4obnVsbCwgb25SZWplY3RlZCk7XG59O1xuIiwiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbid1c2Ugc3RyaWN0JztcblxuLy8gSWYgb2JqLmhhc093blByb3BlcnR5IGhhcyBiZWVuIG92ZXJyaWRkZW4sIHRoZW4gY2FsbGluZ1xuLy8gb2JqLmhhc093blByb3BlcnR5KHByb3ApIHdpbGwgYnJlYWsuXG4vLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9qb3llbnQvbm9kZS9pc3N1ZXMvMTcwN1xuZnVuY3Rpb24gaGFzT3duUHJvcGVydHkob2JqLCBwcm9wKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihxcywgc2VwLCBlcSwgb3B0aW9ucykge1xuICBzZXAgPSBzZXAgfHwgJyYnO1xuICBlcSA9IGVxIHx8ICc9JztcbiAgdmFyIG9iaiA9IHt9O1xuXG4gIGlmICh0eXBlb2YgcXMgIT09ICdzdHJpbmcnIHx8IHFzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBvYmo7XG4gIH1cblxuICB2YXIgcmVnZXhwID0gL1xcKy9nO1xuICBxcyA9IHFzLnNwbGl0KHNlcCk7XG5cbiAgdmFyIG1heEtleXMgPSAxMDAwO1xuICBpZiAob3B0aW9ucyAmJiB0eXBlb2Ygb3B0aW9ucy5tYXhLZXlzID09PSAnbnVtYmVyJykge1xuICAgIG1heEtleXMgPSBvcHRpb25zLm1heEtleXM7XG4gIH1cblxuICB2YXIgbGVuID0gcXMubGVuZ3RoO1xuICAvLyBtYXhLZXlzIDw9IDAgbWVhbnMgdGhhdCB3ZSBzaG91bGQgbm90IGxpbWl0IGtleXMgY291bnRcbiAgaWYgKG1heEtleXMgPiAwICYmIGxlbiA+IG1heEtleXMpIHtcbiAgICBsZW4gPSBtYXhLZXlzO1xuICB9XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47ICsraSkge1xuICAgIHZhciB4ID0gcXNbaV0ucmVwbGFjZShyZWdleHAsICclMjAnKSxcbiAgICAgICAgaWR4ID0geC5pbmRleE9mKGVxKSxcbiAgICAgICAga3N0ciwgdnN0ciwgaywgdjtcblxuICAgIGlmIChpZHggPj0gMCkge1xuICAgICAga3N0ciA9IHguc3Vic3RyKDAsIGlkeCk7XG4gICAgICB2c3RyID0geC5zdWJzdHIoaWR4ICsgMSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGtzdHIgPSB4O1xuICAgICAgdnN0ciA9ICcnO1xuICAgIH1cblxuICAgIGsgPSBkZWNvZGVVUklDb21wb25lbnQoa3N0cik7XG4gICAgdiA9IGRlY29kZVVSSUNvbXBvbmVudCh2c3RyKTtcblxuICAgIGlmICghaGFzT3duUHJvcGVydHkob2JqLCBrKSkge1xuICAgICAgb2JqW2tdID0gdjtcbiAgICB9IGVsc2UgaWYgKGlzQXJyYXkob2JqW2tdKSkge1xuICAgICAgb2JqW2tdLnB1c2godik7XG4gICAgfSBlbHNlIHtcbiAgICAgIG9ialtrXSA9IFtvYmpba10sIHZdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvYmo7XG59O1xuXG52YXIgaXNBcnJheSA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKHhzKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoeHMpID09PSAnW29iamVjdCBBcnJheV0nO1xufTtcbiIsIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBzdHJpbmdpZnlQcmltaXRpdmUgPSBmdW5jdGlvbih2KSB7XG4gIHN3aXRjaCAodHlwZW9mIHYpIHtcbiAgICBjYXNlICdzdHJpbmcnOlxuICAgICAgcmV0dXJuIHY7XG5cbiAgICBjYXNlICdib29sZWFuJzpcbiAgICAgIHJldHVybiB2ID8gJ3RydWUnIDogJ2ZhbHNlJztcblxuICAgIGNhc2UgJ251bWJlcic6XG4gICAgICByZXR1cm4gaXNGaW5pdGUodikgPyB2IDogJyc7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuICcnO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9iaiwgc2VwLCBlcSwgbmFtZSkge1xuICBzZXAgPSBzZXAgfHwgJyYnO1xuICBlcSA9IGVxIHx8ICc9JztcbiAgaWYgKG9iaiA9PT0gbnVsbCkge1xuICAgIG9iaiA9IHVuZGVmaW5lZDtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygb2JqID09PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiBtYXAob2JqZWN0S2V5cyhvYmopLCBmdW5jdGlvbihrKSB7XG4gICAgICB2YXIga3MgPSBlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKGspKSArIGVxO1xuICAgICAgaWYgKGlzQXJyYXkob2JqW2tdKSkge1xuICAgICAgICByZXR1cm4gbWFwKG9ialtrXSwgZnVuY3Rpb24odikge1xuICAgICAgICAgIHJldHVybiBrcyArIGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUodikpO1xuICAgICAgICB9KS5qb2luKHNlcCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4ga3MgKyBlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKG9ialtrXSkpO1xuICAgICAgfVxuICAgIH0pLmpvaW4oc2VwKTtcblxuICB9XG5cbiAgaWYgKCFuYW1lKSByZXR1cm4gJyc7XG4gIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKG5hbWUpKSArIGVxICtcbiAgICAgICAgIGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUob2JqKSk7XG59O1xuXG52YXIgaXNBcnJheSA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKHhzKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoeHMpID09PSAnW29iamVjdCBBcnJheV0nO1xufTtcblxuZnVuY3Rpb24gbWFwICh4cywgZikge1xuICBpZiAoeHMubWFwKSByZXR1cm4geHMubWFwKGYpO1xuICB2YXIgcmVzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgeHMubGVuZ3RoOyBpKyspIHtcbiAgICByZXMucHVzaChmKHhzW2ldLCBpKSk7XG4gIH1cbiAgcmV0dXJuIHJlcztcbn1cblxudmFyIG9iamVjdEtleXMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiAob2JqKSB7XG4gIHZhciByZXMgPSBbXTtcbiAgZm9yICh2YXIga2V5IGluIG9iaikge1xuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSByZXMucHVzaChrZXkpO1xuICB9XG4gIHJldHVybiByZXM7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLmRlY29kZSA9IGV4cG9ydHMucGFyc2UgPSByZXF1aXJlKCcuL2RlY29kZScpO1xuZXhwb3J0cy5lbmNvZGUgPSBleHBvcnRzLnN0cmluZ2lmeSA9IHJlcXVpcmUoJy4vZW5jb2RlJyk7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fZHVwbGV4LmpzJyk7XG4iLCIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuLy8gYSBkdXBsZXggc3RyZWFtIGlzIGp1c3QgYSBzdHJlYW0gdGhhdCBpcyBib3RoIHJlYWRhYmxlIGFuZCB3cml0YWJsZS5cbi8vIFNpbmNlIEpTIGRvZXNuJ3QgaGF2ZSBtdWx0aXBsZSBwcm90b3R5cGFsIGluaGVyaXRhbmNlLCB0aGlzIGNsYXNzXG4vLyBwcm90b3R5cGFsbHkgaW5oZXJpdHMgZnJvbSBSZWFkYWJsZSwgYW5kIHRoZW4gcGFyYXNpdGljYWxseSBmcm9tXG4vLyBXcml0YWJsZS5cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xuXG52YXIgcG5hID0gcmVxdWlyZSgncHJvY2Vzcy1uZXh0aWNrLWFyZ3MnKTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIG9iamVjdEtleXMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiAob2JqKSB7XG4gIHZhciBrZXlzID0gW107XG4gIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICBrZXlzLnB1c2goa2V5KTtcbiAgfXJldHVybiBrZXlzO1xufTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG5tb2R1bGUuZXhwb3J0cyA9IER1cGxleDtcblxuLyo8cmVwbGFjZW1lbnQ+Ki9cbnZhciB1dGlsID0gcmVxdWlyZSgnY29yZS11dGlsLWlzJyk7XG51dGlsLmluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG52YXIgUmVhZGFibGUgPSByZXF1aXJlKCcuL19zdHJlYW1fcmVhZGFibGUnKTtcbnZhciBXcml0YWJsZSA9IHJlcXVpcmUoJy4vX3N0cmVhbV93cml0YWJsZScpO1xuXG51dGlsLmluaGVyaXRzKER1cGxleCwgUmVhZGFibGUpO1xuXG57XG4gIC8vIGF2b2lkIHNjb3BlIGNyZWVwLCB0aGUga2V5cyBhcnJheSBjYW4gdGhlbiBiZSBjb2xsZWN0ZWRcbiAgdmFyIGtleXMgPSBvYmplY3RLZXlzKFdyaXRhYmxlLnByb3RvdHlwZSk7XG4gIGZvciAodmFyIHYgPSAwOyB2IDwga2V5cy5sZW5ndGg7IHYrKykge1xuICAgIHZhciBtZXRob2QgPSBrZXlzW3ZdO1xuICAgIGlmICghRHVwbGV4LnByb3RvdHlwZVttZXRob2RdKSBEdXBsZXgucHJvdG90eXBlW21ldGhvZF0gPSBXcml0YWJsZS5wcm90b3R5cGVbbWV0aG9kXTtcbiAgfVxufVxuXG5mdW5jdGlvbiBEdXBsZXgob3B0aW9ucykge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgRHVwbGV4KSkgcmV0dXJuIG5ldyBEdXBsZXgob3B0aW9ucyk7XG5cbiAgUmVhZGFibGUuY2FsbCh0aGlzLCBvcHRpb25zKTtcbiAgV3JpdGFibGUuY2FsbCh0aGlzLCBvcHRpb25zKTtcblxuICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLnJlYWRhYmxlID09PSBmYWxzZSkgdGhpcy5yZWFkYWJsZSA9IGZhbHNlO1xuXG4gIGlmIChvcHRpb25zICYmIG9wdGlvbnMud3JpdGFibGUgPT09IGZhbHNlKSB0aGlzLndyaXRhYmxlID0gZmFsc2U7XG5cbiAgdGhpcy5hbGxvd0hhbGZPcGVuID0gdHJ1ZTtcbiAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5hbGxvd0hhbGZPcGVuID09PSBmYWxzZSkgdGhpcy5hbGxvd0hhbGZPcGVuID0gZmFsc2U7XG5cbiAgdGhpcy5vbmNlKCdlbmQnLCBvbmVuZCk7XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShEdXBsZXgucHJvdG90eXBlLCAnd3JpdGFibGVIaWdoV2F0ZXJNYXJrJywge1xuICAvLyBtYWtpbmcgaXQgZXhwbGljaXQgdGhpcyBwcm9wZXJ0eSBpcyBub3QgZW51bWVyYWJsZVxuICAvLyBiZWNhdXNlIG90aGVyd2lzZSBzb21lIHByb3RvdHlwZSBtYW5pcHVsYXRpb24gaW5cbiAgLy8gdXNlcmxhbmQgd2lsbCBmYWlsXG4gIGVudW1lcmFibGU6IGZhbHNlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy5fd3JpdGFibGVTdGF0ZS5oaWdoV2F0ZXJNYXJrO1xuICB9XG59KTtcblxuLy8gdGhlIG5vLWhhbGYtb3BlbiBlbmZvcmNlclxuZnVuY3Rpb24gb25lbmQoKSB7XG4gIC8vIGlmIHdlIGFsbG93IGhhbGYtb3BlbiBzdGF0ZSwgb3IgaWYgdGhlIHdyaXRhYmxlIHNpZGUgZW5kZWQsXG4gIC8vIHRoZW4gd2UncmUgb2suXG4gIGlmICh0aGlzLmFsbG93SGFsZk9wZW4gfHwgdGhpcy5fd3JpdGFibGVTdGF0ZS5lbmRlZCkgcmV0dXJuO1xuXG4gIC8vIG5vIG1vcmUgZGF0YSBjYW4gYmUgd3JpdHRlbi5cbiAgLy8gQnV0IGFsbG93IG1vcmUgd3JpdGVzIHRvIGhhcHBlbiBpbiB0aGlzIHRpY2suXG4gIHBuYS5uZXh0VGljayhvbkVuZE5ULCB0aGlzKTtcbn1cblxuZnVuY3Rpb24gb25FbmROVChzZWxmKSB7XG4gIHNlbGYuZW5kKCk7XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShEdXBsZXgucHJvdG90eXBlLCAnZGVzdHJveWVkJywge1xuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy5fcmVhZGFibGVTdGF0ZSA9PT0gdW5kZWZpbmVkIHx8IHRoaXMuX3dyaXRhYmxlU3RhdGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQgJiYgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQ7XG4gIH0sXG4gIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgLy8gd2UgaWdub3JlIHRoZSB2YWx1ZSBpZiB0aGUgc3RyZWFtXG4gICAgLy8gaGFzIG5vdCBiZWVuIGluaXRpYWxpemVkIHlldFxuICAgIGlmICh0aGlzLl9yZWFkYWJsZVN0YXRlID09PSB1bmRlZmluZWQgfHwgdGhpcy5fd3JpdGFibGVTdGF0ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gYmFja3dhcmQgY29tcGF0aWJpbGl0eSwgdGhlIHVzZXIgaXMgZXhwbGljaXRseVxuICAgIC8vIG1hbmFnaW5nIGRlc3Ryb3llZFxuICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkID0gdmFsdWU7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQgPSB2YWx1ZTtcbiAgfVxufSk7XG5cbkR1cGxleC5wcm90b3R5cGUuX2Rlc3Ryb3kgPSBmdW5jdGlvbiAoZXJyLCBjYikge1xuICB0aGlzLnB1c2gobnVsbCk7XG4gIHRoaXMuZW5kKCk7XG5cbiAgcG5hLm5leHRUaWNrKGNiLCBlcnIpO1xufTsiLCIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuLy8gYSBwYXNzdGhyb3VnaCBzdHJlYW0uXG4vLyBiYXNpY2FsbHkganVzdCB0aGUgbW9zdCBtaW5pbWFsIHNvcnQgb2YgVHJhbnNmb3JtIHN0cmVhbS5cbi8vIEV2ZXJ5IHdyaXR0ZW4gY2h1bmsgZ2V0cyBvdXRwdXQgYXMtaXMuXG5cbid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBQYXNzVGhyb3VnaDtcblxudmFyIFRyYW5zZm9ybSA9IHJlcXVpcmUoJy4vX3N0cmVhbV90cmFuc2Zvcm0nKTtcblxuLyo8cmVwbGFjZW1lbnQ+Ki9cbnZhciB1dGlsID0gcmVxdWlyZSgnY29yZS11dGlsLWlzJyk7XG51dGlsLmluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG51dGlsLmluaGVyaXRzKFBhc3NUaHJvdWdoLCBUcmFuc2Zvcm0pO1xuXG5mdW5jdGlvbiBQYXNzVGhyb3VnaChvcHRpb25zKSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBQYXNzVGhyb3VnaCkpIHJldHVybiBuZXcgUGFzc1Rocm91Z2gob3B0aW9ucyk7XG5cbiAgVHJhbnNmb3JtLmNhbGwodGhpcywgb3B0aW9ucyk7XG59XG5cblBhc3NUaHJvdWdoLnByb3RvdHlwZS5fdHJhbnNmb3JtID0gZnVuY3Rpb24gKGNodW5rLCBlbmNvZGluZywgY2IpIHtcbiAgY2IobnVsbCwgY2h1bmspO1xufTsiLCIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xuXG52YXIgcG5hID0gcmVxdWlyZSgncHJvY2Vzcy1uZXh0aWNrLWFyZ3MnKTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWRhYmxlO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIGlzQXJyYXkgPSByZXF1aXJlKCdpc2FycmF5Jyk7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxuLyo8cmVwbGFjZW1lbnQ+Ki9cbnZhciBEdXBsZXg7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxuUmVhZGFibGUuUmVhZGFibGVTdGF0ZSA9IFJlYWRhYmxlU3RhdGU7XG5cbi8qPHJlcGxhY2VtZW50PiovXG52YXIgRUUgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXI7XG5cbnZhciBFRWxpc3RlbmVyQ291bnQgPSBmdW5jdGlvbiAoZW1pdHRlciwgdHlwZSkge1xuICByZXR1cm4gZW1pdHRlci5saXN0ZW5lcnModHlwZSkubGVuZ3RoO1xufTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIFN0cmVhbSA9IHJlcXVpcmUoJy4vaW50ZXJuYWwvc3RyZWFtcy9zdHJlYW0nKTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG4vKjxyZXBsYWNlbWVudD4qL1xuXG52YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXI7XG52YXIgT3VyVWludDhBcnJheSA9IGdsb2JhbC5VaW50OEFycmF5IHx8IGZ1bmN0aW9uICgpIHt9O1xuZnVuY3Rpb24gX3VpbnQ4QXJyYXlUb0J1ZmZlcihjaHVuaykge1xuICByZXR1cm4gQnVmZmVyLmZyb20oY2h1bmspO1xufVxuZnVuY3Rpb24gX2lzVWludDhBcnJheShvYmopIHtcbiAgcmV0dXJuIEJ1ZmZlci5pc0J1ZmZlcihvYmopIHx8IG9iaiBpbnN0YW5jZW9mIE91clVpbnQ4QXJyYXk7XG59XG5cbi8qPC9yZXBsYWNlbWVudD4qL1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIHV0aWwgPSByZXF1aXJlKCdjb3JlLXV0aWwtaXMnKTtcbnV0aWwuaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpO1xuLyo8L3JlcGxhY2VtZW50PiovXG5cbi8qPHJlcGxhY2VtZW50PiovXG52YXIgZGVidWdVdGlsID0gcmVxdWlyZSgndXRpbCcpO1xudmFyIGRlYnVnID0gdm9pZCAwO1xuaWYgKGRlYnVnVXRpbCAmJiBkZWJ1Z1V0aWwuZGVidWdsb2cpIHtcbiAgZGVidWcgPSBkZWJ1Z1V0aWwuZGVidWdsb2coJ3N0cmVhbScpO1xufSBlbHNlIHtcbiAgZGVidWcgPSBmdW5jdGlvbiAoKSB7fTtcbn1cbi8qPC9yZXBsYWNlbWVudD4qL1xuXG52YXIgQnVmZmVyTGlzdCA9IHJlcXVpcmUoJy4vaW50ZXJuYWwvc3RyZWFtcy9CdWZmZXJMaXN0Jyk7XG52YXIgZGVzdHJveUltcGwgPSByZXF1aXJlKCcuL2ludGVybmFsL3N0cmVhbXMvZGVzdHJveScpO1xudmFyIFN0cmluZ0RlY29kZXI7XG5cbnV0aWwuaW5oZXJpdHMoUmVhZGFibGUsIFN0cmVhbSk7XG5cbnZhciBrUHJveHlFdmVudHMgPSBbJ2Vycm9yJywgJ2Nsb3NlJywgJ2Rlc3Ryb3knLCAncGF1c2UnLCAncmVzdW1lJ107XG5cbmZ1bmN0aW9uIHByZXBlbmRMaXN0ZW5lcihlbWl0dGVyLCBldmVudCwgZm4pIHtcbiAgLy8gU2FkbHkgdGhpcyBpcyBub3QgY2FjaGVhYmxlIGFzIHNvbWUgbGlicmFyaWVzIGJ1bmRsZSB0aGVpciBvd25cbiAgLy8gZXZlbnQgZW1pdHRlciBpbXBsZW1lbnRhdGlvbiB3aXRoIHRoZW0uXG4gIGlmICh0eXBlb2YgZW1pdHRlci5wcmVwZW5kTGlzdGVuZXIgPT09ICdmdW5jdGlvbicpIHJldHVybiBlbWl0dGVyLnByZXBlbmRMaXN0ZW5lcihldmVudCwgZm4pO1xuXG4gIC8vIFRoaXMgaXMgYSBoYWNrIHRvIG1ha2Ugc3VyZSB0aGF0IG91ciBlcnJvciBoYW5kbGVyIGlzIGF0dGFjaGVkIGJlZm9yZSBhbnlcbiAgLy8gdXNlcmxhbmQgb25lcy4gIE5FVkVSIERPIFRISVMuIFRoaXMgaXMgaGVyZSBvbmx5IGJlY2F1c2UgdGhpcyBjb2RlIG5lZWRzXG4gIC8vIHRvIGNvbnRpbnVlIHRvIHdvcmsgd2l0aCBvbGRlciB2ZXJzaW9ucyBvZiBOb2RlLmpzIHRoYXQgZG8gbm90IGluY2x1ZGVcbiAgLy8gdGhlIHByZXBlbmRMaXN0ZW5lcigpIG1ldGhvZC4gVGhlIGdvYWwgaXMgdG8gZXZlbnR1YWxseSByZW1vdmUgdGhpcyBoYWNrLlxuICBpZiAoIWVtaXR0ZXIuX2V2ZW50cyB8fCAhZW1pdHRlci5fZXZlbnRzW2V2ZW50XSkgZW1pdHRlci5vbihldmVudCwgZm4pO2Vsc2UgaWYgKGlzQXJyYXkoZW1pdHRlci5fZXZlbnRzW2V2ZW50XSkpIGVtaXR0ZXIuX2V2ZW50c1tldmVudF0udW5zaGlmdChmbik7ZWxzZSBlbWl0dGVyLl9ldmVudHNbZXZlbnRdID0gW2ZuLCBlbWl0dGVyLl9ldmVudHNbZXZlbnRdXTtcbn1cblxuZnVuY3Rpb24gUmVhZGFibGVTdGF0ZShvcHRpb25zLCBzdHJlYW0pIHtcbiAgRHVwbGV4ID0gRHVwbGV4IHx8IHJlcXVpcmUoJy4vX3N0cmVhbV9kdXBsZXgnKTtcblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICAvLyBEdXBsZXggc3RyZWFtcyBhcmUgYm90aCByZWFkYWJsZSBhbmQgd3JpdGFibGUsIGJ1dCBzaGFyZVxuICAvLyB0aGUgc2FtZSBvcHRpb25zIG9iamVjdC5cbiAgLy8gSG93ZXZlciwgc29tZSBjYXNlcyByZXF1aXJlIHNldHRpbmcgb3B0aW9ucyB0byBkaWZmZXJlbnRcbiAgLy8gdmFsdWVzIGZvciB0aGUgcmVhZGFibGUgYW5kIHRoZSB3cml0YWJsZSBzaWRlcyBvZiB0aGUgZHVwbGV4IHN0cmVhbS5cbiAgLy8gVGhlc2Ugb3B0aW9ucyBjYW4gYmUgcHJvdmlkZWQgc2VwYXJhdGVseSBhcyByZWFkYWJsZVhYWCBhbmQgd3JpdGFibGVYWFguXG4gIHZhciBpc0R1cGxleCA9IHN0cmVhbSBpbnN0YW5jZW9mIER1cGxleDtcblxuICAvLyBvYmplY3Qgc3RyZWFtIGZsYWcuIFVzZWQgdG8gbWFrZSByZWFkKG4pIGlnbm9yZSBuIGFuZCB0b1xuICAvLyBtYWtlIGFsbCB0aGUgYnVmZmVyIG1lcmdpbmcgYW5kIGxlbmd0aCBjaGVja3MgZ28gYXdheVxuICB0aGlzLm9iamVjdE1vZGUgPSAhIW9wdGlvbnMub2JqZWN0TW9kZTtcblxuICBpZiAoaXNEdXBsZXgpIHRoaXMub2JqZWN0TW9kZSA9IHRoaXMub2JqZWN0TW9kZSB8fCAhIW9wdGlvbnMucmVhZGFibGVPYmplY3RNb2RlO1xuXG4gIC8vIHRoZSBwb2ludCBhdCB3aGljaCBpdCBzdG9wcyBjYWxsaW5nIF9yZWFkKCkgdG8gZmlsbCB0aGUgYnVmZmVyXG4gIC8vIE5vdGU6IDAgaXMgYSB2YWxpZCB2YWx1ZSwgbWVhbnMgXCJkb24ndCBjYWxsIF9yZWFkIHByZWVtcHRpdmVseSBldmVyXCJcbiAgdmFyIGh3bSA9IG9wdGlvbnMuaGlnaFdhdGVyTWFyaztcbiAgdmFyIHJlYWRhYmxlSHdtID0gb3B0aW9ucy5yZWFkYWJsZUhpZ2hXYXRlck1hcms7XG4gIHZhciBkZWZhdWx0SHdtID0gdGhpcy5vYmplY3RNb2RlID8gMTYgOiAxNiAqIDEwMjQ7XG5cbiAgaWYgKGh3bSB8fCBod20gPT09IDApIHRoaXMuaGlnaFdhdGVyTWFyayA9IGh3bTtlbHNlIGlmIChpc0R1cGxleCAmJiAocmVhZGFibGVId20gfHwgcmVhZGFibGVId20gPT09IDApKSB0aGlzLmhpZ2hXYXRlck1hcmsgPSByZWFkYWJsZUh3bTtlbHNlIHRoaXMuaGlnaFdhdGVyTWFyayA9IGRlZmF1bHRId207XG5cbiAgLy8gY2FzdCB0byBpbnRzLlxuICB0aGlzLmhpZ2hXYXRlck1hcmsgPSBNYXRoLmZsb29yKHRoaXMuaGlnaFdhdGVyTWFyayk7XG5cbiAgLy8gQSBsaW5rZWQgbGlzdCBpcyB1c2VkIHRvIHN0b3JlIGRhdGEgY2h1bmtzIGluc3RlYWQgb2YgYW4gYXJyYXkgYmVjYXVzZSB0aGVcbiAgLy8gbGlua2VkIGxpc3QgY2FuIHJlbW92ZSBlbGVtZW50cyBmcm9tIHRoZSBiZWdpbm5pbmcgZmFzdGVyIHRoYW5cbiAgLy8gYXJyYXkuc2hpZnQoKVxuICB0aGlzLmJ1ZmZlciA9IG5ldyBCdWZmZXJMaXN0KCk7XG4gIHRoaXMubGVuZ3RoID0gMDtcbiAgdGhpcy5waXBlcyA9IG51bGw7XG4gIHRoaXMucGlwZXNDb3VudCA9IDA7XG4gIHRoaXMuZmxvd2luZyA9IG51bGw7XG4gIHRoaXMuZW5kZWQgPSBmYWxzZTtcbiAgdGhpcy5lbmRFbWl0dGVkID0gZmFsc2U7XG4gIHRoaXMucmVhZGluZyA9IGZhbHNlO1xuXG4gIC8vIGEgZmxhZyB0byBiZSBhYmxlIHRvIHRlbGwgaWYgdGhlIGV2ZW50ICdyZWFkYWJsZScvJ2RhdGEnIGlzIGVtaXR0ZWRcbiAgLy8gaW1tZWRpYXRlbHksIG9yIG9uIGEgbGF0ZXIgdGljay4gIFdlIHNldCB0aGlzIHRvIHRydWUgYXQgZmlyc3QsIGJlY2F1c2VcbiAgLy8gYW55IGFjdGlvbnMgdGhhdCBzaG91bGRuJ3QgaGFwcGVuIHVudGlsIFwibGF0ZXJcIiBzaG91bGQgZ2VuZXJhbGx5IGFsc29cbiAgLy8gbm90IGhhcHBlbiBiZWZvcmUgdGhlIGZpcnN0IHJlYWQgY2FsbC5cbiAgdGhpcy5zeW5jID0gdHJ1ZTtcblxuICAvLyB3aGVuZXZlciB3ZSByZXR1cm4gbnVsbCwgdGhlbiB3ZSBzZXQgYSBmbGFnIHRvIHNheVxuICAvLyB0aGF0IHdlJ3JlIGF3YWl0aW5nIGEgJ3JlYWRhYmxlJyBldmVudCBlbWlzc2lvbi5cbiAgdGhpcy5uZWVkUmVhZGFibGUgPSBmYWxzZTtcbiAgdGhpcy5lbWl0dGVkUmVhZGFibGUgPSBmYWxzZTtcbiAgdGhpcy5yZWFkYWJsZUxpc3RlbmluZyA9IGZhbHNlO1xuICB0aGlzLnJlc3VtZVNjaGVkdWxlZCA9IGZhbHNlO1xuXG4gIC8vIGhhcyBpdCBiZWVuIGRlc3Ryb3llZFxuICB0aGlzLmRlc3Ryb3llZCA9IGZhbHNlO1xuXG4gIC8vIENyeXB0byBpcyBraW5kIG9mIG9sZCBhbmQgY3J1c3R5LiAgSGlzdG9yaWNhbGx5LCBpdHMgZGVmYXVsdCBzdHJpbmdcbiAgLy8gZW5jb2RpbmcgaXMgJ2JpbmFyeScgc28gd2UgaGF2ZSB0byBtYWtlIHRoaXMgY29uZmlndXJhYmxlLlxuICAvLyBFdmVyeXRoaW5nIGVsc2UgaW4gdGhlIHVuaXZlcnNlIHVzZXMgJ3V0ZjgnLCB0aG91Z2guXG4gIHRoaXMuZGVmYXVsdEVuY29kaW5nID0gb3B0aW9ucy5kZWZhdWx0RW5jb2RpbmcgfHwgJ3V0ZjgnO1xuXG4gIC8vIHRoZSBudW1iZXIgb2Ygd3JpdGVycyB0aGF0IGFyZSBhd2FpdGluZyBhIGRyYWluIGV2ZW50IGluIC5waXBlKClzXG4gIHRoaXMuYXdhaXREcmFpbiA9IDA7XG5cbiAgLy8gaWYgdHJ1ZSwgYSBtYXliZVJlYWRNb3JlIGhhcyBiZWVuIHNjaGVkdWxlZFxuICB0aGlzLnJlYWRpbmdNb3JlID0gZmFsc2U7XG5cbiAgdGhpcy5kZWNvZGVyID0gbnVsbDtcbiAgdGhpcy5lbmNvZGluZyA9IG51bGw7XG4gIGlmIChvcHRpb25zLmVuY29kaW5nKSB7XG4gICAgaWYgKCFTdHJpbmdEZWNvZGVyKSBTdHJpbmdEZWNvZGVyID0gcmVxdWlyZSgnc3RyaW5nX2RlY29kZXIvJykuU3RyaW5nRGVjb2RlcjtcbiAgICB0aGlzLmRlY29kZXIgPSBuZXcgU3RyaW5nRGVjb2RlcihvcHRpb25zLmVuY29kaW5nKTtcbiAgICB0aGlzLmVuY29kaW5nID0gb3B0aW9ucy5lbmNvZGluZztcbiAgfVxufVxuXG5mdW5jdGlvbiBSZWFkYWJsZShvcHRpb25zKSB7XG4gIER1cGxleCA9IER1cGxleCB8fCByZXF1aXJlKCcuL19zdHJlYW1fZHVwbGV4Jyk7XG5cbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIFJlYWRhYmxlKSkgcmV0dXJuIG5ldyBSZWFkYWJsZShvcHRpb25zKTtcblxuICB0aGlzLl9yZWFkYWJsZVN0YXRlID0gbmV3IFJlYWRhYmxlU3RhdGUob3B0aW9ucywgdGhpcyk7XG5cbiAgLy8gbGVnYWN5XG4gIHRoaXMucmVhZGFibGUgPSB0cnVlO1xuXG4gIGlmIChvcHRpb25zKSB7XG4gICAgaWYgKHR5cGVvZiBvcHRpb25zLnJlYWQgPT09ICdmdW5jdGlvbicpIHRoaXMuX3JlYWQgPSBvcHRpb25zLnJlYWQ7XG5cbiAgICBpZiAodHlwZW9mIG9wdGlvbnMuZGVzdHJveSA9PT0gJ2Z1bmN0aW9uJykgdGhpcy5fZGVzdHJveSA9IG9wdGlvbnMuZGVzdHJveTtcbiAgfVxuXG4gIFN0cmVhbS5jYWxsKHRoaXMpO1xufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoUmVhZGFibGUucHJvdG90eXBlLCAnZGVzdHJveWVkJywge1xuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy5fcmVhZGFibGVTdGF0ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZDtcbiAgfSxcbiAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAvLyB3ZSBpZ25vcmUgdGhlIHZhbHVlIGlmIHRoZSBzdHJlYW1cbiAgICAvLyBoYXMgbm90IGJlZW4gaW5pdGlhbGl6ZWQgeWV0XG4gICAgaWYgKCF0aGlzLl9yZWFkYWJsZVN0YXRlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gYmFja3dhcmQgY29tcGF0aWJpbGl0eSwgdGhlIHVzZXIgaXMgZXhwbGljaXRseVxuICAgIC8vIG1hbmFnaW5nIGRlc3Ryb3llZFxuICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkID0gdmFsdWU7XG4gIH1cbn0pO1xuXG5SZWFkYWJsZS5wcm90b3R5cGUuZGVzdHJveSA9IGRlc3Ryb3lJbXBsLmRlc3Ryb3k7XG5SZWFkYWJsZS5wcm90b3R5cGUuX3VuZGVzdHJveSA9IGRlc3Ryb3lJbXBsLnVuZGVzdHJveTtcblJlYWRhYmxlLnByb3RvdHlwZS5fZGVzdHJveSA9IGZ1bmN0aW9uIChlcnIsIGNiKSB7XG4gIHRoaXMucHVzaChudWxsKTtcbiAgY2IoZXJyKTtcbn07XG5cbi8vIE1hbnVhbGx5IHNob3ZlIHNvbWV0aGluZyBpbnRvIHRoZSByZWFkKCkgYnVmZmVyLlxuLy8gVGhpcyByZXR1cm5zIHRydWUgaWYgdGhlIGhpZ2hXYXRlck1hcmsgaGFzIG5vdCBiZWVuIGhpdCB5ZXQsXG4vLyBzaW1pbGFyIHRvIGhvdyBXcml0YWJsZS53cml0ZSgpIHJldHVybnMgdHJ1ZSBpZiB5b3Ugc2hvdWxkXG4vLyB3cml0ZSgpIHNvbWUgbW9yZS5cblJlYWRhYmxlLnByb3RvdHlwZS5wdXNoID0gZnVuY3Rpb24gKGNodW5rLCBlbmNvZGluZykge1xuICB2YXIgc3RhdGUgPSB0aGlzLl9yZWFkYWJsZVN0YXRlO1xuICB2YXIgc2tpcENodW5rQ2hlY2s7XG5cbiAgaWYgKCFzdGF0ZS5vYmplY3RNb2RlKSB7XG4gICAgaWYgKHR5cGVvZiBjaHVuayA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGVuY29kaW5nID0gZW5jb2RpbmcgfHwgc3RhdGUuZGVmYXVsdEVuY29kaW5nO1xuICAgICAgaWYgKGVuY29kaW5nICE9PSBzdGF0ZS5lbmNvZGluZykge1xuICAgICAgICBjaHVuayA9IEJ1ZmZlci5mcm9tKGNodW5rLCBlbmNvZGluZyk7XG4gICAgICAgIGVuY29kaW5nID0gJyc7XG4gICAgICB9XG4gICAgICBza2lwQ2h1bmtDaGVjayA9IHRydWU7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHNraXBDaHVua0NoZWNrID0gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiByZWFkYWJsZUFkZENodW5rKHRoaXMsIGNodW5rLCBlbmNvZGluZywgZmFsc2UsIHNraXBDaHVua0NoZWNrKTtcbn07XG5cbi8vIFVuc2hpZnQgc2hvdWxkICphbHdheXMqIGJlIHNvbWV0aGluZyBkaXJlY3RseSBvdXQgb2YgcmVhZCgpXG5SZWFkYWJsZS5wcm90b3R5cGUudW5zaGlmdCA9IGZ1bmN0aW9uIChjaHVuaykge1xuICByZXR1cm4gcmVhZGFibGVBZGRDaHVuayh0aGlzLCBjaHVuaywgbnVsbCwgdHJ1ZSwgZmFsc2UpO1xufTtcblxuZnVuY3Rpb24gcmVhZGFibGVBZGRDaHVuayhzdHJlYW0sIGNodW5rLCBlbmNvZGluZywgYWRkVG9Gcm9udCwgc2tpcENodW5rQ2hlY2spIHtcbiAgdmFyIHN0YXRlID0gc3RyZWFtLl9yZWFkYWJsZVN0YXRlO1xuICBpZiAoY2h1bmsgPT09IG51bGwpIHtcbiAgICBzdGF0ZS5yZWFkaW5nID0gZmFsc2U7XG4gICAgb25Fb2ZDaHVuayhzdHJlYW0sIHN0YXRlKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgZXI7XG4gICAgaWYgKCFza2lwQ2h1bmtDaGVjaykgZXIgPSBjaHVua0ludmFsaWQoc3RhdGUsIGNodW5rKTtcbiAgICBpZiAoZXIpIHtcbiAgICAgIHN0cmVhbS5lbWl0KCdlcnJvcicsIGVyKTtcbiAgICB9IGVsc2UgaWYgKHN0YXRlLm9iamVjdE1vZGUgfHwgY2h1bmsgJiYgY2h1bmsubGVuZ3RoID4gMCkge1xuICAgICAgaWYgKHR5cGVvZiBjaHVuayAhPT0gJ3N0cmluZycgJiYgIXN0YXRlLm9iamVjdE1vZGUgJiYgT2JqZWN0LmdldFByb3RvdHlwZU9mKGNodW5rKSAhPT0gQnVmZmVyLnByb3RvdHlwZSkge1xuICAgICAgICBjaHVuayA9IF91aW50OEFycmF5VG9CdWZmZXIoY2h1bmspO1xuICAgICAgfVxuXG4gICAgICBpZiAoYWRkVG9Gcm9udCkge1xuICAgICAgICBpZiAoc3RhdGUuZW5kRW1pdHRlZCkgc3RyZWFtLmVtaXQoJ2Vycm9yJywgbmV3IEVycm9yKCdzdHJlYW0udW5zaGlmdCgpIGFmdGVyIGVuZCBldmVudCcpKTtlbHNlIGFkZENodW5rKHN0cmVhbSwgc3RhdGUsIGNodW5rLCB0cnVlKTtcbiAgICAgIH0gZWxzZSBpZiAoc3RhdGUuZW5kZWQpIHtcbiAgICAgICAgc3RyZWFtLmVtaXQoJ2Vycm9yJywgbmV3IEVycm9yKCdzdHJlYW0ucHVzaCgpIGFmdGVyIEVPRicpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN0YXRlLnJlYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgaWYgKHN0YXRlLmRlY29kZXIgJiYgIWVuY29kaW5nKSB7XG4gICAgICAgICAgY2h1bmsgPSBzdGF0ZS5kZWNvZGVyLndyaXRlKGNodW5rKTtcbiAgICAgICAgICBpZiAoc3RhdGUub2JqZWN0TW9kZSB8fCBjaHVuay5sZW5ndGggIT09IDApIGFkZENodW5rKHN0cmVhbSwgc3RhdGUsIGNodW5rLCBmYWxzZSk7ZWxzZSBtYXliZVJlYWRNb3JlKHN0cmVhbSwgc3RhdGUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGFkZENodW5rKHN0cmVhbSwgc3RhdGUsIGNodW5rLCBmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKCFhZGRUb0Zyb250KSB7XG4gICAgICBzdGF0ZS5yZWFkaW5nID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5lZWRNb3JlRGF0YShzdGF0ZSk7XG59XG5cbmZ1bmN0aW9uIGFkZENodW5rKHN0cmVhbSwgc3RhdGUsIGNodW5rLCBhZGRUb0Zyb250KSB7XG4gIGlmIChzdGF0ZS5mbG93aW5nICYmIHN0YXRlLmxlbmd0aCA9PT0gMCAmJiAhc3RhdGUuc3luYykge1xuICAgIHN0cmVhbS5lbWl0KCdkYXRhJywgY2h1bmspO1xuICAgIHN0cmVhbS5yZWFkKDApO1xuICB9IGVsc2Uge1xuICAgIC8vIHVwZGF0ZSB0aGUgYnVmZmVyIGluZm8uXG4gICAgc3RhdGUubGVuZ3RoICs9IHN0YXRlLm9iamVjdE1vZGUgPyAxIDogY2h1bmsubGVuZ3RoO1xuICAgIGlmIChhZGRUb0Zyb250KSBzdGF0ZS5idWZmZXIudW5zaGlmdChjaHVuayk7ZWxzZSBzdGF0ZS5idWZmZXIucHVzaChjaHVuayk7XG5cbiAgICBpZiAoc3RhdGUubmVlZFJlYWRhYmxlKSBlbWl0UmVhZGFibGUoc3RyZWFtKTtcbiAgfVxuICBtYXliZVJlYWRNb3JlKHN0cmVhbSwgc3RhdGUpO1xufVxuXG5mdW5jdGlvbiBjaHVua0ludmFsaWQoc3RhdGUsIGNodW5rKSB7XG4gIHZhciBlcjtcbiAgaWYgKCFfaXNVaW50OEFycmF5KGNodW5rKSAmJiB0eXBlb2YgY2h1bmsgIT09ICdzdHJpbmcnICYmIGNodW5rICE9PSB1bmRlZmluZWQgJiYgIXN0YXRlLm9iamVjdE1vZGUpIHtcbiAgICBlciA9IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgbm9uLXN0cmluZy9idWZmZXIgY2h1bmsnKTtcbiAgfVxuICByZXR1cm4gZXI7XG59XG5cbi8vIGlmIGl0J3MgcGFzdCB0aGUgaGlnaCB3YXRlciBtYXJrLCB3ZSBjYW4gcHVzaCBpbiBzb21lIG1vcmUuXG4vLyBBbHNvLCBpZiB3ZSBoYXZlIG5vIGRhdGEgeWV0LCB3ZSBjYW4gc3RhbmQgc29tZVxuLy8gbW9yZSBieXRlcy4gIFRoaXMgaXMgdG8gd29yayBhcm91bmQgY2FzZXMgd2hlcmUgaHdtPTAsXG4vLyBzdWNoIGFzIHRoZSByZXBsLiAgQWxzbywgaWYgdGhlIHB1c2goKSB0cmlnZ2VyZWQgYVxuLy8gcmVhZGFibGUgZXZlbnQsIGFuZCB0aGUgdXNlciBjYWxsZWQgcmVhZChsYXJnZU51bWJlcikgc3VjaCB0aGF0XG4vLyBuZWVkUmVhZGFibGUgd2FzIHNldCwgdGhlbiB3ZSBvdWdodCB0byBwdXNoIG1vcmUsIHNvIHRoYXQgYW5vdGhlclxuLy8gJ3JlYWRhYmxlJyBldmVudCB3aWxsIGJlIHRyaWdnZXJlZC5cbmZ1bmN0aW9uIG5lZWRNb3JlRGF0YShzdGF0ZSkge1xuICByZXR1cm4gIXN0YXRlLmVuZGVkICYmIChzdGF0ZS5uZWVkUmVhZGFibGUgfHwgc3RhdGUubGVuZ3RoIDwgc3RhdGUuaGlnaFdhdGVyTWFyayB8fCBzdGF0ZS5sZW5ndGggPT09IDApO1xufVxuXG5SZWFkYWJsZS5wcm90b3R5cGUuaXNQYXVzZWQgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmcgPT09IGZhbHNlO1xufTtcblxuLy8gYmFja3dhcmRzIGNvbXBhdGliaWxpdHkuXG5SZWFkYWJsZS5wcm90b3R5cGUuc2V0RW5jb2RpbmcgPSBmdW5jdGlvbiAoZW5jKSB7XG4gIGlmICghU3RyaW5nRGVjb2RlcikgU3RyaW5nRGVjb2RlciA9IHJlcXVpcmUoJ3N0cmluZ19kZWNvZGVyLycpLlN0cmluZ0RlY29kZXI7XG4gIHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVjb2RlciA9IG5ldyBTdHJpbmdEZWNvZGVyKGVuYyk7XG4gIHRoaXMuX3JlYWRhYmxlU3RhdGUuZW5jb2RpbmcgPSBlbmM7XG4gIHJldHVybiB0aGlzO1xufTtcblxuLy8gRG9uJ3QgcmFpc2UgdGhlIGh3bSA+IDhNQlxudmFyIE1BWF9IV00gPSAweDgwMDAwMDtcbmZ1bmN0aW9uIGNvbXB1dGVOZXdIaWdoV2F0ZXJNYXJrKG4pIHtcbiAgaWYgKG4gPj0gTUFYX0hXTSkge1xuICAgIG4gPSBNQVhfSFdNO1xuICB9IGVsc2Uge1xuICAgIC8vIEdldCB0aGUgbmV4dCBoaWdoZXN0IHBvd2VyIG9mIDIgdG8gcHJldmVudCBpbmNyZWFzaW5nIGh3bSBleGNlc3NpdmVseSBpblxuICAgIC8vIHRpbnkgYW1vdW50c1xuICAgIG4tLTtcbiAgICBuIHw9IG4gPj4+IDE7XG4gICAgbiB8PSBuID4+PiAyO1xuICAgIG4gfD0gbiA+Pj4gNDtcbiAgICBuIHw9IG4gPj4+IDg7XG4gICAgbiB8PSBuID4+PiAxNjtcbiAgICBuKys7XG4gIH1cbiAgcmV0dXJuIG47XG59XG5cbi8vIFRoaXMgZnVuY3Rpb24gaXMgZGVzaWduZWQgdG8gYmUgaW5saW5hYmxlLCBzbyBwbGVhc2UgdGFrZSBjYXJlIHdoZW4gbWFraW5nXG4vLyBjaGFuZ2VzIHRvIHRoZSBmdW5jdGlvbiBib2R5LlxuZnVuY3Rpb24gaG93TXVjaFRvUmVhZChuLCBzdGF0ZSkge1xuICBpZiAobiA8PSAwIHx8IHN0YXRlLmxlbmd0aCA9PT0gMCAmJiBzdGF0ZS5lbmRlZCkgcmV0dXJuIDA7XG4gIGlmIChzdGF0ZS5vYmplY3RNb2RlKSByZXR1cm4gMTtcbiAgaWYgKG4gIT09IG4pIHtcbiAgICAvLyBPbmx5IGZsb3cgb25lIGJ1ZmZlciBhdCBhIHRpbWVcbiAgICBpZiAoc3RhdGUuZmxvd2luZyAmJiBzdGF0ZS5sZW5ndGgpIHJldHVybiBzdGF0ZS5idWZmZXIuaGVhZC5kYXRhLmxlbmd0aDtlbHNlIHJldHVybiBzdGF0ZS5sZW5ndGg7XG4gIH1cbiAgLy8gSWYgd2UncmUgYXNraW5nIGZvciBtb3JlIHRoYW4gdGhlIGN1cnJlbnQgaHdtLCB0aGVuIHJhaXNlIHRoZSBod20uXG4gIGlmIChuID4gc3RhdGUuaGlnaFdhdGVyTWFyaykgc3RhdGUuaGlnaFdhdGVyTWFyayA9IGNvbXB1dGVOZXdIaWdoV2F0ZXJNYXJrKG4pO1xuICBpZiAobiA8PSBzdGF0ZS5sZW5ndGgpIHJldHVybiBuO1xuICAvLyBEb24ndCBoYXZlIGVub3VnaFxuICBpZiAoIXN0YXRlLmVuZGVkKSB7XG4gICAgc3RhdGUubmVlZFJlYWRhYmxlID0gdHJ1ZTtcbiAgICByZXR1cm4gMDtcbiAgfVxuICByZXR1cm4gc3RhdGUubGVuZ3RoO1xufVxuXG4vLyB5b3UgY2FuIG92ZXJyaWRlIGVpdGhlciB0aGlzIG1ldGhvZCwgb3IgdGhlIGFzeW5jIF9yZWFkKG4pIGJlbG93LlxuUmVhZGFibGUucHJvdG90eXBlLnJlYWQgPSBmdW5jdGlvbiAobikge1xuICBkZWJ1ZygncmVhZCcsIG4pO1xuICBuID0gcGFyc2VJbnQobiwgMTApO1xuICB2YXIgc3RhdGUgPSB0aGlzLl9yZWFkYWJsZVN0YXRlO1xuICB2YXIgbk9yaWcgPSBuO1xuXG4gIGlmIChuICE9PSAwKSBzdGF0ZS5lbWl0dGVkUmVhZGFibGUgPSBmYWxzZTtcblxuICAvLyBpZiB3ZSdyZSBkb2luZyByZWFkKDApIHRvIHRyaWdnZXIgYSByZWFkYWJsZSBldmVudCwgYnV0IHdlXG4gIC8vIGFscmVhZHkgaGF2ZSBhIGJ1bmNoIG9mIGRhdGEgaW4gdGhlIGJ1ZmZlciwgdGhlbiBqdXN0IHRyaWdnZXJcbiAgLy8gdGhlICdyZWFkYWJsZScgZXZlbnQgYW5kIG1vdmUgb24uXG4gIGlmIChuID09PSAwICYmIHN0YXRlLm5lZWRSZWFkYWJsZSAmJiAoc3RhdGUubGVuZ3RoID49IHN0YXRlLmhpZ2hXYXRlck1hcmsgfHwgc3RhdGUuZW5kZWQpKSB7XG4gICAgZGVidWcoJ3JlYWQ6IGVtaXRSZWFkYWJsZScsIHN0YXRlLmxlbmd0aCwgc3RhdGUuZW5kZWQpO1xuICAgIGlmIChzdGF0ZS5sZW5ndGggPT09IDAgJiYgc3RhdGUuZW5kZWQpIGVuZFJlYWRhYmxlKHRoaXMpO2Vsc2UgZW1pdFJlYWRhYmxlKHRoaXMpO1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgbiA9IGhvd011Y2hUb1JlYWQobiwgc3RhdGUpO1xuXG4gIC8vIGlmIHdlJ3ZlIGVuZGVkLCBhbmQgd2UncmUgbm93IGNsZWFyLCB0aGVuIGZpbmlzaCBpdCB1cC5cbiAgaWYgKG4gPT09IDAgJiYgc3RhdGUuZW5kZWQpIHtcbiAgICBpZiAoc3RhdGUubGVuZ3RoID09PSAwKSBlbmRSZWFkYWJsZSh0aGlzKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIC8vIEFsbCB0aGUgYWN0dWFsIGNodW5rIGdlbmVyYXRpb24gbG9naWMgbmVlZHMgdG8gYmVcbiAgLy8gKmJlbG93KiB0aGUgY2FsbCB0byBfcmVhZC4gIFRoZSByZWFzb24gaXMgdGhhdCBpbiBjZXJ0YWluXG4gIC8vIHN5bnRoZXRpYyBzdHJlYW0gY2FzZXMsIHN1Y2ggYXMgcGFzc3Rocm91Z2ggc3RyZWFtcywgX3JlYWRcbiAgLy8gbWF5IGJlIGEgY29tcGxldGVseSBzeW5jaHJvbm91cyBvcGVyYXRpb24gd2hpY2ggbWF5IGNoYW5nZVxuICAvLyB0aGUgc3RhdGUgb2YgdGhlIHJlYWQgYnVmZmVyLCBwcm92aWRpbmcgZW5vdWdoIGRhdGEgd2hlblxuICAvLyBiZWZvcmUgdGhlcmUgd2FzICpub3QqIGVub3VnaC5cbiAgLy9cbiAgLy8gU28sIHRoZSBzdGVwcyBhcmU6XG4gIC8vIDEuIEZpZ3VyZSBvdXQgd2hhdCB0aGUgc3RhdGUgb2YgdGhpbmdzIHdpbGwgYmUgYWZ0ZXIgd2UgZG9cbiAgLy8gYSByZWFkIGZyb20gdGhlIGJ1ZmZlci5cbiAgLy9cbiAgLy8gMi4gSWYgdGhhdCByZXN1bHRpbmcgc3RhdGUgd2lsbCB0cmlnZ2VyIGEgX3JlYWQsIHRoZW4gY2FsbCBfcmVhZC5cbiAgLy8gTm90ZSB0aGF0IHRoaXMgbWF5IGJlIGFzeW5jaHJvbm91cywgb3Igc3luY2hyb25vdXMuICBZZXMsIGl0IGlzXG4gIC8vIGRlZXBseSB1Z2x5IHRvIHdyaXRlIEFQSXMgdGhpcyB3YXksIGJ1dCB0aGF0IHN0aWxsIGRvZXNuJ3QgbWVhblxuICAvLyB0aGF0IHRoZSBSZWFkYWJsZSBjbGFzcyBzaG91bGQgYmVoYXZlIGltcHJvcGVybHksIGFzIHN0cmVhbXMgYXJlXG4gIC8vIGRlc2lnbmVkIHRvIGJlIHN5bmMvYXN5bmMgYWdub3N0aWMuXG4gIC8vIFRha2Ugbm90ZSBpZiB0aGUgX3JlYWQgY2FsbCBpcyBzeW5jIG9yIGFzeW5jIChpZSwgaWYgdGhlIHJlYWQgY2FsbFxuICAvLyBoYXMgcmV0dXJuZWQgeWV0KSwgc28gdGhhdCB3ZSBrbm93IHdoZXRoZXIgb3Igbm90IGl0J3Mgc2FmZSB0byBlbWl0XG4gIC8vICdyZWFkYWJsZScgZXRjLlxuICAvL1xuICAvLyAzLiBBY3R1YWxseSBwdWxsIHRoZSByZXF1ZXN0ZWQgY2h1bmtzIG91dCBvZiB0aGUgYnVmZmVyIGFuZCByZXR1cm4uXG5cbiAgLy8gaWYgd2UgbmVlZCBhIHJlYWRhYmxlIGV2ZW50LCB0aGVuIHdlIG5lZWQgdG8gZG8gc29tZSByZWFkaW5nLlxuICB2YXIgZG9SZWFkID0gc3RhdGUubmVlZFJlYWRhYmxlO1xuICBkZWJ1ZygnbmVlZCByZWFkYWJsZScsIGRvUmVhZCk7XG5cbiAgLy8gaWYgd2UgY3VycmVudGx5IGhhdmUgbGVzcyB0aGFuIHRoZSBoaWdoV2F0ZXJNYXJrLCB0aGVuIGFsc28gcmVhZCBzb21lXG4gIGlmIChzdGF0ZS5sZW5ndGggPT09IDAgfHwgc3RhdGUubGVuZ3RoIC0gbiA8IHN0YXRlLmhpZ2hXYXRlck1hcmspIHtcbiAgICBkb1JlYWQgPSB0cnVlO1xuICAgIGRlYnVnKCdsZW5ndGggbGVzcyB0aGFuIHdhdGVybWFyaycsIGRvUmVhZCk7XG4gIH1cblxuICAvLyBob3dldmVyLCBpZiB3ZSd2ZSBlbmRlZCwgdGhlbiB0aGVyZSdzIG5vIHBvaW50LCBhbmQgaWYgd2UncmUgYWxyZWFkeVxuICAvLyByZWFkaW5nLCB0aGVuIGl0J3MgdW5uZWNlc3NhcnkuXG4gIGlmIChzdGF0ZS5lbmRlZCB8fCBzdGF0ZS5yZWFkaW5nKSB7XG4gICAgZG9SZWFkID0gZmFsc2U7XG4gICAgZGVidWcoJ3JlYWRpbmcgb3IgZW5kZWQnLCBkb1JlYWQpO1xuICB9IGVsc2UgaWYgKGRvUmVhZCkge1xuICAgIGRlYnVnKCdkbyByZWFkJyk7XG4gICAgc3RhdGUucmVhZGluZyA9IHRydWU7XG4gICAgc3RhdGUuc3luYyA9IHRydWU7XG4gICAgLy8gaWYgdGhlIGxlbmd0aCBpcyBjdXJyZW50bHkgemVybywgdGhlbiB3ZSAqbmVlZCogYSByZWFkYWJsZSBldmVudC5cbiAgICBpZiAoc3RhdGUubGVuZ3RoID09PSAwKSBzdGF0ZS5uZWVkUmVhZGFibGUgPSB0cnVlO1xuICAgIC8vIGNhbGwgaW50ZXJuYWwgcmVhZCBtZXRob2RcbiAgICB0aGlzLl9yZWFkKHN0YXRlLmhpZ2hXYXRlck1hcmspO1xuICAgIHN0YXRlLnN5bmMgPSBmYWxzZTtcbiAgICAvLyBJZiBfcmVhZCBwdXNoZWQgZGF0YSBzeW5jaHJvbm91c2x5LCB0aGVuIGByZWFkaW5nYCB3aWxsIGJlIGZhbHNlLFxuICAgIC8vIGFuZCB3ZSBuZWVkIHRvIHJlLWV2YWx1YXRlIGhvdyBtdWNoIGRhdGEgd2UgY2FuIHJldHVybiB0byB0aGUgdXNlci5cbiAgICBpZiAoIXN0YXRlLnJlYWRpbmcpIG4gPSBob3dNdWNoVG9SZWFkKG5PcmlnLCBzdGF0ZSk7XG4gIH1cblxuICB2YXIgcmV0O1xuICBpZiAobiA+IDApIHJldCA9IGZyb21MaXN0KG4sIHN0YXRlKTtlbHNlIHJldCA9IG51bGw7XG5cbiAgaWYgKHJldCA9PT0gbnVsbCkge1xuICAgIHN0YXRlLm5lZWRSZWFkYWJsZSA9IHRydWU7XG4gICAgbiA9IDA7XG4gIH0gZWxzZSB7XG4gICAgc3RhdGUubGVuZ3RoIC09IG47XG4gIH1cblxuICBpZiAoc3RhdGUubGVuZ3RoID09PSAwKSB7XG4gICAgLy8gSWYgd2UgaGF2ZSBub3RoaW5nIGluIHRoZSBidWZmZXIsIHRoZW4gd2Ugd2FudCB0byBrbm93XG4gICAgLy8gYXMgc29vbiBhcyB3ZSAqZG8qIGdldCBzb21ldGhpbmcgaW50byB0aGUgYnVmZmVyLlxuICAgIGlmICghc3RhdGUuZW5kZWQpIHN0YXRlLm5lZWRSZWFkYWJsZSA9IHRydWU7XG5cbiAgICAvLyBJZiB3ZSB0cmllZCB0byByZWFkKCkgcGFzdCB0aGUgRU9GLCB0aGVuIGVtaXQgZW5kIG9uIHRoZSBuZXh0IHRpY2suXG4gICAgaWYgKG5PcmlnICE9PSBuICYmIHN0YXRlLmVuZGVkKSBlbmRSZWFkYWJsZSh0aGlzKTtcbiAgfVxuXG4gIGlmIChyZXQgIT09IG51bGwpIHRoaXMuZW1pdCgnZGF0YScsIHJldCk7XG5cbiAgcmV0dXJuIHJldDtcbn07XG5cbmZ1bmN0aW9uIG9uRW9mQ2h1bmsoc3RyZWFtLCBzdGF0ZSkge1xuICBpZiAoc3RhdGUuZW5kZWQpIHJldHVybjtcbiAgaWYgKHN0YXRlLmRlY29kZXIpIHtcbiAgICB2YXIgY2h1bmsgPSBzdGF0ZS5kZWNvZGVyLmVuZCgpO1xuICAgIGlmIChjaHVuayAmJiBjaHVuay5sZW5ndGgpIHtcbiAgICAgIHN0YXRlLmJ1ZmZlci5wdXNoKGNodW5rKTtcbiAgICAgIHN0YXRlLmxlbmd0aCArPSBzdGF0ZS5vYmplY3RNb2RlID8gMSA6IGNodW5rLmxlbmd0aDtcbiAgICB9XG4gIH1cbiAgc3RhdGUuZW5kZWQgPSB0cnVlO1xuXG4gIC8vIGVtaXQgJ3JlYWRhYmxlJyBub3cgdG8gbWFrZSBzdXJlIGl0IGdldHMgcGlja2VkIHVwLlxuICBlbWl0UmVhZGFibGUoc3RyZWFtKTtcbn1cblxuLy8gRG9uJ3QgZW1pdCByZWFkYWJsZSByaWdodCBhd2F5IGluIHN5bmMgbW9kZSwgYmVjYXVzZSB0aGlzIGNhbiB0cmlnZ2VyXG4vLyBhbm90aGVyIHJlYWQoKSBjYWxsID0+IHN0YWNrIG92ZXJmbG93LiAgVGhpcyB3YXksIGl0IG1pZ2h0IHRyaWdnZXJcbi8vIGEgbmV4dFRpY2sgcmVjdXJzaW9uIHdhcm5pbmcsIGJ1dCB0aGF0J3Mgbm90IHNvIGJhZC5cbmZ1bmN0aW9uIGVtaXRSZWFkYWJsZShzdHJlYW0pIHtcbiAgdmFyIHN0YXRlID0gc3RyZWFtLl9yZWFkYWJsZVN0YXRlO1xuICBzdGF0ZS5uZWVkUmVhZGFibGUgPSBmYWxzZTtcbiAgaWYgKCFzdGF0ZS5lbWl0dGVkUmVhZGFibGUpIHtcbiAgICBkZWJ1ZygnZW1pdFJlYWRhYmxlJywgc3RhdGUuZmxvd2luZyk7XG4gICAgc3RhdGUuZW1pdHRlZFJlYWRhYmxlID0gdHJ1ZTtcbiAgICBpZiAoc3RhdGUuc3luYykgcG5hLm5leHRUaWNrKGVtaXRSZWFkYWJsZV8sIHN0cmVhbSk7ZWxzZSBlbWl0UmVhZGFibGVfKHN0cmVhbSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZW1pdFJlYWRhYmxlXyhzdHJlYW0pIHtcbiAgZGVidWcoJ2VtaXQgcmVhZGFibGUnKTtcbiAgc3RyZWFtLmVtaXQoJ3JlYWRhYmxlJyk7XG4gIGZsb3coc3RyZWFtKTtcbn1cblxuLy8gYXQgdGhpcyBwb2ludCwgdGhlIHVzZXIgaGFzIHByZXN1bWFibHkgc2VlbiB0aGUgJ3JlYWRhYmxlJyBldmVudCxcbi8vIGFuZCBjYWxsZWQgcmVhZCgpIHRvIGNvbnN1bWUgc29tZSBkYXRhLiAgdGhhdCBtYXkgaGF2ZSB0cmlnZ2VyZWRcbi8vIGluIHR1cm4gYW5vdGhlciBfcmVhZChuKSBjYWxsLCBpbiB3aGljaCBjYXNlIHJlYWRpbmcgPSB0cnVlIGlmXG4vLyBpdCdzIGluIHByb2dyZXNzLlxuLy8gSG93ZXZlciwgaWYgd2UncmUgbm90IGVuZGVkLCBvciByZWFkaW5nLCBhbmQgdGhlIGxlbmd0aCA8IGh3bSxcbi8vIHRoZW4gZ28gYWhlYWQgYW5kIHRyeSB0byByZWFkIHNvbWUgbW9yZSBwcmVlbXB0aXZlbHkuXG5mdW5jdGlvbiBtYXliZVJlYWRNb3JlKHN0cmVhbSwgc3RhdGUpIHtcbiAgaWYgKCFzdGF0ZS5yZWFkaW5nTW9yZSkge1xuICAgIHN0YXRlLnJlYWRpbmdNb3JlID0gdHJ1ZTtcbiAgICBwbmEubmV4dFRpY2sobWF5YmVSZWFkTW9yZV8sIHN0cmVhbSwgc3RhdGUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIG1heWJlUmVhZE1vcmVfKHN0cmVhbSwgc3RhdGUpIHtcbiAgdmFyIGxlbiA9IHN0YXRlLmxlbmd0aDtcbiAgd2hpbGUgKCFzdGF0ZS5yZWFkaW5nICYmICFzdGF0ZS5mbG93aW5nICYmICFzdGF0ZS5lbmRlZCAmJiBzdGF0ZS5sZW5ndGggPCBzdGF0ZS5oaWdoV2F0ZXJNYXJrKSB7XG4gICAgZGVidWcoJ21heWJlUmVhZE1vcmUgcmVhZCAwJyk7XG4gICAgc3RyZWFtLnJlYWQoMCk7XG4gICAgaWYgKGxlbiA9PT0gc3RhdGUubGVuZ3RoKVxuICAgICAgLy8gZGlkbid0IGdldCBhbnkgZGF0YSwgc3RvcCBzcGlubmluZy5cbiAgICAgIGJyZWFrO2Vsc2UgbGVuID0gc3RhdGUubGVuZ3RoO1xuICB9XG4gIHN0YXRlLnJlYWRpbmdNb3JlID0gZmFsc2U7XG59XG5cbi8vIGFic3RyYWN0IG1ldGhvZC4gIHRvIGJlIG92ZXJyaWRkZW4gaW4gc3BlY2lmaWMgaW1wbGVtZW50YXRpb24gY2xhc3Nlcy5cbi8vIGNhbGwgY2IoZXIsIGRhdGEpIHdoZXJlIGRhdGEgaXMgPD0gbiBpbiBsZW5ndGguXG4vLyBmb3IgdmlydHVhbCAobm9uLXN0cmluZywgbm9uLWJ1ZmZlcikgc3RyZWFtcywgXCJsZW5ndGhcIiBpcyBzb21ld2hhdFxuLy8gYXJiaXRyYXJ5LCBhbmQgcGVyaGFwcyBub3QgdmVyeSBtZWFuaW5nZnVsLlxuUmVhZGFibGUucHJvdG90eXBlLl9yZWFkID0gZnVuY3Rpb24gKG4pIHtcbiAgdGhpcy5lbWl0KCdlcnJvcicsIG5ldyBFcnJvcignX3JlYWQoKSBpcyBub3QgaW1wbGVtZW50ZWQnKSk7XG59O1xuXG5SZWFkYWJsZS5wcm90b3R5cGUucGlwZSA9IGZ1bmN0aW9uIChkZXN0LCBwaXBlT3B0cykge1xuICB2YXIgc3JjID0gdGhpcztcbiAgdmFyIHN0YXRlID0gdGhpcy5fcmVhZGFibGVTdGF0ZTtcblxuICBzd2l0Y2ggKHN0YXRlLnBpcGVzQ291bnQpIHtcbiAgICBjYXNlIDA6XG4gICAgICBzdGF0ZS5waXBlcyA9IGRlc3Q7XG4gICAgICBicmVhaztcbiAgICBjYXNlIDE6XG4gICAgICBzdGF0ZS5waXBlcyA9IFtzdGF0ZS5waXBlcywgZGVzdF07XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgc3RhdGUucGlwZXMucHVzaChkZXN0KTtcbiAgICAgIGJyZWFrO1xuICB9XG4gIHN0YXRlLnBpcGVzQ291bnQgKz0gMTtcbiAgZGVidWcoJ3BpcGUgY291bnQ9JWQgb3B0cz0laicsIHN0YXRlLnBpcGVzQ291bnQsIHBpcGVPcHRzKTtcblxuICB2YXIgZG9FbmQgPSAoIXBpcGVPcHRzIHx8IHBpcGVPcHRzLmVuZCAhPT0gZmFsc2UpICYmIGRlc3QgIT09IHByb2Nlc3Muc3Rkb3V0ICYmIGRlc3QgIT09IHByb2Nlc3Muc3RkZXJyO1xuXG4gIHZhciBlbmRGbiA9IGRvRW5kID8gb25lbmQgOiB1bnBpcGU7XG4gIGlmIChzdGF0ZS5lbmRFbWl0dGVkKSBwbmEubmV4dFRpY2soZW5kRm4pO2Vsc2Ugc3JjLm9uY2UoJ2VuZCcsIGVuZEZuKTtcblxuICBkZXN0Lm9uKCd1bnBpcGUnLCBvbnVucGlwZSk7XG4gIGZ1bmN0aW9uIG9udW5waXBlKHJlYWRhYmxlLCB1bnBpcGVJbmZvKSB7XG4gICAgZGVidWcoJ29udW5waXBlJyk7XG4gICAgaWYgKHJlYWRhYmxlID09PSBzcmMpIHtcbiAgICAgIGlmICh1bnBpcGVJbmZvICYmIHVucGlwZUluZm8uaGFzVW5waXBlZCA9PT0gZmFsc2UpIHtcbiAgICAgICAgdW5waXBlSW5mby5oYXNVbnBpcGVkID0gdHJ1ZTtcbiAgICAgICAgY2xlYW51cCgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIG9uZW5kKCkge1xuICAgIGRlYnVnKCdvbmVuZCcpO1xuICAgIGRlc3QuZW5kKCk7XG4gIH1cblxuICAvLyB3aGVuIHRoZSBkZXN0IGRyYWlucywgaXQgcmVkdWNlcyB0aGUgYXdhaXREcmFpbiBjb3VudGVyXG4gIC8vIG9uIHRoZSBzb3VyY2UuICBUaGlzIHdvdWxkIGJlIG1vcmUgZWxlZ2FudCB3aXRoIGEgLm9uY2UoKVxuICAvLyBoYW5kbGVyIGluIGZsb3coKSwgYnV0IGFkZGluZyBhbmQgcmVtb3ZpbmcgcmVwZWF0ZWRseSBpc1xuICAvLyB0b28gc2xvdy5cbiAgdmFyIG9uZHJhaW4gPSBwaXBlT25EcmFpbihzcmMpO1xuICBkZXN0Lm9uKCdkcmFpbicsIG9uZHJhaW4pO1xuXG4gIHZhciBjbGVhbmVkVXAgPSBmYWxzZTtcbiAgZnVuY3Rpb24gY2xlYW51cCgpIHtcbiAgICBkZWJ1ZygnY2xlYW51cCcpO1xuICAgIC8vIGNsZWFudXAgZXZlbnQgaGFuZGxlcnMgb25jZSB0aGUgcGlwZSBpcyBicm9rZW5cbiAgICBkZXN0LnJlbW92ZUxpc3RlbmVyKCdjbG9zZScsIG9uY2xvc2UpO1xuICAgIGRlc3QucmVtb3ZlTGlzdGVuZXIoJ2ZpbmlzaCcsIG9uZmluaXNoKTtcbiAgICBkZXN0LnJlbW92ZUxpc3RlbmVyKCdkcmFpbicsIG9uZHJhaW4pO1xuICAgIGRlc3QucmVtb3ZlTGlzdGVuZXIoJ2Vycm9yJywgb25lcnJvcik7XG4gICAgZGVzdC5yZW1vdmVMaXN0ZW5lcigndW5waXBlJywgb251bnBpcGUpO1xuICAgIHNyYy5yZW1vdmVMaXN0ZW5lcignZW5kJywgb25lbmQpO1xuICAgIHNyYy5yZW1vdmVMaXN0ZW5lcignZW5kJywgdW5waXBlKTtcbiAgICBzcmMucmVtb3ZlTGlzdGVuZXIoJ2RhdGEnLCBvbmRhdGEpO1xuXG4gICAgY2xlYW5lZFVwID0gdHJ1ZTtcblxuICAgIC8vIGlmIHRoZSByZWFkZXIgaXMgd2FpdGluZyBmb3IgYSBkcmFpbiBldmVudCBmcm9tIHRoaXNcbiAgICAvLyBzcGVjaWZpYyB3cml0ZXIsIHRoZW4gaXQgd291bGQgY2F1c2UgaXQgdG8gbmV2ZXIgc3RhcnRcbiAgICAvLyBmbG93aW5nIGFnYWluLlxuICAgIC8vIFNvLCBpZiB0aGlzIGlzIGF3YWl0aW5nIGEgZHJhaW4sIHRoZW4gd2UganVzdCBjYWxsIGl0IG5vdy5cbiAgICAvLyBJZiB3ZSBkb24ndCBrbm93LCB0aGVuIGFzc3VtZSB0aGF0IHdlIGFyZSB3YWl0aW5nIGZvciBvbmUuXG4gICAgaWYgKHN0YXRlLmF3YWl0RHJhaW4gJiYgKCFkZXN0Ll93cml0YWJsZVN0YXRlIHx8IGRlc3QuX3dyaXRhYmxlU3RhdGUubmVlZERyYWluKSkgb25kcmFpbigpO1xuICB9XG5cbiAgLy8gSWYgdGhlIHVzZXIgcHVzaGVzIG1vcmUgZGF0YSB3aGlsZSB3ZSdyZSB3cml0aW5nIHRvIGRlc3QgdGhlbiB3ZSdsbCBlbmQgdXBcbiAgLy8gaW4gb25kYXRhIGFnYWluLiBIb3dldmVyLCB3ZSBvbmx5IHdhbnQgdG8gaW5jcmVhc2UgYXdhaXREcmFpbiBvbmNlIGJlY2F1c2VcbiAgLy8gZGVzdCB3aWxsIG9ubHkgZW1pdCBvbmUgJ2RyYWluJyBldmVudCBmb3IgdGhlIG11bHRpcGxlIHdyaXRlcy5cbiAgLy8gPT4gSW50cm9kdWNlIGEgZ3VhcmQgb24gaW5jcmVhc2luZyBhd2FpdERyYWluLlxuICB2YXIgaW5jcmVhc2VkQXdhaXREcmFpbiA9IGZhbHNlO1xuICBzcmMub24oJ2RhdGEnLCBvbmRhdGEpO1xuICBmdW5jdGlvbiBvbmRhdGEoY2h1bmspIHtcbiAgICBkZWJ1Zygnb25kYXRhJyk7XG4gICAgaW5jcmVhc2VkQXdhaXREcmFpbiA9IGZhbHNlO1xuICAgIHZhciByZXQgPSBkZXN0LndyaXRlKGNodW5rKTtcbiAgICBpZiAoZmFsc2UgPT09IHJldCAmJiAhaW5jcmVhc2VkQXdhaXREcmFpbikge1xuICAgICAgLy8gSWYgdGhlIHVzZXIgdW5waXBlZCBkdXJpbmcgYGRlc3Qud3JpdGUoKWAsIGl0IGlzIHBvc3NpYmxlXG4gICAgICAvLyB0byBnZXQgc3R1Y2sgaW4gYSBwZXJtYW5lbnRseSBwYXVzZWQgc3RhdGUgaWYgdGhhdCB3cml0ZVxuICAgICAgLy8gYWxzbyByZXR1cm5lZCBmYWxzZS5cbiAgICAgIC8vID0+IENoZWNrIHdoZXRoZXIgYGRlc3RgIGlzIHN0aWxsIGEgcGlwaW5nIGRlc3RpbmF0aW9uLlxuICAgICAgaWYgKChzdGF0ZS5waXBlc0NvdW50ID09PSAxICYmIHN0YXRlLnBpcGVzID09PSBkZXN0IHx8IHN0YXRlLnBpcGVzQ291bnQgPiAxICYmIGluZGV4T2Yoc3RhdGUucGlwZXMsIGRlc3QpICE9PSAtMSkgJiYgIWNsZWFuZWRVcCkge1xuICAgICAgICBkZWJ1ZygnZmFsc2Ugd3JpdGUgcmVzcG9uc2UsIHBhdXNlJywgc3JjLl9yZWFkYWJsZVN0YXRlLmF3YWl0RHJhaW4pO1xuICAgICAgICBzcmMuX3JlYWRhYmxlU3RhdGUuYXdhaXREcmFpbisrO1xuICAgICAgICBpbmNyZWFzZWRBd2FpdERyYWluID0gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIHNyYy5wYXVzZSgpO1xuICAgIH1cbiAgfVxuXG4gIC8vIGlmIHRoZSBkZXN0IGhhcyBhbiBlcnJvciwgdGhlbiBzdG9wIHBpcGluZyBpbnRvIGl0LlxuICAvLyBob3dldmVyLCBkb24ndCBzdXBwcmVzcyB0aGUgdGhyb3dpbmcgYmVoYXZpb3IgZm9yIHRoaXMuXG4gIGZ1bmN0aW9uIG9uZXJyb3IoZXIpIHtcbiAgICBkZWJ1Zygnb25lcnJvcicsIGVyKTtcbiAgICB1bnBpcGUoKTtcbiAgICBkZXN0LnJlbW92ZUxpc3RlbmVyKCdlcnJvcicsIG9uZXJyb3IpO1xuICAgIGlmIChFRWxpc3RlbmVyQ291bnQoZGVzdCwgJ2Vycm9yJykgPT09IDApIGRlc3QuZW1pdCgnZXJyb3InLCBlcik7XG4gIH1cblxuICAvLyBNYWtlIHN1cmUgb3VyIGVycm9yIGhhbmRsZXIgaXMgYXR0YWNoZWQgYmVmb3JlIHVzZXJsYW5kIG9uZXMuXG4gIHByZXBlbmRMaXN0ZW5lcihkZXN0LCAnZXJyb3InLCBvbmVycm9yKTtcblxuICAvLyBCb3RoIGNsb3NlIGFuZCBmaW5pc2ggc2hvdWxkIHRyaWdnZXIgdW5waXBlLCBidXQgb25seSBvbmNlLlxuICBmdW5jdGlvbiBvbmNsb3NlKCkge1xuICAgIGRlc3QucmVtb3ZlTGlzdGVuZXIoJ2ZpbmlzaCcsIG9uZmluaXNoKTtcbiAgICB1bnBpcGUoKTtcbiAgfVxuICBkZXN0Lm9uY2UoJ2Nsb3NlJywgb25jbG9zZSk7XG4gIGZ1bmN0aW9uIG9uZmluaXNoKCkge1xuICAgIGRlYnVnKCdvbmZpbmlzaCcpO1xuICAgIGRlc3QucmVtb3ZlTGlzdGVuZXIoJ2Nsb3NlJywgb25jbG9zZSk7XG4gICAgdW5waXBlKCk7XG4gIH1cbiAgZGVzdC5vbmNlKCdmaW5pc2gnLCBvbmZpbmlzaCk7XG5cbiAgZnVuY3Rpb24gdW5waXBlKCkge1xuICAgIGRlYnVnKCd1bnBpcGUnKTtcbiAgICBzcmMudW5waXBlKGRlc3QpO1xuICB9XG5cbiAgLy8gdGVsbCB0aGUgZGVzdCB0aGF0IGl0J3MgYmVpbmcgcGlwZWQgdG9cbiAgZGVzdC5lbWl0KCdwaXBlJywgc3JjKTtcblxuICAvLyBzdGFydCB0aGUgZmxvdyBpZiBpdCBoYXNuJ3QgYmVlbiBzdGFydGVkIGFscmVhZHkuXG4gIGlmICghc3RhdGUuZmxvd2luZykge1xuICAgIGRlYnVnKCdwaXBlIHJlc3VtZScpO1xuICAgIHNyYy5yZXN1bWUoKTtcbiAgfVxuXG4gIHJldHVybiBkZXN0O1xufTtcblxuZnVuY3Rpb24gcGlwZU9uRHJhaW4oc3JjKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHN0YXRlID0gc3JjLl9yZWFkYWJsZVN0YXRlO1xuICAgIGRlYnVnKCdwaXBlT25EcmFpbicsIHN0YXRlLmF3YWl0RHJhaW4pO1xuICAgIGlmIChzdGF0ZS5hd2FpdERyYWluKSBzdGF0ZS5hd2FpdERyYWluLS07XG4gICAgaWYgKHN0YXRlLmF3YWl0RHJhaW4gPT09IDAgJiYgRUVsaXN0ZW5lckNvdW50KHNyYywgJ2RhdGEnKSkge1xuICAgICAgc3RhdGUuZmxvd2luZyA9IHRydWU7XG4gICAgICBmbG93KHNyYyk7XG4gICAgfVxuICB9O1xufVxuXG5SZWFkYWJsZS5wcm90b3R5cGUudW5waXBlID0gZnVuY3Rpb24gKGRlc3QpIHtcbiAgdmFyIHN0YXRlID0gdGhpcy5fcmVhZGFibGVTdGF0ZTtcbiAgdmFyIHVucGlwZUluZm8gPSB7IGhhc1VucGlwZWQ6IGZhbHNlIH07XG5cbiAgLy8gaWYgd2UncmUgbm90IHBpcGluZyBhbnl3aGVyZSwgdGhlbiBkbyBub3RoaW5nLlxuICBpZiAoc3RhdGUucGlwZXNDb3VudCA9PT0gMCkgcmV0dXJuIHRoaXM7XG5cbiAgLy8ganVzdCBvbmUgZGVzdGluYXRpb24uICBtb3N0IGNvbW1vbiBjYXNlLlxuICBpZiAoc3RhdGUucGlwZXNDb3VudCA9PT0gMSkge1xuICAgIC8vIHBhc3NlZCBpbiBvbmUsIGJ1dCBpdCdzIG5vdCB0aGUgcmlnaHQgb25lLlxuICAgIGlmIChkZXN0ICYmIGRlc3QgIT09IHN0YXRlLnBpcGVzKSByZXR1cm4gdGhpcztcblxuICAgIGlmICghZGVzdCkgZGVzdCA9IHN0YXRlLnBpcGVzO1xuXG4gICAgLy8gZ290IGEgbWF0Y2guXG4gICAgc3RhdGUucGlwZXMgPSBudWxsO1xuICAgIHN0YXRlLnBpcGVzQ291bnQgPSAwO1xuICAgIHN0YXRlLmZsb3dpbmcgPSBmYWxzZTtcbiAgICBpZiAoZGVzdCkgZGVzdC5lbWl0KCd1bnBpcGUnLCB0aGlzLCB1bnBpcGVJbmZvKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8vIHNsb3cgY2FzZS4gbXVsdGlwbGUgcGlwZSBkZXN0aW5hdGlvbnMuXG5cbiAgaWYgKCFkZXN0KSB7XG4gICAgLy8gcmVtb3ZlIGFsbC5cbiAgICB2YXIgZGVzdHMgPSBzdGF0ZS5waXBlcztcbiAgICB2YXIgbGVuID0gc3RhdGUucGlwZXNDb3VudDtcbiAgICBzdGF0ZS5waXBlcyA9IG51bGw7XG4gICAgc3RhdGUucGlwZXNDb3VudCA9IDA7XG4gICAgc3RhdGUuZmxvd2luZyA9IGZhbHNlO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuICAgICAgZGVzdHNbaV0uZW1pdCgndW5waXBlJywgdGhpcywgdW5waXBlSW5mbyk7XG4gICAgfXJldHVybiB0aGlzO1xuICB9XG5cbiAgLy8gdHJ5IHRvIGZpbmQgdGhlIHJpZ2h0IG9uZS5cbiAgdmFyIGluZGV4ID0gaW5kZXhPZihzdGF0ZS5waXBlcywgZGVzdCk7XG4gIGlmIChpbmRleCA9PT0gLTEpIHJldHVybiB0aGlzO1xuXG4gIHN0YXRlLnBpcGVzLnNwbGljZShpbmRleCwgMSk7XG4gIHN0YXRlLnBpcGVzQ291bnQgLT0gMTtcbiAgaWYgKHN0YXRlLnBpcGVzQ291bnQgPT09IDEpIHN0YXRlLnBpcGVzID0gc3RhdGUucGlwZXNbMF07XG5cbiAgZGVzdC5lbWl0KCd1bnBpcGUnLCB0aGlzLCB1bnBpcGVJbmZvKTtcblxuICByZXR1cm4gdGhpcztcbn07XG5cbi8vIHNldCB1cCBkYXRhIGV2ZW50cyBpZiB0aGV5IGFyZSBhc2tlZCBmb3Jcbi8vIEVuc3VyZSByZWFkYWJsZSBsaXN0ZW5lcnMgZXZlbnR1YWxseSBnZXQgc29tZXRoaW5nXG5SZWFkYWJsZS5wcm90b3R5cGUub24gPSBmdW5jdGlvbiAoZXYsIGZuKSB7XG4gIHZhciByZXMgPSBTdHJlYW0ucHJvdG90eXBlLm9uLmNhbGwodGhpcywgZXYsIGZuKTtcblxuICBpZiAoZXYgPT09ICdkYXRhJykge1xuICAgIC8vIFN0YXJ0IGZsb3dpbmcgb24gbmV4dCB0aWNrIGlmIHN0cmVhbSBpc24ndCBleHBsaWNpdGx5IHBhdXNlZFxuICAgIGlmICh0aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmcgIT09IGZhbHNlKSB0aGlzLnJlc3VtZSgpO1xuICB9IGVsc2UgaWYgKGV2ID09PSAncmVhZGFibGUnKSB7XG4gICAgdmFyIHN0YXRlID0gdGhpcy5fcmVhZGFibGVTdGF0ZTtcbiAgICBpZiAoIXN0YXRlLmVuZEVtaXR0ZWQgJiYgIXN0YXRlLnJlYWRhYmxlTGlzdGVuaW5nKSB7XG4gICAgICBzdGF0ZS5yZWFkYWJsZUxpc3RlbmluZyA9IHN0YXRlLm5lZWRSZWFkYWJsZSA9IHRydWU7XG4gICAgICBzdGF0ZS5lbWl0dGVkUmVhZGFibGUgPSBmYWxzZTtcbiAgICAgIGlmICghc3RhdGUucmVhZGluZykge1xuICAgICAgICBwbmEubmV4dFRpY2soblJlYWRpbmdOZXh0VGljaywgdGhpcyk7XG4gICAgICB9IGVsc2UgaWYgKHN0YXRlLmxlbmd0aCkge1xuICAgICAgICBlbWl0UmVhZGFibGUodGhpcyk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlcztcbn07XG5SZWFkYWJsZS5wcm90b3R5cGUuYWRkTGlzdGVuZXIgPSBSZWFkYWJsZS5wcm90b3R5cGUub247XG5cbmZ1bmN0aW9uIG5SZWFkaW5nTmV4dFRpY2soc2VsZikge1xuICBkZWJ1ZygncmVhZGFibGUgbmV4dHRpY2sgcmVhZCAwJyk7XG4gIHNlbGYucmVhZCgwKTtcbn1cblxuLy8gcGF1c2UoKSBhbmQgcmVzdW1lKCkgYXJlIHJlbW5hbnRzIG9mIHRoZSBsZWdhY3kgcmVhZGFibGUgc3RyZWFtIEFQSVxuLy8gSWYgdGhlIHVzZXIgdXNlcyB0aGVtLCB0aGVuIHN3aXRjaCBpbnRvIG9sZCBtb2RlLlxuUmVhZGFibGUucHJvdG90eXBlLnJlc3VtZSA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHN0YXRlID0gdGhpcy5fcmVhZGFibGVTdGF0ZTtcbiAgaWYgKCFzdGF0ZS5mbG93aW5nKSB7XG4gICAgZGVidWcoJ3Jlc3VtZScpO1xuICAgIHN0YXRlLmZsb3dpbmcgPSB0cnVlO1xuICAgIHJlc3VtZSh0aGlzLCBzdGF0ZSk7XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5mdW5jdGlvbiByZXN1bWUoc3RyZWFtLCBzdGF0ZSkge1xuICBpZiAoIXN0YXRlLnJlc3VtZVNjaGVkdWxlZCkge1xuICAgIHN0YXRlLnJlc3VtZVNjaGVkdWxlZCA9IHRydWU7XG4gICAgcG5hLm5leHRUaWNrKHJlc3VtZV8sIHN0cmVhbSwgc3RhdGUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJlc3VtZV8oc3RyZWFtLCBzdGF0ZSkge1xuICBpZiAoIXN0YXRlLnJlYWRpbmcpIHtcbiAgICBkZWJ1ZygncmVzdW1lIHJlYWQgMCcpO1xuICAgIHN0cmVhbS5yZWFkKDApO1xuICB9XG5cbiAgc3RhdGUucmVzdW1lU2NoZWR1bGVkID0gZmFsc2U7XG4gIHN0YXRlLmF3YWl0RHJhaW4gPSAwO1xuICBzdHJlYW0uZW1pdCgncmVzdW1lJyk7XG4gIGZsb3coc3RyZWFtKTtcbiAgaWYgKHN0YXRlLmZsb3dpbmcgJiYgIXN0YXRlLnJlYWRpbmcpIHN0cmVhbS5yZWFkKDApO1xufVxuXG5SZWFkYWJsZS5wcm90b3R5cGUucGF1c2UgPSBmdW5jdGlvbiAoKSB7XG4gIGRlYnVnKCdjYWxsIHBhdXNlIGZsb3dpbmc9JWonLCB0aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmcpO1xuICBpZiAoZmFsc2UgIT09IHRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZykge1xuICAgIGRlYnVnKCdwYXVzZScpO1xuICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZyA9IGZhbHNlO1xuICAgIHRoaXMuZW1pdCgncGF1c2UnKTtcbiAgfVxuICByZXR1cm4gdGhpcztcbn07XG5cbmZ1bmN0aW9uIGZsb3coc3RyZWFtKSB7XG4gIHZhciBzdGF0ZSA9IHN0cmVhbS5fcmVhZGFibGVTdGF0ZTtcbiAgZGVidWcoJ2Zsb3cnLCBzdGF0ZS5mbG93aW5nKTtcbiAgd2hpbGUgKHN0YXRlLmZsb3dpbmcgJiYgc3RyZWFtLnJlYWQoKSAhPT0gbnVsbCkge31cbn1cblxuLy8gd3JhcCBhbiBvbGQtc3R5bGUgc3RyZWFtIGFzIHRoZSBhc3luYyBkYXRhIHNvdXJjZS5cbi8vIFRoaXMgaXMgKm5vdCogcGFydCBvZiB0aGUgcmVhZGFibGUgc3RyZWFtIGludGVyZmFjZS5cbi8vIEl0IGlzIGFuIHVnbHkgdW5mb3J0dW5hdGUgbWVzcyBvZiBoaXN0b3J5LlxuUmVhZGFibGUucHJvdG90eXBlLndyYXAgPSBmdW5jdGlvbiAoc3RyZWFtKSB7XG4gIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgdmFyIHN0YXRlID0gdGhpcy5fcmVhZGFibGVTdGF0ZTtcbiAgdmFyIHBhdXNlZCA9IGZhbHNlO1xuXG4gIHN0cmVhbS5vbignZW5kJywgZnVuY3Rpb24gKCkge1xuICAgIGRlYnVnKCd3cmFwcGVkIGVuZCcpO1xuICAgIGlmIChzdGF0ZS5kZWNvZGVyICYmICFzdGF0ZS5lbmRlZCkge1xuICAgICAgdmFyIGNodW5rID0gc3RhdGUuZGVjb2Rlci5lbmQoKTtcbiAgICAgIGlmIChjaHVuayAmJiBjaHVuay5sZW5ndGgpIF90aGlzLnB1c2goY2h1bmspO1xuICAgIH1cblxuICAgIF90aGlzLnB1c2gobnVsbCk7XG4gIH0pO1xuXG4gIHN0cmVhbS5vbignZGF0YScsIGZ1bmN0aW9uIChjaHVuaykge1xuICAgIGRlYnVnKCd3cmFwcGVkIGRhdGEnKTtcbiAgICBpZiAoc3RhdGUuZGVjb2RlcikgY2h1bmsgPSBzdGF0ZS5kZWNvZGVyLndyaXRlKGNodW5rKTtcblxuICAgIC8vIGRvbid0IHNraXAgb3ZlciBmYWxzeSB2YWx1ZXMgaW4gb2JqZWN0TW9kZVxuICAgIGlmIChzdGF0ZS5vYmplY3RNb2RlICYmIChjaHVuayA9PT0gbnVsbCB8fCBjaHVuayA9PT0gdW5kZWZpbmVkKSkgcmV0dXJuO2Vsc2UgaWYgKCFzdGF0ZS5vYmplY3RNb2RlICYmICghY2h1bmsgfHwgIWNodW5rLmxlbmd0aCkpIHJldHVybjtcblxuICAgIHZhciByZXQgPSBfdGhpcy5wdXNoKGNodW5rKTtcbiAgICBpZiAoIXJldCkge1xuICAgICAgcGF1c2VkID0gdHJ1ZTtcbiAgICAgIHN0cmVhbS5wYXVzZSgpO1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gcHJveHkgYWxsIHRoZSBvdGhlciBtZXRob2RzLlxuICAvLyBpbXBvcnRhbnQgd2hlbiB3cmFwcGluZyBmaWx0ZXJzIGFuZCBkdXBsZXhlcy5cbiAgZm9yICh2YXIgaSBpbiBzdHJlYW0pIHtcbiAgICBpZiAodGhpc1tpXSA9PT0gdW5kZWZpbmVkICYmIHR5cGVvZiBzdHJlYW1baV0gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRoaXNbaV0gPSBmdW5jdGlvbiAobWV0aG9kKSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIHN0cmVhbVttZXRob2RdLmFwcGx5KHN0cmVhbSwgYXJndW1lbnRzKTtcbiAgICAgICAgfTtcbiAgICAgIH0oaSk7XG4gICAgfVxuICB9XG5cbiAgLy8gcHJveHkgY2VydGFpbiBpbXBvcnRhbnQgZXZlbnRzLlxuICBmb3IgKHZhciBuID0gMDsgbiA8IGtQcm94eUV2ZW50cy5sZW5ndGg7IG4rKykge1xuICAgIHN0cmVhbS5vbihrUHJveHlFdmVudHNbbl0sIHRoaXMuZW1pdC5iaW5kKHRoaXMsIGtQcm94eUV2ZW50c1tuXSkpO1xuICB9XG5cbiAgLy8gd2hlbiB3ZSB0cnkgdG8gY29uc3VtZSBzb21lIG1vcmUgYnl0ZXMsIHNpbXBseSB1bnBhdXNlIHRoZVxuICAvLyB1bmRlcmx5aW5nIHN0cmVhbS5cbiAgdGhpcy5fcmVhZCA9IGZ1bmN0aW9uIChuKSB7XG4gICAgZGVidWcoJ3dyYXBwZWQgX3JlYWQnLCBuKTtcbiAgICBpZiAocGF1c2VkKSB7XG4gICAgICBwYXVzZWQgPSBmYWxzZTtcbiAgICAgIHN0cmVhbS5yZXN1bWUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoUmVhZGFibGUucHJvdG90eXBlLCAncmVhZGFibGVIaWdoV2F0ZXJNYXJrJywge1xuICAvLyBtYWtpbmcgaXQgZXhwbGljaXQgdGhpcyBwcm9wZXJ0eSBpcyBub3QgZW51bWVyYWJsZVxuICAvLyBiZWNhdXNlIG90aGVyd2lzZSBzb21lIHByb3RvdHlwZSBtYW5pcHVsYXRpb24gaW5cbiAgLy8gdXNlcmxhbmQgd2lsbCBmYWlsXG4gIGVudW1lcmFibGU6IGZhbHNlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy5fcmVhZGFibGVTdGF0ZS5oaWdoV2F0ZXJNYXJrO1xuICB9XG59KTtcblxuLy8gZXhwb3NlZCBmb3IgdGVzdGluZyBwdXJwb3NlcyBvbmx5LlxuUmVhZGFibGUuX2Zyb21MaXN0ID0gZnJvbUxpc3Q7XG5cbi8vIFBsdWNrIG9mZiBuIGJ5dGVzIGZyb20gYW4gYXJyYXkgb2YgYnVmZmVycy5cbi8vIExlbmd0aCBpcyB0aGUgY29tYmluZWQgbGVuZ3RocyBvZiBhbGwgdGhlIGJ1ZmZlcnMgaW4gdGhlIGxpc3QuXG4vLyBUaGlzIGZ1bmN0aW9uIGlzIGRlc2lnbmVkIHRvIGJlIGlubGluYWJsZSwgc28gcGxlYXNlIHRha2UgY2FyZSB3aGVuIG1ha2luZ1xuLy8gY2hhbmdlcyB0byB0aGUgZnVuY3Rpb24gYm9keS5cbmZ1bmN0aW9uIGZyb21MaXN0KG4sIHN0YXRlKSB7XG4gIC8vIG5vdGhpbmcgYnVmZmVyZWRcbiAgaWYgKHN0YXRlLmxlbmd0aCA9PT0gMCkgcmV0dXJuIG51bGw7XG5cbiAgdmFyIHJldDtcbiAgaWYgKHN0YXRlLm9iamVjdE1vZGUpIHJldCA9IHN0YXRlLmJ1ZmZlci5zaGlmdCgpO2Vsc2UgaWYgKCFuIHx8IG4gPj0gc3RhdGUubGVuZ3RoKSB7XG4gICAgLy8gcmVhZCBpdCBhbGwsIHRydW5jYXRlIHRoZSBsaXN0XG4gICAgaWYgKHN0YXRlLmRlY29kZXIpIHJldCA9IHN0YXRlLmJ1ZmZlci5qb2luKCcnKTtlbHNlIGlmIChzdGF0ZS5idWZmZXIubGVuZ3RoID09PSAxKSByZXQgPSBzdGF0ZS5idWZmZXIuaGVhZC5kYXRhO2Vsc2UgcmV0ID0gc3RhdGUuYnVmZmVyLmNvbmNhdChzdGF0ZS5sZW5ndGgpO1xuICAgIHN0YXRlLmJ1ZmZlci5jbGVhcigpO1xuICB9IGVsc2Uge1xuICAgIC8vIHJlYWQgcGFydCBvZiBsaXN0XG4gICAgcmV0ID0gZnJvbUxpc3RQYXJ0aWFsKG4sIHN0YXRlLmJ1ZmZlciwgc3RhdGUuZGVjb2Rlcik7XG4gIH1cblxuICByZXR1cm4gcmV0O1xufVxuXG4vLyBFeHRyYWN0cyBvbmx5IGVub3VnaCBidWZmZXJlZCBkYXRhIHRvIHNhdGlzZnkgdGhlIGFtb3VudCByZXF1ZXN0ZWQuXG4vLyBUaGlzIGZ1bmN0aW9uIGlzIGRlc2lnbmVkIHRvIGJlIGlubGluYWJsZSwgc28gcGxlYXNlIHRha2UgY2FyZSB3aGVuIG1ha2luZ1xuLy8gY2hhbmdlcyB0byB0aGUgZnVuY3Rpb24gYm9keS5cbmZ1bmN0aW9uIGZyb21MaXN0UGFydGlhbChuLCBsaXN0LCBoYXNTdHJpbmdzKSB7XG4gIHZhciByZXQ7XG4gIGlmIChuIDwgbGlzdC5oZWFkLmRhdGEubGVuZ3RoKSB7XG4gICAgLy8gc2xpY2UgaXMgdGhlIHNhbWUgZm9yIGJ1ZmZlcnMgYW5kIHN0cmluZ3NcbiAgICByZXQgPSBsaXN0LmhlYWQuZGF0YS5zbGljZSgwLCBuKTtcbiAgICBsaXN0LmhlYWQuZGF0YSA9IGxpc3QuaGVhZC5kYXRhLnNsaWNlKG4pO1xuICB9IGVsc2UgaWYgKG4gPT09IGxpc3QuaGVhZC5kYXRhLmxlbmd0aCkge1xuICAgIC8vIGZpcnN0IGNodW5rIGlzIGEgcGVyZmVjdCBtYXRjaFxuICAgIHJldCA9IGxpc3Quc2hpZnQoKTtcbiAgfSBlbHNlIHtcbiAgICAvLyByZXN1bHQgc3BhbnMgbW9yZSB0aGFuIG9uZSBidWZmZXJcbiAgICByZXQgPSBoYXNTdHJpbmdzID8gY29weUZyb21CdWZmZXJTdHJpbmcobiwgbGlzdCkgOiBjb3B5RnJvbUJ1ZmZlcihuLCBsaXN0KTtcbiAgfVxuICByZXR1cm4gcmV0O1xufVxuXG4vLyBDb3BpZXMgYSBzcGVjaWZpZWQgYW1vdW50IG9mIGNoYXJhY3RlcnMgZnJvbSB0aGUgbGlzdCBvZiBidWZmZXJlZCBkYXRhXG4vLyBjaHVua3MuXG4vLyBUaGlzIGZ1bmN0aW9uIGlzIGRlc2lnbmVkIHRvIGJlIGlubGluYWJsZSwgc28gcGxlYXNlIHRha2UgY2FyZSB3aGVuIG1ha2luZ1xuLy8gY2hhbmdlcyB0byB0aGUgZnVuY3Rpb24gYm9keS5cbmZ1bmN0aW9uIGNvcHlGcm9tQnVmZmVyU3RyaW5nKG4sIGxpc3QpIHtcbiAgdmFyIHAgPSBsaXN0LmhlYWQ7XG4gIHZhciBjID0gMTtcbiAgdmFyIHJldCA9IHAuZGF0YTtcbiAgbiAtPSByZXQubGVuZ3RoO1xuICB3aGlsZSAocCA9IHAubmV4dCkge1xuICAgIHZhciBzdHIgPSBwLmRhdGE7XG4gICAgdmFyIG5iID0gbiA+IHN0ci5sZW5ndGggPyBzdHIubGVuZ3RoIDogbjtcbiAgICBpZiAobmIgPT09IHN0ci5sZW5ndGgpIHJldCArPSBzdHI7ZWxzZSByZXQgKz0gc3RyLnNsaWNlKDAsIG4pO1xuICAgIG4gLT0gbmI7XG4gICAgaWYgKG4gPT09IDApIHtcbiAgICAgIGlmIChuYiA9PT0gc3RyLmxlbmd0aCkge1xuICAgICAgICArK2M7XG4gICAgICAgIGlmIChwLm5leHQpIGxpc3QuaGVhZCA9IHAubmV4dDtlbHNlIGxpc3QuaGVhZCA9IGxpc3QudGFpbCA9IG51bGw7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsaXN0LmhlYWQgPSBwO1xuICAgICAgICBwLmRhdGEgPSBzdHIuc2xpY2UobmIpO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gICAgfVxuICAgICsrYztcbiAgfVxuICBsaXN0Lmxlbmd0aCAtPSBjO1xuICByZXR1cm4gcmV0O1xufVxuXG4vLyBDb3BpZXMgYSBzcGVjaWZpZWQgYW1vdW50IG9mIGJ5dGVzIGZyb20gdGhlIGxpc3Qgb2YgYnVmZmVyZWQgZGF0YSBjaHVua3MuXG4vLyBUaGlzIGZ1bmN0aW9uIGlzIGRlc2lnbmVkIHRvIGJlIGlubGluYWJsZSwgc28gcGxlYXNlIHRha2UgY2FyZSB3aGVuIG1ha2luZ1xuLy8gY2hhbmdlcyB0byB0aGUgZnVuY3Rpb24gYm9keS5cbmZ1bmN0aW9uIGNvcHlGcm9tQnVmZmVyKG4sIGxpc3QpIHtcbiAgdmFyIHJldCA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShuKTtcbiAgdmFyIHAgPSBsaXN0LmhlYWQ7XG4gIHZhciBjID0gMTtcbiAgcC5kYXRhLmNvcHkocmV0KTtcbiAgbiAtPSBwLmRhdGEubGVuZ3RoO1xuICB3aGlsZSAocCA9IHAubmV4dCkge1xuICAgIHZhciBidWYgPSBwLmRhdGE7XG4gICAgdmFyIG5iID0gbiA+IGJ1Zi5sZW5ndGggPyBidWYubGVuZ3RoIDogbjtcbiAgICBidWYuY29weShyZXQsIHJldC5sZW5ndGggLSBuLCAwLCBuYik7XG4gICAgbiAtPSBuYjtcbiAgICBpZiAobiA9PT0gMCkge1xuICAgICAgaWYgKG5iID09PSBidWYubGVuZ3RoKSB7XG4gICAgICAgICsrYztcbiAgICAgICAgaWYgKHAubmV4dCkgbGlzdC5oZWFkID0gcC5uZXh0O2Vsc2UgbGlzdC5oZWFkID0gbGlzdC50YWlsID0gbnVsbDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxpc3QuaGVhZCA9IHA7XG4gICAgICAgIHAuZGF0YSA9IGJ1Zi5zbGljZShuYik7XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgKytjO1xuICB9XG4gIGxpc3QubGVuZ3RoIC09IGM7XG4gIHJldHVybiByZXQ7XG59XG5cbmZ1bmN0aW9uIGVuZFJlYWRhYmxlKHN0cmVhbSkge1xuICB2YXIgc3RhdGUgPSBzdHJlYW0uX3JlYWRhYmxlU3RhdGU7XG5cbiAgLy8gSWYgd2UgZ2V0IGhlcmUgYmVmb3JlIGNvbnN1bWluZyBhbGwgdGhlIGJ5dGVzLCB0aGVuIHRoYXQgaXMgYVxuICAvLyBidWcgaW4gbm9kZS4gIFNob3VsZCBuZXZlciBoYXBwZW4uXG4gIGlmIChzdGF0ZS5sZW5ndGggPiAwKSB0aHJvdyBuZXcgRXJyb3IoJ1wiZW5kUmVhZGFibGUoKVwiIGNhbGxlZCBvbiBub24tZW1wdHkgc3RyZWFtJyk7XG5cbiAgaWYgKCFzdGF0ZS5lbmRFbWl0dGVkKSB7XG4gICAgc3RhdGUuZW5kZWQgPSB0cnVlO1xuICAgIHBuYS5uZXh0VGljayhlbmRSZWFkYWJsZU5ULCBzdGF0ZSwgc3RyZWFtKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBlbmRSZWFkYWJsZU5UKHN0YXRlLCBzdHJlYW0pIHtcbiAgLy8gQ2hlY2sgdGhhdCB3ZSBkaWRuJ3QgZ2V0IG9uZSBsYXN0IHVuc2hpZnQuXG4gIGlmICghc3RhdGUuZW5kRW1pdHRlZCAmJiBzdGF0ZS5sZW5ndGggPT09IDApIHtcbiAgICBzdGF0ZS5lbmRFbWl0dGVkID0gdHJ1ZTtcbiAgICBzdHJlYW0ucmVhZGFibGUgPSBmYWxzZTtcbiAgICBzdHJlYW0uZW1pdCgnZW5kJyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaW5kZXhPZih4cywgeCkge1xuICBmb3IgKHZhciBpID0gMCwgbCA9IHhzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGlmICh4c1tpXSA9PT0geCkgcmV0dXJuIGk7XG4gIH1cbiAgcmV0dXJuIC0xO1xufSIsIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG4vLyBhIHRyYW5zZm9ybSBzdHJlYW0gaXMgYSByZWFkYWJsZS93cml0YWJsZSBzdHJlYW0gd2hlcmUgeW91IGRvXG4vLyBzb21ldGhpbmcgd2l0aCB0aGUgZGF0YS4gIFNvbWV0aW1lcyBpdCdzIGNhbGxlZCBhIFwiZmlsdGVyXCIsXG4vLyBidXQgdGhhdCdzIG5vdCBhIGdyZWF0IG5hbWUgZm9yIGl0LCBzaW5jZSB0aGF0IGltcGxpZXMgYSB0aGluZyB3aGVyZVxuLy8gc29tZSBiaXRzIHBhc3MgdGhyb3VnaCwgYW5kIG90aGVycyBhcmUgc2ltcGx5IGlnbm9yZWQuICAoVGhhdCB3b3VsZFxuLy8gYmUgYSB2YWxpZCBleGFtcGxlIG9mIGEgdHJhbnNmb3JtLCBvZiBjb3Vyc2UuKVxuLy9cbi8vIFdoaWxlIHRoZSBvdXRwdXQgaXMgY2F1c2FsbHkgcmVsYXRlZCB0byB0aGUgaW5wdXQsIGl0J3Mgbm90IGFcbi8vIG5lY2Vzc2FyaWx5IHN5bW1ldHJpYyBvciBzeW5jaHJvbm91cyB0cmFuc2Zvcm1hdGlvbi4gIEZvciBleGFtcGxlLFxuLy8gYSB6bGliIHN0cmVhbSBtaWdodCB0YWtlIG11bHRpcGxlIHBsYWluLXRleHQgd3JpdGVzKCksIGFuZCB0aGVuXG4vLyBlbWl0IGEgc2luZ2xlIGNvbXByZXNzZWQgY2h1bmsgc29tZSB0aW1lIGluIHRoZSBmdXR1cmUuXG4vL1xuLy8gSGVyZSdzIGhvdyB0aGlzIHdvcmtzOlxuLy9cbi8vIFRoZSBUcmFuc2Zvcm0gc3RyZWFtIGhhcyBhbGwgdGhlIGFzcGVjdHMgb2YgdGhlIHJlYWRhYmxlIGFuZCB3cml0YWJsZVxuLy8gc3RyZWFtIGNsYXNzZXMuICBXaGVuIHlvdSB3cml0ZShjaHVuayksIHRoYXQgY2FsbHMgX3dyaXRlKGNodW5rLGNiKVxuLy8gaW50ZXJuYWxseSwgYW5kIHJldHVybnMgZmFsc2UgaWYgdGhlcmUncyBhIGxvdCBvZiBwZW5kaW5nIHdyaXRlc1xuLy8gYnVmZmVyZWQgdXAuICBXaGVuIHlvdSBjYWxsIHJlYWQoKSwgdGhhdCBjYWxscyBfcmVhZChuKSB1bnRpbFxuLy8gdGhlcmUncyBlbm91Z2ggcGVuZGluZyByZWFkYWJsZSBkYXRhIGJ1ZmZlcmVkIHVwLlxuLy9cbi8vIEluIGEgdHJhbnNmb3JtIHN0cmVhbSwgdGhlIHdyaXR0ZW4gZGF0YSBpcyBwbGFjZWQgaW4gYSBidWZmZXIuICBXaGVuXG4vLyBfcmVhZChuKSBpcyBjYWxsZWQsIGl0IHRyYW5zZm9ybXMgdGhlIHF1ZXVlZCB1cCBkYXRhLCBjYWxsaW5nIHRoZVxuLy8gYnVmZmVyZWQgX3dyaXRlIGNiJ3MgYXMgaXQgY29uc3VtZXMgY2h1bmtzLiAgSWYgY29uc3VtaW5nIGEgc2luZ2xlXG4vLyB3cml0dGVuIGNodW5rIHdvdWxkIHJlc3VsdCBpbiBtdWx0aXBsZSBvdXRwdXQgY2h1bmtzLCB0aGVuIHRoZSBmaXJzdFxuLy8gb3V0cHV0dGVkIGJpdCBjYWxscyB0aGUgcmVhZGNiLCBhbmQgc3Vic2VxdWVudCBjaHVua3MganVzdCBnbyBpbnRvXG4vLyB0aGUgcmVhZCBidWZmZXIsIGFuZCB3aWxsIGNhdXNlIGl0IHRvIGVtaXQgJ3JlYWRhYmxlJyBpZiBuZWNlc3NhcnkuXG4vL1xuLy8gVGhpcyB3YXksIGJhY2stcHJlc3N1cmUgaXMgYWN0dWFsbHkgZGV0ZXJtaW5lZCBieSB0aGUgcmVhZGluZyBzaWRlLFxuLy8gc2luY2UgX3JlYWQgaGFzIHRvIGJlIGNhbGxlZCB0byBzdGFydCBwcm9jZXNzaW5nIGEgbmV3IGNodW5rLiAgSG93ZXZlcixcbi8vIGEgcGF0aG9sb2dpY2FsIGluZmxhdGUgdHlwZSBvZiB0cmFuc2Zvcm0gY2FuIGNhdXNlIGV4Y2Vzc2l2ZSBidWZmZXJpbmdcbi8vIGhlcmUuICBGb3IgZXhhbXBsZSwgaW1hZ2luZSBhIHN0cmVhbSB3aGVyZSBldmVyeSBieXRlIG9mIGlucHV0IGlzXG4vLyBpbnRlcnByZXRlZCBhcyBhbiBpbnRlZ2VyIGZyb20gMC0yNTUsIGFuZCB0aGVuIHJlc3VsdHMgaW4gdGhhdCBtYW55XG4vLyBieXRlcyBvZiBvdXRwdXQuICBXcml0aW5nIHRoZSA0IGJ5dGVzIHtmZixmZixmZixmZn0gd291bGQgcmVzdWx0IGluXG4vLyAxa2Igb2YgZGF0YSBiZWluZyBvdXRwdXQuICBJbiB0aGlzIGNhc2UsIHlvdSBjb3VsZCB3cml0ZSBhIHZlcnkgc21hbGxcbi8vIGFtb3VudCBvZiBpbnB1dCwgYW5kIGVuZCB1cCB3aXRoIGEgdmVyeSBsYXJnZSBhbW91bnQgb2Ygb3V0cHV0LiAgSW5cbi8vIHN1Y2ggYSBwYXRob2xvZ2ljYWwgaW5mbGF0aW5nIG1lY2hhbmlzbSwgdGhlcmUnZCBiZSBubyB3YXkgdG8gdGVsbFxuLy8gdGhlIHN5c3RlbSB0byBzdG9wIGRvaW5nIHRoZSB0cmFuc2Zvcm0uICBBIHNpbmdsZSA0TUIgd3JpdGUgY291bGRcbi8vIGNhdXNlIHRoZSBzeXN0ZW0gdG8gcnVuIG91dCBvZiBtZW1vcnkuXG4vL1xuLy8gSG93ZXZlciwgZXZlbiBpbiBzdWNoIGEgcGF0aG9sb2dpY2FsIGNhc2UsIG9ubHkgYSBzaW5nbGUgd3JpdHRlbiBjaHVua1xuLy8gd291bGQgYmUgY29uc3VtZWQsIGFuZCB0aGVuIHRoZSByZXN0IHdvdWxkIHdhaXQgKHVuLXRyYW5zZm9ybWVkKSB1bnRpbFxuLy8gdGhlIHJlc3VsdHMgb2YgdGhlIHByZXZpb3VzIHRyYW5zZm9ybWVkIGNodW5rIHdlcmUgY29uc3VtZWQuXG5cbid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBUcmFuc2Zvcm07XG5cbnZhciBEdXBsZXggPSByZXF1aXJlKCcuL19zdHJlYW1fZHVwbGV4Jyk7XG5cbi8qPHJlcGxhY2VtZW50PiovXG52YXIgdXRpbCA9IHJlcXVpcmUoJ2NvcmUtdXRpbC1pcycpO1xudXRpbC5pbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxudXRpbC5pbmhlcml0cyhUcmFuc2Zvcm0sIER1cGxleCk7XG5cbmZ1bmN0aW9uIGFmdGVyVHJhbnNmb3JtKGVyLCBkYXRhKSB7XG4gIHZhciB0cyA9IHRoaXMuX3RyYW5zZm9ybVN0YXRlO1xuICB0cy50cmFuc2Zvcm1pbmcgPSBmYWxzZTtcblxuICB2YXIgY2IgPSB0cy53cml0ZWNiO1xuXG4gIGlmICghY2IpIHtcbiAgICByZXR1cm4gdGhpcy5lbWl0KCdlcnJvcicsIG5ldyBFcnJvcignd3JpdGUgY2FsbGJhY2sgY2FsbGVkIG11bHRpcGxlIHRpbWVzJykpO1xuICB9XG5cbiAgdHMud3JpdGVjaHVuayA9IG51bGw7XG4gIHRzLndyaXRlY2IgPSBudWxsO1xuXG4gIGlmIChkYXRhICE9IG51bGwpIC8vIHNpbmdsZSBlcXVhbHMgY2hlY2sgZm9yIGJvdGggYG51bGxgIGFuZCBgdW5kZWZpbmVkYFxuICAgIHRoaXMucHVzaChkYXRhKTtcblxuICBjYihlcik7XG5cbiAgdmFyIHJzID0gdGhpcy5fcmVhZGFibGVTdGF0ZTtcbiAgcnMucmVhZGluZyA9IGZhbHNlO1xuICBpZiAocnMubmVlZFJlYWRhYmxlIHx8IHJzLmxlbmd0aCA8IHJzLmhpZ2hXYXRlck1hcmspIHtcbiAgICB0aGlzLl9yZWFkKHJzLmhpZ2hXYXRlck1hcmspO1xuICB9XG59XG5cbmZ1bmN0aW9uIFRyYW5zZm9ybShvcHRpb25zKSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBUcmFuc2Zvcm0pKSByZXR1cm4gbmV3IFRyYW5zZm9ybShvcHRpb25zKTtcblxuICBEdXBsZXguY2FsbCh0aGlzLCBvcHRpb25zKTtcblxuICB0aGlzLl90cmFuc2Zvcm1TdGF0ZSA9IHtcbiAgICBhZnRlclRyYW5zZm9ybTogYWZ0ZXJUcmFuc2Zvcm0uYmluZCh0aGlzKSxcbiAgICBuZWVkVHJhbnNmb3JtOiBmYWxzZSxcbiAgICB0cmFuc2Zvcm1pbmc6IGZhbHNlLFxuICAgIHdyaXRlY2I6IG51bGwsXG4gICAgd3JpdGVjaHVuazogbnVsbCxcbiAgICB3cml0ZWVuY29kaW5nOiBudWxsXG4gIH07XG5cbiAgLy8gc3RhcnQgb3V0IGFza2luZyBmb3IgYSByZWFkYWJsZSBldmVudCBvbmNlIGRhdGEgaXMgdHJhbnNmb3JtZWQuXG4gIHRoaXMuX3JlYWRhYmxlU3RhdGUubmVlZFJlYWRhYmxlID0gdHJ1ZTtcblxuICAvLyB3ZSBoYXZlIGltcGxlbWVudGVkIHRoZSBfcmVhZCBtZXRob2QsIGFuZCBkb25lIHRoZSBvdGhlciB0aGluZ3NcbiAgLy8gdGhhdCBSZWFkYWJsZSB3YW50cyBiZWZvcmUgdGhlIGZpcnN0IF9yZWFkIGNhbGwsIHNvIHVuc2V0IHRoZVxuICAvLyBzeW5jIGd1YXJkIGZsYWcuXG4gIHRoaXMuX3JlYWRhYmxlU3RhdGUuc3luYyA9IGZhbHNlO1xuXG4gIGlmIChvcHRpb25zKSB7XG4gICAgaWYgKHR5cGVvZiBvcHRpb25zLnRyYW5zZm9ybSA9PT0gJ2Z1bmN0aW9uJykgdGhpcy5fdHJhbnNmb3JtID0gb3B0aW9ucy50cmFuc2Zvcm07XG5cbiAgICBpZiAodHlwZW9mIG9wdGlvbnMuZmx1c2ggPT09ICdmdW5jdGlvbicpIHRoaXMuX2ZsdXNoID0gb3B0aW9ucy5mbHVzaDtcbiAgfVxuXG4gIC8vIFdoZW4gdGhlIHdyaXRhYmxlIHNpZGUgZmluaXNoZXMsIHRoZW4gZmx1c2ggb3V0IGFueXRoaW5nIHJlbWFpbmluZy5cbiAgdGhpcy5vbigncHJlZmluaXNoJywgcHJlZmluaXNoKTtcbn1cblxuZnVuY3Rpb24gcHJlZmluaXNoKCkge1xuICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gIGlmICh0eXBlb2YgdGhpcy5fZmx1c2ggPT09ICdmdW5jdGlvbicpIHtcbiAgICB0aGlzLl9mbHVzaChmdW5jdGlvbiAoZXIsIGRhdGEpIHtcbiAgICAgIGRvbmUoX3RoaXMsIGVyLCBkYXRhKTtcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBkb25lKHRoaXMsIG51bGwsIG51bGwpO1xuICB9XG59XG5cblRyYW5zZm9ybS5wcm90b3R5cGUucHVzaCA9IGZ1bmN0aW9uIChjaHVuaywgZW5jb2RpbmcpIHtcbiAgdGhpcy5fdHJhbnNmb3JtU3RhdGUubmVlZFRyYW5zZm9ybSA9IGZhbHNlO1xuICByZXR1cm4gRHVwbGV4LnByb3RvdHlwZS5wdXNoLmNhbGwodGhpcywgY2h1bmssIGVuY29kaW5nKTtcbn07XG5cbi8vIFRoaXMgaXMgdGhlIHBhcnQgd2hlcmUgeW91IGRvIHN0dWZmIVxuLy8gb3ZlcnJpZGUgdGhpcyBmdW5jdGlvbiBpbiBpbXBsZW1lbnRhdGlvbiBjbGFzc2VzLlxuLy8gJ2NodW5rJyBpcyBhbiBpbnB1dCBjaHVuay5cbi8vXG4vLyBDYWxsIGBwdXNoKG5ld0NodW5rKWAgdG8gcGFzcyBhbG9uZyB0cmFuc2Zvcm1lZCBvdXRwdXRcbi8vIHRvIHRoZSByZWFkYWJsZSBzaWRlLiAgWW91IG1heSBjYWxsICdwdXNoJyB6ZXJvIG9yIG1vcmUgdGltZXMuXG4vL1xuLy8gQ2FsbCBgY2IoZXJyKWAgd2hlbiB5b3UgYXJlIGRvbmUgd2l0aCB0aGlzIGNodW5rLiAgSWYgeW91IHBhc3Ncbi8vIGFuIGVycm9yLCB0aGVuIHRoYXQnbGwgcHV0IHRoZSBodXJ0IG9uIHRoZSB3aG9sZSBvcGVyYXRpb24uICBJZiB5b3Vcbi8vIG5ldmVyIGNhbGwgY2IoKSwgdGhlbiB5b3UnbGwgbmV2ZXIgZ2V0IGFub3RoZXIgY2h1bmsuXG5UcmFuc2Zvcm0ucHJvdG90eXBlLl90cmFuc2Zvcm0gPSBmdW5jdGlvbiAoY2h1bmssIGVuY29kaW5nLCBjYikge1xuICB0aHJvdyBuZXcgRXJyb3IoJ190cmFuc2Zvcm0oKSBpcyBub3QgaW1wbGVtZW50ZWQnKTtcbn07XG5cblRyYW5zZm9ybS5wcm90b3R5cGUuX3dyaXRlID0gZnVuY3Rpb24gKGNodW5rLCBlbmNvZGluZywgY2IpIHtcbiAgdmFyIHRzID0gdGhpcy5fdHJhbnNmb3JtU3RhdGU7XG4gIHRzLndyaXRlY2IgPSBjYjtcbiAgdHMud3JpdGVjaHVuayA9IGNodW5rO1xuICB0cy53cml0ZWVuY29kaW5nID0gZW5jb2Rpbmc7XG4gIGlmICghdHMudHJhbnNmb3JtaW5nKSB7XG4gICAgdmFyIHJzID0gdGhpcy5fcmVhZGFibGVTdGF0ZTtcbiAgICBpZiAodHMubmVlZFRyYW5zZm9ybSB8fCBycy5uZWVkUmVhZGFibGUgfHwgcnMubGVuZ3RoIDwgcnMuaGlnaFdhdGVyTWFyaykgdGhpcy5fcmVhZChycy5oaWdoV2F0ZXJNYXJrKTtcbiAgfVxufTtcblxuLy8gRG9lc24ndCBtYXR0ZXIgd2hhdCB0aGUgYXJncyBhcmUgaGVyZS5cbi8vIF90cmFuc2Zvcm0gZG9lcyBhbGwgdGhlIHdvcmsuXG4vLyBUaGF0IHdlIGdvdCBoZXJlIG1lYW5zIHRoYXQgdGhlIHJlYWRhYmxlIHNpZGUgd2FudHMgbW9yZSBkYXRhLlxuVHJhbnNmb3JtLnByb3RvdHlwZS5fcmVhZCA9IGZ1bmN0aW9uIChuKSB7XG4gIHZhciB0cyA9IHRoaXMuX3RyYW5zZm9ybVN0YXRlO1xuXG4gIGlmICh0cy53cml0ZWNodW5rICE9PSBudWxsICYmIHRzLndyaXRlY2IgJiYgIXRzLnRyYW5zZm9ybWluZykge1xuICAgIHRzLnRyYW5zZm9ybWluZyA9IHRydWU7XG4gICAgdGhpcy5fdHJhbnNmb3JtKHRzLndyaXRlY2h1bmssIHRzLndyaXRlZW5jb2RpbmcsIHRzLmFmdGVyVHJhbnNmb3JtKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBtYXJrIHRoYXQgd2UgbmVlZCBhIHRyYW5zZm9ybSwgc28gdGhhdCBhbnkgZGF0YSB0aGF0IGNvbWVzIGluXG4gICAgLy8gd2lsbCBnZXQgcHJvY2Vzc2VkLCBub3cgdGhhdCB3ZSd2ZSBhc2tlZCBmb3IgaXQuXG4gICAgdHMubmVlZFRyYW5zZm9ybSA9IHRydWU7XG4gIH1cbn07XG5cblRyYW5zZm9ybS5wcm90b3R5cGUuX2Rlc3Ryb3kgPSBmdW5jdGlvbiAoZXJyLCBjYikge1xuICB2YXIgX3RoaXMyID0gdGhpcztcblxuICBEdXBsZXgucHJvdG90eXBlLl9kZXN0cm95LmNhbGwodGhpcywgZXJyLCBmdW5jdGlvbiAoZXJyMikge1xuICAgIGNiKGVycjIpO1xuICAgIF90aGlzMi5lbWl0KCdjbG9zZScpO1xuICB9KTtcbn07XG5cbmZ1bmN0aW9uIGRvbmUoc3RyZWFtLCBlciwgZGF0YSkge1xuICBpZiAoZXIpIHJldHVybiBzdHJlYW0uZW1pdCgnZXJyb3InLCBlcik7XG5cbiAgaWYgKGRhdGEgIT0gbnVsbCkgLy8gc2luZ2xlIGVxdWFscyBjaGVjayBmb3IgYm90aCBgbnVsbGAgYW5kIGB1bmRlZmluZWRgXG4gICAgc3RyZWFtLnB1c2goZGF0YSk7XG5cbiAgLy8gaWYgdGhlcmUncyBub3RoaW5nIGluIHRoZSB3cml0ZSBidWZmZXIsIHRoZW4gdGhhdCBtZWFuc1xuICAvLyB0aGF0IG5vdGhpbmcgbW9yZSB3aWxsIGV2ZXIgYmUgcHJvdmlkZWRcbiAgaWYgKHN0cmVhbS5fd3JpdGFibGVTdGF0ZS5sZW5ndGgpIHRocm93IG5ldyBFcnJvcignQ2FsbGluZyB0cmFuc2Zvcm0gZG9uZSB3aGVuIHdzLmxlbmd0aCAhPSAwJyk7XG5cbiAgaWYgKHN0cmVhbS5fdHJhbnNmb3JtU3RhdGUudHJhbnNmb3JtaW5nKSB0aHJvdyBuZXcgRXJyb3IoJ0NhbGxpbmcgdHJhbnNmb3JtIGRvbmUgd2hlbiBzdGlsbCB0cmFuc2Zvcm1pbmcnKTtcblxuICByZXR1cm4gc3RyZWFtLnB1c2gobnVsbCk7XG59IiwiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbi8vIEEgYml0IHNpbXBsZXIgdGhhbiByZWFkYWJsZSBzdHJlYW1zLlxuLy8gSW1wbGVtZW50IGFuIGFzeW5jIC5fd3JpdGUoY2h1bmssIGVuY29kaW5nLCBjYiksIGFuZCBpdCdsbCBoYW5kbGUgYWxsXG4vLyB0aGUgZHJhaW4gZXZlbnQgZW1pc3Npb24gYW5kIGJ1ZmZlcmluZy5cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xuXG52YXIgcG5hID0gcmVxdWlyZSgncHJvY2Vzcy1uZXh0aWNrLWFyZ3MnKTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG5tb2R1bGUuZXhwb3J0cyA9IFdyaXRhYmxlO1xuXG4vKiA8cmVwbGFjZW1lbnQ+ICovXG5mdW5jdGlvbiBXcml0ZVJlcShjaHVuaywgZW5jb2RpbmcsIGNiKSB7XG4gIHRoaXMuY2h1bmsgPSBjaHVuaztcbiAgdGhpcy5lbmNvZGluZyA9IGVuY29kaW5nO1xuICB0aGlzLmNhbGxiYWNrID0gY2I7XG4gIHRoaXMubmV4dCA9IG51bGw7XG59XG5cbi8vIEl0IHNlZW1zIGEgbGlua2VkIGxpc3QgYnV0IGl0IGlzIG5vdFxuLy8gdGhlcmUgd2lsbCBiZSBvbmx5IDIgb2YgdGhlc2UgZm9yIGVhY2ggc3RyZWFtXG5mdW5jdGlvbiBDb3JrZWRSZXF1ZXN0KHN0YXRlKSB7XG4gIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgdGhpcy5uZXh0ID0gbnVsbDtcbiAgdGhpcy5lbnRyeSA9IG51bGw7XG4gIHRoaXMuZmluaXNoID0gZnVuY3Rpb24gKCkge1xuICAgIG9uQ29ya2VkRmluaXNoKF90aGlzLCBzdGF0ZSk7XG4gIH07XG59XG4vKiA8L3JlcGxhY2VtZW50PiAqL1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIGFzeW5jV3JpdGUgPSAhcHJvY2Vzcy5icm93c2VyICYmIFsndjAuMTAnLCAndjAuOS4nXS5pbmRleE9mKHByb2Nlc3MudmVyc2lvbi5zbGljZSgwLCA1KSkgPiAtMSA/IHNldEltbWVkaWF0ZSA6IHBuYS5uZXh0VGljaztcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIER1cGxleDtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG5Xcml0YWJsZS5Xcml0YWJsZVN0YXRlID0gV3JpdGFibGVTdGF0ZTtcblxuLyo8cmVwbGFjZW1lbnQ+Ki9cbnZhciB1dGlsID0gcmVxdWlyZSgnY29yZS11dGlsLWlzJyk7XG51dGlsLmluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIGludGVybmFsVXRpbCA9IHtcbiAgZGVwcmVjYXRlOiByZXF1aXJlKCd1dGlsLWRlcHJlY2F0ZScpXG59O1xuLyo8L3JlcGxhY2VtZW50PiovXG5cbi8qPHJlcGxhY2VtZW50PiovXG52YXIgU3RyZWFtID0gcmVxdWlyZSgnLi9pbnRlcm5hbC9zdHJlYW1zL3N0cmVhbScpO1xuLyo8L3JlcGxhY2VtZW50PiovXG5cbi8qPHJlcGxhY2VtZW50PiovXG5cbnZhciBCdWZmZXIgPSByZXF1aXJlKCdzYWZlLWJ1ZmZlcicpLkJ1ZmZlcjtcbnZhciBPdXJVaW50OEFycmF5ID0gZ2xvYmFsLlVpbnQ4QXJyYXkgfHwgZnVuY3Rpb24gKCkge307XG5mdW5jdGlvbiBfdWludDhBcnJheVRvQnVmZmVyKGNodW5rKSB7XG4gIHJldHVybiBCdWZmZXIuZnJvbShjaHVuayk7XG59XG5mdW5jdGlvbiBfaXNVaW50OEFycmF5KG9iaikge1xuICByZXR1cm4gQnVmZmVyLmlzQnVmZmVyKG9iaikgfHwgb2JqIGluc3RhbmNlb2YgT3VyVWludDhBcnJheTtcbn1cblxuLyo8L3JlcGxhY2VtZW50PiovXG5cbnZhciBkZXN0cm95SW1wbCA9IHJlcXVpcmUoJy4vaW50ZXJuYWwvc3RyZWFtcy9kZXN0cm95Jyk7XG5cbnV0aWwuaW5oZXJpdHMoV3JpdGFibGUsIFN0cmVhbSk7XG5cbmZ1bmN0aW9uIG5vcCgpIHt9XG5cbmZ1bmN0aW9uIFdyaXRhYmxlU3RhdGUob3B0aW9ucywgc3RyZWFtKSB7XG4gIER1cGxleCA9IER1cGxleCB8fCByZXF1aXJlKCcuL19zdHJlYW1fZHVwbGV4Jyk7XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiAgLy8gRHVwbGV4IHN0cmVhbXMgYXJlIGJvdGggcmVhZGFibGUgYW5kIHdyaXRhYmxlLCBidXQgc2hhcmVcbiAgLy8gdGhlIHNhbWUgb3B0aW9ucyBvYmplY3QuXG4gIC8vIEhvd2V2ZXIsIHNvbWUgY2FzZXMgcmVxdWlyZSBzZXR0aW5nIG9wdGlvbnMgdG8gZGlmZmVyZW50XG4gIC8vIHZhbHVlcyBmb3IgdGhlIHJlYWRhYmxlIGFuZCB0aGUgd3JpdGFibGUgc2lkZXMgb2YgdGhlIGR1cGxleCBzdHJlYW0uXG4gIC8vIFRoZXNlIG9wdGlvbnMgY2FuIGJlIHByb3ZpZGVkIHNlcGFyYXRlbHkgYXMgcmVhZGFibGVYWFggYW5kIHdyaXRhYmxlWFhYLlxuICB2YXIgaXNEdXBsZXggPSBzdHJlYW0gaW5zdGFuY2VvZiBEdXBsZXg7XG5cbiAgLy8gb2JqZWN0IHN0cmVhbSBmbGFnIHRvIGluZGljYXRlIHdoZXRoZXIgb3Igbm90IHRoaXMgc3RyZWFtXG4gIC8vIGNvbnRhaW5zIGJ1ZmZlcnMgb3Igb2JqZWN0cy5cbiAgdGhpcy5vYmplY3RNb2RlID0gISFvcHRpb25zLm9iamVjdE1vZGU7XG5cbiAgaWYgKGlzRHVwbGV4KSB0aGlzLm9iamVjdE1vZGUgPSB0aGlzLm9iamVjdE1vZGUgfHwgISFvcHRpb25zLndyaXRhYmxlT2JqZWN0TW9kZTtcblxuICAvLyB0aGUgcG9pbnQgYXQgd2hpY2ggd3JpdGUoKSBzdGFydHMgcmV0dXJuaW5nIGZhbHNlXG4gIC8vIE5vdGU6IDAgaXMgYSB2YWxpZCB2YWx1ZSwgbWVhbnMgdGhhdCB3ZSBhbHdheXMgcmV0dXJuIGZhbHNlIGlmXG4gIC8vIHRoZSBlbnRpcmUgYnVmZmVyIGlzIG5vdCBmbHVzaGVkIGltbWVkaWF0ZWx5IG9uIHdyaXRlKClcbiAgdmFyIGh3bSA9IG9wdGlvbnMuaGlnaFdhdGVyTWFyaztcbiAgdmFyIHdyaXRhYmxlSHdtID0gb3B0aW9ucy53cml0YWJsZUhpZ2hXYXRlck1hcms7XG4gIHZhciBkZWZhdWx0SHdtID0gdGhpcy5vYmplY3RNb2RlID8gMTYgOiAxNiAqIDEwMjQ7XG5cbiAgaWYgKGh3bSB8fCBod20gPT09IDApIHRoaXMuaGlnaFdhdGVyTWFyayA9IGh3bTtlbHNlIGlmIChpc0R1cGxleCAmJiAod3JpdGFibGVId20gfHwgd3JpdGFibGVId20gPT09IDApKSB0aGlzLmhpZ2hXYXRlck1hcmsgPSB3cml0YWJsZUh3bTtlbHNlIHRoaXMuaGlnaFdhdGVyTWFyayA9IGRlZmF1bHRId207XG5cbiAgLy8gY2FzdCB0byBpbnRzLlxuICB0aGlzLmhpZ2hXYXRlck1hcmsgPSBNYXRoLmZsb29yKHRoaXMuaGlnaFdhdGVyTWFyayk7XG5cbiAgLy8gaWYgX2ZpbmFsIGhhcyBiZWVuIGNhbGxlZFxuICB0aGlzLmZpbmFsQ2FsbGVkID0gZmFsc2U7XG5cbiAgLy8gZHJhaW4gZXZlbnQgZmxhZy5cbiAgdGhpcy5uZWVkRHJhaW4gPSBmYWxzZTtcbiAgLy8gYXQgdGhlIHN0YXJ0IG9mIGNhbGxpbmcgZW5kKClcbiAgdGhpcy5lbmRpbmcgPSBmYWxzZTtcbiAgLy8gd2hlbiBlbmQoKSBoYXMgYmVlbiBjYWxsZWQsIGFuZCByZXR1cm5lZFxuICB0aGlzLmVuZGVkID0gZmFsc2U7XG4gIC8vIHdoZW4gJ2ZpbmlzaCcgaXMgZW1pdHRlZFxuICB0aGlzLmZpbmlzaGVkID0gZmFsc2U7XG5cbiAgLy8gaGFzIGl0IGJlZW4gZGVzdHJveWVkXG4gIHRoaXMuZGVzdHJveWVkID0gZmFsc2U7XG5cbiAgLy8gc2hvdWxkIHdlIGRlY29kZSBzdHJpbmdzIGludG8gYnVmZmVycyBiZWZvcmUgcGFzc2luZyB0byBfd3JpdGU/XG4gIC8vIHRoaXMgaXMgaGVyZSBzbyB0aGF0IHNvbWUgbm9kZS1jb3JlIHN0cmVhbXMgY2FuIG9wdGltaXplIHN0cmluZ1xuICAvLyBoYW5kbGluZyBhdCBhIGxvd2VyIGxldmVsLlxuICB2YXIgbm9EZWNvZGUgPSBvcHRpb25zLmRlY29kZVN0cmluZ3MgPT09IGZhbHNlO1xuICB0aGlzLmRlY29kZVN0cmluZ3MgPSAhbm9EZWNvZGU7XG5cbiAgLy8gQ3J5cHRvIGlzIGtpbmQgb2Ygb2xkIGFuZCBjcnVzdHkuICBIaXN0b3JpY2FsbHksIGl0cyBkZWZhdWx0IHN0cmluZ1xuICAvLyBlbmNvZGluZyBpcyAnYmluYXJ5JyBzbyB3ZSBoYXZlIHRvIG1ha2UgdGhpcyBjb25maWd1cmFibGUuXG4gIC8vIEV2ZXJ5dGhpbmcgZWxzZSBpbiB0aGUgdW5pdmVyc2UgdXNlcyAndXRmOCcsIHRob3VnaC5cbiAgdGhpcy5kZWZhdWx0RW5jb2RpbmcgPSBvcHRpb25zLmRlZmF1bHRFbmNvZGluZyB8fCAndXRmOCc7XG5cbiAgLy8gbm90IGFuIGFjdHVhbCBidWZmZXIgd2Uga2VlcCB0cmFjayBvZiwgYnV0IGEgbWVhc3VyZW1lbnRcbiAgLy8gb2YgaG93IG11Y2ggd2UncmUgd2FpdGluZyB0byBnZXQgcHVzaGVkIHRvIHNvbWUgdW5kZXJseWluZ1xuICAvLyBzb2NrZXQgb3IgZmlsZS5cbiAgdGhpcy5sZW5ndGggPSAwO1xuXG4gIC8vIGEgZmxhZyB0byBzZWUgd2hlbiB3ZSdyZSBpbiB0aGUgbWlkZGxlIG9mIGEgd3JpdGUuXG4gIHRoaXMud3JpdGluZyA9IGZhbHNlO1xuXG4gIC8vIHdoZW4gdHJ1ZSBhbGwgd3JpdGVzIHdpbGwgYmUgYnVmZmVyZWQgdW50aWwgLnVuY29yaygpIGNhbGxcbiAgdGhpcy5jb3JrZWQgPSAwO1xuXG4gIC8vIGEgZmxhZyB0byBiZSBhYmxlIHRvIHRlbGwgaWYgdGhlIG9ud3JpdGUgY2IgaXMgY2FsbGVkIGltbWVkaWF0ZWx5LFxuICAvLyBvciBvbiBhIGxhdGVyIHRpY2suICBXZSBzZXQgdGhpcyB0byB0cnVlIGF0IGZpcnN0LCBiZWNhdXNlIGFueVxuICAvLyBhY3Rpb25zIHRoYXQgc2hvdWxkbid0IGhhcHBlbiB1bnRpbCBcImxhdGVyXCIgc2hvdWxkIGdlbmVyYWxseSBhbHNvXG4gIC8vIG5vdCBoYXBwZW4gYmVmb3JlIHRoZSBmaXJzdCB3cml0ZSBjYWxsLlxuICB0aGlzLnN5bmMgPSB0cnVlO1xuXG4gIC8vIGEgZmxhZyB0byBrbm93IGlmIHdlJ3JlIHByb2Nlc3NpbmcgcHJldmlvdXNseSBidWZmZXJlZCBpdGVtcywgd2hpY2hcbiAgLy8gbWF5IGNhbGwgdGhlIF93cml0ZSgpIGNhbGxiYWNrIGluIHRoZSBzYW1lIHRpY2ssIHNvIHRoYXQgd2UgZG9uJ3RcbiAgLy8gZW5kIHVwIGluIGFuIG92ZXJsYXBwZWQgb253cml0ZSBzaXR1YXRpb24uXG4gIHRoaXMuYnVmZmVyUHJvY2Vzc2luZyA9IGZhbHNlO1xuXG4gIC8vIHRoZSBjYWxsYmFjayB0aGF0J3MgcGFzc2VkIHRvIF93cml0ZShjaHVuayxjYilcbiAgdGhpcy5vbndyaXRlID0gZnVuY3Rpb24gKGVyKSB7XG4gICAgb253cml0ZShzdHJlYW0sIGVyKTtcbiAgfTtcblxuICAvLyB0aGUgY2FsbGJhY2sgdGhhdCB0aGUgdXNlciBzdXBwbGllcyB0byB3cml0ZShjaHVuayxlbmNvZGluZyxjYilcbiAgdGhpcy53cml0ZWNiID0gbnVsbDtcblxuICAvLyB0aGUgYW1vdW50IHRoYXQgaXMgYmVpbmcgd3JpdHRlbiB3aGVuIF93cml0ZSBpcyBjYWxsZWQuXG4gIHRoaXMud3JpdGVsZW4gPSAwO1xuXG4gIHRoaXMuYnVmZmVyZWRSZXF1ZXN0ID0gbnVsbDtcbiAgdGhpcy5sYXN0QnVmZmVyZWRSZXF1ZXN0ID0gbnVsbDtcblxuICAvLyBudW1iZXIgb2YgcGVuZGluZyB1c2VyLXN1cHBsaWVkIHdyaXRlIGNhbGxiYWNrc1xuICAvLyB0aGlzIG11c3QgYmUgMCBiZWZvcmUgJ2ZpbmlzaCcgY2FuIGJlIGVtaXR0ZWRcbiAgdGhpcy5wZW5kaW5nY2IgPSAwO1xuXG4gIC8vIGVtaXQgcHJlZmluaXNoIGlmIHRoZSBvbmx5IHRoaW5nIHdlJ3JlIHdhaXRpbmcgZm9yIGlzIF93cml0ZSBjYnNcbiAgLy8gVGhpcyBpcyByZWxldmFudCBmb3Igc3luY2hyb25vdXMgVHJhbnNmb3JtIHN0cmVhbXNcbiAgdGhpcy5wcmVmaW5pc2hlZCA9IGZhbHNlO1xuXG4gIC8vIFRydWUgaWYgdGhlIGVycm9yIHdhcyBhbHJlYWR5IGVtaXR0ZWQgYW5kIHNob3VsZCBub3QgYmUgdGhyb3duIGFnYWluXG4gIHRoaXMuZXJyb3JFbWl0dGVkID0gZmFsc2U7XG5cbiAgLy8gY291bnQgYnVmZmVyZWQgcmVxdWVzdHNcbiAgdGhpcy5idWZmZXJlZFJlcXVlc3RDb3VudCA9IDA7XG5cbiAgLy8gYWxsb2NhdGUgdGhlIGZpcnN0IENvcmtlZFJlcXVlc3QsIHRoZXJlIGlzIGFsd2F5c1xuICAvLyBvbmUgYWxsb2NhdGVkIGFuZCBmcmVlIHRvIHVzZSwgYW5kIHdlIG1haW50YWluIGF0IG1vc3QgdHdvXG4gIHRoaXMuY29ya2VkUmVxdWVzdHNGcmVlID0gbmV3IENvcmtlZFJlcXVlc3QodGhpcyk7XG59XG5cbldyaXRhYmxlU3RhdGUucHJvdG90eXBlLmdldEJ1ZmZlciA9IGZ1bmN0aW9uIGdldEJ1ZmZlcigpIHtcbiAgdmFyIGN1cnJlbnQgPSB0aGlzLmJ1ZmZlcmVkUmVxdWVzdDtcbiAgdmFyIG91dCA9IFtdO1xuICB3aGlsZSAoY3VycmVudCkge1xuICAgIG91dC5wdXNoKGN1cnJlbnQpO1xuICAgIGN1cnJlbnQgPSBjdXJyZW50Lm5leHQ7XG4gIH1cbiAgcmV0dXJuIG91dDtcbn07XG5cbihmdW5jdGlvbiAoKSB7XG4gIHRyeSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFdyaXRhYmxlU3RhdGUucHJvdG90eXBlLCAnYnVmZmVyJywge1xuICAgICAgZ2V0OiBpbnRlcm5hbFV0aWwuZGVwcmVjYXRlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0QnVmZmVyKCk7XG4gICAgICB9LCAnX3dyaXRhYmxlU3RhdGUuYnVmZmVyIGlzIGRlcHJlY2F0ZWQuIFVzZSBfd3JpdGFibGVTdGF0ZS5nZXRCdWZmZXIgJyArICdpbnN0ZWFkLicsICdERVAwMDAzJylcbiAgICB9KTtcbiAgfSBjYXRjaCAoXykge31cbn0pKCk7XG5cbi8vIFRlc3QgX3dyaXRhYmxlU3RhdGUgZm9yIGluaGVyaXRhbmNlIHRvIGFjY291bnQgZm9yIER1cGxleCBzdHJlYW1zLFxuLy8gd2hvc2UgcHJvdG90eXBlIGNoYWluIG9ubHkgcG9pbnRzIHRvIFJlYWRhYmxlLlxudmFyIHJlYWxIYXNJbnN0YW5jZTtcbmlmICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmIFN5bWJvbC5oYXNJbnN0YW5jZSAmJiB0eXBlb2YgRnVuY3Rpb24ucHJvdG90eXBlW1N5bWJvbC5oYXNJbnN0YW5jZV0gPT09ICdmdW5jdGlvbicpIHtcbiAgcmVhbEhhc0luc3RhbmNlID0gRnVuY3Rpb24ucHJvdG90eXBlW1N5bWJvbC5oYXNJbnN0YW5jZV07XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShXcml0YWJsZSwgU3ltYm9sLmhhc0luc3RhbmNlLCB7XG4gICAgdmFsdWU6IGZ1bmN0aW9uIChvYmplY3QpIHtcbiAgICAgIGlmIChyZWFsSGFzSW5zdGFuY2UuY2FsbCh0aGlzLCBvYmplY3QpKSByZXR1cm4gdHJ1ZTtcbiAgICAgIGlmICh0aGlzICE9PSBXcml0YWJsZSkgcmV0dXJuIGZhbHNlO1xuXG4gICAgICByZXR1cm4gb2JqZWN0ICYmIG9iamVjdC5fd3JpdGFibGVTdGF0ZSBpbnN0YW5jZW9mIFdyaXRhYmxlU3RhdGU7XG4gICAgfVxuICB9KTtcbn0gZWxzZSB7XG4gIHJlYWxIYXNJbnN0YW5jZSA9IGZ1bmN0aW9uIChvYmplY3QpIHtcbiAgICByZXR1cm4gb2JqZWN0IGluc3RhbmNlb2YgdGhpcztcbiAgfTtcbn1cblxuZnVuY3Rpb24gV3JpdGFibGUob3B0aW9ucykge1xuICBEdXBsZXggPSBEdXBsZXggfHwgcmVxdWlyZSgnLi9fc3RyZWFtX2R1cGxleCcpO1xuXG4gIC8vIFdyaXRhYmxlIGN0b3IgaXMgYXBwbGllZCB0byBEdXBsZXhlcywgdG9vLlxuICAvLyBgcmVhbEhhc0luc3RhbmNlYCBpcyBuZWNlc3NhcnkgYmVjYXVzZSB1c2luZyBwbGFpbiBgaW5zdGFuY2VvZmBcbiAgLy8gd291bGQgcmV0dXJuIGZhbHNlLCBhcyBubyBgX3dyaXRhYmxlU3RhdGVgIHByb3BlcnR5IGlzIGF0dGFjaGVkLlxuXG4gIC8vIFRyeWluZyB0byB1c2UgdGhlIGN1c3RvbSBgaW5zdGFuY2VvZmAgZm9yIFdyaXRhYmxlIGhlcmUgd2lsbCBhbHNvIGJyZWFrIHRoZVxuICAvLyBOb2RlLmpzIExhenlUcmFuc2Zvcm0gaW1wbGVtZW50YXRpb24sIHdoaWNoIGhhcyBhIG5vbi10cml2aWFsIGdldHRlciBmb3JcbiAgLy8gYF93cml0YWJsZVN0YXRlYCB0aGF0IHdvdWxkIGxlYWQgdG8gaW5maW5pdGUgcmVjdXJzaW9uLlxuICBpZiAoIXJlYWxIYXNJbnN0YW5jZS5jYWxsKFdyaXRhYmxlLCB0aGlzKSAmJiAhKHRoaXMgaW5zdGFuY2VvZiBEdXBsZXgpKSB7XG4gICAgcmV0dXJuIG5ldyBXcml0YWJsZShvcHRpb25zKTtcbiAgfVxuXG4gIHRoaXMuX3dyaXRhYmxlU3RhdGUgPSBuZXcgV3JpdGFibGVTdGF0ZShvcHRpb25zLCB0aGlzKTtcblxuICAvLyBsZWdhY3kuXG4gIHRoaXMud3JpdGFibGUgPSB0cnVlO1xuXG4gIGlmIChvcHRpb25zKSB7XG4gICAgaWYgKHR5cGVvZiBvcHRpb25zLndyaXRlID09PSAnZnVuY3Rpb24nKSB0aGlzLl93cml0ZSA9IG9wdGlvbnMud3JpdGU7XG5cbiAgICBpZiAodHlwZW9mIG9wdGlvbnMud3JpdGV2ID09PSAnZnVuY3Rpb24nKSB0aGlzLl93cml0ZXYgPSBvcHRpb25zLndyaXRldjtcblxuICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5kZXN0cm95ID09PSAnZnVuY3Rpb24nKSB0aGlzLl9kZXN0cm95ID0gb3B0aW9ucy5kZXN0cm95O1xuXG4gICAgaWYgKHR5cGVvZiBvcHRpb25zLmZpbmFsID09PSAnZnVuY3Rpb24nKSB0aGlzLl9maW5hbCA9IG9wdGlvbnMuZmluYWw7XG4gIH1cblxuICBTdHJlYW0uY2FsbCh0aGlzKTtcbn1cblxuLy8gT3RoZXJ3aXNlIHBlb3BsZSBjYW4gcGlwZSBXcml0YWJsZSBzdHJlYW1zLCB3aGljaCBpcyBqdXN0IHdyb25nLlxuV3JpdGFibGUucHJvdG90eXBlLnBpcGUgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuZW1pdCgnZXJyb3InLCBuZXcgRXJyb3IoJ0Nhbm5vdCBwaXBlLCBub3QgcmVhZGFibGUnKSk7XG59O1xuXG5mdW5jdGlvbiB3cml0ZUFmdGVyRW5kKHN0cmVhbSwgY2IpIHtcbiAgdmFyIGVyID0gbmV3IEVycm9yKCd3cml0ZSBhZnRlciBlbmQnKTtcbiAgLy8gVE9ETzogZGVmZXIgZXJyb3IgZXZlbnRzIGNvbnNpc3RlbnRseSBldmVyeXdoZXJlLCBub3QganVzdCB0aGUgY2JcbiAgc3RyZWFtLmVtaXQoJ2Vycm9yJywgZXIpO1xuICBwbmEubmV4dFRpY2soY2IsIGVyKTtcbn1cblxuLy8gQ2hlY2tzIHRoYXQgYSB1c2VyLXN1cHBsaWVkIGNodW5rIGlzIHZhbGlkLCBlc3BlY2lhbGx5IGZvciB0aGUgcGFydGljdWxhclxuLy8gbW9kZSB0aGUgc3RyZWFtIGlzIGluLiBDdXJyZW50bHkgdGhpcyBtZWFucyB0aGF0IGBudWxsYCBpcyBuZXZlciBhY2NlcHRlZFxuLy8gYW5kIHVuZGVmaW5lZC9ub24tc3RyaW5nIHZhbHVlcyBhcmUgb25seSBhbGxvd2VkIGluIG9iamVjdCBtb2RlLlxuZnVuY3Rpb24gdmFsaWRDaHVuayhzdHJlYW0sIHN0YXRlLCBjaHVuaywgY2IpIHtcbiAgdmFyIHZhbGlkID0gdHJ1ZTtcbiAgdmFyIGVyID0gZmFsc2U7XG5cbiAgaWYgKGNodW5rID09PSBudWxsKSB7XG4gICAgZXIgPSBuZXcgVHlwZUVycm9yKCdNYXkgbm90IHdyaXRlIG51bGwgdmFsdWVzIHRvIHN0cmVhbScpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBjaHVuayAhPT0gJ3N0cmluZycgJiYgY2h1bmsgIT09IHVuZGVmaW5lZCAmJiAhc3RhdGUub2JqZWN0TW9kZSkge1xuICAgIGVyID0gbmV3IFR5cGVFcnJvcignSW52YWxpZCBub24tc3RyaW5nL2J1ZmZlciBjaHVuaycpO1xuICB9XG4gIGlmIChlcikge1xuICAgIHN0cmVhbS5lbWl0KCdlcnJvcicsIGVyKTtcbiAgICBwbmEubmV4dFRpY2soY2IsIGVyKTtcbiAgICB2YWxpZCA9IGZhbHNlO1xuICB9XG4gIHJldHVybiB2YWxpZDtcbn1cblxuV3JpdGFibGUucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24gKGNodW5rLCBlbmNvZGluZywgY2IpIHtcbiAgdmFyIHN0YXRlID0gdGhpcy5fd3JpdGFibGVTdGF0ZTtcbiAgdmFyIHJldCA9IGZhbHNlO1xuICB2YXIgaXNCdWYgPSAhc3RhdGUub2JqZWN0TW9kZSAmJiBfaXNVaW50OEFycmF5KGNodW5rKTtcblxuICBpZiAoaXNCdWYgJiYgIUJ1ZmZlci5pc0J1ZmZlcihjaHVuaykpIHtcbiAgICBjaHVuayA9IF91aW50OEFycmF5VG9CdWZmZXIoY2h1bmspO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBlbmNvZGluZyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNiID0gZW5jb2Rpbmc7XG4gICAgZW5jb2RpbmcgPSBudWxsO1xuICB9XG5cbiAgaWYgKGlzQnVmKSBlbmNvZGluZyA9ICdidWZmZXInO2Vsc2UgaWYgKCFlbmNvZGluZykgZW5jb2RpbmcgPSBzdGF0ZS5kZWZhdWx0RW5jb2Rpbmc7XG5cbiAgaWYgKHR5cGVvZiBjYiAhPT0gJ2Z1bmN0aW9uJykgY2IgPSBub3A7XG5cbiAgaWYgKHN0YXRlLmVuZGVkKSB3cml0ZUFmdGVyRW5kKHRoaXMsIGNiKTtlbHNlIGlmIChpc0J1ZiB8fCB2YWxpZENodW5rKHRoaXMsIHN0YXRlLCBjaHVuaywgY2IpKSB7XG4gICAgc3RhdGUucGVuZGluZ2NiKys7XG4gICAgcmV0ID0gd3JpdGVPckJ1ZmZlcih0aGlzLCBzdGF0ZSwgaXNCdWYsIGNodW5rLCBlbmNvZGluZywgY2IpO1xuICB9XG5cbiAgcmV0dXJuIHJldDtcbn07XG5cbldyaXRhYmxlLnByb3RvdHlwZS5jb3JrID0gZnVuY3Rpb24gKCkge1xuICB2YXIgc3RhdGUgPSB0aGlzLl93cml0YWJsZVN0YXRlO1xuXG4gIHN0YXRlLmNvcmtlZCsrO1xufTtcblxuV3JpdGFibGUucHJvdG90eXBlLnVuY29yayA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHN0YXRlID0gdGhpcy5fd3JpdGFibGVTdGF0ZTtcblxuICBpZiAoc3RhdGUuY29ya2VkKSB7XG4gICAgc3RhdGUuY29ya2VkLS07XG5cbiAgICBpZiAoIXN0YXRlLndyaXRpbmcgJiYgIXN0YXRlLmNvcmtlZCAmJiAhc3RhdGUuZmluaXNoZWQgJiYgIXN0YXRlLmJ1ZmZlclByb2Nlc3NpbmcgJiYgc3RhdGUuYnVmZmVyZWRSZXF1ZXN0KSBjbGVhckJ1ZmZlcih0aGlzLCBzdGF0ZSk7XG4gIH1cbn07XG5cbldyaXRhYmxlLnByb3RvdHlwZS5zZXREZWZhdWx0RW5jb2RpbmcgPSBmdW5jdGlvbiBzZXREZWZhdWx0RW5jb2RpbmcoZW5jb2RpbmcpIHtcbiAgLy8gbm9kZTo6UGFyc2VFbmNvZGluZygpIHJlcXVpcmVzIGxvd2VyIGNhc2UuXG4gIGlmICh0eXBlb2YgZW5jb2RpbmcgPT09ICdzdHJpbmcnKSBlbmNvZGluZyA9IGVuY29kaW5nLnRvTG93ZXJDYXNlKCk7XG4gIGlmICghKFsnaGV4JywgJ3V0ZjgnLCAndXRmLTgnLCAnYXNjaWknLCAnYmluYXJ5JywgJ2Jhc2U2NCcsICd1Y3MyJywgJ3Vjcy0yJywgJ3V0ZjE2bGUnLCAndXRmLTE2bGUnLCAncmF3J10uaW5kZXhPZigoZW5jb2RpbmcgKyAnJykudG9Mb3dlckNhc2UoKSkgPiAtMSkpIHRocm93IG5ldyBUeXBlRXJyb3IoJ1Vua25vd24gZW5jb2Rpbmc6ICcgKyBlbmNvZGluZyk7XG4gIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVmYXVsdEVuY29kaW5nID0gZW5jb2Rpbmc7XG4gIHJldHVybiB0aGlzO1xufTtcblxuZnVuY3Rpb24gZGVjb2RlQ2h1bmsoc3RhdGUsIGNodW5rLCBlbmNvZGluZykge1xuICBpZiAoIXN0YXRlLm9iamVjdE1vZGUgJiYgc3RhdGUuZGVjb2RlU3RyaW5ncyAhPT0gZmFsc2UgJiYgdHlwZW9mIGNodW5rID09PSAnc3RyaW5nJykge1xuICAgIGNodW5rID0gQnVmZmVyLmZyb20oY2h1bmssIGVuY29kaW5nKTtcbiAgfVxuICByZXR1cm4gY2h1bms7XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShXcml0YWJsZS5wcm90b3R5cGUsICd3cml0YWJsZUhpZ2hXYXRlck1hcmsnLCB7XG4gIC8vIG1ha2luZyBpdCBleHBsaWNpdCB0aGlzIHByb3BlcnR5IGlzIG5vdCBlbnVtZXJhYmxlXG4gIC8vIGJlY2F1c2Ugb3RoZXJ3aXNlIHNvbWUgcHJvdG90eXBlIG1hbmlwdWxhdGlvbiBpblxuICAvLyB1c2VybGFuZCB3aWxsIGZhaWxcbiAgZW51bWVyYWJsZTogZmFsc2UsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzLl93cml0YWJsZVN0YXRlLmhpZ2hXYXRlck1hcms7XG4gIH1cbn0pO1xuXG4vLyBpZiB3ZSdyZSBhbHJlYWR5IHdyaXRpbmcgc29tZXRoaW5nLCB0aGVuIGp1c3QgcHV0IHRoaXNcbi8vIGluIHRoZSBxdWV1ZSwgYW5kIHdhaXQgb3VyIHR1cm4uICBPdGhlcndpc2UsIGNhbGwgX3dyaXRlXG4vLyBJZiB3ZSByZXR1cm4gZmFsc2UsIHRoZW4gd2UgbmVlZCBhIGRyYWluIGV2ZW50LCBzbyBzZXQgdGhhdCBmbGFnLlxuZnVuY3Rpb24gd3JpdGVPckJ1ZmZlcihzdHJlYW0sIHN0YXRlLCBpc0J1ZiwgY2h1bmssIGVuY29kaW5nLCBjYikge1xuICBpZiAoIWlzQnVmKSB7XG4gICAgdmFyIG5ld0NodW5rID0gZGVjb2RlQ2h1bmsoc3RhdGUsIGNodW5rLCBlbmNvZGluZyk7XG4gICAgaWYgKGNodW5rICE9PSBuZXdDaHVuaykge1xuICAgICAgaXNCdWYgPSB0cnVlO1xuICAgICAgZW5jb2RpbmcgPSAnYnVmZmVyJztcbiAgICAgIGNodW5rID0gbmV3Q2h1bms7XG4gICAgfVxuICB9XG4gIHZhciBsZW4gPSBzdGF0ZS5vYmplY3RNb2RlID8gMSA6IGNodW5rLmxlbmd0aDtcblxuICBzdGF0ZS5sZW5ndGggKz0gbGVuO1xuXG4gIHZhciByZXQgPSBzdGF0ZS5sZW5ndGggPCBzdGF0ZS5oaWdoV2F0ZXJNYXJrO1xuICAvLyB3ZSBtdXN0IGVuc3VyZSB0aGF0IHByZXZpb3VzIG5lZWREcmFpbiB3aWxsIG5vdCBiZSByZXNldCB0byBmYWxzZS5cbiAgaWYgKCFyZXQpIHN0YXRlLm5lZWREcmFpbiA9IHRydWU7XG5cbiAgaWYgKHN0YXRlLndyaXRpbmcgfHwgc3RhdGUuY29ya2VkKSB7XG4gICAgdmFyIGxhc3QgPSBzdGF0ZS5sYXN0QnVmZmVyZWRSZXF1ZXN0O1xuICAgIHN0YXRlLmxhc3RCdWZmZXJlZFJlcXVlc3QgPSB7XG4gICAgICBjaHVuazogY2h1bmssXG4gICAgICBlbmNvZGluZzogZW5jb2RpbmcsXG4gICAgICBpc0J1ZjogaXNCdWYsXG4gICAgICBjYWxsYmFjazogY2IsXG4gICAgICBuZXh0OiBudWxsXG4gICAgfTtcbiAgICBpZiAobGFzdCkge1xuICAgICAgbGFzdC5uZXh0ID0gc3RhdGUubGFzdEJ1ZmZlcmVkUmVxdWVzdDtcbiAgICB9IGVsc2Uge1xuICAgICAgc3RhdGUuYnVmZmVyZWRSZXF1ZXN0ID0gc3RhdGUubGFzdEJ1ZmZlcmVkUmVxdWVzdDtcbiAgICB9XG4gICAgc3RhdGUuYnVmZmVyZWRSZXF1ZXN0Q291bnQgKz0gMTtcbiAgfSBlbHNlIHtcbiAgICBkb1dyaXRlKHN0cmVhbSwgc3RhdGUsIGZhbHNlLCBsZW4sIGNodW5rLCBlbmNvZGluZywgY2IpO1xuICB9XG5cbiAgcmV0dXJuIHJldDtcbn1cblxuZnVuY3Rpb24gZG9Xcml0ZShzdHJlYW0sIHN0YXRlLCB3cml0ZXYsIGxlbiwgY2h1bmssIGVuY29kaW5nLCBjYikge1xuICBzdGF0ZS53cml0ZWxlbiA9IGxlbjtcbiAgc3RhdGUud3JpdGVjYiA9IGNiO1xuICBzdGF0ZS53cml0aW5nID0gdHJ1ZTtcbiAgc3RhdGUuc3luYyA9IHRydWU7XG4gIGlmICh3cml0ZXYpIHN0cmVhbS5fd3JpdGV2KGNodW5rLCBzdGF0ZS5vbndyaXRlKTtlbHNlIHN0cmVhbS5fd3JpdGUoY2h1bmssIGVuY29kaW5nLCBzdGF0ZS5vbndyaXRlKTtcbiAgc3RhdGUuc3luYyA9IGZhbHNlO1xufVxuXG5mdW5jdGlvbiBvbndyaXRlRXJyb3Ioc3RyZWFtLCBzdGF0ZSwgc3luYywgZXIsIGNiKSB7XG4gIC0tc3RhdGUucGVuZGluZ2NiO1xuXG4gIGlmIChzeW5jKSB7XG4gICAgLy8gZGVmZXIgdGhlIGNhbGxiYWNrIGlmIHdlIGFyZSBiZWluZyBjYWxsZWQgc3luY2hyb25vdXNseVxuICAgIC8vIHRvIGF2b2lkIHBpbGluZyB1cCB0aGluZ3Mgb24gdGhlIHN0YWNrXG4gICAgcG5hLm5leHRUaWNrKGNiLCBlcik7XG4gICAgLy8gdGhpcyBjYW4gZW1pdCBmaW5pc2gsIGFuZCBpdCB3aWxsIGFsd2F5cyBoYXBwZW5cbiAgICAvLyBhZnRlciBlcnJvclxuICAgIHBuYS5uZXh0VGljayhmaW5pc2hNYXliZSwgc3RyZWFtLCBzdGF0ZSk7XG4gICAgc3RyZWFtLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZCA9IHRydWU7XG4gICAgc3RyZWFtLmVtaXQoJ2Vycm9yJywgZXIpO1xuICB9IGVsc2Uge1xuICAgIC8vIHRoZSBjYWxsZXIgZXhwZWN0IHRoaXMgdG8gaGFwcGVuIGJlZm9yZSBpZlxuICAgIC8vIGl0IGlzIGFzeW5jXG4gICAgY2IoZXIpO1xuICAgIHN0cmVhbS5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQgPSB0cnVlO1xuICAgIHN0cmVhbS5lbWl0KCdlcnJvcicsIGVyKTtcbiAgICAvLyB0aGlzIGNhbiBlbWl0IGZpbmlzaCwgYnV0IGZpbmlzaCBtdXN0XG4gICAgLy8gYWx3YXlzIGZvbGxvdyBlcnJvclxuICAgIGZpbmlzaE1heWJlKHN0cmVhbSwgc3RhdGUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIG9ud3JpdGVTdGF0ZVVwZGF0ZShzdGF0ZSkge1xuICBzdGF0ZS53cml0aW5nID0gZmFsc2U7XG4gIHN0YXRlLndyaXRlY2IgPSBudWxsO1xuICBzdGF0ZS5sZW5ndGggLT0gc3RhdGUud3JpdGVsZW47XG4gIHN0YXRlLndyaXRlbGVuID0gMDtcbn1cblxuZnVuY3Rpb24gb253cml0ZShzdHJlYW0sIGVyKSB7XG4gIHZhciBzdGF0ZSA9IHN0cmVhbS5fd3JpdGFibGVTdGF0ZTtcbiAgdmFyIHN5bmMgPSBzdGF0ZS5zeW5jO1xuICB2YXIgY2IgPSBzdGF0ZS53cml0ZWNiO1xuXG4gIG9ud3JpdGVTdGF0ZVVwZGF0ZShzdGF0ZSk7XG5cbiAgaWYgKGVyKSBvbndyaXRlRXJyb3Ioc3RyZWFtLCBzdGF0ZSwgc3luYywgZXIsIGNiKTtlbHNlIHtcbiAgICAvLyBDaGVjayBpZiB3ZSdyZSBhY3R1YWxseSByZWFkeSB0byBmaW5pc2gsIGJ1dCBkb24ndCBlbWl0IHlldFxuICAgIHZhciBmaW5pc2hlZCA9IG5lZWRGaW5pc2goc3RhdGUpO1xuXG4gICAgaWYgKCFmaW5pc2hlZCAmJiAhc3RhdGUuY29ya2VkICYmICFzdGF0ZS5idWZmZXJQcm9jZXNzaW5nICYmIHN0YXRlLmJ1ZmZlcmVkUmVxdWVzdCkge1xuICAgICAgY2xlYXJCdWZmZXIoc3RyZWFtLCBzdGF0ZSk7XG4gICAgfVxuXG4gICAgaWYgKHN5bmMpIHtcbiAgICAgIC8qPHJlcGxhY2VtZW50PiovXG4gICAgICBhc3luY1dyaXRlKGFmdGVyV3JpdGUsIHN0cmVhbSwgc3RhdGUsIGZpbmlzaGVkLCBjYik7XG4gICAgICAvKjwvcmVwbGFjZW1lbnQ+Ki9cbiAgICB9IGVsc2Uge1xuICAgICAgYWZ0ZXJXcml0ZShzdHJlYW0sIHN0YXRlLCBmaW5pc2hlZCwgY2IpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhZnRlcldyaXRlKHN0cmVhbSwgc3RhdGUsIGZpbmlzaGVkLCBjYikge1xuICBpZiAoIWZpbmlzaGVkKSBvbndyaXRlRHJhaW4oc3RyZWFtLCBzdGF0ZSk7XG4gIHN0YXRlLnBlbmRpbmdjYi0tO1xuICBjYigpO1xuICBmaW5pc2hNYXliZShzdHJlYW0sIHN0YXRlKTtcbn1cblxuLy8gTXVzdCBmb3JjZSBjYWxsYmFjayB0byBiZSBjYWxsZWQgb24gbmV4dFRpY2ssIHNvIHRoYXQgd2UgZG9uJ3Rcbi8vIGVtaXQgJ2RyYWluJyBiZWZvcmUgdGhlIHdyaXRlKCkgY29uc3VtZXIgZ2V0cyB0aGUgJ2ZhbHNlJyByZXR1cm5cbi8vIHZhbHVlLCBhbmQgaGFzIGEgY2hhbmNlIHRvIGF0dGFjaCBhICdkcmFpbicgbGlzdGVuZXIuXG5mdW5jdGlvbiBvbndyaXRlRHJhaW4oc3RyZWFtLCBzdGF0ZSkge1xuICBpZiAoc3RhdGUubGVuZ3RoID09PSAwICYmIHN0YXRlLm5lZWREcmFpbikge1xuICAgIHN0YXRlLm5lZWREcmFpbiA9IGZhbHNlO1xuICAgIHN0cmVhbS5lbWl0KCdkcmFpbicpO1xuICB9XG59XG5cbi8vIGlmIHRoZXJlJ3Mgc29tZXRoaW5nIGluIHRoZSBidWZmZXIgd2FpdGluZywgdGhlbiBwcm9jZXNzIGl0XG5mdW5jdGlvbiBjbGVhckJ1ZmZlcihzdHJlYW0sIHN0YXRlKSB7XG4gIHN0YXRlLmJ1ZmZlclByb2Nlc3NpbmcgPSB0cnVlO1xuICB2YXIgZW50cnkgPSBzdGF0ZS5idWZmZXJlZFJlcXVlc3Q7XG5cbiAgaWYgKHN0cmVhbS5fd3JpdGV2ICYmIGVudHJ5ICYmIGVudHJ5Lm5leHQpIHtcbiAgICAvLyBGYXN0IGNhc2UsIHdyaXRlIGV2ZXJ5dGhpbmcgdXNpbmcgX3dyaXRldigpXG4gICAgdmFyIGwgPSBzdGF0ZS5idWZmZXJlZFJlcXVlc3RDb3VudDtcbiAgICB2YXIgYnVmZmVyID0gbmV3IEFycmF5KGwpO1xuICAgIHZhciBob2xkZXIgPSBzdGF0ZS5jb3JrZWRSZXF1ZXN0c0ZyZWU7XG4gICAgaG9sZGVyLmVudHJ5ID0gZW50cnk7XG5cbiAgICB2YXIgY291bnQgPSAwO1xuICAgIHZhciBhbGxCdWZmZXJzID0gdHJ1ZTtcbiAgICB3aGlsZSAoZW50cnkpIHtcbiAgICAgIGJ1ZmZlcltjb3VudF0gPSBlbnRyeTtcbiAgICAgIGlmICghZW50cnkuaXNCdWYpIGFsbEJ1ZmZlcnMgPSBmYWxzZTtcbiAgICAgIGVudHJ5ID0gZW50cnkubmV4dDtcbiAgICAgIGNvdW50ICs9IDE7XG4gICAgfVxuICAgIGJ1ZmZlci5hbGxCdWZmZXJzID0gYWxsQnVmZmVycztcblxuICAgIGRvV3JpdGUoc3RyZWFtLCBzdGF0ZSwgdHJ1ZSwgc3RhdGUubGVuZ3RoLCBidWZmZXIsICcnLCBob2xkZXIuZmluaXNoKTtcblxuICAgIC8vIGRvV3JpdGUgaXMgYWxtb3N0IGFsd2F5cyBhc3luYywgZGVmZXIgdGhlc2UgdG8gc2F2ZSBhIGJpdCBvZiB0aW1lXG4gICAgLy8gYXMgdGhlIGhvdCBwYXRoIGVuZHMgd2l0aCBkb1dyaXRlXG4gICAgc3RhdGUucGVuZGluZ2NiKys7XG4gICAgc3RhdGUubGFzdEJ1ZmZlcmVkUmVxdWVzdCA9IG51bGw7XG4gICAgaWYgKGhvbGRlci5uZXh0KSB7XG4gICAgICBzdGF0ZS5jb3JrZWRSZXF1ZXN0c0ZyZWUgPSBob2xkZXIubmV4dDtcbiAgICAgIGhvbGRlci5uZXh0ID0gbnVsbDtcbiAgICB9IGVsc2Uge1xuICAgICAgc3RhdGUuY29ya2VkUmVxdWVzdHNGcmVlID0gbmV3IENvcmtlZFJlcXVlc3Qoc3RhdGUpO1xuICAgIH1cbiAgICBzdGF0ZS5idWZmZXJlZFJlcXVlc3RDb3VudCA9IDA7XG4gIH0gZWxzZSB7XG4gICAgLy8gU2xvdyBjYXNlLCB3cml0ZSBjaHVua3Mgb25lLWJ5LW9uZVxuICAgIHdoaWxlIChlbnRyeSkge1xuICAgICAgdmFyIGNodW5rID0gZW50cnkuY2h1bms7XG4gICAgICB2YXIgZW5jb2RpbmcgPSBlbnRyeS5lbmNvZGluZztcbiAgICAgIHZhciBjYiA9IGVudHJ5LmNhbGxiYWNrO1xuICAgICAgdmFyIGxlbiA9IHN0YXRlLm9iamVjdE1vZGUgPyAxIDogY2h1bmsubGVuZ3RoO1xuXG4gICAgICBkb1dyaXRlKHN0cmVhbSwgc3RhdGUsIGZhbHNlLCBsZW4sIGNodW5rLCBlbmNvZGluZywgY2IpO1xuICAgICAgZW50cnkgPSBlbnRyeS5uZXh0O1xuICAgICAgc3RhdGUuYnVmZmVyZWRSZXF1ZXN0Q291bnQtLTtcbiAgICAgIC8vIGlmIHdlIGRpZG4ndCBjYWxsIHRoZSBvbndyaXRlIGltbWVkaWF0ZWx5LCB0aGVuXG4gICAgICAvLyBpdCBtZWFucyB0aGF0IHdlIG5lZWQgdG8gd2FpdCB1bnRpbCBpdCBkb2VzLlxuICAgICAgLy8gYWxzbywgdGhhdCBtZWFucyB0aGF0IHRoZSBjaHVuayBhbmQgY2IgYXJlIGN1cnJlbnRseVxuICAgICAgLy8gYmVpbmcgcHJvY2Vzc2VkLCBzbyBtb3ZlIHRoZSBidWZmZXIgY291bnRlciBwYXN0IHRoZW0uXG4gICAgICBpZiAoc3RhdGUud3JpdGluZykge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoZW50cnkgPT09IG51bGwpIHN0YXRlLmxhc3RCdWZmZXJlZFJlcXVlc3QgPSBudWxsO1xuICB9XG5cbiAgc3RhdGUuYnVmZmVyZWRSZXF1ZXN0ID0gZW50cnk7XG4gIHN0YXRlLmJ1ZmZlclByb2Nlc3NpbmcgPSBmYWxzZTtcbn1cblxuV3JpdGFibGUucHJvdG90eXBlLl93cml0ZSA9IGZ1bmN0aW9uIChjaHVuaywgZW5jb2RpbmcsIGNiKSB7XG4gIGNiKG5ldyBFcnJvcignX3dyaXRlKCkgaXMgbm90IGltcGxlbWVudGVkJykpO1xufTtcblxuV3JpdGFibGUucHJvdG90eXBlLl93cml0ZXYgPSBudWxsO1xuXG5Xcml0YWJsZS5wcm90b3R5cGUuZW5kID0gZnVuY3Rpb24gKGNodW5rLCBlbmNvZGluZywgY2IpIHtcbiAgdmFyIHN0YXRlID0gdGhpcy5fd3JpdGFibGVTdGF0ZTtcblxuICBpZiAodHlwZW9mIGNodW5rID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2IgPSBjaHVuaztcbiAgICBjaHVuayA9IG51bGw7XG4gICAgZW5jb2RpbmcgPSBudWxsO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBlbmNvZGluZyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNiID0gZW5jb2Rpbmc7XG4gICAgZW5jb2RpbmcgPSBudWxsO1xuICB9XG5cbiAgaWYgKGNodW5rICE9PSBudWxsICYmIGNodW5rICE9PSB1bmRlZmluZWQpIHRoaXMud3JpdGUoY2h1bmssIGVuY29kaW5nKTtcblxuICAvLyAuZW5kKCkgZnVsbHkgdW5jb3Jrc1xuICBpZiAoc3RhdGUuY29ya2VkKSB7XG4gICAgc3RhdGUuY29ya2VkID0gMTtcbiAgICB0aGlzLnVuY29yaygpO1xuICB9XG5cbiAgLy8gaWdub3JlIHVubmVjZXNzYXJ5IGVuZCgpIGNhbGxzLlxuICBpZiAoIXN0YXRlLmVuZGluZyAmJiAhc3RhdGUuZmluaXNoZWQpIGVuZFdyaXRhYmxlKHRoaXMsIHN0YXRlLCBjYik7XG59O1xuXG5mdW5jdGlvbiBuZWVkRmluaXNoKHN0YXRlKSB7XG4gIHJldHVybiBzdGF0ZS5lbmRpbmcgJiYgc3RhdGUubGVuZ3RoID09PSAwICYmIHN0YXRlLmJ1ZmZlcmVkUmVxdWVzdCA9PT0gbnVsbCAmJiAhc3RhdGUuZmluaXNoZWQgJiYgIXN0YXRlLndyaXRpbmc7XG59XG5mdW5jdGlvbiBjYWxsRmluYWwoc3RyZWFtLCBzdGF0ZSkge1xuICBzdHJlYW0uX2ZpbmFsKGZ1bmN0aW9uIChlcnIpIHtcbiAgICBzdGF0ZS5wZW5kaW5nY2ItLTtcbiAgICBpZiAoZXJyKSB7XG4gICAgICBzdHJlYW0uZW1pdCgnZXJyb3InLCBlcnIpO1xuICAgIH1cbiAgICBzdGF0ZS5wcmVmaW5pc2hlZCA9IHRydWU7XG4gICAgc3RyZWFtLmVtaXQoJ3ByZWZpbmlzaCcpO1xuICAgIGZpbmlzaE1heWJlKHN0cmVhbSwgc3RhdGUpO1xuICB9KTtcbn1cbmZ1bmN0aW9uIHByZWZpbmlzaChzdHJlYW0sIHN0YXRlKSB7XG4gIGlmICghc3RhdGUucHJlZmluaXNoZWQgJiYgIXN0YXRlLmZpbmFsQ2FsbGVkKSB7XG4gICAgaWYgKHR5cGVvZiBzdHJlYW0uX2ZpbmFsID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBzdGF0ZS5wZW5kaW5nY2IrKztcbiAgICAgIHN0YXRlLmZpbmFsQ2FsbGVkID0gdHJ1ZTtcbiAgICAgIHBuYS5uZXh0VGljayhjYWxsRmluYWwsIHN0cmVhbSwgc3RhdGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdGF0ZS5wcmVmaW5pc2hlZCA9IHRydWU7XG4gICAgICBzdHJlYW0uZW1pdCgncHJlZmluaXNoJyk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGZpbmlzaE1heWJlKHN0cmVhbSwgc3RhdGUpIHtcbiAgdmFyIG5lZWQgPSBuZWVkRmluaXNoKHN0YXRlKTtcbiAgaWYgKG5lZWQpIHtcbiAgICBwcmVmaW5pc2goc3RyZWFtLCBzdGF0ZSk7XG4gICAgaWYgKHN0YXRlLnBlbmRpbmdjYiA9PT0gMCkge1xuICAgICAgc3RhdGUuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgc3RyZWFtLmVtaXQoJ2ZpbmlzaCcpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbmVlZDtcbn1cblxuZnVuY3Rpb24gZW5kV3JpdGFibGUoc3RyZWFtLCBzdGF0ZSwgY2IpIHtcbiAgc3RhdGUuZW5kaW5nID0gdHJ1ZTtcbiAgZmluaXNoTWF5YmUoc3RyZWFtLCBzdGF0ZSk7XG4gIGlmIChjYikge1xuICAgIGlmIChzdGF0ZS5maW5pc2hlZCkgcG5hLm5leHRUaWNrKGNiKTtlbHNlIHN0cmVhbS5vbmNlKCdmaW5pc2gnLCBjYik7XG4gIH1cbiAgc3RhdGUuZW5kZWQgPSB0cnVlO1xuICBzdHJlYW0ud3JpdGFibGUgPSBmYWxzZTtcbn1cblxuZnVuY3Rpb24gb25Db3JrZWRGaW5pc2goY29ya1JlcSwgc3RhdGUsIGVycikge1xuICB2YXIgZW50cnkgPSBjb3JrUmVxLmVudHJ5O1xuICBjb3JrUmVxLmVudHJ5ID0gbnVsbDtcbiAgd2hpbGUgKGVudHJ5KSB7XG4gICAgdmFyIGNiID0gZW50cnkuY2FsbGJhY2s7XG4gICAgc3RhdGUucGVuZGluZ2NiLS07XG4gICAgY2IoZXJyKTtcbiAgICBlbnRyeSA9IGVudHJ5Lm5leHQ7XG4gIH1cbiAgaWYgKHN0YXRlLmNvcmtlZFJlcXVlc3RzRnJlZSkge1xuICAgIHN0YXRlLmNvcmtlZFJlcXVlc3RzRnJlZS5uZXh0ID0gY29ya1JlcTtcbiAgfSBlbHNlIHtcbiAgICBzdGF0ZS5jb3JrZWRSZXF1ZXN0c0ZyZWUgPSBjb3JrUmVxO1xuICB9XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShXcml0YWJsZS5wcm90b3R5cGUsICdkZXN0cm95ZWQnLCB7XG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIGlmICh0aGlzLl93cml0YWJsZVN0YXRlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkO1xuICB9LFxuICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIC8vIHdlIGlnbm9yZSB0aGUgdmFsdWUgaWYgdGhlIHN0cmVhbVxuICAgIC8vIGhhcyBub3QgYmVlbiBpbml0aWFsaXplZCB5ZXRcbiAgICBpZiAoIXRoaXMuX3dyaXRhYmxlU3RhdGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBiYWNrd2FyZCBjb21wYXRpYmlsaXR5LCB0aGUgdXNlciBpcyBleHBsaWNpdGx5XG4gICAgLy8gbWFuYWdpbmcgZGVzdHJveWVkXG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQgPSB2YWx1ZTtcbiAgfVxufSk7XG5cbldyaXRhYmxlLnByb3RvdHlwZS5kZXN0cm95ID0gZGVzdHJveUltcGwuZGVzdHJveTtcbldyaXRhYmxlLnByb3RvdHlwZS5fdW5kZXN0cm95ID0gZGVzdHJveUltcGwudW5kZXN0cm95O1xuV3JpdGFibGUucHJvdG90eXBlLl9kZXN0cm95ID0gZnVuY3Rpb24gKGVyciwgY2IpIHtcbiAgdGhpcy5lbmQoKTtcbiAgY2IoZXJyKTtcbn07IiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXI7XG52YXIgdXRpbCA9IHJlcXVpcmUoJ3V0aWwnKTtcblxuZnVuY3Rpb24gY29weUJ1ZmZlcihzcmMsIHRhcmdldCwgb2Zmc2V0KSB7XG4gIHNyYy5jb3B5KHRhcmdldCwgb2Zmc2V0KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEJ1ZmZlckxpc3QoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEJ1ZmZlckxpc3QpO1xuXG4gICAgdGhpcy5oZWFkID0gbnVsbDtcbiAgICB0aGlzLnRhaWwgPSBudWxsO1xuICAgIHRoaXMubGVuZ3RoID0gMDtcbiAgfVxuXG4gIEJ1ZmZlckxpc3QucHJvdG90eXBlLnB1c2ggPSBmdW5jdGlvbiBwdXNoKHYpIHtcbiAgICB2YXIgZW50cnkgPSB7IGRhdGE6IHYsIG5leHQ6IG51bGwgfTtcbiAgICBpZiAodGhpcy5sZW5ndGggPiAwKSB0aGlzLnRhaWwubmV4dCA9IGVudHJ5O2Vsc2UgdGhpcy5oZWFkID0gZW50cnk7XG4gICAgdGhpcy50YWlsID0gZW50cnk7XG4gICAgKyt0aGlzLmxlbmd0aDtcbiAgfTtcblxuICBCdWZmZXJMaXN0LnByb3RvdHlwZS51bnNoaWZ0ID0gZnVuY3Rpb24gdW5zaGlmdCh2KSB7XG4gICAgdmFyIGVudHJ5ID0geyBkYXRhOiB2LCBuZXh0OiB0aGlzLmhlYWQgfTtcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDApIHRoaXMudGFpbCA9IGVudHJ5O1xuICAgIHRoaXMuaGVhZCA9IGVudHJ5O1xuICAgICsrdGhpcy5sZW5ndGg7XG4gIH07XG5cbiAgQnVmZmVyTGlzdC5wcm90b3R5cGUuc2hpZnQgPSBmdW5jdGlvbiBzaGlmdCgpIHtcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDApIHJldHVybjtcbiAgICB2YXIgcmV0ID0gdGhpcy5oZWFkLmRhdGE7XG4gICAgaWYgKHRoaXMubGVuZ3RoID09PSAxKSB0aGlzLmhlYWQgPSB0aGlzLnRhaWwgPSBudWxsO2Vsc2UgdGhpcy5oZWFkID0gdGhpcy5oZWFkLm5leHQ7XG4gICAgLS10aGlzLmxlbmd0aDtcbiAgICByZXR1cm4gcmV0O1xuICB9O1xuXG4gIEJ1ZmZlckxpc3QucHJvdG90eXBlLmNsZWFyID0gZnVuY3Rpb24gY2xlYXIoKSB7XG4gICAgdGhpcy5oZWFkID0gdGhpcy50YWlsID0gbnVsbDtcbiAgICB0aGlzLmxlbmd0aCA9IDA7XG4gIH07XG5cbiAgQnVmZmVyTGlzdC5wcm90b3R5cGUuam9pbiA9IGZ1bmN0aW9uIGpvaW4ocykge1xuICAgIGlmICh0aGlzLmxlbmd0aCA9PT0gMCkgcmV0dXJuICcnO1xuICAgIHZhciBwID0gdGhpcy5oZWFkO1xuICAgIHZhciByZXQgPSAnJyArIHAuZGF0YTtcbiAgICB3aGlsZSAocCA9IHAubmV4dCkge1xuICAgICAgcmV0ICs9IHMgKyBwLmRhdGE7XG4gICAgfXJldHVybiByZXQ7XG4gIH07XG5cbiAgQnVmZmVyTGlzdC5wcm90b3R5cGUuY29uY2F0ID0gZnVuY3Rpb24gY29uY2F0KG4pIHtcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDApIHJldHVybiBCdWZmZXIuYWxsb2MoMCk7XG4gICAgaWYgKHRoaXMubGVuZ3RoID09PSAxKSByZXR1cm4gdGhpcy5oZWFkLmRhdGE7XG4gICAgdmFyIHJldCA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShuID4+PiAwKTtcbiAgICB2YXIgcCA9IHRoaXMuaGVhZDtcbiAgICB2YXIgaSA9IDA7XG4gICAgd2hpbGUgKHApIHtcbiAgICAgIGNvcHlCdWZmZXIocC5kYXRhLCByZXQsIGkpO1xuICAgICAgaSArPSBwLmRhdGEubGVuZ3RoO1xuICAgICAgcCA9IHAubmV4dDtcbiAgICB9XG4gICAgcmV0dXJuIHJldDtcbiAgfTtcblxuICByZXR1cm4gQnVmZmVyTGlzdDtcbn0oKTtcblxuaWYgKHV0aWwgJiYgdXRpbC5pbnNwZWN0ICYmIHV0aWwuaW5zcGVjdC5jdXN0b20pIHtcbiAgbW9kdWxlLmV4cG9ydHMucHJvdG90eXBlW3V0aWwuaW5zcGVjdC5jdXN0b21dID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBvYmogPSB1dGlsLmluc3BlY3QoeyBsZW5ndGg6IHRoaXMubGVuZ3RoIH0pO1xuICAgIHJldHVybiB0aGlzLmNvbnN0cnVjdG9yLm5hbWUgKyAnICcgKyBvYmo7XG4gIH07XG59IiwiJ3VzZSBzdHJpY3QnO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xuXG52YXIgcG5hID0gcmVxdWlyZSgncHJvY2Vzcy1uZXh0aWNrLWFyZ3MnKTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG4vLyB1bmRvY3VtZW50ZWQgY2IoKSBBUEksIG5lZWRlZCBmb3IgY29yZSwgbm90IGZvciBwdWJsaWMgQVBJXG5mdW5jdGlvbiBkZXN0cm95KGVyciwgY2IpIHtcbiAgdmFyIF90aGlzID0gdGhpcztcblxuICB2YXIgcmVhZGFibGVEZXN0cm95ZWQgPSB0aGlzLl9yZWFkYWJsZVN0YXRlICYmIHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkO1xuICB2YXIgd3JpdGFibGVEZXN0cm95ZWQgPSB0aGlzLl93cml0YWJsZVN0YXRlICYmIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkO1xuXG4gIGlmIChyZWFkYWJsZURlc3Ryb3llZCB8fCB3cml0YWJsZURlc3Ryb3llZCkge1xuICAgIGlmIChjYikge1xuICAgICAgY2IoZXJyKTtcbiAgICB9IGVsc2UgaWYgKGVyciAmJiAoIXRoaXMuX3dyaXRhYmxlU3RhdGUgfHwgIXRoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkKSkge1xuICAgICAgcG5hLm5leHRUaWNrKGVtaXRFcnJvck5ULCB0aGlzLCBlcnIpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8vIHdlIHNldCBkZXN0cm95ZWQgdG8gdHJ1ZSBiZWZvcmUgZmlyaW5nIGVycm9yIGNhbGxiYWNrcyBpbiBvcmRlclxuICAvLyB0byBtYWtlIGl0IHJlLWVudHJhbmNlIHNhZmUgaW4gY2FzZSBkZXN0cm95KCkgaXMgY2FsbGVkIHdpdGhpbiBjYWxsYmFja3NcblxuICBpZiAodGhpcy5fcmVhZGFibGVTdGF0ZSkge1xuICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkID0gdHJ1ZTtcbiAgfVxuXG4gIC8vIGlmIHRoaXMgaXMgYSBkdXBsZXggc3RyZWFtIG1hcmsgdGhlIHdyaXRhYmxlIHBhcnQgYXMgZGVzdHJveWVkIGFzIHdlbGxcbiAgaWYgKHRoaXMuX3dyaXRhYmxlU3RhdGUpIHtcbiAgICB0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZCA9IHRydWU7XG4gIH1cblxuICB0aGlzLl9kZXN0cm95KGVyciB8fCBudWxsLCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgaWYgKCFjYiAmJiBlcnIpIHtcbiAgICAgIHBuYS5uZXh0VGljayhlbWl0RXJyb3JOVCwgX3RoaXMsIGVycik7XG4gICAgICBpZiAoX3RoaXMuX3dyaXRhYmxlU3RhdGUpIHtcbiAgICAgICAgX3RoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGNiKSB7XG4gICAgICBjYihlcnIpO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIHRoaXM7XG59XG5cbmZ1bmN0aW9uIHVuZGVzdHJveSgpIHtcbiAgaWYgKHRoaXMuX3JlYWRhYmxlU3RhdGUpIHtcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCA9IGZhbHNlO1xuICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUucmVhZGluZyA9IGZhbHNlO1xuICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUuZW5kZWQgPSBmYWxzZTtcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmVuZEVtaXR0ZWQgPSBmYWxzZTtcbiAgfVxuXG4gIGlmICh0aGlzLl93cml0YWJsZVN0YXRlKSB7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQgPSBmYWxzZTtcbiAgICB0aGlzLl93cml0YWJsZVN0YXRlLmVuZGVkID0gZmFsc2U7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5lbmRpbmcgPSBmYWxzZTtcbiAgICB0aGlzLl93cml0YWJsZVN0YXRlLmZpbmlzaGVkID0gZmFsc2U7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQgPSBmYWxzZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBlbWl0RXJyb3JOVChzZWxmLCBlcnIpIHtcbiAgc2VsZi5lbWl0KCdlcnJvcicsIGVycik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBkZXN0cm95OiBkZXN0cm95LFxuICB1bmRlc3Ryb3k6IHVuZGVzdHJveVxufTsiLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlcjtcbiIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9yZWFkYWJsZScpLlBhc3NUaHJvdWdoXG4iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2xpYi9fc3RyZWFtX3JlYWRhYmxlLmpzJyk7XG5leHBvcnRzLlN0cmVhbSA9IGV4cG9ydHM7XG5leHBvcnRzLlJlYWRhYmxlID0gZXhwb3J0cztcbmV4cG9ydHMuV3JpdGFibGUgPSByZXF1aXJlKCcuL2xpYi9fc3RyZWFtX3dyaXRhYmxlLmpzJyk7XG5leHBvcnRzLkR1cGxleCA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fZHVwbGV4LmpzJyk7XG5leHBvcnRzLlRyYW5zZm9ybSA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fdHJhbnNmb3JtLmpzJyk7XG5leHBvcnRzLlBhc3NUaHJvdWdoID0gcmVxdWlyZSgnLi9saWIvX3N0cmVhbV9wYXNzdGhyb3VnaC5qcycpO1xuIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL3JlYWRhYmxlJykuVHJhbnNmb3JtXG4iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fd3JpdGFibGUuanMnKTtcbiIsIi8qIGVzbGludC1kaXNhYmxlIG5vZGUvbm8tZGVwcmVjYXRlZC1hcGkgKi9cbnZhciBidWZmZXIgPSByZXF1aXJlKCdidWZmZXInKVxudmFyIEJ1ZmZlciA9IGJ1ZmZlci5CdWZmZXJcblxuLy8gYWx0ZXJuYXRpdmUgdG8gdXNpbmcgT2JqZWN0LmtleXMgZm9yIG9sZCBicm93c2Vyc1xuZnVuY3Rpb24gY29weVByb3BzIChzcmMsIGRzdCkge1xuICBmb3IgKHZhciBrZXkgaW4gc3JjKSB7XG4gICAgZHN0W2tleV0gPSBzcmNba2V5XVxuICB9XG59XG5pZiAoQnVmZmVyLmZyb20gJiYgQnVmZmVyLmFsbG9jICYmIEJ1ZmZlci5hbGxvY1Vuc2FmZSAmJiBCdWZmZXIuYWxsb2NVbnNhZmVTbG93KSB7XG4gIG1vZHVsZS5leHBvcnRzID0gYnVmZmVyXG59IGVsc2Uge1xuICAvLyBDb3B5IHByb3BlcnRpZXMgZnJvbSByZXF1aXJlKCdidWZmZXInKVxuICBjb3B5UHJvcHMoYnVmZmVyLCBleHBvcnRzKVxuICBleHBvcnRzLkJ1ZmZlciA9IFNhZmVCdWZmZXJcbn1cblxuZnVuY3Rpb24gU2FmZUJ1ZmZlciAoYXJnLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpIHtcbiAgcmV0dXJuIEJ1ZmZlcihhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aClcbn1cblxuLy8gQ29weSBzdGF0aWMgbWV0aG9kcyBmcm9tIEJ1ZmZlclxuY29weVByb3BzKEJ1ZmZlciwgU2FmZUJ1ZmZlcilcblxuU2FmZUJ1ZmZlci5mcm9tID0gZnVuY3Rpb24gKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKSB7XG4gIGlmICh0eXBlb2YgYXJnID09PSAnbnVtYmVyJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3Qgbm90IGJlIGEgbnVtYmVyJylcbiAgfVxuICByZXR1cm4gQnVmZmVyKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKVxufVxuXG5TYWZlQnVmZmVyLmFsbG9jID0gZnVuY3Rpb24gKHNpemUsIGZpbGwsIGVuY29kaW5nKSB7XG4gIGlmICh0eXBlb2Ygc2l6ZSAhPT0gJ251bWJlcicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyJylcbiAgfVxuICB2YXIgYnVmID0gQnVmZmVyKHNpemUpXG4gIGlmIChmaWxsICE9PSB1bmRlZmluZWQpIHtcbiAgICBpZiAodHlwZW9mIGVuY29kaW5nID09PSAnc3RyaW5nJykge1xuICAgICAgYnVmLmZpbGwoZmlsbCwgZW5jb2RpbmcpXG4gICAgfSBlbHNlIHtcbiAgICAgIGJ1Zi5maWxsKGZpbGwpXG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGJ1Zi5maWxsKDApXG4gIH1cbiAgcmV0dXJuIGJ1ZlxufVxuXG5TYWZlQnVmZmVyLmFsbG9jVW5zYWZlID0gZnVuY3Rpb24gKHNpemUpIHtcbiAgaWYgKHR5cGVvZiBzaXplICE9PSAnbnVtYmVyJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3QgYmUgYSBudW1iZXInKVxuICB9XG4gIHJldHVybiBCdWZmZXIoc2l6ZSlcbn1cblxuU2FmZUJ1ZmZlci5hbGxvY1Vuc2FmZVNsb3cgPSBmdW5jdGlvbiAoc2l6ZSkge1xuICBpZiAodHlwZW9mIHNpemUgIT09ICdudW1iZXInKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnQgbXVzdCBiZSBhIG51bWJlcicpXG4gIH1cbiAgcmV0dXJuIGJ1ZmZlci5TbG93QnVmZmVyKHNpemUpXG59XG4iLCI7KGZ1bmN0aW9uIChzYXgpIHsgLy8gd3JhcHBlciBmb3Igbm9uLW5vZGUgZW52c1xuICBzYXgucGFyc2VyID0gZnVuY3Rpb24gKHN0cmljdCwgb3B0KSB7IHJldHVybiBuZXcgU0FYUGFyc2VyKHN0cmljdCwgb3B0KSB9XG4gIHNheC5TQVhQYXJzZXIgPSBTQVhQYXJzZXJcbiAgc2F4LlNBWFN0cmVhbSA9IFNBWFN0cmVhbVxuICBzYXguY3JlYXRlU3RyZWFtID0gY3JlYXRlU3RyZWFtXG5cbiAgLy8gV2hlbiB3ZSBwYXNzIHRoZSBNQVhfQlVGRkVSX0xFTkdUSCBwb3NpdGlvbiwgc3RhcnQgY2hlY2tpbmcgZm9yIGJ1ZmZlciBvdmVycnVucy5cbiAgLy8gV2hlbiB3ZSBjaGVjaywgc2NoZWR1bGUgdGhlIG5leHQgY2hlY2sgZm9yIE1BWF9CVUZGRVJfTEVOR1RIIC0gKG1heChidWZmZXIgbGVuZ3RocykpLFxuICAvLyBzaW5jZSB0aGF0J3MgdGhlIGVhcmxpZXN0IHRoYXQgYSBidWZmZXIgb3ZlcnJ1biBjb3VsZCBvY2N1ci4gIFRoaXMgd2F5LCBjaGVja3MgYXJlXG4gIC8vIGFzIHJhcmUgYXMgcmVxdWlyZWQsIGJ1dCBhcyBvZnRlbiBhcyBuZWNlc3NhcnkgdG8gZW5zdXJlIG5ldmVyIGNyb3NzaW5nIHRoaXMgYm91bmQuXG4gIC8vIEZ1cnRoZXJtb3JlLCBidWZmZXJzIGFyZSBvbmx5IHRlc3RlZCBhdCBtb3N0IG9uY2UgcGVyIHdyaXRlKCksIHNvIHBhc3NpbmcgYSB2ZXJ5XG4gIC8vIGxhcmdlIHN0cmluZyBpbnRvIHdyaXRlKCkgbWlnaHQgaGF2ZSB1bmRlc2lyYWJsZSBlZmZlY3RzLCBidXQgdGhpcyBpcyBtYW5hZ2VhYmxlIGJ5XG4gIC8vIHRoZSBjYWxsZXIsIHNvIGl0IGlzIGFzc3VtZWQgdG8gYmUgc2FmZS4gIFRodXMsIGEgY2FsbCB0byB3cml0ZSgpIG1heSwgaW4gdGhlIGV4dHJlbWVcbiAgLy8gZWRnZSBjYXNlLCByZXN1bHQgaW4gY3JlYXRpbmcgYXQgbW9zdCBvbmUgY29tcGxldGUgY29weSBvZiB0aGUgc3RyaW5nIHBhc3NlZCBpbi5cbiAgLy8gU2V0IHRvIEluZmluaXR5IHRvIGhhdmUgdW5saW1pdGVkIGJ1ZmZlcnMuXG4gIHNheC5NQVhfQlVGRkVSX0xFTkdUSCA9IDY0ICogMTAyNFxuXG4gIHZhciBidWZmZXJzID0gW1xuICAgICdjb21tZW50JywgJ3NnbWxEZWNsJywgJ3RleHROb2RlJywgJ3RhZ05hbWUnLCAnZG9jdHlwZScsXG4gICAgJ3Byb2NJbnN0TmFtZScsICdwcm9jSW5zdEJvZHknLCAnZW50aXR5JywgJ2F0dHJpYk5hbWUnLFxuICAgICdhdHRyaWJWYWx1ZScsICdjZGF0YScsICdzY3JpcHQnXG4gIF1cblxuICBzYXguRVZFTlRTID0gW1xuICAgICd0ZXh0JyxcbiAgICAncHJvY2Vzc2luZ2luc3RydWN0aW9uJyxcbiAgICAnc2dtbGRlY2xhcmF0aW9uJyxcbiAgICAnZG9jdHlwZScsXG4gICAgJ2NvbW1lbnQnLFxuICAgICdvcGVudGFnc3RhcnQnLFxuICAgICdhdHRyaWJ1dGUnLFxuICAgICdvcGVudGFnJyxcbiAgICAnY2xvc2V0YWcnLFxuICAgICdvcGVuY2RhdGEnLFxuICAgICdjZGF0YScsXG4gICAgJ2Nsb3NlY2RhdGEnLFxuICAgICdlcnJvcicsXG4gICAgJ2VuZCcsXG4gICAgJ3JlYWR5JyxcbiAgICAnc2NyaXB0JyxcbiAgICAnb3Blbm5hbWVzcGFjZScsXG4gICAgJ2Nsb3NlbmFtZXNwYWNlJ1xuICBdXG5cbiAgZnVuY3Rpb24gU0FYUGFyc2VyIChzdHJpY3QsIG9wdCkge1xuICAgIGlmICghKHRoaXMgaW5zdGFuY2VvZiBTQVhQYXJzZXIpKSB7XG4gICAgICByZXR1cm4gbmV3IFNBWFBhcnNlcihzdHJpY3QsIG9wdClcbiAgICB9XG5cbiAgICB2YXIgcGFyc2VyID0gdGhpc1xuICAgIGNsZWFyQnVmZmVycyhwYXJzZXIpXG4gICAgcGFyc2VyLnEgPSBwYXJzZXIuYyA9ICcnXG4gICAgcGFyc2VyLmJ1ZmZlckNoZWNrUG9zaXRpb24gPSBzYXguTUFYX0JVRkZFUl9MRU5HVEhcbiAgICBwYXJzZXIub3B0ID0gb3B0IHx8IHt9XG4gICAgcGFyc2VyLm9wdC5sb3dlcmNhc2UgPSBwYXJzZXIub3B0Lmxvd2VyY2FzZSB8fCBwYXJzZXIub3B0Lmxvd2VyY2FzZXRhZ3NcbiAgICBwYXJzZXIubG9vc2VDYXNlID0gcGFyc2VyLm9wdC5sb3dlcmNhc2UgPyAndG9Mb3dlckNhc2UnIDogJ3RvVXBwZXJDYXNlJ1xuICAgIHBhcnNlci50YWdzID0gW11cbiAgICBwYXJzZXIuY2xvc2VkID0gcGFyc2VyLmNsb3NlZFJvb3QgPSBwYXJzZXIuc2F3Um9vdCA9IGZhbHNlXG4gICAgcGFyc2VyLnRhZyA9IHBhcnNlci5lcnJvciA9IG51bGxcbiAgICBwYXJzZXIuc3RyaWN0ID0gISFzdHJpY3RcbiAgICBwYXJzZXIubm9zY3JpcHQgPSAhIShzdHJpY3QgfHwgcGFyc2VyLm9wdC5ub3NjcmlwdClcbiAgICBwYXJzZXIuc3RhdGUgPSBTLkJFR0lOXG4gICAgcGFyc2VyLnN0cmljdEVudGl0aWVzID0gcGFyc2VyLm9wdC5zdHJpY3RFbnRpdGllc1xuICAgIHBhcnNlci5FTlRJVElFUyA9IHBhcnNlci5zdHJpY3RFbnRpdGllcyA/IE9iamVjdC5jcmVhdGUoc2F4LlhNTF9FTlRJVElFUykgOiBPYmplY3QuY3JlYXRlKHNheC5FTlRJVElFUylcbiAgICBwYXJzZXIuYXR0cmliTGlzdCA9IFtdXG5cbiAgICAvLyBuYW1lc3BhY2VzIGZvcm0gYSBwcm90b3R5cGUgY2hhaW4uXG4gICAgLy8gaXQgYWx3YXlzIHBvaW50cyBhdCB0aGUgY3VycmVudCB0YWcsXG4gICAgLy8gd2hpY2ggcHJvdG9zIHRvIGl0cyBwYXJlbnQgdGFnLlxuICAgIGlmIChwYXJzZXIub3B0LnhtbG5zKSB7XG4gICAgICBwYXJzZXIubnMgPSBPYmplY3QuY3JlYXRlKHJvb3ROUylcbiAgICB9XG5cbiAgICAvLyBtb3N0bHkganVzdCBmb3IgZXJyb3IgcmVwb3J0aW5nXG4gICAgcGFyc2VyLnRyYWNrUG9zaXRpb24gPSBwYXJzZXIub3B0LnBvc2l0aW9uICE9PSBmYWxzZVxuICAgIGlmIChwYXJzZXIudHJhY2tQb3NpdGlvbikge1xuICAgICAgcGFyc2VyLnBvc2l0aW9uID0gcGFyc2VyLmxpbmUgPSBwYXJzZXIuY29sdW1uID0gMFxuICAgIH1cbiAgICBlbWl0KHBhcnNlciwgJ29ucmVhZHknKVxuICB9XG5cbiAgaWYgKCFPYmplY3QuY3JlYXRlKSB7XG4gICAgT2JqZWN0LmNyZWF0ZSA9IGZ1bmN0aW9uIChvKSB7XG4gICAgICBmdW5jdGlvbiBGICgpIHt9XG4gICAgICBGLnByb3RvdHlwZSA9IG9cbiAgICAgIHZhciBuZXdmID0gbmV3IEYoKVxuICAgICAgcmV0dXJuIG5ld2ZcbiAgICB9XG4gIH1cblxuICBpZiAoIU9iamVjdC5rZXlzKSB7XG4gICAgT2JqZWN0LmtleXMgPSBmdW5jdGlvbiAobykge1xuICAgICAgdmFyIGEgPSBbXVxuICAgICAgZm9yICh2YXIgaSBpbiBvKSBpZiAoby5oYXNPd25Qcm9wZXJ0eShpKSkgYS5wdXNoKGkpXG4gICAgICByZXR1cm4gYVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGNoZWNrQnVmZmVyTGVuZ3RoIChwYXJzZXIpIHtcbiAgICB2YXIgbWF4QWxsb3dlZCA9IE1hdGgubWF4KHNheC5NQVhfQlVGRkVSX0xFTkdUSCwgMTApXG4gICAgdmFyIG1heEFjdHVhbCA9IDBcbiAgICBmb3IgKHZhciBpID0gMCwgbCA9IGJ1ZmZlcnMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICB2YXIgbGVuID0gcGFyc2VyW2J1ZmZlcnNbaV1dLmxlbmd0aFxuICAgICAgaWYgKGxlbiA+IG1heEFsbG93ZWQpIHtcbiAgICAgICAgLy8gVGV4dC9jZGF0YSBub2RlcyBjYW4gZ2V0IGJpZywgYW5kIHNpbmNlIHRoZXkncmUgYnVmZmVyZWQsXG4gICAgICAgIC8vIHdlIGNhbiBnZXQgaGVyZSB1bmRlciBub3JtYWwgY29uZGl0aW9ucy5cbiAgICAgICAgLy8gQXZvaWQgaXNzdWVzIGJ5IGVtaXR0aW5nIHRoZSB0ZXh0IG5vZGUgbm93LFxuICAgICAgICAvLyBzbyBhdCBsZWFzdCBpdCB3b24ndCBnZXQgYW55IGJpZ2dlci5cbiAgICAgICAgc3dpdGNoIChidWZmZXJzW2ldKSB7XG4gICAgICAgICAgY2FzZSAndGV4dE5vZGUnOlxuICAgICAgICAgICAgY2xvc2VUZXh0KHBhcnNlcilcbiAgICAgICAgICAgIGJyZWFrXG5cbiAgICAgICAgICBjYXNlICdjZGF0YSc6XG4gICAgICAgICAgICBlbWl0Tm9kZShwYXJzZXIsICdvbmNkYXRhJywgcGFyc2VyLmNkYXRhKVxuICAgICAgICAgICAgcGFyc2VyLmNkYXRhID0gJydcbiAgICAgICAgICAgIGJyZWFrXG5cbiAgICAgICAgICBjYXNlICdzY3JpcHQnOlxuICAgICAgICAgICAgZW1pdE5vZGUocGFyc2VyLCAnb25zY3JpcHQnLCBwYXJzZXIuc2NyaXB0KVxuICAgICAgICAgICAgcGFyc2VyLnNjcmlwdCA9ICcnXG4gICAgICAgICAgICBicmVha1xuXG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGVycm9yKHBhcnNlciwgJ01heCBidWZmZXIgbGVuZ3RoIGV4Y2VlZGVkOiAnICsgYnVmZmVyc1tpXSlcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbWF4QWN0dWFsID0gTWF0aC5tYXgobWF4QWN0dWFsLCBsZW4pXG4gICAgfVxuICAgIC8vIHNjaGVkdWxlIHRoZSBuZXh0IGNoZWNrIGZvciB0aGUgZWFybGllc3QgcG9zc2libGUgYnVmZmVyIG92ZXJydW4uXG4gICAgdmFyIG0gPSBzYXguTUFYX0JVRkZFUl9MRU5HVEggLSBtYXhBY3R1YWxcbiAgICBwYXJzZXIuYnVmZmVyQ2hlY2tQb3NpdGlvbiA9IG0gKyBwYXJzZXIucG9zaXRpb25cbiAgfVxuXG4gIGZ1bmN0aW9uIGNsZWFyQnVmZmVycyAocGFyc2VyKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGwgPSBidWZmZXJzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgcGFyc2VyW2J1ZmZlcnNbaV1dID0gJydcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBmbHVzaEJ1ZmZlcnMgKHBhcnNlcikge1xuICAgIGNsb3NlVGV4dChwYXJzZXIpXG4gICAgaWYgKHBhcnNlci5jZGF0YSAhPT0gJycpIHtcbiAgICAgIGVtaXROb2RlKHBhcnNlciwgJ29uY2RhdGEnLCBwYXJzZXIuY2RhdGEpXG4gICAgICBwYXJzZXIuY2RhdGEgPSAnJ1xuICAgIH1cbiAgICBpZiAocGFyc2VyLnNjcmlwdCAhPT0gJycpIHtcbiAgICAgIGVtaXROb2RlKHBhcnNlciwgJ29uc2NyaXB0JywgcGFyc2VyLnNjcmlwdClcbiAgICAgIHBhcnNlci5zY3JpcHQgPSAnJ1xuICAgIH1cbiAgfVxuXG4gIFNBWFBhcnNlci5wcm90b3R5cGUgPSB7XG4gICAgZW5kOiBmdW5jdGlvbiAoKSB7IGVuZCh0aGlzKSB9LFxuICAgIHdyaXRlOiB3cml0ZSxcbiAgICByZXN1bWU6IGZ1bmN0aW9uICgpIHsgdGhpcy5lcnJvciA9IG51bGw7IHJldHVybiB0aGlzIH0sXG4gICAgY2xvc2U6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMud3JpdGUobnVsbCkgfSxcbiAgICBmbHVzaDogZnVuY3Rpb24gKCkgeyBmbHVzaEJ1ZmZlcnModGhpcykgfVxuICB9XG5cbiAgdmFyIFN0cmVhbVxuICB0cnkge1xuICAgIFN0cmVhbSA9IHJlcXVpcmUoJ3N0cmVhbScpLlN0cmVhbVxuICB9IGNhdGNoIChleCkge1xuICAgIFN0cmVhbSA9IGZ1bmN0aW9uICgpIHt9XG4gIH1cblxuICB2YXIgc3RyZWFtV3JhcHMgPSBzYXguRVZFTlRTLmZpbHRlcihmdW5jdGlvbiAoZXYpIHtcbiAgICByZXR1cm4gZXYgIT09ICdlcnJvcicgJiYgZXYgIT09ICdlbmQnXG4gIH0pXG5cbiAgZnVuY3Rpb24gY3JlYXRlU3RyZWFtIChzdHJpY3QsIG9wdCkge1xuICAgIHJldHVybiBuZXcgU0FYU3RyZWFtKHN0cmljdCwgb3B0KVxuICB9XG5cbiAgZnVuY3Rpb24gU0FYU3RyZWFtIChzdHJpY3QsIG9wdCkge1xuICAgIGlmICghKHRoaXMgaW5zdGFuY2VvZiBTQVhTdHJlYW0pKSB7XG4gICAgICByZXR1cm4gbmV3IFNBWFN0cmVhbShzdHJpY3QsIG9wdClcbiAgICB9XG5cbiAgICBTdHJlYW0uYXBwbHkodGhpcylcblxuICAgIHRoaXMuX3BhcnNlciA9IG5ldyBTQVhQYXJzZXIoc3RyaWN0LCBvcHQpXG4gICAgdGhpcy53cml0YWJsZSA9IHRydWVcbiAgICB0aGlzLnJlYWRhYmxlID0gdHJ1ZVxuXG4gICAgdmFyIG1lID0gdGhpc1xuXG4gICAgdGhpcy5fcGFyc2VyLm9uZW5kID0gZnVuY3Rpb24gKCkge1xuICAgICAgbWUuZW1pdCgnZW5kJylcbiAgICB9XG5cbiAgICB0aGlzLl9wYXJzZXIub25lcnJvciA9IGZ1bmN0aW9uIChlcikge1xuICAgICAgbWUuZW1pdCgnZXJyb3InLCBlcilcblxuICAgICAgLy8gaWYgZGlkbid0IHRocm93LCB0aGVuIG1lYW5zIGVycm9yIHdhcyBoYW5kbGVkLlxuICAgICAgLy8gZ28gYWhlYWQgYW5kIGNsZWFyIGVycm9yLCBzbyB3ZSBjYW4gd3JpdGUgYWdhaW4uXG4gICAgICBtZS5fcGFyc2VyLmVycm9yID0gbnVsbFxuICAgIH1cblxuICAgIHRoaXMuX2RlY29kZXIgPSBudWxsXG5cbiAgICBzdHJlYW1XcmFwcy5mb3JFYWNoKGZ1bmN0aW9uIChldikge1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG1lLCAnb24nICsgZXYsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIG1lLl9wYXJzZXJbJ29uJyArIGV2XVxuICAgICAgICB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uIChoKSB7XG4gICAgICAgICAgaWYgKCFoKSB7XG4gICAgICAgICAgICBtZS5yZW1vdmVBbGxMaXN0ZW5lcnMoZXYpXG4gICAgICAgICAgICBtZS5fcGFyc2VyWydvbicgKyBldl0gPSBoXG4gICAgICAgICAgICByZXR1cm4gaFxuICAgICAgICAgIH1cbiAgICAgICAgICBtZS5vbihldiwgaClcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZVxuICAgICAgfSlcbiAgICB9KVxuICB9XG5cbiAgU0FYU3RyZWFtLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoU3RyZWFtLnByb3RvdHlwZSwge1xuICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICB2YWx1ZTogU0FYU3RyZWFtXG4gICAgfVxuICB9KVxuXG4gIFNBWFN0cmVhbS5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbiAoZGF0YSkge1xuICAgIGlmICh0eXBlb2YgQnVmZmVyID09PSAnZnVuY3Rpb24nICYmXG4gICAgICB0eXBlb2YgQnVmZmVyLmlzQnVmZmVyID09PSAnZnVuY3Rpb24nICYmXG4gICAgICBCdWZmZXIuaXNCdWZmZXIoZGF0YSkpIHtcbiAgICAgIGlmICghdGhpcy5fZGVjb2Rlcikge1xuICAgICAgICB2YXIgU0QgPSByZXF1aXJlKCdzdHJpbmdfZGVjb2RlcicpLlN0cmluZ0RlY29kZXJcbiAgICAgICAgdGhpcy5fZGVjb2RlciA9IG5ldyBTRCgndXRmOCcpXG4gICAgICB9XG4gICAgICBkYXRhID0gdGhpcy5fZGVjb2Rlci53cml0ZShkYXRhKVxuICAgIH1cblxuICAgIHRoaXMuX3BhcnNlci53cml0ZShkYXRhLnRvU3RyaW5nKCkpXG4gICAgdGhpcy5lbWl0KCdkYXRhJywgZGF0YSlcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG5cbiAgU0FYU3RyZWFtLnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbiAoY2h1bmspIHtcbiAgICBpZiAoY2h1bmsgJiYgY2h1bmsubGVuZ3RoKSB7XG4gICAgICB0aGlzLndyaXRlKGNodW5rKVxuICAgIH1cbiAgICB0aGlzLl9wYXJzZXIuZW5kKClcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG5cbiAgU0FYU3RyZWFtLnByb3RvdHlwZS5vbiA9IGZ1bmN0aW9uIChldiwgaGFuZGxlcikge1xuICAgIHZhciBtZSA9IHRoaXNcbiAgICBpZiAoIW1lLl9wYXJzZXJbJ29uJyArIGV2XSAmJiBzdHJlYW1XcmFwcy5pbmRleE9mKGV2KSAhPT0gLTEpIHtcbiAgICAgIG1lLl9wYXJzZXJbJ29uJyArIGV2XSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBhcmd1bWVudHMubGVuZ3RoID09PSAxID8gW2FyZ3VtZW50c1swXV0gOiBBcnJheS5hcHBseShudWxsLCBhcmd1bWVudHMpXG4gICAgICAgIGFyZ3Muc3BsaWNlKDAsIDAsIGV2KVxuICAgICAgICBtZS5lbWl0LmFwcGx5KG1lLCBhcmdzKVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBTdHJlYW0ucHJvdG90eXBlLm9uLmNhbGwobWUsIGV2LCBoYW5kbGVyKVxuICB9XG5cbiAgLy8gdGhpcyByZWFsbHkgbmVlZHMgdG8gYmUgcmVwbGFjZWQgd2l0aCBjaGFyYWN0ZXIgY2xhc3Nlcy5cbiAgLy8gWE1MIGFsbG93cyBhbGwgbWFubmVyIG9mIHJpZGljdWxvdXMgbnVtYmVycyBhbmQgZGlnaXRzLlxuICB2YXIgQ0RBVEEgPSAnW0NEQVRBWydcbiAgdmFyIERPQ1RZUEUgPSAnRE9DVFlQRSdcbiAgdmFyIFhNTF9OQU1FU1BBQ0UgPSAnaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlJ1xuICB2YXIgWE1MTlNfTkFNRVNQQUNFID0gJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAveG1sbnMvJ1xuICB2YXIgcm9vdE5TID0geyB4bWw6IFhNTF9OQU1FU1BBQ0UsIHhtbG5zOiBYTUxOU19OQU1FU1BBQ0UgfVxuXG4gIC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL1JFQy14bWwvI05ULU5hbWVTdGFydENoYXJcbiAgLy8gVGhpcyBpbXBsZW1lbnRhdGlvbiB3b3JrcyBvbiBzdHJpbmdzLCBhIHNpbmdsZSBjaGFyYWN0ZXIgYXQgYSB0aW1lXG4gIC8vIGFzIHN1Y2gsIGl0IGNhbm5vdCBldmVyIHN1cHBvcnQgYXN0cmFsLXBsYW5lIGNoYXJhY3RlcnMgKDEwMDAwLUVGRkZGKVxuICAvLyB3aXRob3V0IGEgc2lnbmlmaWNhbnQgYnJlYWtpbmcgY2hhbmdlIHRvIGVpdGhlciB0aGlzICBwYXJzZXIsIG9yIHRoZVxuICAvLyBKYXZhU2NyaXB0IGxhbmd1YWdlLiAgSW1wbGVtZW50YXRpb24gb2YgYW4gZW1vamktY2FwYWJsZSB4bWwgcGFyc2VyXG4gIC8vIGlzIGxlZnQgYXMgYW4gZXhlcmNpc2UgZm9yIHRoZSByZWFkZXIuXG4gIHZhciBuYW1lU3RhcnQgPSAvWzpfQS1aYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXS9cblxuICB2YXIgbmFtZUJvZHkgPSAvWzpfQS1aYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MC5cXGQtXS9cblxuICB2YXIgZW50aXR5U3RhcnQgPSAvWyM6X0EtWmEtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF0vXG4gIHZhciBlbnRpdHlCb2R5ID0gL1sjOl9BLVphLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwLlxcZC1dL1xuXG4gIGZ1bmN0aW9uIGlzV2hpdGVzcGFjZSAoYykge1xuICAgIHJldHVybiBjID09PSAnICcgfHwgYyA9PT0gJ1xcbicgfHwgYyA9PT0gJ1xccicgfHwgYyA9PT0gJ1xcdCdcbiAgfVxuXG4gIGZ1bmN0aW9uIGlzUXVvdGUgKGMpIHtcbiAgICByZXR1cm4gYyA9PT0gJ1wiJyB8fCBjID09PSAnXFwnJ1xuICB9XG5cbiAgZnVuY3Rpb24gaXNBdHRyaWJFbmQgKGMpIHtcbiAgICByZXR1cm4gYyA9PT0gJz4nIHx8IGlzV2hpdGVzcGFjZShjKVxuICB9XG5cbiAgZnVuY3Rpb24gaXNNYXRjaCAocmVnZXgsIGMpIHtcbiAgICByZXR1cm4gcmVnZXgudGVzdChjKVxuICB9XG5cbiAgZnVuY3Rpb24gbm90TWF0Y2ggKHJlZ2V4LCBjKSB7XG4gICAgcmV0dXJuICFpc01hdGNoKHJlZ2V4LCBjKVxuICB9XG5cbiAgdmFyIFMgPSAwXG4gIHNheC5TVEFURSA9IHtcbiAgICBCRUdJTjogUysrLCAvLyBsZWFkaW5nIGJ5dGUgb3JkZXIgbWFyayBvciB3aGl0ZXNwYWNlXG4gICAgQkVHSU5fV0hJVEVTUEFDRTogUysrLCAvLyBsZWFkaW5nIHdoaXRlc3BhY2VcbiAgICBURVhUOiBTKyssIC8vIGdlbmVyYWwgc3R1ZmZcbiAgICBURVhUX0VOVElUWTogUysrLCAvLyAmYW1wIGFuZCBzdWNoLlxuICAgIE9QRU5fV0FLQTogUysrLCAvLyA8XG4gICAgU0dNTF9ERUNMOiBTKyssIC8vIDwhQkxBUkdcbiAgICBTR01MX0RFQ0xfUVVPVEVEOiBTKyssIC8vIDwhQkxBUkcgZm9vIFwiYmFyXG4gICAgRE9DVFlQRTogUysrLCAvLyA8IURPQ1RZUEVcbiAgICBET0NUWVBFX1FVT1RFRDogUysrLCAvLyA8IURPQ1RZUEUgXCIvL2JsYWhcbiAgICBET0NUWVBFX0RURDogUysrLCAvLyA8IURPQ1RZUEUgXCIvL2JsYWhcIiBbIC4uLlxuICAgIERPQ1RZUEVfRFREX1FVT1RFRDogUysrLCAvLyA8IURPQ1RZUEUgXCIvL2JsYWhcIiBbIFwiZm9vXG4gICAgQ09NTUVOVF9TVEFSVElORzogUysrLCAvLyA8IS1cbiAgICBDT01NRU5UOiBTKyssIC8vIDwhLS1cbiAgICBDT01NRU5UX0VORElORzogUysrLCAvLyA8IS0tIGJsYWggLVxuICAgIENPTU1FTlRfRU5ERUQ6IFMrKywgLy8gPCEtLSBibGFoIC0tXG4gICAgQ0RBVEE6IFMrKywgLy8gPCFbQ0RBVEFbIHNvbWV0aGluZ1xuICAgIENEQVRBX0VORElORzogUysrLCAvLyBdXG4gICAgQ0RBVEFfRU5ESU5HXzI6IFMrKywgLy8gXV1cbiAgICBQUk9DX0lOU1Q6IFMrKywgLy8gPD9oaVxuICAgIFBST0NfSU5TVF9CT0RZOiBTKyssIC8vIDw/aGkgdGhlcmVcbiAgICBQUk9DX0lOU1RfRU5ESU5HOiBTKyssIC8vIDw/aGkgXCJ0aGVyZVwiID9cbiAgICBPUEVOX1RBRzogUysrLCAvLyA8c3Ryb25nXG4gICAgT1BFTl9UQUdfU0xBU0g6IFMrKywgLy8gPHN0cm9uZyAvXG4gICAgQVRUUklCOiBTKyssIC8vIDxhXG4gICAgQVRUUklCX05BTUU6IFMrKywgLy8gPGEgZm9vXG4gICAgQVRUUklCX05BTUVfU0FXX1dISVRFOiBTKyssIC8vIDxhIGZvbyBfXG4gICAgQVRUUklCX1ZBTFVFOiBTKyssIC8vIDxhIGZvbz1cbiAgICBBVFRSSUJfVkFMVUVfUVVPVEVEOiBTKyssIC8vIDxhIGZvbz1cImJhclxuICAgIEFUVFJJQl9WQUxVRV9DTE9TRUQ6IFMrKywgLy8gPGEgZm9vPVwiYmFyXCJcbiAgICBBVFRSSUJfVkFMVUVfVU5RVU9URUQ6IFMrKywgLy8gPGEgZm9vPWJhclxuICAgIEFUVFJJQl9WQUxVRV9FTlRJVFlfUTogUysrLCAvLyA8Zm9vIGJhcj1cIiZxdW90O1wiXG4gICAgQVRUUklCX1ZBTFVFX0VOVElUWV9VOiBTKyssIC8vIDxmb28gYmFyPSZxdW90XG4gICAgQ0xPU0VfVEFHOiBTKyssIC8vIDwvYVxuICAgIENMT1NFX1RBR19TQVdfV0hJVEU6IFMrKywgLy8gPC9hICAgPlxuICAgIFNDUklQVDogUysrLCAvLyA8c2NyaXB0PiAuLi5cbiAgICBTQ1JJUFRfRU5ESU5HOiBTKysgLy8gPHNjcmlwdD4gLi4uIDxcbiAgfVxuXG4gIHNheC5YTUxfRU5USVRJRVMgPSB7XG4gICAgJ2FtcCc6ICcmJyxcbiAgICAnZ3QnOiAnPicsXG4gICAgJ2x0JzogJzwnLFxuICAgICdxdW90JzogJ1wiJyxcbiAgICAnYXBvcyc6IFwiJ1wiXG4gIH1cblxuICBzYXguRU5USVRJRVMgPSB7XG4gICAgJ2FtcCc6ICcmJyxcbiAgICAnZ3QnOiAnPicsXG4gICAgJ2x0JzogJzwnLFxuICAgICdxdW90JzogJ1wiJyxcbiAgICAnYXBvcyc6IFwiJ1wiLFxuICAgICdBRWxpZyc6IDE5OCxcbiAgICAnQWFjdXRlJzogMTkzLFxuICAgICdBY2lyYyc6IDE5NCxcbiAgICAnQWdyYXZlJzogMTkyLFxuICAgICdBcmluZyc6IDE5NyxcbiAgICAnQXRpbGRlJzogMTk1LFxuICAgICdBdW1sJzogMTk2LFxuICAgICdDY2VkaWwnOiAxOTksXG4gICAgJ0VUSCc6IDIwOCxcbiAgICAnRWFjdXRlJzogMjAxLFxuICAgICdFY2lyYyc6IDIwMixcbiAgICAnRWdyYXZlJzogMjAwLFxuICAgICdFdW1sJzogMjAzLFxuICAgICdJYWN1dGUnOiAyMDUsXG4gICAgJ0ljaXJjJzogMjA2LFxuICAgICdJZ3JhdmUnOiAyMDQsXG4gICAgJ0l1bWwnOiAyMDcsXG4gICAgJ050aWxkZSc6IDIwOSxcbiAgICAnT2FjdXRlJzogMjExLFxuICAgICdPY2lyYyc6IDIxMixcbiAgICAnT2dyYXZlJzogMjEwLFxuICAgICdPc2xhc2gnOiAyMTYsXG4gICAgJ090aWxkZSc6IDIxMyxcbiAgICAnT3VtbCc6IDIxNCxcbiAgICAnVEhPUk4nOiAyMjIsXG4gICAgJ1VhY3V0ZSc6IDIxOCxcbiAgICAnVWNpcmMnOiAyMTksXG4gICAgJ1VncmF2ZSc6IDIxNyxcbiAgICAnVXVtbCc6IDIyMCxcbiAgICAnWWFjdXRlJzogMjIxLFxuICAgICdhYWN1dGUnOiAyMjUsXG4gICAgJ2FjaXJjJzogMjI2LFxuICAgICdhZWxpZyc6IDIzMCxcbiAgICAnYWdyYXZlJzogMjI0LFxuICAgICdhcmluZyc6IDIyOSxcbiAgICAnYXRpbGRlJzogMjI3LFxuICAgICdhdW1sJzogMjI4LFxuICAgICdjY2VkaWwnOiAyMzEsXG4gICAgJ2VhY3V0ZSc6IDIzMyxcbiAgICAnZWNpcmMnOiAyMzQsXG4gICAgJ2VncmF2ZSc6IDIzMixcbiAgICAnZXRoJzogMjQwLFxuICAgICdldW1sJzogMjM1LFxuICAgICdpYWN1dGUnOiAyMzcsXG4gICAgJ2ljaXJjJzogMjM4LFxuICAgICdpZ3JhdmUnOiAyMzYsXG4gICAgJ2l1bWwnOiAyMzksXG4gICAgJ250aWxkZSc6IDI0MSxcbiAgICAnb2FjdXRlJzogMjQzLFxuICAgICdvY2lyYyc6IDI0NCxcbiAgICAnb2dyYXZlJzogMjQyLFxuICAgICdvc2xhc2gnOiAyNDgsXG4gICAgJ290aWxkZSc6IDI0NSxcbiAgICAnb3VtbCc6IDI0NixcbiAgICAnc3psaWcnOiAyMjMsXG4gICAgJ3Rob3JuJzogMjU0LFxuICAgICd1YWN1dGUnOiAyNTAsXG4gICAgJ3VjaXJjJzogMjUxLFxuICAgICd1Z3JhdmUnOiAyNDksXG4gICAgJ3V1bWwnOiAyNTIsXG4gICAgJ3lhY3V0ZSc6IDI1MyxcbiAgICAneXVtbCc6IDI1NSxcbiAgICAnY29weSc6IDE2OSxcbiAgICAncmVnJzogMTc0LFxuICAgICduYnNwJzogMTYwLFxuICAgICdpZXhjbCc6IDE2MSxcbiAgICAnY2VudCc6IDE2MixcbiAgICAncG91bmQnOiAxNjMsXG4gICAgJ2N1cnJlbic6IDE2NCxcbiAgICAneWVuJzogMTY1LFxuICAgICdicnZiYXInOiAxNjYsXG4gICAgJ3NlY3QnOiAxNjcsXG4gICAgJ3VtbCc6IDE2OCxcbiAgICAnb3JkZic6IDE3MCxcbiAgICAnbGFxdW8nOiAxNzEsXG4gICAgJ25vdCc6IDE3MixcbiAgICAnc2h5JzogMTczLFxuICAgICdtYWNyJzogMTc1LFxuICAgICdkZWcnOiAxNzYsXG4gICAgJ3BsdXNtbic6IDE3NyxcbiAgICAnc3VwMSc6IDE4NSxcbiAgICAnc3VwMic6IDE3OCxcbiAgICAnc3VwMyc6IDE3OSxcbiAgICAnYWN1dGUnOiAxODAsXG4gICAgJ21pY3JvJzogMTgxLFxuICAgICdwYXJhJzogMTgyLFxuICAgICdtaWRkb3QnOiAxODMsXG4gICAgJ2NlZGlsJzogMTg0LFxuICAgICdvcmRtJzogMTg2LFxuICAgICdyYXF1byc6IDE4NyxcbiAgICAnZnJhYzE0JzogMTg4LFxuICAgICdmcmFjMTInOiAxODksXG4gICAgJ2ZyYWMzNCc6IDE5MCxcbiAgICAnaXF1ZXN0JzogMTkxLFxuICAgICd0aW1lcyc6IDIxNSxcbiAgICAnZGl2aWRlJzogMjQ3LFxuICAgICdPRWxpZyc6IDMzOCxcbiAgICAnb2VsaWcnOiAzMzksXG4gICAgJ1NjYXJvbic6IDM1MixcbiAgICAnc2Nhcm9uJzogMzUzLFxuICAgICdZdW1sJzogMzc2LFxuICAgICdmbm9mJzogNDAyLFxuICAgICdjaXJjJzogNzEwLFxuICAgICd0aWxkZSc6IDczMixcbiAgICAnQWxwaGEnOiA5MTMsXG4gICAgJ0JldGEnOiA5MTQsXG4gICAgJ0dhbW1hJzogOTE1LFxuICAgICdEZWx0YSc6IDkxNixcbiAgICAnRXBzaWxvbic6IDkxNyxcbiAgICAnWmV0YSc6IDkxOCxcbiAgICAnRXRhJzogOTE5LFxuICAgICdUaGV0YSc6IDkyMCxcbiAgICAnSW90YSc6IDkyMSxcbiAgICAnS2FwcGEnOiA5MjIsXG4gICAgJ0xhbWJkYSc6IDkyMyxcbiAgICAnTXUnOiA5MjQsXG4gICAgJ051JzogOTI1LFxuICAgICdYaSc6IDkyNixcbiAgICAnT21pY3Jvbic6IDkyNyxcbiAgICAnUGknOiA5MjgsXG4gICAgJ1Jobyc6IDkyOSxcbiAgICAnU2lnbWEnOiA5MzEsXG4gICAgJ1RhdSc6IDkzMixcbiAgICAnVXBzaWxvbic6IDkzMyxcbiAgICAnUGhpJzogOTM0LFxuICAgICdDaGknOiA5MzUsXG4gICAgJ1BzaSc6IDkzNixcbiAgICAnT21lZ2EnOiA5MzcsXG4gICAgJ2FscGhhJzogOTQ1LFxuICAgICdiZXRhJzogOTQ2LFxuICAgICdnYW1tYSc6IDk0NyxcbiAgICAnZGVsdGEnOiA5NDgsXG4gICAgJ2Vwc2lsb24nOiA5NDksXG4gICAgJ3pldGEnOiA5NTAsXG4gICAgJ2V0YSc6IDk1MSxcbiAgICAndGhldGEnOiA5NTIsXG4gICAgJ2lvdGEnOiA5NTMsXG4gICAgJ2thcHBhJzogOTU0LFxuICAgICdsYW1iZGEnOiA5NTUsXG4gICAgJ211JzogOTU2LFxuICAgICdudSc6IDk1NyxcbiAgICAneGknOiA5NTgsXG4gICAgJ29taWNyb24nOiA5NTksXG4gICAgJ3BpJzogOTYwLFxuICAgICdyaG8nOiA5NjEsXG4gICAgJ3NpZ21hZic6IDk2MixcbiAgICAnc2lnbWEnOiA5NjMsXG4gICAgJ3RhdSc6IDk2NCxcbiAgICAndXBzaWxvbic6IDk2NSxcbiAgICAncGhpJzogOTY2LFxuICAgICdjaGknOiA5NjcsXG4gICAgJ3BzaSc6IDk2OCxcbiAgICAnb21lZ2EnOiA5NjksXG4gICAgJ3RoZXRhc3ltJzogOTc3LFxuICAgICd1cHNpaCc6IDk3OCxcbiAgICAncGl2JzogOTgyLFxuICAgICdlbnNwJzogODE5NCxcbiAgICAnZW1zcCc6IDgxOTUsXG4gICAgJ3RoaW5zcCc6IDgyMDEsXG4gICAgJ3p3bmonOiA4MjA0LFxuICAgICd6d2onOiA4MjA1LFxuICAgICdscm0nOiA4MjA2LFxuICAgICdybG0nOiA4MjA3LFxuICAgICduZGFzaCc6IDgyMTEsXG4gICAgJ21kYXNoJzogODIxMixcbiAgICAnbHNxdW8nOiA4MjE2LFxuICAgICdyc3F1byc6IDgyMTcsXG4gICAgJ3NicXVvJzogODIxOCxcbiAgICAnbGRxdW8nOiA4MjIwLFxuICAgICdyZHF1byc6IDgyMjEsXG4gICAgJ2JkcXVvJzogODIyMixcbiAgICAnZGFnZ2VyJzogODIyNCxcbiAgICAnRGFnZ2VyJzogODIyNSxcbiAgICAnYnVsbCc6IDgyMjYsXG4gICAgJ2hlbGxpcCc6IDgyMzAsXG4gICAgJ3Blcm1pbCc6IDgyNDAsXG4gICAgJ3ByaW1lJzogODI0MixcbiAgICAnUHJpbWUnOiA4MjQzLFxuICAgICdsc2FxdW8nOiA4MjQ5LFxuICAgICdyc2FxdW8nOiA4MjUwLFxuICAgICdvbGluZSc6IDgyNTQsXG4gICAgJ2ZyYXNsJzogODI2MCxcbiAgICAnZXVybyc6IDgzNjQsXG4gICAgJ2ltYWdlJzogODQ2NSxcbiAgICAnd2VpZXJwJzogODQ3MixcbiAgICAncmVhbCc6IDg0NzYsXG4gICAgJ3RyYWRlJzogODQ4MixcbiAgICAnYWxlZnN5bSc6IDg1MDEsXG4gICAgJ2xhcnInOiA4NTkyLFxuICAgICd1YXJyJzogODU5MyxcbiAgICAncmFycic6IDg1OTQsXG4gICAgJ2RhcnInOiA4NTk1LFxuICAgICdoYXJyJzogODU5NixcbiAgICAnY3JhcnInOiA4NjI5LFxuICAgICdsQXJyJzogODY1NixcbiAgICAndUFycic6IDg2NTcsXG4gICAgJ3JBcnInOiA4NjU4LFxuICAgICdkQXJyJzogODY1OSxcbiAgICAnaEFycic6IDg2NjAsXG4gICAgJ2ZvcmFsbCc6IDg3MDQsXG4gICAgJ3BhcnQnOiA4NzA2LFxuICAgICdleGlzdCc6IDg3MDcsXG4gICAgJ2VtcHR5JzogODcwOSxcbiAgICAnbmFibGEnOiA4NzExLFxuICAgICdpc2luJzogODcxMixcbiAgICAnbm90aW4nOiA4NzEzLFxuICAgICduaSc6IDg3MTUsXG4gICAgJ3Byb2QnOiA4NzE5LFxuICAgICdzdW0nOiA4NzIxLFxuICAgICdtaW51cyc6IDg3MjIsXG4gICAgJ2xvd2FzdCc6IDg3MjcsXG4gICAgJ3JhZGljJzogODczMCxcbiAgICAncHJvcCc6IDg3MzMsXG4gICAgJ2luZmluJzogODczNCxcbiAgICAnYW5nJzogODczNixcbiAgICAnYW5kJzogODc0MyxcbiAgICAnb3InOiA4NzQ0LFxuICAgICdjYXAnOiA4NzQ1LFxuICAgICdjdXAnOiA4NzQ2LFxuICAgICdpbnQnOiA4NzQ3LFxuICAgICd0aGVyZTQnOiA4NzU2LFxuICAgICdzaW0nOiA4NzY0LFxuICAgICdjb25nJzogODc3MyxcbiAgICAnYXN5bXAnOiA4Nzc2LFxuICAgICduZSc6IDg4MDAsXG4gICAgJ2VxdWl2JzogODgwMSxcbiAgICAnbGUnOiA4ODA0LFxuICAgICdnZSc6IDg4MDUsXG4gICAgJ3N1Yic6IDg4MzQsXG4gICAgJ3N1cCc6IDg4MzUsXG4gICAgJ25zdWInOiA4ODM2LFxuICAgICdzdWJlJzogODgzOCxcbiAgICAnc3VwZSc6IDg4MzksXG4gICAgJ29wbHVzJzogODg1MyxcbiAgICAnb3RpbWVzJzogODg1NSxcbiAgICAncGVycCc6IDg4NjksXG4gICAgJ3Nkb3QnOiA4OTAxLFxuICAgICdsY2VpbCc6IDg5NjgsXG4gICAgJ3JjZWlsJzogODk2OSxcbiAgICAnbGZsb29yJzogODk3MCxcbiAgICAncmZsb29yJzogODk3MSxcbiAgICAnbGFuZyc6IDkwMDEsXG4gICAgJ3JhbmcnOiA5MDAyLFxuICAgICdsb3onOiA5Njc0LFxuICAgICdzcGFkZXMnOiA5ODI0LFxuICAgICdjbHVicyc6IDk4MjcsXG4gICAgJ2hlYXJ0cyc6IDk4MjksXG4gICAgJ2RpYW1zJzogOTgzMFxuICB9XG5cbiAgT2JqZWN0LmtleXMoc2F4LkVOVElUSUVTKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICB2YXIgZSA9IHNheC5FTlRJVElFU1trZXldXG4gICAgdmFyIHMgPSB0eXBlb2YgZSA9PT0gJ251bWJlcicgPyBTdHJpbmcuZnJvbUNoYXJDb2RlKGUpIDogZVxuICAgIHNheC5FTlRJVElFU1trZXldID0gc1xuICB9KVxuXG4gIGZvciAodmFyIHMgaW4gc2F4LlNUQVRFKSB7XG4gICAgc2F4LlNUQVRFW3NheC5TVEFURVtzXV0gPSBzXG4gIH1cblxuICAvLyBzaG9ydGhhbmRcbiAgUyA9IHNheC5TVEFURVxuXG4gIGZ1bmN0aW9uIGVtaXQgKHBhcnNlciwgZXZlbnQsIGRhdGEpIHtcbiAgICBwYXJzZXJbZXZlbnRdICYmIHBhcnNlcltldmVudF0oZGF0YSlcbiAgfVxuXG4gIGZ1bmN0aW9uIGVtaXROb2RlIChwYXJzZXIsIG5vZGVUeXBlLCBkYXRhKSB7XG4gICAgaWYgKHBhcnNlci50ZXh0Tm9kZSkgY2xvc2VUZXh0KHBhcnNlcilcbiAgICBlbWl0KHBhcnNlciwgbm9kZVR5cGUsIGRhdGEpXG4gIH1cblxuICBmdW5jdGlvbiBjbG9zZVRleHQgKHBhcnNlcikge1xuICAgIHBhcnNlci50ZXh0Tm9kZSA9IHRleHRvcHRzKHBhcnNlci5vcHQsIHBhcnNlci50ZXh0Tm9kZSlcbiAgICBpZiAocGFyc2VyLnRleHROb2RlKSBlbWl0KHBhcnNlciwgJ29udGV4dCcsIHBhcnNlci50ZXh0Tm9kZSlcbiAgICBwYXJzZXIudGV4dE5vZGUgPSAnJ1xuICB9XG5cbiAgZnVuY3Rpb24gdGV4dG9wdHMgKG9wdCwgdGV4dCkge1xuICAgIGlmIChvcHQudHJpbSkgdGV4dCA9IHRleHQudHJpbSgpXG4gICAgaWYgKG9wdC5ub3JtYWxpemUpIHRleHQgPSB0ZXh0LnJlcGxhY2UoL1xccysvZywgJyAnKVxuICAgIHJldHVybiB0ZXh0XG4gIH1cblxuICBmdW5jdGlvbiBlcnJvciAocGFyc2VyLCBlcikge1xuICAgIGNsb3NlVGV4dChwYXJzZXIpXG4gICAgaWYgKHBhcnNlci50cmFja1Bvc2l0aW9uKSB7XG4gICAgICBlciArPSAnXFxuTGluZTogJyArIHBhcnNlci5saW5lICtcbiAgICAgICAgJ1xcbkNvbHVtbjogJyArIHBhcnNlci5jb2x1bW4gK1xuICAgICAgICAnXFxuQ2hhcjogJyArIHBhcnNlci5jXG4gICAgfVxuICAgIGVyID0gbmV3IEVycm9yKGVyKVxuICAgIHBhcnNlci5lcnJvciA9IGVyXG4gICAgZW1pdChwYXJzZXIsICdvbmVycm9yJywgZXIpXG4gICAgcmV0dXJuIHBhcnNlclxuICB9XG5cbiAgZnVuY3Rpb24gZW5kIChwYXJzZXIpIHtcbiAgICBpZiAocGFyc2VyLnNhd1Jvb3QgJiYgIXBhcnNlci5jbG9zZWRSb290KSBzdHJpY3RGYWlsKHBhcnNlciwgJ1VuY2xvc2VkIHJvb3QgdGFnJylcbiAgICBpZiAoKHBhcnNlci5zdGF0ZSAhPT0gUy5CRUdJTikgJiZcbiAgICAgIChwYXJzZXIuc3RhdGUgIT09IFMuQkVHSU5fV0hJVEVTUEFDRSkgJiZcbiAgICAgIChwYXJzZXIuc3RhdGUgIT09IFMuVEVYVCkpIHtcbiAgICAgIGVycm9yKHBhcnNlciwgJ1VuZXhwZWN0ZWQgZW5kJylcbiAgICB9XG4gICAgY2xvc2VUZXh0KHBhcnNlcilcbiAgICBwYXJzZXIuYyA9ICcnXG4gICAgcGFyc2VyLmNsb3NlZCA9IHRydWVcbiAgICBlbWl0KHBhcnNlciwgJ29uZW5kJylcbiAgICBTQVhQYXJzZXIuY2FsbChwYXJzZXIsIHBhcnNlci5zdHJpY3QsIHBhcnNlci5vcHQpXG4gICAgcmV0dXJuIHBhcnNlclxuICB9XG5cbiAgZnVuY3Rpb24gc3RyaWN0RmFpbCAocGFyc2VyLCBtZXNzYWdlKSB7XG4gICAgaWYgKHR5cGVvZiBwYXJzZXIgIT09ICdvYmplY3QnIHx8ICEocGFyc2VyIGluc3RhbmNlb2YgU0FYUGFyc2VyKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdiYWQgY2FsbCB0byBzdHJpY3RGYWlsJylcbiAgICB9XG4gICAgaWYgKHBhcnNlci5zdHJpY3QpIHtcbiAgICAgIGVycm9yKHBhcnNlciwgbWVzc2FnZSlcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBuZXdUYWcgKHBhcnNlcikge1xuICAgIGlmICghcGFyc2VyLnN0cmljdCkgcGFyc2VyLnRhZ05hbWUgPSBwYXJzZXIudGFnTmFtZVtwYXJzZXIubG9vc2VDYXNlXSgpXG4gICAgdmFyIHBhcmVudCA9IHBhcnNlci50YWdzW3BhcnNlci50YWdzLmxlbmd0aCAtIDFdIHx8IHBhcnNlclxuICAgIHZhciB0YWcgPSBwYXJzZXIudGFnID0geyBuYW1lOiBwYXJzZXIudGFnTmFtZSwgYXR0cmlidXRlczoge30gfVxuXG4gICAgLy8gd2lsbCBiZSBvdmVycmlkZGVuIGlmIHRhZyBjb250YWlscyBhbiB4bWxucz1cImZvb1wiIG9yIHhtbG5zOmZvbz1cImJhclwiXG4gICAgaWYgKHBhcnNlci5vcHQueG1sbnMpIHtcbiAgICAgIHRhZy5ucyA9IHBhcmVudC5uc1xuICAgIH1cbiAgICBwYXJzZXIuYXR0cmliTGlzdC5sZW5ndGggPSAwXG4gICAgZW1pdE5vZGUocGFyc2VyLCAnb25vcGVudGFnc3RhcnQnLCB0YWcpXG4gIH1cblxuICBmdW5jdGlvbiBxbmFtZSAobmFtZSwgYXR0cmlidXRlKSB7XG4gICAgdmFyIGkgPSBuYW1lLmluZGV4T2YoJzonKVxuICAgIHZhciBxdWFsTmFtZSA9IGkgPCAwID8gWyAnJywgbmFtZSBdIDogbmFtZS5zcGxpdCgnOicpXG4gICAgdmFyIHByZWZpeCA9IHF1YWxOYW1lWzBdXG4gICAgdmFyIGxvY2FsID0gcXVhbE5hbWVbMV1cblxuICAgIC8vIDx4IFwieG1sbnNcIj1cImh0dHA6Ly9mb29cIj5cbiAgICBpZiAoYXR0cmlidXRlICYmIG5hbWUgPT09ICd4bWxucycpIHtcbiAgICAgIHByZWZpeCA9ICd4bWxucydcbiAgICAgIGxvY2FsID0gJydcbiAgICB9XG5cbiAgICByZXR1cm4geyBwcmVmaXg6IHByZWZpeCwgbG9jYWw6IGxvY2FsIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGF0dHJpYiAocGFyc2VyKSB7XG4gICAgaWYgKCFwYXJzZXIuc3RyaWN0KSB7XG4gICAgICBwYXJzZXIuYXR0cmliTmFtZSA9IHBhcnNlci5hdHRyaWJOYW1lW3BhcnNlci5sb29zZUNhc2VdKClcbiAgICB9XG5cbiAgICBpZiAocGFyc2VyLmF0dHJpYkxpc3QuaW5kZXhPZihwYXJzZXIuYXR0cmliTmFtZSkgIT09IC0xIHx8XG4gICAgICBwYXJzZXIudGFnLmF0dHJpYnV0ZXMuaGFzT3duUHJvcGVydHkocGFyc2VyLmF0dHJpYk5hbWUpKSB7XG4gICAgICBwYXJzZXIuYXR0cmliTmFtZSA9IHBhcnNlci5hdHRyaWJWYWx1ZSA9ICcnXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpZiAocGFyc2VyLm9wdC54bWxucykge1xuICAgICAgdmFyIHFuID0gcW5hbWUocGFyc2VyLmF0dHJpYk5hbWUsIHRydWUpXG4gICAgICB2YXIgcHJlZml4ID0gcW4ucHJlZml4XG4gICAgICB2YXIgbG9jYWwgPSBxbi5sb2NhbFxuXG4gICAgICBpZiAocHJlZml4ID09PSAneG1sbnMnKSB7XG4gICAgICAgIC8vIG5hbWVzcGFjZSBiaW5kaW5nIGF0dHJpYnV0ZS4gcHVzaCB0aGUgYmluZGluZyBpbnRvIHNjb3BlXG4gICAgICAgIGlmIChsb2NhbCA9PT0gJ3htbCcgJiYgcGFyc2VyLmF0dHJpYlZhbHVlICE9PSBYTUxfTkFNRVNQQUNFKSB7XG4gICAgICAgICAgc3RyaWN0RmFpbChwYXJzZXIsXG4gICAgICAgICAgICAneG1sOiBwcmVmaXggbXVzdCBiZSBib3VuZCB0byAnICsgWE1MX05BTUVTUEFDRSArICdcXG4nICtcbiAgICAgICAgICAgICdBY3R1YWw6ICcgKyBwYXJzZXIuYXR0cmliVmFsdWUpXG4gICAgICAgIH0gZWxzZSBpZiAobG9jYWwgPT09ICd4bWxucycgJiYgcGFyc2VyLmF0dHJpYlZhbHVlICE9PSBYTUxOU19OQU1FU1BBQ0UpIHtcbiAgICAgICAgICBzdHJpY3RGYWlsKHBhcnNlcixcbiAgICAgICAgICAgICd4bWxuczogcHJlZml4IG11c3QgYmUgYm91bmQgdG8gJyArIFhNTE5TX05BTUVTUEFDRSArICdcXG4nICtcbiAgICAgICAgICAgICdBY3R1YWw6ICcgKyBwYXJzZXIuYXR0cmliVmFsdWUpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHRhZyA9IHBhcnNlci50YWdcbiAgICAgICAgICB2YXIgcGFyZW50ID0gcGFyc2VyLnRhZ3NbcGFyc2VyLnRhZ3MubGVuZ3RoIC0gMV0gfHwgcGFyc2VyXG4gICAgICAgICAgaWYgKHRhZy5ucyA9PT0gcGFyZW50Lm5zKSB7XG4gICAgICAgICAgICB0YWcubnMgPSBPYmplY3QuY3JlYXRlKHBhcmVudC5ucylcbiAgICAgICAgICB9XG4gICAgICAgICAgdGFnLm5zW2xvY2FsXSA9IHBhcnNlci5hdHRyaWJWYWx1ZVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIGRlZmVyIG9uYXR0cmlidXRlIGV2ZW50cyB1bnRpbCBhbGwgYXR0cmlidXRlcyBoYXZlIGJlZW4gc2VlblxuICAgICAgLy8gc28gYW55IG5ldyBiaW5kaW5ncyBjYW4gdGFrZSBlZmZlY3QuIHByZXNlcnZlIGF0dHJpYnV0ZSBvcmRlclxuICAgICAgLy8gc28gZGVmZXJyZWQgZXZlbnRzIGNhbiBiZSBlbWl0dGVkIGluIGRvY3VtZW50IG9yZGVyXG4gICAgICBwYXJzZXIuYXR0cmliTGlzdC5wdXNoKFtwYXJzZXIuYXR0cmliTmFtZSwgcGFyc2VyLmF0dHJpYlZhbHVlXSlcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gaW4gbm9uLXhtbG5zIG1vZGUsIHdlIGNhbiBlbWl0IHRoZSBldmVudCByaWdodCBhd2F5XG4gICAgICBwYXJzZXIudGFnLmF0dHJpYnV0ZXNbcGFyc2VyLmF0dHJpYk5hbWVdID0gcGFyc2VyLmF0dHJpYlZhbHVlXG4gICAgICBlbWl0Tm9kZShwYXJzZXIsICdvbmF0dHJpYnV0ZScsIHtcbiAgICAgICAgbmFtZTogcGFyc2VyLmF0dHJpYk5hbWUsXG4gICAgICAgIHZhbHVlOiBwYXJzZXIuYXR0cmliVmFsdWVcbiAgICAgIH0pXG4gICAgfVxuXG4gICAgcGFyc2VyLmF0dHJpYk5hbWUgPSBwYXJzZXIuYXR0cmliVmFsdWUgPSAnJ1xuICB9XG5cbiAgZnVuY3Rpb24gb3BlblRhZyAocGFyc2VyLCBzZWxmQ2xvc2luZykge1xuICAgIGlmIChwYXJzZXIub3B0LnhtbG5zKSB7XG4gICAgICAvLyBlbWl0IG5hbWVzcGFjZSBiaW5kaW5nIGV2ZW50c1xuICAgICAgdmFyIHRhZyA9IHBhcnNlci50YWdcblxuICAgICAgLy8gYWRkIG5hbWVzcGFjZSBpbmZvIHRvIHRhZ1xuICAgICAgdmFyIHFuID0gcW5hbWUocGFyc2VyLnRhZ05hbWUpXG4gICAgICB0YWcucHJlZml4ID0gcW4ucHJlZml4XG4gICAgICB0YWcubG9jYWwgPSBxbi5sb2NhbFxuICAgICAgdGFnLnVyaSA9IHRhZy5uc1txbi5wcmVmaXhdIHx8ICcnXG5cbiAgICAgIGlmICh0YWcucHJlZml4ICYmICF0YWcudXJpKSB7XG4gICAgICAgIHN0cmljdEZhaWwocGFyc2VyLCAnVW5ib3VuZCBuYW1lc3BhY2UgcHJlZml4OiAnICtcbiAgICAgICAgICBKU09OLnN0cmluZ2lmeShwYXJzZXIudGFnTmFtZSkpXG4gICAgICAgIHRhZy51cmkgPSBxbi5wcmVmaXhcbiAgICAgIH1cblxuICAgICAgdmFyIHBhcmVudCA9IHBhcnNlci50YWdzW3BhcnNlci50YWdzLmxlbmd0aCAtIDFdIHx8IHBhcnNlclxuICAgICAgaWYgKHRhZy5ucyAmJiBwYXJlbnQubnMgIT09IHRhZy5ucykge1xuICAgICAgICBPYmplY3Qua2V5cyh0YWcubnMpLmZvckVhY2goZnVuY3Rpb24gKHApIHtcbiAgICAgICAgICBlbWl0Tm9kZShwYXJzZXIsICdvbm9wZW5uYW1lc3BhY2UnLCB7XG4gICAgICAgICAgICBwcmVmaXg6IHAsXG4gICAgICAgICAgICB1cmk6IHRhZy5uc1twXVxuICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgICB9XG5cbiAgICAgIC8vIGhhbmRsZSBkZWZlcnJlZCBvbmF0dHJpYnV0ZSBldmVudHNcbiAgICAgIC8vIE5vdGU6IGRvIG5vdCBhcHBseSBkZWZhdWx0IG5zIHRvIGF0dHJpYnV0ZXM6XG4gICAgICAvLyAgIGh0dHA6Ly93d3cudzMub3JnL1RSL1JFQy14bWwtbmFtZXMvI2RlZmF1bHRpbmdcbiAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gcGFyc2VyLmF0dHJpYkxpc3QubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIHZhciBudiA9IHBhcnNlci5hdHRyaWJMaXN0W2ldXG4gICAgICAgIHZhciBuYW1lID0gbnZbMF1cbiAgICAgICAgdmFyIHZhbHVlID0gbnZbMV1cbiAgICAgICAgdmFyIHF1YWxOYW1lID0gcW5hbWUobmFtZSwgdHJ1ZSlcbiAgICAgICAgdmFyIHByZWZpeCA9IHF1YWxOYW1lLnByZWZpeFxuICAgICAgICB2YXIgbG9jYWwgPSBxdWFsTmFtZS5sb2NhbFxuICAgICAgICB2YXIgdXJpID0gcHJlZml4ID09PSAnJyA/ICcnIDogKHRhZy5uc1twcmVmaXhdIHx8ICcnKVxuICAgICAgICB2YXIgYSA9IHtcbiAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgICAgICBwcmVmaXg6IHByZWZpeCxcbiAgICAgICAgICBsb2NhbDogbG9jYWwsXG4gICAgICAgICAgdXJpOiB1cmlcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGlmIHRoZXJlJ3MgYW55IGF0dHJpYnV0ZXMgd2l0aCBhbiB1bmRlZmluZWQgbmFtZXNwYWNlLFxuICAgICAgICAvLyB0aGVuIGZhaWwgb24gdGhlbSBub3cuXG4gICAgICAgIGlmIChwcmVmaXggJiYgcHJlZml4ICE9PSAneG1sbnMnICYmICF1cmkpIHtcbiAgICAgICAgICBzdHJpY3RGYWlsKHBhcnNlciwgJ1VuYm91bmQgbmFtZXNwYWNlIHByZWZpeDogJyArXG4gICAgICAgICAgICBKU09OLnN0cmluZ2lmeShwcmVmaXgpKVxuICAgICAgICAgIGEudXJpID0gcHJlZml4XG4gICAgICAgIH1cbiAgICAgICAgcGFyc2VyLnRhZy5hdHRyaWJ1dGVzW25hbWVdID0gYVxuICAgICAgICBlbWl0Tm9kZShwYXJzZXIsICdvbmF0dHJpYnV0ZScsIGEpXG4gICAgICB9XG4gICAgICBwYXJzZXIuYXR0cmliTGlzdC5sZW5ndGggPSAwXG4gICAgfVxuXG4gICAgcGFyc2VyLnRhZy5pc1NlbGZDbG9zaW5nID0gISFzZWxmQ2xvc2luZ1xuXG4gICAgLy8gcHJvY2VzcyB0aGUgdGFnXG4gICAgcGFyc2VyLnNhd1Jvb3QgPSB0cnVlXG4gICAgcGFyc2VyLnRhZ3MucHVzaChwYXJzZXIudGFnKVxuICAgIGVtaXROb2RlKHBhcnNlciwgJ29ub3BlbnRhZycsIHBhcnNlci50YWcpXG4gICAgaWYgKCFzZWxmQ2xvc2luZykge1xuICAgICAgLy8gc3BlY2lhbCBjYXNlIGZvciA8c2NyaXB0PiBpbiBub24tc3RyaWN0IG1vZGUuXG4gICAgICBpZiAoIXBhcnNlci5ub3NjcmlwdCAmJiBwYXJzZXIudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnc2NyaXB0Jykge1xuICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLlNDUklQVFxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5URVhUXG4gICAgICB9XG4gICAgICBwYXJzZXIudGFnID0gbnVsbFxuICAgICAgcGFyc2VyLnRhZ05hbWUgPSAnJ1xuICAgIH1cbiAgICBwYXJzZXIuYXR0cmliTmFtZSA9IHBhcnNlci5hdHRyaWJWYWx1ZSA9ICcnXG4gICAgcGFyc2VyLmF0dHJpYkxpc3QubGVuZ3RoID0gMFxuICB9XG5cbiAgZnVuY3Rpb24gY2xvc2VUYWcgKHBhcnNlcikge1xuICAgIGlmICghcGFyc2VyLnRhZ05hbWUpIHtcbiAgICAgIHN0cmljdEZhaWwocGFyc2VyLCAnV2VpcmQgZW1wdHkgY2xvc2UgdGFnLicpXG4gICAgICBwYXJzZXIudGV4dE5vZGUgKz0gJzwvPidcbiAgICAgIHBhcnNlci5zdGF0ZSA9IFMuVEVYVFxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKHBhcnNlci5zY3JpcHQpIHtcbiAgICAgIGlmIChwYXJzZXIudGFnTmFtZSAhPT0gJ3NjcmlwdCcpIHtcbiAgICAgICAgcGFyc2VyLnNjcmlwdCArPSAnPC8nICsgcGFyc2VyLnRhZ05hbWUgKyAnPidcbiAgICAgICAgcGFyc2VyLnRhZ05hbWUgPSAnJ1xuICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLlNDUklQVFxuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICAgIGVtaXROb2RlKHBhcnNlciwgJ29uc2NyaXB0JywgcGFyc2VyLnNjcmlwdClcbiAgICAgIHBhcnNlci5zY3JpcHQgPSAnJ1xuICAgIH1cblxuICAgIC8vIGZpcnN0IG1ha2Ugc3VyZSB0aGF0IHRoZSBjbG9zaW5nIHRhZyBhY3R1YWxseSBleGlzdHMuXG4gICAgLy8gPGE+PGI+PC9jPjwvYj48L2E+IHdpbGwgY2xvc2UgZXZlcnl0aGluZywgb3RoZXJ3aXNlLlxuICAgIHZhciB0ID0gcGFyc2VyLnRhZ3MubGVuZ3RoXG4gICAgdmFyIHRhZ05hbWUgPSBwYXJzZXIudGFnTmFtZVxuICAgIGlmICghcGFyc2VyLnN0cmljdCkge1xuICAgICAgdGFnTmFtZSA9IHRhZ05hbWVbcGFyc2VyLmxvb3NlQ2FzZV0oKVxuICAgIH1cbiAgICB2YXIgY2xvc2VUbyA9IHRhZ05hbWVcbiAgICB3aGlsZSAodC0tKSB7XG4gICAgICB2YXIgY2xvc2UgPSBwYXJzZXIudGFnc1t0XVxuICAgICAgaWYgKGNsb3NlLm5hbWUgIT09IGNsb3NlVG8pIHtcbiAgICAgICAgLy8gZmFpbCB0aGUgZmlyc3QgdGltZSBpbiBzdHJpY3QgbW9kZVxuICAgICAgICBzdHJpY3RGYWlsKHBhcnNlciwgJ1VuZXhwZWN0ZWQgY2xvc2UgdGFnJylcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJyZWFrXG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gZGlkbid0IGZpbmQgaXQuICB3ZSBhbHJlYWR5IGZhaWxlZCBmb3Igc3RyaWN0LCBzbyBqdXN0IGFib3J0LlxuICAgIGlmICh0IDwgMCkge1xuICAgICAgc3RyaWN0RmFpbChwYXJzZXIsICdVbm1hdGNoZWQgY2xvc2luZyB0YWc6ICcgKyBwYXJzZXIudGFnTmFtZSlcbiAgICAgIHBhcnNlci50ZXh0Tm9kZSArPSAnPC8nICsgcGFyc2VyLnRhZ05hbWUgKyAnPidcbiAgICAgIHBhcnNlci5zdGF0ZSA9IFMuVEVYVFxuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIHBhcnNlci50YWdOYW1lID0gdGFnTmFtZVxuICAgIHZhciBzID0gcGFyc2VyLnRhZ3MubGVuZ3RoXG4gICAgd2hpbGUgKHMtLSA+IHQpIHtcbiAgICAgIHZhciB0YWcgPSBwYXJzZXIudGFnID0gcGFyc2VyLnRhZ3MucG9wKClcbiAgICAgIHBhcnNlci50YWdOYW1lID0gcGFyc2VyLnRhZy5uYW1lXG4gICAgICBlbWl0Tm9kZShwYXJzZXIsICdvbmNsb3NldGFnJywgcGFyc2VyLnRhZ05hbWUpXG5cbiAgICAgIHZhciB4ID0ge31cbiAgICAgIGZvciAodmFyIGkgaW4gdGFnLm5zKSB7XG4gICAgICAgIHhbaV0gPSB0YWcubnNbaV1cbiAgICAgIH1cblxuICAgICAgdmFyIHBhcmVudCA9IHBhcnNlci50YWdzW3BhcnNlci50YWdzLmxlbmd0aCAtIDFdIHx8IHBhcnNlclxuICAgICAgaWYgKHBhcnNlci5vcHQueG1sbnMgJiYgdGFnLm5zICE9PSBwYXJlbnQubnMpIHtcbiAgICAgICAgLy8gcmVtb3ZlIG5hbWVzcGFjZSBiaW5kaW5ncyBpbnRyb2R1Y2VkIGJ5IHRhZ1xuICAgICAgICBPYmplY3Qua2V5cyh0YWcubnMpLmZvckVhY2goZnVuY3Rpb24gKHApIHtcbiAgICAgICAgICB2YXIgbiA9IHRhZy5uc1twXVxuICAgICAgICAgIGVtaXROb2RlKHBhcnNlciwgJ29uY2xvc2VuYW1lc3BhY2UnLCB7IHByZWZpeDogcCwgdXJpOiBuIH0pXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfVxuICAgIGlmICh0ID09PSAwKSBwYXJzZXIuY2xvc2VkUm9vdCA9IHRydWVcbiAgICBwYXJzZXIudGFnTmFtZSA9IHBhcnNlci5hdHRyaWJWYWx1ZSA9IHBhcnNlci5hdHRyaWJOYW1lID0gJydcbiAgICBwYXJzZXIuYXR0cmliTGlzdC5sZW5ndGggPSAwXG4gICAgcGFyc2VyLnN0YXRlID0gUy5URVhUXG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZUVudGl0eSAocGFyc2VyKSB7XG4gICAgdmFyIGVudGl0eSA9IHBhcnNlci5lbnRpdHlcbiAgICB2YXIgZW50aXR5TEMgPSBlbnRpdHkudG9Mb3dlckNhc2UoKVxuICAgIHZhciBudW1cbiAgICB2YXIgbnVtU3RyID0gJydcblxuICAgIGlmIChwYXJzZXIuRU5USVRJRVNbZW50aXR5XSkge1xuICAgICAgcmV0dXJuIHBhcnNlci5FTlRJVElFU1tlbnRpdHldXG4gICAgfVxuICAgIGlmIChwYXJzZXIuRU5USVRJRVNbZW50aXR5TENdKSB7XG4gICAgICByZXR1cm4gcGFyc2VyLkVOVElUSUVTW2VudGl0eUxDXVxuICAgIH1cbiAgICBlbnRpdHkgPSBlbnRpdHlMQ1xuICAgIGlmIChlbnRpdHkuY2hhckF0KDApID09PSAnIycpIHtcbiAgICAgIGlmIChlbnRpdHkuY2hhckF0KDEpID09PSAneCcpIHtcbiAgICAgICAgZW50aXR5ID0gZW50aXR5LnNsaWNlKDIpXG4gICAgICAgIG51bSA9IHBhcnNlSW50KGVudGl0eSwgMTYpXG4gICAgICAgIG51bVN0ciA9IG51bS50b1N0cmluZygxNilcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVudGl0eSA9IGVudGl0eS5zbGljZSgxKVxuICAgICAgICBudW0gPSBwYXJzZUludChlbnRpdHksIDEwKVxuICAgICAgICBudW1TdHIgPSBudW0udG9TdHJpbmcoMTApXG4gICAgICB9XG4gICAgfVxuICAgIGVudGl0eSA9IGVudGl0eS5yZXBsYWNlKC9eMCsvLCAnJylcbiAgICBpZiAoaXNOYU4obnVtKSB8fCBudW1TdHIudG9Mb3dlckNhc2UoKSAhPT0gZW50aXR5KSB7XG4gICAgICBzdHJpY3RGYWlsKHBhcnNlciwgJ0ludmFsaWQgY2hhcmFjdGVyIGVudGl0eScpXG4gICAgICByZXR1cm4gJyYnICsgcGFyc2VyLmVudGl0eSArICc7J1xuICAgIH1cblxuICAgIHJldHVybiBTdHJpbmcuZnJvbUNvZGVQb2ludChudW0pXG4gIH1cblxuICBmdW5jdGlvbiBiZWdpbldoaXRlU3BhY2UgKHBhcnNlciwgYykge1xuICAgIGlmIChjID09PSAnPCcpIHtcbiAgICAgIHBhcnNlci5zdGF0ZSA9IFMuT1BFTl9XQUtBXG4gICAgICBwYXJzZXIuc3RhcnRUYWdQb3NpdGlvbiA9IHBhcnNlci5wb3NpdGlvblxuICAgIH0gZWxzZSBpZiAoIWlzV2hpdGVzcGFjZShjKSkge1xuICAgICAgLy8gaGF2ZSB0byBwcm9jZXNzIHRoaXMgYXMgYSB0ZXh0IG5vZGUuXG4gICAgICAvLyB3ZWlyZCwgYnV0IGhhcHBlbnMuXG4gICAgICBzdHJpY3RGYWlsKHBhcnNlciwgJ05vbi13aGl0ZXNwYWNlIGJlZm9yZSBmaXJzdCB0YWcuJylcbiAgICAgIHBhcnNlci50ZXh0Tm9kZSA9IGNcbiAgICAgIHBhcnNlci5zdGF0ZSA9IFMuVEVYVFxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGNoYXJBdCAoY2h1bmssIGkpIHtcbiAgICB2YXIgcmVzdWx0ID0gJydcbiAgICBpZiAoaSA8IGNodW5rLmxlbmd0aCkge1xuICAgICAgcmVzdWx0ID0gY2h1bmsuY2hhckF0KGkpXG4gICAgfVxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIGZ1bmN0aW9uIHdyaXRlIChjaHVuaykge1xuICAgIHZhciBwYXJzZXIgPSB0aGlzXG4gICAgaWYgKHRoaXMuZXJyb3IpIHtcbiAgICAgIHRocm93IHRoaXMuZXJyb3JcbiAgICB9XG4gICAgaWYgKHBhcnNlci5jbG9zZWQpIHtcbiAgICAgIHJldHVybiBlcnJvcihwYXJzZXIsXG4gICAgICAgICdDYW5ub3Qgd3JpdGUgYWZ0ZXIgY2xvc2UuIEFzc2lnbiBhbiBvbnJlYWR5IGhhbmRsZXIuJylcbiAgICB9XG4gICAgaWYgKGNodW5rID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gZW5kKHBhcnNlcilcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBjaHVuayA9PT0gJ29iamVjdCcpIHtcbiAgICAgIGNodW5rID0gY2h1bmsudG9TdHJpbmcoKVxuICAgIH1cbiAgICB2YXIgaSA9IDBcbiAgICB2YXIgYyA9ICcnXG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgIGMgPSBjaGFyQXQoY2h1bmssIGkrKylcbiAgICAgIHBhcnNlci5jID0gY1xuXG4gICAgICBpZiAoIWMpIHtcbiAgICAgICAgYnJlYWtcbiAgICAgIH1cblxuICAgICAgaWYgKHBhcnNlci50cmFja1Bvc2l0aW9uKSB7XG4gICAgICAgIHBhcnNlci5wb3NpdGlvbisrXG4gICAgICAgIGlmIChjID09PSAnXFxuJykge1xuICAgICAgICAgIHBhcnNlci5saW5lKytcbiAgICAgICAgICBwYXJzZXIuY29sdW1uID0gMFxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHBhcnNlci5jb2x1bW4rK1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHN3aXRjaCAocGFyc2VyLnN0YXRlKSB7XG4gICAgICAgIGNhc2UgUy5CRUdJTjpcbiAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkJFR0lOX1dISVRFU1BBQ0VcbiAgICAgICAgICBpZiAoYyA9PT0gJ1xcdUZFRkYnKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH1cbiAgICAgICAgICBiZWdpbldoaXRlU3BhY2UocGFyc2VyLCBjKVxuICAgICAgICAgIGNvbnRpbnVlXG5cbiAgICAgICAgY2FzZSBTLkJFR0lOX1dISVRFU1BBQ0U6XG4gICAgICAgICAgYmVnaW5XaGl0ZVNwYWNlKHBhcnNlciwgYylcbiAgICAgICAgICBjb250aW51ZVxuXG4gICAgICAgIGNhc2UgUy5URVhUOlxuICAgICAgICAgIGlmIChwYXJzZXIuc2F3Um9vdCAmJiAhcGFyc2VyLmNsb3NlZFJvb3QpIHtcbiAgICAgICAgICAgIHZhciBzdGFydGkgPSBpIC0gMVxuICAgICAgICAgICAgd2hpbGUgKGMgJiYgYyAhPT0gJzwnICYmIGMgIT09ICcmJykge1xuICAgICAgICAgICAgICBjID0gY2hhckF0KGNodW5rLCBpKyspXG4gICAgICAgICAgICAgIGlmIChjICYmIHBhcnNlci50cmFja1Bvc2l0aW9uKSB7XG4gICAgICAgICAgICAgICAgcGFyc2VyLnBvc2l0aW9uKytcbiAgICAgICAgICAgICAgICBpZiAoYyA9PT0gJ1xcbicpIHtcbiAgICAgICAgICAgICAgICAgIHBhcnNlci5saW5lKytcbiAgICAgICAgICAgICAgICAgIHBhcnNlci5jb2x1bW4gPSAwXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIHBhcnNlci5jb2x1bW4rK1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGFyc2VyLnRleHROb2RlICs9IGNodW5rLnN1YnN0cmluZyhzdGFydGksIGkgLSAxKVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoYyA9PT0gJzwnICYmICEocGFyc2VyLnNhd1Jvb3QgJiYgcGFyc2VyLmNsb3NlZFJvb3QgJiYgIXBhcnNlci5zdHJpY3QpKSB7XG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLk9QRU5fV0FLQVxuICAgICAgICAgICAgcGFyc2VyLnN0YXJ0VGFnUG9zaXRpb24gPSBwYXJzZXIucG9zaXRpb25cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKCFpc1doaXRlc3BhY2UoYykgJiYgKCFwYXJzZXIuc2F3Um9vdCB8fCBwYXJzZXIuY2xvc2VkUm9vdCkpIHtcbiAgICAgICAgICAgICAgc3RyaWN0RmFpbChwYXJzZXIsICdUZXh0IGRhdGEgb3V0c2lkZSBvZiByb290IG5vZGUuJylcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChjID09PSAnJicpIHtcbiAgICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5URVhUX0VOVElUWVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcGFyc2VyLnRleHROb2RlICs9IGNcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuU0NSSVBUOlxuICAgICAgICAgIC8vIG9ubHkgbm9uLXN0cmljdFxuICAgICAgICAgIGlmIChjID09PSAnPCcpIHtcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuU0NSSVBUX0VORElOR1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXJzZXIuc2NyaXB0ICs9IGNcbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuU0NSSVBUX0VORElORzpcbiAgICAgICAgICBpZiAoYyA9PT0gJy8nKSB7XG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkNMT1NFX1RBR1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXJzZXIuc2NyaXB0ICs9ICc8JyArIGNcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuU0NSSVBUXG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlXG5cbiAgICAgICAgY2FzZSBTLk9QRU5fV0FLQTpcbiAgICAgICAgICAvLyBlaXRoZXIgYSAvLCA/LCAhLCBvciB0ZXh0IGlzIGNvbWluZyBuZXh0LlxuICAgICAgICAgIGlmIChjID09PSAnIScpIHtcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuU0dNTF9ERUNMXG4gICAgICAgICAgICBwYXJzZXIuc2dtbERlY2wgPSAnJ1xuICAgICAgICAgIH0gZWxzZSBpZiAoaXNXaGl0ZXNwYWNlKGMpKSB7XG4gICAgICAgICAgICAvLyB3YWl0IGZvciBpdC4uLlxuICAgICAgICAgIH0gZWxzZSBpZiAoaXNNYXRjaChuYW1lU3RhcnQsIGMpKSB7XG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLk9QRU5fVEFHXG4gICAgICAgICAgICBwYXJzZXIudGFnTmFtZSA9IGNcbiAgICAgICAgICB9IGVsc2UgaWYgKGMgPT09ICcvJykge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5DTE9TRV9UQUdcbiAgICAgICAgICAgIHBhcnNlci50YWdOYW1lID0gJydcbiAgICAgICAgICB9IGVsc2UgaWYgKGMgPT09ICc/Jykge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5QUk9DX0lOU1RcbiAgICAgICAgICAgIHBhcnNlci5wcm9jSW5zdE5hbWUgPSBwYXJzZXIucHJvY0luc3RCb2R5ID0gJydcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc3RyaWN0RmFpbChwYXJzZXIsICdVbmVuY29kZWQgPCcpXG4gICAgICAgICAgICAvLyBpZiB0aGVyZSB3YXMgc29tZSB3aGl0ZXNwYWNlLCB0aGVuIGFkZCB0aGF0IGluLlxuICAgICAgICAgICAgaWYgKHBhcnNlci5zdGFydFRhZ1Bvc2l0aW9uICsgMSA8IHBhcnNlci5wb3NpdGlvbikge1xuICAgICAgICAgICAgICB2YXIgcGFkID0gcGFyc2VyLnBvc2l0aW9uIC0gcGFyc2VyLnN0YXJ0VGFnUG9zaXRpb25cbiAgICAgICAgICAgICAgYyA9IG5ldyBBcnJheShwYWQpLmpvaW4oJyAnKSArIGNcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBhcnNlci50ZXh0Tm9kZSArPSAnPCcgKyBjXG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLlRFWFRcbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuU0dNTF9ERUNMOlxuICAgICAgICAgIGlmICgocGFyc2VyLnNnbWxEZWNsICsgYykudG9VcHBlckNhc2UoKSA9PT0gQ0RBVEEpIHtcbiAgICAgICAgICAgIGVtaXROb2RlKHBhcnNlciwgJ29ub3BlbmNkYXRhJylcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuQ0RBVEFcbiAgICAgICAgICAgIHBhcnNlci5zZ21sRGVjbCA9ICcnXG4gICAgICAgICAgICBwYXJzZXIuY2RhdGEgPSAnJ1xuICAgICAgICAgIH0gZWxzZSBpZiAocGFyc2VyLnNnbWxEZWNsICsgYyA9PT0gJy0tJykge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5DT01NRU5UXG4gICAgICAgICAgICBwYXJzZXIuY29tbWVudCA9ICcnXG4gICAgICAgICAgICBwYXJzZXIuc2dtbERlY2wgPSAnJ1xuICAgICAgICAgIH0gZWxzZSBpZiAoKHBhcnNlci5zZ21sRGVjbCArIGMpLnRvVXBwZXJDYXNlKCkgPT09IERPQ1RZUEUpIHtcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuRE9DVFlQRVxuICAgICAgICAgICAgaWYgKHBhcnNlci5kb2N0eXBlIHx8IHBhcnNlci5zYXdSb290KSB7XG4gICAgICAgICAgICAgIHN0cmljdEZhaWwocGFyc2VyLFxuICAgICAgICAgICAgICAgICdJbmFwcHJvcHJpYXRlbHkgbG9jYXRlZCBkb2N0eXBlIGRlY2xhcmF0aW9uJylcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBhcnNlci5kb2N0eXBlID0gJydcbiAgICAgICAgICAgIHBhcnNlci5zZ21sRGVjbCA9ICcnXG4gICAgICAgICAgfSBlbHNlIGlmIChjID09PSAnPicpIHtcbiAgICAgICAgICAgIGVtaXROb2RlKHBhcnNlciwgJ29uc2dtbGRlY2xhcmF0aW9uJywgcGFyc2VyLnNnbWxEZWNsKVxuICAgICAgICAgICAgcGFyc2VyLnNnbWxEZWNsID0gJydcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuVEVYVFxuICAgICAgICAgIH0gZWxzZSBpZiAoaXNRdW90ZShjKSkge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5TR01MX0RFQ0xfUVVPVEVEXG4gICAgICAgICAgICBwYXJzZXIuc2dtbERlY2wgKz0gY1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXJzZXIuc2dtbERlY2wgKz0gY1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb250aW51ZVxuXG4gICAgICAgIGNhc2UgUy5TR01MX0RFQ0xfUVVPVEVEOlxuICAgICAgICAgIGlmIChjID09PSBwYXJzZXIucSkge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5TR01MX0RFQ0xcbiAgICAgICAgICAgIHBhcnNlci5xID0gJydcbiAgICAgICAgICB9XG4gICAgICAgICAgcGFyc2VyLnNnbWxEZWNsICs9IGNcbiAgICAgICAgICBjb250aW51ZVxuXG4gICAgICAgIGNhc2UgUy5ET0NUWVBFOlxuICAgICAgICAgIGlmIChjID09PSAnPicpIHtcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuVEVYVFxuICAgICAgICAgICAgZW1pdE5vZGUocGFyc2VyLCAnb25kb2N0eXBlJywgcGFyc2VyLmRvY3R5cGUpXG4gICAgICAgICAgICBwYXJzZXIuZG9jdHlwZSA9IHRydWUgLy8ganVzdCByZW1lbWJlciB0aGF0IHdlIHNhdyBpdC5cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcGFyc2VyLmRvY3R5cGUgKz0gY1xuICAgICAgICAgICAgaWYgKGMgPT09ICdbJykge1xuICAgICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkRPQ1RZUEVfRFREXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGlzUXVvdGUoYykpIHtcbiAgICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5ET0NUWVBFX1FVT1RFRFxuICAgICAgICAgICAgICBwYXJzZXIucSA9IGNcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuRE9DVFlQRV9RVU9URUQ6XG4gICAgICAgICAgcGFyc2VyLmRvY3R5cGUgKz0gY1xuICAgICAgICAgIGlmIChjID09PSBwYXJzZXIucSkge1xuICAgICAgICAgICAgcGFyc2VyLnEgPSAnJ1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5ET0NUWVBFXG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlXG5cbiAgICAgICAgY2FzZSBTLkRPQ1RZUEVfRFREOlxuICAgICAgICAgIHBhcnNlci5kb2N0eXBlICs9IGNcbiAgICAgICAgICBpZiAoYyA9PT0gJ10nKSB7XG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkRPQ1RZUEVcbiAgICAgICAgICB9IGVsc2UgaWYgKGlzUXVvdGUoYykpIHtcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuRE9DVFlQRV9EVERfUVVPVEVEXG4gICAgICAgICAgICBwYXJzZXIucSA9IGNcbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuRE9DVFlQRV9EVERfUVVPVEVEOlxuICAgICAgICAgIHBhcnNlci5kb2N0eXBlICs9IGNcbiAgICAgICAgICBpZiAoYyA9PT0gcGFyc2VyLnEpIHtcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuRE9DVFlQRV9EVERcbiAgICAgICAgICAgIHBhcnNlci5xID0gJydcbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuQ09NTUVOVDpcbiAgICAgICAgICBpZiAoYyA9PT0gJy0nKSB7XG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkNPTU1FTlRfRU5ESU5HXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHBhcnNlci5jb21tZW50ICs9IGNcbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuQ09NTUVOVF9FTkRJTkc6XG4gICAgICAgICAgaWYgKGMgPT09ICctJykge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5DT01NRU5UX0VOREVEXG4gICAgICAgICAgICBwYXJzZXIuY29tbWVudCA9IHRleHRvcHRzKHBhcnNlci5vcHQsIHBhcnNlci5jb21tZW50KVxuICAgICAgICAgICAgaWYgKHBhcnNlci5jb21tZW50KSB7XG4gICAgICAgICAgICAgIGVtaXROb2RlKHBhcnNlciwgJ29uY29tbWVudCcsIHBhcnNlci5jb21tZW50KVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGFyc2VyLmNvbW1lbnQgPSAnJ1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXJzZXIuY29tbWVudCArPSAnLScgKyBjXG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkNPTU1FTlRcbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuQ09NTUVOVF9FTkRFRDpcbiAgICAgICAgICBpZiAoYyAhPT0gJz4nKSB7XG4gICAgICAgICAgICBzdHJpY3RGYWlsKHBhcnNlciwgJ01hbGZvcm1lZCBjb21tZW50JylcbiAgICAgICAgICAgIC8vIGFsbG93IDwhLS0gYmxhaCAtLSBibG9vIC0tPiBpbiBub24tc3RyaWN0IG1vZGUsXG4gICAgICAgICAgICAvLyB3aGljaCBpcyBhIGNvbW1lbnQgb2YgXCIgYmxhaCAtLSBibG9vIFwiXG4gICAgICAgICAgICBwYXJzZXIuY29tbWVudCArPSAnLS0nICsgY1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5DT01NRU5UXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuVEVYVFxuICAgICAgICAgIH1cbiAgICAgICAgICBjb250aW51ZVxuXG4gICAgICAgIGNhc2UgUy5DREFUQTpcbiAgICAgICAgICBpZiAoYyA9PT0gJ10nKSB7XG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkNEQVRBX0VORElOR1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXJzZXIuY2RhdGEgKz0gY1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb250aW51ZVxuXG4gICAgICAgIGNhc2UgUy5DREFUQV9FTkRJTkc6XG4gICAgICAgICAgaWYgKGMgPT09ICddJykge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5DREFUQV9FTkRJTkdfMlxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXJzZXIuY2RhdGEgKz0gJ10nICsgY1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5DREFUQVxuICAgICAgICAgIH1cbiAgICAgICAgICBjb250aW51ZVxuXG4gICAgICAgIGNhc2UgUy5DREFUQV9FTkRJTkdfMjpcbiAgICAgICAgICBpZiAoYyA9PT0gJz4nKSB7XG4gICAgICAgICAgICBpZiAocGFyc2VyLmNkYXRhKSB7XG4gICAgICAgICAgICAgIGVtaXROb2RlKHBhcnNlciwgJ29uY2RhdGEnLCBwYXJzZXIuY2RhdGEpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbWl0Tm9kZShwYXJzZXIsICdvbmNsb3NlY2RhdGEnKVxuICAgICAgICAgICAgcGFyc2VyLmNkYXRhID0gJydcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuVEVYVFxuICAgICAgICAgIH0gZWxzZSBpZiAoYyA9PT0gJ10nKSB7XG4gICAgICAgICAgICBwYXJzZXIuY2RhdGEgKz0gJ10nXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHBhcnNlci5jZGF0YSArPSAnXV0nICsgY1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5DREFUQVxuICAgICAgICAgIH1cbiAgICAgICAgICBjb250aW51ZVxuXG4gICAgICAgIGNhc2UgUy5QUk9DX0lOU1Q6XG4gICAgICAgICAgaWYgKGMgPT09ICc/Jykge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5QUk9DX0lOU1RfRU5ESU5HXG4gICAgICAgICAgfSBlbHNlIGlmIChpc1doaXRlc3BhY2UoYykpIHtcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuUFJPQ19JTlNUX0JPRFlcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcGFyc2VyLnByb2NJbnN0TmFtZSArPSBjXG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlXG5cbiAgICAgICAgY2FzZSBTLlBST0NfSU5TVF9CT0RZOlxuICAgICAgICAgIGlmICghcGFyc2VyLnByb2NJbnN0Qm9keSAmJiBpc1doaXRlc3BhY2UoYykpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgICAgfSBlbHNlIGlmIChjID09PSAnPycpIHtcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuUFJPQ19JTlNUX0VORElOR1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXJzZXIucHJvY0luc3RCb2R5ICs9IGNcbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuUFJPQ19JTlNUX0VORElORzpcbiAgICAgICAgICBpZiAoYyA9PT0gJz4nKSB7XG4gICAgICAgICAgICBlbWl0Tm9kZShwYXJzZXIsICdvbnByb2Nlc3NpbmdpbnN0cnVjdGlvbicsIHtcbiAgICAgICAgICAgICAgbmFtZTogcGFyc2VyLnByb2NJbnN0TmFtZSxcbiAgICAgICAgICAgICAgYm9keTogcGFyc2VyLnByb2NJbnN0Qm9keVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIHBhcnNlci5wcm9jSW5zdE5hbWUgPSBwYXJzZXIucHJvY0luc3RCb2R5ID0gJydcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuVEVYVFxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXJzZXIucHJvY0luc3RCb2R5ICs9ICc/JyArIGNcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuUFJPQ19JTlNUX0JPRFlcbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuT1BFTl9UQUc6XG4gICAgICAgICAgaWYgKGlzTWF0Y2gobmFtZUJvZHksIGMpKSB7XG4gICAgICAgICAgICBwYXJzZXIudGFnTmFtZSArPSBjXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG5ld1RhZyhwYXJzZXIpXG4gICAgICAgICAgICBpZiAoYyA9PT0gJz4nKSB7XG4gICAgICAgICAgICAgIG9wZW5UYWcocGFyc2VyKVxuICAgICAgICAgICAgfSBlbHNlIGlmIChjID09PSAnLycpIHtcbiAgICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5PUEVOX1RBR19TTEFTSFxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgaWYgKCFpc1doaXRlc3BhY2UoYykpIHtcbiAgICAgICAgICAgICAgICBzdHJpY3RGYWlsKHBhcnNlciwgJ0ludmFsaWQgY2hhcmFjdGVyIGluIHRhZyBuYW1lJylcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkFUVFJJQlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBjb250aW51ZVxuXG4gICAgICAgIGNhc2UgUy5PUEVOX1RBR19TTEFTSDpcbiAgICAgICAgICBpZiAoYyA9PT0gJz4nKSB7XG4gICAgICAgICAgICBvcGVuVGFnKHBhcnNlciwgdHJ1ZSlcbiAgICAgICAgICAgIGNsb3NlVGFnKHBhcnNlcilcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc3RyaWN0RmFpbChwYXJzZXIsICdGb3J3YXJkLXNsYXNoIGluIG9wZW5pbmcgdGFnIG5vdCBmb2xsb3dlZCBieSA+JylcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuQVRUUklCXG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlXG5cbiAgICAgICAgY2FzZSBTLkFUVFJJQjpcbiAgICAgICAgICAvLyBoYXZlbid0IHJlYWQgdGhlIGF0dHJpYnV0ZSBuYW1lIHlldC5cbiAgICAgICAgICBpZiAoaXNXaGl0ZXNwYWNlKGMpKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH0gZWxzZSBpZiAoYyA9PT0gJz4nKSB7XG4gICAgICAgICAgICBvcGVuVGFnKHBhcnNlcilcbiAgICAgICAgICB9IGVsc2UgaWYgKGMgPT09ICcvJykge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5PUEVOX1RBR19TTEFTSFxuICAgICAgICAgIH0gZWxzZSBpZiAoaXNNYXRjaChuYW1lU3RhcnQsIGMpKSB7XG4gICAgICAgICAgICBwYXJzZXIuYXR0cmliTmFtZSA9IGNcbiAgICAgICAgICAgIHBhcnNlci5hdHRyaWJWYWx1ZSA9ICcnXG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkFUVFJJQl9OQU1FXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHN0cmljdEZhaWwocGFyc2VyLCAnSW52YWxpZCBhdHRyaWJ1dGUgbmFtZScpXG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlXG5cbiAgICAgICAgY2FzZSBTLkFUVFJJQl9OQU1FOlxuICAgICAgICAgIGlmIChjID09PSAnPScpIHtcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuQVRUUklCX1ZBTFVFXG4gICAgICAgICAgfSBlbHNlIGlmIChjID09PSAnPicpIHtcbiAgICAgICAgICAgIHN0cmljdEZhaWwocGFyc2VyLCAnQXR0cmlidXRlIHdpdGhvdXQgdmFsdWUnKVxuICAgICAgICAgICAgcGFyc2VyLmF0dHJpYlZhbHVlID0gcGFyc2VyLmF0dHJpYk5hbWVcbiAgICAgICAgICAgIGF0dHJpYihwYXJzZXIpXG4gICAgICAgICAgICBvcGVuVGFnKHBhcnNlcilcbiAgICAgICAgICB9IGVsc2UgaWYgKGlzV2hpdGVzcGFjZShjKSkge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5BVFRSSUJfTkFNRV9TQVdfV0hJVEVcbiAgICAgICAgICB9IGVsc2UgaWYgKGlzTWF0Y2gobmFtZUJvZHksIGMpKSB7XG4gICAgICAgICAgICBwYXJzZXIuYXR0cmliTmFtZSArPSBjXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHN0cmljdEZhaWwocGFyc2VyLCAnSW52YWxpZCBhdHRyaWJ1dGUgbmFtZScpXG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlXG5cbiAgICAgICAgY2FzZSBTLkFUVFJJQl9OQU1FX1NBV19XSElURTpcbiAgICAgICAgICBpZiAoYyA9PT0gJz0nKSB7XG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkFUVFJJQl9WQUxVRVxuICAgICAgICAgIH0gZWxzZSBpZiAoaXNXaGl0ZXNwYWNlKGMpKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzdHJpY3RGYWlsKHBhcnNlciwgJ0F0dHJpYnV0ZSB3aXRob3V0IHZhbHVlJylcbiAgICAgICAgICAgIHBhcnNlci50YWcuYXR0cmlidXRlc1twYXJzZXIuYXR0cmliTmFtZV0gPSAnJ1xuICAgICAgICAgICAgcGFyc2VyLmF0dHJpYlZhbHVlID0gJydcbiAgICAgICAgICAgIGVtaXROb2RlKHBhcnNlciwgJ29uYXR0cmlidXRlJywge1xuICAgICAgICAgICAgICBuYW1lOiBwYXJzZXIuYXR0cmliTmFtZSxcbiAgICAgICAgICAgICAgdmFsdWU6ICcnXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgcGFyc2VyLmF0dHJpYk5hbWUgPSAnJ1xuICAgICAgICAgICAgaWYgKGMgPT09ICc+Jykge1xuICAgICAgICAgICAgICBvcGVuVGFnKHBhcnNlcilcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoaXNNYXRjaChuYW1lU3RhcnQsIGMpKSB7XG4gICAgICAgICAgICAgIHBhcnNlci5hdHRyaWJOYW1lID0gY1xuICAgICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkFUVFJJQl9OQU1FXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBzdHJpY3RGYWlsKHBhcnNlciwgJ0ludmFsaWQgYXR0cmlidXRlIG5hbWUnKVxuICAgICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkFUVFJJQlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBjb250aW51ZVxuXG4gICAgICAgIGNhc2UgUy5BVFRSSUJfVkFMVUU6XG4gICAgICAgICAgaWYgKGlzV2hpdGVzcGFjZShjKSkge1xuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICB9IGVsc2UgaWYgKGlzUXVvdGUoYykpIHtcbiAgICAgICAgICAgIHBhcnNlci5xID0gY1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5BVFRSSUJfVkFMVUVfUVVPVEVEXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHN0cmljdEZhaWwocGFyc2VyLCAnVW5xdW90ZWQgYXR0cmlidXRlIHZhbHVlJylcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuQVRUUklCX1ZBTFVFX1VOUVVPVEVEXG4gICAgICAgICAgICBwYXJzZXIuYXR0cmliVmFsdWUgPSBjXG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlXG5cbiAgICAgICAgY2FzZSBTLkFUVFJJQl9WQUxVRV9RVU9URUQ6XG4gICAgICAgICAgaWYgKGMgIT09IHBhcnNlci5xKSB7XG4gICAgICAgICAgICBpZiAoYyA9PT0gJyYnKSB7XG4gICAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuQVRUUklCX1ZBTFVFX0VOVElUWV9RXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBwYXJzZXIuYXR0cmliVmFsdWUgKz0gY1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICB9XG4gICAgICAgICAgYXR0cmliKHBhcnNlcilcbiAgICAgICAgICBwYXJzZXIucSA9ICcnXG4gICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5BVFRSSUJfVkFMVUVfQ0xPU0VEXG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuQVRUUklCX1ZBTFVFX0NMT1NFRDpcbiAgICAgICAgICBpZiAoaXNXaGl0ZXNwYWNlKGMpKSB7XG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkFUVFJJQlxuICAgICAgICAgIH0gZWxzZSBpZiAoYyA9PT0gJz4nKSB7XG4gICAgICAgICAgICBvcGVuVGFnKHBhcnNlcilcbiAgICAgICAgICB9IGVsc2UgaWYgKGMgPT09ICcvJykge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5PUEVOX1RBR19TTEFTSFxuICAgICAgICAgIH0gZWxzZSBpZiAoaXNNYXRjaChuYW1lU3RhcnQsIGMpKSB7XG4gICAgICAgICAgICBzdHJpY3RGYWlsKHBhcnNlciwgJ05vIHdoaXRlc3BhY2UgYmV0d2VlbiBhdHRyaWJ1dGVzJylcbiAgICAgICAgICAgIHBhcnNlci5hdHRyaWJOYW1lID0gY1xuICAgICAgICAgICAgcGFyc2VyLmF0dHJpYlZhbHVlID0gJydcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuQVRUUklCX05BTUVcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc3RyaWN0RmFpbChwYXJzZXIsICdJbnZhbGlkIGF0dHJpYnV0ZSBuYW1lJylcbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuQVRUUklCX1ZBTFVFX1VOUVVPVEVEOlxuICAgICAgICAgIGlmICghaXNBdHRyaWJFbmQoYykpIHtcbiAgICAgICAgICAgIGlmIChjID09PSAnJicpIHtcbiAgICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5BVFRSSUJfVkFMVUVfRU5USVRZX1VcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHBhcnNlci5hdHRyaWJWYWx1ZSArPSBjXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH1cbiAgICAgICAgICBhdHRyaWIocGFyc2VyKVxuICAgICAgICAgIGlmIChjID09PSAnPicpIHtcbiAgICAgICAgICAgIG9wZW5UYWcocGFyc2VyKVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkFUVFJJQlxuICAgICAgICAgIH1cbiAgICAgICAgICBjb250aW51ZVxuXG4gICAgICAgIGNhc2UgUy5DTE9TRV9UQUc6XG4gICAgICAgICAgaWYgKCFwYXJzZXIudGFnTmFtZSkge1xuICAgICAgICAgICAgaWYgKGlzV2hpdGVzcGFjZShjKSkge1xuICAgICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgICAgfSBlbHNlIGlmIChub3RNYXRjaChuYW1lU3RhcnQsIGMpKSB7XG4gICAgICAgICAgICAgIGlmIChwYXJzZXIuc2NyaXB0KSB7XG4gICAgICAgICAgICAgICAgcGFyc2VyLnNjcmlwdCArPSAnPC8nICsgY1xuICAgICAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuU0NSSVBUXG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc3RyaWN0RmFpbChwYXJzZXIsICdJbnZhbGlkIHRhZ25hbWUgaW4gY2xvc2luZyB0YWcuJylcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcGFyc2VyLnRhZ05hbWUgPSBjXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIGlmIChjID09PSAnPicpIHtcbiAgICAgICAgICAgIGNsb3NlVGFnKHBhcnNlcilcbiAgICAgICAgICB9IGVsc2UgaWYgKGlzTWF0Y2gobmFtZUJvZHksIGMpKSB7XG4gICAgICAgICAgICBwYXJzZXIudGFnTmFtZSArPSBjXG4gICAgICAgICAgfSBlbHNlIGlmIChwYXJzZXIuc2NyaXB0KSB7XG4gICAgICAgICAgICBwYXJzZXIuc2NyaXB0ICs9ICc8LycgKyBwYXJzZXIudGFnTmFtZVxuICAgICAgICAgICAgcGFyc2VyLnRhZ05hbWUgPSAnJ1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5TQ1JJUFRcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKCFpc1doaXRlc3BhY2UoYykpIHtcbiAgICAgICAgICAgICAgc3RyaWN0RmFpbChwYXJzZXIsICdJbnZhbGlkIHRhZ25hbWUgaW4gY2xvc2luZyB0YWcnKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5DTE9TRV9UQUdfU0FXX1dISVRFXG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlXG5cbiAgICAgICAgY2FzZSBTLkNMT1NFX1RBR19TQVdfV0hJVEU6XG4gICAgICAgICAgaWYgKGlzV2hpdGVzcGFjZShjKSkge1xuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGMgPT09ICc+Jykge1xuICAgICAgICAgICAgY2xvc2VUYWcocGFyc2VyKVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzdHJpY3RGYWlsKHBhcnNlciwgJ0ludmFsaWQgY2hhcmFjdGVycyBpbiBjbG9zaW5nIHRhZycpXG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlXG5cbiAgICAgICAgY2FzZSBTLlRFWFRfRU5USVRZOlxuICAgICAgICBjYXNlIFMuQVRUUklCX1ZBTFVFX0VOVElUWV9ROlxuICAgICAgICBjYXNlIFMuQVRUUklCX1ZBTFVFX0VOVElUWV9VOlxuICAgICAgICAgIHZhciByZXR1cm5TdGF0ZVxuICAgICAgICAgIHZhciBidWZmZXJcbiAgICAgICAgICBzd2l0Y2ggKHBhcnNlci5zdGF0ZSkge1xuICAgICAgICAgICAgY2FzZSBTLlRFWFRfRU5USVRZOlxuICAgICAgICAgICAgICByZXR1cm5TdGF0ZSA9IFMuVEVYVFxuICAgICAgICAgICAgICBidWZmZXIgPSAndGV4dE5vZGUnXG4gICAgICAgICAgICAgIGJyZWFrXG5cbiAgICAgICAgICAgIGNhc2UgUy5BVFRSSUJfVkFMVUVfRU5USVRZX1E6XG4gICAgICAgICAgICAgIHJldHVyblN0YXRlID0gUy5BVFRSSUJfVkFMVUVfUVVPVEVEXG4gICAgICAgICAgICAgIGJ1ZmZlciA9ICdhdHRyaWJWYWx1ZSdcbiAgICAgICAgICAgICAgYnJlYWtcblxuICAgICAgICAgICAgY2FzZSBTLkFUVFJJQl9WQUxVRV9FTlRJVFlfVTpcbiAgICAgICAgICAgICAgcmV0dXJuU3RhdGUgPSBTLkFUVFJJQl9WQUxVRV9VTlFVT1RFRFxuICAgICAgICAgICAgICBidWZmZXIgPSAnYXR0cmliVmFsdWUnXG4gICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKGMgPT09ICc7Jykge1xuICAgICAgICAgICAgcGFyc2VyW2J1ZmZlcl0gKz0gcGFyc2VFbnRpdHkocGFyc2VyKVxuICAgICAgICAgICAgcGFyc2VyLmVudGl0eSA9ICcnXG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSByZXR1cm5TdGF0ZVxuICAgICAgICAgIH0gZWxzZSBpZiAoaXNNYXRjaChwYXJzZXIuZW50aXR5Lmxlbmd0aCA/IGVudGl0eUJvZHkgOiBlbnRpdHlTdGFydCwgYykpIHtcbiAgICAgICAgICAgIHBhcnNlci5lbnRpdHkgKz0gY1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzdHJpY3RGYWlsKHBhcnNlciwgJ0ludmFsaWQgY2hhcmFjdGVyIGluIGVudGl0eSBuYW1lJylcbiAgICAgICAgICAgIHBhcnNlcltidWZmZXJdICs9ICcmJyArIHBhcnNlci5lbnRpdHkgKyBjXG4gICAgICAgICAgICBwYXJzZXIuZW50aXR5ID0gJydcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IHJldHVyblN0YXRlXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihwYXJzZXIsICdVbmtub3duIHN0YXRlOiAnICsgcGFyc2VyLnN0YXRlKVxuICAgICAgfVxuICAgIH0gLy8gd2hpbGVcblxuICAgIGlmIChwYXJzZXIucG9zaXRpb24gPj0gcGFyc2VyLmJ1ZmZlckNoZWNrUG9zaXRpb24pIHtcbiAgICAgIGNoZWNrQnVmZmVyTGVuZ3RoKHBhcnNlcilcbiAgICB9XG4gICAgcmV0dXJuIHBhcnNlclxuICB9XG5cbiAgLyohIGh0dHA6Ly9tdGhzLmJlL2Zyb21jb2RlcG9pbnQgdjAuMS4wIGJ5IEBtYXRoaWFzICovXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIGlmICghU3RyaW5nLmZyb21Db2RlUG9pbnQpIHtcbiAgICAoZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHN0cmluZ0Zyb21DaGFyQ29kZSA9IFN0cmluZy5mcm9tQ2hhckNvZGVcbiAgICAgIHZhciBmbG9vciA9IE1hdGguZmxvb3JcbiAgICAgIHZhciBmcm9tQ29kZVBvaW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgTUFYX1NJWkUgPSAweDQwMDBcbiAgICAgICAgdmFyIGNvZGVVbml0cyA9IFtdXG4gICAgICAgIHZhciBoaWdoU3Vycm9nYXRlXG4gICAgICAgIHZhciBsb3dTdXJyb2dhdGVcbiAgICAgICAgdmFyIGluZGV4ID0gLTFcbiAgICAgICAgdmFyIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGhcbiAgICAgICAgaWYgKCFsZW5ndGgpIHtcbiAgICAgICAgICByZXR1cm4gJydcbiAgICAgICAgfVxuICAgICAgICB2YXIgcmVzdWx0ID0gJydcbiAgICAgICAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICAgICAgICB2YXIgY29kZVBvaW50ID0gTnVtYmVyKGFyZ3VtZW50c1tpbmRleF0pXG4gICAgICAgICAgaWYgKFxuICAgICAgICAgICAgIWlzRmluaXRlKGNvZGVQb2ludCkgfHwgLy8gYE5hTmAsIGArSW5maW5pdHlgLCBvciBgLUluZmluaXR5YFxuICAgICAgICAgICAgY29kZVBvaW50IDwgMCB8fCAvLyBub3QgYSB2YWxpZCBVbmljb2RlIGNvZGUgcG9pbnRcbiAgICAgICAgICAgIGNvZGVQb2ludCA+IDB4MTBGRkZGIHx8IC8vIG5vdCBhIHZhbGlkIFVuaWNvZGUgY29kZSBwb2ludFxuICAgICAgICAgICAgZmxvb3IoY29kZVBvaW50KSAhPT0gY29kZVBvaW50IC8vIG5vdCBhbiBpbnRlZ2VyXG4gICAgICAgICAgKSB7XG4gICAgICAgICAgICB0aHJvdyBSYW5nZUVycm9yKCdJbnZhbGlkIGNvZGUgcG9pbnQ6ICcgKyBjb2RlUG9pbnQpXG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChjb2RlUG9pbnQgPD0gMHhGRkZGKSB7IC8vIEJNUCBjb2RlIHBvaW50XG4gICAgICAgICAgICBjb2RlVW5pdHMucHVzaChjb2RlUG9pbnQpXG4gICAgICAgICAgfSBlbHNlIHsgLy8gQXN0cmFsIGNvZGUgcG9pbnQ7IHNwbGl0IGluIHN1cnJvZ2F0ZSBoYWx2ZXNcbiAgICAgICAgICAgIC8vIGh0dHA6Ly9tYXRoaWFzYnluZW5zLmJlL25vdGVzL2phdmFzY3JpcHQtZW5jb2Rpbmcjc3Vycm9nYXRlLWZvcm11bGFlXG4gICAgICAgICAgICBjb2RlUG9pbnQgLT0gMHgxMDAwMFxuICAgICAgICAgICAgaGlnaFN1cnJvZ2F0ZSA9IChjb2RlUG9pbnQgPj4gMTApICsgMHhEODAwXG4gICAgICAgICAgICBsb3dTdXJyb2dhdGUgPSAoY29kZVBvaW50ICUgMHg0MDApICsgMHhEQzAwXG4gICAgICAgICAgICBjb2RlVW5pdHMucHVzaChoaWdoU3Vycm9nYXRlLCBsb3dTdXJyb2dhdGUpXG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChpbmRleCArIDEgPT09IGxlbmd0aCB8fCBjb2RlVW5pdHMubGVuZ3RoID4gTUFYX1NJWkUpIHtcbiAgICAgICAgICAgIHJlc3VsdCArPSBzdHJpbmdGcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgY29kZVVuaXRzKVxuICAgICAgICAgICAgY29kZVVuaXRzLmxlbmd0aCA9IDBcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdFxuICAgICAgfVxuICAgICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICAgIGlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFN0cmluZywgJ2Zyb21Db2RlUG9pbnQnLCB7XG4gICAgICAgICAgdmFsdWU6IGZyb21Db2RlUG9pbnQsXG4gICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgICAgIH0pXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBTdHJpbmcuZnJvbUNvZGVQb2ludCA9IGZyb21Db2RlUG9pbnRcbiAgICAgIH1cbiAgICB9KCkpXG4gIH1cbn0pKHR5cGVvZiBleHBvcnRzID09PSAndW5kZWZpbmVkJyA/IHRoaXMuc2F4ID0ge30gOiBleHBvcnRzKVxuIiwiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbm1vZHVsZS5leHBvcnRzID0gU3RyZWFtO1xuXG52YXIgRUUgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXI7XG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpO1xuXG5pbmhlcml0cyhTdHJlYW0sIEVFKTtcblN0cmVhbS5SZWFkYWJsZSA9IHJlcXVpcmUoJ3JlYWRhYmxlLXN0cmVhbS9yZWFkYWJsZS5qcycpO1xuU3RyZWFtLldyaXRhYmxlID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtL3dyaXRhYmxlLmpzJyk7XG5TdHJlYW0uRHVwbGV4ID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtL2R1cGxleC5qcycpO1xuU3RyZWFtLlRyYW5zZm9ybSA9IHJlcXVpcmUoJ3JlYWRhYmxlLXN0cmVhbS90cmFuc2Zvcm0uanMnKTtcblN0cmVhbS5QYXNzVGhyb3VnaCA9IHJlcXVpcmUoJ3JlYWRhYmxlLXN0cmVhbS9wYXNzdGhyb3VnaC5qcycpO1xuXG4vLyBCYWNrd2FyZHMtY29tcGF0IHdpdGggbm9kZSAwLjQueFxuU3RyZWFtLlN0cmVhbSA9IFN0cmVhbTtcblxuXG5cbi8vIG9sZC1zdHlsZSBzdHJlYW1zLiAgTm90ZSB0aGF0IHRoZSBwaXBlIG1ldGhvZCAodGhlIG9ubHkgcmVsZXZhbnRcbi8vIHBhcnQgb2YgdGhpcyBjbGFzcykgaXMgb3ZlcnJpZGRlbiBpbiB0aGUgUmVhZGFibGUgY2xhc3MuXG5cbmZ1bmN0aW9uIFN0cmVhbSgpIHtcbiAgRUUuY2FsbCh0aGlzKTtcbn1cblxuU3RyZWFtLnByb3RvdHlwZS5waXBlID0gZnVuY3Rpb24oZGVzdCwgb3B0aW9ucykge1xuICB2YXIgc291cmNlID0gdGhpcztcblxuICBmdW5jdGlvbiBvbmRhdGEoY2h1bmspIHtcbiAgICBpZiAoZGVzdC53cml0YWJsZSkge1xuICAgICAgaWYgKGZhbHNlID09PSBkZXN0LndyaXRlKGNodW5rKSAmJiBzb3VyY2UucGF1c2UpIHtcbiAgICAgICAgc291cmNlLnBhdXNlKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgc291cmNlLm9uKCdkYXRhJywgb25kYXRhKTtcblxuICBmdW5jdGlvbiBvbmRyYWluKCkge1xuICAgIGlmIChzb3VyY2UucmVhZGFibGUgJiYgc291cmNlLnJlc3VtZSkge1xuICAgICAgc291cmNlLnJlc3VtZSgpO1xuICAgIH1cbiAgfVxuXG4gIGRlc3Qub24oJ2RyYWluJywgb25kcmFpbik7XG5cbiAgLy8gSWYgdGhlICdlbmQnIG9wdGlvbiBpcyBub3Qgc3VwcGxpZWQsIGRlc3QuZW5kKCkgd2lsbCBiZSBjYWxsZWQgd2hlblxuICAvLyBzb3VyY2UgZ2V0cyB0aGUgJ2VuZCcgb3IgJ2Nsb3NlJyBldmVudHMuICBPbmx5IGRlc3QuZW5kKCkgb25jZS5cbiAgaWYgKCFkZXN0Ll9pc1N0ZGlvICYmICghb3B0aW9ucyB8fCBvcHRpb25zLmVuZCAhPT0gZmFsc2UpKSB7XG4gICAgc291cmNlLm9uKCdlbmQnLCBvbmVuZCk7XG4gICAgc291cmNlLm9uKCdjbG9zZScsIG9uY2xvc2UpO1xuICB9XG5cbiAgdmFyIGRpZE9uRW5kID0gZmFsc2U7XG4gIGZ1bmN0aW9uIG9uZW5kKCkge1xuICAgIGlmIChkaWRPbkVuZCkgcmV0dXJuO1xuICAgIGRpZE9uRW5kID0gdHJ1ZTtcblxuICAgIGRlc3QuZW5kKCk7XG4gIH1cblxuXG4gIGZ1bmN0aW9uIG9uY2xvc2UoKSB7XG4gICAgaWYgKGRpZE9uRW5kKSByZXR1cm47XG4gICAgZGlkT25FbmQgPSB0cnVlO1xuXG4gICAgaWYgKHR5cGVvZiBkZXN0LmRlc3Ryb3kgPT09ICdmdW5jdGlvbicpIGRlc3QuZGVzdHJveSgpO1xuICB9XG5cbiAgLy8gZG9uJ3QgbGVhdmUgZGFuZ2xpbmcgcGlwZXMgd2hlbiB0aGVyZSBhcmUgZXJyb3JzLlxuICBmdW5jdGlvbiBvbmVycm9yKGVyKSB7XG4gICAgY2xlYW51cCgpO1xuICAgIGlmIChFRS5saXN0ZW5lckNvdW50KHRoaXMsICdlcnJvcicpID09PSAwKSB7XG4gICAgICB0aHJvdyBlcjsgLy8gVW5oYW5kbGVkIHN0cmVhbSBlcnJvciBpbiBwaXBlLlxuICAgIH1cbiAgfVxuXG4gIHNvdXJjZS5vbignZXJyb3InLCBvbmVycm9yKTtcbiAgZGVzdC5vbignZXJyb3InLCBvbmVycm9yKTtcblxuICAvLyByZW1vdmUgYWxsIHRoZSBldmVudCBsaXN0ZW5lcnMgdGhhdCB3ZXJlIGFkZGVkLlxuICBmdW5jdGlvbiBjbGVhbnVwKCkge1xuICAgIHNvdXJjZS5yZW1vdmVMaXN0ZW5lcignZGF0YScsIG9uZGF0YSk7XG4gICAgZGVzdC5yZW1vdmVMaXN0ZW5lcignZHJhaW4nLCBvbmRyYWluKTtcblxuICAgIHNvdXJjZS5yZW1vdmVMaXN0ZW5lcignZW5kJywgb25lbmQpO1xuICAgIHNvdXJjZS5yZW1vdmVMaXN0ZW5lcignY2xvc2UnLCBvbmNsb3NlKTtcblxuICAgIHNvdXJjZS5yZW1vdmVMaXN0ZW5lcignZXJyb3InLCBvbmVycm9yKTtcbiAgICBkZXN0LnJlbW92ZUxpc3RlbmVyKCdlcnJvcicsIG9uZXJyb3IpO1xuXG4gICAgc291cmNlLnJlbW92ZUxpc3RlbmVyKCdlbmQnLCBjbGVhbnVwKTtcbiAgICBzb3VyY2UucmVtb3ZlTGlzdGVuZXIoJ2Nsb3NlJywgY2xlYW51cCk7XG5cbiAgICBkZXN0LnJlbW92ZUxpc3RlbmVyKCdjbG9zZScsIGNsZWFudXApO1xuICB9XG5cbiAgc291cmNlLm9uKCdlbmQnLCBjbGVhbnVwKTtcbiAgc291cmNlLm9uKCdjbG9zZScsIGNsZWFudXApO1xuXG4gIGRlc3Qub24oJ2Nsb3NlJywgY2xlYW51cCk7XG5cbiAgZGVzdC5lbWl0KCdwaXBlJywgc291cmNlKTtcblxuICAvLyBBbGxvdyBmb3IgdW5peC1saWtlIHVzYWdlOiBBLnBpcGUoQikucGlwZShDKVxuICByZXR1cm4gZGVzdDtcbn07XG4iLCIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xuXG52YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXI7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxudmFyIGlzRW5jb2RpbmcgPSBCdWZmZXIuaXNFbmNvZGluZyB8fCBmdW5jdGlvbiAoZW5jb2RpbmcpIHtcbiAgZW5jb2RpbmcgPSAnJyArIGVuY29kaW5nO1xuICBzd2l0Y2ggKGVuY29kaW5nICYmIGVuY29kaW5nLnRvTG93ZXJDYXNlKCkpIHtcbiAgICBjYXNlICdoZXgnOmNhc2UgJ3V0ZjgnOmNhc2UgJ3V0Zi04JzpjYXNlICdhc2NpaSc6Y2FzZSAnYmluYXJ5JzpjYXNlICdiYXNlNjQnOmNhc2UgJ3VjczInOmNhc2UgJ3Vjcy0yJzpjYXNlICd1dGYxNmxlJzpjYXNlICd1dGYtMTZsZSc6Y2FzZSAncmF3JzpcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIF9ub3JtYWxpemVFbmNvZGluZyhlbmMpIHtcbiAgaWYgKCFlbmMpIHJldHVybiAndXRmOCc7XG4gIHZhciByZXRyaWVkO1xuICB3aGlsZSAodHJ1ZSkge1xuICAgIHN3aXRjaCAoZW5jKSB7XG4gICAgICBjYXNlICd1dGY4JzpcbiAgICAgIGNhc2UgJ3V0Zi04JzpcbiAgICAgICAgcmV0dXJuICd1dGY4JztcbiAgICAgIGNhc2UgJ3VjczInOlxuICAgICAgY2FzZSAndWNzLTInOlxuICAgICAgY2FzZSAndXRmMTZsZSc6XG4gICAgICBjYXNlICd1dGYtMTZsZSc6XG4gICAgICAgIHJldHVybiAndXRmMTZsZSc7XG4gICAgICBjYXNlICdsYXRpbjEnOlxuICAgICAgY2FzZSAnYmluYXJ5JzpcbiAgICAgICAgcmV0dXJuICdsYXRpbjEnO1xuICAgICAgY2FzZSAnYmFzZTY0JzpcbiAgICAgIGNhc2UgJ2FzY2lpJzpcbiAgICAgIGNhc2UgJ2hleCc6XG4gICAgICAgIHJldHVybiBlbmM7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBpZiAocmV0cmllZCkgcmV0dXJuOyAvLyB1bmRlZmluZWRcbiAgICAgICAgZW5jID0gKCcnICsgZW5jKS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICByZXRyaWVkID0gdHJ1ZTtcbiAgICB9XG4gIH1cbn07XG5cbi8vIERvIG5vdCBjYWNoZSBgQnVmZmVyLmlzRW5jb2RpbmdgIHdoZW4gY2hlY2tpbmcgZW5jb2RpbmcgbmFtZXMgYXMgc29tZVxuLy8gbW9kdWxlcyBtb25rZXktcGF0Y2ggaXQgdG8gc3VwcG9ydCBhZGRpdGlvbmFsIGVuY29kaW5nc1xuZnVuY3Rpb24gbm9ybWFsaXplRW5jb2RpbmcoZW5jKSB7XG4gIHZhciBuZW5jID0gX25vcm1hbGl6ZUVuY29kaW5nKGVuYyk7XG4gIGlmICh0eXBlb2YgbmVuYyAhPT0gJ3N0cmluZycgJiYgKEJ1ZmZlci5pc0VuY29kaW5nID09PSBpc0VuY29kaW5nIHx8ICFpc0VuY29kaW5nKGVuYykpKSB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gZW5jb2Rpbmc6ICcgKyBlbmMpO1xuICByZXR1cm4gbmVuYyB8fCBlbmM7XG59XG5cbi8vIFN0cmluZ0RlY29kZXIgcHJvdmlkZXMgYW4gaW50ZXJmYWNlIGZvciBlZmZpY2llbnRseSBzcGxpdHRpbmcgYSBzZXJpZXMgb2Zcbi8vIGJ1ZmZlcnMgaW50byBhIHNlcmllcyBvZiBKUyBzdHJpbmdzIHdpdGhvdXQgYnJlYWtpbmcgYXBhcnQgbXVsdGktYnl0ZVxuLy8gY2hhcmFjdGVycy5cbmV4cG9ydHMuU3RyaW5nRGVjb2RlciA9IFN0cmluZ0RlY29kZXI7XG5mdW5jdGlvbiBTdHJpbmdEZWNvZGVyKGVuY29kaW5nKSB7XG4gIHRoaXMuZW5jb2RpbmcgPSBub3JtYWxpemVFbmNvZGluZyhlbmNvZGluZyk7XG4gIHZhciBuYjtcbiAgc3dpdGNoICh0aGlzLmVuY29kaW5nKSB7XG4gICAgY2FzZSAndXRmMTZsZSc6XG4gICAgICB0aGlzLnRleHQgPSB1dGYxNlRleHQ7XG4gICAgICB0aGlzLmVuZCA9IHV0ZjE2RW5kO1xuICAgICAgbmIgPSA0O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAndXRmOCc6XG4gICAgICB0aGlzLmZpbGxMYXN0ID0gdXRmOEZpbGxMYXN0O1xuICAgICAgbmIgPSA0O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnYmFzZTY0JzpcbiAgICAgIHRoaXMudGV4dCA9IGJhc2U2NFRleHQ7XG4gICAgICB0aGlzLmVuZCA9IGJhc2U2NEVuZDtcbiAgICAgIG5iID0gMztcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aGlzLndyaXRlID0gc2ltcGxlV3JpdGU7XG4gICAgICB0aGlzLmVuZCA9IHNpbXBsZUVuZDtcbiAgICAgIHJldHVybjtcbiAgfVxuICB0aGlzLmxhc3ROZWVkID0gMDtcbiAgdGhpcy5sYXN0VG90YWwgPSAwO1xuICB0aGlzLmxhc3RDaGFyID0gQnVmZmVyLmFsbG9jVW5zYWZlKG5iKTtcbn1cblxuU3RyaW5nRGVjb2Rlci5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbiAoYnVmKSB7XG4gIGlmIChidWYubGVuZ3RoID09PSAwKSByZXR1cm4gJyc7XG4gIHZhciByO1xuICB2YXIgaTtcbiAgaWYgKHRoaXMubGFzdE5lZWQpIHtcbiAgICByID0gdGhpcy5maWxsTGFzdChidWYpO1xuICAgIGlmIChyID09PSB1bmRlZmluZWQpIHJldHVybiAnJztcbiAgICBpID0gdGhpcy5sYXN0TmVlZDtcbiAgICB0aGlzLmxhc3ROZWVkID0gMDtcbiAgfSBlbHNlIHtcbiAgICBpID0gMDtcbiAgfVxuICBpZiAoaSA8IGJ1Zi5sZW5ndGgpIHJldHVybiByID8gciArIHRoaXMudGV4dChidWYsIGkpIDogdGhpcy50ZXh0KGJ1ZiwgaSk7XG4gIHJldHVybiByIHx8ICcnO1xufTtcblxuU3RyaW5nRGVjb2Rlci5wcm90b3R5cGUuZW5kID0gdXRmOEVuZDtcblxuLy8gUmV0dXJucyBvbmx5IGNvbXBsZXRlIGNoYXJhY3RlcnMgaW4gYSBCdWZmZXJcblN0cmluZ0RlY29kZXIucHJvdG90eXBlLnRleHQgPSB1dGY4VGV4dDtcblxuLy8gQXR0ZW1wdHMgdG8gY29tcGxldGUgYSBwYXJ0aWFsIG5vbi1VVEYtOCBjaGFyYWN0ZXIgdXNpbmcgYnl0ZXMgZnJvbSBhIEJ1ZmZlclxuU3RyaW5nRGVjb2Rlci5wcm90b3R5cGUuZmlsbExhc3QgPSBmdW5jdGlvbiAoYnVmKSB7XG4gIGlmICh0aGlzLmxhc3ROZWVkIDw9IGJ1Zi5sZW5ndGgpIHtcbiAgICBidWYuY29weSh0aGlzLmxhc3RDaGFyLCB0aGlzLmxhc3RUb3RhbCAtIHRoaXMubGFzdE5lZWQsIDAsIHRoaXMubGFzdE5lZWQpO1xuICAgIHJldHVybiB0aGlzLmxhc3RDaGFyLnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcsIDAsIHRoaXMubGFzdFRvdGFsKTtcbiAgfVxuICBidWYuY29weSh0aGlzLmxhc3RDaGFyLCB0aGlzLmxhc3RUb3RhbCAtIHRoaXMubGFzdE5lZWQsIDAsIGJ1Zi5sZW5ndGgpO1xuICB0aGlzLmxhc3ROZWVkIC09IGJ1Zi5sZW5ndGg7XG59O1xuXG4vLyBDaGVja3MgdGhlIHR5cGUgb2YgYSBVVEYtOCBieXRlLCB3aGV0aGVyIGl0J3MgQVNDSUksIGEgbGVhZGluZyBieXRlLCBvciBhXG4vLyBjb250aW51YXRpb24gYnl0ZS4gSWYgYW4gaW52YWxpZCBieXRlIGlzIGRldGVjdGVkLCAtMiBpcyByZXR1cm5lZC5cbmZ1bmN0aW9uIHV0ZjhDaGVja0J5dGUoYnl0ZSkge1xuICBpZiAoYnl0ZSA8PSAweDdGKSByZXR1cm4gMDtlbHNlIGlmIChieXRlID4+IDUgPT09IDB4MDYpIHJldHVybiAyO2Vsc2UgaWYgKGJ5dGUgPj4gNCA9PT0gMHgwRSkgcmV0dXJuIDM7ZWxzZSBpZiAoYnl0ZSA+PiAzID09PSAweDFFKSByZXR1cm4gNDtcbiAgcmV0dXJuIGJ5dGUgPj4gNiA9PT0gMHgwMiA/IC0xIDogLTI7XG59XG5cbi8vIENoZWNrcyBhdCBtb3N0IDMgYnl0ZXMgYXQgdGhlIGVuZCBvZiBhIEJ1ZmZlciBpbiBvcmRlciB0byBkZXRlY3QgYW5cbi8vIGluY29tcGxldGUgbXVsdGktYnl0ZSBVVEYtOCBjaGFyYWN0ZXIuIFRoZSB0b3RhbCBudW1iZXIgb2YgYnl0ZXMgKDIsIDMsIG9yIDQpXG4vLyBuZWVkZWQgdG8gY29tcGxldGUgdGhlIFVURi04IGNoYXJhY3RlciAoaWYgYXBwbGljYWJsZSkgYXJlIHJldHVybmVkLlxuZnVuY3Rpb24gdXRmOENoZWNrSW5jb21wbGV0ZShzZWxmLCBidWYsIGkpIHtcbiAgdmFyIGogPSBidWYubGVuZ3RoIC0gMTtcbiAgaWYgKGogPCBpKSByZXR1cm4gMDtcbiAgdmFyIG5iID0gdXRmOENoZWNrQnl0ZShidWZbal0pO1xuICBpZiAobmIgPj0gMCkge1xuICAgIGlmIChuYiA+IDApIHNlbGYubGFzdE5lZWQgPSBuYiAtIDE7XG4gICAgcmV0dXJuIG5iO1xuICB9XG4gIGlmICgtLWogPCBpIHx8IG5iID09PSAtMikgcmV0dXJuIDA7XG4gIG5iID0gdXRmOENoZWNrQnl0ZShidWZbal0pO1xuICBpZiAobmIgPj0gMCkge1xuICAgIGlmIChuYiA+IDApIHNlbGYubGFzdE5lZWQgPSBuYiAtIDI7XG4gICAgcmV0dXJuIG5iO1xuICB9XG4gIGlmICgtLWogPCBpIHx8IG5iID09PSAtMikgcmV0dXJuIDA7XG4gIG5iID0gdXRmOENoZWNrQnl0ZShidWZbal0pO1xuICBpZiAobmIgPj0gMCkge1xuICAgIGlmIChuYiA+IDApIHtcbiAgICAgIGlmIChuYiA9PT0gMikgbmIgPSAwO2Vsc2Ugc2VsZi5sYXN0TmVlZCA9IG5iIC0gMztcbiAgICB9XG4gICAgcmV0dXJuIG5iO1xuICB9XG4gIHJldHVybiAwO1xufVxuXG4vLyBWYWxpZGF0ZXMgYXMgbWFueSBjb250aW51YXRpb24gYnl0ZXMgZm9yIGEgbXVsdGktYnl0ZSBVVEYtOCBjaGFyYWN0ZXIgYXNcbi8vIG5lZWRlZCBvciBhcmUgYXZhaWxhYmxlLiBJZiB3ZSBzZWUgYSBub24tY29udGludWF0aW9uIGJ5dGUgd2hlcmUgd2UgZXhwZWN0XG4vLyBvbmUsIHdlIFwicmVwbGFjZVwiIHRoZSB2YWxpZGF0ZWQgY29udGludWF0aW9uIGJ5dGVzIHdlJ3ZlIHNlZW4gc28gZmFyIHdpdGhcbi8vIGEgc2luZ2xlIFVURi04IHJlcGxhY2VtZW50IGNoYXJhY3RlciAoJ1xcdWZmZmQnKSwgdG8gbWF0Y2ggdjgncyBVVEYtOCBkZWNvZGluZ1xuLy8gYmVoYXZpb3IuIFRoZSBjb250aW51YXRpb24gYnl0ZSBjaGVjayBpcyBpbmNsdWRlZCB0aHJlZSB0aW1lcyBpbiB0aGUgY2FzZVxuLy8gd2hlcmUgYWxsIG9mIHRoZSBjb250aW51YXRpb24gYnl0ZXMgZm9yIGEgY2hhcmFjdGVyIGV4aXN0IGluIHRoZSBzYW1lIGJ1ZmZlci5cbi8vIEl0IGlzIGFsc28gZG9uZSB0aGlzIHdheSBhcyBhIHNsaWdodCBwZXJmb3JtYW5jZSBpbmNyZWFzZSBpbnN0ZWFkIG9mIHVzaW5nIGFcbi8vIGxvb3AuXG5mdW5jdGlvbiB1dGY4Q2hlY2tFeHRyYUJ5dGVzKHNlbGYsIGJ1ZiwgcCkge1xuICBpZiAoKGJ1ZlswXSAmIDB4QzApICE9PSAweDgwKSB7XG4gICAgc2VsZi5sYXN0TmVlZCA9IDA7XG4gICAgcmV0dXJuICdcXHVmZmZkJztcbiAgfVxuICBpZiAoc2VsZi5sYXN0TmVlZCA+IDEgJiYgYnVmLmxlbmd0aCA+IDEpIHtcbiAgICBpZiAoKGJ1ZlsxXSAmIDB4QzApICE9PSAweDgwKSB7XG4gICAgICBzZWxmLmxhc3ROZWVkID0gMTtcbiAgICAgIHJldHVybiAnXFx1ZmZmZCc7XG4gICAgfVxuICAgIGlmIChzZWxmLmxhc3ROZWVkID4gMiAmJiBidWYubGVuZ3RoID4gMikge1xuICAgICAgaWYgKChidWZbMl0gJiAweEMwKSAhPT0gMHg4MCkge1xuICAgICAgICBzZWxmLmxhc3ROZWVkID0gMjtcbiAgICAgICAgcmV0dXJuICdcXHVmZmZkJztcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLy8gQXR0ZW1wdHMgdG8gY29tcGxldGUgYSBtdWx0aS1ieXRlIFVURi04IGNoYXJhY3RlciB1c2luZyBieXRlcyBmcm9tIGEgQnVmZmVyLlxuZnVuY3Rpb24gdXRmOEZpbGxMYXN0KGJ1Zikge1xuICB2YXIgcCA9IHRoaXMubGFzdFRvdGFsIC0gdGhpcy5sYXN0TmVlZDtcbiAgdmFyIHIgPSB1dGY4Q2hlY2tFeHRyYUJ5dGVzKHRoaXMsIGJ1ZiwgcCk7XG4gIGlmIChyICE9PSB1bmRlZmluZWQpIHJldHVybiByO1xuICBpZiAodGhpcy5sYXN0TmVlZCA8PSBidWYubGVuZ3RoKSB7XG4gICAgYnVmLmNvcHkodGhpcy5sYXN0Q2hhciwgcCwgMCwgdGhpcy5sYXN0TmVlZCk7XG4gICAgcmV0dXJuIHRoaXMubGFzdENoYXIudG9TdHJpbmcodGhpcy5lbmNvZGluZywgMCwgdGhpcy5sYXN0VG90YWwpO1xuICB9XG4gIGJ1Zi5jb3B5KHRoaXMubGFzdENoYXIsIHAsIDAsIGJ1Zi5sZW5ndGgpO1xuICB0aGlzLmxhc3ROZWVkIC09IGJ1Zi5sZW5ndGg7XG59XG5cbi8vIFJldHVybnMgYWxsIGNvbXBsZXRlIFVURi04IGNoYXJhY3RlcnMgaW4gYSBCdWZmZXIuIElmIHRoZSBCdWZmZXIgZW5kZWQgb24gYVxuLy8gcGFydGlhbCBjaGFyYWN0ZXIsIHRoZSBjaGFyYWN0ZXIncyBieXRlcyBhcmUgYnVmZmVyZWQgdW50aWwgdGhlIHJlcXVpcmVkXG4vLyBudW1iZXIgb2YgYnl0ZXMgYXJlIGF2YWlsYWJsZS5cbmZ1bmN0aW9uIHV0ZjhUZXh0KGJ1ZiwgaSkge1xuICB2YXIgdG90YWwgPSB1dGY4Q2hlY2tJbmNvbXBsZXRlKHRoaXMsIGJ1ZiwgaSk7XG4gIGlmICghdGhpcy5sYXN0TmVlZCkgcmV0dXJuIGJ1Zi50b1N0cmluZygndXRmOCcsIGkpO1xuICB0aGlzLmxhc3RUb3RhbCA9IHRvdGFsO1xuICB2YXIgZW5kID0gYnVmLmxlbmd0aCAtICh0b3RhbCAtIHRoaXMubGFzdE5lZWQpO1xuICBidWYuY29weSh0aGlzLmxhc3RDaGFyLCAwLCBlbmQpO1xuICByZXR1cm4gYnVmLnRvU3RyaW5nKCd1dGY4JywgaSwgZW5kKTtcbn1cblxuLy8gRm9yIFVURi04LCBhIHJlcGxhY2VtZW50IGNoYXJhY3RlciBpcyBhZGRlZCB3aGVuIGVuZGluZyBvbiBhIHBhcnRpYWxcbi8vIGNoYXJhY3Rlci5cbmZ1bmN0aW9uIHV0ZjhFbmQoYnVmKSB7XG4gIHZhciByID0gYnVmICYmIGJ1Zi5sZW5ndGggPyB0aGlzLndyaXRlKGJ1ZikgOiAnJztcbiAgaWYgKHRoaXMubGFzdE5lZWQpIHJldHVybiByICsgJ1xcdWZmZmQnO1xuICByZXR1cm4gcjtcbn1cblxuLy8gVVRGLTE2TEUgdHlwaWNhbGx5IG5lZWRzIHR3byBieXRlcyBwZXIgY2hhcmFjdGVyLCBidXQgZXZlbiBpZiB3ZSBoYXZlIGFuIGV2ZW5cbi8vIG51bWJlciBvZiBieXRlcyBhdmFpbGFibGUsIHdlIG5lZWQgdG8gY2hlY2sgaWYgd2UgZW5kIG9uIGEgbGVhZGluZy9oaWdoXG4vLyBzdXJyb2dhdGUuIEluIHRoYXQgY2FzZSwgd2UgbmVlZCB0byB3YWl0IGZvciB0aGUgbmV4dCB0d28gYnl0ZXMgaW4gb3JkZXIgdG9cbi8vIGRlY29kZSB0aGUgbGFzdCBjaGFyYWN0ZXIgcHJvcGVybHkuXG5mdW5jdGlvbiB1dGYxNlRleHQoYnVmLCBpKSB7XG4gIGlmICgoYnVmLmxlbmd0aCAtIGkpICUgMiA9PT0gMCkge1xuICAgIHZhciByID0gYnVmLnRvU3RyaW5nKCd1dGYxNmxlJywgaSk7XG4gICAgaWYgKHIpIHtcbiAgICAgIHZhciBjID0gci5jaGFyQ29kZUF0KHIubGVuZ3RoIC0gMSk7XG4gICAgICBpZiAoYyA+PSAweEQ4MDAgJiYgYyA8PSAweERCRkYpIHtcbiAgICAgICAgdGhpcy5sYXN0TmVlZCA9IDI7XG4gICAgICAgIHRoaXMubGFzdFRvdGFsID0gNDtcbiAgICAgICAgdGhpcy5sYXN0Q2hhclswXSA9IGJ1ZltidWYubGVuZ3RoIC0gMl07XG4gICAgICAgIHRoaXMubGFzdENoYXJbMV0gPSBidWZbYnVmLmxlbmd0aCAtIDFdO1xuICAgICAgICByZXR1cm4gci5zbGljZSgwLCAtMSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByO1xuICB9XG4gIHRoaXMubGFzdE5lZWQgPSAxO1xuICB0aGlzLmxhc3RUb3RhbCA9IDI7XG4gIHRoaXMubGFzdENoYXJbMF0gPSBidWZbYnVmLmxlbmd0aCAtIDFdO1xuICByZXR1cm4gYnVmLnRvU3RyaW5nKCd1dGYxNmxlJywgaSwgYnVmLmxlbmd0aCAtIDEpO1xufVxuXG4vLyBGb3IgVVRGLTE2TEUgd2UgZG8gbm90IGV4cGxpY2l0bHkgYXBwZW5kIHNwZWNpYWwgcmVwbGFjZW1lbnQgY2hhcmFjdGVycyBpZiB3ZVxuLy8gZW5kIG9uIGEgcGFydGlhbCBjaGFyYWN0ZXIsIHdlIHNpbXBseSBsZXQgdjggaGFuZGxlIHRoYXQuXG5mdW5jdGlvbiB1dGYxNkVuZChidWYpIHtcbiAgdmFyIHIgPSBidWYgJiYgYnVmLmxlbmd0aCA/IHRoaXMud3JpdGUoYnVmKSA6ICcnO1xuICBpZiAodGhpcy5sYXN0TmVlZCkge1xuICAgIHZhciBlbmQgPSB0aGlzLmxhc3RUb3RhbCAtIHRoaXMubGFzdE5lZWQ7XG4gICAgcmV0dXJuIHIgKyB0aGlzLmxhc3RDaGFyLnRvU3RyaW5nKCd1dGYxNmxlJywgMCwgZW5kKTtcbiAgfVxuICByZXR1cm4gcjtcbn1cblxuZnVuY3Rpb24gYmFzZTY0VGV4dChidWYsIGkpIHtcbiAgdmFyIG4gPSAoYnVmLmxlbmd0aCAtIGkpICUgMztcbiAgaWYgKG4gPT09IDApIHJldHVybiBidWYudG9TdHJpbmcoJ2Jhc2U2NCcsIGkpO1xuICB0aGlzLmxhc3ROZWVkID0gMyAtIG47XG4gIHRoaXMubGFzdFRvdGFsID0gMztcbiAgaWYgKG4gPT09IDEpIHtcbiAgICB0aGlzLmxhc3RDaGFyWzBdID0gYnVmW2J1Zi5sZW5ndGggLSAxXTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLmxhc3RDaGFyWzBdID0gYnVmW2J1Zi5sZW5ndGggLSAyXTtcbiAgICB0aGlzLmxhc3RDaGFyWzFdID0gYnVmW2J1Zi5sZW5ndGggLSAxXTtcbiAgfVxuICByZXR1cm4gYnVmLnRvU3RyaW5nKCdiYXNlNjQnLCBpLCBidWYubGVuZ3RoIC0gbik7XG59XG5cbmZ1bmN0aW9uIGJhc2U2NEVuZChidWYpIHtcbiAgdmFyIHIgPSBidWYgJiYgYnVmLmxlbmd0aCA/IHRoaXMud3JpdGUoYnVmKSA6ICcnO1xuICBpZiAodGhpcy5sYXN0TmVlZCkgcmV0dXJuIHIgKyB0aGlzLmxhc3RDaGFyLnRvU3RyaW5nKCdiYXNlNjQnLCAwLCAzIC0gdGhpcy5sYXN0TmVlZCk7XG4gIHJldHVybiByO1xufVxuXG4vLyBQYXNzIGJ5dGVzIG9uIHRocm91Z2ggZm9yIHNpbmdsZS1ieXRlIGVuY29kaW5ncyAoZS5nLiBhc2NpaSwgbGF0aW4xLCBoZXgpXG5mdW5jdGlvbiBzaW1wbGVXcml0ZShidWYpIHtcbiAgcmV0dXJuIGJ1Zi50b1N0cmluZyh0aGlzLmVuY29kaW5nKTtcbn1cblxuZnVuY3Rpb24gc2ltcGxlRW5kKGJ1Zikge1xuICByZXR1cm4gYnVmICYmIGJ1Zi5sZW5ndGggPyB0aGlzLndyaXRlKGJ1ZikgOiAnJztcbn0iLCJ2YXIgbmV4dFRpY2sgPSByZXF1aXJlKCdwcm9jZXNzL2Jyb3dzZXIuanMnKS5uZXh0VGljaztcbnZhciBhcHBseSA9IEZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseTtcbnZhciBzbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTtcbnZhciBpbW1lZGlhdGVJZHMgPSB7fTtcbnZhciBuZXh0SW1tZWRpYXRlSWQgPSAwO1xuXG4vLyBET00gQVBJcywgZm9yIGNvbXBsZXRlbmVzc1xuXG5leHBvcnRzLnNldFRpbWVvdXQgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0VGltZW91dCwgd2luZG93LCBhcmd1bWVudHMpLCBjbGVhclRpbWVvdXQpO1xufTtcbmV4cG9ydHMuc2V0SW50ZXJ2YWwgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0SW50ZXJ2YWwsIHdpbmRvdywgYXJndW1lbnRzKSwgY2xlYXJJbnRlcnZhbCk7XG59O1xuZXhwb3J0cy5jbGVhclRpbWVvdXQgPVxuZXhwb3J0cy5jbGVhckludGVydmFsID0gZnVuY3Rpb24odGltZW91dCkgeyB0aW1lb3V0LmNsb3NlKCk7IH07XG5cbmZ1bmN0aW9uIFRpbWVvdXQoaWQsIGNsZWFyRm4pIHtcbiAgdGhpcy5faWQgPSBpZDtcbiAgdGhpcy5fY2xlYXJGbiA9IGNsZWFyRm47XG59XG5UaW1lb3V0LnByb3RvdHlwZS51bnJlZiA9IFRpbWVvdXQucHJvdG90eXBlLnJlZiA9IGZ1bmN0aW9uKCkge307XG5UaW1lb3V0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLl9jbGVhckZuLmNhbGwod2luZG93LCB0aGlzLl9pZCk7XG59O1xuXG4vLyBEb2VzIG5vdCBzdGFydCB0aGUgdGltZSwganVzdCBzZXRzIHVwIHRoZSBtZW1iZXJzIG5lZWRlZC5cbmV4cG9ydHMuZW5yb2xsID0gZnVuY3Rpb24oaXRlbSwgbXNlY3MpIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuICBpdGVtLl9pZGxlVGltZW91dCA9IG1zZWNzO1xufTtcblxuZXhwb3J0cy51bmVucm9sbCA9IGZ1bmN0aW9uKGl0ZW0pIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuICBpdGVtLl9pZGxlVGltZW91dCA9IC0xO1xufTtcblxuZXhwb3J0cy5fdW5yZWZBY3RpdmUgPSBleHBvcnRzLmFjdGl2ZSA9IGZ1bmN0aW9uKGl0ZW0pIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuXG4gIHZhciBtc2VjcyA9IGl0ZW0uX2lkbGVUaW1lb3V0O1xuICBpZiAobXNlY3MgPj0gMCkge1xuICAgIGl0ZW0uX2lkbGVUaW1lb3V0SWQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uIG9uVGltZW91dCgpIHtcbiAgICAgIGlmIChpdGVtLl9vblRpbWVvdXQpXG4gICAgICAgIGl0ZW0uX29uVGltZW91dCgpO1xuICAgIH0sIG1zZWNzKTtcbiAgfVxufTtcblxuLy8gVGhhdCdzIG5vdCBob3cgbm9kZS5qcyBpbXBsZW1lbnRzIGl0IGJ1dCB0aGUgZXhwb3NlZCBhcGkgaXMgdGhlIHNhbWUuXG5leHBvcnRzLnNldEltbWVkaWF0ZSA9IHR5cGVvZiBzZXRJbW1lZGlhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHNldEltbWVkaWF0ZSA6IGZ1bmN0aW9uKGZuKSB7XG4gIHZhciBpZCA9IG5leHRJbW1lZGlhdGVJZCsrO1xuICB2YXIgYXJncyA9IGFyZ3VtZW50cy5sZW5ndGggPCAyID8gZmFsc2UgOiBzbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7XG5cbiAgaW1tZWRpYXRlSWRzW2lkXSA9IHRydWU7XG5cbiAgbmV4dFRpY2soZnVuY3Rpb24gb25OZXh0VGljaygpIHtcbiAgICBpZiAoaW1tZWRpYXRlSWRzW2lkXSkge1xuICAgICAgLy8gZm4uY2FsbCgpIGlzIGZhc3RlciBzbyB3ZSBvcHRpbWl6ZSBmb3IgdGhlIGNvbW1vbiB1c2UtY2FzZVxuICAgICAgLy8gQHNlZSBodHRwOi8vanNwZXJmLmNvbS9jYWxsLWFwcGx5LXNlZ3VcbiAgICAgIGlmIChhcmdzKSB7XG4gICAgICAgIGZuLmFwcGx5KG51bGwsIGFyZ3MpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZm4uY2FsbChudWxsKTtcbiAgICAgIH1cbiAgICAgIC8vIFByZXZlbnQgaWRzIGZyb20gbGVha2luZ1xuICAgICAgZXhwb3J0cy5jbGVhckltbWVkaWF0ZShpZCk7XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gaWQ7XG59O1xuXG5leHBvcnRzLmNsZWFySW1tZWRpYXRlID0gdHlwZW9mIGNsZWFySW1tZWRpYXRlID09PSBcImZ1bmN0aW9uXCIgPyBjbGVhckltbWVkaWF0ZSA6IGZ1bmN0aW9uKGlkKSB7XG4gIGRlbGV0ZSBpbW1lZGlhdGVJZHNbaWRdO1xufTsiLCJcbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBkZXByZWNhdGU7XG5cbi8qKlxuICogTWFyayB0aGF0IGEgbWV0aG9kIHNob3VsZCBub3QgYmUgdXNlZC5cbiAqIFJldHVybnMgYSBtb2RpZmllZCBmdW5jdGlvbiB3aGljaCB3YXJucyBvbmNlIGJ5IGRlZmF1bHQuXG4gKlxuICogSWYgYGxvY2FsU3RvcmFnZS5ub0RlcHJlY2F0aW9uID0gdHJ1ZWAgaXMgc2V0LCB0aGVuIGl0IGlzIGEgbm8tb3AuXG4gKlxuICogSWYgYGxvY2FsU3RvcmFnZS50aHJvd0RlcHJlY2F0aW9uID0gdHJ1ZWAgaXMgc2V0LCB0aGVuIGRlcHJlY2F0ZWQgZnVuY3Rpb25zXG4gKiB3aWxsIHRocm93IGFuIEVycm9yIHdoZW4gaW52b2tlZC5cbiAqXG4gKiBJZiBgbG9jYWxTdG9yYWdlLnRyYWNlRGVwcmVjYXRpb24gPSB0cnVlYCBpcyBzZXQsIHRoZW4gZGVwcmVjYXRlZCBmdW5jdGlvbnNcbiAqIHdpbGwgaW52b2tlIGBjb25zb2xlLnRyYWNlKClgIGluc3RlYWQgb2YgYGNvbnNvbGUuZXJyb3IoKWAuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gLSB0aGUgZnVuY3Rpb24gdG8gZGVwcmVjYXRlXG4gKiBAcGFyYW0ge1N0cmluZ30gbXNnIC0gdGhlIHN0cmluZyB0byBwcmludCB0byB0aGUgY29uc29sZSB3aGVuIGBmbmAgaXMgaW52b2tlZFxuICogQHJldHVybnMge0Z1bmN0aW9ufSBhIG5ldyBcImRlcHJlY2F0ZWRcIiB2ZXJzaW9uIG9mIGBmbmBcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZGVwcmVjYXRlIChmbiwgbXNnKSB7XG4gIGlmIChjb25maWcoJ25vRGVwcmVjYXRpb24nKSkge1xuICAgIHJldHVybiBmbjtcbiAgfVxuXG4gIHZhciB3YXJuZWQgPSBmYWxzZTtcbiAgZnVuY3Rpb24gZGVwcmVjYXRlZCgpIHtcbiAgICBpZiAoIXdhcm5lZCkge1xuICAgICAgaWYgKGNvbmZpZygndGhyb3dEZXByZWNhdGlvbicpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtc2cpO1xuICAgICAgfSBlbHNlIGlmIChjb25maWcoJ3RyYWNlRGVwcmVjYXRpb24nKSkge1xuICAgICAgICBjb25zb2xlLnRyYWNlKG1zZyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLndhcm4obXNnKTtcbiAgICAgIH1cbiAgICAgIHdhcm5lZCA9IHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9XG5cbiAgcmV0dXJuIGRlcHJlY2F0ZWQ7XG59XG5cbi8qKlxuICogQ2hlY2tzIGBsb2NhbFN0b3JhZ2VgIGZvciBib29sZWFuIHZhbHVlcyBmb3IgdGhlIGdpdmVuIGBuYW1lYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxuICogQHJldHVybnMge0Jvb2xlYW59XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBjb25maWcgKG5hbWUpIHtcbiAgLy8gYWNjZXNzaW5nIGdsb2JhbC5sb2NhbFN0b3JhZ2UgY2FuIHRyaWdnZXIgYSBET01FeGNlcHRpb24gaW4gc2FuZGJveGVkIGlmcmFtZXNcbiAgdHJ5IHtcbiAgICBpZiAoIWdsb2JhbC5sb2NhbFN0b3JhZ2UpIHJldHVybiBmYWxzZTtcbiAgfSBjYXRjaCAoXykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB2YXIgdmFsID0gZ2xvYmFsLmxvY2FsU3RvcmFnZVtuYW1lXTtcbiAgaWYgKG51bGwgPT0gdmFsKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiBTdHJpbmcodmFsKS50b0xvd2VyQ2FzZSgpID09PSAndHJ1ZSc7XG59XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQnVmZmVyKGFyZykge1xuICByZXR1cm4gYXJnICYmIHR5cGVvZiBhcmcgPT09ICdvYmplY3QnXG4gICAgJiYgdHlwZW9mIGFyZy5jb3B5ID09PSAnZnVuY3Rpb24nXG4gICAgJiYgdHlwZW9mIGFyZy5maWxsID09PSAnZnVuY3Rpb24nXG4gICAgJiYgdHlwZW9mIGFyZy5yZWFkVUludDggPT09ICdmdW5jdGlvbic7XG59IiwiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbnZhciBmb3JtYXRSZWdFeHAgPSAvJVtzZGolXS9nO1xuZXhwb3J0cy5mb3JtYXQgPSBmdW5jdGlvbihmKSB7XG4gIGlmICghaXNTdHJpbmcoZikpIHtcbiAgICB2YXIgb2JqZWN0cyA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBvYmplY3RzLnB1c2goaW5zcGVjdChhcmd1bWVudHNbaV0pKTtcbiAgICB9XG4gICAgcmV0dXJuIG9iamVjdHMuam9pbignICcpO1xuICB9XG5cbiAgdmFyIGkgPSAxO1xuICB2YXIgYXJncyA9IGFyZ3VtZW50cztcbiAgdmFyIGxlbiA9IGFyZ3MubGVuZ3RoO1xuICB2YXIgc3RyID0gU3RyaW5nKGYpLnJlcGxhY2UoZm9ybWF0UmVnRXhwLCBmdW5jdGlvbih4KSB7XG4gICAgaWYgKHggPT09ICclJScpIHJldHVybiAnJSc7XG4gICAgaWYgKGkgPj0gbGVuKSByZXR1cm4geDtcbiAgICBzd2l0Y2ggKHgpIHtcbiAgICAgIGNhc2UgJyVzJzogcmV0dXJuIFN0cmluZyhhcmdzW2krK10pO1xuICAgICAgY2FzZSAnJWQnOiByZXR1cm4gTnVtYmVyKGFyZ3NbaSsrXSk7XG4gICAgICBjYXNlICclaic6XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGFyZ3NbaSsrXSk7XG4gICAgICAgIH0gY2F0Y2ggKF8pIHtcbiAgICAgICAgICByZXR1cm4gJ1tDaXJjdWxhcl0nO1xuICAgICAgICB9XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4geDtcbiAgICB9XG4gIH0pO1xuICBmb3IgKHZhciB4ID0gYXJnc1tpXTsgaSA8IGxlbjsgeCA9IGFyZ3NbKytpXSkge1xuICAgIGlmIChpc051bGwoeCkgfHwgIWlzT2JqZWN0KHgpKSB7XG4gICAgICBzdHIgKz0gJyAnICsgeDtcbiAgICB9IGVsc2Uge1xuICAgICAgc3RyICs9ICcgJyArIGluc3BlY3QoeCk7XG4gICAgfVxuICB9XG4gIHJldHVybiBzdHI7XG59O1xuXG5cbi8vIE1hcmsgdGhhdCBhIG1ldGhvZCBzaG91bGQgbm90IGJlIHVzZWQuXG4vLyBSZXR1cm5zIGEgbW9kaWZpZWQgZnVuY3Rpb24gd2hpY2ggd2FybnMgb25jZSBieSBkZWZhdWx0LlxuLy8gSWYgLS1uby1kZXByZWNhdGlvbiBpcyBzZXQsIHRoZW4gaXQgaXMgYSBuby1vcC5cbmV4cG9ydHMuZGVwcmVjYXRlID0gZnVuY3Rpb24oZm4sIG1zZykge1xuICAvLyBBbGxvdyBmb3IgZGVwcmVjYXRpbmcgdGhpbmdzIGluIHRoZSBwcm9jZXNzIG9mIHN0YXJ0aW5nIHVwLlxuICBpZiAoaXNVbmRlZmluZWQoZ2xvYmFsLnByb2Nlc3MpKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGV4cG9ydHMuZGVwcmVjYXRlKGZuLCBtc2cpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfTtcbiAgfVxuXG4gIGlmIChwcm9jZXNzLm5vRGVwcmVjYXRpb24gPT09IHRydWUpIHtcbiAgICByZXR1cm4gZm47XG4gIH1cblxuICB2YXIgd2FybmVkID0gZmFsc2U7XG4gIGZ1bmN0aW9uIGRlcHJlY2F0ZWQoKSB7XG4gICAgaWYgKCF3YXJuZWQpIHtcbiAgICAgIGlmIChwcm9jZXNzLnRocm93RGVwcmVjYXRpb24pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1zZyk7XG4gICAgICB9IGVsc2UgaWYgKHByb2Nlc3MudHJhY2VEZXByZWNhdGlvbikge1xuICAgICAgICBjb25zb2xlLnRyYWNlKG1zZyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmVycm9yKG1zZyk7XG4gICAgICB9XG4gICAgICB3YXJuZWQgPSB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZm4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfVxuXG4gIHJldHVybiBkZXByZWNhdGVkO1xufTtcblxuXG52YXIgZGVidWdzID0ge307XG52YXIgZGVidWdFbnZpcm9uO1xuZXhwb3J0cy5kZWJ1Z2xvZyA9IGZ1bmN0aW9uKHNldCkge1xuICBpZiAoaXNVbmRlZmluZWQoZGVidWdFbnZpcm9uKSlcbiAgICBkZWJ1Z0Vudmlyb24gPSBwcm9jZXNzLmVudi5OT0RFX0RFQlVHIHx8ICcnO1xuICBzZXQgPSBzZXQudG9VcHBlckNhc2UoKTtcbiAgaWYgKCFkZWJ1Z3Nbc2V0XSkge1xuICAgIGlmIChuZXcgUmVnRXhwKCdcXFxcYicgKyBzZXQgKyAnXFxcXGInLCAnaScpLnRlc3QoZGVidWdFbnZpcm9uKSkge1xuICAgICAgdmFyIHBpZCA9IHByb2Nlc3MucGlkO1xuICAgICAgZGVidWdzW3NldF0gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIG1zZyA9IGV4cG9ydHMuZm9ybWF0LmFwcGx5KGV4cG9ydHMsIGFyZ3VtZW50cyk7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJyVzICVkOiAlcycsIHNldCwgcGlkLCBtc2cpO1xuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgZGVidWdzW3NldF0gPSBmdW5jdGlvbigpIHt9O1xuICAgIH1cbiAgfVxuICByZXR1cm4gZGVidWdzW3NldF07XG59O1xuXG5cbi8qKlxuICogRWNob3MgdGhlIHZhbHVlIG9mIGEgdmFsdWUuIFRyeXMgdG8gcHJpbnQgdGhlIHZhbHVlIG91dFxuICogaW4gdGhlIGJlc3Qgd2F5IHBvc3NpYmxlIGdpdmVuIHRoZSBkaWZmZXJlbnQgdHlwZXMuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9iaiBUaGUgb2JqZWN0IHRvIHByaW50IG91dC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRzIE9wdGlvbmFsIG9wdGlvbnMgb2JqZWN0IHRoYXQgYWx0ZXJzIHRoZSBvdXRwdXQuXG4gKi9cbi8qIGxlZ2FjeTogb2JqLCBzaG93SGlkZGVuLCBkZXB0aCwgY29sb3JzKi9cbmZ1bmN0aW9uIGluc3BlY3Qob2JqLCBvcHRzKSB7XG4gIC8vIGRlZmF1bHQgb3B0aW9uc1xuICB2YXIgY3R4ID0ge1xuICAgIHNlZW46IFtdLFxuICAgIHN0eWxpemU6IHN0eWxpemVOb0NvbG9yXG4gIH07XG4gIC8vIGxlZ2FjeS4uLlxuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+PSAzKSBjdHguZGVwdGggPSBhcmd1bWVudHNbMl07XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID49IDQpIGN0eC5jb2xvcnMgPSBhcmd1bWVudHNbM107XG4gIGlmIChpc0Jvb2xlYW4ob3B0cykpIHtcbiAgICAvLyBsZWdhY3kuLi5cbiAgICBjdHguc2hvd0hpZGRlbiA9IG9wdHM7XG4gIH0gZWxzZSBpZiAob3B0cykge1xuICAgIC8vIGdvdCBhbiBcIm9wdGlvbnNcIiBvYmplY3RcbiAgICBleHBvcnRzLl9leHRlbmQoY3R4LCBvcHRzKTtcbiAgfVxuICAvLyBzZXQgZGVmYXVsdCBvcHRpb25zXG4gIGlmIChpc1VuZGVmaW5lZChjdHguc2hvd0hpZGRlbikpIGN0eC5zaG93SGlkZGVuID0gZmFsc2U7XG4gIGlmIChpc1VuZGVmaW5lZChjdHguZGVwdGgpKSBjdHguZGVwdGggPSAyO1xuICBpZiAoaXNVbmRlZmluZWQoY3R4LmNvbG9ycykpIGN0eC5jb2xvcnMgPSBmYWxzZTtcbiAgaWYgKGlzVW5kZWZpbmVkKGN0eC5jdXN0b21JbnNwZWN0KSkgY3R4LmN1c3RvbUluc3BlY3QgPSB0cnVlO1xuICBpZiAoY3R4LmNvbG9ycykgY3R4LnN0eWxpemUgPSBzdHlsaXplV2l0aENvbG9yO1xuICByZXR1cm4gZm9ybWF0VmFsdWUoY3R4LCBvYmosIGN0eC5kZXB0aCk7XG59XG5leHBvcnRzLmluc3BlY3QgPSBpbnNwZWN0O1xuXG5cbi8vIGh0dHA6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQU5TSV9lc2NhcGVfY29kZSNncmFwaGljc1xuaW5zcGVjdC5jb2xvcnMgPSB7XG4gICdib2xkJyA6IFsxLCAyMl0sXG4gICdpdGFsaWMnIDogWzMsIDIzXSxcbiAgJ3VuZGVybGluZScgOiBbNCwgMjRdLFxuICAnaW52ZXJzZScgOiBbNywgMjddLFxuICAnd2hpdGUnIDogWzM3LCAzOV0sXG4gICdncmV5JyA6IFs5MCwgMzldLFxuICAnYmxhY2snIDogWzMwLCAzOV0sXG4gICdibHVlJyA6IFszNCwgMzldLFxuICAnY3lhbicgOiBbMzYsIDM5XSxcbiAgJ2dyZWVuJyA6IFszMiwgMzldLFxuICAnbWFnZW50YScgOiBbMzUsIDM5XSxcbiAgJ3JlZCcgOiBbMzEsIDM5XSxcbiAgJ3llbGxvdycgOiBbMzMsIDM5XVxufTtcblxuLy8gRG9uJ3QgdXNlICdibHVlJyBub3QgdmlzaWJsZSBvbiBjbWQuZXhlXG5pbnNwZWN0LnN0eWxlcyA9IHtcbiAgJ3NwZWNpYWwnOiAnY3lhbicsXG4gICdudW1iZXInOiAneWVsbG93JyxcbiAgJ2Jvb2xlYW4nOiAneWVsbG93JyxcbiAgJ3VuZGVmaW5lZCc6ICdncmV5JyxcbiAgJ251bGwnOiAnYm9sZCcsXG4gICdzdHJpbmcnOiAnZ3JlZW4nLFxuICAnZGF0ZSc6ICdtYWdlbnRhJyxcbiAgLy8gXCJuYW1lXCI6IGludGVudGlvbmFsbHkgbm90IHN0eWxpbmdcbiAgJ3JlZ2V4cCc6ICdyZWQnXG59O1xuXG5cbmZ1bmN0aW9uIHN0eWxpemVXaXRoQ29sb3Ioc3RyLCBzdHlsZVR5cGUpIHtcbiAgdmFyIHN0eWxlID0gaW5zcGVjdC5zdHlsZXNbc3R5bGVUeXBlXTtcblxuICBpZiAoc3R5bGUpIHtcbiAgICByZXR1cm4gJ1xcdTAwMWJbJyArIGluc3BlY3QuY29sb3JzW3N0eWxlXVswXSArICdtJyArIHN0ciArXG4gICAgICAgICAgICdcXHUwMDFiWycgKyBpbnNwZWN0LmNvbG9yc1tzdHlsZV1bMV0gKyAnbSc7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHN0cjtcbiAgfVxufVxuXG5cbmZ1bmN0aW9uIHN0eWxpemVOb0NvbG9yKHN0ciwgc3R5bGVUeXBlKSB7XG4gIHJldHVybiBzdHI7XG59XG5cblxuZnVuY3Rpb24gYXJyYXlUb0hhc2goYXJyYXkpIHtcbiAgdmFyIGhhc2ggPSB7fTtcblxuICBhcnJheS5mb3JFYWNoKGZ1bmN0aW9uKHZhbCwgaWR4KSB7XG4gICAgaGFzaFt2YWxdID0gdHJ1ZTtcbiAgfSk7XG5cbiAgcmV0dXJuIGhhc2g7XG59XG5cblxuZnVuY3Rpb24gZm9ybWF0VmFsdWUoY3R4LCB2YWx1ZSwgcmVjdXJzZVRpbWVzKSB7XG4gIC8vIFByb3ZpZGUgYSBob29rIGZvciB1c2VyLXNwZWNpZmllZCBpbnNwZWN0IGZ1bmN0aW9ucy5cbiAgLy8gQ2hlY2sgdGhhdCB2YWx1ZSBpcyBhbiBvYmplY3Qgd2l0aCBhbiBpbnNwZWN0IGZ1bmN0aW9uIG9uIGl0XG4gIGlmIChjdHguY3VzdG9tSW5zcGVjdCAmJlxuICAgICAgdmFsdWUgJiZcbiAgICAgIGlzRnVuY3Rpb24odmFsdWUuaW5zcGVjdCkgJiZcbiAgICAgIC8vIEZpbHRlciBvdXQgdGhlIHV0aWwgbW9kdWxlLCBpdCdzIGluc3BlY3QgZnVuY3Rpb24gaXMgc3BlY2lhbFxuICAgICAgdmFsdWUuaW5zcGVjdCAhPT0gZXhwb3J0cy5pbnNwZWN0ICYmXG4gICAgICAvLyBBbHNvIGZpbHRlciBvdXQgYW55IHByb3RvdHlwZSBvYmplY3RzIHVzaW5nIHRoZSBjaXJjdWxhciBjaGVjay5cbiAgICAgICEodmFsdWUuY29uc3RydWN0b3IgJiYgdmFsdWUuY29uc3RydWN0b3IucHJvdG90eXBlID09PSB2YWx1ZSkpIHtcbiAgICB2YXIgcmV0ID0gdmFsdWUuaW5zcGVjdChyZWN1cnNlVGltZXMsIGN0eCk7XG4gICAgaWYgKCFpc1N0cmluZyhyZXQpKSB7XG4gICAgICByZXQgPSBmb3JtYXRWYWx1ZShjdHgsIHJldCwgcmVjdXJzZVRpbWVzKTtcbiAgICB9XG4gICAgcmV0dXJuIHJldDtcbiAgfVxuXG4gIC8vIFByaW1pdGl2ZSB0eXBlcyBjYW5ub3QgaGF2ZSBwcm9wZXJ0aWVzXG4gIHZhciBwcmltaXRpdmUgPSBmb3JtYXRQcmltaXRpdmUoY3R4LCB2YWx1ZSk7XG4gIGlmIChwcmltaXRpdmUpIHtcbiAgICByZXR1cm4gcHJpbWl0aXZlO1xuICB9XG5cbiAgLy8gTG9vayB1cCB0aGUga2V5cyBvZiB0aGUgb2JqZWN0LlxuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHZhbHVlKTtcbiAgdmFyIHZpc2libGVLZXlzID0gYXJyYXlUb0hhc2goa2V5cyk7XG5cbiAgaWYgKGN0eC5zaG93SGlkZGVuKSB7XG4gICAga2V5cyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHZhbHVlKTtcbiAgfVxuXG4gIC8vIElFIGRvZXNuJ3QgbWFrZSBlcnJvciBmaWVsZHMgbm9uLWVudW1lcmFibGVcbiAgLy8gaHR0cDovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2llL2R3dzUyc2J0KHY9dnMuOTQpLmFzcHhcbiAgaWYgKGlzRXJyb3IodmFsdWUpXG4gICAgICAmJiAoa2V5cy5pbmRleE9mKCdtZXNzYWdlJykgPj0gMCB8fCBrZXlzLmluZGV4T2YoJ2Rlc2NyaXB0aW9uJykgPj0gMCkpIHtcbiAgICByZXR1cm4gZm9ybWF0RXJyb3IodmFsdWUpO1xuICB9XG5cbiAgLy8gU29tZSB0eXBlIG9mIG9iamVjdCB3aXRob3V0IHByb3BlcnRpZXMgY2FuIGJlIHNob3J0Y3V0dGVkLlxuICBpZiAoa2V5cy5sZW5ndGggPT09IDApIHtcbiAgICBpZiAoaXNGdW5jdGlvbih2YWx1ZSkpIHtcbiAgICAgIHZhciBuYW1lID0gdmFsdWUubmFtZSA/ICc6ICcgKyB2YWx1ZS5uYW1lIDogJyc7XG4gICAgICByZXR1cm4gY3R4LnN0eWxpemUoJ1tGdW5jdGlvbicgKyBuYW1lICsgJ10nLCAnc3BlY2lhbCcpO1xuICAgIH1cbiAgICBpZiAoaXNSZWdFeHAodmFsdWUpKSB7XG4gICAgICByZXR1cm4gY3R4LnN0eWxpemUoUmVnRXhwLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKSwgJ3JlZ2V4cCcpO1xuICAgIH1cbiAgICBpZiAoaXNEYXRlKHZhbHVlKSkge1xuICAgICAgcmV0dXJuIGN0eC5zdHlsaXplKERhdGUucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpLCAnZGF0ZScpO1xuICAgIH1cbiAgICBpZiAoaXNFcnJvcih2YWx1ZSkpIHtcbiAgICAgIHJldHVybiBmb3JtYXRFcnJvcih2YWx1ZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGJhc2UgPSAnJywgYXJyYXkgPSBmYWxzZSwgYnJhY2VzID0gWyd7JywgJ30nXTtcblxuICAvLyBNYWtlIEFycmF5IHNheSB0aGF0IHRoZXkgYXJlIEFycmF5XG4gIGlmIChpc0FycmF5KHZhbHVlKSkge1xuICAgIGFycmF5ID0gdHJ1ZTtcbiAgICBicmFjZXMgPSBbJ1snLCAnXSddO1xuICB9XG5cbiAgLy8gTWFrZSBmdW5jdGlvbnMgc2F5IHRoYXQgdGhleSBhcmUgZnVuY3Rpb25zXG4gIGlmIChpc0Z1bmN0aW9uKHZhbHVlKSkge1xuICAgIHZhciBuID0gdmFsdWUubmFtZSA/ICc6ICcgKyB2YWx1ZS5uYW1lIDogJyc7XG4gICAgYmFzZSA9ICcgW0Z1bmN0aW9uJyArIG4gKyAnXSc7XG4gIH1cblxuICAvLyBNYWtlIFJlZ0V4cHMgc2F5IHRoYXQgdGhleSBhcmUgUmVnRXhwc1xuICBpZiAoaXNSZWdFeHAodmFsdWUpKSB7XG4gICAgYmFzZSA9ICcgJyArIFJlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSk7XG4gIH1cblxuICAvLyBNYWtlIGRhdGVzIHdpdGggcHJvcGVydGllcyBmaXJzdCBzYXkgdGhlIGRhdGVcbiAgaWYgKGlzRGF0ZSh2YWx1ZSkpIHtcbiAgICBiYXNlID0gJyAnICsgRGF0ZS5wcm90b3R5cGUudG9VVENTdHJpbmcuY2FsbCh2YWx1ZSk7XG4gIH1cblxuICAvLyBNYWtlIGVycm9yIHdpdGggbWVzc2FnZSBmaXJzdCBzYXkgdGhlIGVycm9yXG4gIGlmIChpc0Vycm9yKHZhbHVlKSkge1xuICAgIGJhc2UgPSAnICcgKyBmb3JtYXRFcnJvcih2YWx1ZSk7XG4gIH1cblxuICBpZiAoa2V5cy5sZW5ndGggPT09IDAgJiYgKCFhcnJheSB8fCB2YWx1ZS5sZW5ndGggPT0gMCkpIHtcbiAgICByZXR1cm4gYnJhY2VzWzBdICsgYmFzZSArIGJyYWNlc1sxXTtcbiAgfVxuXG4gIGlmIChyZWN1cnNlVGltZXMgPCAwKSB7XG4gICAgaWYgKGlzUmVnRXhwKHZhbHVlKSkge1xuICAgICAgcmV0dXJuIGN0eC5zdHlsaXplKFJlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSksICdyZWdleHAnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGN0eC5zdHlsaXplKCdbT2JqZWN0XScsICdzcGVjaWFsJyk7XG4gICAgfVxuICB9XG5cbiAgY3R4LnNlZW4ucHVzaCh2YWx1ZSk7XG5cbiAgdmFyIG91dHB1dDtcbiAgaWYgKGFycmF5KSB7XG4gICAgb3V0cHV0ID0gZm9ybWF0QXJyYXkoY3R4LCB2YWx1ZSwgcmVjdXJzZVRpbWVzLCB2aXNpYmxlS2V5cywga2V5cyk7XG4gIH0gZWxzZSB7XG4gICAgb3V0cHV0ID0ga2V5cy5tYXAoZnVuY3Rpb24oa2V5KSB7XG4gICAgICByZXR1cm4gZm9ybWF0UHJvcGVydHkoY3R4LCB2YWx1ZSwgcmVjdXJzZVRpbWVzLCB2aXNpYmxlS2V5cywga2V5LCBhcnJheSk7XG4gICAgfSk7XG4gIH1cblxuICBjdHguc2Vlbi5wb3AoKTtcblxuICByZXR1cm4gcmVkdWNlVG9TaW5nbGVTdHJpbmcob3V0cHV0LCBiYXNlLCBicmFjZXMpO1xufVxuXG5cbmZ1bmN0aW9uIGZvcm1hdFByaW1pdGl2ZShjdHgsIHZhbHVlKSB7XG4gIGlmIChpc1VuZGVmaW5lZCh2YWx1ZSkpXG4gICAgcmV0dXJuIGN0eC5zdHlsaXplKCd1bmRlZmluZWQnLCAndW5kZWZpbmVkJyk7XG4gIGlmIChpc1N0cmluZyh2YWx1ZSkpIHtcbiAgICB2YXIgc2ltcGxlID0gJ1xcJycgKyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkucmVwbGFjZSgvXlwifFwiJC9nLCAnJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC8nL2csIFwiXFxcXCdcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9cXFxcXCIvZywgJ1wiJykgKyAnXFwnJztcbiAgICByZXR1cm4gY3R4LnN0eWxpemUoc2ltcGxlLCAnc3RyaW5nJyk7XG4gIH1cbiAgaWYgKGlzTnVtYmVyKHZhbHVlKSlcbiAgICByZXR1cm4gY3R4LnN0eWxpemUoJycgKyB2YWx1ZSwgJ251bWJlcicpO1xuICBpZiAoaXNCb29sZWFuKHZhbHVlKSlcbiAgICByZXR1cm4gY3R4LnN0eWxpemUoJycgKyB2YWx1ZSwgJ2Jvb2xlYW4nKTtcbiAgLy8gRm9yIHNvbWUgcmVhc29uIHR5cGVvZiBudWxsIGlzIFwib2JqZWN0XCIsIHNvIHNwZWNpYWwgY2FzZSBoZXJlLlxuICBpZiAoaXNOdWxsKHZhbHVlKSlcbiAgICByZXR1cm4gY3R4LnN0eWxpemUoJ251bGwnLCAnbnVsbCcpO1xufVxuXG5cbmZ1bmN0aW9uIGZvcm1hdEVycm9yKHZhbHVlKSB7XG4gIHJldHVybiAnWycgKyBFcnJvci5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSkgKyAnXSc7XG59XG5cblxuZnVuY3Rpb24gZm9ybWF0QXJyYXkoY3R4LCB2YWx1ZSwgcmVjdXJzZVRpbWVzLCB2aXNpYmxlS2V5cywga2V5cykge1xuICB2YXIgb3V0cHV0ID0gW107XG4gIGZvciAodmFyIGkgPSAwLCBsID0gdmFsdWUubGVuZ3RoOyBpIDwgbDsgKytpKSB7XG4gICAgaWYgKGhhc093blByb3BlcnR5KHZhbHVlLCBTdHJpbmcoaSkpKSB7XG4gICAgICBvdXRwdXQucHVzaChmb3JtYXRQcm9wZXJ0eShjdHgsIHZhbHVlLCByZWN1cnNlVGltZXMsIHZpc2libGVLZXlzLFxuICAgICAgICAgIFN0cmluZyhpKSwgdHJ1ZSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICBvdXRwdXQucHVzaCgnJyk7XG4gICAgfVxuICB9XG4gIGtleXMuZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcbiAgICBpZiAoIWtleS5tYXRjaCgvXlxcZCskLykpIHtcbiAgICAgIG91dHB1dC5wdXNoKGZvcm1hdFByb3BlcnR5KGN0eCwgdmFsdWUsIHJlY3Vyc2VUaW1lcywgdmlzaWJsZUtleXMsXG4gICAgICAgICAga2V5LCB0cnVlKSk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIG91dHB1dDtcbn1cblxuXG5mdW5jdGlvbiBmb3JtYXRQcm9wZXJ0eShjdHgsIHZhbHVlLCByZWN1cnNlVGltZXMsIHZpc2libGVLZXlzLCBrZXksIGFycmF5KSB7XG4gIHZhciBuYW1lLCBzdHIsIGRlc2M7XG4gIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHZhbHVlLCBrZXkpIHx8IHsgdmFsdWU6IHZhbHVlW2tleV0gfTtcbiAgaWYgKGRlc2MuZ2V0KSB7XG4gICAgaWYgKGRlc2Muc2V0KSB7XG4gICAgICBzdHIgPSBjdHguc3R5bGl6ZSgnW0dldHRlci9TZXR0ZXJdJywgJ3NwZWNpYWwnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3RyID0gY3R4LnN0eWxpemUoJ1tHZXR0ZXJdJywgJ3NwZWNpYWwnKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaWYgKGRlc2Muc2V0KSB7XG4gICAgICBzdHIgPSBjdHguc3R5bGl6ZSgnW1NldHRlcl0nLCAnc3BlY2lhbCcpO1xuICAgIH1cbiAgfVxuICBpZiAoIWhhc093blByb3BlcnR5KHZpc2libGVLZXlzLCBrZXkpKSB7XG4gICAgbmFtZSA9ICdbJyArIGtleSArICddJztcbiAgfVxuICBpZiAoIXN0cikge1xuICAgIGlmIChjdHguc2Vlbi5pbmRleE9mKGRlc2MudmFsdWUpIDwgMCkge1xuICAgICAgaWYgKGlzTnVsbChyZWN1cnNlVGltZXMpKSB7XG4gICAgICAgIHN0ciA9IGZvcm1hdFZhbHVlKGN0eCwgZGVzYy52YWx1ZSwgbnVsbCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzdHIgPSBmb3JtYXRWYWx1ZShjdHgsIGRlc2MudmFsdWUsIHJlY3Vyc2VUaW1lcyAtIDEpO1xuICAgICAgfVxuICAgICAgaWYgKHN0ci5pbmRleE9mKCdcXG4nKSA+IC0xKSB7XG4gICAgICAgIGlmIChhcnJheSkge1xuICAgICAgICAgIHN0ciA9IHN0ci5zcGxpdCgnXFxuJykubWFwKGZ1bmN0aW9uKGxpbmUpIHtcbiAgICAgICAgICAgIHJldHVybiAnICAnICsgbGluZTtcbiAgICAgICAgICB9KS5qb2luKCdcXG4nKS5zdWJzdHIoMik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3RyID0gJ1xcbicgKyBzdHIuc3BsaXQoJ1xcbicpLm1hcChmdW5jdGlvbihsaW5lKSB7XG4gICAgICAgICAgICByZXR1cm4gJyAgICcgKyBsaW5lO1xuICAgICAgICAgIH0pLmpvaW4oJ1xcbicpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0ciA9IGN0eC5zdHlsaXplKCdbQ2lyY3VsYXJdJywgJ3NwZWNpYWwnKTtcbiAgICB9XG4gIH1cbiAgaWYgKGlzVW5kZWZpbmVkKG5hbWUpKSB7XG4gICAgaWYgKGFycmF5ICYmIGtleS5tYXRjaCgvXlxcZCskLykpIHtcbiAgICAgIHJldHVybiBzdHI7XG4gICAgfVxuICAgIG5hbWUgPSBKU09OLnN0cmluZ2lmeSgnJyArIGtleSk7XG4gICAgaWYgKG5hbWUubWF0Y2goL15cIihbYS16QS1aX11bYS16QS1aXzAtOV0qKVwiJC8pKSB7XG4gICAgICBuYW1lID0gbmFtZS5zdWJzdHIoMSwgbmFtZS5sZW5ndGggLSAyKTtcbiAgICAgIG5hbWUgPSBjdHguc3R5bGl6ZShuYW1lLCAnbmFtZScpO1xuICAgIH0gZWxzZSB7XG4gICAgICBuYW1lID0gbmFtZS5yZXBsYWNlKC8nL2csIFwiXFxcXCdcIilcbiAgICAgICAgICAgICAgICAgLnJlcGxhY2UoL1xcXFxcIi9nLCAnXCInKVxuICAgICAgICAgICAgICAgICAucmVwbGFjZSgvKF5cInxcIiQpL2csIFwiJ1wiKTtcbiAgICAgIG5hbWUgPSBjdHguc3R5bGl6ZShuYW1lLCAnc3RyaW5nJyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5hbWUgKyAnOiAnICsgc3RyO1xufVxuXG5cbmZ1bmN0aW9uIHJlZHVjZVRvU2luZ2xlU3RyaW5nKG91dHB1dCwgYmFzZSwgYnJhY2VzKSB7XG4gIHZhciBudW1MaW5lc0VzdCA9IDA7XG4gIHZhciBsZW5ndGggPSBvdXRwdXQucmVkdWNlKGZ1bmN0aW9uKHByZXYsIGN1cikge1xuICAgIG51bUxpbmVzRXN0Kys7XG4gICAgaWYgKGN1ci5pbmRleE9mKCdcXG4nKSA+PSAwKSBudW1MaW5lc0VzdCsrO1xuICAgIHJldHVybiBwcmV2ICsgY3VyLnJlcGxhY2UoL1xcdTAwMWJcXFtcXGRcXGQ/bS9nLCAnJykubGVuZ3RoICsgMTtcbiAgfSwgMCk7XG5cbiAgaWYgKGxlbmd0aCA+IDYwKSB7XG4gICAgcmV0dXJuIGJyYWNlc1swXSArXG4gICAgICAgICAgIChiYXNlID09PSAnJyA/ICcnIDogYmFzZSArICdcXG4gJykgK1xuICAgICAgICAgICAnICcgK1xuICAgICAgICAgICBvdXRwdXQuam9pbignLFxcbiAgJykgK1xuICAgICAgICAgICAnICcgK1xuICAgICAgICAgICBicmFjZXNbMV07XG4gIH1cblxuICByZXR1cm4gYnJhY2VzWzBdICsgYmFzZSArICcgJyArIG91dHB1dC5qb2luKCcsICcpICsgJyAnICsgYnJhY2VzWzFdO1xufVxuXG5cbi8vIE5PVEU6IFRoZXNlIHR5cGUgY2hlY2tpbmcgZnVuY3Rpb25zIGludGVudGlvbmFsbHkgZG9uJ3QgdXNlIGBpbnN0YW5jZW9mYFxuLy8gYmVjYXVzZSBpdCBpcyBmcmFnaWxlIGFuZCBjYW4gYmUgZWFzaWx5IGZha2VkIHdpdGggYE9iamVjdC5jcmVhdGUoKWAuXG5mdW5jdGlvbiBpc0FycmF5KGFyKSB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KGFyKTtcbn1cbmV4cG9ydHMuaXNBcnJheSA9IGlzQXJyYXk7XG5cbmZ1bmN0aW9uIGlzQm9vbGVhbihhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdib29sZWFuJztcbn1cbmV4cG9ydHMuaXNCb29sZWFuID0gaXNCb29sZWFuO1xuXG5mdW5jdGlvbiBpc051bGwoYXJnKSB7XG4gIHJldHVybiBhcmcgPT09IG51bGw7XG59XG5leHBvcnRzLmlzTnVsbCA9IGlzTnVsbDtcblxuZnVuY3Rpb24gaXNOdWxsT3JVbmRlZmluZWQoYXJnKSB7XG4gIHJldHVybiBhcmcgPT0gbnVsbDtcbn1cbmV4cG9ydHMuaXNOdWxsT3JVbmRlZmluZWQgPSBpc051bGxPclVuZGVmaW5lZDtcblxuZnVuY3Rpb24gaXNOdW1iZXIoYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnbnVtYmVyJztcbn1cbmV4cG9ydHMuaXNOdW1iZXIgPSBpc051bWJlcjtcblxuZnVuY3Rpb24gaXNTdHJpbmcoYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnc3RyaW5nJztcbn1cbmV4cG9ydHMuaXNTdHJpbmcgPSBpc1N0cmluZztcblxuZnVuY3Rpb24gaXNTeW1ib2woYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnc3ltYm9sJztcbn1cbmV4cG9ydHMuaXNTeW1ib2wgPSBpc1N5bWJvbDtcblxuZnVuY3Rpb24gaXNVbmRlZmluZWQoYXJnKSB7XG4gIHJldHVybiBhcmcgPT09IHZvaWQgMDtcbn1cbmV4cG9ydHMuaXNVbmRlZmluZWQgPSBpc1VuZGVmaW5lZDtcblxuZnVuY3Rpb24gaXNSZWdFeHAocmUpIHtcbiAgcmV0dXJuIGlzT2JqZWN0KHJlKSAmJiBvYmplY3RUb1N0cmluZyhyZSkgPT09ICdbb2JqZWN0IFJlZ0V4cF0nO1xufVxuZXhwb3J0cy5pc1JlZ0V4cCA9IGlzUmVnRXhwO1xuXG5mdW5jdGlvbiBpc09iamVjdChhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdvYmplY3QnICYmIGFyZyAhPT0gbnVsbDtcbn1cbmV4cG9ydHMuaXNPYmplY3QgPSBpc09iamVjdDtcblxuZnVuY3Rpb24gaXNEYXRlKGQpIHtcbiAgcmV0dXJuIGlzT2JqZWN0KGQpICYmIG9iamVjdFRvU3RyaW5nKGQpID09PSAnW29iamVjdCBEYXRlXSc7XG59XG5leHBvcnRzLmlzRGF0ZSA9IGlzRGF0ZTtcblxuZnVuY3Rpb24gaXNFcnJvcihlKSB7XG4gIHJldHVybiBpc09iamVjdChlKSAmJlxuICAgICAgKG9iamVjdFRvU3RyaW5nKGUpID09PSAnW29iamVjdCBFcnJvcl0nIHx8IGUgaW5zdGFuY2VvZiBFcnJvcik7XG59XG5leHBvcnRzLmlzRXJyb3IgPSBpc0Vycm9yO1xuXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ2Z1bmN0aW9uJztcbn1cbmV4cG9ydHMuaXNGdW5jdGlvbiA9IGlzRnVuY3Rpb247XG5cbmZ1bmN0aW9uIGlzUHJpbWl0aXZlKGFyZykge1xuICByZXR1cm4gYXJnID09PSBudWxsIHx8XG4gICAgICAgICB0eXBlb2YgYXJnID09PSAnYm9vbGVhbicgfHxcbiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICdudW1iZXInIHx8XG4gICAgICAgICB0eXBlb2YgYXJnID09PSAnc3RyaW5nJyB8fFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ3N5bWJvbCcgfHwgIC8vIEVTNiBzeW1ib2xcbiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICd1bmRlZmluZWQnO1xufVxuZXhwb3J0cy5pc1ByaW1pdGl2ZSA9IGlzUHJpbWl0aXZlO1xuXG5leHBvcnRzLmlzQnVmZmVyID0gcmVxdWlyZSgnLi9zdXBwb3J0L2lzQnVmZmVyJyk7XG5cbmZ1bmN0aW9uIG9iamVjdFRvU3RyaW5nKG8pIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKTtcbn1cblxuXG5mdW5jdGlvbiBwYWQobikge1xuICByZXR1cm4gbiA8IDEwID8gJzAnICsgbi50b1N0cmluZygxMCkgOiBuLnRvU3RyaW5nKDEwKTtcbn1cblxuXG52YXIgbW9udGhzID0gWydKYW4nLCAnRmViJywgJ01hcicsICdBcHInLCAnTWF5JywgJ0p1bicsICdKdWwnLCAnQXVnJywgJ1NlcCcsXG4gICAgICAgICAgICAgICdPY3QnLCAnTm92JywgJ0RlYyddO1xuXG4vLyAyNiBGZWIgMTY6MTk6MzRcbmZ1bmN0aW9uIHRpbWVzdGFtcCgpIHtcbiAgdmFyIGQgPSBuZXcgRGF0ZSgpO1xuICB2YXIgdGltZSA9IFtwYWQoZC5nZXRIb3VycygpKSxcbiAgICAgICAgICAgICAgcGFkKGQuZ2V0TWludXRlcygpKSxcbiAgICAgICAgICAgICAgcGFkKGQuZ2V0U2Vjb25kcygpKV0uam9pbignOicpO1xuICByZXR1cm4gW2QuZ2V0RGF0ZSgpLCBtb250aHNbZC5nZXRNb250aCgpXSwgdGltZV0uam9pbignICcpO1xufVxuXG5cbi8vIGxvZyBpcyBqdXN0IGEgdGhpbiB3cmFwcGVyIHRvIGNvbnNvbGUubG9nIHRoYXQgcHJlcGVuZHMgYSB0aW1lc3RhbXBcbmV4cG9ydHMubG9nID0gZnVuY3Rpb24oKSB7XG4gIGNvbnNvbGUubG9nKCclcyAtICVzJywgdGltZXN0YW1wKCksIGV4cG9ydHMuZm9ybWF0LmFwcGx5KGV4cG9ydHMsIGFyZ3VtZW50cykpO1xufTtcblxuXG4vKipcbiAqIEluaGVyaXQgdGhlIHByb3RvdHlwZSBtZXRob2RzIGZyb20gb25lIGNvbnN0cnVjdG9yIGludG8gYW5vdGhlci5cbiAqXG4gKiBUaGUgRnVuY3Rpb24ucHJvdG90eXBlLmluaGVyaXRzIGZyb20gbGFuZy5qcyByZXdyaXR0ZW4gYXMgYSBzdGFuZGFsb25lXG4gKiBmdW5jdGlvbiAobm90IG9uIEZ1bmN0aW9uLnByb3RvdHlwZSkuIE5PVEU6IElmIHRoaXMgZmlsZSBpcyB0byBiZSBsb2FkZWRcbiAqIGR1cmluZyBib290c3RyYXBwaW5nIHRoaXMgZnVuY3Rpb24gbmVlZHMgdG8gYmUgcmV3cml0dGVuIHVzaW5nIHNvbWUgbmF0aXZlXG4gKiBmdW5jdGlvbnMgYXMgcHJvdG90eXBlIHNldHVwIHVzaW5nIG5vcm1hbCBKYXZhU2NyaXB0IGRvZXMgbm90IHdvcmsgYXNcbiAqIGV4cGVjdGVkIGR1cmluZyBib290c3RyYXBwaW5nIChzZWUgbWlycm9yLmpzIGluIHIxMTQ5MDMpLlxuICpcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGN0b3IgQ29uc3RydWN0b3IgZnVuY3Rpb24gd2hpY2ggbmVlZHMgdG8gaW5oZXJpdCB0aGVcbiAqICAgICBwcm90b3R5cGUuXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBzdXBlckN0b3IgQ29uc3RydWN0b3IgZnVuY3Rpb24gdG8gaW5oZXJpdCBwcm90b3R5cGUgZnJvbS5cbiAqL1xuZXhwb3J0cy5pbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7XG5cbmV4cG9ydHMuX2V4dGVuZCA9IGZ1bmN0aW9uKG9yaWdpbiwgYWRkKSB7XG4gIC8vIERvbid0IGRvIGFueXRoaW5nIGlmIGFkZCBpc24ndCBhbiBvYmplY3RcbiAgaWYgKCFhZGQgfHwgIWlzT2JqZWN0KGFkZCkpIHJldHVybiBvcmlnaW47XG5cbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhhZGQpO1xuICB2YXIgaSA9IGtleXMubGVuZ3RoO1xuICB3aGlsZSAoaS0tKSB7XG4gICAgb3JpZ2luW2tleXNbaV1dID0gYWRkW2tleXNbaV1dO1xuICB9XG4gIHJldHVybiBvcmlnaW47XG59O1xuXG5mdW5jdGlvbiBoYXNPd25Qcm9wZXJ0eShvYmosIHByb3ApIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApO1xufVxuIiwiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbihmdW5jdGlvbigpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG4gIGV4cG9ydHMuc3RyaXBCT00gPSBmdW5jdGlvbihzdHIpIHtcbiAgICBpZiAoc3RyWzBdID09PSAnXFx1RkVGRicpIHtcbiAgICAgIHJldHVybiBzdHIuc3Vic3RyaW5nKDEpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gc3RyO1xuICAgIH1cbiAgfTtcblxufSkuY2FsbCh0aGlzKTtcbiIsIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuICB2YXIgYnVpbGRlciwgZGVmYXVsdHMsIGVzY2FwZUNEQVRBLCByZXF1aXJlc0NEQVRBLCB3cmFwQ0RBVEEsXG4gICAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5O1xuXG4gIGJ1aWxkZXIgPSByZXF1aXJlKCd4bWxidWlsZGVyJyk7XG5cbiAgZGVmYXVsdHMgPSByZXF1aXJlKCcuL2RlZmF1bHRzJykuZGVmYXVsdHM7XG5cbiAgcmVxdWlyZXNDREFUQSA9IGZ1bmN0aW9uKGVudHJ5KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBlbnRyeSA9PT0gXCJzdHJpbmdcIiAmJiAoZW50cnkuaW5kZXhPZignJicpID49IDAgfHwgZW50cnkuaW5kZXhPZignPicpID49IDAgfHwgZW50cnkuaW5kZXhPZignPCcpID49IDApO1xuICB9O1xuXG4gIHdyYXBDREFUQSA9IGZ1bmN0aW9uKGVudHJ5KSB7XG4gICAgcmV0dXJuIFwiPCFbQ0RBVEFbXCIgKyAoZXNjYXBlQ0RBVEEoZW50cnkpKSArIFwiXV0+XCI7XG4gIH07XG5cbiAgZXNjYXBlQ0RBVEEgPSBmdW5jdGlvbihlbnRyeSkge1xuICAgIHJldHVybiBlbnRyeS5yZXBsYWNlKCddXT4nLCAnXV1dXT48IVtDREFUQVs+Jyk7XG4gIH07XG5cbiAgZXhwb3J0cy5CdWlsZGVyID0gKGZ1bmN0aW9uKCkge1xuICAgIGZ1bmN0aW9uIEJ1aWxkZXIob3B0cykge1xuICAgICAgdmFyIGtleSwgcmVmLCB2YWx1ZTtcbiAgICAgIHRoaXMub3B0aW9ucyA9IHt9O1xuICAgICAgcmVmID0gZGVmYXVsdHNbXCIwLjJcIl07XG4gICAgICBmb3IgKGtleSBpbiByZWYpIHtcbiAgICAgICAgaWYgKCFoYXNQcm9wLmNhbGwocmVmLCBrZXkpKSBjb250aW51ZTtcbiAgICAgICAgdmFsdWUgPSByZWZba2V5XTtcbiAgICAgICAgdGhpcy5vcHRpb25zW2tleV0gPSB2YWx1ZTtcbiAgICAgIH1cbiAgICAgIGZvciAoa2V5IGluIG9wdHMpIHtcbiAgICAgICAgaWYgKCFoYXNQcm9wLmNhbGwob3B0cywga2V5KSkgY29udGludWU7XG4gICAgICAgIHZhbHVlID0gb3B0c1trZXldO1xuICAgICAgICB0aGlzLm9wdGlvbnNba2V5XSA9IHZhbHVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIEJ1aWxkZXIucHJvdG90eXBlLmJ1aWxkT2JqZWN0ID0gZnVuY3Rpb24ocm9vdE9iaikge1xuICAgICAgdmFyIGF0dHJrZXksIGNoYXJrZXksIHJlbmRlciwgcm9vdEVsZW1lbnQsIHJvb3ROYW1lO1xuICAgICAgYXR0cmtleSA9IHRoaXMub3B0aW9ucy5hdHRya2V5O1xuICAgICAgY2hhcmtleSA9IHRoaXMub3B0aW9ucy5jaGFya2V5O1xuICAgICAgaWYgKChPYmplY3Qua2V5cyhyb290T2JqKS5sZW5ndGggPT09IDEpICYmICh0aGlzLm9wdGlvbnMucm9vdE5hbWUgPT09IGRlZmF1bHRzWycwLjInXS5yb290TmFtZSkpIHtcbiAgICAgICAgcm9vdE5hbWUgPSBPYmplY3Qua2V5cyhyb290T2JqKVswXTtcbiAgICAgICAgcm9vdE9iaiA9IHJvb3RPYmpbcm9vdE5hbWVdO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcm9vdE5hbWUgPSB0aGlzLm9wdGlvbnMucm9vdE5hbWU7XG4gICAgICB9XG4gICAgICByZW5kZXIgPSAoZnVuY3Rpb24oX3RoaXMpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKGVsZW1lbnQsIG9iaikge1xuICAgICAgICAgIHZhciBhdHRyLCBjaGlsZCwgZW50cnksIGluZGV4LCBrZXksIHZhbHVlO1xuICAgICAgICAgIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgaWYgKF90aGlzLm9wdGlvbnMuY2RhdGEgJiYgcmVxdWlyZXNDREFUQShvYmopKSB7XG4gICAgICAgICAgICAgIGVsZW1lbnQucmF3KHdyYXBDREFUQShvYmopKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGVsZW1lbnQudHh0KG9iaik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICAgICAgICAgIGZvciAoaW5kZXggaW4gb2JqKSB7XG4gICAgICAgICAgICAgIGlmICghaGFzUHJvcC5jYWxsKG9iaiwgaW5kZXgpKSBjb250aW51ZTtcbiAgICAgICAgICAgICAgY2hpbGQgPSBvYmpbaW5kZXhdO1xuICAgICAgICAgICAgICBmb3IgKGtleSBpbiBjaGlsZCkge1xuICAgICAgICAgICAgICAgIGVudHJ5ID0gY2hpbGRba2V5XTtcbiAgICAgICAgICAgICAgICBlbGVtZW50ID0gcmVuZGVyKGVsZW1lbnQuZWxlKGtleSksIGVudHJ5KS51cCgpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZvciAoa2V5IGluIG9iaikge1xuICAgICAgICAgICAgICBpZiAoIWhhc1Byb3AuY2FsbChvYmosIGtleSkpIGNvbnRpbnVlO1xuICAgICAgICAgICAgICBjaGlsZCA9IG9ialtrZXldO1xuICAgICAgICAgICAgICBpZiAoa2V5ID09PSBhdHRya2V5KSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjaGlsZCA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgICAgICAgZm9yIChhdHRyIGluIGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlID0gY2hpbGRbYXR0cl07XG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQgPSBlbGVtZW50LmF0dChhdHRyLCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9IGVsc2UgaWYgKGtleSA9PT0gY2hhcmtleSkge1xuICAgICAgICAgICAgICAgIGlmIChfdGhpcy5vcHRpb25zLmNkYXRhICYmIHJlcXVpcmVzQ0RBVEEoY2hpbGQpKSB7XG4gICAgICAgICAgICAgICAgICBlbGVtZW50ID0gZWxlbWVudC5yYXcod3JhcENEQVRBKGNoaWxkKSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIGVsZW1lbnQgPSBlbGVtZW50LnR4dChjaGlsZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGQpKSB7XG4gICAgICAgICAgICAgICAgZm9yIChpbmRleCBpbiBjaGlsZCkge1xuICAgICAgICAgICAgICAgICAgaWYgKCFoYXNQcm9wLmNhbGwoY2hpbGQsIGluZGV4KSkgY29udGludWU7XG4gICAgICAgICAgICAgICAgICBlbnRyeSA9IGNoaWxkW2luZGV4XTtcbiAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZW50cnkgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChfdGhpcy5vcHRpb25zLmNkYXRhICYmIHJlcXVpcmVzQ0RBVEEoZW50cnkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgZWxlbWVudCA9IGVsZW1lbnQuZWxlKGtleSkucmF3KHdyYXBDREFUQShlbnRyeSkpLnVwKCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgZWxlbWVudCA9IGVsZW1lbnQuZWxlKGtleSwgZW50cnkpLnVwKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQgPSByZW5kZXIoZWxlbWVudC5lbGUoa2V5KSwgZW50cnkpLnVwKCk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBjaGlsZCA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgICAgIGVsZW1lbnQgPSByZW5kZXIoZWxlbWVudC5lbGUoa2V5KSwgY2hpbGQpLnVwKCk7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjaGlsZCA9PT0gJ3N0cmluZycgJiYgX3RoaXMub3B0aW9ucy5jZGF0YSAmJiByZXF1aXJlc0NEQVRBKGNoaWxkKSkge1xuICAgICAgICAgICAgICAgICAgZWxlbWVudCA9IGVsZW1lbnQuZWxlKGtleSkucmF3KHdyYXBDREFUQShjaGlsZCkpLnVwKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIGlmIChjaGlsZCA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNoaWxkID0gJyc7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICBlbGVtZW50ID0gZWxlbWVudC5lbGUoa2V5LCBjaGlsZC50b1N0cmluZygpKS51cCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gZWxlbWVudDtcbiAgICAgICAgfTtcbiAgICAgIH0pKHRoaXMpO1xuICAgICAgcm9vdEVsZW1lbnQgPSBidWlsZGVyLmNyZWF0ZShyb290TmFtZSwgdGhpcy5vcHRpb25zLnhtbGRlYywgdGhpcy5vcHRpb25zLmRvY3R5cGUsIHtcbiAgICAgICAgaGVhZGxlc3M6IHRoaXMub3B0aW9ucy5oZWFkbGVzcyxcbiAgICAgICAgYWxsb3dTdXJyb2dhdGVDaGFyczogdGhpcy5vcHRpb25zLmFsbG93U3Vycm9nYXRlQ2hhcnNcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHJlbmRlcihyb290RWxlbWVudCwgcm9vdE9iaikuZW5kKHRoaXMub3B0aW9ucy5yZW5kZXJPcHRzKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIEJ1aWxkZXI7XG5cbiAgfSkoKTtcblxufSkuY2FsbCh0aGlzKTtcbiIsIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIGV4cG9ydHMuZGVmYXVsdHMgPSB7XG4gICAgXCIwLjFcIjoge1xuICAgICAgZXhwbGljaXRDaGFya2V5OiBmYWxzZSxcbiAgICAgIHRyaW06IHRydWUsXG4gICAgICBub3JtYWxpemU6IHRydWUsXG4gICAgICBub3JtYWxpemVUYWdzOiBmYWxzZSxcbiAgICAgIGF0dHJrZXk6IFwiQFwiLFxuICAgICAgY2hhcmtleTogXCIjXCIsXG4gICAgICBleHBsaWNpdEFycmF5OiBmYWxzZSxcbiAgICAgIGlnbm9yZUF0dHJzOiBmYWxzZSxcbiAgICAgIG1lcmdlQXR0cnM6IGZhbHNlLFxuICAgICAgZXhwbGljaXRSb290OiBmYWxzZSxcbiAgICAgIHZhbGlkYXRvcjogbnVsbCxcbiAgICAgIHhtbG5zOiBmYWxzZSxcbiAgICAgIGV4cGxpY2l0Q2hpbGRyZW46IGZhbHNlLFxuICAgICAgY2hpbGRrZXk6ICdAQCcsXG4gICAgICBjaGFyc0FzQ2hpbGRyZW46IGZhbHNlLFxuICAgICAgaW5jbHVkZVdoaXRlQ2hhcnM6IGZhbHNlLFxuICAgICAgYXN5bmM6IGZhbHNlLFxuICAgICAgc3RyaWN0OiB0cnVlLFxuICAgICAgYXR0ck5hbWVQcm9jZXNzb3JzOiBudWxsLFxuICAgICAgYXR0clZhbHVlUHJvY2Vzc29yczogbnVsbCxcbiAgICAgIHRhZ05hbWVQcm9jZXNzb3JzOiBudWxsLFxuICAgICAgdmFsdWVQcm9jZXNzb3JzOiBudWxsLFxuICAgICAgZW1wdHlUYWc6ICcnXG4gICAgfSxcbiAgICBcIjAuMlwiOiB7XG4gICAgICBleHBsaWNpdENoYXJrZXk6IGZhbHNlLFxuICAgICAgdHJpbTogZmFsc2UsXG4gICAgICBub3JtYWxpemU6IGZhbHNlLFxuICAgICAgbm9ybWFsaXplVGFnczogZmFsc2UsXG4gICAgICBhdHRya2V5OiBcIiRcIixcbiAgICAgIGNoYXJrZXk6IFwiX1wiLFxuICAgICAgZXhwbGljaXRBcnJheTogdHJ1ZSxcbiAgICAgIGlnbm9yZUF0dHJzOiBmYWxzZSxcbiAgICAgIG1lcmdlQXR0cnM6IGZhbHNlLFxuICAgICAgZXhwbGljaXRSb290OiB0cnVlLFxuICAgICAgdmFsaWRhdG9yOiBudWxsLFxuICAgICAgeG1sbnM6IGZhbHNlLFxuICAgICAgZXhwbGljaXRDaGlsZHJlbjogZmFsc2UsXG4gICAgICBwcmVzZXJ2ZUNoaWxkcmVuT3JkZXI6IGZhbHNlLFxuICAgICAgY2hpbGRrZXk6ICckJCcsXG4gICAgICBjaGFyc0FzQ2hpbGRyZW46IGZhbHNlLFxuICAgICAgaW5jbHVkZVdoaXRlQ2hhcnM6IGZhbHNlLFxuICAgICAgYXN5bmM6IGZhbHNlLFxuICAgICAgc3RyaWN0OiB0cnVlLFxuICAgICAgYXR0ck5hbWVQcm9jZXNzb3JzOiBudWxsLFxuICAgICAgYXR0clZhbHVlUHJvY2Vzc29yczogbnVsbCxcbiAgICAgIHRhZ05hbWVQcm9jZXNzb3JzOiBudWxsLFxuICAgICAgdmFsdWVQcm9jZXNzb3JzOiBudWxsLFxuICAgICAgcm9vdE5hbWU6ICdyb290JyxcbiAgICAgIHhtbGRlYzoge1xuICAgICAgICAndmVyc2lvbic6ICcxLjAnLFxuICAgICAgICAnZW5jb2RpbmcnOiAnVVRGLTgnLFxuICAgICAgICAnc3RhbmRhbG9uZSc6IHRydWVcbiAgICAgIH0sXG4gICAgICBkb2N0eXBlOiBudWxsLFxuICAgICAgcmVuZGVyT3B0czoge1xuICAgICAgICAncHJldHR5JzogdHJ1ZSxcbiAgICAgICAgJ2luZGVudCc6ICcgICcsXG4gICAgICAgICduZXdsaW5lJzogJ1xcbidcbiAgICAgIH0sXG4gICAgICBoZWFkbGVzczogZmFsc2UsXG4gICAgICBjaHVua1NpemU6IDEwMDAwLFxuICAgICAgZW1wdHlUYWc6ICcnLFxuICAgICAgY2RhdGE6IGZhbHNlXG4gICAgfVxuICB9O1xuXG59KS5jYWxsKHRoaXMpO1xuIiwiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbihmdW5jdGlvbigpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG4gIHZhciBib20sIGRlZmF1bHRzLCBldmVudHMsIGlzRW1wdHksIHByb2Nlc3NJdGVtLCBwcm9jZXNzb3JzLCBzYXgsIHNldEltbWVkaWF0ZSxcbiAgICBiaW5kID0gZnVuY3Rpb24oZm4sIG1lKXsgcmV0dXJuIGZ1bmN0aW9uKCl7IHJldHVybiBmbi5hcHBseShtZSwgYXJndW1lbnRzKTsgfTsgfSxcbiAgICBleHRlbmQgPSBmdW5jdGlvbihjaGlsZCwgcGFyZW50KSB7IGZvciAodmFyIGtleSBpbiBwYXJlbnQpIHsgaWYgKGhhc1Byb3AuY2FsbChwYXJlbnQsIGtleSkpIGNoaWxkW2tleV0gPSBwYXJlbnRba2V5XTsgfSBmdW5jdGlvbiBjdG9yKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7IH0gY3Rvci5wcm90b3R5cGUgPSBwYXJlbnQucHJvdG90eXBlOyBjaGlsZC5wcm90b3R5cGUgPSBuZXcgY3RvcigpOyBjaGlsZC5fX3N1cGVyX18gPSBwYXJlbnQucHJvdG90eXBlOyByZXR1cm4gY2hpbGQ7IH0sXG4gICAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5O1xuXG4gIHNheCA9IHJlcXVpcmUoJ3NheCcpO1xuXG4gIGV2ZW50cyA9IHJlcXVpcmUoJ2V2ZW50cycpO1xuXG4gIGJvbSA9IHJlcXVpcmUoJy4vYm9tJyk7XG5cbiAgcHJvY2Vzc29ycyA9IHJlcXVpcmUoJy4vcHJvY2Vzc29ycycpO1xuXG4gIHNldEltbWVkaWF0ZSA9IHJlcXVpcmUoJ3RpbWVycycpLnNldEltbWVkaWF0ZTtcblxuICBkZWZhdWx0cyA9IHJlcXVpcmUoJy4vZGVmYXVsdHMnKS5kZWZhdWx0cztcblxuICBpc0VtcHR5ID0gZnVuY3Rpb24odGhpbmcpIHtcbiAgICByZXR1cm4gdHlwZW9mIHRoaW5nID09PSBcIm9iamVjdFwiICYmICh0aGluZyAhPSBudWxsKSAmJiBPYmplY3Qua2V5cyh0aGluZykubGVuZ3RoID09PSAwO1xuICB9O1xuXG4gIHByb2Nlc3NJdGVtID0gZnVuY3Rpb24ocHJvY2Vzc29ycywgaXRlbSwga2V5KSB7XG4gICAgdmFyIGksIGxlbiwgcHJvY2VzcztcbiAgICBmb3IgKGkgPSAwLCBsZW4gPSBwcm9jZXNzb3JzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICBwcm9jZXNzID0gcHJvY2Vzc29yc1tpXTtcbiAgICAgIGl0ZW0gPSBwcm9jZXNzKGl0ZW0sIGtleSk7XG4gICAgfVxuICAgIHJldHVybiBpdGVtO1xuICB9O1xuXG4gIGV4cG9ydHMuUGFyc2VyID0gKGZ1bmN0aW9uKHN1cGVyQ2xhc3MpIHtcbiAgICBleHRlbmQoUGFyc2VyLCBzdXBlckNsYXNzKTtcblxuICAgIGZ1bmN0aW9uIFBhcnNlcihvcHRzKSB7XG4gICAgICB0aGlzLnBhcnNlU3RyaW5nID0gYmluZCh0aGlzLnBhcnNlU3RyaW5nLCB0aGlzKTtcbiAgICAgIHRoaXMucmVzZXQgPSBiaW5kKHRoaXMucmVzZXQsIHRoaXMpO1xuICAgICAgdGhpcy5hc3NpZ25PclB1c2ggPSBiaW5kKHRoaXMuYXNzaWduT3JQdXNoLCB0aGlzKTtcbiAgICAgIHRoaXMucHJvY2Vzc0FzeW5jID0gYmluZCh0aGlzLnByb2Nlc3NBc3luYywgdGhpcyk7XG4gICAgICB2YXIga2V5LCByZWYsIHZhbHVlO1xuICAgICAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIGV4cG9ydHMuUGFyc2VyKSkge1xuICAgICAgICByZXR1cm4gbmV3IGV4cG9ydHMuUGFyc2VyKG9wdHMpO1xuICAgICAgfVxuICAgICAgdGhpcy5vcHRpb25zID0ge307XG4gICAgICByZWYgPSBkZWZhdWx0c1tcIjAuMlwiXTtcbiAgICAgIGZvciAoa2V5IGluIHJlZikge1xuICAgICAgICBpZiAoIWhhc1Byb3AuY2FsbChyZWYsIGtleSkpIGNvbnRpbnVlO1xuICAgICAgICB2YWx1ZSA9IHJlZltrZXldO1xuICAgICAgICB0aGlzLm9wdGlvbnNba2V5XSA9IHZhbHVlO1xuICAgICAgfVxuICAgICAgZm9yIChrZXkgaW4gb3B0cykge1xuICAgICAgICBpZiAoIWhhc1Byb3AuY2FsbChvcHRzLCBrZXkpKSBjb250aW51ZTtcbiAgICAgICAgdmFsdWUgPSBvcHRzW2tleV07XG4gICAgICAgIHRoaXMub3B0aW9uc1trZXldID0gdmFsdWU7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5vcHRpb25zLnhtbG5zKSB7XG4gICAgICAgIHRoaXMub3B0aW9ucy54bWxuc2tleSA9IHRoaXMub3B0aW9ucy5hdHRya2V5ICsgXCJuc1wiO1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5ub3JtYWxpemVUYWdzKSB7XG4gICAgICAgIGlmICghdGhpcy5vcHRpb25zLnRhZ05hbWVQcm9jZXNzb3JzKSB7XG4gICAgICAgICAgdGhpcy5vcHRpb25zLnRhZ05hbWVQcm9jZXNzb3JzID0gW107XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5vcHRpb25zLnRhZ05hbWVQcm9jZXNzb3JzLnVuc2hpZnQocHJvY2Vzc29ycy5ub3JtYWxpemUpO1xuICAgICAgfVxuICAgICAgdGhpcy5yZXNldCgpO1xuICAgIH1cblxuICAgIFBhcnNlci5wcm90b3R5cGUucHJvY2Vzc0FzeW5jID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgY2h1bmssIGVycjtcbiAgICAgIHRyeSB7XG4gICAgICAgIGlmICh0aGlzLnJlbWFpbmluZy5sZW5ndGggPD0gdGhpcy5vcHRpb25zLmNodW5rU2l6ZSkge1xuICAgICAgICAgIGNodW5rID0gdGhpcy5yZW1haW5pbmc7XG4gICAgICAgICAgdGhpcy5yZW1haW5pbmcgPSAnJztcbiAgICAgICAgICB0aGlzLnNheFBhcnNlciA9IHRoaXMuc2F4UGFyc2VyLndyaXRlKGNodW5rKTtcbiAgICAgICAgICByZXR1cm4gdGhpcy5zYXhQYXJzZXIuY2xvc2UoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjaHVuayA9IHRoaXMucmVtYWluaW5nLnN1YnN0cigwLCB0aGlzLm9wdGlvbnMuY2h1bmtTaXplKTtcbiAgICAgICAgICB0aGlzLnJlbWFpbmluZyA9IHRoaXMucmVtYWluaW5nLnN1YnN0cih0aGlzLm9wdGlvbnMuY2h1bmtTaXplLCB0aGlzLnJlbWFpbmluZy5sZW5ndGgpO1xuICAgICAgICAgIHRoaXMuc2F4UGFyc2VyID0gdGhpcy5zYXhQYXJzZXIud3JpdGUoY2h1bmspO1xuICAgICAgICAgIHJldHVybiBzZXRJbW1lZGlhdGUodGhpcy5wcm9jZXNzQXN5bmMpO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnJvcjEpIHtcbiAgICAgICAgZXJyID0gZXJyb3IxO1xuICAgICAgICBpZiAoIXRoaXMuc2F4UGFyc2VyLmVyclRocm93bikge1xuICAgICAgICAgIHRoaXMuc2F4UGFyc2VyLmVyclRocm93biA9IHRydWU7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuZW1pdChlcnIpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIFBhcnNlci5wcm90b3R5cGUuYXNzaWduT3JQdXNoID0gZnVuY3Rpb24ob2JqLCBrZXksIG5ld1ZhbHVlKSB7XG4gICAgICBpZiAoIShrZXkgaW4gb2JqKSkge1xuICAgICAgICBpZiAoIXRoaXMub3B0aW9ucy5leHBsaWNpdEFycmF5KSB7XG4gICAgICAgICAgcmV0dXJuIG9ialtrZXldID0gbmV3VmFsdWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIG9ialtrZXldID0gW25ld1ZhbHVlXTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKCEob2JqW2tleV0gaW5zdGFuY2VvZiBBcnJheSkpIHtcbiAgICAgICAgICBvYmpba2V5XSA9IFtvYmpba2V5XV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG9ialtrZXldLnB1c2gobmV3VmFsdWUpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBQYXJzZXIucHJvdG90eXBlLnJlc2V0ID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgYXR0cmtleSwgY2hhcmtleSwgb250ZXh0LCBzdGFjaztcbiAgICAgIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gICAgICB0aGlzLnNheFBhcnNlciA9IHNheC5wYXJzZXIodGhpcy5vcHRpb25zLnN0cmljdCwge1xuICAgICAgICB0cmltOiBmYWxzZSxcbiAgICAgICAgbm9ybWFsaXplOiBmYWxzZSxcbiAgICAgICAgeG1sbnM6IHRoaXMub3B0aW9ucy54bWxuc1xuICAgICAgfSk7XG4gICAgICB0aGlzLnNheFBhcnNlci5lcnJUaHJvd24gPSBmYWxzZTtcbiAgICAgIHRoaXMuc2F4UGFyc2VyLm9uZXJyb3IgPSAoZnVuY3Rpb24oX3RoaXMpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICAgICAgX3RoaXMuc2F4UGFyc2VyLnJlc3VtZSgpO1xuICAgICAgICAgIGlmICghX3RoaXMuc2F4UGFyc2VyLmVyclRocm93bikge1xuICAgICAgICAgICAgX3RoaXMuc2F4UGFyc2VyLmVyclRocm93biA9IHRydWU7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMuZW1pdChcImVycm9yXCIsIGVycm9yKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICB9KSh0aGlzKTtcbiAgICAgIHRoaXMuc2F4UGFyc2VyLm9uZW5kID0gKGZ1bmN0aW9uKF90aGlzKSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBpZiAoIV90aGlzLnNheFBhcnNlci5lbmRlZCkge1xuICAgICAgICAgICAgX3RoaXMuc2F4UGFyc2VyLmVuZGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5lbWl0KFwiZW5kXCIsIF90aGlzLnJlc3VsdE9iamVjdCk7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgfSkodGhpcyk7XG4gICAgICB0aGlzLnNheFBhcnNlci5lbmRlZCA9IGZhbHNlO1xuICAgICAgdGhpcy5FWFBMSUNJVF9DSEFSS0VZID0gdGhpcy5vcHRpb25zLmV4cGxpY2l0Q2hhcmtleTtcbiAgICAgIHRoaXMucmVzdWx0T2JqZWN0ID0gbnVsbDtcbiAgICAgIHN0YWNrID0gW107XG4gICAgICBhdHRya2V5ID0gdGhpcy5vcHRpb25zLmF0dHJrZXk7XG4gICAgICBjaGFya2V5ID0gdGhpcy5vcHRpb25zLmNoYXJrZXk7XG4gICAgICB0aGlzLnNheFBhcnNlci5vbm9wZW50YWcgPSAoZnVuY3Rpb24oX3RoaXMpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgICB2YXIga2V5LCBuZXdWYWx1ZSwgb2JqLCBwcm9jZXNzZWRLZXksIHJlZjtcbiAgICAgICAgICBvYmogPSB7fTtcbiAgICAgICAgICBvYmpbY2hhcmtleV0gPSBcIlwiO1xuICAgICAgICAgIGlmICghX3RoaXMub3B0aW9ucy5pZ25vcmVBdHRycykge1xuICAgICAgICAgICAgcmVmID0gbm9kZS5hdHRyaWJ1dGVzO1xuICAgICAgICAgICAgZm9yIChrZXkgaW4gcmVmKSB7XG4gICAgICAgICAgICAgIGlmICghaGFzUHJvcC5jYWxsKHJlZiwga2V5KSkgY29udGludWU7XG4gICAgICAgICAgICAgIGlmICghKGF0dHJrZXkgaW4gb2JqKSAmJiAhX3RoaXMub3B0aW9ucy5tZXJnZUF0dHJzKSB7XG4gICAgICAgICAgICAgICAgb2JqW2F0dHJrZXldID0ge307XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgbmV3VmFsdWUgPSBfdGhpcy5vcHRpb25zLmF0dHJWYWx1ZVByb2Nlc3NvcnMgPyBwcm9jZXNzSXRlbShfdGhpcy5vcHRpb25zLmF0dHJWYWx1ZVByb2Nlc3NvcnMsIG5vZGUuYXR0cmlidXRlc1trZXldLCBrZXkpIDogbm9kZS5hdHRyaWJ1dGVzW2tleV07XG4gICAgICAgICAgICAgIHByb2Nlc3NlZEtleSA9IF90aGlzLm9wdGlvbnMuYXR0ck5hbWVQcm9jZXNzb3JzID8gcHJvY2Vzc0l0ZW0oX3RoaXMub3B0aW9ucy5hdHRyTmFtZVByb2Nlc3NvcnMsIGtleSkgOiBrZXk7XG4gICAgICAgICAgICAgIGlmIChfdGhpcy5vcHRpb25zLm1lcmdlQXR0cnMpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5hc3NpZ25PclB1c2gob2JqLCBwcm9jZXNzZWRLZXksIG5ld1ZhbHVlKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBvYmpbYXR0cmtleV1bcHJvY2Vzc2VkS2V5XSA9IG5ld1ZhbHVlO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIG9ialtcIiNuYW1lXCJdID0gX3RoaXMub3B0aW9ucy50YWdOYW1lUHJvY2Vzc29ycyA/IHByb2Nlc3NJdGVtKF90aGlzLm9wdGlvbnMudGFnTmFtZVByb2Nlc3NvcnMsIG5vZGUubmFtZSkgOiBub2RlLm5hbWU7XG4gICAgICAgICAgaWYgKF90aGlzLm9wdGlvbnMueG1sbnMpIHtcbiAgICAgICAgICAgIG9ialtfdGhpcy5vcHRpb25zLnhtbG5za2V5XSA9IHtcbiAgICAgICAgICAgICAgdXJpOiBub2RlLnVyaSxcbiAgICAgICAgICAgICAgbG9jYWw6IG5vZGUubG9jYWxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBzdGFjay5wdXNoKG9iaik7XG4gICAgICAgIH07XG4gICAgICB9KSh0aGlzKTtcbiAgICAgIHRoaXMuc2F4UGFyc2VyLm9uY2xvc2V0YWcgPSAoZnVuY3Rpb24oX3RoaXMpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHZhciBjZGF0YSwgZW1wdHlTdHIsIGtleSwgbm9kZSwgbm9kZU5hbWUsIG9iaiwgb2JqQ2xvbmUsIG9sZCwgcywgeHBhdGg7XG4gICAgICAgICAgb2JqID0gc3RhY2sucG9wKCk7XG4gICAgICAgICAgbm9kZU5hbWUgPSBvYmpbXCIjbmFtZVwiXTtcbiAgICAgICAgICBpZiAoIV90aGlzLm9wdGlvbnMuZXhwbGljaXRDaGlsZHJlbiB8fCAhX3RoaXMub3B0aW9ucy5wcmVzZXJ2ZUNoaWxkcmVuT3JkZXIpIHtcbiAgICAgICAgICAgIGRlbGV0ZSBvYmpbXCIjbmFtZVwiXTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKG9iai5jZGF0YSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgY2RhdGEgPSBvYmouY2RhdGE7XG4gICAgICAgICAgICBkZWxldGUgb2JqLmNkYXRhO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzID0gc3RhY2tbc3RhY2subGVuZ3RoIC0gMV07XG4gICAgICAgICAgaWYgKG9ialtjaGFya2V5XS5tYXRjaCgvXlxccyokLykgJiYgIWNkYXRhKSB7XG4gICAgICAgICAgICBlbXB0eVN0ciA9IG9ialtjaGFya2V5XTtcbiAgICAgICAgICAgIGRlbGV0ZSBvYmpbY2hhcmtleV07XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChfdGhpcy5vcHRpb25zLnRyaW0pIHtcbiAgICAgICAgICAgICAgb2JqW2NoYXJrZXldID0gb2JqW2NoYXJrZXldLnRyaW0oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChfdGhpcy5vcHRpb25zLm5vcm1hbGl6ZSkge1xuICAgICAgICAgICAgICBvYmpbY2hhcmtleV0gPSBvYmpbY2hhcmtleV0ucmVwbGFjZSgvXFxzezIsfS9nLCBcIiBcIikudHJpbSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb2JqW2NoYXJrZXldID0gX3RoaXMub3B0aW9ucy52YWx1ZVByb2Nlc3NvcnMgPyBwcm9jZXNzSXRlbShfdGhpcy5vcHRpb25zLnZhbHVlUHJvY2Vzc29ycywgb2JqW2NoYXJrZXldLCBub2RlTmFtZSkgOiBvYmpbY2hhcmtleV07XG4gICAgICAgICAgICBpZiAoT2JqZWN0LmtleXMob2JqKS5sZW5ndGggPT09IDEgJiYgY2hhcmtleSBpbiBvYmogJiYgIV90aGlzLkVYUExJQ0lUX0NIQVJLRVkpIHtcbiAgICAgICAgICAgICAgb2JqID0gb2JqW2NoYXJrZXldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoaXNFbXB0eShvYmopKSB7XG4gICAgICAgICAgICBvYmogPSBfdGhpcy5vcHRpb25zLmVtcHR5VGFnICE9PSAnJyA/IF90aGlzLm9wdGlvbnMuZW1wdHlUYWcgOiBlbXB0eVN0cjtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKF90aGlzLm9wdGlvbnMudmFsaWRhdG9yICE9IG51bGwpIHtcbiAgICAgICAgICAgIHhwYXRoID0gXCIvXCIgKyAoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICB2YXIgaSwgbGVuLCByZXN1bHRzO1xuICAgICAgICAgICAgICByZXN1bHRzID0gW107XG4gICAgICAgICAgICAgIGZvciAoaSA9IDAsIGxlbiA9IHN0YWNrLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgbm9kZSA9IHN0YWNrW2ldO1xuICAgICAgICAgICAgICAgIHJlc3VsdHMucHVzaChub2RlW1wiI25hbWVcIl0pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHJldHVybiByZXN1bHRzO1xuICAgICAgICAgICAgfSkoKSkuY29uY2F0KG5vZGVOYW1lKS5qb2luKFwiL1wiKTtcbiAgICAgICAgICAgIChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgdmFyIGVycjtcbiAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gb2JqID0gX3RoaXMub3B0aW9ucy52YWxpZGF0b3IoeHBhdGgsIHMgJiYgc1tub2RlTmFtZV0sIG9iaik7XG4gICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yMSkge1xuICAgICAgICAgICAgICAgIGVyciA9IGVycm9yMTtcbiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuZW1pdChcImVycm9yXCIsIGVycik7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChfdGhpcy5vcHRpb25zLmV4cGxpY2l0Q2hpbGRyZW4gJiYgIV90aGlzLm9wdGlvbnMubWVyZ2VBdHRycyAmJiB0eXBlb2Ygb2JqID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgaWYgKCFfdGhpcy5vcHRpb25zLnByZXNlcnZlQ2hpbGRyZW5PcmRlcikge1xuICAgICAgICAgICAgICBub2RlID0ge307XG4gICAgICAgICAgICAgIGlmIChfdGhpcy5vcHRpb25zLmF0dHJrZXkgaW4gb2JqKSB7XG4gICAgICAgICAgICAgICAgbm9kZVtfdGhpcy5vcHRpb25zLmF0dHJrZXldID0gb2JqW190aGlzLm9wdGlvbnMuYXR0cmtleV07XG4gICAgICAgICAgICAgICAgZGVsZXRlIG9ialtfdGhpcy5vcHRpb25zLmF0dHJrZXldO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGlmICghX3RoaXMub3B0aW9ucy5jaGFyc0FzQ2hpbGRyZW4gJiYgX3RoaXMub3B0aW9ucy5jaGFya2V5IGluIG9iaikge1xuICAgICAgICAgICAgICAgIG5vZGVbX3RoaXMub3B0aW9ucy5jaGFya2V5XSA9IG9ialtfdGhpcy5vcHRpb25zLmNoYXJrZXldO1xuICAgICAgICAgICAgICAgIGRlbGV0ZSBvYmpbX3RoaXMub3B0aW9ucy5jaGFya2V5XTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMob2JqKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgbm9kZVtfdGhpcy5vcHRpb25zLmNoaWxka2V5XSA9IG9iajtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBvYmogPSBub2RlO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChzKSB7XG4gICAgICAgICAgICAgIHNbX3RoaXMub3B0aW9ucy5jaGlsZGtleV0gPSBzW190aGlzLm9wdGlvbnMuY2hpbGRrZXldIHx8IFtdO1xuICAgICAgICAgICAgICBvYmpDbG9uZSA9IHt9O1xuICAgICAgICAgICAgICBmb3IgKGtleSBpbiBvYmopIHtcbiAgICAgICAgICAgICAgICBpZiAoIWhhc1Byb3AuY2FsbChvYmosIGtleSkpIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIG9iakNsb25lW2tleV0gPSBvYmpba2V5XTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBzW190aGlzLm9wdGlvbnMuY2hpbGRrZXldLnB1c2gob2JqQ2xvbmUpO1xuICAgICAgICAgICAgICBkZWxldGUgb2JqW1wiI25hbWVcIl07XG4gICAgICAgICAgICAgIGlmIChPYmplY3Qua2V5cyhvYmopLmxlbmd0aCA9PT0gMSAmJiBjaGFya2V5IGluIG9iaiAmJiAhX3RoaXMuRVhQTElDSVRfQ0hBUktFWSkge1xuICAgICAgICAgICAgICAgIG9iaiA9IG9ialtjaGFya2V5XTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoc3RhY2subGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzLmFzc2lnbk9yUHVzaChzLCBub2RlTmFtZSwgb2JqKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKF90aGlzLm9wdGlvbnMuZXhwbGljaXRSb290KSB7XG4gICAgICAgICAgICAgIG9sZCA9IG9iajtcbiAgICAgICAgICAgICAgb2JqID0ge307XG4gICAgICAgICAgICAgIG9ialtub2RlTmFtZV0gPSBvbGQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfdGhpcy5yZXN1bHRPYmplY3QgPSBvYmo7XG4gICAgICAgICAgICBfdGhpcy5zYXhQYXJzZXIuZW5kZWQgPSB0cnVlO1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzLmVtaXQoXCJlbmRcIiwgX3RoaXMucmVzdWx0T2JqZWN0KTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICB9KSh0aGlzKTtcbiAgICAgIG9udGV4dCA9IChmdW5jdGlvbihfdGhpcykge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24odGV4dCkge1xuICAgICAgICAgIHZhciBjaGFyQ2hpbGQsIHM7XG4gICAgICAgICAgcyA9IHN0YWNrW3N0YWNrLmxlbmd0aCAtIDFdO1xuICAgICAgICAgIGlmIChzKSB7XG4gICAgICAgICAgICBzW2NoYXJrZXldICs9IHRleHQ7XG4gICAgICAgICAgICBpZiAoX3RoaXMub3B0aW9ucy5leHBsaWNpdENoaWxkcmVuICYmIF90aGlzLm9wdGlvbnMucHJlc2VydmVDaGlsZHJlbk9yZGVyICYmIF90aGlzLm9wdGlvbnMuY2hhcnNBc0NoaWxkcmVuICYmIChfdGhpcy5vcHRpb25zLmluY2x1ZGVXaGl0ZUNoYXJzIHx8IHRleHQucmVwbGFjZSgvXFxcXG4vZywgJycpLnRyaW0oKSAhPT0gJycpKSB7XG4gICAgICAgICAgICAgIHNbX3RoaXMub3B0aW9ucy5jaGlsZGtleV0gPSBzW190aGlzLm9wdGlvbnMuY2hpbGRrZXldIHx8IFtdO1xuICAgICAgICAgICAgICBjaGFyQ2hpbGQgPSB7XG4gICAgICAgICAgICAgICAgJyNuYW1lJzogJ19fdGV4dF9fJ1xuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICBjaGFyQ2hpbGRbY2hhcmtleV0gPSB0ZXh0O1xuICAgICAgICAgICAgICBpZiAoX3RoaXMub3B0aW9ucy5ub3JtYWxpemUpIHtcbiAgICAgICAgICAgICAgICBjaGFyQ2hpbGRbY2hhcmtleV0gPSBjaGFyQ2hpbGRbY2hhcmtleV0ucmVwbGFjZSgvXFxzezIsfS9nLCBcIiBcIikudHJpbSgpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHNbX3RoaXMub3B0aW9ucy5jaGlsZGtleV0ucHVzaChjaGFyQ2hpbGQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHM7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgfSkodGhpcyk7XG4gICAgICB0aGlzLnNheFBhcnNlci5vbnRleHQgPSBvbnRleHQ7XG4gICAgICByZXR1cm4gdGhpcy5zYXhQYXJzZXIub25jZGF0YSA9IChmdW5jdGlvbihfdGhpcykge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24odGV4dCkge1xuICAgICAgICAgIHZhciBzO1xuICAgICAgICAgIHMgPSBvbnRleHQodGV4dCk7XG4gICAgICAgICAgaWYgKHMpIHtcbiAgICAgICAgICAgIHJldHVybiBzLmNkYXRhID0gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICB9KSh0aGlzKTtcbiAgICB9O1xuXG4gICAgUGFyc2VyLnByb3RvdHlwZS5wYXJzZVN0cmluZyA9IGZ1bmN0aW9uKHN0ciwgY2IpIHtcbiAgICAgIHZhciBlcnI7XG4gICAgICBpZiAoKGNiICE9IG51bGwpICYmIHR5cGVvZiBjYiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHRoaXMub24oXCJlbmRcIiwgZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgICAgICAgdGhpcy5yZXNldCgpO1xuICAgICAgICAgIHJldHVybiBjYihudWxsLCByZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5vbihcImVycm9yXCIsIGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgIHRoaXMucmVzZXQoKTtcbiAgICAgICAgICByZXR1cm4gY2IoZXJyKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICB0cnkge1xuICAgICAgICBzdHIgPSBzdHIudG9TdHJpbmcoKTtcbiAgICAgICAgaWYgKHN0ci50cmltKCkgPT09ICcnKSB7XG4gICAgICAgICAgdGhpcy5lbWl0KFwiZW5kXCIsIG51bGwpO1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHN0ciA9IGJvbS5zdHJpcEJPTShzdHIpO1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmFzeW5jKSB7XG4gICAgICAgICAgdGhpcy5yZW1haW5pbmcgPSBzdHI7XG4gICAgICAgICAgc2V0SW1tZWRpYXRlKHRoaXMucHJvY2Vzc0FzeW5jKTtcbiAgICAgICAgICByZXR1cm4gdGhpcy5zYXhQYXJzZXI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuc2F4UGFyc2VyLndyaXRlKHN0cikuY2xvc2UoKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yMSkge1xuICAgICAgICBlcnIgPSBlcnJvcjE7XG4gICAgICAgIGlmICghKHRoaXMuc2F4UGFyc2VyLmVyclRocm93biB8fCB0aGlzLnNheFBhcnNlci5lbmRlZCkpIHtcbiAgICAgICAgICB0aGlzLmVtaXQoJ2Vycm9yJywgZXJyKTtcbiAgICAgICAgICByZXR1cm4gdGhpcy5zYXhQYXJzZXIuZXJyVGhyb3duID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnNheFBhcnNlci5lbmRlZCkge1xuICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICByZXR1cm4gUGFyc2VyO1xuXG4gIH0pKGV2ZW50cy5FdmVudEVtaXR0ZXIpO1xuXG4gIGV4cG9ydHMucGFyc2VTdHJpbmcgPSBmdW5jdGlvbihzdHIsIGEsIGIpIHtcbiAgICB2YXIgY2IsIG9wdGlvbnMsIHBhcnNlcjtcbiAgICBpZiAoYiAhPSBudWxsKSB7XG4gICAgICBpZiAodHlwZW9mIGIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgY2IgPSBiO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBhID09PSAnb2JqZWN0Jykge1xuICAgICAgICBvcHRpb25zID0gYTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHR5cGVvZiBhID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGNiID0gYTtcbiAgICAgIH1cbiAgICAgIG9wdGlvbnMgPSB7fTtcbiAgICB9XG4gICAgcGFyc2VyID0gbmV3IGV4cG9ydHMuUGFyc2VyKG9wdGlvbnMpO1xuICAgIHJldHVybiBwYXJzZXIucGFyc2VTdHJpbmcoc3RyLCBjYik7XG4gIH07XG5cbn0pLmNhbGwodGhpcyk7XG4iLCIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuMTIuN1xuKGZ1bmN0aW9uKCkge1xuICBcInVzZSBzdHJpY3RcIjtcbiAgdmFyIHByZWZpeE1hdGNoO1xuXG4gIHByZWZpeE1hdGNoID0gbmV3IFJlZ0V4cCgvKD8heG1sbnMpXi4qOi8pO1xuXG4gIGV4cG9ydHMubm9ybWFsaXplID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgcmV0dXJuIHN0ci50b0xvd2VyQ2FzZSgpO1xuICB9O1xuXG4gIGV4cG9ydHMuZmlyc3RDaGFyTG93ZXJDYXNlID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgcmV0dXJuIHN0ci5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKSArIHN0ci5zbGljZSgxKTtcbiAgfTtcblxuICBleHBvcnRzLnN0cmlwUHJlZml4ID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgcmV0dXJuIHN0ci5yZXBsYWNlKHByZWZpeE1hdGNoLCAnJyk7XG4gIH07XG5cbiAgZXhwb3J0cy5wYXJzZU51bWJlcnMgPSBmdW5jdGlvbihzdHIpIHtcbiAgICBpZiAoIWlzTmFOKHN0cikpIHtcbiAgICAgIHN0ciA9IHN0ciAlIDEgPT09IDAgPyBwYXJzZUludChzdHIsIDEwKSA6IHBhcnNlRmxvYXQoc3RyKTtcbiAgICB9XG4gICAgcmV0dXJuIHN0cjtcbiAgfTtcblxuICBleHBvcnRzLnBhcnNlQm9vbGVhbnMgPSBmdW5jdGlvbihzdHIpIHtcbiAgICBpZiAoL14oPzp0cnVlfGZhbHNlKSQvaS50ZXN0KHN0cikpIHtcbiAgICAgIHN0ciA9IHN0ci50b0xvd2VyQ2FzZSgpID09PSAndHJ1ZSc7XG4gICAgfVxuICAgIHJldHVybiBzdHI7XG4gIH07XG5cbn0pLmNhbGwodGhpcyk7XG4iLCIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuMTIuN1xuKGZ1bmN0aW9uKCkge1xuICBcInVzZSBzdHJpY3RcIjtcbiAgdmFyIGJ1aWxkZXIsIGRlZmF1bHRzLCBwYXJzZXIsIHByb2Nlc3NvcnMsXG4gICAgZXh0ZW5kID0gZnVuY3Rpb24oY2hpbGQsIHBhcmVudCkgeyBmb3IgKHZhciBrZXkgaW4gcGFyZW50KSB7IGlmIChoYXNQcm9wLmNhbGwocGFyZW50LCBrZXkpKSBjaGlsZFtrZXldID0gcGFyZW50W2tleV07IH0gZnVuY3Rpb24gY3RvcigpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGNoaWxkOyB9IGN0b3IucHJvdG90eXBlID0gcGFyZW50LnByb3RvdHlwZTsgY2hpbGQucHJvdG90eXBlID0gbmV3IGN0b3IoKTsgY2hpbGQuX19zdXBlcl9fID0gcGFyZW50LnByb3RvdHlwZTsgcmV0dXJuIGNoaWxkOyB9LFxuICAgIGhhc1Byb3AgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuICBkZWZhdWx0cyA9IHJlcXVpcmUoJy4vZGVmYXVsdHMnKTtcblxuICBidWlsZGVyID0gcmVxdWlyZSgnLi9idWlsZGVyJyk7XG5cbiAgcGFyc2VyID0gcmVxdWlyZSgnLi9wYXJzZXInKTtcblxuICBwcm9jZXNzb3JzID0gcmVxdWlyZSgnLi9wcm9jZXNzb3JzJyk7XG5cbiAgZXhwb3J0cy5kZWZhdWx0cyA9IGRlZmF1bHRzLmRlZmF1bHRzO1xuXG4gIGV4cG9ydHMucHJvY2Vzc29ycyA9IHByb2Nlc3NvcnM7XG5cbiAgZXhwb3J0cy5WYWxpZGF0aW9uRXJyb3IgPSAoZnVuY3Rpb24oc3VwZXJDbGFzcykge1xuICAgIGV4dGVuZChWYWxpZGF0aW9uRXJyb3IsIHN1cGVyQ2xhc3MpO1xuXG4gICAgZnVuY3Rpb24gVmFsaWRhdGlvbkVycm9yKG1lc3NhZ2UpIHtcbiAgICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIFZhbGlkYXRpb25FcnJvcjtcblxuICB9KShFcnJvcik7XG5cbiAgZXhwb3J0cy5CdWlsZGVyID0gYnVpbGRlci5CdWlsZGVyO1xuXG4gIGV4cG9ydHMuUGFyc2VyID0gcGFyc2VyLlBhcnNlcjtcblxuICBleHBvcnRzLnBhcnNlU3RyaW5nID0gcGFyc2VyLnBhcnNlU3RyaW5nO1xuXG59KS5jYWxsKHRoaXMpO1xuIiwiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbihmdW5jdGlvbigpIHtcbiAgdmFyIGFzc2lnbiwgaXNBcnJheSwgaXNFbXB0eSwgaXNGdW5jdGlvbiwgaXNPYmplY3QsIGlzUGxhaW5PYmplY3QsXG4gICAgc2xpY2UgPSBbXS5zbGljZSxcbiAgICBoYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHk7XG5cbiAgYXNzaWduID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGksIGtleSwgbGVuLCBzb3VyY2UsIHNvdXJjZXMsIHRhcmdldDtcbiAgICB0YXJnZXQgPSBhcmd1bWVudHNbMF0sIHNvdXJjZXMgPSAyIDw9IGFyZ3VtZW50cy5sZW5ndGggPyBzbGljZS5jYWxsKGFyZ3VtZW50cywgMSkgOiBbXTtcbiAgICBpZiAoaXNGdW5jdGlvbihPYmplY3QuYXNzaWduKSkge1xuICAgICAgT2JqZWN0LmFzc2lnbi5hcHBseShudWxsLCBhcmd1bWVudHMpO1xuICAgIH0gZWxzZSB7XG4gICAgICBmb3IgKGkgPSAwLCBsZW4gPSBzb3VyY2VzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgIHNvdXJjZSA9IHNvdXJjZXNbaV07XG4gICAgICAgIGlmIChzb3VyY2UgIT0gbnVsbCkge1xuICAgICAgICAgIGZvciAoa2V5IGluIHNvdXJjZSkge1xuICAgICAgICAgICAgaWYgKCFoYXNQcm9wLmNhbGwoc291cmNlLCBrZXkpKSBjb250aW51ZTtcbiAgICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgaXNGdW5jdGlvbiA9IGZ1bmN0aW9uKHZhbCkge1xuICAgIHJldHVybiAhIXZhbCAmJiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcbiAgfTtcblxuICBpc09iamVjdCA9IGZ1bmN0aW9uKHZhbCkge1xuICAgIHZhciByZWY7XG4gICAgcmV0dXJuICEhdmFsICYmICgocmVmID0gdHlwZW9mIHZhbCkgPT09ICdmdW5jdGlvbicgfHwgcmVmID09PSAnb2JqZWN0Jyk7XG4gIH07XG5cbiAgaXNBcnJheSA9IGZ1bmN0aW9uKHZhbCkge1xuICAgIGlmIChpc0Z1bmN0aW9uKEFycmF5LmlzQXJyYXkpKSB7XG4gICAgICByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWwpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IEFycmF5XSc7XG4gICAgfVxuICB9O1xuXG4gIGlzRW1wdHkgPSBmdW5jdGlvbih2YWwpIHtcbiAgICB2YXIga2V5O1xuICAgIGlmIChpc0FycmF5KHZhbCkpIHtcbiAgICAgIHJldHVybiAhdmFsLmxlbmd0aDtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9yIChrZXkgaW4gdmFsKSB7XG4gICAgICAgIGlmICghaGFzUHJvcC5jYWxsKHZhbCwga2V5KSkgY29udGludWU7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfTtcblxuICBpc1BsYWluT2JqZWN0ID0gZnVuY3Rpb24odmFsKSB7XG4gICAgdmFyIGN0b3IsIHByb3RvO1xuICAgIHJldHVybiBpc09iamVjdCh2YWwpICYmIChwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZih2YWwpKSAmJiAoY3RvciA9IHByb3RvLmNvbnN0cnVjdG9yKSAmJiAodHlwZW9mIGN0b3IgPT09ICdmdW5jdGlvbicpICYmIChjdG9yIGluc3RhbmNlb2YgY3RvcikgJiYgKEZ1bmN0aW9uLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGN0b3IpID09PSBGdW5jdGlvbi5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChPYmplY3QpKTtcbiAgfTtcblxuICBtb2R1bGUuZXhwb3J0cy5hc3NpZ24gPSBhc3NpZ247XG5cbiAgbW9kdWxlLmV4cG9ydHMuaXNGdW5jdGlvbiA9IGlzRnVuY3Rpb247XG5cbiAgbW9kdWxlLmV4cG9ydHMuaXNPYmplY3QgPSBpc09iamVjdDtcblxuICBtb2R1bGUuZXhwb3J0cy5pc0FycmF5ID0gaXNBcnJheTtcblxuICBtb2R1bGUuZXhwb3J0cy5pc0VtcHR5ID0gaXNFbXB0eTtcblxuICBtb2R1bGUuZXhwb3J0cy5pc1BsYWluT2JqZWN0ID0gaXNQbGFpbk9iamVjdDtcblxufSkuY2FsbCh0aGlzKTtcbiIsIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBYTUxBdHRyaWJ1dGU7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBYTUxBdHRyaWJ1dGUgPSAoZnVuY3Rpb24oKSB7XG4gICAgZnVuY3Rpb24gWE1MQXR0cmlidXRlKHBhcmVudCwgbmFtZSwgdmFsdWUpIHtcbiAgICAgIHRoaXMub3B0aW9ucyA9IHBhcmVudC5vcHRpb25zO1xuICAgICAgdGhpcy5zdHJpbmdpZnkgPSBwYXJlbnQuc3RyaW5naWZ5O1xuICAgICAgaWYgKG5hbWUgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIGF0dHJpYnV0ZSBuYW1lIG9mIGVsZW1lbnQgXCIgKyBwYXJlbnQubmFtZSk7XG4gICAgICB9XG4gICAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIGF0dHJpYnV0ZSB2YWx1ZSBmb3IgYXR0cmlidXRlIFwiICsgbmFtZSArIFwiIG9mIGVsZW1lbnQgXCIgKyBwYXJlbnQubmFtZSk7XG4gICAgICB9XG4gICAgICB0aGlzLm5hbWUgPSB0aGlzLnN0cmluZ2lmeS5hdHROYW1lKG5hbWUpO1xuICAgICAgdGhpcy52YWx1ZSA9IHRoaXMuc3RyaW5naWZ5LmF0dFZhbHVlKHZhbHVlKTtcbiAgICB9XG5cbiAgICBYTUxBdHRyaWJ1dGUucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gT2JqZWN0LmNyZWF0ZSh0aGlzKTtcbiAgICB9O1xuXG4gICAgWE1MQXR0cmlidXRlLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMud3JpdGVyLnNldChvcHRpb25zKS5hdHRyaWJ1dGUodGhpcyk7XG4gICAgfTtcblxuICAgIHJldHVybiBYTUxBdHRyaWJ1dGU7XG5cbiAgfSkoKTtcblxufSkuY2FsbCh0aGlzKTtcbiIsIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBYTUxDRGF0YSwgWE1MTm9kZSxcbiAgICBleHRlbmQgPSBmdW5jdGlvbihjaGlsZCwgcGFyZW50KSB7IGZvciAodmFyIGtleSBpbiBwYXJlbnQpIHsgaWYgKGhhc1Byb3AuY2FsbChwYXJlbnQsIGtleSkpIGNoaWxkW2tleV0gPSBwYXJlbnRba2V5XTsgfSBmdW5jdGlvbiBjdG9yKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7IH0gY3Rvci5wcm90b3R5cGUgPSBwYXJlbnQucHJvdG90eXBlOyBjaGlsZC5wcm90b3R5cGUgPSBuZXcgY3RvcigpOyBjaGlsZC5fX3N1cGVyX18gPSBwYXJlbnQucHJvdG90eXBlOyByZXR1cm4gY2hpbGQ7IH0sXG4gICAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5O1xuXG4gIFhNTE5vZGUgPSByZXF1aXJlKCcuL1hNTE5vZGUnKTtcblxuICBtb2R1bGUuZXhwb3J0cyA9IFhNTENEYXRhID0gKGZ1bmN0aW9uKHN1cGVyQ2xhc3MpIHtcbiAgICBleHRlbmQoWE1MQ0RhdGEsIHN1cGVyQ2xhc3MpO1xuXG4gICAgZnVuY3Rpb24gWE1MQ0RhdGEocGFyZW50LCB0ZXh0KSB7XG4gICAgICBYTUxDRGF0YS5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBwYXJlbnQpO1xuICAgICAgaWYgKHRleHQgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIENEQVRBIHRleHRcIik7XG4gICAgICB9XG4gICAgICB0aGlzLnRleHQgPSB0aGlzLnN0cmluZ2lmeS5jZGF0YSh0ZXh0KTtcbiAgICB9XG5cbiAgICBYTUxDRGF0YS5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBPYmplY3QuY3JlYXRlKHRoaXMpO1xuICAgIH07XG5cbiAgICBYTUxDRGF0YS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLndyaXRlci5zZXQob3B0aW9ucykuY2RhdGEodGhpcyk7XG4gICAgfTtcblxuICAgIHJldHVybiBYTUxDRGF0YTtcblxuICB9KShYTUxOb2RlKTtcblxufSkuY2FsbCh0aGlzKTtcbiIsIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBYTUxDb21tZW50LCBYTUxOb2RlLFxuICAgIGV4dGVuZCA9IGZ1bmN0aW9uKGNoaWxkLCBwYXJlbnQpIHsgZm9yICh2YXIga2V5IGluIHBhcmVudCkgeyBpZiAoaGFzUHJvcC5jYWxsKHBhcmVudCwga2V5KSkgY2hpbGRba2V5XSA9IHBhcmVudFtrZXldOyB9IGZ1bmN0aW9uIGN0b3IoKSB7IHRoaXMuY29uc3RydWN0b3IgPSBjaGlsZDsgfSBjdG9yLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7IGNoaWxkLnByb3RvdHlwZSA9IG5ldyBjdG9yKCk7IGNoaWxkLl9fc3VwZXJfXyA9IHBhcmVudC5wcm90b3R5cGU7IHJldHVybiBjaGlsZDsgfSxcbiAgICBoYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHk7XG5cbiAgWE1MTm9kZSA9IHJlcXVpcmUoJy4vWE1MTm9kZScpO1xuXG4gIG1vZHVsZS5leHBvcnRzID0gWE1MQ29tbWVudCA9IChmdW5jdGlvbihzdXBlckNsYXNzKSB7XG4gICAgZXh0ZW5kKFhNTENvbW1lbnQsIHN1cGVyQ2xhc3MpO1xuXG4gICAgZnVuY3Rpb24gWE1MQ29tbWVudChwYXJlbnQsIHRleHQpIHtcbiAgICAgIFhNTENvbW1lbnQuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgcGFyZW50KTtcbiAgICAgIGlmICh0ZXh0ID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyBjb21tZW50IHRleHRcIik7XG4gICAgICB9XG4gICAgICB0aGlzLnRleHQgPSB0aGlzLnN0cmluZ2lmeS5jb21tZW50KHRleHQpO1xuICAgIH1cblxuICAgIFhNTENvbW1lbnQucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gT2JqZWN0LmNyZWF0ZSh0aGlzKTtcbiAgICB9O1xuXG4gICAgWE1MQ29tbWVudC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLndyaXRlci5zZXQob3B0aW9ucykuY29tbWVudCh0aGlzKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIFhNTENvbW1lbnQ7XG5cbiAgfSkoWE1MTm9kZSk7XG5cbn0pLmNhbGwodGhpcyk7XG4iLCIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuMTIuN1xuKGZ1bmN0aW9uKCkge1xuICB2YXIgWE1MRFREQXR0TGlzdCwgWE1MTm9kZSxcbiAgICBleHRlbmQgPSBmdW5jdGlvbihjaGlsZCwgcGFyZW50KSB7IGZvciAodmFyIGtleSBpbiBwYXJlbnQpIHsgaWYgKGhhc1Byb3AuY2FsbChwYXJlbnQsIGtleSkpIGNoaWxkW2tleV0gPSBwYXJlbnRba2V5XTsgfSBmdW5jdGlvbiBjdG9yKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7IH0gY3Rvci5wcm90b3R5cGUgPSBwYXJlbnQucHJvdG90eXBlOyBjaGlsZC5wcm90b3R5cGUgPSBuZXcgY3RvcigpOyBjaGlsZC5fX3N1cGVyX18gPSBwYXJlbnQucHJvdG90eXBlOyByZXR1cm4gY2hpbGQ7IH0sXG4gICAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5O1xuXG4gIFhNTE5vZGUgPSByZXF1aXJlKCcuL1hNTE5vZGUnKTtcblxuICBtb2R1bGUuZXhwb3J0cyA9IFhNTERUREF0dExpc3QgPSAoZnVuY3Rpb24oc3VwZXJDbGFzcykge1xuICAgIGV4dGVuZChYTUxEVERBdHRMaXN0LCBzdXBlckNsYXNzKTtcblxuICAgIGZ1bmN0aW9uIFhNTERUREF0dExpc3QocGFyZW50LCBlbGVtZW50TmFtZSwgYXR0cmlidXRlTmFtZSwgYXR0cmlidXRlVHlwZSwgZGVmYXVsdFZhbHVlVHlwZSwgZGVmYXVsdFZhbHVlKSB7XG4gICAgICBYTUxEVERBdHRMaXN0Ll9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsIHBhcmVudCk7XG4gICAgICBpZiAoZWxlbWVudE5hbWUgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIERURCBlbGVtZW50IG5hbWVcIik7XG4gICAgICB9XG4gICAgICBpZiAoYXR0cmlidXRlTmFtZSA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgRFREIGF0dHJpYnV0ZSBuYW1lXCIpO1xuICAgICAgfVxuICAgICAgaWYgKCFhdHRyaWJ1dGVUeXBlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgRFREIGF0dHJpYnV0ZSB0eXBlXCIpO1xuICAgICAgfVxuICAgICAgaWYgKCFkZWZhdWx0VmFsdWVUeXBlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgRFREIGF0dHJpYnV0ZSBkZWZhdWx0XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGRlZmF1bHRWYWx1ZVR5cGUuaW5kZXhPZignIycpICE9PSAwKSB7XG4gICAgICAgIGRlZmF1bHRWYWx1ZVR5cGUgPSAnIycgKyBkZWZhdWx0VmFsdWVUeXBlO1xuICAgICAgfVxuICAgICAgaWYgKCFkZWZhdWx0VmFsdWVUeXBlLm1hdGNoKC9eKCNSRVFVSVJFRHwjSU1QTElFRHwjRklYRUR8I0RFRkFVTFQpJC8pKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgZGVmYXVsdCB2YWx1ZSB0eXBlOyBleHBlY3RlZDogI1JFUVVJUkVELCAjSU1QTElFRCwgI0ZJWEVEIG9yICNERUZBVUxUXCIpO1xuICAgICAgfVxuICAgICAgaWYgKGRlZmF1bHRWYWx1ZSAmJiAhZGVmYXVsdFZhbHVlVHlwZS5tYXRjaCgvXigjRklYRUR8I0RFRkFVTFQpJC8pKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkRlZmF1bHQgdmFsdWUgb25seSBhcHBsaWVzIHRvICNGSVhFRCBvciAjREVGQVVMVFwiKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuZWxlbWVudE5hbWUgPSB0aGlzLnN0cmluZ2lmeS5lbGVOYW1lKGVsZW1lbnROYW1lKTtcbiAgICAgIHRoaXMuYXR0cmlidXRlTmFtZSA9IHRoaXMuc3RyaW5naWZ5LmF0dE5hbWUoYXR0cmlidXRlTmFtZSk7XG4gICAgICB0aGlzLmF0dHJpYnV0ZVR5cGUgPSB0aGlzLnN0cmluZ2lmeS5kdGRBdHRUeXBlKGF0dHJpYnV0ZVR5cGUpO1xuICAgICAgdGhpcy5kZWZhdWx0VmFsdWUgPSB0aGlzLnN0cmluZ2lmeS5kdGRBdHREZWZhdWx0KGRlZmF1bHRWYWx1ZSk7XG4gICAgICB0aGlzLmRlZmF1bHRWYWx1ZVR5cGUgPSBkZWZhdWx0VmFsdWVUeXBlO1xuICAgIH1cblxuICAgIFhNTERUREF0dExpc3QucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy53cml0ZXIuc2V0KG9wdGlvbnMpLmR0ZEF0dExpc3QodGhpcyk7XG4gICAgfTtcblxuICAgIHJldHVybiBYTUxEVERBdHRMaXN0O1xuXG4gIH0pKFhNTE5vZGUpO1xuXG59KS5jYWxsKHRoaXMpO1xuIiwiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbihmdW5jdGlvbigpIHtcbiAgdmFyIFhNTERUREVsZW1lbnQsIFhNTE5vZGUsXG4gICAgZXh0ZW5kID0gZnVuY3Rpb24oY2hpbGQsIHBhcmVudCkgeyBmb3IgKHZhciBrZXkgaW4gcGFyZW50KSB7IGlmIChoYXNQcm9wLmNhbGwocGFyZW50LCBrZXkpKSBjaGlsZFtrZXldID0gcGFyZW50W2tleV07IH0gZnVuY3Rpb24gY3RvcigpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGNoaWxkOyB9IGN0b3IucHJvdG90eXBlID0gcGFyZW50LnByb3RvdHlwZTsgY2hpbGQucHJvdG90eXBlID0gbmV3IGN0b3IoKTsgY2hpbGQuX19zdXBlcl9fID0gcGFyZW50LnByb3RvdHlwZTsgcmV0dXJuIGNoaWxkOyB9LFxuICAgIGhhc1Byb3AgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuICBYTUxOb2RlID0gcmVxdWlyZSgnLi9YTUxOb2RlJyk7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBYTUxEVERFbGVtZW50ID0gKGZ1bmN0aW9uKHN1cGVyQ2xhc3MpIHtcbiAgICBleHRlbmQoWE1MRFRERWxlbWVudCwgc3VwZXJDbGFzcyk7XG5cbiAgICBmdW5jdGlvbiBYTUxEVERFbGVtZW50KHBhcmVudCwgbmFtZSwgdmFsdWUpIHtcbiAgICAgIFhNTERUREVsZW1lbnQuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgcGFyZW50KTtcbiAgICAgIGlmIChuYW1lID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyBEVEQgZWxlbWVudCBuYW1lXCIpO1xuICAgICAgfVxuICAgICAgaWYgKCF2YWx1ZSkge1xuICAgICAgICB2YWx1ZSA9ICcoI1BDREFUQSknO1xuICAgICAgfVxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgIHZhbHVlID0gJygnICsgdmFsdWUuam9pbignLCcpICsgJyknO1xuICAgICAgfVxuICAgICAgdGhpcy5uYW1lID0gdGhpcy5zdHJpbmdpZnkuZWxlTmFtZShuYW1lKTtcbiAgICAgIHRoaXMudmFsdWUgPSB0aGlzLnN0cmluZ2lmeS5kdGRFbGVtZW50VmFsdWUodmFsdWUpO1xuICAgIH1cblxuICAgIFhNTERUREVsZW1lbnQucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy53cml0ZXIuc2V0KG9wdGlvbnMpLmR0ZEVsZW1lbnQodGhpcyk7XG4gICAgfTtcblxuICAgIHJldHVybiBYTUxEVERFbGVtZW50O1xuXG4gIH0pKFhNTE5vZGUpO1xuXG59KS5jYWxsKHRoaXMpO1xuIiwiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbihmdW5jdGlvbigpIHtcbiAgdmFyIFhNTERUREVudGl0eSwgWE1MTm9kZSwgaXNPYmplY3QsXG4gICAgZXh0ZW5kID0gZnVuY3Rpb24oY2hpbGQsIHBhcmVudCkgeyBmb3IgKHZhciBrZXkgaW4gcGFyZW50KSB7IGlmIChoYXNQcm9wLmNhbGwocGFyZW50LCBrZXkpKSBjaGlsZFtrZXldID0gcGFyZW50W2tleV07IH0gZnVuY3Rpb24gY3RvcigpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGNoaWxkOyB9IGN0b3IucHJvdG90eXBlID0gcGFyZW50LnByb3RvdHlwZTsgY2hpbGQucHJvdG90eXBlID0gbmV3IGN0b3IoKTsgY2hpbGQuX19zdXBlcl9fID0gcGFyZW50LnByb3RvdHlwZTsgcmV0dXJuIGNoaWxkOyB9LFxuICAgIGhhc1Byb3AgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuICBpc09iamVjdCA9IHJlcXVpcmUoJy4vVXRpbGl0eScpLmlzT2JqZWN0O1xuXG4gIFhNTE5vZGUgPSByZXF1aXJlKCcuL1hNTE5vZGUnKTtcblxuICBtb2R1bGUuZXhwb3J0cyA9IFhNTERUREVudGl0eSA9IChmdW5jdGlvbihzdXBlckNsYXNzKSB7XG4gICAgZXh0ZW5kKFhNTERUREVudGl0eSwgc3VwZXJDbGFzcyk7XG5cbiAgICBmdW5jdGlvbiBYTUxEVERFbnRpdHkocGFyZW50LCBwZSwgbmFtZSwgdmFsdWUpIHtcbiAgICAgIFhNTERUREVudGl0eS5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBwYXJlbnQpO1xuICAgICAgaWYgKG5hbWUgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIGVudGl0eSBuYW1lXCIpO1xuICAgICAgfVxuICAgICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyBlbnRpdHkgdmFsdWVcIik7XG4gICAgICB9XG4gICAgICB0aGlzLnBlID0gISFwZTtcbiAgICAgIHRoaXMubmFtZSA9IHRoaXMuc3RyaW5naWZ5LmVsZU5hbWUobmFtZSk7XG4gICAgICBpZiAoIWlzT2JqZWN0KHZhbHVlKSkge1xuICAgICAgICB0aGlzLnZhbHVlID0gdGhpcy5zdHJpbmdpZnkuZHRkRW50aXR5VmFsdWUodmFsdWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKCF2YWx1ZS5wdWJJRCAmJiAhdmFsdWUuc3lzSUQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJQdWJsaWMgYW5kL29yIHN5c3RlbSBpZGVudGlmaWVycyBhcmUgcmVxdWlyZWQgZm9yIGFuIGV4dGVybmFsIGVudGl0eVwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsdWUucHViSUQgJiYgIXZhbHVlLnN5c0lEKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU3lzdGVtIGlkZW50aWZpZXIgaXMgcmVxdWlyZWQgZm9yIGEgcHVibGljIGV4dGVybmFsIGVudGl0eVwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsdWUucHViSUQgIT0gbnVsbCkge1xuICAgICAgICAgIHRoaXMucHViSUQgPSB0aGlzLnN0cmluZ2lmeS5kdGRQdWJJRCh2YWx1ZS5wdWJJRCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlLnN5c0lEICE9IG51bGwpIHtcbiAgICAgICAgICB0aGlzLnN5c0lEID0gdGhpcy5zdHJpbmdpZnkuZHRkU3lzSUQodmFsdWUuc3lzSUQpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh2YWx1ZS5uRGF0YSAhPSBudWxsKSB7XG4gICAgICAgICAgdGhpcy5uRGF0YSA9IHRoaXMuc3RyaW5naWZ5LmR0ZE5EYXRhKHZhbHVlLm5EYXRhKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5wZSAmJiB0aGlzLm5EYXRhKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90YXRpb24gZGVjbGFyYXRpb24gaXMgbm90IGFsbG93ZWQgaW4gYSBwYXJhbWV0ZXIgZW50aXR5XCIpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgWE1MRFRERW50aXR5LnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMud3JpdGVyLnNldChvcHRpb25zKS5kdGRFbnRpdHkodGhpcyk7XG4gICAgfTtcblxuICAgIHJldHVybiBYTUxEVERFbnRpdHk7XG5cbiAgfSkoWE1MTm9kZSk7XG5cbn0pLmNhbGwodGhpcyk7XG4iLCIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuMTIuN1xuKGZ1bmN0aW9uKCkge1xuICB2YXIgWE1MRFRETm90YXRpb24sIFhNTE5vZGUsXG4gICAgZXh0ZW5kID0gZnVuY3Rpb24oY2hpbGQsIHBhcmVudCkgeyBmb3IgKHZhciBrZXkgaW4gcGFyZW50KSB7IGlmIChoYXNQcm9wLmNhbGwocGFyZW50LCBrZXkpKSBjaGlsZFtrZXldID0gcGFyZW50W2tleV07IH0gZnVuY3Rpb24gY3RvcigpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGNoaWxkOyB9IGN0b3IucHJvdG90eXBlID0gcGFyZW50LnByb3RvdHlwZTsgY2hpbGQucHJvdG90eXBlID0gbmV3IGN0b3IoKTsgY2hpbGQuX19zdXBlcl9fID0gcGFyZW50LnByb3RvdHlwZTsgcmV0dXJuIGNoaWxkOyB9LFxuICAgIGhhc1Byb3AgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuICBYTUxOb2RlID0gcmVxdWlyZSgnLi9YTUxOb2RlJyk7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBYTUxEVEROb3RhdGlvbiA9IChmdW5jdGlvbihzdXBlckNsYXNzKSB7XG4gICAgZXh0ZW5kKFhNTERURE5vdGF0aW9uLCBzdXBlckNsYXNzKTtcblxuICAgIGZ1bmN0aW9uIFhNTERURE5vdGF0aW9uKHBhcmVudCwgbmFtZSwgdmFsdWUpIHtcbiAgICAgIFhNTERURE5vdGF0aW9uLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsIHBhcmVudCk7XG4gICAgICBpZiAobmFtZSA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1pc3Npbmcgbm90YXRpb24gbmFtZVwiKTtcbiAgICAgIH1cbiAgICAgIGlmICghdmFsdWUucHViSUQgJiYgIXZhbHVlLnN5c0lEKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlB1YmxpYyBvciBzeXN0ZW0gaWRlbnRpZmllcnMgYXJlIHJlcXVpcmVkIGZvciBhbiBleHRlcm5hbCBlbnRpdHlcIik7XG4gICAgICB9XG4gICAgICB0aGlzLm5hbWUgPSB0aGlzLnN0cmluZ2lmeS5lbGVOYW1lKG5hbWUpO1xuICAgICAgaWYgKHZhbHVlLnB1YklEICE9IG51bGwpIHtcbiAgICAgICAgdGhpcy5wdWJJRCA9IHRoaXMuc3RyaW5naWZ5LmR0ZFB1YklEKHZhbHVlLnB1YklEKTtcbiAgICAgIH1cbiAgICAgIGlmICh2YWx1ZS5zeXNJRCAhPSBudWxsKSB7XG4gICAgICAgIHRoaXMuc3lzSUQgPSB0aGlzLnN0cmluZ2lmeS5kdGRTeXNJRCh2YWx1ZS5zeXNJRCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgWE1MRFRETm90YXRpb24ucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy53cml0ZXIuc2V0KG9wdGlvbnMpLmR0ZE5vdGF0aW9uKHRoaXMpO1xuICAgIH07XG5cbiAgICByZXR1cm4gWE1MRFRETm90YXRpb247XG5cbiAgfSkoWE1MTm9kZSk7XG5cbn0pLmNhbGwodGhpcyk7XG4iLCIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuMTIuN1xuKGZ1bmN0aW9uKCkge1xuICB2YXIgWE1MRGVjbGFyYXRpb24sIFhNTE5vZGUsIGlzT2JqZWN0LFxuICAgIGV4dGVuZCA9IGZ1bmN0aW9uKGNoaWxkLCBwYXJlbnQpIHsgZm9yICh2YXIga2V5IGluIHBhcmVudCkgeyBpZiAoaGFzUHJvcC5jYWxsKHBhcmVudCwga2V5KSkgY2hpbGRba2V5XSA9IHBhcmVudFtrZXldOyB9IGZ1bmN0aW9uIGN0b3IoKSB7IHRoaXMuY29uc3RydWN0b3IgPSBjaGlsZDsgfSBjdG9yLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7IGNoaWxkLnByb3RvdHlwZSA9IG5ldyBjdG9yKCk7IGNoaWxkLl9fc3VwZXJfXyA9IHBhcmVudC5wcm90b3R5cGU7IHJldHVybiBjaGlsZDsgfSxcbiAgICBoYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHk7XG5cbiAgaXNPYmplY3QgPSByZXF1aXJlKCcuL1V0aWxpdHknKS5pc09iamVjdDtcblxuICBYTUxOb2RlID0gcmVxdWlyZSgnLi9YTUxOb2RlJyk7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBYTUxEZWNsYXJhdGlvbiA9IChmdW5jdGlvbihzdXBlckNsYXNzKSB7XG4gICAgZXh0ZW5kKFhNTERlY2xhcmF0aW9uLCBzdXBlckNsYXNzKTtcblxuICAgIGZ1bmN0aW9uIFhNTERlY2xhcmF0aW9uKHBhcmVudCwgdmVyc2lvbiwgZW5jb2RpbmcsIHN0YW5kYWxvbmUpIHtcbiAgICAgIHZhciByZWY7XG4gICAgICBYTUxEZWNsYXJhdGlvbi5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBwYXJlbnQpO1xuICAgICAgaWYgKGlzT2JqZWN0KHZlcnNpb24pKSB7XG4gICAgICAgIHJlZiA9IHZlcnNpb24sIHZlcnNpb24gPSByZWYudmVyc2lvbiwgZW5jb2RpbmcgPSByZWYuZW5jb2RpbmcsIHN0YW5kYWxvbmUgPSByZWYuc3RhbmRhbG9uZTtcbiAgICAgIH1cbiAgICAgIGlmICghdmVyc2lvbikge1xuICAgICAgICB2ZXJzaW9uID0gJzEuMCc7XG4gICAgICB9XG4gICAgICB0aGlzLnZlcnNpb24gPSB0aGlzLnN0cmluZ2lmeS54bWxWZXJzaW9uKHZlcnNpb24pO1xuICAgICAgaWYgKGVuY29kaW5nICE9IG51bGwpIHtcbiAgICAgICAgdGhpcy5lbmNvZGluZyA9IHRoaXMuc3RyaW5naWZ5LnhtbEVuY29kaW5nKGVuY29kaW5nKTtcbiAgICAgIH1cbiAgICAgIGlmIChzdGFuZGFsb25lICE9IG51bGwpIHtcbiAgICAgICAgdGhpcy5zdGFuZGFsb25lID0gdGhpcy5zdHJpbmdpZnkueG1sU3RhbmRhbG9uZShzdGFuZGFsb25lKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBYTUxEZWNsYXJhdGlvbi5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLndyaXRlci5zZXQob3B0aW9ucykuZGVjbGFyYXRpb24odGhpcyk7XG4gICAgfTtcblxuICAgIHJldHVybiBYTUxEZWNsYXJhdGlvbjtcblxuICB9KShYTUxOb2RlKTtcblxufSkuY2FsbCh0aGlzKTtcbiIsIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBYTUxEVERBdHRMaXN0LCBYTUxEVERFbGVtZW50LCBYTUxEVERFbnRpdHksIFhNTERURE5vdGF0aW9uLCBYTUxEb2NUeXBlLCBYTUxOb2RlLCBpc09iamVjdCxcbiAgICBleHRlbmQgPSBmdW5jdGlvbihjaGlsZCwgcGFyZW50KSB7IGZvciAodmFyIGtleSBpbiBwYXJlbnQpIHsgaWYgKGhhc1Byb3AuY2FsbChwYXJlbnQsIGtleSkpIGNoaWxkW2tleV0gPSBwYXJlbnRba2V5XTsgfSBmdW5jdGlvbiBjdG9yKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7IH0gY3Rvci5wcm90b3R5cGUgPSBwYXJlbnQucHJvdG90eXBlOyBjaGlsZC5wcm90b3R5cGUgPSBuZXcgY3RvcigpOyBjaGlsZC5fX3N1cGVyX18gPSBwYXJlbnQucHJvdG90eXBlOyByZXR1cm4gY2hpbGQ7IH0sXG4gICAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5O1xuXG4gIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9VdGlsaXR5JykuaXNPYmplY3Q7XG5cbiAgWE1MTm9kZSA9IHJlcXVpcmUoJy4vWE1MTm9kZScpO1xuXG4gIFhNTERUREF0dExpc3QgPSByZXF1aXJlKCcuL1hNTERUREF0dExpc3QnKTtcblxuICBYTUxEVERFbnRpdHkgPSByZXF1aXJlKCcuL1hNTERUREVudGl0eScpO1xuXG4gIFhNTERUREVsZW1lbnQgPSByZXF1aXJlKCcuL1hNTERUREVsZW1lbnQnKTtcblxuICBYTUxEVEROb3RhdGlvbiA9IHJlcXVpcmUoJy4vWE1MRFRETm90YXRpb24nKTtcblxuICBtb2R1bGUuZXhwb3J0cyA9IFhNTERvY1R5cGUgPSAoZnVuY3Rpb24oc3VwZXJDbGFzcykge1xuICAgIGV4dGVuZChYTUxEb2NUeXBlLCBzdXBlckNsYXNzKTtcblxuICAgIGZ1bmN0aW9uIFhNTERvY1R5cGUocGFyZW50LCBwdWJJRCwgc3lzSUQpIHtcbiAgICAgIHZhciByZWYsIHJlZjE7XG4gICAgICBYTUxEb2NUeXBlLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsIHBhcmVudCk7XG4gICAgICB0aGlzLmRvY3VtZW50T2JqZWN0ID0gcGFyZW50O1xuICAgICAgaWYgKGlzT2JqZWN0KHB1YklEKSkge1xuICAgICAgICByZWYgPSBwdWJJRCwgcHViSUQgPSByZWYucHViSUQsIHN5c0lEID0gcmVmLnN5c0lEO1xuICAgICAgfVxuICAgICAgaWYgKHN5c0lEID09IG51bGwpIHtcbiAgICAgICAgcmVmMSA9IFtwdWJJRCwgc3lzSURdLCBzeXNJRCA9IHJlZjFbMF0sIHB1YklEID0gcmVmMVsxXTtcbiAgICAgIH1cbiAgICAgIGlmIChwdWJJRCAhPSBudWxsKSB7XG4gICAgICAgIHRoaXMucHViSUQgPSB0aGlzLnN0cmluZ2lmeS5kdGRQdWJJRChwdWJJRCk7XG4gICAgICB9XG4gICAgICBpZiAoc3lzSUQgIT0gbnVsbCkge1xuICAgICAgICB0aGlzLnN5c0lEID0gdGhpcy5zdHJpbmdpZnkuZHRkU3lzSUQoc3lzSUQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIFhNTERvY1R5cGUucHJvdG90eXBlLmVsZW1lbnQgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgICAgdmFyIGNoaWxkO1xuICAgICAgY2hpbGQgPSBuZXcgWE1MRFRERWxlbWVudCh0aGlzLCBuYW1lLCB2YWx1ZSk7XG4gICAgICB0aGlzLmNoaWxkcmVuLnB1c2goY2hpbGQpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcblxuICAgIFhNTERvY1R5cGUucHJvdG90eXBlLmF0dExpc3QgPSBmdW5jdGlvbihlbGVtZW50TmFtZSwgYXR0cmlidXRlTmFtZSwgYXR0cmlidXRlVHlwZSwgZGVmYXVsdFZhbHVlVHlwZSwgZGVmYXVsdFZhbHVlKSB7XG4gICAgICB2YXIgY2hpbGQ7XG4gICAgICBjaGlsZCA9IG5ldyBYTUxEVERBdHRMaXN0KHRoaXMsIGVsZW1lbnROYW1lLCBhdHRyaWJ1dGVOYW1lLCBhdHRyaWJ1dGVUeXBlLCBkZWZhdWx0VmFsdWVUeXBlLCBkZWZhdWx0VmFsdWUpO1xuICAgICAgdGhpcy5jaGlsZHJlbi5wdXNoKGNoaWxkKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG5cbiAgICBYTUxEb2NUeXBlLnByb3RvdHlwZS5lbnRpdHkgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgICAgdmFyIGNoaWxkO1xuICAgICAgY2hpbGQgPSBuZXcgWE1MRFRERW50aXR5KHRoaXMsIGZhbHNlLCBuYW1lLCB2YWx1ZSk7XG4gICAgICB0aGlzLmNoaWxkcmVuLnB1c2goY2hpbGQpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcblxuICAgIFhNTERvY1R5cGUucHJvdG90eXBlLnBFbnRpdHkgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgICAgdmFyIGNoaWxkO1xuICAgICAgY2hpbGQgPSBuZXcgWE1MRFRERW50aXR5KHRoaXMsIHRydWUsIG5hbWUsIHZhbHVlKTtcbiAgICAgIHRoaXMuY2hpbGRyZW4ucHVzaChjaGlsZCk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuXG4gICAgWE1MRG9jVHlwZS5wcm90b3R5cGUubm90YXRpb24gPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgICAgdmFyIGNoaWxkO1xuICAgICAgY2hpbGQgPSBuZXcgWE1MRFRETm90YXRpb24odGhpcywgbmFtZSwgdmFsdWUpO1xuICAgICAgdGhpcy5jaGlsZHJlbi5wdXNoKGNoaWxkKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG5cbiAgICBYTUxEb2NUeXBlLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMud3JpdGVyLnNldChvcHRpb25zKS5kb2NUeXBlKHRoaXMpO1xuICAgIH07XG5cbiAgICBYTUxEb2NUeXBlLnByb3RvdHlwZS5lbGUgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudChuYW1lLCB2YWx1ZSk7XG4gICAgfTtcblxuICAgIFhNTERvY1R5cGUucHJvdG90eXBlLmF0dCA9IGZ1bmN0aW9uKGVsZW1lbnROYW1lLCBhdHRyaWJ1dGVOYW1lLCBhdHRyaWJ1dGVUeXBlLCBkZWZhdWx0VmFsdWVUeXBlLCBkZWZhdWx0VmFsdWUpIHtcbiAgICAgIHJldHVybiB0aGlzLmF0dExpc3QoZWxlbWVudE5hbWUsIGF0dHJpYnV0ZU5hbWUsIGF0dHJpYnV0ZVR5cGUsIGRlZmF1bHRWYWx1ZVR5cGUsIGRlZmF1bHRWYWx1ZSk7XG4gICAgfTtcblxuICAgIFhNTERvY1R5cGUucHJvdG90eXBlLmVudCA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gICAgICByZXR1cm4gdGhpcy5lbnRpdHkobmFtZSwgdmFsdWUpO1xuICAgIH07XG5cbiAgICBYTUxEb2NUeXBlLnByb3RvdHlwZS5wZW50ID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgICAgIHJldHVybiB0aGlzLnBFbnRpdHkobmFtZSwgdmFsdWUpO1xuICAgIH07XG5cbiAgICBYTUxEb2NUeXBlLnByb3RvdHlwZS5ub3QgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgICAgcmV0dXJuIHRoaXMubm90YXRpb24obmFtZSwgdmFsdWUpO1xuICAgIH07XG5cbiAgICBYTUxEb2NUeXBlLnByb3RvdHlwZS51cCA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMucm9vdCgpIHx8IHRoaXMuZG9jdW1lbnRPYmplY3Q7XG4gICAgfTtcblxuICAgIHJldHVybiBYTUxEb2NUeXBlO1xuXG4gIH0pKFhNTE5vZGUpO1xuXG59KS5jYWxsKHRoaXMpO1xuIiwiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbihmdW5jdGlvbigpIHtcbiAgdmFyIFhNTERvY3VtZW50LCBYTUxOb2RlLCBYTUxTdHJpbmdXcml0ZXIsIFhNTFN0cmluZ2lmaWVyLCBpc1BsYWluT2JqZWN0LFxuICAgIGV4dGVuZCA9IGZ1bmN0aW9uKGNoaWxkLCBwYXJlbnQpIHsgZm9yICh2YXIga2V5IGluIHBhcmVudCkgeyBpZiAoaGFzUHJvcC5jYWxsKHBhcmVudCwga2V5KSkgY2hpbGRba2V5XSA9IHBhcmVudFtrZXldOyB9IGZ1bmN0aW9uIGN0b3IoKSB7IHRoaXMuY29uc3RydWN0b3IgPSBjaGlsZDsgfSBjdG9yLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7IGNoaWxkLnByb3RvdHlwZSA9IG5ldyBjdG9yKCk7IGNoaWxkLl9fc3VwZXJfXyA9IHBhcmVudC5wcm90b3R5cGU7IHJldHVybiBjaGlsZDsgfSxcbiAgICBoYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHk7XG5cbiAgaXNQbGFpbk9iamVjdCA9IHJlcXVpcmUoJy4vVXRpbGl0eScpLmlzUGxhaW5PYmplY3Q7XG5cbiAgWE1MTm9kZSA9IHJlcXVpcmUoJy4vWE1MTm9kZScpO1xuXG4gIFhNTFN0cmluZ2lmaWVyID0gcmVxdWlyZSgnLi9YTUxTdHJpbmdpZmllcicpO1xuXG4gIFhNTFN0cmluZ1dyaXRlciA9IHJlcXVpcmUoJy4vWE1MU3RyaW5nV3JpdGVyJyk7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBYTUxEb2N1bWVudCA9IChmdW5jdGlvbihzdXBlckNsYXNzKSB7XG4gICAgZXh0ZW5kKFhNTERvY3VtZW50LCBzdXBlckNsYXNzKTtcblxuICAgIGZ1bmN0aW9uIFhNTERvY3VtZW50KG9wdGlvbnMpIHtcbiAgICAgIFhNTERvY3VtZW50Ll9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsIG51bGwpO1xuICAgICAgb3B0aW9ucyB8fCAob3B0aW9ucyA9IHt9KTtcbiAgICAgIGlmICghb3B0aW9ucy53cml0ZXIpIHtcbiAgICAgICAgb3B0aW9ucy53cml0ZXIgPSBuZXcgWE1MU3RyaW5nV3JpdGVyKCk7XG4gICAgICB9XG4gICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgdGhpcy5zdHJpbmdpZnkgPSBuZXcgWE1MU3RyaW5naWZpZXIob3B0aW9ucyk7XG4gICAgICB0aGlzLmlzRG9jdW1lbnQgPSB0cnVlO1xuICAgIH1cblxuICAgIFhNTERvY3VtZW50LnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbih3cml0ZXIpIHtcbiAgICAgIHZhciB3cml0ZXJPcHRpb25zO1xuICAgICAgaWYgKCF3cml0ZXIpIHtcbiAgICAgICAgd3JpdGVyID0gdGhpcy5vcHRpb25zLndyaXRlcjtcbiAgICAgIH0gZWxzZSBpZiAoaXNQbGFpbk9iamVjdCh3cml0ZXIpKSB7XG4gICAgICAgIHdyaXRlck9wdGlvbnMgPSB3cml0ZXI7XG4gICAgICAgIHdyaXRlciA9IHRoaXMub3B0aW9ucy53cml0ZXIuc2V0KHdyaXRlck9wdGlvbnMpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHdyaXRlci5kb2N1bWVudCh0aGlzKTtcbiAgICB9O1xuXG4gICAgWE1MRG9jdW1lbnQucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy53cml0ZXIuc2V0KG9wdGlvbnMpLmRvY3VtZW50KHRoaXMpO1xuICAgIH07XG5cbiAgICByZXR1cm4gWE1MRG9jdW1lbnQ7XG5cbiAgfSkoWE1MTm9kZSk7XG5cbn0pLmNhbGwodGhpcyk7XG4iLCIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuMTIuN1xuKGZ1bmN0aW9uKCkge1xuICB2YXIgWE1MQXR0cmlidXRlLCBYTUxDRGF0YSwgWE1MQ29tbWVudCwgWE1MRFREQXR0TGlzdCwgWE1MRFRERWxlbWVudCwgWE1MRFRERW50aXR5LCBYTUxEVEROb3RhdGlvbiwgWE1MRGVjbGFyYXRpb24sIFhNTERvY1R5cGUsIFhNTERvY3VtZW50Q0IsIFhNTEVsZW1lbnQsIFhNTFByb2Nlc3NpbmdJbnN0cnVjdGlvbiwgWE1MUmF3LCBYTUxTdHJpbmdXcml0ZXIsIFhNTFN0cmluZ2lmaWVyLCBYTUxUZXh0LCBpc0Z1bmN0aW9uLCBpc09iamVjdCwgaXNQbGFpbk9iamVjdCwgcmVmLFxuICAgIGhhc1Byb3AgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuICByZWYgPSByZXF1aXJlKCcuL1V0aWxpdHknKSwgaXNPYmplY3QgPSByZWYuaXNPYmplY3QsIGlzRnVuY3Rpb24gPSByZWYuaXNGdW5jdGlvbiwgaXNQbGFpbk9iamVjdCA9IHJlZi5pc1BsYWluT2JqZWN0O1xuXG4gIFhNTEVsZW1lbnQgPSByZXF1aXJlKCcuL1hNTEVsZW1lbnQnKTtcblxuICBYTUxDRGF0YSA9IHJlcXVpcmUoJy4vWE1MQ0RhdGEnKTtcblxuICBYTUxDb21tZW50ID0gcmVxdWlyZSgnLi9YTUxDb21tZW50Jyk7XG5cbiAgWE1MUmF3ID0gcmVxdWlyZSgnLi9YTUxSYXcnKTtcblxuICBYTUxUZXh0ID0gcmVxdWlyZSgnLi9YTUxUZXh0Jyk7XG5cbiAgWE1MUHJvY2Vzc2luZ0luc3RydWN0aW9uID0gcmVxdWlyZSgnLi9YTUxQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24nKTtcblxuICBYTUxEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4vWE1MRGVjbGFyYXRpb24nKTtcblxuICBYTUxEb2NUeXBlID0gcmVxdWlyZSgnLi9YTUxEb2NUeXBlJyk7XG5cbiAgWE1MRFREQXR0TGlzdCA9IHJlcXVpcmUoJy4vWE1MRFREQXR0TGlzdCcpO1xuXG4gIFhNTERUREVudGl0eSA9IHJlcXVpcmUoJy4vWE1MRFRERW50aXR5Jyk7XG5cbiAgWE1MRFRERWxlbWVudCA9IHJlcXVpcmUoJy4vWE1MRFRERWxlbWVudCcpO1xuXG4gIFhNTERURE5vdGF0aW9uID0gcmVxdWlyZSgnLi9YTUxEVEROb3RhdGlvbicpO1xuXG4gIFhNTEF0dHJpYnV0ZSA9IHJlcXVpcmUoJy4vWE1MQXR0cmlidXRlJyk7XG5cbiAgWE1MU3RyaW5naWZpZXIgPSByZXF1aXJlKCcuL1hNTFN0cmluZ2lmaWVyJyk7XG5cbiAgWE1MU3RyaW5nV3JpdGVyID0gcmVxdWlyZSgnLi9YTUxTdHJpbmdXcml0ZXInKTtcblxuICBtb2R1bGUuZXhwb3J0cyA9IFhNTERvY3VtZW50Q0IgPSAoZnVuY3Rpb24oKSB7XG4gICAgZnVuY3Rpb24gWE1MRG9jdW1lbnRDQihvcHRpb25zLCBvbkRhdGEsIG9uRW5kKSB7XG4gICAgICB2YXIgd3JpdGVyT3B0aW9ucztcbiAgICAgIG9wdGlvbnMgfHwgKG9wdGlvbnMgPSB7fSk7XG4gICAgICBpZiAoIW9wdGlvbnMud3JpdGVyKSB7XG4gICAgICAgIG9wdGlvbnMud3JpdGVyID0gbmV3IFhNTFN0cmluZ1dyaXRlcihvcHRpb25zKTtcbiAgICAgIH0gZWxzZSBpZiAoaXNQbGFpbk9iamVjdChvcHRpb25zLndyaXRlcikpIHtcbiAgICAgICAgd3JpdGVyT3B0aW9ucyA9IG9wdGlvbnMud3JpdGVyO1xuICAgICAgICBvcHRpb25zLndyaXRlciA9IG5ldyBYTUxTdHJpbmdXcml0ZXIod3JpdGVyT3B0aW9ucyk7XG4gICAgICB9XG4gICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgdGhpcy53cml0ZXIgPSBvcHRpb25zLndyaXRlcjtcbiAgICAgIHRoaXMuc3RyaW5naWZ5ID0gbmV3IFhNTFN0cmluZ2lmaWVyKG9wdGlvbnMpO1xuICAgICAgdGhpcy5vbkRhdGFDYWxsYmFjayA9IG9uRGF0YSB8fCBmdW5jdGlvbigpIHt9O1xuICAgICAgdGhpcy5vbkVuZENhbGxiYWNrID0gb25FbmQgfHwgZnVuY3Rpb24oKSB7fTtcbiAgICAgIHRoaXMuY3VycmVudE5vZGUgPSBudWxsO1xuICAgICAgdGhpcy5jdXJyZW50TGV2ZWwgPSAtMTtcbiAgICAgIHRoaXMub3BlblRhZ3MgPSB7fTtcbiAgICAgIHRoaXMuZG9jdW1lbnRTdGFydGVkID0gZmFsc2U7XG4gICAgICB0aGlzLmRvY3VtZW50Q29tcGxldGVkID0gZmFsc2U7XG4gICAgICB0aGlzLnJvb3QgPSBudWxsO1xuICAgIH1cblxuICAgIFhNTERvY3VtZW50Q0IucHJvdG90eXBlLm5vZGUgPSBmdW5jdGlvbihuYW1lLCBhdHRyaWJ1dGVzLCB0ZXh0KSB7XG4gICAgICB2YXIgcmVmMTtcbiAgICAgIGlmIChuYW1lID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyBub2RlIG5hbWVcIik7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5yb290ICYmIHRoaXMuY3VycmVudExldmVsID09PSAtMSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJEb2N1bWVudCBjYW4gb25seSBoYXZlIG9uZSByb290IG5vZGVcIik7XG4gICAgICB9XG4gICAgICB0aGlzLm9wZW5DdXJyZW50KCk7XG4gICAgICBuYW1lID0gbmFtZS52YWx1ZU9mKCk7XG4gICAgICBpZiAoYXR0cmlidXRlcyA9PSBudWxsKSB7XG4gICAgICAgIGF0dHJpYnV0ZXMgPSB7fTtcbiAgICAgIH1cbiAgICAgIGF0dHJpYnV0ZXMgPSBhdHRyaWJ1dGVzLnZhbHVlT2YoKTtcbiAgICAgIGlmICghaXNPYmplY3QoYXR0cmlidXRlcykpIHtcbiAgICAgICAgcmVmMSA9IFthdHRyaWJ1dGVzLCB0ZXh0XSwgdGV4dCA9IHJlZjFbMF0sIGF0dHJpYnV0ZXMgPSByZWYxWzFdO1xuICAgICAgfVxuICAgICAgdGhpcy5jdXJyZW50Tm9kZSA9IG5ldyBYTUxFbGVtZW50KHRoaXMsIG5hbWUsIGF0dHJpYnV0ZXMpO1xuICAgICAgdGhpcy5jdXJyZW50Tm9kZS5jaGlsZHJlbiA9IGZhbHNlO1xuICAgICAgdGhpcy5jdXJyZW50TGV2ZWwrKztcbiAgICAgIHRoaXMub3BlblRhZ3NbdGhpcy5jdXJyZW50TGV2ZWxdID0gdGhpcy5jdXJyZW50Tm9kZTtcbiAgICAgIGlmICh0ZXh0ICE9IG51bGwpIHtcbiAgICAgICAgdGhpcy50ZXh0KHRleHQpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcblxuICAgIFhNTERvY3VtZW50Q0IucHJvdG90eXBlLmVsZW1lbnQgPSBmdW5jdGlvbihuYW1lLCBhdHRyaWJ1dGVzLCB0ZXh0KSB7XG4gICAgICBpZiAodGhpcy5jdXJyZW50Tm9kZSAmJiB0aGlzLmN1cnJlbnROb2RlIGluc3RhbmNlb2YgWE1MRG9jVHlwZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5kdGRFbGVtZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gdGhpcy5ub2RlKG5hbWUsIGF0dHJpYnV0ZXMsIHRleHQpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBYTUxEb2N1bWVudENCLnByb3RvdHlwZS5hdHRyaWJ1dGUgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgICAgdmFyIGF0dE5hbWUsIGF0dFZhbHVlO1xuICAgICAgaWYgKCF0aGlzLmN1cnJlbnROb2RlIHx8IHRoaXMuY3VycmVudE5vZGUuY2hpbGRyZW4pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiYXR0KCkgY2FuIG9ubHkgYmUgdXNlZCBpbW1lZGlhdGVseSBhZnRlciBhbiBlbGUoKSBjYWxsIGluIGNhbGxiYWNrIG1vZGVcIik7XG4gICAgICB9XG4gICAgICBpZiAobmFtZSAhPSBudWxsKSB7XG4gICAgICAgIG5hbWUgPSBuYW1lLnZhbHVlT2YoKTtcbiAgICAgIH1cbiAgICAgIGlmIChpc09iamVjdChuYW1lKSkge1xuICAgICAgICBmb3IgKGF0dE5hbWUgaW4gbmFtZSkge1xuICAgICAgICAgIGlmICghaGFzUHJvcC5jYWxsKG5hbWUsIGF0dE5hbWUpKSBjb250aW51ZTtcbiAgICAgICAgICBhdHRWYWx1ZSA9IG5hbWVbYXR0TmFtZV07XG4gICAgICAgICAgdGhpcy5hdHRyaWJ1dGUoYXR0TmFtZSwgYXR0VmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoaXNGdW5jdGlvbih2YWx1ZSkpIHtcbiAgICAgICAgICB2YWx1ZSA9IHZhbHVlLmFwcGx5KCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLm9wdGlvbnMuc2tpcE51bGxBdHRyaWJ1dGVzIHx8ICh2YWx1ZSAhPSBudWxsKSkge1xuICAgICAgICAgIHRoaXMuY3VycmVudE5vZGUuYXR0cmlidXRlc1tuYW1lXSA9IG5ldyBYTUxBdHRyaWJ1dGUodGhpcywgbmFtZSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuXG4gICAgWE1MRG9jdW1lbnRDQi5wcm90b3R5cGUudGV4dCA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICB2YXIgbm9kZTtcbiAgICAgIHRoaXMub3BlbkN1cnJlbnQoKTtcbiAgICAgIG5vZGUgPSBuZXcgWE1MVGV4dCh0aGlzLCB2YWx1ZSk7XG4gICAgICB0aGlzLm9uRGF0YSh0aGlzLndyaXRlci50ZXh0KG5vZGUsIHRoaXMuY3VycmVudExldmVsICsgMSkpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcblxuICAgIFhNTERvY3VtZW50Q0IucHJvdG90eXBlLmNkYXRhID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgIHZhciBub2RlO1xuICAgICAgdGhpcy5vcGVuQ3VycmVudCgpO1xuICAgICAgbm9kZSA9IG5ldyBYTUxDRGF0YSh0aGlzLCB2YWx1ZSk7XG4gICAgICB0aGlzLm9uRGF0YSh0aGlzLndyaXRlci5jZGF0YShub2RlLCB0aGlzLmN1cnJlbnRMZXZlbCArIDEpKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG5cbiAgICBYTUxEb2N1bWVudENCLnByb3RvdHlwZS5jb21tZW50ID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgIHZhciBub2RlO1xuICAgICAgdGhpcy5vcGVuQ3VycmVudCgpO1xuICAgICAgbm9kZSA9IG5ldyBYTUxDb21tZW50KHRoaXMsIHZhbHVlKTtcbiAgICAgIHRoaXMub25EYXRhKHRoaXMud3JpdGVyLmNvbW1lbnQobm9kZSwgdGhpcy5jdXJyZW50TGV2ZWwgKyAxKSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuXG4gICAgWE1MRG9jdW1lbnRDQi5wcm90b3R5cGUucmF3ID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgIHZhciBub2RlO1xuICAgICAgdGhpcy5vcGVuQ3VycmVudCgpO1xuICAgICAgbm9kZSA9IG5ldyBYTUxSYXcodGhpcywgdmFsdWUpO1xuICAgICAgdGhpcy5vbkRhdGEodGhpcy53cml0ZXIucmF3KG5vZGUsIHRoaXMuY3VycmVudExldmVsICsgMSkpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcblxuICAgIFhNTERvY3VtZW50Q0IucHJvdG90eXBlLmluc3RydWN0aW9uID0gZnVuY3Rpb24odGFyZ2V0LCB2YWx1ZSkge1xuICAgICAgdmFyIGksIGluc1RhcmdldCwgaW5zVmFsdWUsIGxlbiwgbm9kZTtcbiAgICAgIHRoaXMub3BlbkN1cnJlbnQoKTtcbiAgICAgIGlmICh0YXJnZXQgIT0gbnVsbCkge1xuICAgICAgICB0YXJnZXQgPSB0YXJnZXQudmFsdWVPZigpO1xuICAgICAgfVxuICAgICAgaWYgKHZhbHVlICE9IG51bGwpIHtcbiAgICAgICAgdmFsdWUgPSB2YWx1ZS52YWx1ZU9mKCk7XG4gICAgICB9XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheSh0YXJnZXQpKSB7XG4gICAgICAgIGZvciAoaSA9IDAsIGxlbiA9IHRhcmdldC5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAgIGluc1RhcmdldCA9IHRhcmdldFtpXTtcbiAgICAgICAgICB0aGlzLmluc3RydWN0aW9uKGluc1RhcmdldCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoaXNPYmplY3QodGFyZ2V0KSkge1xuICAgICAgICBmb3IgKGluc1RhcmdldCBpbiB0YXJnZXQpIHtcbiAgICAgICAgICBpZiAoIWhhc1Byb3AuY2FsbCh0YXJnZXQsIGluc1RhcmdldCkpIGNvbnRpbnVlO1xuICAgICAgICAgIGluc1ZhbHVlID0gdGFyZ2V0W2luc1RhcmdldF07XG4gICAgICAgICAgdGhpcy5pbnN0cnVjdGlvbihpbnNUYXJnZXQsIGluc1ZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKGlzRnVuY3Rpb24odmFsdWUpKSB7XG4gICAgICAgICAgdmFsdWUgPSB2YWx1ZS5hcHBseSgpO1xuICAgICAgICB9XG4gICAgICAgIG5vZGUgPSBuZXcgWE1MUHJvY2Vzc2luZ0luc3RydWN0aW9uKHRoaXMsIHRhcmdldCwgdmFsdWUpO1xuICAgICAgICB0aGlzLm9uRGF0YSh0aGlzLndyaXRlci5wcm9jZXNzaW5nSW5zdHJ1Y3Rpb24obm9kZSwgdGhpcy5jdXJyZW50TGV2ZWwgKyAxKSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuXG4gICAgWE1MRG9jdW1lbnRDQi5wcm90b3R5cGUuZGVjbGFyYXRpb24gPSBmdW5jdGlvbih2ZXJzaW9uLCBlbmNvZGluZywgc3RhbmRhbG9uZSkge1xuICAgICAgdmFyIG5vZGU7XG4gICAgICB0aGlzLm9wZW5DdXJyZW50KCk7XG4gICAgICBpZiAodGhpcy5kb2N1bWVudFN0YXJ0ZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZGVjbGFyYXRpb24oKSBtdXN0IGJlIHRoZSBmaXJzdCBub2RlXCIpO1xuICAgICAgfVxuICAgICAgbm9kZSA9IG5ldyBYTUxEZWNsYXJhdGlvbih0aGlzLCB2ZXJzaW9uLCBlbmNvZGluZywgc3RhbmRhbG9uZSk7XG4gICAgICB0aGlzLm9uRGF0YSh0aGlzLndyaXRlci5kZWNsYXJhdGlvbihub2RlLCB0aGlzLmN1cnJlbnRMZXZlbCArIDEpKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG5cbiAgICBYTUxEb2N1bWVudENCLnByb3RvdHlwZS5kb2N0eXBlID0gZnVuY3Rpb24ocm9vdCwgcHViSUQsIHN5c0lEKSB7XG4gICAgICB0aGlzLm9wZW5DdXJyZW50KCk7XG4gICAgICBpZiAocm9vdCA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1pc3Npbmcgcm9vdCBub2RlIG5hbWVcIik7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5yb290KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImR0ZCgpIG11c3QgY29tZSBiZWZvcmUgdGhlIHJvb3Qgbm9kZVwiKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuY3VycmVudE5vZGUgPSBuZXcgWE1MRG9jVHlwZSh0aGlzLCBwdWJJRCwgc3lzSUQpO1xuICAgICAgdGhpcy5jdXJyZW50Tm9kZS5yb290Tm9kZU5hbWUgPSByb290O1xuICAgICAgdGhpcy5jdXJyZW50Tm9kZS5jaGlsZHJlbiA9IGZhbHNlO1xuICAgICAgdGhpcy5jdXJyZW50TGV2ZWwrKztcbiAgICAgIHRoaXMub3BlblRhZ3NbdGhpcy5jdXJyZW50TGV2ZWxdID0gdGhpcy5jdXJyZW50Tm9kZTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG5cbiAgICBYTUxEb2N1bWVudENCLnByb3RvdHlwZS5kdGRFbGVtZW50ID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgICAgIHZhciBub2RlO1xuICAgICAgdGhpcy5vcGVuQ3VycmVudCgpO1xuICAgICAgbm9kZSA9IG5ldyBYTUxEVERFbGVtZW50KHRoaXMsIG5hbWUsIHZhbHVlKTtcbiAgICAgIHRoaXMub25EYXRhKHRoaXMud3JpdGVyLmR0ZEVsZW1lbnQobm9kZSwgdGhpcy5jdXJyZW50TGV2ZWwgKyAxKSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuXG4gICAgWE1MRG9jdW1lbnRDQi5wcm90b3R5cGUuYXR0TGlzdCA9IGZ1bmN0aW9uKGVsZW1lbnROYW1lLCBhdHRyaWJ1dGVOYW1lLCBhdHRyaWJ1dGVUeXBlLCBkZWZhdWx0VmFsdWVUeXBlLCBkZWZhdWx0VmFsdWUpIHtcbiAgICAgIHZhciBub2RlO1xuICAgICAgdGhpcy5vcGVuQ3VycmVudCgpO1xuICAgICAgbm9kZSA9IG5ldyBYTUxEVERBdHRMaXN0KHRoaXMsIGVsZW1lbnROYW1lLCBhdHRyaWJ1dGVOYW1lLCBhdHRyaWJ1dGVUeXBlLCBkZWZhdWx0VmFsdWVUeXBlLCBkZWZhdWx0VmFsdWUpO1xuICAgICAgdGhpcy5vbkRhdGEodGhpcy53cml0ZXIuZHRkQXR0TGlzdChub2RlLCB0aGlzLmN1cnJlbnRMZXZlbCArIDEpKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG5cbiAgICBYTUxEb2N1bWVudENCLnByb3RvdHlwZS5lbnRpdHkgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgICAgdmFyIG5vZGU7XG4gICAgICB0aGlzLm9wZW5DdXJyZW50KCk7XG4gICAgICBub2RlID0gbmV3IFhNTERUREVudGl0eSh0aGlzLCBmYWxzZSwgbmFtZSwgdmFsdWUpO1xuICAgICAgdGhpcy5vbkRhdGEodGhpcy53cml0ZXIuZHRkRW50aXR5KG5vZGUsIHRoaXMuY3VycmVudExldmVsICsgMSkpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcblxuICAgIFhNTERvY3VtZW50Q0IucHJvdG90eXBlLnBFbnRpdHkgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgICAgdmFyIG5vZGU7XG4gICAgICB0aGlzLm9wZW5DdXJyZW50KCk7XG4gICAgICBub2RlID0gbmV3IFhNTERUREVudGl0eSh0aGlzLCB0cnVlLCBuYW1lLCB2YWx1ZSk7XG4gICAgICB0aGlzLm9uRGF0YSh0aGlzLndyaXRlci5kdGRFbnRpdHkobm9kZSwgdGhpcy5jdXJyZW50TGV2ZWwgKyAxKSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuXG4gICAgWE1MRG9jdW1lbnRDQi5wcm90b3R5cGUubm90YXRpb24gPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgICAgdmFyIG5vZGU7XG4gICAgICB0aGlzLm9wZW5DdXJyZW50KCk7XG4gICAgICBub2RlID0gbmV3IFhNTERURE5vdGF0aW9uKHRoaXMsIG5hbWUsIHZhbHVlKTtcbiAgICAgIHRoaXMub25EYXRhKHRoaXMud3JpdGVyLmR0ZE5vdGF0aW9uKG5vZGUsIHRoaXMuY3VycmVudExldmVsICsgMSkpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcblxuICAgIFhNTERvY3VtZW50Q0IucHJvdG90eXBlLnVwID0gZnVuY3Rpb24oKSB7XG4gICAgICBpZiAodGhpcy5jdXJyZW50TGV2ZWwgPCAwKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoZSBkb2N1bWVudCBub2RlIGhhcyBubyBwYXJlbnRcIik7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5jdXJyZW50Tm9kZSkge1xuICAgICAgICBpZiAodGhpcy5jdXJyZW50Tm9kZS5jaGlsZHJlbikge1xuICAgICAgICAgIHRoaXMuY2xvc2VOb2RlKHRoaXMuY3VycmVudE5vZGUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMub3Blbk5vZGUodGhpcy5jdXJyZW50Tm9kZSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jdXJyZW50Tm9kZSA9IG51bGw7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmNsb3NlTm9kZSh0aGlzLm9wZW5UYWdzW3RoaXMuY3VycmVudExldmVsXSk7XG4gICAgICB9XG4gICAgICBkZWxldGUgdGhpcy5vcGVuVGFnc1t0aGlzLmN1cnJlbnRMZXZlbF07XG4gICAgICB0aGlzLmN1cnJlbnRMZXZlbC0tO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcblxuICAgIFhNTERvY3VtZW50Q0IucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgd2hpbGUgKHRoaXMuY3VycmVudExldmVsID49IDApIHtcbiAgICAgICAgdGhpcy51cCgpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXMub25FbmQoKTtcbiAgICB9O1xuXG4gICAgWE1MRG9jdW1lbnRDQi5wcm90b3R5cGUub3BlbkN1cnJlbnQgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmICh0aGlzLmN1cnJlbnROb2RlKSB7XG4gICAgICAgIHRoaXMuY3VycmVudE5vZGUuY2hpbGRyZW4gPSB0cnVlO1xuICAgICAgICByZXR1cm4gdGhpcy5vcGVuTm9kZSh0aGlzLmN1cnJlbnROb2RlKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgWE1MRG9jdW1lbnRDQi5wcm90b3R5cGUub3Blbk5vZGUgPSBmdW5jdGlvbihub2RlKSB7XG4gICAgICBpZiAoIW5vZGUuaXNPcGVuKSB7XG4gICAgICAgIGlmICghdGhpcy5yb290ICYmIHRoaXMuY3VycmVudExldmVsID09PSAwICYmIG5vZGUgaW5zdGFuY2VvZiBYTUxFbGVtZW50KSB7XG4gICAgICAgICAgdGhpcy5yb290ID0gbm9kZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm9uRGF0YSh0aGlzLndyaXRlci5vcGVuTm9kZShub2RlLCB0aGlzLmN1cnJlbnRMZXZlbCkpO1xuICAgICAgICByZXR1cm4gbm9kZS5pc09wZW4gPSB0cnVlO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBYTUxEb2N1bWVudENCLnByb3RvdHlwZS5jbG9zZU5vZGUgPSBmdW5jdGlvbihub2RlKSB7XG4gICAgICBpZiAoIW5vZGUuaXNDbG9zZWQpIHtcbiAgICAgICAgdGhpcy5vbkRhdGEodGhpcy53cml0ZXIuY2xvc2VOb2RlKG5vZGUsIHRoaXMuY3VycmVudExldmVsKSk7XG4gICAgICAgIHJldHVybiBub2RlLmlzQ2xvc2VkID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgWE1MRG9jdW1lbnRDQi5wcm90b3R5cGUub25EYXRhID0gZnVuY3Rpb24oY2h1bmspIHtcbiAgICAgIHRoaXMuZG9jdW1lbnRTdGFydGVkID0gdHJ1ZTtcbiAgICAgIHJldHVybiB0aGlzLm9uRGF0YUNhbGxiYWNrKGNodW5rKTtcbiAgICB9O1xuXG4gICAgWE1MRG9jdW1lbnRDQi5wcm90b3R5cGUub25FbmQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuZG9jdW1lbnRDb21wbGV0ZWQgPSB0cnVlO1xuICAgICAgcmV0dXJuIHRoaXMub25FbmRDYWxsYmFjaygpO1xuICAgIH07XG5cbiAgICBYTUxEb2N1bWVudENCLnByb3RvdHlwZS5lbGUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLmVsZW1lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB9O1xuXG4gICAgWE1MRG9jdW1lbnRDQi5wcm90b3R5cGUubm9kID0gZnVuY3Rpb24obmFtZSwgYXR0cmlidXRlcywgdGV4dCkge1xuICAgICAgcmV0dXJuIHRoaXMubm9kZShuYW1lLCBhdHRyaWJ1dGVzLCB0ZXh0KTtcbiAgICB9O1xuXG4gICAgWE1MRG9jdW1lbnRDQi5wcm90b3R5cGUudHh0ID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgIHJldHVybiB0aGlzLnRleHQodmFsdWUpO1xuICAgIH07XG5cbiAgICBYTUxEb2N1bWVudENCLnByb3RvdHlwZS5kYXQgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgcmV0dXJuIHRoaXMuY2RhdGEodmFsdWUpO1xuICAgIH07XG5cbiAgICBYTUxEb2N1bWVudENCLnByb3RvdHlwZS5jb20gPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgcmV0dXJuIHRoaXMuY29tbWVudCh2YWx1ZSk7XG4gICAgfTtcblxuICAgIFhNTERvY3VtZW50Q0IucHJvdG90eXBlLmlucyA9IGZ1bmN0aW9uKHRhcmdldCwgdmFsdWUpIHtcbiAgICAgIHJldHVybiB0aGlzLmluc3RydWN0aW9uKHRhcmdldCwgdmFsdWUpO1xuICAgIH07XG5cbiAgICBYTUxEb2N1bWVudENCLnByb3RvdHlwZS5kZWMgPSBmdW5jdGlvbih2ZXJzaW9uLCBlbmNvZGluZywgc3RhbmRhbG9uZSkge1xuICAgICAgcmV0dXJuIHRoaXMuZGVjbGFyYXRpb24odmVyc2lvbiwgZW5jb2RpbmcsIHN0YW5kYWxvbmUpO1xuICAgIH07XG5cbiAgICBYTUxEb2N1bWVudENCLnByb3RvdHlwZS5kdGQgPSBmdW5jdGlvbihyb290LCBwdWJJRCwgc3lzSUQpIHtcbiAgICAgIHJldHVybiB0aGlzLmRvY3R5cGUocm9vdCwgcHViSUQsIHN5c0lEKTtcbiAgICB9O1xuXG4gICAgWE1MRG9jdW1lbnRDQi5wcm90b3R5cGUuZSA9IGZ1bmN0aW9uKG5hbWUsIGF0dHJpYnV0ZXMsIHRleHQpIHtcbiAgICAgIHJldHVybiB0aGlzLmVsZW1lbnQobmFtZSwgYXR0cmlidXRlcywgdGV4dCk7XG4gICAgfTtcblxuICAgIFhNTERvY3VtZW50Q0IucHJvdG90eXBlLm4gPSBmdW5jdGlvbihuYW1lLCBhdHRyaWJ1dGVzLCB0ZXh0KSB7XG4gICAgICByZXR1cm4gdGhpcy5ub2RlKG5hbWUsIGF0dHJpYnV0ZXMsIHRleHQpO1xuICAgIH07XG5cbiAgICBYTUxEb2N1bWVudENCLnByb3RvdHlwZS50ID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgIHJldHVybiB0aGlzLnRleHQodmFsdWUpO1xuICAgIH07XG5cbiAgICBYTUxEb2N1bWVudENCLnByb3RvdHlwZS5kID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgIHJldHVybiB0aGlzLmNkYXRhKHZhbHVlKTtcbiAgICB9O1xuXG4gICAgWE1MRG9jdW1lbnRDQi5wcm90b3R5cGUuYyA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICByZXR1cm4gdGhpcy5jb21tZW50KHZhbHVlKTtcbiAgICB9O1xuXG4gICAgWE1MRG9jdW1lbnRDQi5wcm90b3R5cGUuciA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICByZXR1cm4gdGhpcy5yYXcodmFsdWUpO1xuICAgIH07XG5cbiAgICBYTUxEb2N1bWVudENCLnByb3RvdHlwZS5pID0gZnVuY3Rpb24odGFyZ2V0LCB2YWx1ZSkge1xuICAgICAgcmV0dXJuIHRoaXMuaW5zdHJ1Y3Rpb24odGFyZ2V0LCB2YWx1ZSk7XG4gICAgfTtcblxuICAgIFhNTERvY3VtZW50Q0IucHJvdG90eXBlLmF0dCA9IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKHRoaXMuY3VycmVudE5vZGUgJiYgdGhpcy5jdXJyZW50Tm9kZSBpbnN0YW5jZW9mIFhNTERvY1R5cGUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXR0TGlzdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXR0cmlidXRlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIFhNTERvY3VtZW50Q0IucHJvdG90eXBlLmEgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmICh0aGlzLmN1cnJlbnROb2RlICYmIHRoaXMuY3VycmVudE5vZGUgaW5zdGFuY2VvZiBYTUxEb2NUeXBlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmF0dExpc3QuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB0aGlzLmF0dHJpYnV0ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBYTUxEb2N1bWVudENCLnByb3RvdHlwZS5lbnQgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgICAgcmV0dXJuIHRoaXMuZW50aXR5KG5hbWUsIHZhbHVlKTtcbiAgICB9O1xuXG4gICAgWE1MRG9jdW1lbnRDQi5wcm90b3R5cGUucGVudCA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gICAgICByZXR1cm4gdGhpcy5wRW50aXR5KG5hbWUsIHZhbHVlKTtcbiAgICB9O1xuXG4gICAgWE1MRG9jdW1lbnRDQi5wcm90b3R5cGUubm90ID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgICAgIHJldHVybiB0aGlzLm5vdGF0aW9uKG5hbWUsIHZhbHVlKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIFhNTERvY3VtZW50Q0I7XG5cbiAgfSkoKTtcblxufSkuY2FsbCh0aGlzKTtcbiIsIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBYTUxBdHRyaWJ1dGUsIFhNTEVsZW1lbnQsIFhNTE5vZGUsIGlzRnVuY3Rpb24sIGlzT2JqZWN0LCByZWYsXG4gICAgZXh0ZW5kID0gZnVuY3Rpb24oY2hpbGQsIHBhcmVudCkgeyBmb3IgKHZhciBrZXkgaW4gcGFyZW50KSB7IGlmIChoYXNQcm9wLmNhbGwocGFyZW50LCBrZXkpKSBjaGlsZFtrZXldID0gcGFyZW50W2tleV07IH0gZnVuY3Rpb24gY3RvcigpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGNoaWxkOyB9IGN0b3IucHJvdG90eXBlID0gcGFyZW50LnByb3RvdHlwZTsgY2hpbGQucHJvdG90eXBlID0gbmV3IGN0b3IoKTsgY2hpbGQuX19zdXBlcl9fID0gcGFyZW50LnByb3RvdHlwZTsgcmV0dXJuIGNoaWxkOyB9LFxuICAgIGhhc1Byb3AgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuICByZWYgPSByZXF1aXJlKCcuL1V0aWxpdHknKSwgaXNPYmplY3QgPSByZWYuaXNPYmplY3QsIGlzRnVuY3Rpb24gPSByZWYuaXNGdW5jdGlvbjtcblxuICBYTUxOb2RlID0gcmVxdWlyZSgnLi9YTUxOb2RlJyk7XG5cbiAgWE1MQXR0cmlidXRlID0gcmVxdWlyZSgnLi9YTUxBdHRyaWJ1dGUnKTtcblxuICBtb2R1bGUuZXhwb3J0cyA9IFhNTEVsZW1lbnQgPSAoZnVuY3Rpb24oc3VwZXJDbGFzcykge1xuICAgIGV4dGVuZChYTUxFbGVtZW50LCBzdXBlckNsYXNzKTtcblxuICAgIGZ1bmN0aW9uIFhNTEVsZW1lbnQocGFyZW50LCBuYW1lLCBhdHRyaWJ1dGVzKSB7XG4gICAgICBYTUxFbGVtZW50Ll9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsIHBhcmVudCk7XG4gICAgICBpZiAobmFtZSA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgZWxlbWVudCBuYW1lXCIpO1xuICAgICAgfVxuICAgICAgdGhpcy5uYW1lID0gdGhpcy5zdHJpbmdpZnkuZWxlTmFtZShuYW1lKTtcbiAgICAgIHRoaXMuYXR0cmlidXRlcyA9IHt9O1xuICAgICAgaWYgKGF0dHJpYnV0ZXMgIT0gbnVsbCkge1xuICAgICAgICB0aGlzLmF0dHJpYnV0ZShhdHRyaWJ1dGVzKTtcbiAgICAgIH1cbiAgICAgIGlmIChwYXJlbnQuaXNEb2N1bWVudCkge1xuICAgICAgICB0aGlzLmlzUm9vdCA9IHRydWU7XG4gICAgICAgIHRoaXMuZG9jdW1lbnRPYmplY3QgPSBwYXJlbnQ7XG4gICAgICAgIHBhcmVudC5yb290T2JqZWN0ID0gdGhpcztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBYTUxFbGVtZW50LnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGF0dCwgYXR0TmFtZSwgY2xvbmVkU2VsZiwgcmVmMTtcbiAgICAgIGNsb25lZFNlbGYgPSBPYmplY3QuY3JlYXRlKHRoaXMpO1xuICAgICAgaWYgKGNsb25lZFNlbGYuaXNSb290KSB7XG4gICAgICAgIGNsb25lZFNlbGYuZG9jdW1lbnRPYmplY3QgPSBudWxsO1xuICAgICAgfVxuICAgICAgY2xvbmVkU2VsZi5hdHRyaWJ1dGVzID0ge307XG4gICAgICByZWYxID0gdGhpcy5hdHRyaWJ1dGVzO1xuICAgICAgZm9yIChhdHROYW1lIGluIHJlZjEpIHtcbiAgICAgICAgaWYgKCFoYXNQcm9wLmNhbGwocmVmMSwgYXR0TmFtZSkpIGNvbnRpbnVlO1xuICAgICAgICBhdHQgPSByZWYxW2F0dE5hbWVdO1xuICAgICAgICBjbG9uZWRTZWxmLmF0dHJpYnV0ZXNbYXR0TmFtZV0gPSBhdHQuY2xvbmUoKTtcbiAgICAgIH1cbiAgICAgIGNsb25lZFNlbGYuY2hpbGRyZW4gPSBbXTtcbiAgICAgIHRoaXMuY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbihjaGlsZCkge1xuICAgICAgICB2YXIgY2xvbmVkQ2hpbGQ7XG4gICAgICAgIGNsb25lZENoaWxkID0gY2hpbGQuY2xvbmUoKTtcbiAgICAgICAgY2xvbmVkQ2hpbGQucGFyZW50ID0gY2xvbmVkU2VsZjtcbiAgICAgICAgcmV0dXJuIGNsb25lZFNlbGYuY2hpbGRyZW4ucHVzaChjbG9uZWRDaGlsZCk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBjbG9uZWRTZWxmO1xuICAgIH07XG5cbiAgICBYTUxFbGVtZW50LnByb3RvdHlwZS5hdHRyaWJ1dGUgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgICAgdmFyIGF0dE5hbWUsIGF0dFZhbHVlO1xuICAgICAgaWYgKG5hbWUgIT0gbnVsbCkge1xuICAgICAgICBuYW1lID0gbmFtZS52YWx1ZU9mKCk7XG4gICAgICB9XG4gICAgICBpZiAoaXNPYmplY3QobmFtZSkpIHtcbiAgICAgICAgZm9yIChhdHROYW1lIGluIG5hbWUpIHtcbiAgICAgICAgICBpZiAoIWhhc1Byb3AuY2FsbChuYW1lLCBhdHROYW1lKSkgY29udGludWU7XG4gICAgICAgICAgYXR0VmFsdWUgPSBuYW1lW2F0dE5hbWVdO1xuICAgICAgICAgIHRoaXMuYXR0cmlidXRlKGF0dE5hbWUsIGF0dFZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKGlzRnVuY3Rpb24odmFsdWUpKSB7XG4gICAgICAgICAgdmFsdWUgPSB2YWx1ZS5hcHBseSgpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5vcHRpb25zLnNraXBOdWxsQXR0cmlidXRlcyB8fCAodmFsdWUgIT0gbnVsbCkpIHtcbiAgICAgICAgICB0aGlzLmF0dHJpYnV0ZXNbbmFtZV0gPSBuZXcgWE1MQXR0cmlidXRlKHRoaXMsIG5hbWUsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcblxuICAgIFhNTEVsZW1lbnQucHJvdG90eXBlLnJlbW92ZUF0dHJpYnV0ZSA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICAgIHZhciBhdHROYW1lLCBpLCBsZW47XG4gICAgICBpZiAobmFtZSA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgYXR0cmlidXRlIG5hbWVcIik7XG4gICAgICB9XG4gICAgICBuYW1lID0gbmFtZS52YWx1ZU9mKCk7XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShuYW1lKSkge1xuICAgICAgICBmb3IgKGkgPSAwLCBsZW4gPSBuYW1lLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgYXR0TmFtZSA9IG5hbWVbaV07XG4gICAgICAgICAgZGVsZXRlIHRoaXMuYXR0cmlidXRlc1thdHROYW1lXTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZGVsZXRlIHRoaXMuYXR0cmlidXRlc1tuYW1lXTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG5cbiAgICBYTUxFbGVtZW50LnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMud3JpdGVyLnNldChvcHRpb25zKS5lbGVtZW50KHRoaXMpO1xuICAgIH07XG5cbiAgICBYTUxFbGVtZW50LnByb3RvdHlwZS5hdHQgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgICAgcmV0dXJuIHRoaXMuYXR0cmlidXRlKG5hbWUsIHZhbHVlKTtcbiAgICB9O1xuXG4gICAgWE1MRWxlbWVudC5wcm90b3R5cGUuYSA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gICAgICByZXR1cm4gdGhpcy5hdHRyaWJ1dGUobmFtZSwgdmFsdWUpO1xuICAgIH07XG5cbiAgICByZXR1cm4gWE1MRWxlbWVudDtcblxuICB9KShYTUxOb2RlKTtcblxufSkuY2FsbCh0aGlzKTtcbiIsIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBYTUxDRGF0YSwgWE1MQ29tbWVudCwgWE1MRGVjbGFyYXRpb24sIFhNTERvY1R5cGUsIFhNTEVsZW1lbnQsIFhNTE5vZGUsIFhNTFByb2Nlc3NpbmdJbnN0cnVjdGlvbiwgWE1MUmF3LCBYTUxUZXh0LCBpc0VtcHR5LCBpc0Z1bmN0aW9uLCBpc09iamVjdCwgcmVmLFxuICAgIGhhc1Byb3AgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuICByZWYgPSByZXF1aXJlKCcuL1V0aWxpdHknKSwgaXNPYmplY3QgPSByZWYuaXNPYmplY3QsIGlzRnVuY3Rpb24gPSByZWYuaXNGdW5jdGlvbiwgaXNFbXB0eSA9IHJlZi5pc0VtcHR5O1xuXG4gIFhNTEVsZW1lbnQgPSBudWxsO1xuXG4gIFhNTENEYXRhID0gbnVsbDtcblxuICBYTUxDb21tZW50ID0gbnVsbDtcblxuICBYTUxEZWNsYXJhdGlvbiA9IG51bGw7XG5cbiAgWE1MRG9jVHlwZSA9IG51bGw7XG5cbiAgWE1MUmF3ID0gbnVsbDtcblxuICBYTUxUZXh0ID0gbnVsbDtcblxuICBYTUxQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24gPSBudWxsO1xuXG4gIG1vZHVsZS5leHBvcnRzID0gWE1MTm9kZSA9IChmdW5jdGlvbigpIHtcbiAgICBmdW5jdGlvbiBYTUxOb2RlKHBhcmVudCkge1xuICAgICAgdGhpcy5wYXJlbnQgPSBwYXJlbnQ7XG4gICAgICBpZiAodGhpcy5wYXJlbnQpIHtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gdGhpcy5wYXJlbnQub3B0aW9ucztcbiAgICAgICAgdGhpcy5zdHJpbmdpZnkgPSB0aGlzLnBhcmVudC5zdHJpbmdpZnk7XG4gICAgICB9XG4gICAgICB0aGlzLmNoaWxkcmVuID0gW107XG4gICAgICBpZiAoIVhNTEVsZW1lbnQpIHtcbiAgICAgICAgWE1MRWxlbWVudCA9IHJlcXVpcmUoJy4vWE1MRWxlbWVudCcpO1xuICAgICAgICBYTUxDRGF0YSA9IHJlcXVpcmUoJy4vWE1MQ0RhdGEnKTtcbiAgICAgICAgWE1MQ29tbWVudCA9IHJlcXVpcmUoJy4vWE1MQ29tbWVudCcpO1xuICAgICAgICBYTUxEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4vWE1MRGVjbGFyYXRpb24nKTtcbiAgICAgICAgWE1MRG9jVHlwZSA9IHJlcXVpcmUoJy4vWE1MRG9jVHlwZScpO1xuICAgICAgICBYTUxSYXcgPSByZXF1aXJlKCcuL1hNTFJhdycpO1xuICAgICAgICBYTUxUZXh0ID0gcmVxdWlyZSgnLi9YTUxUZXh0Jyk7XG4gICAgICAgIFhNTFByb2Nlc3NpbmdJbnN0cnVjdGlvbiA9IHJlcXVpcmUoJy4vWE1MUHJvY2Vzc2luZ0luc3RydWN0aW9uJyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgWE1MTm9kZS5wcm90b3R5cGUuZWxlbWVudCA9IGZ1bmN0aW9uKG5hbWUsIGF0dHJpYnV0ZXMsIHRleHQpIHtcbiAgICAgIHZhciBjaGlsZE5vZGUsIGl0ZW0sIGosIGssIGtleSwgbGFzdENoaWxkLCBsZW4sIGxlbjEsIHJlZjEsIHZhbDtcbiAgICAgIGxhc3RDaGlsZCA9IG51bGw7XG4gICAgICBpZiAoYXR0cmlidXRlcyA9PSBudWxsKSB7XG4gICAgICAgIGF0dHJpYnV0ZXMgPSB7fTtcbiAgICAgIH1cbiAgICAgIGF0dHJpYnV0ZXMgPSBhdHRyaWJ1dGVzLnZhbHVlT2YoKTtcbiAgICAgIGlmICghaXNPYmplY3QoYXR0cmlidXRlcykpIHtcbiAgICAgICAgcmVmMSA9IFthdHRyaWJ1dGVzLCB0ZXh0XSwgdGV4dCA9IHJlZjFbMF0sIGF0dHJpYnV0ZXMgPSByZWYxWzFdO1xuICAgICAgfVxuICAgICAgaWYgKG5hbWUgIT0gbnVsbCkge1xuICAgICAgICBuYW1lID0gbmFtZS52YWx1ZU9mKCk7XG4gICAgICB9XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShuYW1lKSkge1xuICAgICAgICBmb3IgKGogPSAwLCBsZW4gPSBuYW1lLmxlbmd0aDsgaiA8IGxlbjsgaisrKSB7XG4gICAgICAgICAgaXRlbSA9IG5hbWVbal07XG4gICAgICAgICAgbGFzdENoaWxkID0gdGhpcy5lbGVtZW50KGl0ZW0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGlzRnVuY3Rpb24obmFtZSkpIHtcbiAgICAgICAgbGFzdENoaWxkID0gdGhpcy5lbGVtZW50KG5hbWUuYXBwbHkoKSk7XG4gICAgICB9IGVsc2UgaWYgKGlzT2JqZWN0KG5hbWUpKSB7XG4gICAgICAgIGZvciAoa2V5IGluIG5hbWUpIHtcbiAgICAgICAgICBpZiAoIWhhc1Byb3AuY2FsbChuYW1lLCBrZXkpKSBjb250aW51ZTtcbiAgICAgICAgICB2YWwgPSBuYW1lW2tleV07XG4gICAgICAgICAgaWYgKGlzRnVuY3Rpb24odmFsKSkge1xuICAgICAgICAgICAgdmFsID0gdmFsLmFwcGx5KCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICgoaXNPYmplY3QodmFsKSkgJiYgKGlzRW1wdHkodmFsKSkpIHtcbiAgICAgICAgICAgIHZhbCA9IG51bGw7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICghdGhpcy5vcHRpb25zLmlnbm9yZURlY29yYXRvcnMgJiYgdGhpcy5zdHJpbmdpZnkuY29udmVydEF0dEtleSAmJiBrZXkuaW5kZXhPZih0aGlzLnN0cmluZ2lmeS5jb252ZXJ0QXR0S2V5KSA9PT0gMCkge1xuICAgICAgICAgICAgbGFzdENoaWxkID0gdGhpcy5hdHRyaWJ1dGUoa2V5LnN1YnN0cih0aGlzLnN0cmluZ2lmeS5jb252ZXJ0QXR0S2V5Lmxlbmd0aCksIHZhbCk7XG4gICAgICAgICAgfSBlbHNlIGlmICghdGhpcy5vcHRpb25zLnNlcGFyYXRlQXJyYXlJdGVtcyAmJiBBcnJheS5pc0FycmF5KHZhbCkpIHtcbiAgICAgICAgICAgIGZvciAoayA9IDAsIGxlbjEgPSB2YWwubGVuZ3RoOyBrIDwgbGVuMTsgaysrKSB7XG4gICAgICAgICAgICAgIGl0ZW0gPSB2YWxba107XG4gICAgICAgICAgICAgIGNoaWxkTm9kZSA9IHt9O1xuICAgICAgICAgICAgICBjaGlsZE5vZGVba2V5XSA9IGl0ZW07XG4gICAgICAgICAgICAgIGxhc3RDaGlsZCA9IHRoaXMuZWxlbWVudChjaGlsZE5vZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSBpZiAoaXNPYmplY3QodmFsKSkge1xuICAgICAgICAgICAgbGFzdENoaWxkID0gdGhpcy5lbGVtZW50KGtleSk7XG4gICAgICAgICAgICBsYXN0Q2hpbGQuZWxlbWVudCh2YWwpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsYXN0Q2hpbGQgPSB0aGlzLmVsZW1lbnQoa2V5LCB2YWwpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKCF0aGlzLm9wdGlvbnMuaWdub3JlRGVjb3JhdG9ycyAmJiB0aGlzLnN0cmluZ2lmeS5jb252ZXJ0VGV4dEtleSAmJiBuYW1lLmluZGV4T2YodGhpcy5zdHJpbmdpZnkuY29udmVydFRleHRLZXkpID09PSAwKSB7XG4gICAgICAgICAgbGFzdENoaWxkID0gdGhpcy50ZXh0KHRleHQpO1xuICAgICAgICB9IGVsc2UgaWYgKCF0aGlzLm9wdGlvbnMuaWdub3JlRGVjb3JhdG9ycyAmJiB0aGlzLnN0cmluZ2lmeS5jb252ZXJ0Q0RhdGFLZXkgJiYgbmFtZS5pbmRleE9mKHRoaXMuc3RyaW5naWZ5LmNvbnZlcnRDRGF0YUtleSkgPT09IDApIHtcbiAgICAgICAgICBsYXN0Q2hpbGQgPSB0aGlzLmNkYXRhKHRleHQpO1xuICAgICAgICB9IGVsc2UgaWYgKCF0aGlzLm9wdGlvbnMuaWdub3JlRGVjb3JhdG9ycyAmJiB0aGlzLnN0cmluZ2lmeS5jb252ZXJ0Q29tbWVudEtleSAmJiBuYW1lLmluZGV4T2YodGhpcy5zdHJpbmdpZnkuY29udmVydENvbW1lbnRLZXkpID09PSAwKSB7XG4gICAgICAgICAgbGFzdENoaWxkID0gdGhpcy5jb21tZW50KHRleHQpO1xuICAgICAgICB9IGVsc2UgaWYgKCF0aGlzLm9wdGlvbnMuaWdub3JlRGVjb3JhdG9ycyAmJiB0aGlzLnN0cmluZ2lmeS5jb252ZXJ0UmF3S2V5ICYmIG5hbWUuaW5kZXhPZih0aGlzLnN0cmluZ2lmeS5jb252ZXJ0UmF3S2V5KSA9PT0gMCkge1xuICAgICAgICAgIGxhc3RDaGlsZCA9IHRoaXMucmF3KHRleHQpO1xuICAgICAgICB9IGVsc2UgaWYgKCF0aGlzLm9wdGlvbnMuaWdub3JlRGVjb3JhdG9ycyAmJiB0aGlzLnN0cmluZ2lmeS5jb252ZXJ0UElLZXkgJiYgbmFtZS5pbmRleE9mKHRoaXMuc3RyaW5naWZ5LmNvbnZlcnRQSUtleSkgPT09IDApIHtcbiAgICAgICAgICBsYXN0Q2hpbGQgPSB0aGlzLmluc3RydWN0aW9uKG5hbWUuc3Vic3RyKHRoaXMuc3RyaW5naWZ5LmNvbnZlcnRQSUtleS5sZW5ndGgpLCB0ZXh0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBsYXN0Q2hpbGQgPSB0aGlzLm5vZGUobmFtZSwgYXR0cmlidXRlcywgdGV4dCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChsYXN0Q2hpbGQgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZCBub3QgY3JlYXRlIGFueSBlbGVtZW50cyB3aXRoOiBcIiArIG5hbWUpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGxhc3RDaGlsZDtcbiAgICB9O1xuXG4gICAgWE1MTm9kZS5wcm90b3R5cGUuaW5zZXJ0QmVmb3JlID0gZnVuY3Rpb24obmFtZSwgYXR0cmlidXRlcywgdGV4dCkge1xuICAgICAgdmFyIGNoaWxkLCBpLCByZW1vdmVkO1xuICAgICAgaWYgKHRoaXMuaXNSb290KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBpbnNlcnQgZWxlbWVudHMgYXQgcm9vdCBsZXZlbFwiKTtcbiAgICAgIH1cbiAgICAgIGkgPSB0aGlzLnBhcmVudC5jaGlsZHJlbi5pbmRleE9mKHRoaXMpO1xuICAgICAgcmVtb3ZlZCA9IHRoaXMucGFyZW50LmNoaWxkcmVuLnNwbGljZShpKTtcbiAgICAgIGNoaWxkID0gdGhpcy5wYXJlbnQuZWxlbWVudChuYW1lLCBhdHRyaWJ1dGVzLCB0ZXh0KTtcbiAgICAgIEFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KHRoaXMucGFyZW50LmNoaWxkcmVuLCByZW1vdmVkKTtcbiAgICAgIHJldHVybiBjaGlsZDtcbiAgICB9O1xuXG4gICAgWE1MTm9kZS5wcm90b3R5cGUuaW5zZXJ0QWZ0ZXIgPSBmdW5jdGlvbihuYW1lLCBhdHRyaWJ1dGVzLCB0ZXh0KSB7XG4gICAgICB2YXIgY2hpbGQsIGksIHJlbW92ZWQ7XG4gICAgICBpZiAodGhpcy5pc1Jvb3QpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGluc2VydCBlbGVtZW50cyBhdCByb290IGxldmVsXCIpO1xuICAgICAgfVxuICAgICAgaSA9IHRoaXMucGFyZW50LmNoaWxkcmVuLmluZGV4T2YodGhpcyk7XG4gICAgICByZW1vdmVkID0gdGhpcy5wYXJlbnQuY2hpbGRyZW4uc3BsaWNlKGkgKyAxKTtcbiAgICAgIGNoaWxkID0gdGhpcy5wYXJlbnQuZWxlbWVudChuYW1lLCBhdHRyaWJ1dGVzLCB0ZXh0KTtcbiAgICAgIEFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KHRoaXMucGFyZW50LmNoaWxkcmVuLCByZW1vdmVkKTtcbiAgICAgIHJldHVybiBjaGlsZDtcbiAgICB9O1xuXG4gICAgWE1MTm9kZS5wcm90b3R5cGUucmVtb3ZlID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgaSwgcmVmMTtcbiAgICAgIGlmICh0aGlzLmlzUm9vdCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgcmVtb3ZlIHRoZSByb290IGVsZW1lbnRcIik7XG4gICAgICB9XG4gICAgICBpID0gdGhpcy5wYXJlbnQuY2hpbGRyZW4uaW5kZXhPZih0aGlzKTtcbiAgICAgIFtdLnNwbGljZS5hcHBseSh0aGlzLnBhcmVudC5jaGlsZHJlbiwgW2ksIGkgLSBpICsgMV0uY29uY2F0KHJlZjEgPSBbXSkpLCByZWYxO1xuICAgICAgcmV0dXJuIHRoaXMucGFyZW50O1xuICAgIH07XG5cbiAgICBYTUxOb2RlLnByb3RvdHlwZS5ub2RlID0gZnVuY3Rpb24obmFtZSwgYXR0cmlidXRlcywgdGV4dCkge1xuICAgICAgdmFyIGNoaWxkLCByZWYxO1xuICAgICAgaWYgKG5hbWUgIT0gbnVsbCkge1xuICAgICAgICBuYW1lID0gbmFtZS52YWx1ZU9mKCk7XG4gICAgICB9XG4gICAgICBhdHRyaWJ1dGVzIHx8IChhdHRyaWJ1dGVzID0ge30pO1xuICAgICAgYXR0cmlidXRlcyA9IGF0dHJpYnV0ZXMudmFsdWVPZigpO1xuICAgICAgaWYgKCFpc09iamVjdChhdHRyaWJ1dGVzKSkge1xuICAgICAgICByZWYxID0gW2F0dHJpYnV0ZXMsIHRleHRdLCB0ZXh0ID0gcmVmMVswXSwgYXR0cmlidXRlcyA9IHJlZjFbMV07XG4gICAgICB9XG4gICAgICBjaGlsZCA9IG5ldyBYTUxFbGVtZW50KHRoaXMsIG5hbWUsIGF0dHJpYnV0ZXMpO1xuICAgICAgaWYgKHRleHQgIT0gbnVsbCkge1xuICAgICAgICBjaGlsZC50ZXh0KHRleHQpO1xuICAgICAgfVxuICAgICAgdGhpcy5jaGlsZHJlbi5wdXNoKGNoaWxkKTtcbiAgICAgIHJldHVybiBjaGlsZDtcbiAgICB9O1xuXG4gICAgWE1MTm9kZS5wcm90b3R5cGUudGV4dCA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICB2YXIgY2hpbGQ7XG4gICAgICBjaGlsZCA9IG5ldyBYTUxUZXh0KHRoaXMsIHZhbHVlKTtcbiAgICAgIHRoaXMuY2hpbGRyZW4ucHVzaChjaGlsZCk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuXG4gICAgWE1MTm9kZS5wcm90b3R5cGUuY2RhdGEgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgdmFyIGNoaWxkO1xuICAgICAgY2hpbGQgPSBuZXcgWE1MQ0RhdGEodGhpcywgdmFsdWUpO1xuICAgICAgdGhpcy5jaGlsZHJlbi5wdXNoKGNoaWxkKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG5cbiAgICBYTUxOb2RlLnByb3RvdHlwZS5jb21tZW50ID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgIHZhciBjaGlsZDtcbiAgICAgIGNoaWxkID0gbmV3IFhNTENvbW1lbnQodGhpcywgdmFsdWUpO1xuICAgICAgdGhpcy5jaGlsZHJlbi5wdXNoKGNoaWxkKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG5cbiAgICBYTUxOb2RlLnByb3RvdHlwZS5jb21tZW50QmVmb3JlID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgIHZhciBjaGlsZCwgaSwgcmVtb3ZlZDtcbiAgICAgIGkgPSB0aGlzLnBhcmVudC5jaGlsZHJlbi5pbmRleE9mKHRoaXMpO1xuICAgICAgcmVtb3ZlZCA9IHRoaXMucGFyZW50LmNoaWxkcmVuLnNwbGljZShpKTtcbiAgICAgIGNoaWxkID0gdGhpcy5wYXJlbnQuY29tbWVudCh2YWx1ZSk7XG4gICAgICBBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseSh0aGlzLnBhcmVudC5jaGlsZHJlbiwgcmVtb3ZlZCk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuXG4gICAgWE1MTm9kZS5wcm90b3R5cGUuY29tbWVudEFmdGVyID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgIHZhciBjaGlsZCwgaSwgcmVtb3ZlZDtcbiAgICAgIGkgPSB0aGlzLnBhcmVudC5jaGlsZHJlbi5pbmRleE9mKHRoaXMpO1xuICAgICAgcmVtb3ZlZCA9IHRoaXMucGFyZW50LmNoaWxkcmVuLnNwbGljZShpICsgMSk7XG4gICAgICBjaGlsZCA9IHRoaXMucGFyZW50LmNvbW1lbnQodmFsdWUpO1xuICAgICAgQXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkodGhpcy5wYXJlbnQuY2hpbGRyZW4sIHJlbW92ZWQpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcblxuICAgIFhNTE5vZGUucHJvdG90eXBlLnJhdyA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICB2YXIgY2hpbGQ7XG4gICAgICBjaGlsZCA9IG5ldyBYTUxSYXcodGhpcywgdmFsdWUpO1xuICAgICAgdGhpcy5jaGlsZHJlbi5wdXNoKGNoaWxkKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG5cbiAgICBYTUxOb2RlLnByb3RvdHlwZS5pbnN0cnVjdGlvbiA9IGZ1bmN0aW9uKHRhcmdldCwgdmFsdWUpIHtcbiAgICAgIHZhciBpbnNUYXJnZXQsIGluc1ZhbHVlLCBpbnN0cnVjdGlvbiwgaiwgbGVuO1xuICAgICAgaWYgKHRhcmdldCAhPSBudWxsKSB7XG4gICAgICAgIHRhcmdldCA9IHRhcmdldC52YWx1ZU9mKCk7XG4gICAgICB9XG4gICAgICBpZiAodmFsdWUgIT0gbnVsbCkge1xuICAgICAgICB2YWx1ZSA9IHZhbHVlLnZhbHVlT2YoKTtcbiAgICAgIH1cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHRhcmdldCkpIHtcbiAgICAgICAgZm9yIChqID0gMCwgbGVuID0gdGFyZ2V0Lmxlbmd0aDsgaiA8IGxlbjsgaisrKSB7XG4gICAgICAgICAgaW5zVGFyZ2V0ID0gdGFyZ2V0W2pdO1xuICAgICAgICAgIHRoaXMuaW5zdHJ1Y3Rpb24oaW5zVGFyZ2V0KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChpc09iamVjdCh0YXJnZXQpKSB7XG4gICAgICAgIGZvciAoaW5zVGFyZ2V0IGluIHRhcmdldCkge1xuICAgICAgICAgIGlmICghaGFzUHJvcC5jYWxsKHRhcmdldCwgaW5zVGFyZ2V0KSkgY29udGludWU7XG4gICAgICAgICAgaW5zVmFsdWUgPSB0YXJnZXRbaW5zVGFyZ2V0XTtcbiAgICAgICAgICB0aGlzLmluc3RydWN0aW9uKGluc1RhcmdldCwgaW5zVmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoaXNGdW5jdGlvbih2YWx1ZSkpIHtcbiAgICAgICAgICB2YWx1ZSA9IHZhbHVlLmFwcGx5KCk7XG4gICAgICAgIH1cbiAgICAgICAgaW5zdHJ1Y3Rpb24gPSBuZXcgWE1MUHJvY2Vzc2luZ0luc3RydWN0aW9uKHRoaXMsIHRhcmdldCwgdmFsdWUpO1xuICAgICAgICB0aGlzLmNoaWxkcmVuLnB1c2goaW5zdHJ1Y3Rpb24pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcblxuICAgIFhNTE5vZGUucHJvdG90eXBlLmluc3RydWN0aW9uQmVmb3JlID0gZnVuY3Rpb24odGFyZ2V0LCB2YWx1ZSkge1xuICAgICAgdmFyIGNoaWxkLCBpLCByZW1vdmVkO1xuICAgICAgaSA9IHRoaXMucGFyZW50LmNoaWxkcmVuLmluZGV4T2YodGhpcyk7XG4gICAgICByZW1vdmVkID0gdGhpcy5wYXJlbnQuY2hpbGRyZW4uc3BsaWNlKGkpO1xuICAgICAgY2hpbGQgPSB0aGlzLnBhcmVudC5pbnN0cnVjdGlvbih0YXJnZXQsIHZhbHVlKTtcbiAgICAgIEFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KHRoaXMucGFyZW50LmNoaWxkcmVuLCByZW1vdmVkKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG5cbiAgICBYTUxOb2RlLnByb3RvdHlwZS5pbnN0cnVjdGlvbkFmdGVyID0gZnVuY3Rpb24odGFyZ2V0LCB2YWx1ZSkge1xuICAgICAgdmFyIGNoaWxkLCBpLCByZW1vdmVkO1xuICAgICAgaSA9IHRoaXMucGFyZW50LmNoaWxkcmVuLmluZGV4T2YodGhpcyk7XG4gICAgICByZW1vdmVkID0gdGhpcy5wYXJlbnQuY2hpbGRyZW4uc3BsaWNlKGkgKyAxKTtcbiAgICAgIGNoaWxkID0gdGhpcy5wYXJlbnQuaW5zdHJ1Y3Rpb24odGFyZ2V0LCB2YWx1ZSk7XG4gICAgICBBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseSh0aGlzLnBhcmVudC5jaGlsZHJlbiwgcmVtb3ZlZCk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuXG4gICAgWE1MTm9kZS5wcm90b3R5cGUuZGVjbGFyYXRpb24gPSBmdW5jdGlvbih2ZXJzaW9uLCBlbmNvZGluZywgc3RhbmRhbG9uZSkge1xuICAgICAgdmFyIGRvYywgeG1sZGVjO1xuICAgICAgZG9jID0gdGhpcy5kb2N1bWVudCgpO1xuICAgICAgeG1sZGVjID0gbmV3IFhNTERlY2xhcmF0aW9uKGRvYywgdmVyc2lvbiwgZW5jb2RpbmcsIHN0YW5kYWxvbmUpO1xuICAgICAgaWYgKGRvYy5jaGlsZHJlblswXSBpbnN0YW5jZW9mIFhNTERlY2xhcmF0aW9uKSB7XG4gICAgICAgIGRvYy5jaGlsZHJlblswXSA9IHhtbGRlYztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRvYy5jaGlsZHJlbi51bnNoaWZ0KHhtbGRlYyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gZG9jLnJvb3QoKSB8fCBkb2M7XG4gICAgfTtcblxuICAgIFhNTE5vZGUucHJvdG90eXBlLmRvY3R5cGUgPSBmdW5jdGlvbihwdWJJRCwgc3lzSUQpIHtcbiAgICAgIHZhciBjaGlsZCwgZG9jLCBkb2N0eXBlLCBpLCBqLCBrLCBsZW4sIGxlbjEsIHJlZjEsIHJlZjI7XG4gICAgICBkb2MgPSB0aGlzLmRvY3VtZW50KCk7XG4gICAgICBkb2N0eXBlID0gbmV3IFhNTERvY1R5cGUoZG9jLCBwdWJJRCwgc3lzSUQpO1xuICAgICAgcmVmMSA9IGRvYy5jaGlsZHJlbjtcbiAgICAgIGZvciAoaSA9IGogPSAwLCBsZW4gPSByZWYxLmxlbmd0aDsgaiA8IGxlbjsgaSA9ICsraikge1xuICAgICAgICBjaGlsZCA9IHJlZjFbaV07XG4gICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIFhNTERvY1R5cGUpIHtcbiAgICAgICAgICBkb2MuY2hpbGRyZW5baV0gPSBkb2N0eXBlO1xuICAgICAgICAgIHJldHVybiBkb2N0eXBlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZWYyID0gZG9jLmNoaWxkcmVuO1xuICAgICAgZm9yIChpID0gayA9IDAsIGxlbjEgPSByZWYyLmxlbmd0aDsgayA8IGxlbjE7IGkgPSArK2spIHtcbiAgICAgICAgY2hpbGQgPSByZWYyW2ldO1xuICAgICAgICBpZiAoY2hpbGQuaXNSb290KSB7XG4gICAgICAgICAgZG9jLmNoaWxkcmVuLnNwbGljZShpLCAwLCBkb2N0eXBlKTtcbiAgICAgICAgICByZXR1cm4gZG9jdHlwZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZG9jLmNoaWxkcmVuLnB1c2goZG9jdHlwZSk7XG4gICAgICByZXR1cm4gZG9jdHlwZTtcbiAgICB9O1xuXG4gICAgWE1MTm9kZS5wcm90b3R5cGUudXAgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmICh0aGlzLmlzUm9vdCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgcm9vdCBub2RlIGhhcyBubyBwYXJlbnQuIFVzZSBkb2MoKSBpZiB5b3UgbmVlZCB0byBnZXQgdGhlIGRvY3VtZW50IG9iamVjdC5cIik7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5wYXJlbnQ7XG4gICAgfTtcblxuICAgIFhNTE5vZGUucHJvdG90eXBlLnJvb3QgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBub2RlO1xuICAgICAgbm9kZSA9IHRoaXM7XG4gICAgICB3aGlsZSAobm9kZSkge1xuICAgICAgICBpZiAobm9kZS5pc0RvY3VtZW50KSB7XG4gICAgICAgICAgcmV0dXJuIG5vZGUucm9vdE9iamVjdDtcbiAgICAgICAgfSBlbHNlIGlmIChub2RlLmlzUm9vdCkge1xuICAgICAgICAgIHJldHVybiBub2RlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG5vZGUgPSBub2RlLnBhcmVudDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICBYTUxOb2RlLnByb3RvdHlwZS5kb2N1bWVudCA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIG5vZGU7XG4gICAgICBub2RlID0gdGhpcztcbiAgICAgIHdoaWxlIChub2RlKSB7XG4gICAgICAgIGlmIChub2RlLmlzRG9jdW1lbnQpIHtcbiAgICAgICAgICByZXR1cm4gbm9kZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBub2RlID0gbm9kZS5wYXJlbnQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgWE1MTm9kZS5wcm90b3R5cGUuZW5kID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgcmV0dXJuIHRoaXMuZG9jdW1lbnQoKS5lbmQob3B0aW9ucyk7XG4gICAgfTtcblxuICAgIFhNTE5vZGUucHJvdG90eXBlLnByZXYgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBpO1xuICAgICAgaSA9IHRoaXMucGFyZW50LmNoaWxkcmVuLmluZGV4T2YodGhpcyk7XG4gICAgICBpZiAoaSA8IDEpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQWxyZWFkeSBhdCB0aGUgZmlyc3Qgbm9kZVwiKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzLnBhcmVudC5jaGlsZHJlbltpIC0gMV07XG4gICAgfTtcblxuICAgIFhNTE5vZGUucHJvdG90eXBlLm5leHQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBpO1xuICAgICAgaSA9IHRoaXMucGFyZW50LmNoaWxkcmVuLmluZGV4T2YodGhpcyk7XG4gICAgICBpZiAoaSA9PT0gLTEgfHwgaSA9PT0gdGhpcy5wYXJlbnQuY2hpbGRyZW4ubGVuZ3RoIC0gMSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBbHJlYWR5IGF0IHRoZSBsYXN0IG5vZGVcIik7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5wYXJlbnQuY2hpbGRyZW5baSArIDFdO1xuICAgIH07XG5cbiAgICBYTUxOb2RlLnByb3RvdHlwZS5pbXBvcnREb2N1bWVudCA9IGZ1bmN0aW9uKGRvYykge1xuICAgICAgdmFyIGNsb25lZFJvb3Q7XG4gICAgICBjbG9uZWRSb290ID0gZG9jLnJvb3QoKS5jbG9uZSgpO1xuICAgICAgY2xvbmVkUm9vdC5wYXJlbnQgPSB0aGlzO1xuICAgICAgY2xvbmVkUm9vdC5pc1Jvb3QgPSBmYWxzZTtcbiAgICAgIHRoaXMuY2hpbGRyZW4ucHVzaChjbG9uZWRSb290KTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG5cbiAgICBYTUxOb2RlLnByb3RvdHlwZS5lbGUgPSBmdW5jdGlvbihuYW1lLCBhdHRyaWJ1dGVzLCB0ZXh0KSB7XG4gICAgICByZXR1cm4gdGhpcy5lbGVtZW50KG5hbWUsIGF0dHJpYnV0ZXMsIHRleHQpO1xuICAgIH07XG5cbiAgICBYTUxOb2RlLnByb3RvdHlwZS5ub2QgPSBmdW5jdGlvbihuYW1lLCBhdHRyaWJ1dGVzLCB0ZXh0KSB7XG4gICAgICByZXR1cm4gdGhpcy5ub2RlKG5hbWUsIGF0dHJpYnV0ZXMsIHRleHQpO1xuICAgIH07XG5cbiAgICBYTUxOb2RlLnByb3RvdHlwZS50eHQgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgcmV0dXJuIHRoaXMudGV4dCh2YWx1ZSk7XG4gICAgfTtcblxuICAgIFhNTE5vZGUucHJvdG90eXBlLmRhdCA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICByZXR1cm4gdGhpcy5jZGF0YSh2YWx1ZSk7XG4gICAgfTtcblxuICAgIFhNTE5vZGUucHJvdG90eXBlLmNvbSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICByZXR1cm4gdGhpcy5jb21tZW50KHZhbHVlKTtcbiAgICB9O1xuXG4gICAgWE1MTm9kZS5wcm90b3R5cGUuaW5zID0gZnVuY3Rpb24odGFyZ2V0LCB2YWx1ZSkge1xuICAgICAgcmV0dXJuIHRoaXMuaW5zdHJ1Y3Rpb24odGFyZ2V0LCB2YWx1ZSk7XG4gICAgfTtcblxuICAgIFhNTE5vZGUucHJvdG90eXBlLmRvYyA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuZG9jdW1lbnQoKTtcbiAgICB9O1xuXG4gICAgWE1MTm9kZS5wcm90b3R5cGUuZGVjID0gZnVuY3Rpb24odmVyc2lvbiwgZW5jb2RpbmcsIHN0YW5kYWxvbmUpIHtcbiAgICAgIHJldHVybiB0aGlzLmRlY2xhcmF0aW9uKHZlcnNpb24sIGVuY29kaW5nLCBzdGFuZGFsb25lKTtcbiAgICB9O1xuXG4gICAgWE1MTm9kZS5wcm90b3R5cGUuZHRkID0gZnVuY3Rpb24ocHViSUQsIHN5c0lEKSB7XG4gICAgICByZXR1cm4gdGhpcy5kb2N0eXBlKHB1YklELCBzeXNJRCk7XG4gICAgfTtcblxuICAgIFhNTE5vZGUucHJvdG90eXBlLmUgPSBmdW5jdGlvbihuYW1lLCBhdHRyaWJ1dGVzLCB0ZXh0KSB7XG4gICAgICByZXR1cm4gdGhpcy5lbGVtZW50KG5hbWUsIGF0dHJpYnV0ZXMsIHRleHQpO1xuICAgIH07XG5cbiAgICBYTUxOb2RlLnByb3RvdHlwZS5uID0gZnVuY3Rpb24obmFtZSwgYXR0cmlidXRlcywgdGV4dCkge1xuICAgICAgcmV0dXJuIHRoaXMubm9kZShuYW1lLCBhdHRyaWJ1dGVzLCB0ZXh0KTtcbiAgICB9O1xuXG4gICAgWE1MTm9kZS5wcm90b3R5cGUudCA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICByZXR1cm4gdGhpcy50ZXh0KHZhbHVlKTtcbiAgICB9O1xuXG4gICAgWE1MTm9kZS5wcm90b3R5cGUuZCA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICByZXR1cm4gdGhpcy5jZGF0YSh2YWx1ZSk7XG4gICAgfTtcblxuICAgIFhNTE5vZGUucHJvdG90eXBlLmMgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgcmV0dXJuIHRoaXMuY29tbWVudCh2YWx1ZSk7XG4gICAgfTtcblxuICAgIFhNTE5vZGUucHJvdG90eXBlLnIgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgcmV0dXJuIHRoaXMucmF3KHZhbHVlKTtcbiAgICB9O1xuXG4gICAgWE1MTm9kZS5wcm90b3R5cGUuaSA9IGZ1bmN0aW9uKHRhcmdldCwgdmFsdWUpIHtcbiAgICAgIHJldHVybiB0aGlzLmluc3RydWN0aW9uKHRhcmdldCwgdmFsdWUpO1xuICAgIH07XG5cbiAgICBYTUxOb2RlLnByb3RvdHlwZS51ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy51cCgpO1xuICAgIH07XG5cbiAgICBYTUxOb2RlLnByb3RvdHlwZS5pbXBvcnRYTUxCdWlsZGVyID0gZnVuY3Rpb24oZG9jKSB7XG4gICAgICByZXR1cm4gdGhpcy5pbXBvcnREb2N1bWVudChkb2MpO1xuICAgIH07XG5cbiAgICByZXR1cm4gWE1MTm9kZTtcblxuICB9KSgpO1xuXG59KS5jYWxsKHRoaXMpO1xuIiwiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbihmdW5jdGlvbigpIHtcbiAgdmFyIFhNTE5vZGUsIFhNTFByb2Nlc3NpbmdJbnN0cnVjdGlvbixcbiAgICBleHRlbmQgPSBmdW5jdGlvbihjaGlsZCwgcGFyZW50KSB7IGZvciAodmFyIGtleSBpbiBwYXJlbnQpIHsgaWYgKGhhc1Byb3AuY2FsbChwYXJlbnQsIGtleSkpIGNoaWxkW2tleV0gPSBwYXJlbnRba2V5XTsgfSBmdW5jdGlvbiBjdG9yKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7IH0gY3Rvci5wcm90b3R5cGUgPSBwYXJlbnQucHJvdG90eXBlOyBjaGlsZC5wcm90b3R5cGUgPSBuZXcgY3RvcigpOyBjaGlsZC5fX3N1cGVyX18gPSBwYXJlbnQucHJvdG90eXBlOyByZXR1cm4gY2hpbGQ7IH0sXG4gICAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5O1xuXG4gIFhNTE5vZGUgPSByZXF1aXJlKCcuL1hNTE5vZGUnKTtcblxuICBtb2R1bGUuZXhwb3J0cyA9IFhNTFByb2Nlc3NpbmdJbnN0cnVjdGlvbiA9IChmdW5jdGlvbihzdXBlckNsYXNzKSB7XG4gICAgZXh0ZW5kKFhNTFByb2Nlc3NpbmdJbnN0cnVjdGlvbiwgc3VwZXJDbGFzcyk7XG5cbiAgICBmdW5jdGlvbiBYTUxQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24ocGFyZW50LCB0YXJnZXQsIHZhbHVlKSB7XG4gICAgICBYTUxQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24uX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgcGFyZW50KTtcbiAgICAgIGlmICh0YXJnZXQgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIGluc3RydWN0aW9uIHRhcmdldFwiKTtcbiAgICAgIH1cbiAgICAgIHRoaXMudGFyZ2V0ID0gdGhpcy5zdHJpbmdpZnkuaW5zVGFyZ2V0KHRhcmdldCk7XG4gICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgdGhpcy52YWx1ZSA9IHRoaXMuc3RyaW5naWZ5Lmluc1ZhbHVlKHZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBYTUxQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24ucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gT2JqZWN0LmNyZWF0ZSh0aGlzKTtcbiAgICB9O1xuXG4gICAgWE1MUHJvY2Vzc2luZ0luc3RydWN0aW9uLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMud3JpdGVyLnNldChvcHRpb25zKS5wcm9jZXNzaW5nSW5zdHJ1Y3Rpb24odGhpcyk7XG4gICAgfTtcblxuICAgIHJldHVybiBYTUxQcm9jZXNzaW5nSW5zdHJ1Y3Rpb247XG5cbiAgfSkoWE1MTm9kZSk7XG5cbn0pLmNhbGwodGhpcyk7XG4iLCIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuMTIuN1xuKGZ1bmN0aW9uKCkge1xuICB2YXIgWE1MTm9kZSwgWE1MUmF3LFxuICAgIGV4dGVuZCA9IGZ1bmN0aW9uKGNoaWxkLCBwYXJlbnQpIHsgZm9yICh2YXIga2V5IGluIHBhcmVudCkgeyBpZiAoaGFzUHJvcC5jYWxsKHBhcmVudCwga2V5KSkgY2hpbGRba2V5XSA9IHBhcmVudFtrZXldOyB9IGZ1bmN0aW9uIGN0b3IoKSB7IHRoaXMuY29uc3RydWN0b3IgPSBjaGlsZDsgfSBjdG9yLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7IGNoaWxkLnByb3RvdHlwZSA9IG5ldyBjdG9yKCk7IGNoaWxkLl9fc3VwZXJfXyA9IHBhcmVudC5wcm90b3R5cGU7IHJldHVybiBjaGlsZDsgfSxcbiAgICBoYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHk7XG5cbiAgWE1MTm9kZSA9IHJlcXVpcmUoJy4vWE1MTm9kZScpO1xuXG4gIG1vZHVsZS5leHBvcnRzID0gWE1MUmF3ID0gKGZ1bmN0aW9uKHN1cGVyQ2xhc3MpIHtcbiAgICBleHRlbmQoWE1MUmF3LCBzdXBlckNsYXNzKTtcblxuICAgIGZ1bmN0aW9uIFhNTFJhdyhwYXJlbnQsIHRleHQpIHtcbiAgICAgIFhNTFJhdy5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBwYXJlbnQpO1xuICAgICAgaWYgKHRleHQgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIHJhdyB0ZXh0XCIpO1xuICAgICAgfVxuICAgICAgdGhpcy52YWx1ZSA9IHRoaXMuc3RyaW5naWZ5LnJhdyh0ZXh0KTtcbiAgICB9XG5cbiAgICBYTUxSYXcucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gT2JqZWN0LmNyZWF0ZSh0aGlzKTtcbiAgICB9O1xuXG4gICAgWE1MUmF3LnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMud3JpdGVyLnNldChvcHRpb25zKS5yYXcodGhpcyk7XG4gICAgfTtcblxuICAgIHJldHVybiBYTUxSYXc7XG5cbiAgfSkoWE1MTm9kZSk7XG5cbn0pLmNhbGwodGhpcyk7XG4iLCIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuMTIuN1xuKGZ1bmN0aW9uKCkge1xuICB2YXIgWE1MQ0RhdGEsIFhNTENvbW1lbnQsIFhNTERUREF0dExpc3QsIFhNTERUREVsZW1lbnQsIFhNTERUREVudGl0eSwgWE1MRFRETm90YXRpb24sIFhNTERlY2xhcmF0aW9uLCBYTUxEb2NUeXBlLCBYTUxFbGVtZW50LCBYTUxQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24sIFhNTFJhdywgWE1MU3RyZWFtV3JpdGVyLCBYTUxUZXh0LCBYTUxXcml0ZXJCYXNlLFxuICAgIGV4dGVuZCA9IGZ1bmN0aW9uKGNoaWxkLCBwYXJlbnQpIHsgZm9yICh2YXIga2V5IGluIHBhcmVudCkgeyBpZiAoaGFzUHJvcC5jYWxsKHBhcmVudCwga2V5KSkgY2hpbGRba2V5XSA9IHBhcmVudFtrZXldOyB9IGZ1bmN0aW9uIGN0b3IoKSB7IHRoaXMuY29uc3RydWN0b3IgPSBjaGlsZDsgfSBjdG9yLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7IGNoaWxkLnByb3RvdHlwZSA9IG5ldyBjdG9yKCk7IGNoaWxkLl9fc3VwZXJfXyA9IHBhcmVudC5wcm90b3R5cGU7IHJldHVybiBjaGlsZDsgfSxcbiAgICBoYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHk7XG5cbiAgWE1MRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuL1hNTERlY2xhcmF0aW9uJyk7XG5cbiAgWE1MRG9jVHlwZSA9IHJlcXVpcmUoJy4vWE1MRG9jVHlwZScpO1xuXG4gIFhNTENEYXRhID0gcmVxdWlyZSgnLi9YTUxDRGF0YScpO1xuXG4gIFhNTENvbW1lbnQgPSByZXF1aXJlKCcuL1hNTENvbW1lbnQnKTtcblxuICBYTUxFbGVtZW50ID0gcmVxdWlyZSgnLi9YTUxFbGVtZW50Jyk7XG5cbiAgWE1MUmF3ID0gcmVxdWlyZSgnLi9YTUxSYXcnKTtcblxuICBYTUxUZXh0ID0gcmVxdWlyZSgnLi9YTUxUZXh0Jyk7XG5cbiAgWE1MUHJvY2Vzc2luZ0luc3RydWN0aW9uID0gcmVxdWlyZSgnLi9YTUxQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24nKTtcblxuICBYTUxEVERBdHRMaXN0ID0gcmVxdWlyZSgnLi9YTUxEVERBdHRMaXN0Jyk7XG5cbiAgWE1MRFRERWxlbWVudCA9IHJlcXVpcmUoJy4vWE1MRFRERWxlbWVudCcpO1xuXG4gIFhNTERUREVudGl0eSA9IHJlcXVpcmUoJy4vWE1MRFRERW50aXR5Jyk7XG5cbiAgWE1MRFRETm90YXRpb24gPSByZXF1aXJlKCcuL1hNTERURE5vdGF0aW9uJyk7XG5cbiAgWE1MV3JpdGVyQmFzZSA9IHJlcXVpcmUoJy4vWE1MV3JpdGVyQmFzZScpO1xuXG4gIG1vZHVsZS5leHBvcnRzID0gWE1MU3RyZWFtV3JpdGVyID0gKGZ1bmN0aW9uKHN1cGVyQ2xhc3MpIHtcbiAgICBleHRlbmQoWE1MU3RyZWFtV3JpdGVyLCBzdXBlckNsYXNzKTtcblxuICAgIGZ1bmN0aW9uIFhNTFN0cmVhbVdyaXRlcihzdHJlYW0sIG9wdGlvbnMpIHtcbiAgICAgIFhNTFN0cmVhbVdyaXRlci5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBvcHRpb25zKTtcbiAgICAgIHRoaXMuc3RyZWFtID0gc3RyZWFtO1xuICAgIH1cblxuICAgIFhNTFN0cmVhbVdyaXRlci5wcm90b3R5cGUuZG9jdW1lbnQgPSBmdW5jdGlvbihkb2MpIHtcbiAgICAgIHZhciBjaGlsZCwgaSwgaiwgbGVuLCBsZW4xLCByZWYsIHJlZjEsIHJlc3VsdHM7XG4gICAgICByZWYgPSBkb2MuY2hpbGRyZW47XG4gICAgICBmb3IgKGkgPSAwLCBsZW4gPSByZWYubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgY2hpbGQgPSByZWZbaV07XG4gICAgICAgIGNoaWxkLmlzTGFzdFJvb3ROb2RlID0gZmFsc2U7XG4gICAgICB9XG4gICAgICBkb2MuY2hpbGRyZW5bZG9jLmNoaWxkcmVuLmxlbmd0aCAtIDFdLmlzTGFzdFJvb3ROb2RlID0gdHJ1ZTtcbiAgICAgIHJlZjEgPSBkb2MuY2hpbGRyZW47XG4gICAgICByZXN1bHRzID0gW107XG4gICAgICBmb3IgKGogPSAwLCBsZW4xID0gcmVmMS5sZW5ndGg7IGogPCBsZW4xOyBqKyspIHtcbiAgICAgICAgY2hpbGQgPSByZWYxW2pdO1xuICAgICAgICBzd2l0Y2ggKGZhbHNlKSB7XG4gICAgICAgICAgY2FzZSAhKGNoaWxkIGluc3RhbmNlb2YgWE1MRGVjbGFyYXRpb24pOlxuICAgICAgICAgICAgcmVzdWx0cy5wdXNoKHRoaXMuZGVjbGFyYXRpb24oY2hpbGQpKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgIShjaGlsZCBpbnN0YW5jZW9mIFhNTERvY1R5cGUpOlxuICAgICAgICAgICAgcmVzdWx0cy5wdXNoKHRoaXMuZG9jVHlwZShjaGlsZCkpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSAhKGNoaWxkIGluc3RhbmNlb2YgWE1MQ29tbWVudCk6XG4gICAgICAgICAgICByZXN1bHRzLnB1c2godGhpcy5jb21tZW50KGNoaWxkKSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlICEoY2hpbGQgaW5zdGFuY2VvZiBYTUxQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24pOlxuICAgICAgICAgICAgcmVzdWx0cy5wdXNoKHRoaXMucHJvY2Vzc2luZ0luc3RydWN0aW9uKGNoaWxkKSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmVzdWx0cy5wdXNoKHRoaXMuZWxlbWVudChjaGlsZCkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0cztcbiAgICB9O1xuXG4gICAgWE1MU3RyZWFtV3JpdGVyLnByb3RvdHlwZS5hdHRyaWJ1dGUgPSBmdW5jdGlvbihhdHQpIHtcbiAgICAgIHJldHVybiB0aGlzLnN0cmVhbS53cml0ZSgnICcgKyBhdHQubmFtZSArICc9XCInICsgYXR0LnZhbHVlICsgJ1wiJyk7XG4gICAgfTtcblxuICAgIFhNTFN0cmVhbVdyaXRlci5wcm90b3R5cGUuY2RhdGEgPSBmdW5jdGlvbihub2RlLCBsZXZlbCkge1xuICAgICAgcmV0dXJuIHRoaXMuc3RyZWFtLndyaXRlKHRoaXMuc3BhY2UobGV2ZWwpICsgJzwhW0NEQVRBWycgKyBub2RlLnRleHQgKyAnXV0+JyArIHRoaXMuZW5kbGluZShub2RlKSk7XG4gICAgfTtcblxuICAgIFhNTFN0cmVhbVdyaXRlci5wcm90b3R5cGUuY29tbWVudCA9IGZ1bmN0aW9uKG5vZGUsIGxldmVsKSB7XG4gICAgICByZXR1cm4gdGhpcy5zdHJlYW0ud3JpdGUodGhpcy5zcGFjZShsZXZlbCkgKyAnPCEtLSAnICsgbm9kZS50ZXh0ICsgJyAtLT4nICsgdGhpcy5lbmRsaW5lKG5vZGUpKTtcbiAgICB9O1xuXG4gICAgWE1MU3RyZWFtV3JpdGVyLnByb3RvdHlwZS5kZWNsYXJhdGlvbiA9IGZ1bmN0aW9uKG5vZGUsIGxldmVsKSB7XG4gICAgICB0aGlzLnN0cmVhbS53cml0ZSh0aGlzLnNwYWNlKGxldmVsKSk7XG4gICAgICB0aGlzLnN0cmVhbS53cml0ZSgnPD94bWwgdmVyc2lvbj1cIicgKyBub2RlLnZlcnNpb24gKyAnXCInKTtcbiAgICAgIGlmIChub2RlLmVuY29kaW5nICE9IG51bGwpIHtcbiAgICAgICAgdGhpcy5zdHJlYW0ud3JpdGUoJyBlbmNvZGluZz1cIicgKyBub2RlLmVuY29kaW5nICsgJ1wiJyk7XG4gICAgICB9XG4gICAgICBpZiAobm9kZS5zdGFuZGFsb25lICE9IG51bGwpIHtcbiAgICAgICAgdGhpcy5zdHJlYW0ud3JpdGUoJyBzdGFuZGFsb25lPVwiJyArIG5vZGUuc3RhbmRhbG9uZSArICdcIicpO1xuICAgICAgfVxuICAgICAgdGhpcy5zdHJlYW0ud3JpdGUodGhpcy5zcGFjZWJlZm9yZXNsYXNoICsgJz8+Jyk7XG4gICAgICByZXR1cm4gdGhpcy5zdHJlYW0ud3JpdGUodGhpcy5lbmRsaW5lKG5vZGUpKTtcbiAgICB9O1xuXG4gICAgWE1MU3RyZWFtV3JpdGVyLnByb3RvdHlwZS5kb2NUeXBlID0gZnVuY3Rpb24obm9kZSwgbGV2ZWwpIHtcbiAgICAgIHZhciBjaGlsZCwgaSwgbGVuLCByZWY7XG4gICAgICBsZXZlbCB8fCAobGV2ZWwgPSAwKTtcbiAgICAgIHRoaXMuc3RyZWFtLndyaXRlKHRoaXMuc3BhY2UobGV2ZWwpKTtcbiAgICAgIHRoaXMuc3RyZWFtLndyaXRlKCc8IURPQ1RZUEUgJyArIG5vZGUucm9vdCgpLm5hbWUpO1xuICAgICAgaWYgKG5vZGUucHViSUQgJiYgbm9kZS5zeXNJRCkge1xuICAgICAgICB0aGlzLnN0cmVhbS53cml0ZSgnIFBVQkxJQyBcIicgKyBub2RlLnB1YklEICsgJ1wiIFwiJyArIG5vZGUuc3lzSUQgKyAnXCInKTtcbiAgICAgIH0gZWxzZSBpZiAobm9kZS5zeXNJRCkge1xuICAgICAgICB0aGlzLnN0cmVhbS53cml0ZSgnIFNZU1RFTSBcIicgKyBub2RlLnN5c0lEICsgJ1wiJyk7XG4gICAgICB9XG4gICAgICBpZiAobm9kZS5jaGlsZHJlbi5sZW5ndGggPiAwKSB7XG4gICAgICAgIHRoaXMuc3RyZWFtLndyaXRlKCcgWycpO1xuICAgICAgICB0aGlzLnN0cmVhbS53cml0ZSh0aGlzLmVuZGxpbmUobm9kZSkpO1xuICAgICAgICByZWYgPSBub2RlLmNoaWxkcmVuO1xuICAgICAgICBmb3IgKGkgPSAwLCBsZW4gPSByZWYubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICBjaGlsZCA9IHJlZltpXTtcbiAgICAgICAgICBzd2l0Y2ggKGZhbHNlKSB7XG4gICAgICAgICAgICBjYXNlICEoY2hpbGQgaW5zdGFuY2VvZiBYTUxEVERBdHRMaXN0KTpcbiAgICAgICAgICAgICAgdGhpcy5kdGRBdHRMaXN0KGNoaWxkLCBsZXZlbCArIDEpO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgIShjaGlsZCBpbnN0YW5jZW9mIFhNTERUREVsZW1lbnQpOlxuICAgICAgICAgICAgICB0aGlzLmR0ZEVsZW1lbnQoY2hpbGQsIGxldmVsICsgMSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAhKGNoaWxkIGluc3RhbmNlb2YgWE1MRFRERW50aXR5KTpcbiAgICAgICAgICAgICAgdGhpcy5kdGRFbnRpdHkoY2hpbGQsIGxldmVsICsgMSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAhKGNoaWxkIGluc3RhbmNlb2YgWE1MRFRETm90YXRpb24pOlxuICAgICAgICAgICAgICB0aGlzLmR0ZE5vdGF0aW9uKGNoaWxkLCBsZXZlbCArIDEpO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgIShjaGlsZCBpbnN0YW5jZW9mIFhNTENEYXRhKTpcbiAgICAgICAgICAgICAgdGhpcy5jZGF0YShjaGlsZCwgbGV2ZWwgKyAxKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICEoY2hpbGQgaW5zdGFuY2VvZiBYTUxDb21tZW50KTpcbiAgICAgICAgICAgICAgdGhpcy5jb21tZW50KGNoaWxkLCBsZXZlbCArIDEpO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgIShjaGlsZCBpbnN0YW5jZW9mIFhNTFByb2Nlc3NpbmdJbnN0cnVjdGlvbik6XG4gICAgICAgICAgICAgIHRoaXMucHJvY2Vzc2luZ0luc3RydWN0aW9uKGNoaWxkLCBsZXZlbCArIDEpO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVua25vd24gRFREIG5vZGUgdHlwZTogXCIgKyBjaGlsZC5jb25zdHJ1Y3Rvci5uYW1lKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zdHJlYW0ud3JpdGUoJ10nKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuc3RyZWFtLndyaXRlKHRoaXMuc3BhY2ViZWZvcmVzbGFzaCArICc+Jyk7XG4gICAgICByZXR1cm4gdGhpcy5zdHJlYW0ud3JpdGUodGhpcy5lbmRsaW5lKG5vZGUpKTtcbiAgICB9O1xuXG4gICAgWE1MU3RyZWFtV3JpdGVyLnByb3RvdHlwZS5lbGVtZW50ID0gZnVuY3Rpb24obm9kZSwgbGV2ZWwpIHtcbiAgICAgIHZhciBhdHQsIGNoaWxkLCBpLCBsZW4sIG5hbWUsIHJlZiwgcmVmMSwgc3BhY2U7XG4gICAgICBsZXZlbCB8fCAobGV2ZWwgPSAwKTtcbiAgICAgIHNwYWNlID0gdGhpcy5zcGFjZShsZXZlbCk7XG4gICAgICB0aGlzLnN0cmVhbS53cml0ZShzcGFjZSArICc8JyArIG5vZGUubmFtZSk7XG4gICAgICByZWYgPSBub2RlLmF0dHJpYnV0ZXM7XG4gICAgICBmb3IgKG5hbWUgaW4gcmVmKSB7XG4gICAgICAgIGlmICghaGFzUHJvcC5jYWxsKHJlZiwgbmFtZSkpIGNvbnRpbnVlO1xuICAgICAgICBhdHQgPSByZWZbbmFtZV07XG4gICAgICAgIHRoaXMuYXR0cmlidXRlKGF0dCk7XG4gICAgICB9XG4gICAgICBpZiAobm9kZS5jaGlsZHJlbi5sZW5ndGggPT09IDAgfHwgbm9kZS5jaGlsZHJlbi5ldmVyeShmdW5jdGlvbihlKSB7XG4gICAgICAgIHJldHVybiBlLnZhbHVlID09PSAnJztcbiAgICAgIH0pKSB7XG4gICAgICAgIGlmICh0aGlzLmFsbG93RW1wdHkpIHtcbiAgICAgICAgICB0aGlzLnN0cmVhbS53cml0ZSgnPjwvJyArIG5vZGUubmFtZSArICc+Jyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5zdHJlYW0ud3JpdGUodGhpcy5zcGFjZWJlZm9yZXNsYXNoICsgJy8+Jyk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wcmV0dHkgJiYgbm9kZS5jaGlsZHJlbi5sZW5ndGggPT09IDEgJiYgKG5vZGUuY2hpbGRyZW5bMF0udmFsdWUgIT0gbnVsbCkpIHtcbiAgICAgICAgdGhpcy5zdHJlYW0ud3JpdGUoJz4nKTtcbiAgICAgICAgdGhpcy5zdHJlYW0ud3JpdGUobm9kZS5jaGlsZHJlblswXS52YWx1ZSk7XG4gICAgICAgIHRoaXMuc3RyZWFtLndyaXRlKCc8LycgKyBub2RlLm5hbWUgKyAnPicpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5zdHJlYW0ud3JpdGUoJz4nICsgdGhpcy5uZXdsaW5lKTtcbiAgICAgICAgcmVmMSA9IG5vZGUuY2hpbGRyZW47XG4gICAgICAgIGZvciAoaSA9IDAsIGxlbiA9IHJlZjEubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICBjaGlsZCA9IHJlZjFbaV07XG4gICAgICAgICAgc3dpdGNoIChmYWxzZSkge1xuICAgICAgICAgICAgY2FzZSAhKGNoaWxkIGluc3RhbmNlb2YgWE1MQ0RhdGEpOlxuICAgICAgICAgICAgICB0aGlzLmNkYXRhKGNoaWxkLCBsZXZlbCArIDEpO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgIShjaGlsZCBpbnN0YW5jZW9mIFhNTENvbW1lbnQpOlxuICAgICAgICAgICAgICB0aGlzLmNvbW1lbnQoY2hpbGQsIGxldmVsICsgMSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAhKGNoaWxkIGluc3RhbmNlb2YgWE1MRWxlbWVudCk6XG4gICAgICAgICAgICAgIHRoaXMuZWxlbWVudChjaGlsZCwgbGV2ZWwgKyAxKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICEoY2hpbGQgaW5zdGFuY2VvZiBYTUxSYXcpOlxuICAgICAgICAgICAgICB0aGlzLnJhdyhjaGlsZCwgbGV2ZWwgKyAxKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICEoY2hpbGQgaW5zdGFuY2VvZiBYTUxUZXh0KTpcbiAgICAgICAgICAgICAgdGhpcy50ZXh0KGNoaWxkLCBsZXZlbCArIDEpO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgIShjaGlsZCBpbnN0YW5jZW9mIFhNTFByb2Nlc3NpbmdJbnN0cnVjdGlvbik6XG4gICAgICAgICAgICAgIHRoaXMucHJvY2Vzc2luZ0luc3RydWN0aW9uKGNoaWxkLCBsZXZlbCArIDEpO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVua25vd24gWE1MIG5vZGUgdHlwZTogXCIgKyBjaGlsZC5jb25zdHJ1Y3Rvci5uYW1lKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zdHJlYW0ud3JpdGUoc3BhY2UgKyAnPC8nICsgbm9kZS5uYW1lICsgJz4nKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzLnN0cmVhbS53cml0ZSh0aGlzLmVuZGxpbmUobm9kZSkpO1xuICAgIH07XG5cbiAgICBYTUxTdHJlYW1Xcml0ZXIucHJvdG90eXBlLnByb2Nlc3NpbmdJbnN0cnVjdGlvbiA9IGZ1bmN0aW9uKG5vZGUsIGxldmVsKSB7XG4gICAgICB0aGlzLnN0cmVhbS53cml0ZSh0aGlzLnNwYWNlKGxldmVsKSArICc8PycgKyBub2RlLnRhcmdldCk7XG4gICAgICBpZiAobm9kZS52YWx1ZSkge1xuICAgICAgICB0aGlzLnN0cmVhbS53cml0ZSgnICcgKyBub2RlLnZhbHVlKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzLnN0cmVhbS53cml0ZSh0aGlzLnNwYWNlYmVmb3Jlc2xhc2ggKyAnPz4nICsgdGhpcy5lbmRsaW5lKG5vZGUpKTtcbiAgICB9O1xuXG4gICAgWE1MU3RyZWFtV3JpdGVyLnByb3RvdHlwZS5yYXcgPSBmdW5jdGlvbihub2RlLCBsZXZlbCkge1xuICAgICAgcmV0dXJuIHRoaXMuc3RyZWFtLndyaXRlKHRoaXMuc3BhY2UobGV2ZWwpICsgbm9kZS52YWx1ZSArIHRoaXMuZW5kbGluZShub2RlKSk7XG4gICAgfTtcblxuICAgIFhNTFN0cmVhbVdyaXRlci5wcm90b3R5cGUudGV4dCA9IGZ1bmN0aW9uKG5vZGUsIGxldmVsKSB7XG4gICAgICByZXR1cm4gdGhpcy5zdHJlYW0ud3JpdGUodGhpcy5zcGFjZShsZXZlbCkgKyBub2RlLnZhbHVlICsgdGhpcy5lbmRsaW5lKG5vZGUpKTtcbiAgICB9O1xuXG4gICAgWE1MU3RyZWFtV3JpdGVyLnByb3RvdHlwZS5kdGRBdHRMaXN0ID0gZnVuY3Rpb24obm9kZSwgbGV2ZWwpIHtcbiAgICAgIHRoaXMuc3RyZWFtLndyaXRlKHRoaXMuc3BhY2UobGV2ZWwpICsgJzwhQVRUTElTVCAnICsgbm9kZS5lbGVtZW50TmFtZSArICcgJyArIG5vZGUuYXR0cmlidXRlTmFtZSArICcgJyArIG5vZGUuYXR0cmlidXRlVHlwZSk7XG4gICAgICBpZiAobm9kZS5kZWZhdWx0VmFsdWVUeXBlICE9PSAnI0RFRkFVTFQnKSB7XG4gICAgICAgIHRoaXMuc3RyZWFtLndyaXRlKCcgJyArIG5vZGUuZGVmYXVsdFZhbHVlVHlwZSk7XG4gICAgICB9XG4gICAgICBpZiAobm9kZS5kZWZhdWx0VmFsdWUpIHtcbiAgICAgICAgdGhpcy5zdHJlYW0ud3JpdGUoJyBcIicgKyBub2RlLmRlZmF1bHRWYWx1ZSArICdcIicpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXMuc3RyZWFtLndyaXRlKHRoaXMuc3BhY2ViZWZvcmVzbGFzaCArICc+JyArIHRoaXMuZW5kbGluZShub2RlKSk7XG4gICAgfTtcblxuICAgIFhNTFN0cmVhbVdyaXRlci5wcm90b3R5cGUuZHRkRWxlbWVudCA9IGZ1bmN0aW9uKG5vZGUsIGxldmVsKSB7XG4gICAgICB0aGlzLnN0cmVhbS53cml0ZSh0aGlzLnNwYWNlKGxldmVsKSArICc8IUVMRU1FTlQgJyArIG5vZGUubmFtZSArICcgJyArIG5vZGUudmFsdWUpO1xuICAgICAgcmV0dXJuIHRoaXMuc3RyZWFtLndyaXRlKHRoaXMuc3BhY2ViZWZvcmVzbGFzaCArICc+JyArIHRoaXMuZW5kbGluZShub2RlKSk7XG4gICAgfTtcblxuICAgIFhNTFN0cmVhbVdyaXRlci5wcm90b3R5cGUuZHRkRW50aXR5ID0gZnVuY3Rpb24obm9kZSwgbGV2ZWwpIHtcbiAgICAgIHRoaXMuc3RyZWFtLndyaXRlKHRoaXMuc3BhY2UobGV2ZWwpICsgJzwhRU5USVRZJyk7XG4gICAgICBpZiAobm9kZS5wZSkge1xuICAgICAgICB0aGlzLnN0cmVhbS53cml0ZSgnICUnKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuc3RyZWFtLndyaXRlKCcgJyArIG5vZGUubmFtZSk7XG4gICAgICBpZiAobm9kZS52YWx1ZSkge1xuICAgICAgICB0aGlzLnN0cmVhbS53cml0ZSgnIFwiJyArIG5vZGUudmFsdWUgKyAnXCInKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChub2RlLnB1YklEICYmIG5vZGUuc3lzSUQpIHtcbiAgICAgICAgICB0aGlzLnN0cmVhbS53cml0ZSgnIFBVQkxJQyBcIicgKyBub2RlLnB1YklEICsgJ1wiIFwiJyArIG5vZGUuc3lzSUQgKyAnXCInKTtcbiAgICAgICAgfSBlbHNlIGlmIChub2RlLnN5c0lEKSB7XG4gICAgICAgICAgdGhpcy5zdHJlYW0ud3JpdGUoJyBTWVNURU0gXCInICsgbm9kZS5zeXNJRCArICdcIicpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChub2RlLm5EYXRhKSB7XG4gICAgICAgICAgdGhpcy5zdHJlYW0ud3JpdGUoJyBOREFUQSAnICsgbm9kZS5uRGF0YSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzLnN0cmVhbS53cml0ZSh0aGlzLnNwYWNlYmVmb3Jlc2xhc2ggKyAnPicgKyB0aGlzLmVuZGxpbmUobm9kZSkpO1xuICAgIH07XG5cbiAgICBYTUxTdHJlYW1Xcml0ZXIucHJvdG90eXBlLmR0ZE5vdGF0aW9uID0gZnVuY3Rpb24obm9kZSwgbGV2ZWwpIHtcbiAgICAgIHRoaXMuc3RyZWFtLndyaXRlKHRoaXMuc3BhY2UobGV2ZWwpICsgJzwhTk9UQVRJT04gJyArIG5vZGUubmFtZSk7XG4gICAgICBpZiAobm9kZS5wdWJJRCAmJiBub2RlLnN5c0lEKSB7XG4gICAgICAgIHRoaXMuc3RyZWFtLndyaXRlKCcgUFVCTElDIFwiJyArIG5vZGUucHViSUQgKyAnXCIgXCInICsgbm9kZS5zeXNJRCArICdcIicpO1xuICAgICAgfSBlbHNlIGlmIChub2RlLnB1YklEKSB7XG4gICAgICAgIHRoaXMuc3RyZWFtLndyaXRlKCcgUFVCTElDIFwiJyArIG5vZGUucHViSUQgKyAnXCInKTtcbiAgICAgIH0gZWxzZSBpZiAobm9kZS5zeXNJRCkge1xuICAgICAgICB0aGlzLnN0cmVhbS53cml0ZSgnIFNZU1RFTSBcIicgKyBub2RlLnN5c0lEICsgJ1wiJyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5zdHJlYW0ud3JpdGUodGhpcy5zcGFjZWJlZm9yZXNsYXNoICsgJz4nICsgdGhpcy5lbmRsaW5lKG5vZGUpKTtcbiAgICB9O1xuXG4gICAgWE1MU3RyZWFtV3JpdGVyLnByb3RvdHlwZS5lbmRsaW5lID0gZnVuY3Rpb24obm9kZSkge1xuICAgICAgaWYgKCFub2RlLmlzTGFzdFJvb3ROb2RlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm5ld2xpbmU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHJldHVybiBYTUxTdHJlYW1Xcml0ZXI7XG5cbiAgfSkoWE1MV3JpdGVyQmFzZSk7XG5cbn0pLmNhbGwodGhpcyk7XG4iLCIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuMTIuN1xuKGZ1bmN0aW9uKCkge1xuICB2YXIgWE1MQ0RhdGEsIFhNTENvbW1lbnQsIFhNTERUREF0dExpc3QsIFhNTERUREVsZW1lbnQsIFhNTERUREVudGl0eSwgWE1MRFRETm90YXRpb24sIFhNTERlY2xhcmF0aW9uLCBYTUxEb2NUeXBlLCBYTUxFbGVtZW50LCBYTUxQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24sIFhNTFJhdywgWE1MU3RyaW5nV3JpdGVyLCBYTUxUZXh0LCBYTUxXcml0ZXJCYXNlLFxuICAgIGV4dGVuZCA9IGZ1bmN0aW9uKGNoaWxkLCBwYXJlbnQpIHsgZm9yICh2YXIga2V5IGluIHBhcmVudCkgeyBpZiAoaGFzUHJvcC5jYWxsKHBhcmVudCwga2V5KSkgY2hpbGRba2V5XSA9IHBhcmVudFtrZXldOyB9IGZ1bmN0aW9uIGN0b3IoKSB7IHRoaXMuY29uc3RydWN0b3IgPSBjaGlsZDsgfSBjdG9yLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7IGNoaWxkLnByb3RvdHlwZSA9IG5ldyBjdG9yKCk7IGNoaWxkLl9fc3VwZXJfXyA9IHBhcmVudC5wcm90b3R5cGU7IHJldHVybiBjaGlsZDsgfSxcbiAgICBoYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHk7XG5cbiAgWE1MRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuL1hNTERlY2xhcmF0aW9uJyk7XG5cbiAgWE1MRG9jVHlwZSA9IHJlcXVpcmUoJy4vWE1MRG9jVHlwZScpO1xuXG4gIFhNTENEYXRhID0gcmVxdWlyZSgnLi9YTUxDRGF0YScpO1xuXG4gIFhNTENvbW1lbnQgPSByZXF1aXJlKCcuL1hNTENvbW1lbnQnKTtcblxuICBYTUxFbGVtZW50ID0gcmVxdWlyZSgnLi9YTUxFbGVtZW50Jyk7XG5cbiAgWE1MUmF3ID0gcmVxdWlyZSgnLi9YTUxSYXcnKTtcblxuICBYTUxUZXh0ID0gcmVxdWlyZSgnLi9YTUxUZXh0Jyk7XG5cbiAgWE1MUHJvY2Vzc2luZ0luc3RydWN0aW9uID0gcmVxdWlyZSgnLi9YTUxQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24nKTtcblxuICBYTUxEVERBdHRMaXN0ID0gcmVxdWlyZSgnLi9YTUxEVERBdHRMaXN0Jyk7XG5cbiAgWE1MRFRERWxlbWVudCA9IHJlcXVpcmUoJy4vWE1MRFRERWxlbWVudCcpO1xuXG4gIFhNTERUREVudGl0eSA9IHJlcXVpcmUoJy4vWE1MRFRERW50aXR5Jyk7XG5cbiAgWE1MRFRETm90YXRpb24gPSByZXF1aXJlKCcuL1hNTERURE5vdGF0aW9uJyk7XG5cbiAgWE1MV3JpdGVyQmFzZSA9IHJlcXVpcmUoJy4vWE1MV3JpdGVyQmFzZScpO1xuXG4gIG1vZHVsZS5leHBvcnRzID0gWE1MU3RyaW5nV3JpdGVyID0gKGZ1bmN0aW9uKHN1cGVyQ2xhc3MpIHtcbiAgICBleHRlbmQoWE1MU3RyaW5nV3JpdGVyLCBzdXBlckNsYXNzKTtcblxuICAgIGZ1bmN0aW9uIFhNTFN0cmluZ1dyaXRlcihvcHRpb25zKSB7XG4gICAgICBYTUxTdHJpbmdXcml0ZXIuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgb3B0aW9ucyk7XG4gICAgfVxuXG4gICAgWE1MU3RyaW5nV3JpdGVyLnByb3RvdHlwZS5kb2N1bWVudCA9IGZ1bmN0aW9uKGRvYykge1xuICAgICAgdmFyIGNoaWxkLCBpLCBsZW4sIHIsIHJlZjtcbiAgICAgIHRoaXMudGV4dGlzcHJlc2VudCA9IGZhbHNlO1xuICAgICAgciA9ICcnO1xuICAgICAgcmVmID0gZG9jLmNoaWxkcmVuO1xuICAgICAgZm9yIChpID0gMCwgbGVuID0gcmVmLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgIGNoaWxkID0gcmVmW2ldO1xuICAgICAgICByICs9IChmdW5jdGlvbigpIHtcbiAgICAgICAgICBzd2l0Y2ggKGZhbHNlKSB7XG4gICAgICAgICAgICBjYXNlICEoY2hpbGQgaW5zdGFuY2VvZiBYTUxEZWNsYXJhdGlvbik6XG4gICAgICAgICAgICAgIHJldHVybiB0aGlzLmRlY2xhcmF0aW9uKGNoaWxkKTtcbiAgICAgICAgICAgIGNhc2UgIShjaGlsZCBpbnN0YW5jZW9mIFhNTERvY1R5cGUpOlxuICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kb2NUeXBlKGNoaWxkKTtcbiAgICAgICAgICAgIGNhc2UgIShjaGlsZCBpbnN0YW5jZW9mIFhNTENvbW1lbnQpOlxuICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jb21tZW50KGNoaWxkKTtcbiAgICAgICAgICAgIGNhc2UgIShjaGlsZCBpbnN0YW5jZW9mIFhNTFByb2Nlc3NpbmdJbnN0cnVjdGlvbik6XG4gICAgICAgICAgICAgIHJldHVybiB0aGlzLnByb2Nlc3NpbmdJbnN0cnVjdGlvbihjaGlsZCk7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50KGNoaWxkLCAwKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pLmNhbGwodGhpcyk7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5wcmV0dHkgJiYgci5zbGljZSgtdGhpcy5uZXdsaW5lLmxlbmd0aCkgPT09IHRoaXMubmV3bGluZSkge1xuICAgICAgICByID0gci5zbGljZSgwLCAtdGhpcy5uZXdsaW5lLmxlbmd0aCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcjtcbiAgICB9O1xuXG4gICAgWE1MU3RyaW5nV3JpdGVyLnByb3RvdHlwZS5hdHRyaWJ1dGUgPSBmdW5jdGlvbihhdHQpIHtcbiAgICAgIHJldHVybiAnICcgKyBhdHQubmFtZSArICc9XCInICsgYXR0LnZhbHVlICsgJ1wiJztcbiAgICB9O1xuXG4gICAgWE1MU3RyaW5nV3JpdGVyLnByb3RvdHlwZS5jZGF0YSA9IGZ1bmN0aW9uKG5vZGUsIGxldmVsKSB7XG4gICAgICByZXR1cm4gdGhpcy5zcGFjZShsZXZlbCkgKyAnPCFbQ0RBVEFbJyArIG5vZGUudGV4dCArICddXT4nICsgdGhpcy5uZXdsaW5lO1xuICAgIH07XG5cbiAgICBYTUxTdHJpbmdXcml0ZXIucHJvdG90eXBlLmNvbW1lbnQgPSBmdW5jdGlvbihub2RlLCBsZXZlbCkge1xuICAgICAgcmV0dXJuIHRoaXMuc3BhY2UobGV2ZWwpICsgJzwhLS0gJyArIG5vZGUudGV4dCArICcgLS0+JyArIHRoaXMubmV3bGluZTtcbiAgICB9O1xuXG4gICAgWE1MU3RyaW5nV3JpdGVyLnByb3RvdHlwZS5kZWNsYXJhdGlvbiA9IGZ1bmN0aW9uKG5vZGUsIGxldmVsKSB7XG4gICAgICB2YXIgcjtcbiAgICAgIHIgPSB0aGlzLnNwYWNlKGxldmVsKTtcbiAgICAgIHIgKz0gJzw/eG1sIHZlcnNpb249XCInICsgbm9kZS52ZXJzaW9uICsgJ1wiJztcbiAgICAgIGlmIChub2RlLmVuY29kaW5nICE9IG51bGwpIHtcbiAgICAgICAgciArPSAnIGVuY29kaW5nPVwiJyArIG5vZGUuZW5jb2RpbmcgKyAnXCInO1xuICAgICAgfVxuICAgICAgaWYgKG5vZGUuc3RhbmRhbG9uZSAhPSBudWxsKSB7XG4gICAgICAgIHIgKz0gJyBzdGFuZGFsb25lPVwiJyArIG5vZGUuc3RhbmRhbG9uZSArICdcIic7XG4gICAgICB9XG4gICAgICByICs9IHRoaXMuc3BhY2ViZWZvcmVzbGFzaCArICc/Pic7XG4gICAgICByICs9IHRoaXMubmV3bGluZTtcbiAgICAgIHJldHVybiByO1xuICAgIH07XG5cbiAgICBYTUxTdHJpbmdXcml0ZXIucHJvdG90eXBlLmRvY1R5cGUgPSBmdW5jdGlvbihub2RlLCBsZXZlbCkge1xuICAgICAgdmFyIGNoaWxkLCBpLCBsZW4sIHIsIHJlZjtcbiAgICAgIGxldmVsIHx8IChsZXZlbCA9IDApO1xuICAgICAgciA9IHRoaXMuc3BhY2UobGV2ZWwpO1xuICAgICAgciArPSAnPCFET0NUWVBFICcgKyBub2RlLnJvb3QoKS5uYW1lO1xuICAgICAgaWYgKG5vZGUucHViSUQgJiYgbm9kZS5zeXNJRCkge1xuICAgICAgICByICs9ICcgUFVCTElDIFwiJyArIG5vZGUucHViSUQgKyAnXCIgXCInICsgbm9kZS5zeXNJRCArICdcIic7XG4gICAgICB9IGVsc2UgaWYgKG5vZGUuc3lzSUQpIHtcbiAgICAgICAgciArPSAnIFNZU1RFTSBcIicgKyBub2RlLnN5c0lEICsgJ1wiJztcbiAgICAgIH1cbiAgICAgIGlmIChub2RlLmNoaWxkcmVuLmxlbmd0aCA+IDApIHtcbiAgICAgICAgciArPSAnIFsnO1xuICAgICAgICByICs9IHRoaXMubmV3bGluZTtcbiAgICAgICAgcmVmID0gbm9kZS5jaGlsZHJlbjtcbiAgICAgICAgZm9yIChpID0gMCwgbGVuID0gcmVmLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgY2hpbGQgPSByZWZbaV07XG4gICAgICAgICAgciArPSAoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKGZhbHNlKSB7XG4gICAgICAgICAgICAgIGNhc2UgIShjaGlsZCBpbnN0YW5jZW9mIFhNTERUREF0dExpc3QpOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmR0ZEF0dExpc3QoY2hpbGQsIGxldmVsICsgMSk7XG4gICAgICAgICAgICAgIGNhc2UgIShjaGlsZCBpbnN0YW5jZW9mIFhNTERUREVsZW1lbnQpOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmR0ZEVsZW1lbnQoY2hpbGQsIGxldmVsICsgMSk7XG4gICAgICAgICAgICAgIGNhc2UgIShjaGlsZCBpbnN0YW5jZW9mIFhNTERUREVudGl0eSk6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZHRkRW50aXR5KGNoaWxkLCBsZXZlbCArIDEpO1xuICAgICAgICAgICAgICBjYXNlICEoY2hpbGQgaW5zdGFuY2VvZiBYTUxEVEROb3RhdGlvbik6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZHRkTm90YXRpb24oY2hpbGQsIGxldmVsICsgMSk7XG4gICAgICAgICAgICAgIGNhc2UgIShjaGlsZCBpbnN0YW5jZW9mIFhNTENEYXRhKTpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jZGF0YShjaGlsZCwgbGV2ZWwgKyAxKTtcbiAgICAgICAgICAgICAgY2FzZSAhKGNoaWxkIGluc3RhbmNlb2YgWE1MQ29tbWVudCk6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29tbWVudChjaGlsZCwgbGV2ZWwgKyAxKTtcbiAgICAgICAgICAgICAgY2FzZSAhKGNoaWxkIGluc3RhbmNlb2YgWE1MUHJvY2Vzc2luZ0luc3RydWN0aW9uKTpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5wcm9jZXNzaW5nSW5zdHJ1Y3Rpb24oY2hpbGQsIGxldmVsICsgMSk7XG4gICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biBEVEQgbm9kZSB0eXBlOiBcIiArIGNoaWxkLmNvbnN0cnVjdG9yLm5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLmNhbGwodGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgciArPSAnXSc7XG4gICAgICB9XG4gICAgICByICs9IHRoaXMuc3BhY2ViZWZvcmVzbGFzaCArICc+JztcbiAgICAgIHIgKz0gdGhpcy5uZXdsaW5lO1xuICAgICAgcmV0dXJuIHI7XG4gICAgfTtcblxuICAgIFhNTFN0cmluZ1dyaXRlci5wcm90b3R5cGUuZWxlbWVudCA9IGZ1bmN0aW9uKG5vZGUsIGxldmVsKSB7XG4gICAgICB2YXIgYXR0LCBjaGlsZCwgaSwgaiwgbGVuLCBsZW4xLCBuYW1lLCByLCByZWYsIHJlZjEsIHJlZjIsIHNwYWNlLCB0ZXh0aXNwcmVzZW50d2Fzc2V0O1xuICAgICAgbGV2ZWwgfHwgKGxldmVsID0gMCk7XG4gICAgICB0ZXh0aXNwcmVzZW50d2Fzc2V0ID0gZmFsc2U7XG4gICAgICBpZiAodGhpcy50ZXh0aXNwcmVzZW50KSB7XG4gICAgICAgIHRoaXMubmV3bGluZSA9ICcnO1xuICAgICAgICB0aGlzLnByZXR0eSA9IGZhbHNlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5uZXdsaW5lID0gdGhpcy5uZXdsaW5lZGVmYXVsdDtcbiAgICAgICAgdGhpcy5wcmV0dHkgPSB0aGlzLnByZXR0eWRlZmF1bHQ7XG4gICAgICB9XG4gICAgICBzcGFjZSA9IHRoaXMuc3BhY2UobGV2ZWwpO1xuICAgICAgciA9ICcnO1xuICAgICAgciArPSBzcGFjZSArICc8JyArIG5vZGUubmFtZTtcbiAgICAgIHJlZiA9IG5vZGUuYXR0cmlidXRlcztcbiAgICAgIGZvciAobmFtZSBpbiByZWYpIHtcbiAgICAgICAgaWYgKCFoYXNQcm9wLmNhbGwocmVmLCBuYW1lKSkgY29udGludWU7XG4gICAgICAgIGF0dCA9IHJlZltuYW1lXTtcbiAgICAgICAgciArPSB0aGlzLmF0dHJpYnV0ZShhdHQpO1xuICAgICAgfVxuICAgICAgaWYgKG5vZGUuY2hpbGRyZW4ubGVuZ3RoID09PSAwIHx8IG5vZGUuY2hpbGRyZW4uZXZlcnkoZnVuY3Rpb24oZSkge1xuICAgICAgICByZXR1cm4gZS52YWx1ZSA9PT0gJyc7XG4gICAgICB9KSkge1xuICAgICAgICBpZiAodGhpcy5hbGxvd0VtcHR5KSB7XG4gICAgICAgICAgciArPSAnPjwvJyArIG5vZGUubmFtZSArICc+JyArIHRoaXMubmV3bGluZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByICs9IHRoaXMuc3BhY2ViZWZvcmVzbGFzaCArICcvPicgKyB0aGlzLm5ld2xpbmU7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wcmV0dHkgJiYgbm9kZS5jaGlsZHJlbi5sZW5ndGggPT09IDEgJiYgKG5vZGUuY2hpbGRyZW5bMF0udmFsdWUgIT0gbnVsbCkpIHtcbiAgICAgICAgciArPSAnPic7XG4gICAgICAgIHIgKz0gbm9kZS5jaGlsZHJlblswXS52YWx1ZTtcbiAgICAgICAgciArPSAnPC8nICsgbm9kZS5uYW1lICsgJz4nICsgdGhpcy5uZXdsaW5lO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHRoaXMuZG9udHByZXR0eXRleHRub2Rlcykge1xuICAgICAgICAgIHJlZjEgPSBub2RlLmNoaWxkcmVuO1xuICAgICAgICAgIGZvciAoaSA9IDAsIGxlbiA9IHJlZjEubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgIGNoaWxkID0gcmVmMVtpXTtcbiAgICAgICAgICAgIGlmIChjaGlsZC52YWx1ZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgIHRoaXMudGV4dGlzcHJlc2VudCsrO1xuICAgICAgICAgICAgICB0ZXh0aXNwcmVzZW50d2Fzc2V0ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnRleHRpc3ByZXNlbnQpIHtcbiAgICAgICAgICB0aGlzLm5ld2xpbmUgPSAnJztcbiAgICAgICAgICB0aGlzLnByZXR0eSA9IGZhbHNlO1xuICAgICAgICAgIHNwYWNlID0gdGhpcy5zcGFjZShsZXZlbCk7XG4gICAgICAgIH1cbiAgICAgICAgciArPSAnPicgKyB0aGlzLm5ld2xpbmU7XG4gICAgICAgIHJlZjIgPSBub2RlLmNoaWxkcmVuO1xuICAgICAgICBmb3IgKGogPSAwLCBsZW4xID0gcmVmMi5sZW5ndGg7IGogPCBsZW4xOyBqKyspIHtcbiAgICAgICAgICBjaGlsZCA9IHJlZjJbal07XG4gICAgICAgICAgciArPSAoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKGZhbHNlKSB7XG4gICAgICAgICAgICAgIGNhc2UgIShjaGlsZCBpbnN0YW5jZW9mIFhNTENEYXRhKTpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jZGF0YShjaGlsZCwgbGV2ZWwgKyAxKTtcbiAgICAgICAgICAgICAgY2FzZSAhKGNoaWxkIGluc3RhbmNlb2YgWE1MQ29tbWVudCk6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29tbWVudChjaGlsZCwgbGV2ZWwgKyAxKTtcbiAgICAgICAgICAgICAgY2FzZSAhKGNoaWxkIGluc3RhbmNlb2YgWE1MRWxlbWVudCk6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudChjaGlsZCwgbGV2ZWwgKyAxKTtcbiAgICAgICAgICAgICAgY2FzZSAhKGNoaWxkIGluc3RhbmNlb2YgWE1MUmF3KTpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5yYXcoY2hpbGQsIGxldmVsICsgMSk7XG4gICAgICAgICAgICAgIGNhc2UgIShjaGlsZCBpbnN0YW5jZW9mIFhNTFRleHQpOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnRleHQoY2hpbGQsIGxldmVsICsgMSk7XG4gICAgICAgICAgICAgIGNhc2UgIShjaGlsZCBpbnN0YW5jZW9mIFhNTFByb2Nlc3NpbmdJbnN0cnVjdGlvbik6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc2luZ0luc3RydWN0aW9uKGNoaWxkLCBsZXZlbCArIDEpO1xuICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVua25vd24gWE1MIG5vZGUgdHlwZTogXCIgKyBjaGlsZC5jb25zdHJ1Y3Rvci5uYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KS5jYWxsKHRoaXMpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0ZXh0aXNwcmVzZW50d2Fzc2V0KSB7XG4gICAgICAgICAgdGhpcy50ZXh0aXNwcmVzZW50LS07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLnRleHRpc3ByZXNlbnQpIHtcbiAgICAgICAgICB0aGlzLm5ld2xpbmUgPSB0aGlzLm5ld2xpbmVkZWZhdWx0O1xuICAgICAgICAgIHRoaXMucHJldHR5ID0gdGhpcy5wcmV0dHlkZWZhdWx0O1xuICAgICAgICB9XG4gICAgICAgIHIgKz0gc3BhY2UgKyAnPC8nICsgbm9kZS5uYW1lICsgJz4nICsgdGhpcy5uZXdsaW5lO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHI7XG4gICAgfTtcblxuICAgIFhNTFN0cmluZ1dyaXRlci5wcm90b3R5cGUucHJvY2Vzc2luZ0luc3RydWN0aW9uID0gZnVuY3Rpb24obm9kZSwgbGV2ZWwpIHtcbiAgICAgIHZhciByO1xuICAgICAgciA9IHRoaXMuc3BhY2UobGV2ZWwpICsgJzw/JyArIG5vZGUudGFyZ2V0O1xuICAgICAgaWYgKG5vZGUudmFsdWUpIHtcbiAgICAgICAgciArPSAnICcgKyBub2RlLnZhbHVlO1xuICAgICAgfVxuICAgICAgciArPSB0aGlzLnNwYWNlYmVmb3Jlc2xhc2ggKyAnPz4nICsgdGhpcy5uZXdsaW5lO1xuICAgICAgcmV0dXJuIHI7XG4gICAgfTtcblxuICAgIFhNTFN0cmluZ1dyaXRlci5wcm90b3R5cGUucmF3ID0gZnVuY3Rpb24obm9kZSwgbGV2ZWwpIHtcbiAgICAgIHJldHVybiB0aGlzLnNwYWNlKGxldmVsKSArIG5vZGUudmFsdWUgKyB0aGlzLm5ld2xpbmU7XG4gICAgfTtcblxuICAgIFhNTFN0cmluZ1dyaXRlci5wcm90b3R5cGUudGV4dCA9IGZ1bmN0aW9uKG5vZGUsIGxldmVsKSB7XG4gICAgICByZXR1cm4gdGhpcy5zcGFjZShsZXZlbCkgKyBub2RlLnZhbHVlICsgdGhpcy5uZXdsaW5lO1xuICAgIH07XG5cbiAgICBYTUxTdHJpbmdXcml0ZXIucHJvdG90eXBlLmR0ZEF0dExpc3QgPSBmdW5jdGlvbihub2RlLCBsZXZlbCkge1xuICAgICAgdmFyIHI7XG4gICAgICByID0gdGhpcy5zcGFjZShsZXZlbCkgKyAnPCFBVFRMSVNUICcgKyBub2RlLmVsZW1lbnROYW1lICsgJyAnICsgbm9kZS5hdHRyaWJ1dGVOYW1lICsgJyAnICsgbm9kZS5hdHRyaWJ1dGVUeXBlO1xuICAgICAgaWYgKG5vZGUuZGVmYXVsdFZhbHVlVHlwZSAhPT0gJyNERUZBVUxUJykge1xuICAgICAgICByICs9ICcgJyArIG5vZGUuZGVmYXVsdFZhbHVlVHlwZTtcbiAgICAgIH1cbiAgICAgIGlmIChub2RlLmRlZmF1bHRWYWx1ZSkge1xuICAgICAgICByICs9ICcgXCInICsgbm9kZS5kZWZhdWx0VmFsdWUgKyAnXCInO1xuICAgICAgfVxuICAgICAgciArPSB0aGlzLnNwYWNlYmVmb3Jlc2xhc2ggKyAnPicgKyB0aGlzLm5ld2xpbmU7XG4gICAgICByZXR1cm4gcjtcbiAgICB9O1xuXG4gICAgWE1MU3RyaW5nV3JpdGVyLnByb3RvdHlwZS5kdGRFbGVtZW50ID0gZnVuY3Rpb24obm9kZSwgbGV2ZWwpIHtcbiAgICAgIHJldHVybiB0aGlzLnNwYWNlKGxldmVsKSArICc8IUVMRU1FTlQgJyArIG5vZGUubmFtZSArICcgJyArIG5vZGUudmFsdWUgKyB0aGlzLnNwYWNlYmVmb3Jlc2xhc2ggKyAnPicgKyB0aGlzLm5ld2xpbmU7XG4gICAgfTtcblxuICAgIFhNTFN0cmluZ1dyaXRlci5wcm90b3R5cGUuZHRkRW50aXR5ID0gZnVuY3Rpb24obm9kZSwgbGV2ZWwpIHtcbiAgICAgIHZhciByO1xuICAgICAgciA9IHRoaXMuc3BhY2UobGV2ZWwpICsgJzwhRU5USVRZJztcbiAgICAgIGlmIChub2RlLnBlKSB7XG4gICAgICAgIHIgKz0gJyAlJztcbiAgICAgIH1cbiAgICAgIHIgKz0gJyAnICsgbm9kZS5uYW1lO1xuICAgICAgaWYgKG5vZGUudmFsdWUpIHtcbiAgICAgICAgciArPSAnIFwiJyArIG5vZGUudmFsdWUgKyAnXCInO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKG5vZGUucHViSUQgJiYgbm9kZS5zeXNJRCkge1xuICAgICAgICAgIHIgKz0gJyBQVUJMSUMgXCInICsgbm9kZS5wdWJJRCArICdcIiBcIicgKyBub2RlLnN5c0lEICsgJ1wiJztcbiAgICAgICAgfSBlbHNlIGlmIChub2RlLnN5c0lEKSB7XG4gICAgICAgICAgciArPSAnIFNZU1RFTSBcIicgKyBub2RlLnN5c0lEICsgJ1wiJztcbiAgICAgICAgfVxuICAgICAgICBpZiAobm9kZS5uRGF0YSkge1xuICAgICAgICAgIHIgKz0gJyBOREFUQSAnICsgbm9kZS5uRGF0YTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgciArPSB0aGlzLnNwYWNlYmVmb3Jlc2xhc2ggKyAnPicgKyB0aGlzLm5ld2xpbmU7XG4gICAgICByZXR1cm4gcjtcbiAgICB9O1xuXG4gICAgWE1MU3RyaW5nV3JpdGVyLnByb3RvdHlwZS5kdGROb3RhdGlvbiA9IGZ1bmN0aW9uKG5vZGUsIGxldmVsKSB7XG4gICAgICB2YXIgcjtcbiAgICAgIHIgPSB0aGlzLnNwYWNlKGxldmVsKSArICc8IU5PVEFUSU9OICcgKyBub2RlLm5hbWU7XG4gICAgICBpZiAobm9kZS5wdWJJRCAmJiBub2RlLnN5c0lEKSB7XG4gICAgICAgIHIgKz0gJyBQVUJMSUMgXCInICsgbm9kZS5wdWJJRCArICdcIiBcIicgKyBub2RlLnN5c0lEICsgJ1wiJztcbiAgICAgIH0gZWxzZSBpZiAobm9kZS5wdWJJRCkge1xuICAgICAgICByICs9ICcgUFVCTElDIFwiJyArIG5vZGUucHViSUQgKyAnXCInO1xuICAgICAgfSBlbHNlIGlmIChub2RlLnN5c0lEKSB7XG4gICAgICAgIHIgKz0gJyBTWVNURU0gXCInICsgbm9kZS5zeXNJRCArICdcIic7XG4gICAgICB9XG4gICAgICByICs9IHRoaXMuc3BhY2ViZWZvcmVzbGFzaCArICc+JyArIHRoaXMubmV3bGluZTtcbiAgICAgIHJldHVybiByO1xuICAgIH07XG5cbiAgICBYTUxTdHJpbmdXcml0ZXIucHJvdG90eXBlLm9wZW5Ob2RlID0gZnVuY3Rpb24obm9kZSwgbGV2ZWwpIHtcbiAgICAgIHZhciBhdHQsIG5hbWUsIHIsIHJlZjtcbiAgICAgIGxldmVsIHx8IChsZXZlbCA9IDApO1xuICAgICAgaWYgKG5vZGUgaW5zdGFuY2VvZiBYTUxFbGVtZW50KSB7XG4gICAgICAgIHIgPSB0aGlzLnNwYWNlKGxldmVsKSArICc8JyArIG5vZGUubmFtZTtcbiAgICAgICAgcmVmID0gbm9kZS5hdHRyaWJ1dGVzO1xuICAgICAgICBmb3IgKG5hbWUgaW4gcmVmKSB7XG4gICAgICAgICAgaWYgKCFoYXNQcm9wLmNhbGwocmVmLCBuYW1lKSkgY29udGludWU7XG4gICAgICAgICAgYXR0ID0gcmVmW25hbWVdO1xuICAgICAgICAgIHIgKz0gdGhpcy5hdHRyaWJ1dGUoYXR0KTtcbiAgICAgICAgfVxuICAgICAgICByICs9IChub2RlLmNoaWxkcmVuID8gJz4nIDogJy8+JykgKyB0aGlzLm5ld2xpbmU7XG4gICAgICAgIHJldHVybiByO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgciA9IHRoaXMuc3BhY2UobGV2ZWwpICsgJzwhRE9DVFlQRSAnICsgbm9kZS5yb290Tm9kZU5hbWU7XG4gICAgICAgIGlmIChub2RlLnB1YklEICYmIG5vZGUuc3lzSUQpIHtcbiAgICAgICAgICByICs9ICcgUFVCTElDIFwiJyArIG5vZGUucHViSUQgKyAnXCIgXCInICsgbm9kZS5zeXNJRCArICdcIic7XG4gICAgICAgIH0gZWxzZSBpZiAobm9kZS5zeXNJRCkge1xuICAgICAgICAgIHIgKz0gJyBTWVNURU0gXCInICsgbm9kZS5zeXNJRCArICdcIic7XG4gICAgICAgIH1cbiAgICAgICAgciArPSAobm9kZS5jaGlsZHJlbiA/ICcgWycgOiAnPicpICsgdGhpcy5uZXdsaW5lO1xuICAgICAgICByZXR1cm4gcjtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgWE1MU3RyaW5nV3JpdGVyLnByb3RvdHlwZS5jbG9zZU5vZGUgPSBmdW5jdGlvbihub2RlLCBsZXZlbCkge1xuICAgICAgbGV2ZWwgfHwgKGxldmVsID0gMCk7XG4gICAgICBzd2l0Y2ggKGZhbHNlKSB7XG4gICAgICAgIGNhc2UgIShub2RlIGluc3RhbmNlb2YgWE1MRWxlbWVudCk6XG4gICAgICAgICAgcmV0dXJuIHRoaXMuc3BhY2UobGV2ZWwpICsgJzwvJyArIG5vZGUubmFtZSArICc+JyArIHRoaXMubmV3bGluZTtcbiAgICAgICAgY2FzZSAhKG5vZGUgaW5zdGFuY2VvZiBYTUxEb2NUeXBlKTpcbiAgICAgICAgICByZXR1cm4gdGhpcy5zcGFjZShsZXZlbCkgKyAnXT4nICsgdGhpcy5uZXdsaW5lO1xuICAgICAgfVxuICAgIH07XG5cbiAgICByZXR1cm4gWE1MU3RyaW5nV3JpdGVyO1xuXG4gIH0pKFhNTFdyaXRlckJhc2UpO1xuXG59KS5jYWxsKHRoaXMpO1xuIiwiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbihmdW5jdGlvbigpIHtcbiAgdmFyIFhNTFN0cmluZ2lmaWVyLFxuICAgIGJpbmQgPSBmdW5jdGlvbihmbiwgbWUpeyByZXR1cm4gZnVuY3Rpb24oKXsgcmV0dXJuIGZuLmFwcGx5KG1lLCBhcmd1bWVudHMpOyB9OyB9LFxuICAgIGhhc1Byb3AgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuICBtb2R1bGUuZXhwb3J0cyA9IFhNTFN0cmluZ2lmaWVyID0gKGZ1bmN0aW9uKCkge1xuICAgIGZ1bmN0aW9uIFhNTFN0cmluZ2lmaWVyKG9wdGlvbnMpIHtcbiAgICAgIHRoaXMuYXNzZXJ0TGVnYWxDaGFyID0gYmluZCh0aGlzLmFzc2VydExlZ2FsQ2hhciwgdGhpcyk7XG4gICAgICB2YXIga2V5LCByZWYsIHZhbHVlO1xuICAgICAgb3B0aW9ucyB8fCAob3B0aW9ucyA9IHt9KTtcbiAgICAgIHRoaXMubm9Eb3VibGVFbmNvZGluZyA9IG9wdGlvbnMubm9Eb3VibGVFbmNvZGluZztcbiAgICAgIHJlZiA9IG9wdGlvbnMuc3RyaW5naWZ5IHx8IHt9O1xuICAgICAgZm9yIChrZXkgaW4gcmVmKSB7XG4gICAgICAgIGlmICghaGFzUHJvcC5jYWxsKHJlZiwga2V5KSkgY29udGludWU7XG4gICAgICAgIHZhbHVlID0gcmVmW2tleV07XG4gICAgICAgIHRoaXNba2V5XSA9IHZhbHVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS5lbGVOYW1lID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICB2YWwgPSAnJyArIHZhbCB8fCAnJztcbiAgICAgIHJldHVybiB0aGlzLmFzc2VydExlZ2FsQ2hhcih2YWwpO1xuICAgIH07XG5cbiAgICBYTUxTdHJpbmdpZmllci5wcm90b3R5cGUuZWxlVGV4dCA9IGZ1bmN0aW9uKHZhbCkge1xuICAgICAgdmFsID0gJycgKyB2YWwgfHwgJyc7XG4gICAgICByZXR1cm4gdGhpcy5hc3NlcnRMZWdhbENoYXIodGhpcy5lbEVzY2FwZSh2YWwpKTtcbiAgICB9O1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLmNkYXRhID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICB2YWwgPSAnJyArIHZhbCB8fCAnJztcbiAgICAgIHZhbCA9IHZhbC5yZXBsYWNlKCddXT4nLCAnXV1dXT48IVtDREFUQVs+Jyk7XG4gICAgICByZXR1cm4gdGhpcy5hc3NlcnRMZWdhbENoYXIodmFsKTtcbiAgICB9O1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLmNvbW1lbnQgPSBmdW5jdGlvbih2YWwpIHtcbiAgICAgIHZhbCA9ICcnICsgdmFsIHx8ICcnO1xuICAgICAgaWYgKHZhbC5tYXRjaCgvLS0vKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb21tZW50IHRleHQgY2Fubm90IGNvbnRhaW4gZG91YmxlLWh5cGVuOiBcIiArIHZhbCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5hc3NlcnRMZWdhbENoYXIodmFsKTtcbiAgICB9O1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLnJhdyA9IGZ1bmN0aW9uKHZhbCkge1xuICAgICAgcmV0dXJuICcnICsgdmFsIHx8ICcnO1xuICAgIH07XG5cbiAgICBYTUxTdHJpbmdpZmllci5wcm90b3R5cGUuYXR0TmFtZSA9IGZ1bmN0aW9uKHZhbCkge1xuICAgICAgcmV0dXJuIHZhbCA9ICcnICsgdmFsIHx8ICcnO1xuICAgIH07XG5cbiAgICBYTUxTdHJpbmdpZmllci5wcm90b3R5cGUuYXR0VmFsdWUgPSBmdW5jdGlvbih2YWwpIHtcbiAgICAgIHZhbCA9ICcnICsgdmFsIHx8ICcnO1xuICAgICAgcmV0dXJuIHRoaXMuYXR0RXNjYXBlKHZhbCk7XG4gICAgfTtcblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS5pbnNUYXJnZXQgPSBmdW5jdGlvbih2YWwpIHtcbiAgICAgIHJldHVybiAnJyArIHZhbCB8fCAnJztcbiAgICB9O1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLmluc1ZhbHVlID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICB2YWwgPSAnJyArIHZhbCB8fCAnJztcbiAgICAgIGlmICh2YWwubWF0Y2goL1xcPz4vKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHByb2Nlc3NpbmcgaW5zdHJ1Y3Rpb24gdmFsdWU6IFwiICsgdmFsKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB2YWw7XG4gICAgfTtcblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS54bWxWZXJzaW9uID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICB2YWwgPSAnJyArIHZhbCB8fCAnJztcbiAgICAgIGlmICghdmFsLm1hdGNoKC8xXFwuWzAtOV0rLykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCB2ZXJzaW9uIG51bWJlcjogXCIgKyB2YWwpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHZhbDtcbiAgICB9O1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLnhtbEVuY29kaW5nID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICB2YWwgPSAnJyArIHZhbCB8fCAnJztcbiAgICAgIGlmICghdmFsLm1hdGNoKC9eW0EtWmEtel0oPzpbQS1aYS16MC05Ll8tXSkqJC8pKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgZW5jb2Rpbmc6IFwiICsgdmFsKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB2YWw7XG4gICAgfTtcblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS54bWxTdGFuZGFsb25lID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICBpZiAodmFsKSB7XG4gICAgICAgIHJldHVybiBcInllc1wiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFwibm9cIjtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLmR0ZFB1YklEID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICByZXR1cm4gJycgKyB2YWwgfHwgJyc7XG4gICAgfTtcblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS5kdGRTeXNJRCA9IGZ1bmN0aW9uKHZhbCkge1xuICAgICAgcmV0dXJuICcnICsgdmFsIHx8ICcnO1xuICAgIH07XG5cbiAgICBYTUxTdHJpbmdpZmllci5wcm90b3R5cGUuZHRkRWxlbWVudFZhbHVlID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICByZXR1cm4gJycgKyB2YWwgfHwgJyc7XG4gICAgfTtcblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS5kdGRBdHRUeXBlID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICByZXR1cm4gJycgKyB2YWwgfHwgJyc7XG4gICAgfTtcblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS5kdGRBdHREZWZhdWx0ID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICBpZiAodmFsICE9IG51bGwpIHtcbiAgICAgICAgcmV0dXJuICcnICsgdmFsIHx8ICcnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHZhbDtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLmR0ZEVudGl0eVZhbHVlID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICByZXR1cm4gJycgKyB2YWwgfHwgJyc7XG4gICAgfTtcblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS5kdGRORGF0YSA9IGZ1bmN0aW9uKHZhbCkge1xuICAgICAgcmV0dXJuICcnICsgdmFsIHx8ICcnO1xuICAgIH07XG5cbiAgICBYTUxTdHJpbmdpZmllci5wcm90b3R5cGUuY29udmVydEF0dEtleSA9ICdAJztcblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS5jb252ZXJ0UElLZXkgPSAnPyc7XG5cbiAgICBYTUxTdHJpbmdpZmllci5wcm90b3R5cGUuY29udmVydFRleHRLZXkgPSAnI3RleHQnO1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLmNvbnZlcnRDRGF0YUtleSA9ICcjY2RhdGEnO1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLmNvbnZlcnRDb21tZW50S2V5ID0gJyNjb21tZW50JztcblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS5jb252ZXJ0UmF3S2V5ID0gJyNyYXcnO1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLmFzc2VydExlZ2FsQ2hhciA9IGZ1bmN0aW9uKHN0cikge1xuICAgICAgdmFyIHJlcztcbiAgICAgIHJlcyA9IHN0ci5tYXRjaCgvW1xcMFxcdUZGRkVcXHVGRkZGXXxbXFx1RDgwMC1cXHVEQkZGXSg/IVtcXHVEQzAwLVxcdURGRkZdKXwoPzpbXlxcdUQ4MDAtXFx1REJGRl18XilbXFx1REMwMC1cXHVERkZGXS8pO1xuICAgICAgaWYgKHJlcykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGNoYXJhY3RlciBpbiBzdHJpbmc6IFwiICsgc3RyICsgXCIgYXQgaW5kZXggXCIgKyByZXMuaW5kZXgpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHN0cjtcbiAgICB9O1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLmVsRXNjYXBlID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgICB2YXIgYW1wcmVnZXg7XG4gICAgICBhbXByZWdleCA9IHRoaXMubm9Eb3VibGVFbmNvZGluZyA/IC8oPyEmXFxTKzspJi9nIDogLyYvZztcbiAgICAgIHJldHVybiBzdHIucmVwbGFjZShhbXByZWdleCwgJyZhbXA7JykucmVwbGFjZSgvPC9nLCAnJmx0OycpLnJlcGxhY2UoLz4vZywgJyZndDsnKS5yZXBsYWNlKC9cXHIvZywgJyYjeEQ7Jyk7XG4gICAgfTtcblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS5hdHRFc2NhcGUgPSBmdW5jdGlvbihzdHIpIHtcbiAgICAgIHZhciBhbXByZWdleDtcbiAgICAgIGFtcHJlZ2V4ID0gdGhpcy5ub0RvdWJsZUVuY29kaW5nID8gLyg/ISZcXFMrOykmL2cgOiAvJi9nO1xuICAgICAgcmV0dXJuIHN0ci5yZXBsYWNlKGFtcHJlZ2V4LCAnJmFtcDsnKS5yZXBsYWNlKC88L2csICcmbHQ7JykucmVwbGFjZSgvXCIvZywgJyZxdW90OycpLnJlcGxhY2UoL1xcdC9nLCAnJiN4OTsnKS5yZXBsYWNlKC9cXG4vZywgJyYjeEE7JykucmVwbGFjZSgvXFxyL2csICcmI3hEOycpO1xuICAgIH07XG5cbiAgICByZXR1cm4gWE1MU3RyaW5naWZpZXI7XG5cbiAgfSkoKTtcblxufSkuY2FsbCh0aGlzKTtcbiIsIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBYTUxOb2RlLCBYTUxUZXh0LFxuICAgIGV4dGVuZCA9IGZ1bmN0aW9uKGNoaWxkLCBwYXJlbnQpIHsgZm9yICh2YXIga2V5IGluIHBhcmVudCkgeyBpZiAoaGFzUHJvcC5jYWxsKHBhcmVudCwga2V5KSkgY2hpbGRba2V5XSA9IHBhcmVudFtrZXldOyB9IGZ1bmN0aW9uIGN0b3IoKSB7IHRoaXMuY29uc3RydWN0b3IgPSBjaGlsZDsgfSBjdG9yLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7IGNoaWxkLnByb3RvdHlwZSA9IG5ldyBjdG9yKCk7IGNoaWxkLl9fc3VwZXJfXyA9IHBhcmVudC5wcm90b3R5cGU7IHJldHVybiBjaGlsZDsgfSxcbiAgICBoYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHk7XG5cbiAgWE1MTm9kZSA9IHJlcXVpcmUoJy4vWE1MTm9kZScpO1xuXG4gIG1vZHVsZS5leHBvcnRzID0gWE1MVGV4dCA9IChmdW5jdGlvbihzdXBlckNsYXNzKSB7XG4gICAgZXh0ZW5kKFhNTFRleHQsIHN1cGVyQ2xhc3MpO1xuXG4gICAgZnVuY3Rpb24gWE1MVGV4dChwYXJlbnQsIHRleHQpIHtcbiAgICAgIFhNTFRleHQuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgcGFyZW50KTtcbiAgICAgIGlmICh0ZXh0ID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyBlbGVtZW50IHRleHRcIik7XG4gICAgICB9XG4gICAgICB0aGlzLnZhbHVlID0gdGhpcy5zdHJpbmdpZnkuZWxlVGV4dCh0ZXh0KTtcbiAgICB9XG5cbiAgICBYTUxUZXh0LnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIE9iamVjdC5jcmVhdGUodGhpcyk7XG4gICAgfTtcblxuICAgIFhNTFRleHQucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy53cml0ZXIuc2V0KG9wdGlvbnMpLnRleHQodGhpcyk7XG4gICAgfTtcblxuICAgIHJldHVybiBYTUxUZXh0O1xuXG4gIH0pKFhNTE5vZGUpO1xuXG59KS5jYWxsKHRoaXMpO1xuIiwiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbihmdW5jdGlvbigpIHtcbiAgdmFyIFhNTFdyaXRlckJhc2UsXG4gICAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5O1xuXG4gIG1vZHVsZS5leHBvcnRzID0gWE1MV3JpdGVyQmFzZSA9IChmdW5jdGlvbigpIHtcbiAgICBmdW5jdGlvbiBYTUxXcml0ZXJCYXNlKG9wdGlvbnMpIHtcbiAgICAgIHZhciBrZXksIHJlZiwgcmVmMSwgcmVmMiwgcmVmMywgcmVmNCwgcmVmNSwgcmVmNiwgdmFsdWU7XG4gICAgICBvcHRpb25zIHx8IChvcHRpb25zID0ge30pO1xuICAgICAgdGhpcy5wcmV0dHkgPSBvcHRpb25zLnByZXR0eSB8fCBmYWxzZTtcbiAgICAgIHRoaXMuYWxsb3dFbXB0eSA9IChyZWYgPSBvcHRpb25zLmFsbG93RW1wdHkpICE9IG51bGwgPyByZWYgOiBmYWxzZTtcbiAgICAgIGlmICh0aGlzLnByZXR0eSkge1xuICAgICAgICB0aGlzLmluZGVudCA9IChyZWYxID0gb3B0aW9ucy5pbmRlbnQpICE9IG51bGwgPyByZWYxIDogJyAgJztcbiAgICAgICAgdGhpcy5uZXdsaW5lID0gKHJlZjIgPSBvcHRpb25zLm5ld2xpbmUpICE9IG51bGwgPyByZWYyIDogJ1xcbic7XG4gICAgICAgIHRoaXMub2Zmc2V0ID0gKHJlZjMgPSBvcHRpb25zLm9mZnNldCkgIT0gbnVsbCA/IHJlZjMgOiAwO1xuICAgICAgICB0aGlzLmRvbnRwcmV0dHl0ZXh0bm9kZXMgPSAocmVmNCA9IG9wdGlvbnMuZG9udHByZXR0eXRleHRub2RlcykgIT0gbnVsbCA/IHJlZjQgOiAwO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5pbmRlbnQgPSAnJztcbiAgICAgICAgdGhpcy5uZXdsaW5lID0gJyc7XG4gICAgICAgIHRoaXMub2Zmc2V0ID0gMDtcbiAgICAgICAgdGhpcy5kb250cHJldHR5dGV4dG5vZGVzID0gMDtcbiAgICAgIH1cbiAgICAgIHRoaXMuc3BhY2ViZWZvcmVzbGFzaCA9IChyZWY1ID0gb3B0aW9ucy5zcGFjZWJlZm9yZXNsYXNoKSAhPSBudWxsID8gcmVmNSA6ICcnO1xuICAgICAgaWYgKHRoaXMuc3BhY2ViZWZvcmVzbGFzaCA9PT0gdHJ1ZSkge1xuICAgICAgICB0aGlzLnNwYWNlYmVmb3Jlc2xhc2ggPSAnICc7XG4gICAgICB9XG4gICAgICB0aGlzLm5ld2xpbmVkZWZhdWx0ID0gdGhpcy5uZXdsaW5lO1xuICAgICAgdGhpcy5wcmV0dHlkZWZhdWx0ID0gdGhpcy5wcmV0dHk7XG4gICAgICByZWY2ID0gb3B0aW9ucy53cml0ZXIgfHwge307XG4gICAgICBmb3IgKGtleSBpbiByZWY2KSB7XG4gICAgICAgIGlmICghaGFzUHJvcC5jYWxsKHJlZjYsIGtleSkpIGNvbnRpbnVlO1xuICAgICAgICB2YWx1ZSA9IHJlZjZba2V5XTtcbiAgICAgICAgdGhpc1trZXldID0gdmFsdWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgWE1MV3JpdGVyQmFzZS5wcm90b3R5cGUuc2V0ID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgdmFyIGtleSwgcmVmLCB2YWx1ZTtcbiAgICAgIG9wdGlvbnMgfHwgKG9wdGlvbnMgPSB7fSk7XG4gICAgICBpZiAoXCJwcmV0dHlcIiBpbiBvcHRpb25zKSB7XG4gICAgICAgIHRoaXMucHJldHR5ID0gb3B0aW9ucy5wcmV0dHk7XG4gICAgICB9XG4gICAgICBpZiAoXCJhbGxvd0VtcHR5XCIgaW4gb3B0aW9ucykge1xuICAgICAgICB0aGlzLmFsbG93RW1wdHkgPSBvcHRpb25zLmFsbG93RW1wdHk7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5wcmV0dHkpIHtcbiAgICAgICAgdGhpcy5pbmRlbnQgPSBcImluZGVudFwiIGluIG9wdGlvbnMgPyBvcHRpb25zLmluZGVudCA6ICcgICc7XG4gICAgICAgIHRoaXMubmV3bGluZSA9IFwibmV3bGluZVwiIGluIG9wdGlvbnMgPyBvcHRpb25zLm5ld2xpbmUgOiAnXFxuJztcbiAgICAgICAgdGhpcy5vZmZzZXQgPSBcIm9mZnNldFwiIGluIG9wdGlvbnMgPyBvcHRpb25zLm9mZnNldCA6IDA7XG4gICAgICAgIHRoaXMuZG9udHByZXR0eXRleHRub2RlcyA9IFwiZG9udHByZXR0eXRleHRub2Rlc1wiIGluIG9wdGlvbnMgPyBvcHRpb25zLmRvbnRwcmV0dHl0ZXh0bm9kZXMgOiAwO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5pbmRlbnQgPSAnJztcbiAgICAgICAgdGhpcy5uZXdsaW5lID0gJyc7XG4gICAgICAgIHRoaXMub2Zmc2V0ID0gMDtcbiAgICAgICAgdGhpcy5kb250cHJldHR5dGV4dG5vZGVzID0gMDtcbiAgICAgIH1cbiAgICAgIHRoaXMuc3BhY2ViZWZvcmVzbGFzaCA9IFwic3BhY2ViZWZvcmVzbGFzaFwiIGluIG9wdGlvbnMgPyBvcHRpb25zLnNwYWNlYmVmb3Jlc2xhc2ggOiAnJztcbiAgICAgIGlmICh0aGlzLnNwYWNlYmVmb3Jlc2xhc2ggPT09IHRydWUpIHtcbiAgICAgICAgdGhpcy5zcGFjZWJlZm9yZXNsYXNoID0gJyAnO1xuICAgICAgfVxuICAgICAgdGhpcy5uZXdsaW5lZGVmYXVsdCA9IHRoaXMubmV3bGluZTtcbiAgICAgIHRoaXMucHJldHR5ZGVmYXVsdCA9IHRoaXMucHJldHR5O1xuICAgICAgcmVmID0gb3B0aW9ucy53cml0ZXIgfHwge307XG4gICAgICBmb3IgKGtleSBpbiByZWYpIHtcbiAgICAgICAgaWYgKCFoYXNQcm9wLmNhbGwocmVmLCBrZXkpKSBjb250aW51ZTtcbiAgICAgICAgdmFsdWUgPSByZWZba2V5XTtcbiAgICAgICAgdGhpc1trZXldID0gdmFsdWU7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuXG4gICAgWE1MV3JpdGVyQmFzZS5wcm90b3R5cGUuc3BhY2UgPSBmdW5jdGlvbihsZXZlbCkge1xuICAgICAgdmFyIGluZGVudDtcbiAgICAgIGlmICh0aGlzLnByZXR0eSkge1xuICAgICAgICBpbmRlbnQgPSAobGV2ZWwgfHwgMCkgKyB0aGlzLm9mZnNldCArIDE7XG4gICAgICAgIGlmIChpbmRlbnQgPiAwKSB7XG4gICAgICAgICAgcmV0dXJuIG5ldyBBcnJheShpbmRlbnQpLmpvaW4odGhpcy5pbmRlbnQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgICAgfVxuICAgIH07XG5cbiAgICByZXR1cm4gWE1MV3JpdGVyQmFzZTtcblxuICB9KSgpO1xuXG59KS5jYWxsKHRoaXMpO1xuIiwiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbihmdW5jdGlvbigpIHtcbiAgdmFyIFhNTERvY3VtZW50LCBYTUxEb2N1bWVudENCLCBYTUxTdHJlYW1Xcml0ZXIsIFhNTFN0cmluZ1dyaXRlciwgYXNzaWduLCBpc0Z1bmN0aW9uLCByZWY7XG5cbiAgcmVmID0gcmVxdWlyZSgnLi9VdGlsaXR5JyksIGFzc2lnbiA9IHJlZi5hc3NpZ24sIGlzRnVuY3Rpb24gPSByZWYuaXNGdW5jdGlvbjtcblxuICBYTUxEb2N1bWVudCA9IHJlcXVpcmUoJy4vWE1MRG9jdW1lbnQnKTtcblxuICBYTUxEb2N1bWVudENCID0gcmVxdWlyZSgnLi9YTUxEb2N1bWVudENCJyk7XG5cbiAgWE1MU3RyaW5nV3JpdGVyID0gcmVxdWlyZSgnLi9YTUxTdHJpbmdXcml0ZXInKTtcblxuICBYTUxTdHJlYW1Xcml0ZXIgPSByZXF1aXJlKCcuL1hNTFN0cmVhbVdyaXRlcicpO1xuXG4gIG1vZHVsZS5leHBvcnRzLmNyZWF0ZSA9IGZ1bmN0aW9uKG5hbWUsIHhtbGRlYywgZG9jdHlwZSwgb3B0aW9ucykge1xuICAgIHZhciBkb2MsIHJvb3Q7XG4gICAgaWYgKG5hbWUgPT0gbnVsbCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUm9vdCBlbGVtZW50IG5lZWRzIGEgbmFtZVwiKTtcbiAgICB9XG4gICAgb3B0aW9ucyA9IGFzc2lnbih7fSwgeG1sZGVjLCBkb2N0eXBlLCBvcHRpb25zKTtcbiAgICBkb2MgPSBuZXcgWE1MRG9jdW1lbnQob3B0aW9ucyk7XG4gICAgcm9vdCA9IGRvYy5lbGVtZW50KG5hbWUpO1xuICAgIGlmICghb3B0aW9ucy5oZWFkbGVzcykge1xuICAgICAgZG9jLmRlY2xhcmF0aW9uKG9wdGlvbnMpO1xuICAgICAgaWYgKChvcHRpb25zLnB1YklEICE9IG51bGwpIHx8IChvcHRpb25zLnN5c0lEICE9IG51bGwpKSB7XG4gICAgICAgIGRvYy5kb2N0eXBlKG9wdGlvbnMpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcm9vdDtcbiAgfTtcblxuICBtb2R1bGUuZXhwb3J0cy5iZWdpbiA9IGZ1bmN0aW9uKG9wdGlvbnMsIG9uRGF0YSwgb25FbmQpIHtcbiAgICB2YXIgcmVmMTtcbiAgICBpZiAoaXNGdW5jdGlvbihvcHRpb25zKSkge1xuICAgICAgcmVmMSA9IFtvcHRpb25zLCBvbkRhdGFdLCBvbkRhdGEgPSByZWYxWzBdLCBvbkVuZCA9IHJlZjFbMV07XG4gICAgICBvcHRpb25zID0ge307XG4gICAgfVxuICAgIGlmIChvbkRhdGEpIHtcbiAgICAgIHJldHVybiBuZXcgWE1MRG9jdW1lbnRDQihvcHRpb25zLCBvbkRhdGEsIG9uRW5kKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG5ldyBYTUxEb2N1bWVudChvcHRpb25zKTtcbiAgICB9XG4gIH07XG5cbiAgbW9kdWxlLmV4cG9ydHMuc3RyaW5nV3JpdGVyID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgIHJldHVybiBuZXcgWE1MU3RyaW5nV3JpdGVyKG9wdGlvbnMpO1xuICB9O1xuXG4gIG1vZHVsZS5leHBvcnRzLnN0cmVhbVdyaXRlciA9IGZ1bmN0aW9uKHN0cmVhbSwgb3B0aW9ucykge1xuICAgIHJldHVybiBuZXcgWE1MU3RyZWFtV3JpdGVyKHN0cmVhbSwgb3B0aW9ucyk7XG4gIH07XG5cbn0pLmNhbGwodGhpcyk7XG4iXX0=\r\n","import { writable } from 'svelte-persistent-store/dist/session';\r\nimport jsforce from \"../jsforce/jsforce\";\r\n\r\n//Insert store variables here\r\nexport const count = writable('count', 0);\r\n\r\nexport const oauth2 = new jsforce.OAuth2({\r\n    loginUrl : __myapp.env.LOGIN_URL,\r\n    clientId : __myapp.env.CLIENT_ID,\r\n    clientSecret : __myapp.env.CLIENT_SECRET,\r\n    redirectUri : __myapp.env.REDIRECT_URI,\r\n    version: __myapp.env.API_VERSION,\r\n    proxyUrl: __myapp.env.PROXY_URL\r\n});\r\n\r\nexport const sfConn = new jsforce.Connection({oauth2: oauth2});\r\n\r\nexport const loggedUserId = writable('loggedUserId', '');\r\nexport const accessToken = writable('accessToken', '');\r\nexport const instanceUrl = writable('instanceUrl', '');\r\nexport const refreshToken = writable('refreshToken', '');","<script>\r\n    import { oauth2 } from \"../store/store.js\";\r\n    import jsforce from \"../jsforce/jsforce\";\r\n    \r\n    let urlLogin = oauth2.getAuthorizationUrl();\r\n    \r\n    function login() {\r\n        window.location = urlLogin;\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n<h2>You should login with salesforce to use the app.</h2>\r\n<p>Please use the below button to authorize access to your org.</p>\r\n<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" on:click={login}>Login with Salesforce</button>\r\n{urlLogin}","<script>\r\n    import { oauth2, sfConn, loggedUserId, accessToken, instanceUrl, refreshToken } from \"../store/store.js\";\r\n    import jsforce from \"../jsforce/jsforce\";\r\n\r\n    let message = '';\r\n\r\n    let urlParameters = new URLSearchParams(window.location.search);\r\n    let code = urlParameters.get('code');\r\n    console.log('code ', code);\r\n    \r\n    sfConn.authorize(code, function(err, userInfo) {\r\n        console.log('sfConn.authorize ');\r\n        if (err) { message = err; return ''; }\r\n        console.log('Access Token: ' + sfConn.accessToken);\r\n        console.log('Instance URL: ' + sfConn.instanceUrl);\r\n        console.log('refreshToken: ' + sfConn.refreshToken);\r\n        loggedUserId.set(userInfo.id);\r\n        accessToken.set(sfConn.accessToken);\r\n        instanceUrl.set(sfConn.instanceUrl);\r\n        refreshToken.set(sfConn.refreshToken);\r\n        console.log('User ID: ' + userInfo.id);\r\n        console.log('Org ID: ' + userInfo.organizationId);\r\n        \r\n        window.location = './';\r\n    });\r\n</script>\r\n<h1>Token component</h1>\r\n<p>Code: {code}</p>\r\n<p>{message}</p>\r\n","<script>\r\n    import { loggedUserId } from \"../store/store.js\";\r\n    let userId;\r\n    loggedUserId.subscribe(id => (userId = id));\r\n</script>\r\n<h1>Home component</h1>\r\n<h2>Shared Bills</h2>\r\n{#if userId != ''}\r\n     <h1>Logged as user {userId}</h1>\r\n{:else}\r\n     Please login first.\r\n{/if}","export const LOCATION = {};\nexport const ROUTER = {};\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nfunction getLocation(source) {\n  return {\n    ...source.location,\n    state: source.history.state,\n    key: (source.history.state && source.history.state.key) || \"initial\"\n  };\n}\n\nfunction createHistory(source, options) {\n  const listeners = [];\n  let location = getLocation(source);\n\n  return {\n    get location() {\n      return location;\n    },\n\n    listen(listener) {\n      listeners.push(listener);\n\n      const popstateListener = () => {\n        location = getLocation(source);\n        listener({ location, action: \"POP\" });\n      };\n\n      source.addEventListener(\"popstate\", popstateListener);\n\n      return () => {\n        source.removeEventListener(\"popstate\", popstateListener);\n\n        const index = listeners.indexOf(listener);\n        listeners.splice(index, 1);\n      };\n    },\n\n    navigate(to, { state, replace = false } = {}) {\n      state = { ...state, key: Date.now() + \"\" };\n      // try...catch iOS Safari limits to 100 pushState calls\n      try {\n        if (replace) {\n          source.history.replaceState(state, null, to);\n        } else {\n          source.history.pushState(state, null, to);\n        }\n      } catch (e) {\n        source.location[replace ? \"replace\" : \"assign\"](to);\n      }\n\n      location = getLocation(source);\n      listeners.forEach(listener => listener({ location, action: \"PUSH\" }));\n    }\n  };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n  let index = 0;\n  const stack = [{ pathname: initialPathname, search: \"\" }];\n  const states = [];\n\n  return {\n    get location() {\n      return stack[index];\n    },\n    addEventListener(name, fn) {},\n    removeEventListener(name, fn) {},\n    history: {\n      get entries() {\n        return stack;\n      },\n      get index() {\n        return index;\n      },\n      get state() {\n        return states[index];\n      },\n      pushState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        index++;\n        stack.push({ pathname, search });\n        states.push(state);\n      },\n      replaceState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        stack[index] = { pathname, search };\n        states[index] = state;\n      }\n    }\n  };\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = Boolean(\n  typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n);\nconst globalHistory = createHistory(canUseDOM ? window : createMemorySource());\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nconst paramRe = /^:(.+)/;\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport function startsWith(string, search) {\n  return string.substr(0, search.length) === search;\n}\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isRootSegment(segment) {\n  return segment === \"\";\n}\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isDynamic(segment) {\n  return paramRe.test(segment);\n}\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nfunction isSplat(segment) {\n  return segment[0] === \"*\";\n}\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nfunction segmentize(uri) {\n  return (\n    uri\n      // Strip starting/ending `/`\n      .replace(/(^\\/+|\\/+$)/g, \"\")\n      .split(\"/\")\n  );\n}\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nfunction stripSlashes(str) {\n  return str.replace(/(^\\/+|\\/+$)/g, \"\");\n}\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nfunction rankRoute(route, index) {\n  const score = route.default\n    ? 0\n    : segmentize(route.path).reduce((score, segment) => {\n        score += SEGMENT_POINTS;\n\n        if (isRootSegment(segment)) {\n          score += ROOT_POINTS;\n        } else if (isDynamic(segment)) {\n          score += DYNAMIC_POINTS;\n        } else if (isSplat(segment)) {\n          score -= SEGMENT_POINTS + SPLAT_PENALTY;\n        } else {\n          score += STATIC_POINTS;\n        }\n\n        return score;\n      }, 0);\n\n  return { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nfunction rankRoutes(routes) {\n  return (\n    routes\n      .map(rankRoute)\n      // If two routes have the exact same score, we go by index instead\n      .sort((a, b) =>\n        a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index\n      )\n  );\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { path, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nfunction pick(routes, uri) {\n  let match;\n  let default_;\n\n  const [uriPathname] = uri.split(\"?\");\n  const uriSegments = segmentize(uriPathname);\n  const isRootUri = uriSegments[0] === \"\";\n  const ranked = rankRoutes(routes);\n\n  for (let i = 0, l = ranked.length; i < l; i++) {\n    const route = ranked[i].route;\n    let missed = false;\n\n    if (route.default) {\n      default_ = {\n        route,\n        params: {},\n        uri\n      };\n      continue;\n    }\n\n    const routeSegments = segmentize(route.path);\n    const params = {};\n    const max = Math.max(uriSegments.length, routeSegments.length);\n    let index = 0;\n\n    for (; index < max; index++) {\n      const routeSegment = routeSegments[index];\n      const uriSegment = uriSegments[index];\n\n      if (routeSegment !== undefined && isSplat(routeSegment)) {\n        // Hit a splat, just grab the rest, and return a match\n        // uri:   /files/documents/work\n        // route: /files/* or /files/*splatname\n        const splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n        params[splatName] = uriSegments\n          .slice(index)\n          .map(decodeURIComponent)\n          .join(\"/\");\n        break;\n      }\n\n      if (uriSegment === undefined) {\n        // URI is shorter than the route, no match\n        // uri:   /users\n        // route: /users/:userId\n        missed = true;\n        break;\n      }\n\n      let dynamicMatch = paramRe.exec(routeSegment);\n\n      if (dynamicMatch && !isRootUri) {\n        const value = decodeURIComponent(uriSegment);\n        params[dynamicMatch[1]] = value;\n      } else if (routeSegment !== uriSegment) {\n        // Current segments don't match, not dynamic, not splat, so no match\n        // uri:   /users/123/settings\n        // route: /users/:id/profile\n        missed = true;\n        break;\n      }\n    }\n\n    if (!missed) {\n      match = {\n        route,\n        params,\n        uri: \"/\" + uriSegments.slice(0, index).join(\"/\")\n      };\n      break;\n    }\n  }\n\n  return match || default_ || null;\n}\n\n/**\n * Check if the `path` matches the `uri`.\n * @param {string} path\n * @param {string} uri\n * @return {?object}\n */\nfunction match(route, uri) {\n  return pick([route], uri);\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nfunction addQuery(pathname, query) {\n  return pathname + (query ? `?${query}` : \"\");\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nfunction resolve(to, base) {\n  // /foo/bar, /baz/qux => /foo/bar\n  if (startsWith(to, \"/\")) {\n    return to;\n  }\n\n  const [toPathname, toQuery] = to.split(\"?\");\n  const [basePathname] = base.split(\"?\");\n  const toSegments = segmentize(toPathname);\n  const baseSegments = segmentize(basePathname);\n\n  // ?a=b, /users?b=c => /users?a=b\n  if (toSegments[0] === \"\") {\n    return addQuery(basePathname, toQuery);\n  }\n\n  // profile, /users/789 => /users/789/profile\n  if (!startsWith(toSegments[0], \".\")) {\n    const pathname = baseSegments.concat(toSegments).join(\"/\");\n\n    return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n  }\n\n  // ./       , /users/123 => /users/123\n  // ../      , /users/123 => /users\n  // ../..    , /users/123 => /\n  // ../../one, /a/b/c/d   => /a/b/one\n  // .././one , /a/b/c/d   => /a/b/c/one\n  const allSegments = baseSegments.concat(toSegments);\n  const segments = [];\n\n  allSegments.forEach(segment => {\n    if (segment === \"..\") {\n      segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n}\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nfunction combinePaths(basepath, path) {\n  return `${stripSlashes(\n    path === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`\n  )}/`;\n}\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nfunction shouldNavigate(event) {\n  return (\n    !event.defaultPrevented &&\n    event.button === 0 &&\n    !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n  );\n}\n\nfunction hostMatches(anchor) {\n  const host = location.host\n  return (\n    anchor.host == host ||\n    // svelte seems to kill anchor.host value in ie11, so fall back to checking href\n    anchor.href.indexOf(`https://${host}`) === 0 ||\n    anchor.href.indexOf(`http://${host}`) === 0\n  )\n}\n\nexport { stripSlashes, pick, match, resolve, combinePaths, shouldNavigate, hostMatches };\n","<script>\n  import { getContext, setContext, onMount } from \"svelte\";\n  import { writable, derived } from \"svelte/store\";\n  import { LOCATION, ROUTER } from \"./contexts.js\";\n  import { globalHistory } from \"./history.js\";\n  import { pick, match, stripSlashes, combinePaths } from \"./utils.js\";\n\n  export let basepath = \"/\";\n  export let url = null;\n\n  const locationContext = getContext(LOCATION);\n  const routerContext = getContext(ROUTER);\n\n  const routes = writable([]);\n  const activeRoute = writable(null);\n  let hasActiveRoute = false; // Used in SSR to synchronously set that a Route is active.\n\n  // If locationContext is not set, this is the topmost Router in the tree.\n  // If the `url` prop is given we force the location to it.\n  const location =\n    locationContext ||\n    writable(url ? { pathname: url } : globalHistory.location);\n\n  // If routerContext is set, the routerBase of the parent Router\n  // will be the base for this Router's descendants.\n  // If routerContext is not set, the path and resolved uri will both\n  // have the value of the basepath prop.\n  const base = routerContext\n    ? routerContext.routerBase\n    : writable({\n        path: basepath,\n        uri: basepath\n      });\n\n  const routerBase = derived([base, activeRoute], ([base, activeRoute]) => {\n    // If there is no activeRoute, the routerBase will be identical to the base.\n    if (activeRoute === null) {\n      return base;\n    }\n\n    const { path: basepath } = base;\n    const { route, uri } = activeRoute;\n    // Remove the potential /* or /*splatname from\n    // the end of the child Routes relative paths.\n    const path = route.default ? basepath : route.path.replace(/\\*.*$/, \"\");\n\n    return { path, uri };\n  });\n\n  function registerRoute(route) {\n    const { path: basepath } = $base;\n    let { path } = route;\n\n    // We store the original path in the _path property so we can reuse\n    // it when the basepath changes. The only thing that matters is that\n    // the route reference is intact, so mutation is fine.\n    route._path = path;\n    route.path = combinePaths(basepath, path);\n\n    if (typeof window === \"undefined\") {\n      // In SSR we should set the activeRoute immediately if it is a match.\n      // If there are more Routes being registered after a match is found,\n      // we just skip them.\n      if (hasActiveRoute) {\n        return;\n      }\n\n      const matchingRoute = match(route, $location.pathname);\n      if (matchingRoute) {\n        activeRoute.set(matchingRoute);\n        hasActiveRoute = true;\n      }\n    } else {\n      routes.update(rs => {\n        rs.push(route);\n        return rs;\n      });\n    }\n  }\n\n  function unregisterRoute(route) {\n    routes.update(rs => {\n      const index = rs.indexOf(route);\n      rs.splice(index, 1);\n      return rs;\n    });\n  }\n\n  // This reactive statement will update all the Routes' path when\n  // the basepath changes.\n  $: {\n    const { path: basepath } = $base;\n    routes.update(rs => {\n      rs.forEach(r => (r.path = combinePaths(basepath, r._path)));\n      return rs;\n    });\n  }\n  // This reactive statement will be run when the Router is created\n  // when there are no Routes and then again the following tick, so it\n  // will not find an active Route in SSR and in the browser it will only\n  // pick an active Route after all Routes have been registered.\n  $: {\n    const bestMatch = pick($routes, $location.pathname);\n    activeRoute.set(bestMatch);\n  }\n\n  if (!locationContext) {\n    // The topmost Router in the tree is responsible for updating\n    // the location store and supplying it through context.\n    onMount(() => {\n      const unlisten = globalHistory.listen(history => {\n        location.set(history.location);\n      });\n\n      return unlisten;\n    });\n\n    setContext(LOCATION, location);\n  }\n\n  setContext(ROUTER, {\n    activeRoute,\n    base,\n    routerBase,\n    registerRoute,\n    unregisterRoute\n  });\n</script>\n\n<slot></slot>\n","<script>\n  import { getContext, onDestroy } from \"svelte\";\n  import { ROUTER, LOCATION } from \"./contexts.js\";\n\n  export let path = \"\";\n  export let component = null;\n\n  const { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n  const location = getContext(LOCATION);\n\n  const route = {\n    path,\n    // If no path prop is given, this Route will act as the default Route\n    // that is rendered if no other Route in the Router is a match.\n    default: path === \"\"\n  };\n  let routeParams = {};\n  let routeProps = {};\n\n  $: if ($activeRoute && $activeRoute.route === route) {\n    routeParams = $activeRoute.params;\n  }\n\n  $: {\n    const { path, component, ...rest } = $$props;\n    routeProps = rest;\n  }\n\n  registerRoute(route);\n\n  // There is no need to unregister Routes in SSR since it will all be\n  // thrown away anyway.\n  if (typeof window !== \"undefined\") {\n    onDestroy(() => {\n      unregisterRoute(route);\n    });\n  }\n</script>\n\n{#if $activeRoute !== null && $activeRoute.route === route}\n  {#if component !== null}\n    <svelte:component this=\"{component}\" location={$location} {...routeParams} {...routeProps}  />\n  {:else}\n    <slot params=\"{routeParams}\" location={$location}></slot>\n  {/if}\n{/if}\n","<script>\n  import { getContext, createEventDispatcher } from \"svelte\";\n  import { ROUTER, LOCATION } from \"./contexts.js\";\n  import { navigate } from \"./history.js\";\n  import { startsWith, resolve, shouldNavigate } from \"./utils.js\";\n\n  export let to = \"#\";\n  export let replace = false;\n  export let state = {};\n  export let getProps = () => ({});\n\n  const { base } = getContext(ROUTER);\n  const location = getContext(LOCATION);\n  const dispatch = createEventDispatcher();\n\n  let href, isPartiallyCurrent, isCurrent, props;\n  $: href = to === \"/\" ? $base.uri : resolve(to, $base.uri);\n  $: isPartiallyCurrent = startsWith($location.pathname, href);\n  $: isCurrent = href === $location.pathname;\n  $: ariaCurrent = isCurrent ? \"page\" : undefined;\n  $: props = getProps({\n    location: $location,\n    href,\n    isPartiallyCurrent,\n    isCurrent\n  });\n\n  function onClick(event) {\n    dispatch(\"click\", event);\n\n    if (shouldNavigate(event)) {\n      event.preventDefault();\n      // Don't push another entry to the history stack when the user\n      // clicks on a Link to the page they are currently on.\n      const shouldReplace = $location.pathname === href || replace;\n      navigate(href, { state, replace: shouldReplace });\n    }\n  }\n</script>\n\n<a href=\"{href}\" aria-current=\"{ariaCurrent}\" on:click=\"{onClick}\" {...props}>\n  <slot></slot>\n</a>\n","<script>\r\n    import { Link } from \"svelte-routing\";\r\n\r\n    export let css = '';\r\n    export let to = '';\r\n    export let label = ''\r\n</script>\r\n\r\n<Link getProps={() => {return {class: css}}} to={to}>{label}</Link>","<script>\r\n    import { oauth2, sfConn, loggedUserId, accessToken, instanceUrl, refreshToken } from \"../store/store.js\";\r\n    import jsforce from \"../jsforce/jsforce\";\r\n\r\n    let accessTokenValue;\r\n    accessToken.subscribe(id => (accessTokenValue = id));\r\n    let instanceUrlValue;\r\n    instanceUrl.subscribe(id => (instanceUrlValue = id));\r\n\r\n    console.log('create shared bill ');\r\n    //SOQL query\r\n    let q = 'SELECT id, name FROM account LIMIT 10';\r\n    //instantiate connection\r\n    let conn = new jsforce.Connection({\r\n        oauth2 : {oauth2},\r\n        accessToken: accessTokenValue,\r\n        instanceUrl: instanceUrlValue,\r\n        proxyUrl: \"https://shared-bills-proxy.herokuapp.com/proxy\"\r\n    });\r\n    //set records array\r\n    let records = [];\r\n    conn.query(q, function(err, res) {\r\n    if (err) { console.log(err); }\r\n    records = res.records;\r\n    console.log('records ', records);\r\n    });\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n<h1>Create Shared Bill</h1>\r\n<ul>\r\n{#each records as record}\r\n     <li>{record.Name}</li>\r\n{:else}\r\n    <li>No contacts found</li>\r\n{/each}\r\n</ul>","<script>\r\n\timport Login from './components/Login.svelte';\r\n\timport Token from './components/Token.svelte';\r\n\timport Home from './components/Home.svelte';\r\n\timport Link from './components/_Link.svelte'\r\n\timport CreateSharedBill from './components/CreateSharedBill.svelte';\r\n\timport { Router, Route } from \"svelte-routing\";\r\n\r\n\texport let url = \"\";\r\n\r\n\tlet currentUrl = window.location.href;\r\n\tlet swLocation = '/shared-bills-svelte-pwa/service-worker.js';\r\n\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tif(currentUrl.includes('localhost')) {\r\n\t\t\tswLocation = '/service-worker.js';\r\n\t\t}\r\n\t\tconsole.log('Service worker location ', swLocation);\r\n\t\tnavigator.serviceWorker.register(swLocation)\r\n\t\t.then(function(registration) {\r\n        \tconsole.log(\"Service Worker Registered\", registration);\r\n\t\t})\r\n\t\t.catch(function(err) {\r\n\t\t\tconsole.log(\"Service Worker Failed to Register\", err);\r\n\t\t})\r\n\t}\r\n</script>\r\n<style>\r\n\r\n</style>\r\n\r\n<main class=\"overflow-hidden\">\r\n\t<Router url=\"{url}\">\r\n\t\t<nav>\r\n\t\t\t<Link css=\"text-primaryColor font-semibold hover:text-accentColor\" to=\"/\" label=\"Home\"/>\r\n\t\t\t<Link css=\"text-primaryColor font-semibold hover:text-accentColor\" to=\"Login\" label=\"Login\"/>\r\n\t\t\t<Link css=\"text-primaryColor font-semibold hover:text-accentColor\" to=\"Token\" label=\"Token\"/>\r\n\t\t\t<Link css=\"text-primaryColor font-semibold hover:text-accentColor\" to=\"Create-shared-bill\" label=\"CreateSharedBill\"/>\r\n\t\t</nav>\r\n\t\t<p>Current url: {url}</p>\r\n\t\t<div>\r\n\t\t  <Route path=\"/\" component=\"{Home}\" />\r\n\t\t  <Route path=\"Login\" component=\"{Login}\" />\r\n\t\t  <Route path=\"Token\" component=\"{Token}\" />\r\n\t\t  <Route path=\"Create-shared-bill\" component=\"{CreateSharedBill}\" />\r\n\t\t  <Route path=\"/\"><Home /></Route>\r\n\t\t</div>\r\n\t</Router>\r\n</main>\r\n","import App from \"./App.svelte\";\r\n\r\nconst app = new App({\r\n  target: document.body\r\n});\r\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","exclude_internal_props","props","result","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","set_data","wholeText","current_component","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","call","setContext","context","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","get_spread_update","levels","updates","to_null_out","accounted_for","n","get_spread_object","spread_props","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","bound","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","storage","readable","getItem","JSON","parse","setItem","stringify","ogStore","ogWritable","ogSet","ogGet","input","store2","generator","window","sessionStorage","module","t","f","require","u","code","exports","1","jsforce","browser","../api","../core","./client","2","3","inherits","util","events","lodash/core","readable-stream","multistream","./VERSION","./cache","./connection","./core","./csv","./date","./http-api","./logger","./oauth2","./process","./promise","./query","./quick-action","./record-stream","./record","./soap","./sobject","./soql-builder","./transport","4","ReportInstance","report","id","_report","_conn","prototype","retrieve","conn","url","_baseUrl","join","request","thenCall","Report","describe","del","destroy","method","clone","reportMetadata","params","headers","Content-Type","body","explain","exec","execute","isFunction","details","metadata","executeAsync","instances","Dashboard","components","componentIds","isString","status","refresh","folderid","isObject","folderId","Analytics","reports","dashboard","dashboards","on","analytics","../promise","5","Apex","instanceUrl","_createRequestParams","path","_headers","test","post","put","patch","apex","6","process","stream","Duplex","joinStreams","RecordStream","HttpApi","Job","bulk","operation","jobId","_bulk","state","_batches","EventEmitter","info","_jobInfo","check","open","self","_logger","toLowerCase","extIdField","concurrencyMode","assignmentRuleId","_request","responseType","res","emit","jobInfo","err","createBatch","batch","Batch","batchId","logger","_waitAssign","debug","object","list","batchInfoList","batchInfo","close","_changeState","abort","job","super_","objectMode","_deferred","defer","_setupDataStreams","Writable","converterOptions","nullValue","_uploadStream","Serializable","_uploadDataStream","_downloadStream","Parsable","_downloadDataStream","end","once","pipe","_createRequestStream","dataStream","_dataStream","_write","enc","cb","write","read","_read","size","chunk","record","Id","_result","rdeferred","promise","reject","String","onResolved","onReject","onProgress","nextTick","poll","interval","timeout","startTime","Date","getTime","now","parseInt","numberRecordsProcessed","stateMessage","setTimeout","results","success","Success","errors","fail","resultId","resultStream","resultDataStream","BulkApi","apply","arguments","beforeSend","accessToken","isSessionExpired","response","statusCode","hasErrorInResponseBody","error","parseError","errorCode","exceptionCode","message","exceptionMessage","Bulk","pollInterval","pollTimeout","baseUrl","version","load","constructor","createJob","cleanupOnError","query","soql","replace","match","recordStream","streams","../http-api","../record-stream","_process","7","Chatter","_normalizeUrl","Request","resource","queryParams","Resource","requests","batchRequests","batchDeferreds","deferred","_promise","batchParams","chatter","_chatter","_params","richInput","onResolve","qstring","encodeURIComponent","_url","8","./analytics","./apex","./bulk","./chatter","./metadata","./streaming","./tooling","9","Buffer","SOAP","Metadata","convertToSaveResult","saveResult","convertToUpsertResult","upsertResult","created","convertToMetadataInfo","rec","metadataInfo","$","_invoke","xmlns","endpointUrl","invoke","createAsync","Number","convert","md","AsyncResultLocator","createSync","readSync","fullNames","records","updateAsync","updateMetadata","umd","updateSync","upsertSync","upsert","deleteAsync","fullName","deleteSync","rename","oldFullName","newFullName","checkStatus","ids","asyncProcessId","asOfVersion","metadataObjects","mo","childXmlNames","inFolder","metaFile","partialSaveAllowed","testRequired","queries","RetrieveResultLocator","checkRetrieveStatus","deploy","zipInput","bufs","concat","toString","zipContentB64","ZipFile","DeployOptions","DeployResultLocator","checkDeployStatus","includeDetails","isBoolean","done","checkOnly","ignoreWarnings","rollbackOnError","numberComponentErrors","numberComponentsDeployed","numberComponentsTotal","numberTestErrors","numberTestsCompleted","numberTestsTotal","meta","_meta","_results","_isArray","convertType","_ids","errMsg","resultArr","complete","Readable","reading","zipFile","../soap","buffer","10","SoapApi","schema","Schemas","convertLead","leadConverts","LeadConvertResult","leadId","accountId","contactId","opportunityId","merge","mergeRequests","MergeResult","mergedRecordIds","updatedRelatedIds","emptyRecycleBin","EmptyRecycleBinResult","describeTabs","DescribeTabSetResult","label","logoUrl","namespace","selected","tabs","colors","theme","color","iconUrl","icons","height","width","contentType","custom","miniIconUrl","sobjectName","getServerTimestamp","GetServerTimestampResult","timestamp","getUserInfo","GetUserInfoResult","accessibilityMode","currencySymbol","orgAttachmentFileSizeLimit","orgDefaultCurrencyIsoCode","orgDisallowHtmlAttachments","orgHasPersonAccounts","organizationId","organizationMultiCurrency","organizationName","profileId","roleId","sessionSecondsValid","userDefaultCurrencyIsoCode","userEmail","userFullName","userId","userLanguage","userLocale","userName","userTimeZone","userType","userUiSkin","setPassword","password","resetPassword","sObjects","SaveResult","args","@xmlns","@xmlns:ns1","ns1:sObjects","externalIdFieldName","UpsertResult","ns1:externalIDFieldName","DeleteResult","ns1:ids","soap","11","StreamingExtension","AuthFailure","failureCallback","incoming","channel","advice","reconnect","Replay","replayId","REPLAY_FROM_KEY","_extensionEnabled","_replay","_channel","setExtensionEnabled","extensionEnabled","setReplay","replay","setChannel","ext","outgoing","replayFromMap","12","Faye","Topic","streaming","_streaming","listener","Channel","_name","_id","sobject","findOne","Name","channelUrl","requestPost","pushEvents","rets","Streaming","_createClient","forChannelName","extensions","needsReplayFix","fayeClient","Client","setHeader","extension","addExtension","_dispatcher","getConnectionTypes","selectTransport","_transport","batching","_getFayeClient","channelName","clientType","_fayeClients","topic","_topics","channelId","createClient","./streaming-extension","faye","13","Cache","Tooling","cache","cacheOptions","describe$","makeCacheable","makeResponseCacheable","describeSObject$","describeSObject","describeGlobal$","describeGlobal","initialize","sobjects","removeAllListeners","bind","so","executeAnonymous","runTestsAsynchronous","classids","runTestsSynchronous","classnames","completions","tooling","../cache","14","parseHeaders","hs","split","line","pair","supported","Sfdc","canvas","createRequest","signedRequest","str","sent","send","settings","client","responseHeaders","payload","failure","ajax","encoding","15","qs","Connection","OAuth2","popupWin","w","h","left","screen","top","handleCallbackResponse","checkCallbackResponse","localStorage","removeItem","states","prefix","promptType","cli","_storeTokens","location","hash","_storeError","substring","access_token","search","clientIdx","_prefix","connection","config","tokens","_getTokens","login","extend","_prompt","oauth2","rand","random","authzUrl","getAuthorizationUrl","response_type","scope","pw","href","_removeTokens","pid","setInterval","closed","clearInterval","_getError","error_description","isLoggedIn","logout","regexp","RegExp","cookie","issuedAt","userInfo","idUrl","instance_url","issued_at","../connection","../oauth2","querystring","16","_index","jsonpParam","toUpperCase","cbFuncName","script","documentElement","content-type","clearTimeout","17","getResponseHeaderNames","xhr","headerLines","getAllResponseHeaders","headerLine","XMLHttpRequest","header","setRequestHeader","onreadystatechange","readyState","headerNames","headerName","getResponseHeader","18","CacheEntry","fetching","_value","isUndefined","_entries","createCacheKey","entry","$fn","19","Logger","Query","SObject","QuickAction","Transport","Process","defaults","loginUrl","MAX_DML_COUNT","logLevel","clientId","clientSecret","redirectUri","proxyUrl","httpProxy","maxRequest","ProxyTransport","HttpProxyTransport","callOptions","refreshFn","oauthRefreshFn","_refreshDelegate","SessionRefreshDelegate","refreshToken","parseIdUrl","parseSignedRequest","sr","msg","json","formatDate","date","pad","number","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","idUrls","createUsernamePasswordRefreshFn","username","esc","serverUrl","sessionId","oauthToken","CanvasTransport","limitInfo","_sessionType","httpApi","apiUsage","used","limit","requestGet","requestPut","requestPatch","requestDelete","console","log","queryAll","scanAll","queryMore","locator","_ensureVersion","majorVersion","versions","_retrieveMany","_retrieveParallel","_retrieveSingle","fields","all","catch","allOrNone","field","_toRecordResult","content","_createMany","_createParallel","_createSingle","sobjectType","allowRecursive","rets1","rets2","_updateMany","_updateParallel","_updateSingle","noContentResponse","extId","_destroyMany","_destroyParallel","_destroySingle","sosl","identity","user_id","organization_id","authorize","requestToken","refresh_token","loginByOAuth2","loginBySoap","authenticate","soapLoginEndpoint","httpRequest","SOAPAction","faultstring","orgId","revoke","logoutByOAuth2","logoutBySoap","revokeToken","recent","isNumber","recentItems","updated","deleted","limits","quickActions","quickAction","actionName","20","VERSION","SfDate","./require","21","csvParse","csvParseSync","csvStringify","csvStringifySync","parseCSV","columns","toCSV","parseCSVStream","serializeCSVStream","csv-parse","csv-parse/lib/sync","csv-stringify","csv-stringify/lib/sync","22","literal","_literal","zeropad","toJSON","toDateLiteral","parseDate","yy","getFullYear","mm","getMonth","dd","getDate","dstr","toDateTimeLiteral","hh","mi","ss","dtstr","setUTCFullYear","setUTCDate","setUTCMonth","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","offset","setTime","setFullYear","setDate","setMonth","setHours","setMinutes","setSeconds","setMilliseconds","SfDateLiterals","YESTERDAY","TODAY","TOMORROW","LAST_WEEK","THIS_WEEK","NEXT_WEEK","LAST_MONTH","THIS_MONTH","NEXT_MONTH","LAST_90_DAYS","NEXT_90_DAYS","LAST_N_DAYS","NEXT_N_DAYS","NEXT_N_WEEKS","LAST_N_WEEKS","NEXT_N_MONTHS","LAST_N_MONTHS","THIS_QUARTER","LAST_QUARTER","NEXT_QUARTER","NEXT_N_QUARTERS","LAST_N_QUARTERS","THIS_YEAR","LAST_YEAR","NEXT_YEAR","NEXT_N_YEARS","LAST_N_YEARS","THIS_FISCAL_QUARTER","LAST_FISCAL_QUARTER","NEXT_FISCAL_QUARTER","NEXT_N_FISCAL_QUARTERS","LAST_N_FISCAL_QUARTERS","THIS_FISCAL_YEAR","LAST_FISCAL_YEAR","NEXT_FISCAL_YEAR","NEXT_N_FISCAL_YEARS","LAST_N_FISCAL_YEARS","createLiteralBuilder","num","23","_responseType","transport","_noContentResponse","parseJSON","parseXML","parseString","explicitArray","parseText","refreshDelegate","getRefreshDelegate","lastInstanceUrl","onResume","_refreshing","requestTime","responseTime","isErrorResponse","getError","getResponseBody","Authorization","getResponseContentType","parseResponseBody","parseBody","_refreshFn","since","_lastRefreshedAt","xml2js","24","LogLevels","INFO","_logLevel","DEBUG","WARN","ERROR","FATAL","level","createLoggerFunction","25","authzServiceUrl","tokenServiceUrl","revokeServiceUrl","client_id","redirect_uri","grant_type","client_secret","_postParams","token","26","ProcessRule","rule","approval","ApprovalProcess","rules","trigger","contextIds","approvals","req","_createRequest","actionType","contextId","comments","ApprovalProcessRequest","submit","approve","workitemId","27","Deferred","promise/lib/es6-extensions","28","SOQLBuilder","_soql","_locator","_config","select","includes","include","sort","_options","maxFetch","autoFetch","responseTarget","ResponseTargets","QueryResult","_executed","_finished","_chaining","_fields","where","conditions","skip","orderby","dir","childRelName","childConfig","table","childQuery","SubQuery","_children","crname","setResponseTarget","promiseCallback","Records","onRecord","removeListener","_execute","toSOQL","totalFetched","totalSize","SingleRecord","Count","numRecords","nextRecordsUrl","addListener","_expandFields","_parent","findRelationTable","expandAsteriskField","expandedFields","flatten","rname","ptable","describeCache","upperRname","childRelation","find","childRelationships","cr","relationshipName","childSObject","fpath","shift","rfield","referenceTo","fpaths","createSOQL","DEFAULT_BULK_THRESHOLD","thresholdNum","allowBulk","bulkThreshold","handleRecord","deleteBulk","handleEnd","mapping","updateStream","recordMapStream","updateBulk","parent","29","_path","defaultValues","30","Transform","PassThrough","CSV","_transform","converter","DataStreamConverters","serialize","convertRecordForSerialization","reduce","urec","precord","prec","pkey","createPipelineStream","s1","s2","pipeline","source","unpipe","dest","_parserStream","highWaterMark","ev","mapStream","noeval","mapped","prop","evalMapping","$0","v","isNull","filterStream","CSVStreamConverter","csv","31","RecordReference","blob","fieldName","32","required","./_required","33","_endpointUrl","_xmlns","lookupValue","propRegExps","toXML","attrs","elems","_createEnvelope","faultcode","SessionHeader","CallOptions","34","Record","layouts$","layouts","compactLayouts$","compactLayouts","approvalLayouts$","approvalLayouts","count","count()","bulkload","insertBulk","createBulk","upsertBulk","destroyBulk","deleteHardBulk","destroyHardBulk","layoutName","listviews","listview","ListView","35","createFieldsClause","cond","createConditionClause","createOrderByClause","childQueries","cquery","operator","depth","conds","op","createFieldExpression","expr","paren","opMap","=","$eq","!=","$ne",">","$gt","<","$lt",">=","$gte","<=","$lte","$like","$nlike","$in","$nin","$includes","$excludes","$exists","sfop","valueExpr","createValueExpression","escapeSOQLString","flag","36","jsonp","followAllRedirects","env","HTTP_PROXY","proxy","HTTP_TIMEOUT","LOCATION_BASE_URL","apiHost","normalizeApiHost","host","streamify","factory","_then","_getHttpRequestModule","JsonpTransport","_jsonpParam","_signedRequest","_proxyUrl","proxyParams","salesforceproxy-endpoint","_httpProxy","./browser/canvas","./browser/jsonp","37","rawAsap","freeTasks","pendingErrors","requestErrorThrow","makeRequestCallFromTimer","throwFirstError","asap","task","rawTask","RawTask","onerror","./raw","38","global","queue","requestFlush","capacity","currentIndex","scan","newLength","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","makeRequestCallFromMutationObserver","toggle","observer","observe","characterData","timeoutHandle","handleTimer","intervalHandle","39","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","charCodeAt","getLens","b64","validLen","lens","placeHoldersLen","_byteLength","tmp","arr","curByte","tripletToBase64","encodeChunk","uint8","output","extraBytes","parts","maxChunkLength","len2","40","41","base64","ieee754","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","typedArraySupport","foo","createBuffer","RangeError","buf","arg","encodingOrOffset","allocUnsafe","TypeError","isArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","alloc","checked","string","isEncoding","actual","fromArrayLike","array","byteOffset","isBuffer","copy","ArrayBuffer","isView","numberIsNaN","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","val","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","min","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","defineProperty","Symbol","species","configurable","enumerable","poolSize","allocUnsafeSlow","_isBuffer","compare","x","y","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","isFinite","_arr","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","out","toHex","bytes","checkOffset","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","INVALID_BASE64_RE","base64clean","trim","units","Infinity","leadSurrogate","byteArray","hi","lo","dst","base64-js","42","objectToString","isNullOrUndefined","isSymbol","isRegExp","re","isDate","isError","isPrimitive","../../is-buffer/index.js","43","Parser","StringDecoder","isObjLiteral","called","chunks","parser","objname","base","base1","base10","base11","base12","base13","base14","base15","base16","base2","base3","base4","base5","base6","base7","base8","base9","rowDelimiter","delimiter","quote","escape","comment","ltrim","rtrim","auto_parse","auto_parse_date","isNaN","relax","relax_column_count","skip_empty_lines","max_limit_on_data_read","skip_lines_with_empty_values","lines","skipped_line_count","empty_line_count","is_int","is_float","parseFloat","decoder","quoting","commenting","nextChar","closingQuote","rawBuf","rowDelimiterLength","__write","_flush","__push","lineAsColumns","ref","row","call_column_udf","line_length","to","raw","chars","areNextCharsDelimiter","areNextCharsRowDelimiters","char","escapeIsQuote","isDelimiter","isEscape","isNextCharAComment","isQuote","isRowDelimiter","isRowDelimiterLength","nextCharPos","ref1","ref2","ref3","ref4","ref5","remainingBuffer","wasCommenting","_this","some","rd","charAt","trimRight","_obj","_test","getPrototypeOf","string_decoder","44","./index","45","Stringifier","stringifier","opts","quoted","quotedEmpty","quotedString","eof","formatters","bool","countWriten","labels","preserve","_line","column","containsEscape","containsLinebreak","containsQuote","containsdelimiter","newLine","shouldQuote","lodash.get","46","47","objectCreate","objectCreatePolyfill","objectKeys","objectKeysPolyfill","Function","functionBindPolyfill","_events","hasOwnProperty","_eventsCount","_maxListeners","hasDefineProperty","defaultMaxListeners","$getMaxListeners","that","emitNone","isFn","listeners","arrayClone","emitOne","arg1","emitTwo","arg2","emitThree","arg3","emitMany","_addListener","prepend","existing","newListener","unshift","warned","emitter","warn","onceWrapper","fired","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","unwrapListeners","listenerCount","spliceOne","proto","F","setMaxListeners","getMaxListeners","er","doError","prependListener","prependOnceListener","position","originalListener","rawListeners","eventNames","Reflect","ownKeys","48","constants","Logging","Scheduler","wrapper","./mixins/logging","./protocol/client","./protocol/scheduler","./util/constants","49","errback","_resolve","_reject","reason","seconds","_timer","setDeferredStatus","../util/promise","50","LOG_LEVELS","fatal","writeLog","messageArgs","banner","klass","className","../util/to_json","51","Publisher","countListeners","eventType","unbind","tuple","../util/event_emitter","../util/extend","52","addTimeout","delay","_timeouts","removeTimeout","removeAllTimeouts","53","Class","Grammar","isUnused","HANDSHAKE","CONNECT","SUBSCRIBE","UNSUBSCRIBE","DISCONNECT","META","SERVICE","expand","segments","channels","unparse","isValid","CHANNEL_NAME","CHANNEL_PATTERN","isMeta","isService","isSubscribable","_channels","getKeys","remove","hasSubscription","names","subscription","distributeMessage","../mixins/publisher","../util/class","./grammar","54","URI","validateOptions","Deferrable","Dispatcher","Extensible","Publication","Subscription","UNCONNECTED","CONNECTING","CONNECTED","DISCONNECTED","RETRY","NONE","CONNECTION_TIMEOUT","DEFAULT_ENDPOINT","INTERVAL","endpoint","_messageId","_state","_responseCallbacks","_advice","_receiveMessage","Event","onbeforeunload","_disabled","disconnect","addWebsocketExtension","disable","feature","handshake","MANDATORY_CONNECTION_TYPES","_sendMessage","BAYEUX_VERSION","supportedConnectionTypes","successful","retry","connect","_connectRequest","connectionType","_cycleConnection","force","publish","publication","_generateMessageId","pipeThroughExtensions","sendMessage","_handleAdvice","_deliverMessage","../mixins/deferrable","../mixins/logging","../util/array","../util/browser","../util/constants","../util/uri","../util/validate_options","./channel","./dispatcher","./error","./extensible","./publication","./subscription","55","cookies","MAX_REQUEST_SIZE","DEFAULT_RETRY","UP","DOWN","_client","_alternates","endpoints","CookieJar","_envelopes","_scheduler","scheduler","transports","wsExtensions","_proxy","origin","exts","websocketExtensions","tls","ca","maxRequestSize","endpointFor","transportTypes","attempts","deadline","envelope","_sendEnvelope","timer","isDeliverable","handleError","getTimeout","handleResponse","reply","succeed","immediate","getInterval","../transport","../util/cookies","./scheduler","56","versionMismatch","conntypeMismatch","extMismatch","badRequest","clientUnknown","parameterMissing","channelForbidden","channelUnknown","channelInvalid","extUnknown","publishFailed","serverError","57","_extensions","added","removeExtension","removed","stage","58","59","60","made","61","_callback","_context","_cancelled","withChannel","_withChannel","cancel","62","register","./cors","./event_source","./jsonp","./web_socket","./xhr","63","CORS","encode","messages","xhrClass","XDomainRequest","cleanUp","_pending","onload","ontimeout","onprogress","replies","responseText","_receive","_handleError","isUsable","dispatcher","isSameOrigin","protocol","withCredentials","../util/set","64","copyObject","XHR","EventSource","_xhr","pathname","socket","onopen","_everConnected","onmessage","_socket","usable","sockets","eventsource","../util/copy_object","65","JSONP","_cbCount","head","getElementsByTagName","callbackName","getCallbackName","66","Cookie","Timeouts","DEFAULT_PORTS","http:","https:","ws:","wss:","MAX_DELAY","_outbox","_findProxy","_flushLargeBatch","_publish","_connectMessage","_makePromise","_requestPromise","_resolvePromise","last","_getCookies","getCookiesSync","cookieString","_storeCookies","setCookie","setCookieSync","upcase","REQUEST_METHOD","allowed","disabled","asyncEach","_transports","resume","connType","connEndpoint","../mixins/timeouts","../protocol/channel","67","ws","WebSocket","_unloaded","_createSocket","_ping","onclose","wasConnected","toArray","getSocketUrl","PROTOCOLS","websocket","../util/websocket","68","ActiveXObject","navigator","product","69","commonElement","lista","listb","needle","iterator","calls","looping","iterate","loop","70","_registry","eventName","attachEvent","_element","_type","_handler","detachEvent","onunload","71","methods","bridge","./extend","72","ID_LENGTH","JSONP_CALLBACK","CONNECTION_TYPES","73","74","75","xs","g","76","overwrite","77","PENDING","FULFILLED","REJECTED","RETURN","THROW","_onFulfilled","_onRejected","onFulfilled","onRejected","next","registerOnFulfilled","registerOnRejected","_reason","outcome","fulfill","promises","race","78","item","isEmpty","member","./class","79","80","isURI","uri","hostname","port","pairs","consume","pattern","decodeURIComponent","queryString","81","validKeys","./array","82","WS","MozWebSocket","protocols","83","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","floor","LN2","84","ctor","superCtor","TempCtor","85","isSlowBuffer","86","87","FUNC_ERROR_TEXT","HASH_UNDEFINED","INFINITY","funcTag","genTag","symbolTag","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reRegExpChar","reEscapeChar","reIsHostCtor","freeGlobal","freeSelf","root","getValue","isHostObject","uid","arrayProto","funcProto","objectProto","coreJsData","maskSrcKey","IE_PROTO","funcToString","reIsNative","getNative","nativeCreate","symbolProto","symbolToString","Hash","entries","hashClear","__data__","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","eq","baseGet","isKey","castPath","toKey","baseIsNative","isMasked","toSource","baseToString","stringToPath","isKeyable","func","memoize","resolver","memoized","other","tag","isObjectLike","defaultValue","88","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_PARTIAL_FLAG","MAX_SAFE_INTEGER","argsTag","arrayTag","asyncTag","boolTag","dateTag","errorTag","numberTag","objectTag","proxyTag","regexpTag","stringTag","reUnescapedHtml","reHasUnescapedHtml","reIsUint","htmlEscapes","&","\"","'","freeExports","nodeType","freeModule","arrayPush","baseFindIndex","predicate","fromIndex","fromRight","baseProperty","basePropertyOf","baseReduce","collection","iteratee","accumulator","initAccum","eachFunc","baseValues","baseMap","escapeHtmlChar","overArg","transform","idCounter","nativeObjectToString","oldDash","propertyIsEnumerable","nativeIsFinite","nativeKeys","nativeMax","lodash","LodashWrapper","baseCreate","chainAll","__wrapped__","__actions__","__chain__","assignValue","objValue","baseAssignValue","baseDelay","wait","baseEach","createBaseEach","baseForOwn","baseEvery","baseExtremum","comparator","current","computed","baseFilter","baseFlatten","isStrict","isFlattenable","baseFor","createBaseFor","baseFunctions","baseGetTag","baseGt","baseIsArguments","baseIsDate","baseIsEqual","bitmask","customizer","stack","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objStack","othStack","equalArrays","equalByTag","objIsWrapped","othIsWrapped","equalObjects","baseIsRegExp","baseIteratee","baseMatches","baseLt","isArrayLike","basePick","baseRest","setToString","overRest","baseSlice","copyArray","baseSome","baseWrapperValue","actions","action","thisArg","compareAscending","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","isNew","newValue","createAssigner","assigner","sources","iterable","keysFunc","createCtor","Ctor","thisBinding","createFind","findIndexFunc","createPartial","partials","isBind","argsIndex","argsLength","leftIndex","leftLength","isPartial","othLength","seen","compared","arrValue","othValue","othIndex","objProps","objLength","skipCtor","objCtor","othCtor","flatRest","isArguments","isIndex","isIterateeCall","nativeKeysIn","otherArgs","compact","Boolean","findIndex","toInteger","flattenDeep","isReflexive","chain","tap","interceptor","thru","wrapperValue","every","guard","sortBy","criteria","before","toNumber","negate","isLength","isEqual","assignIn","properties","keysIn","propsIndex","propsLength","pick","paths","matches","mixin","methodNames","isFunc","methodName","noConflict","uniqueId","each","first","chainName","retUnwrapped","valueOf","89","MultiStream","destroyed","_drained","_forwarding","_current","_toStreams2","toStreams2Obj","toStreams2Buf","_queue","_attachErrorListener","_next","toStreams2","_readableState","wrap","_forward","_gotNextStream","onReadable","onClose","ended","onEnd","onError","90","91","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","marker","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","Item","title","argv","off","binding","cwd","chdir","umask","92","LAST_ERROR","IS_ERROR","getThen","ex","tryCallOne","tryCallTwo","_40","_65","_55","_72","doResolve","safeThen","handle","Handler","_37","handleResolved","finale","_87","_61","asap/raw","93","TRUE","valuePromise","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","./core.js","94","sep","maxKeys","kstr","vstr","idx","95","stringifyPrimitive","ks","96","decode","./decode","./encode","97","./lib/_stream_duplex.js","98","pna","allowHalfOpen","onend","_writableState","onEndNT","_destroy","./_stream_readable","./_stream_writable","core-util-is","process-nextick-args","99","./_stream_transform","100","ReadableState","EElistenerCount","Stream","OurUint8Array","_uint8ArrayToBuffer","_isUint8Array","debugUtil","debuglog","BufferList","destroyImpl","kProxyEvents","isDuplex","readableObjectMode","hwm","readableHwm","readableHighWaterMark","defaultHwm","pipes","pipesCount","flowing","endEmitted","needReadable","emittedReadable","readableListening","resumeScheduled","defaultEncoding","awaitDrain","readingMore","readableAddChunk","addToFront","skipChunkCheck","onEofChunk","chunkInvalid","addChunk","maybeReadMore","needMoreData","emitReadable","_undestroy","undestroy","isPaused","setEncoding","MAX_HWM","computeNewHighWaterMark","howMuchToRead","emitReadable_","flow","maybeReadMore_","pipeOnDrain","nReadingNextTick","resume_","fromList","fromListPartial","hasStrings","copyFromBufferString","copyFromBuffer","nb","tail","endReadable","endReadableNT","nOrig","doRead","pipeOpts","endFn","stdout","stderr","onunpipe","unpipeInfo","hasUnpiped","ondrain","cleanedUp","onfinish","ondata","needDrain","increasedAwaitDrain","pause","dests","paused","_fromList","./_stream_duplex","./internal/streams/BufferList","./internal/streams/destroy","./internal/streams/stream","isarray","safe-buffer","string_decoder/","101","afterTransform","ts","_transformState","transforming","writecb","writechunk","rs","needTransform","writeencoding","prefinish","_this2","err2","102","setImmediate","CorkedRequest","finish","onCorkedFinish","asyncWrite","WritableState","internalUtil","deprecate","realHasInstance","nop","writableObjectMode","writableHwm","writableHighWaterMark","finalCalled","ending","finished","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","bufferedRequestCount","corkedRequestsFree","writev","_writev","final","_final","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","isBuf","newChunk","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","holder","allBuffers","callFinal","need","endWritable","corkReq","getBuffer","hasInstance","cork","uncork","setDefaultEncoding","timers","util-deprecate","103","_classCallCheck","Constructor","copyBuffer","104","readableDestroyed","writableDestroyed","emitErrorNT","105","106","./readable","107","./lib/_stream_passthrough.js","./lib/_stream_readable.js","./lib/_stream_transform.js","./lib/_stream_writable.js","108","109","110","copyProps","SafeBuffer","111","sax","strict","opt","SAXParser","SAXStream","createStream","MAX_BUFFER_LENGTH","buffers","clearBuffers","q","bufferCheckPosition","lowercase","lowercasetags","looseCase","tags","closedRoot","sawRoot","noscript","S","BEGIN","strictEntities","ENTITIES","XML_ENTITIES","attribList","ns","rootNS","trackPosition","checkBufferLength","maxAllowed","maxActual","closeText","emitNode","cdata","flushBuffers","EVENTS","streamWraps","_parser","me","_decoder","SD","CDATA","DOCTYPE","XML_NAMESPACE","XMLNS_NAMESPACE","xml","nameStart","nameBody","entityStart","entityBody","isWhitespace","isAttribEnd","isMatch","regex","notMatch","stringFromCharCode","fromCodePoint","STATE","BEGIN_WHITESPACE","TEXT","TEXT_ENTITY","OPEN_WAKA","SGML_DECL","SGML_DECL_QUOTED","DOCTYPE_QUOTED","DOCTYPE_DTD","DOCTYPE_DTD_QUOTED","COMMENT_STARTING","COMMENT","COMMENT_ENDING","COMMENT_ENDED","CDATA_ENDING","CDATA_ENDING_2","PROC_INST","PROC_INST_BODY","PROC_INST_ENDING","OPEN_TAG","OPEN_TAG_SLASH","ATTRIB","ATTRIB_NAME","ATTRIB_NAME_SAW_WHITE","ATTRIB_VALUE","ATTRIB_VALUE_QUOTED","ATTRIB_VALUE_CLOSED","ATTRIB_VALUE_UNQUOTED","ATTRIB_VALUE_ENTITY_Q","ATTRIB_VALUE_ENTITY_U","CLOSE_TAG","CLOSE_TAG_SAW_WHITE","SCRIPT","SCRIPT_ENDING","amp","gt","lt","quot","apos","AElig","Aacute","Acirc","Agrave","Aring","Atilde","Auml","Ccedil","ETH","Eacute","Ecirc","Egrave","Euml","Iacute","Icirc","Igrave","Iuml","Ntilde","Oacute","Ocirc","Ograve","Oslash","Otilde","Ouml","THORN","Uacute","Ucirc","Ugrave","Uuml","Yacute","aacute","acirc","aelig","agrave","aring","atilde","auml","ccedil","eacute","ecirc","egrave","eth","euml","iacute","icirc","igrave","iuml","ntilde","oacute","ocirc","ograve","oslash","otilde","ouml","szlig","thorn","uacute","ucirc","ugrave","uuml","yacute","yuml","reg","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","macr","deg","plusmn","sup1","sup2","sup3","acute","micro","para","middot","cedil","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","textNode","textopts","normalize","strictFail","newTag","tagName","qname","qualName","attrib","attribName","attribValue","qn","openTag","selfClosing","nv","isSelfClosing","closeTag","closeTo","parseEntity","entity","entityLC","numStr","beginWhiteSpace","startTagPosition","starti","sgmlDecl","procInstName","procInstBody","doctype","returnState","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","112","EE","_isStdio","didOnEnd","readable-stream/duplex.js","readable-stream/passthrough.js","readable-stream/readable.js","readable-stream/transform.js","readable-stream/writable.js","113","_normalizeEncoding","retried","normalizeEncoding","nenc","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckIncomplete","utf8CheckExtraBytes","utf8Text","total","utf8End","114","clearImmediate","immediateIds","nextImmediateId","Timeout","clearFn","_clearFn","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","process/browser.js","115","deprecated","trace","116","117","formatRegExp","format","objects","noDeprecation","throwDeprecation","traceDeprecation","debugEnviron","debugs","stylize","stylizeNoColor","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","styles","arrayToHash","recurseTimes","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","formatError","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","desc","getOwnPropertyDescriptor","prev","cur","ar","NODE_DEBUG","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","boolean","null","months","time","getHours","getMinutes","getSeconds","./support/isBuffer","118","stripBOM","119","builder","escapeCDATA","requiresCDATA","wrapCDATA","hasProp","Builder","buildObject","rootObj","attrkey","charkey","render","rootElement","rootName","child","txt","ele","up","att","xmldec","headless","allowSurrogateChars","renderOpts","./defaults","xmlbuilder","120","0.1","explicitCharkey","normalizeTags","ignoreAttrs","mergeAttrs","explicitRoot","validator","explicitChildren","childkey","charsAsChildren","includeWhiteChars","async","attrNameProcessors","attrValueProcessors","tagNameProcessors","valueProcessors","emptyTag","0.2","preserveChildrenOrder","standalone","pretty","indent","newline","chunkSize","121","bom","processItem","processors","__super__","superClass","reset","assignOrPush","processAsync","xmlnskey","saxParser","error1","errThrown","ontext","resultObject","EXPLICIT_CHARKEY","onopentag","processedKey","onclosetag","emptyStr","nodeName","objClone","old","xpath","charChild","#name","oncdata","./bom","./processors","122","prefixMatch","firstCharLowerCase","stripPrefix","parseNumbers","parseBooleans","123","ValidationError","./builder","./parser","124","isPlainObject","125","XMLAttribute","attName","attValue","writer","126","XMLNode","XMLCData","./XMLNode","127","XMLComment","128","XMLDTDAttList","elementName","attributeName","attributeType","defaultValueType","eleName","dtdAttType","dtdAttDefault","dtdAttList","129","XMLDTDElement","dtdElementValue","dtdElement","130","XMLDTDEntity","pe","pubID","sysID","dtdPubID","dtdSysID","nData","dtdNData","dtdEntityValue","dtdEntity","./Utility","131","XMLDTDNotation","dtdNotation","132","XMLDeclaration","xmlVersion","xmlEncoding","xmlStandalone","declaration","133","XMLDocType","documentObject","attList","pEntity","notation","docType","ent","pent","./XMLDTDAttList","./XMLDTDElement","./XMLDTDEntity","./XMLDTDNotation","134","XMLStringWriter","XMLStringifier","XMLDocument","isDocument","writerOptions","./XMLStringWriter","./XMLStringifier","135","XMLElement","XMLProcessingInstruction","XMLRaw","XMLText","XMLDocumentCB","onData","onDataCallback","onEndCallback","currentNode","currentLevel","openTags","documentStarted","documentCompleted","openCurrent","skipNullAttributes","instruction","insTarget","insValue","processingInstruction","rootNodeName","closeNode","openNode","isOpen","isClosed","nod","dat","com","ins","dec","dtd","./XMLAttribute","./XMLCData","./XMLComment","./XMLDeclaration","./XMLDocType","./XMLElement","./XMLProcessingInstruction","./XMLRaw","./XMLText","136","isRoot","rootObject","clonedSelf","clonedChild","137","childNode","lastChild","len1","ignoreDecorators","convertAttKey","separateArrayItems","convertTextKey","convertCDataKey","convertCommentKey","convertRawKey","convertPIKey","insertAfter","commentBefore","commentAfter","instructionBefore","instructionAfter","doc","importDocument","clonedRoot","importXMLBuilder","138","139","140","XMLWriterBase","XMLStreamWriter","isLastRootNode","endline","spacebeforeslash","allowEmpty","./XMLWriterBase","141","textispresent","textispresentwasset","newlinedefault","prettydefault","dontprettytextnodes","142","assertLegalChar","noDoubleEncoding","eleText","elEscape","attEscape","ampregex","143","144","ref6","145","begin","stringWriter","streamWriter","./XMLDocument","./XMLDocumentCB","./XMLStreamWriter","sfConn","loggedUserId","urlLogin","URLSearchParams","LOCATION","ROUTER","getLocation","history","globalHistory","popstateListener","replaceState","pushState","createHistory","initialPathname","createMemorySource","navigate","paramRe","startsWith","isSplat","segment","segmentize","stripSlashes","rankRoute","route","score","default","isRootSegment","isDynamic","SEGMENT_POINTS","routes","default_","uriPathname","uriSegments","isRootUri","ranked","rankRoutes","missed","routeSegments","routeSegment","uriSegment","dynamicMatch","addQuery","combinePaths","basepath","locationContext","routerContext","activeRoute","hasActiveRoute","routerBase","onMount","registerRoute","$base","matchingRoute","$location","unregisterRoute","bestMatch","$routes","routeParams","routeProps","onDestroy","$activeRoute","getProps","dispatch","isPartiallyCurrent","isCurrent","toPathname","toQuery","basePathname","toSegments","baseSegments","allSegments","ariaCurrent","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","shouldNavigate","preventDefault","shouldReplace","css","class","iterations","accessTokenValue","instanceUrlValue","Home","Login","Token","CreateSharedBill","currentUrl","swLocation","serviceWorker","registration"],"mappings":"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"}